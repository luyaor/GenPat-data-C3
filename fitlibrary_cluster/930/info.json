{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \tpublic void bindFirstRowToTarget(Row row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/function/CombinationTraverse.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-            Cell cell = row.elementAt(i);\r", "+            Cell cell = row.at(i);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void bindFirstRowToTarget(Row row, TestResults testResults)", "id": "01d79923d31002021b00aacfb08bdf12", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r     public void bindFirstRowToTarget(Row row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/function/CalculateTraverse.java", "methodNumberAfterChange": 5, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-            Cell cell = row.elementAt(i);\r", "+            Cell cell = row.at(i);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     public void bindFirstRowToTarget(Row row, TestResults testResults)", "id": "032a15e05a36b7de15545f8baa2888e9", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 21, "signatureBeforeChange": "\r     public To last()", "fileName": "src/fitlibrary/table/ParseNode.java", "methodNumberAfterChange": 21, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-        return elementAt(size()-1);\r", "+        return at(size()-1);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     public To last()", "id": "1301dc0358256956f26a1f2e1a3e46f1", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 9, "signatureBeforeChange": "\r     public String text(int i, VariableResolver resolver)", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 9, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-        return elementAt(i).text(resolver);\r", "+        return at(i).text(resolver);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     public String text(int i, VariableResolver resolver)", "id": "15454fc9ec8479640708bf1f2c1cc3de", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r     private void processRow(Row firstRow, int classColumn, Row row, TestResults testResults) throws Exception", "fileName": "src/fitlibraryGeneric/list/ListSetUpTraverse2.java", "methodNumberAfterChange": 4, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-                Cell cell = row.elementAt(i);\r", "+                Cell cell = row.at(i);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     private void processRow(Row firstRow, int classColumn, Row row, TestResults testResults) throws Exception", "id": "1864e8f2710201df7b5da5b4ffc6c154", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r     @Override\r \tpublic void error(TestResults testResults, Throwable e)", "fileName": "src/fitlibrary/table/TableOnParse.java", "methodNumberAfterChange": 8, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-        elementAt(firstErrorRow).error(testResults,e);\r", "+        at(firstErrorRow).error(testResults,e);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     @Override\r \tpublic void error(TestResults testResults, Throwable e)", "id": "1c694693a53222e1c1ed1a00f9f25dc6", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r \t@Test public void setColumnSpanWithOneCellWithNoColumnSpanSet()", "fileName": "test/fitlibrary/table/TestRowOnParse.java", "methodNumberAfterChange": 6, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tassertThat(row.elementAt(0).getColumnSpan(),is(4));\r", "+\t\tassertThat(row.at(0).getColumnSpan(),is(4));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Test public void setColumnSpanWithOneCellWithNoColumnSpanSet()", "id": "1cacb31e700405642923bae97b7fe7f8", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 18, "signatureBeforeChange": "\r \r     private Cell getCell(int tableNo, int rowNo, int cellNo)", "fileName": "test/fitlibrary/table/TestParseTables.java", "methodNumberAfterChange": 18, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-        return getRow(tableNo, rowNo).elementAt(cellNo);\r", "+        return getRow(tableNo, rowNo).at(cellNo);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \r     private Cell getCell(int tableNo, int rowNo, int cellNo)", "id": "1f0713bd8098b3cff3f048262286b685", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tpublic void runTable(Table table, ITableListener tableListener)", "fileName": "src/fitlibrary/object/DomainCheckTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-                Row row = table.elementAt(rowNo);\r", "+                Row row = table.at(rowNo);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void runTable(Table table, ITableListener tableListener)", "id": "1fe6bffae0c3a7edbe095531a364848e", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 10, "signatureBeforeChange": "\r    public void missing(TestResults testResults)", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 10, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-        elementAt(0).expectedElementMissing(testResults);\r", "+        at(0).expectedElementMissing(testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r    public void missing(TestResults testResults)", "id": "203d1edc229907313e17ed4e99ac5cee", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tprotected void addSurplusRows(Table table, Map<Object,Object> surplus,\r \t\t\tTestResults testResults)", "fileName": "src/fitlibrary/collection/map/MapTraverse.java", "methodNumberAfterChange": 5, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\t\trow.elementAt(0).actualElementMissing(testResults);\r", "+\t\t\t\trow.at(0).actualElementMissing(testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprotected void addSurplusRows(Table table, Map<Object,Object> surplus,\r \t\t\tTestResults testResults)", "id": "20cb79a9711683a59556f904d71d9af9", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \tprivate void body(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/function/RuleTable.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tRow row = table.elementAt(r);\r", "+\t\t\tRow row = table.at(r);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate void body(Table table, TestResults testResults)", "id": "258c3ccdf3873b3845f59fdcb55479a1", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t@Test\r \tpublic void textIsShown() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestShow.java", "methodNumberAfterChange": 0, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tallowing(initialRow).elementAt(0);will(returnValue(firstCell));\r", "+\t\t\tallowing(initialRow).at(0);will(returnValue(firstCell));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Test\r \tpublic void textIsShown() throws Exception", "id": "334e30fe4701986c95d10b9168fdc3e0", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 9, "signatureBeforeChange": "\r     public void testRow0Missing()", "fileName": "test/fitlibrary/table/TestParseTables.java", "methodNumberAfterChange": 9, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-        assertTrue(row0.elementAt(0).didFail());\r", "+        assertTrue(row0.at(0).didFail());\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     public void testRow0Missing()", "id": "3472a4670c4649f11743f8a4662eb05c", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t\tpublic SetExpectations(String eq) throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestSet.java", "methodNumberAfterChange": 0, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tallowing(initialRow).elementAt(0); will(returnValue(firstCell));\r", "+\t\t\tallowing(initialRow).at(0); will(returnValue(firstCell));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t\tpublic SetExpectations(String eq) throws Exception", "id": "39d879886f33ca277dfa2a485f3b3361", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \t@Test public void setColumnSpanWithNoCellsHadsOneCell()", "fileName": "test/fitlibrary/table/TestRowOnParse.java", "methodNumberAfterChange": 5, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tassertThat(row.elementAt(0).getColumnSpan(),is(4));\r", "+\t\tassertThat(row.at(0).getColumnSpan(),is(4));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Test public void setColumnSpanWithNoCellsHadsOneCell()", "id": "3a3eac05fbc502f426c5f27d547ca23b", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r     @Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/collection/map/MapSetUpTraverse.java", "methodNumberAfterChange": 2, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-    \t\t\tprocessRow(table.elementAt(rowNo), testResults);\r", "+    \t\t\tprocessRow(table.at(rowNo), testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     @Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "3aab1ab764bd77aa12d292110176f4dd", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \t\r \t@Test public void actionsAreDefinedThroughFileSystem() throws FitParseException", "fileName": "test/fitlibrary/traverse/workflow/definedAction/TestDefineActionsOnPage.java", "methodNumberAfterChange": 1, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tdefineActionsOnPage.interpretAfterFirstRow(tables.elementAt(0),TestResultsFactory.testResults());\r", "+\t\tdefineActionsOnPage.interpretAfterFirstRow(tables.at(0),TestResultsFactory.testResults());\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t\r \t@Test public void actionsAreDefinedThroughFileSystem() throws FitParseException", "id": "3b372aa4c79b6fb6107f917f96ab2734", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r     @Override\r \tpublic void pass(TestResults testResults)", "fileName": "src/fitlibrary/table/TableOnParse.java", "methodNumberAfterChange": 6, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-        elementAt(firstErrorRow).pass(testResults);\r", "+        at(firstErrorRow).pass(testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     @Override\r \tpublic void pass(TestResults testResults)", "id": "434c1db0a71d59b94c9eae821366b3e4", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t@Test\r \tpublic void tt() throws FitParseException", "fileName": "test/fitlibrary/xref/TestCrossReferenceFixture.java", "methodNumberAfterChange": 0, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\txref.interpretAfterFirstRow(tables.elementAt(0), TestResultsFactory.testResults());\r", "+\t\txref.interpretAfterFirstRow(tables.at(0), TestResultsFactory.testResults());\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Test\r \tpublic void tt() throws FitParseException", "id": "47d4793036c408cdaf4df2e8e0084da3", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 11, "signatureBeforeChange": "\r     private void collectCells(Row row, int step, TestResults testResults, boolean catchParseError) throws Exception", "fileName": "src/fitlibrary/closure/CalledMethodTarget.java", "methodNumberAfterChange": 11, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tCell cell = row.elementAt(argNo*step);\r", "+\t\t\tCell cell = row.at(argNo*step);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     private void collectCells(Row row, int step, TestResults testResults, boolean catchParseError) throws Exception", "id": "4a83266dd75e777b35b424ce3bb7b5fa", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r \r     public void testRow0()", "fileName": "test/fitlibrary/table/TestParseTables.java", "methodNumberAfterChange": 6, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-            row.elementAt(1);\r", "+            row.at(1);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \r     public void testRow0()", "id": "4df6253af471b29020eb839a88439b1d", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 13, "signatureBeforeChange": "\r     @SuppressWarnings(\"unused\")\r     private MethodTarget[] bindGettersForOneElement(Row row, TestResults testResults, TypedObject typedObject)", "fileName": "src/fitlibrary/collection/CollectionTraverse.java", "methodNumberAfterChange": 13, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-            Cell cell = row.elementAt(i);\r", "+            Cell cell = row.at(i);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     @SuppressWarnings(\"unused\")\r     private MethodTarget[] bindGettersForOneElement(Row row, TestResults testResults, TypedObject typedObject)", "id": "4e0c9c3361e5f0b26b8b0ff66ec87c8d", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r     private Object createElement(Row firstRow, int classColumn, Row row, TestResults testResults) throws Exception", "fileName": "src/fitlibraryGeneric/list/ListSetUpTraverse2.java", "methodNumberAfterChange": 5, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-    \t\trow.elementAt(0).error(testResults, e);\r", "+    \t\trow.at(0).error(testResults, e);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     private Object createElement(Row firstRow, int classColumn, Row row, TestResults testResults) throws Exception", "id": "4e9a0f0b057ef6f8357f33c06f41af59", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 31, "signatureBeforeChange": "\r     public Table getEmbeddedTable()", "fileName": "src/fitlibrary/table/CellOnParse.java", "methodNumberAfterChange": 32, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\treturn tables.elementAt(0);\r", "+\t\treturn tables.at(0);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     public Table getEmbeddedTable()", "id": "521da01cc74812fda9a225f341e26483", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t\tpublic SetExpectations(String eq) throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestSetSymbolNamed.java", "methodNumberAfterChange": 0, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tallowing(initialRow).elementAt(0); will(returnValue(firstCell));\r", "+\t\t\tallowing(initialRow).at(0); will(returnValue(firstCell));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t\tpublic SetExpectations(String eq) throws Exception", "id": "54719fe27107f8709412e42e9c378925", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t\tpublic NotExpectations() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestNot.java", "methodNumberAfterChange": 0, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tallowing(initialRow).elementAt(0);will(returnValue(firstCell));\r", "+\t\t\tallowing(initialRow).at(0);will(returnValue(firstCell));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t\tpublic NotExpectations() throws Exception", "id": "57f861f990032c2fe3ea4f5f5fa1c089", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tpublic void analyse()", "fileName": "src/fitlibrary/traverse/workflow/PlainText.java", "methodNumberAfterChange": 1, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tString textCall = row.elementAt(1).fullText();\r", "+\t\tString textCall = row.at(1).fullText();\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void analyse()", "id": "5abdf341545a941ad13ac4bb8de68728", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tpublic Object interpretWithSetUp(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/function/FunctionTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\ttable.elementAt(0).error(testResults,e);\r", "+\t\t\ttable.at(0).error(testResults,e);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic Object interpretWithSetUp(Table table, TestResults testResults)", "id": "5b08b3535901ec696c058337a34c3204", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 20, "signatureBeforeChange": "\r \tpublic Cell lastCell()", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 20, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\treturn elementAt(size()-1);\r", "+\t\treturn at(size()-1);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic Cell lastCell()", "id": "60f69de06a8b2287632ea74d6b5815f2", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t\r \t@Test public void elementAddedToEmptyCell()", "fileName": "test/fitlibrary/table/TestCell.java", "methodNumberAfterChange": 43, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tassertThat(cellA.elementAt(0),is(table0));\r", "+\t\tassertThat(cellA.at(0),is(table0));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t\r \t\r \t@Test public void elementAddedToEmptyCell()", "id": "63aceb54e1a23e8d1f052c1fdabf8965", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 74, "signatureBeforeChange": "\r \tpublic void showDot(Row row, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 72, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t    Object result = callMethodInRow(row,testResults, true,row.elementAt(0));\r", "+\t\t    Object result = callMethodInRow(row,testResults, true,row.at(0));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void showDot(Row row, TestResults testResults) throws Exception", "id": "68dd5f1124a3b5bf33ace98dc6208664", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tpublic void analyseAndReplaceRowsIn(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/PlainTextAnalyser.java", "methodNumberAfterChange": 1, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tRow newRow = analyse(table.elementAt(r), testResults);\r", "+\t\t\tRow newRow = analyse(table.at(r), testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void analyseAndReplaceRowsIn(Table table, TestResults testResults)", "id": "6a0a1035e9adcb98e27a27f56d01a382", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \t@Test public void actionsAreDefinedThroughFileSystemExample2() throws FitParseException", "fileName": "test/fitlibrary/traverse/workflow/definedAction/TestDefineActionsOnPage.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tdefineActionsOnPage.interpretAfterFirstRow(tables.elementAt(0), TestResultsFactory.testResults());\r", "+\t\tdefineActionsOnPage.interpretAfterFirstRow(tables.at(0), TestResultsFactory.testResults());\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Test public void actionsAreDefinedThroughFileSystemExample2() throws FitParseException", "id": "6c0b9e3d376e4cfd5c302d1b73abfaad", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/function/RuleTable.java", "methodNumberAfterChange": 1, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\ttable.elementAt(1).error(testResults, e);\r", "+\t\t\ttable.at(1).error(testResults, e);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "7142db7bdb4e519906480a34dad848db", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tprivate int findClassColumn(Row row)", "fileName": "src/fitlibraryGeneric/list/ListSetUpTraverse2.java", "methodNumberAfterChange": 2, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-            Cell cell = row.elementAt(cellNo);\r", "+            Cell cell = row.at(cellNo);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate int findClassColumn(Row row)", "id": "727fffd63e7199666f37a4321c03c129", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t@Test\r \tpublic void worksOK() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestCheck.java", "methodNumberAfterChange": 0, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tallowing(initialRow).elementAt(0);will(returnValue(firstCell));\r", "+\t\t\tallowing(initialRow).at(0);will(returnValue(firstCell));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Test\r \tpublic void worksOK() throws Exception", "id": "772707ff503e675295cf997b971ce3e3", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t@Test\r \tpublic void textIsShownEscaped() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestShowEscaped.java", "methodNumberAfterChange": 0, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tallowing(initialRow).elementAt(0);will(returnValue(firstCell));\r", "+\t\t\tallowing(initialRow).at(0);will(returnValue(firstCell));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Test\r \tpublic void textIsShownEscaped() throws Exception", "id": "7a61eeb8b7e2df8b494229e8a71d22d0", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tpublic Object interpretWholeTable(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/DoTraverseInterpreter.java", "methodNumberAfterChange": 5, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tTypedObject typedResult = interpretRow(table.elementAt(0),testResults,fixtureByName);\r", "+\t\t\tTypedObject typedResult = interpretRow(table.at(0),testResults,fixtureByName);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic Object interpretWholeTable(Table table, TestResults testResults)", "id": "814ede3959f7d7bed70b31fd2185010b", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \t@Test public void setColumnSpanWithOneCellWithColumnSpanSet()", "fileName": "test/fitlibrary/table/TestRowOnParse.java", "methodNumberAfterChange": 7, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tassertThat(row.elementAt(0).getColumnSpan(),is(4));\r", "+\t\tassertThat(row.at(0).getColumnSpan(),is(4));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Test public void setColumnSpanWithOneCellWithColumnSpanSet()", "id": "86966910f58f3f718f5580fca2bb7dda", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 19, "signatureBeforeChange": "\r \tpublic void setIsHidden()", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 19, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\telementAt(i).setIsHidden();\r", "+\t\t\tat(i).setIsHidden();\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void setIsHidden()", "id": "892674f5febe87a83285c387226360eb", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 13, "signatureBeforeChange": "\r \tprivate void setFirstRowIsHidden()", "fileName": "src/fitlibrary/table/TableOnParse.java", "methodNumberAfterChange": 13, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\telementAt(0).setIsHidden();\r", "+\t\tat(0).setIsHidden();\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate void setFirstRowIsHidden()", "id": "8e7acbb7a66b920baa0831e54047e2dc", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r     @Override\r \tpublic void error(TestResults testResults, Throwable throwable)", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 7, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-        \telementAt(0).error(testResults,e);\r", "+        \tat(0).error(testResults,e);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     @Override\r \tpublic void error(TestResults testResults, Throwable throwable)", "id": "97270b3e63e5cd0b3751b0ee2766e2ec", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/object/DomainObjectSetUpTraverse.java", "methodNumberAfterChange": 2, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tprocessRow(table.elementAt(rowNo),testResults);\r", "+\t\t\tprocessRow(table.at(rowNo),testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "9a37bc681000477c3e1313aae90b1fdd", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tprivate List<MethodTarget[]> matchOnColumn(final Row row, List<MethodTarget[]> theActuals, final int column, TestResults testResults)", "fileName": "src/fitlibrary/collection/set/SetTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-        final Cell cell = row.elementAt(column);\r", "+        final Cell cell = row.at(column);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate List<MethodTarget[]> matchOnColumn(final Row row, List<MethodTarget[]> theActuals, final int column, TestResults testResults)", "id": "9aa76c4bebff382513d8742042f2a216", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tprivate void processRow(Row labelRow, Row row, Map<String, Object> map,\r \t\t\tTestResults testResults)", "fileName": "src/fitlibrary/collection/map/ListOfMapsTraverse.java", "methodNumberAfterChange": 2, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tCell cell = row.elementAt(c);\r", "+\t\t\tCell cell = row.at(c);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate void processRow(Row labelRow, Row row, Map<String, Object> map,\r \t\t\tTestResults testResults)", "id": "9b3feba14a954f5f9af95495a105b891", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r     public Object interpretReference(Table table, TestResults testResults) throws Exception", "fileName": "src/fitlibraryGeneric/traverse/ReferenceTraverse.java", "methodNumberAfterChange": 5, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-        return getObject(table.elementAt(0),1,getSystemUnderTest(),testResults);\r", "+        return getObject(table.at(0),1,getSystemUnderTest(),testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     public Object interpretReference(Table table, TestResults testResults) throws Exception", "id": "a5f0f372df14e6bb985e108c8ac43a51", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t@Test\r \tpublic void textIsShown() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestShowAfter.java", "methodNumberAfterChange": 0, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tallowing(initialRow).elementAt(0);will(returnValue(firstCell));\r", "+\t\t\tallowing(initialRow).at(0);will(returnValue(firstCell));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Test\r \tpublic void textIsShown() throws Exception", "id": "a8c9dc34a8838b6679fc465a7b9be934", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t\tpublic EnsureExpectations() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestEnsure.java", "methodNumberAfterChange": 0, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tallowing(initialRow).elementAt(0);will(returnValue(firstCell));\r", "+\t\t\tallowing(initialRow).at(0);will(returnValue(firstCell));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t\tpublic EnsureExpectations() throws Exception", "id": "aa541667e9bfbdbd20496fba907ff4ea", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tprivate void error(String message)", "fileName": "src/fitlibrary/traverse/workflow/PlainText.java", "methodNumberAfterChange": 4, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\trow.elementAt(0).error(testResults, message);\r", "+\t\trow.at(0).error(testResults, message);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate void error(String message)", "id": "b0422b057042b5e93361fc3365aa5607", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t@Test\r \tpublic void textIsLogged() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestLog.java", "methodNumberAfterChange": 0, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tallowing(initialRow).elementAt(0);will(returnValue(firstCell));\r", "+\t\t\tallowing(initialRow).at(0);will(returnValue(firstCell));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Test\r \tpublic void textIsLogged() throws Exception", "id": "b907cd18ed26a1ee382bfca8caf9289c", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r     public void runTable(Table table, ITableListener tableListener)", "fileName": "src/fitlibrary/object/DomainInjectionTraverse.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-        \t\tprocessRow(table.elementAt(rowNo),tableListener.getTestResults());\r", "+        \t\tprocessRow(table.at(rowNo),tableListener.getTestResults());\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     public void runTable(Table table, ITableListener tableListener)", "id": "bac07fa0c6512c44a504bf866db2f2d4", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tprivate void processRow(Row row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/SetVariableTraverse.java", "methodNumberAfterChange": 1, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\trow.elementAt(0).error(testResults, new FitLibraryException(\"Must be two cells\"));\r", "+\t\t\trow.at(0).error(testResults, new FitLibraryException(\"Must be two cells\"));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate void processRow(Row row, TestResults testResults)", "id": "bb8766b1ae8598b696de7e3493d7218c", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 11, "signatureBeforeChange": "\r     public void testRow0Exception()", "fileName": "test/fitlibrary/table/TestParseTables.java", "methodNumberAfterChange": 11, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-        assertTrue(row0.elementAt(0).hadError());\r", "+        assertTrue(row0.at(0).hadError());\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     public void testRow0Exception()", "id": "c0531684046c34ac4d817d6b20015874", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r     public void processRow(Row row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/function/CalculateTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-            targets[i].invokeAndCheck(row,row.elementAt(i+argCount+1),testResults,true);\r", "+            targets[i].invokeAndCheck(row,row.at(i+argCount+1),testResults,true);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     public void processRow(Row row, TestResults testResults)", "id": "c516e72bc39ed32381fc145d3ab8dabb", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/SetVariableTraverse.java", "methodNumberAfterChange": 0, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\t\tprocessRow(table.elementAt(rowNo), testResults);\r", "+\t\t\t\tprocessRow(table.at(rowNo), testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "c55546f64ad738292839dc586a9cc517", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 13, "signatureBeforeChange": "\r \tpublic static boolean hasObjectFactoryMethodFor(Table table, Evaluator evaluator)", "fileName": "src/fitlibrary/collection/CollectionSetUpTraverse.java", "methodNumberAfterChange": 13, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tfindMethodTarget(table.elementAt(0),evaluator,false);\r", "+\t\t\tfindMethodTarget(table.at(0),evaluator,false);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic static boolean hasObjectFactoryMethodFor(Table table, Evaluator evaluator)", "id": "c8193a63d26df74e0a7e13d4a5f7c065", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 24, "signatureBeforeChange": "\r \tpublic Row deepCopy()", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 24, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\trowCopy.add(TableFactory.cell(elementAt(i).fullText()));\r", "+\t\t\trowCopy.add(TableFactory.cell(at(i).fullText()));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic Row deepCopy()", "id": "c85a31e02fac21e915d35ccb066b82dd", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 23, "signatureBeforeChange": "\r \tpublic void passKeywords(TestResults testResults)", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 23, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\telementAt(i).pass(testResults);\r", "+\t\t\tat(i).pass(testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void passKeywords(TestResults testResults)", "id": "cdc96531777781afd6528c80d8ad49e2", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/DoTraverseInterpreter.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tRow row = table.elementAt(rowNo);\r", "+\t\t\tRow row = table.at(rowNo);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "d2a216573fb8703ad7d51fdc4c49c8d2", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretInFlow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/collection/CollectionSetUpTraverse.java", "methodNumberAfterChange": 5, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\ttable.elementAt(rowNo).error(testResults,e);\r", "+\t\t\ttable.at(rowNo).error(testResults,e);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretInFlow(Table table, TestResults testResults)", "id": "d8983139b01a60934088b649a07b8f51", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r \tprivate List<Object> actualArgs(Row row, List<Object> result)", "fileName": "src/fitlibrary/traverse/workflow/caller/DefinedActionCaller.java", "methodNumberAfterChange": 6, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tCell cell = row.elementAt(i);\r", "+\t\t\tCell cell = row.at(i);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate List<Object> actualArgs(Row row, List<Object> result)", "id": "d8d307226ed356b530f900201c0fd2d4", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/DefaultPackages.java", "methodNumberAfterChange": 0, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tCreateFromClassNameCaller.addDefaultPackage(table.elementAt(r).text(0, this));\r", "+\t\t\tCreateFromClassNameCaller.addDefaultPackage(table.at(r).text(0, this));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "dbbd3731021bd314a30ff52a24e466c3", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \tpublic void specialAction(Row row, TestResults testResults)", "fileName": "src/fitlibrary/specify/DoFixtureFlowUnderTest.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tCell cell = row.elementAt(1);\r", "+\t\tCell cell = row.at(1);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void specialAction(Row row, TestResults testResults)", "id": "dda9332f008f13853f4bda0e3d44991e", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r     public void ignore(TestResults testResults)", "fileName": "src/fitlibrary/table/TableOnParse.java", "methodNumberAfterChange": 7, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-        elementAt(firstErrorRow).ignore(testResults);\r", "+        at(firstErrorRow).ignore(testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     public void ignore(TestResults testResults)", "id": "e0622fba95f42d607731c108922c63c3", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 34, "signatureBeforeChange": "\r \t@Override\r \tpublic Iterator<Cell> iterator()", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 34, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tlist.add(elementAt(i));\r", "+\t\t\tlist.add(at(i));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic Iterator<Cell> iterator()", "id": "e24dc744a9034f731b274989d2572290", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \t@Override\r \tpublic TypedObject run(Row row, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/caller/DoActionCaller.java", "methodNumberAfterChange": 2, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\t\trow.elementAt(0).error(testResults);\r", "+\t\t\t\trow.at(0).error(testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic TypedObject run(Row row, TestResults testResults) throws Exception", "id": "e76e1255d9b60e0c8b7fda22effbe059", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 30, "signatureBeforeChange": "\r \tpublic int getColumnSpan()", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 30, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tcol += elementAt(i).getColumnSpan();\r", "+\t\t\tcol += at(i).getColumnSpan();\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic int getColumnSpan()", "id": "e80fea01b745b3adea78cbc63556c48d", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 10, "signatureBeforeChange": "\r     public void testRow0Ignored()", "fileName": "test/fitlibrary/table/TestParseTables.java", "methodNumberAfterChange": 10, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-        assertTrue(row0.elementAt(0).wasIgnored());\r", "+        assertTrue(row0.at(0).wasIgnored());\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     public void testRow0Ignored()", "id": "ea32c5ddff320a6a98e654a8c9fcef3b", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 17, "signatureBeforeChange": "\r \tprivate static void addSurplusRows(Table table, List<MethodTarget[]> surplusBindings,\r \t\t\tTestResults testResults)", "fileName": "src/fitlibrary/collection/CollectionTraverse.java", "methodNumberAfterChange": 17, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-            row.elementAt(0).actualElementMissing(testResults);\r", "+            row.at(0).actualElementMissing(testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate static void addSurplusRows(Table table, List<MethodTarget[]> surplusBindings,\r \t\t\tTestResults testResults)", "id": "ef044199dc05bd317a68bcc653afcbbe", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \tprivate void xref(String pageName, Tables tables) throws FitParseException, InterruptedException, IOException", "fileName": "src/fitlibrary/xref/CrossReferenceFixture.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\t\tString action = actionOf(table.elementAt(rowNo));\r", "+\t\t\t\tString action = actionOf(table.at(rowNo));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate void xref(String pageName, Tables tables) throws FitParseException, InterruptedException, IOException", "id": "f47e7025ba69b15958c9c6ba62afde20", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tprivate void row(TestResults testResults, Row row) throws Exception", "fileName": "src/fitlibrary/traverse/function/RuleTable.java", "methodNumberAfterChange": 4, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tCell cell = row.elementAt(i);\r", "+\t\t\tCell cell = row.at(i);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate void row(TestResults testResults, Row row) throws Exception", "id": "f7066d9249c08b7f6065a0e01522b10f", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 55, "signatureBeforeChange": "\r \tprivate Cell operatorCell(Row row)", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 53, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\treturn row.elementAt(row.size()-2);\r", "+\t\treturn row.at(row.size()-2);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate Cell operatorCell(Row row)", "id": "f7f3e60e4c3bbffc8addd4ab999aeda5", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tprivate void header(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/function/RuleTable.java", "methodNumberAfterChange": 2, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tRow headerRow = table.elementAt(1);\r", "+\t\tRow headerRow = table.at(1);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate void header(Table table, TestResults testResults)", "id": "fd4e49e400bcbab048bbc0e265254a42", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/object/DomainObjectCheckTraverse.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tinterpret(table.elementAt(rowNo),testResults);\r", "+\t\t\tinterpret(table.at(rowNo),testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "fdbda05bf21fd0498780403474f864e3", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 17, "signatureBeforeChange": "\r \tpublic void ignore(TestResults testResults)", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 17, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\telementAt(i).ignore(testResults);\r", "+\t\t\tat(i).ignore(testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void ignore(TestResults testResults)", "id": "ffcd6341c1f39f1bef13e6b56a18f151", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "3f28a9739ae0151c55b7447d26daee55", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"]}