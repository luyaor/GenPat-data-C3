{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tprivate void processPagesAsFiles(String pageName) throws Exception", "fileName": "src/fitlibrary/definedAction/DefineActionsOnPage.java", "methodNumberAfterChange": 3, "commitBeforeChange": "20ec9bd9ffdef40eb6a72b0298d491ae8860b4a7", "diff": ["-\t\tString fullPageName = \"FitNesseRoot/\"+pageName.replaceAll(\"\\\\.\",\"/\");\r", "+\t\tString fullPageName = rootLocation+\"/\"+pageName.replaceAll(\"\\\\.\",\"/\");\r", "-\t\t\tString fileName = file.getAbsolutePath().replaceAll(\"/\",\".\").replaceAll(\"\\\\\\\\\",\".\");\r", "-\t\t\ttry\r", "-\t\t\t{\r", "-\t\t\t\tif (html.contains(\"<table\"))\r", "-\t\t\t\t\tparseDefinitions(new Tables(new Parse(html)),determineClassName(\"\",fileName),file.getAbsolutePath());\r", "-\t\t\t} catch (Exception e)\r", "-\t\t\t{\r", "-//\t\t\t\tSystem.err.println(\"\\n\\n----------------DefineActionsOnPage error with : \"+fileName+\"\\n\\n\");\r", "+\t\t\ttry {\r", "+\t\t\t\tif (html.contains(\"<table\")) {\r", "+\t\t\t\t\tString fileName = file.getAbsolutePath().replaceAll(\"/\",\".\").replaceAll(\"\\\\\\\\\",\".\");\r", "+\t\t\t\t\tparseDefinitions(new Tables(new Parse(html)),determineClassName(\"\",fileName),fileToPageName(file));\r", "+\t\t\t\t}\r", "+\t\t\t} catch (Exception e) {\r"], "commitAfterChange": "1246b979733b15a96e4e63b0a8e64ace5c8b7841", "signatureAfterChange": "\r \tprivate void processPagesAsFiles(String pageName) throws Exception", "id": "1f66537d116ac8e318f470c150efe100", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 10, "signatureBeforeChange": "\r     public Object invokeForSpecial(Row row, TestResults testResults, boolean catchParseError, Cell operatorCell) throws Exception", "fileName": "src/fitlibrary/closure/CalledMethodTarget.java", "methodNumberAfterChange": 11, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\t\t\tThrowable embedded = e.getTargetException();\r", "+\t\t\tThrowable embedded = PlugBoard.exceptionHandling.unwrapThrowable(e);\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r     public Object invokeForSpecial(Row row, TestResults testResults, boolean catchParseError, Cell operatorCell) throws Exception", "id": "26a7ab8818ddf122e08829b9f74a40a8", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "30c8dbcc922b894d7cb2c3cb19da3ba9", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"]}