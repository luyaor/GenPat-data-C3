{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r \tpublic Closure findMethodClosure(String name, int argCount,\r \t\t\tboolean includeSut)", "fileName": "src/fitlibrary/typed/NonGenericTypedObject.java", "methodNumberAfterChange": 6, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["+\tprivate Option<Closure> new_findMethodClosure(String name, int argCount) {\r", "+\t\tClosure methodClosure = lookupClosure.findMethodClosure(this,name, argCount);\r", "+\t\t\treturn None.none();\r", "+\t\treturn new Some<Closure>(methodClosure);\r", "-\tpublic Closure findMethodClosure(String name, int argCount,\r", "-\t\t\tboolean includeSut) {\r", "-\t\tif (subject == null)\r", "-\t\t\treturn null;\r", "-\t\tClosure methodClosure = PlugBoard.lookupClosure.findMethodClosure(this,\r", "-\t\t\t\tname, argCount);\r", "-\t\tif (methodClosure == null && subject instanceof Evaluator) {\r", "-\t\t\tEvaluator evaluator = (Evaluator) subject;\r", "-\t\t\tObject sut = evaluator.getSystemUnderTest();\r", "-\t\t\tif (sut != null && (includeSut || sut instanceof DomainAdapter))\r", "-\t\t\t\tmethodClosure = evaluator.getTypedSystemUnderTest()\r", "-\t\t\t\t\t\t.findMethodClosure(name, argCount, includeSut);\r", "-\t\t}\r", "-\t\tif (methodClosure == null && subject instanceof DomainAdapter) {\r", "-\t\t\tDomainAdapter domainAdapter = (DomainAdapter) subject;\r", "-\t\t\tObject nestedSystemUnderTest = domainAdapter.getSystemUnderTest();\r", "-\t\t\tif (nestedSystemUnderTest != null\r", "-\t\t\t\t\t&& (includeSut || nestedSystemUnderTest instanceof DomainAdapter))\r", "-\t\t\t\treturn asTypedObject(nestedSystemUnderTest).findMethodClosure(\r", "-\t\t\t\t\t\tname, argCount, includeSut);\r", "-\t\t}\r", "-\t\treturn methodClosure;\r", "-\t}\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \tprivate Option<Closure> new_findMethodClosure(String name, int argCount)", "id": "929920fd6baad6e29025f7fb32a23295", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \tpublic void findMethodsFromPlainText(String textCall,\r \t\t\tList<ValidCall> results)", "fileName": "src/fitlibrary/typed/NonGenericTypedObject.java", "methodNumberAfterChange": 9, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\tpublic void findMethodsFromPlainText(String textCall,\r", "-\t\t\tList<ValidCall> results) {\r", "-\t\tif (subject == null)\r", "-\t\t\treturn;\r", "+\t}\r", "+\tpublic void findMethodsFromPlainText(String textCall, List<ValidCall> results) {\r", "-\t\tint size = results.size();\r", "-\t\t\t\t\t&& !PlugBoard.lookupClosure.fitLibrarySystemMethod(method,\r", "-\t\t\t\t\t\t\targCount, subject)) {\r", "-\t\t\t\tValidCall.parseAction(words, method.getName(), argCount,\r", "-\t\t\t\t\t\tresults);\r", "+\t\t\t\t\t&& !PlugBoard.lookupClosure.fitLibrarySystemMethod(method,argCount, subject)) {\r", "+\t\t\t\tValidCall.parseAction(words, method.getName(), argCount,results);\r", "-\t\tif (results.size() == size && subject instanceof DomainAdapter) {\r", "-\t\t\tDomainAdapter domainAdapter = (DomainAdapter) subject;\r", "-\t\t\tObject nestedSystemUnderTest = domainAdapter.getSystemUnderTest();\r", "-\t\t\tif (nestedSystemUnderTest != null)\r", "-\t\t\t\tasTypedObject(nestedSystemUnderTest).findMethodsFromPlainText(\r", "-\t\t\t\t\t\ttextCall, results);\r", "-\t\t}\r", "-\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \tpublic void findMethodsFromPlainText(String textCall, List<ValidCall> results)", "id": "ea55dbabf8281062a593ea500affd6a3", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "5bc96e6909ea62cbb1a419f74aa029c8", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"]}