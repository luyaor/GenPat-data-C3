{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 16, "signatureBeforeChange": "\r \tprivate void expectTwoRowsInOneTableAndOneInAnother()", "fileName": "test/fitlibrary/flow/TestDoFlow.java", "methodNumberAfterChange": 16, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tallowing(tables).elementAt(0); will(returnValue(table1));\r", "-\t\t\tallowing(tables).elementAt(1); will(returnValue(table1));\r", "+\t\t\tallowing(tables).at(0); will(returnValue(table1));\r", "+\t\t\tallowing(tables).at(1); will(returnValue(table1));\r", "-\t\t\tallowing(table1).elementAt(0); will(returnValue(row1));\r", "-\t\t\tallowing(table1).elementAt(1); will(returnValue(row2));\r", "-\t\t\tallowing(row1).elementAt(0); will(returnValue(cell1));\r", "+\t\t\tallowing(table1).at(0); will(returnValue(row1));\r", "+\t\t\tallowing(table1).at(1); will(returnValue(row2));\r", "+\t\t\tallowing(row1).at(0); will(returnValue(cell1));\r", "-\t\t\tallowing(row2).elementAt(0); will(returnValue(cell1));\r", "+\t\t\tallowing(row2).at(0); will(returnValue(cell1));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate void expectTwoRowsInOneTableAndOneInAnother()", "id": "a732d676bf4516c1023a7fe608e0f147", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 16, "signatureBeforeChange": "\r \tprivate void expectTwoRowsInOneTableAndOneInAnother()", "fileName": "test/fitlibrary/flow/TestDoFlow.java", "methodNumberAfterChange": 16, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tallowing(tables).table(0); will(returnValue(table1));\r", "-\t\t\tallowing(tables).table(1); will(returnValue(table1));\r", "+\t\t\tallowing(tables).elementAt(0); will(returnValue(table1));\r", "+\t\t\tallowing(tables).elementAt(1); will(returnValue(table1));\r", "-\t\t\tallowing(table1).row(0); will(returnValue(row1));\r", "-\t\t\tallowing(table1).row(1); will(returnValue(row2));\r", "-\t\t\tallowing(row1).cell(0); will(returnValue(cell1));\r", "+\t\t\tallowing(table1).elementAt(0); will(returnValue(row1));\r", "+\t\t\tallowing(table1).elementAt(1); will(returnValue(row2));\r", "+\t\t\tallowing(row1).elementAt(0); will(returnValue(cell1));\r", "-\t\t\tallowing(row2).cell(0); will(returnValue(cell1));\r", "+\t\t\tallowing(row2).elementAt(0); will(returnValue(cell1));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprivate void expectTwoRowsInOneTableAndOneInAnother()", "id": "d77e9e14275906ce971d1cab7c2942f7", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "1ad065b333882609c1f5ed54e8e72f2c", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"]}