{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 46, "signatureBeforeChange": "     public String toString()", "fileName": "src/fitlibrary/diff/Diff_match_patch.java", "methodNumberAfterChange": 47, "commitBeforeChange": "ab046d65905e417d3e94904fed3739580da01753", "diff": ["-     */", "-    public String toString() {", "-      String coords1, coords2;", "-      if (this.length1 == 0) {", "-        coords1 = this.start1 + \",0\";", "-      } else if (this.length1 == 1) {", "-        coords1 = Integer.toString(this.start1 + 1);", "-      } else {", "-        coords1 = (this.start1 + 1) + \",\" + this.length1;", "-      }", "-      if (this.length2 == 0) {", "-        coords2 = this.start2 + \",0\";", "-      } else if (this.length2 == 1) {", "-        coords2 = Integer.toString(this.start2 + 1);", "-      } else {", "-        coords2 = (this.start2 + 1) + \",\" + this.length2;", "-      }", "-      StringBuilder text = new StringBuilder();", "-      text.append(\"@@ -\").append(coords1).append(\" +\").append(coords2)", "-          .append(\" @@\\n\");", "-      // Escape the body of the patch with %xx notation.", "-      for (Diff aDiff : this.diffs) {", "-        switch (aDiff.operation) {", "-        case INSERT:", "-          text.append('+');", "-          break;", "-        case DELETE:", "-          text.append('-');", "-          break;", "-        case EQUAL:", "-          text.append(' ');", "-          break;", "-        }", "-        try {", "-          text.append(URLEncoder.encode(aDiff.text, \"UTF-8\").replace('+', ' '))", "-              .append(\"\\n\");", "-        } catch (UnsupportedEncodingException e) {", "-          // Not likely on modern system.", "-          throw new Error(\"This system does not support UTF-8.\", e);", "-        }", "-      }", "-      return unescapeForEncodeUriCompatability(text.toString());", "-    }", "+\t\t */", "+\t\t@Override", "+\t\tpublic String toString() {", "+\t\t\tString coords1, coords2;", "+\t\t\tif (this.length1 == 0) {", "+\t\t\t\tcoords1 = this.start1 + \",0\";", "+\t\t\t} else if (this.length1 == 1) {", "+\t\t\t\tcoords1 = Integer.toString(this.start1 + 1);", "+\t\t\t} else {", "+\t\t\t\tcoords1 = (this.start1 + 1) + \",\" + this.length1;", "+\t\t\t}", "+\t\t\tif (this.length2 == 0) {", "+\t\t\t\tcoords2 = this.start2 + \",0\";", "+\t\t\t} else if (this.length2 == 1) {", "+\t\t\t\tcoords2 = Integer.toString(this.start2 + 1);", "+\t\t\t} else {", "+\t\t\t\tcoords2 = (this.start2 + 1) + \",\" + this.length2;", "+\t\t\t}", "+\t\t\tStringBuilder text = new StringBuilder();", "+\t\t\ttext.append(\"@@ -\").append(coords1).append(\" +\").append(coords2)", "+\t\t\t\t\t.append(\" @@\\n\");", "+\t\t\t// Escape the body of the patch with %xx notation.", "+\t\t\tfor (Diff aDiff : this.diffs) {", "+\t\t\t\tswitch (aDiff.operation) {", "+\t\t\t\tcase INSERT:", "+\t\t\t\t\ttext.append('+');", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase DELETE:", "+\t\t\t\t\ttext.append('-');", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase EQUAL:", "+\t\t\t\t\ttext.append(' ');", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\ttry {", "+\t\t\t\t\ttext.append(", "+\t\t\t\t\t\t\tURLEncoder.encode(aDiff.text, \"UTF-8\").replace('+',", "+\t\t\t\t\t\t\t\t\t' ')).append(\"\\n\");", "+\t\t\t\t} catch (UnsupportedEncodingException e) {", "+\t\t\t\t\t// Not likely on modern system.", "+\t\t\t\t\tthrow new Error(\"This system does not support UTF-8.\", e);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\treturn unescapeForEncodeUriCompatability(text.toString());", "+\t\t}"], "commitAfterChange": "ccec4a1da96e4230996fd3f45653be59c64dac88", "signatureAfterChange": " \t\t@Override \t\tpublic String toString()", "id": "1dec4d17609d37975e5a9cf0fd5e28e8", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "   public LinkedList<Diff> diff_main(String text1, String text2,                                     boolean checklines)", "fileName": "src/fitlibrary/diff/Diff_match_patch.java", "methodNumberAfterChange": 2, "commitBeforeChange": "ab046d65905e417d3e94904fed3739580da01753", "diff": ["+\t */", "+\tpublic LinkedList<Diff> diff_main(String text1Initial, String text2Initial,", "+\t\t\tboolean checklines) {", "+\t\t// Check for equality (speedup)", "+\t\tString text1 = text1Initial;", "+\t\tString text2 = text2Initial;", "+\t\tLinkedList<Diff> diffs;", "+\t\tif (text1.equals(text2)) {", "+\t\t\tdiffs = new LinkedList<Diff>();", "+\t\t\tdiffs.add(new Diff(Operation.EQUAL, text1));", "+\t\t\treturn diffs;", "+\t\t}", "+\t\t// Trim off common prefix (speedup)", "+\t\tint commonlength = diff_commonPrefix(text1, text2);", "+\t\tString commonprefix = text1.substring(0, commonlength);", "+\t\ttext1 = text1.substring(commonlength);", "+\t\ttext2 = text2.substring(commonlength);", "+\t\t// Trim off common suffix (speedup)", "+\t\tcommonlength = diff_commonSuffix(text1, text2);", "+\t\tString commonsuffix = text1.substring(text1.length() - commonlength);", "+\t\ttext1 = text1.substring(0, text1.length() - commonlength);", "+\t\ttext2 = text2.substring(0, text2.length() - commonlength);", "-   */", "-  public LinkedList<Diff> diff_main(String text1, String text2,", "-                                    boolean checklines) {", "-    // Check for equality (speedup)", "-    LinkedList<Diff> diffs;", "-    if (text1.equals(text2)) {", "-      diffs = new LinkedList<Diff>();", "-      diffs.add(new Diff(Operation.EQUAL, text1));", "-      return diffs;", "-    }", "+\t\t// Compute the diff on the middle block", "+\t\tdiffs = diff_compute(text1, text2, checklines);", "-    // Trim off common prefix (speedup)", "-    int commonlength = diff_commonPrefix(text1, text2);", "-    String commonprefix = text1.substring(0, commonlength);", "-    text1 = text1.substring(commonlength);", "-    text2 = text2.substring(commonlength);", "+\t\t// Restore the prefix and suffix", "+\t\tif (!\"\".equals(commonprefix)) {", "+\t\t\tdiffs.addFirst(new Diff(Operation.EQUAL, commonprefix));", "+\t\t}", "+\t\tif (!\"\".equals(commonsuffix)) {", "+\t\t\tdiffs.addLast(new Diff(Operation.EQUAL, commonsuffix));", "+\t\t}", "-    // Trim off common suffix (speedup)", "-    commonlength = diff_commonSuffix(text1, text2);", "-    String commonsuffix = text1.substring(text1.length() - commonlength);", "-    text1 = text1.substring(0, text1.length() - commonlength);", "-    text2 = text2.substring(0, text2.length() - commonlength);", "+\t\tdiff_cleanupMerge(diffs);", "+\t\treturn diffs;", "+\t}", "-    // Compute the diff on the middle block", "-    diffs = diff_compute(text1, text2, checklines);", "-    // Restore the prefix and suffix", "-    if (!\"\".equals(commonprefix)) {", "-      diffs.addFirst(new Diff(Operation.EQUAL, commonprefix));", "-    }", "-    if (!\"\".equals(commonsuffix)) {", "-      diffs.addLast(new Diff(Operation.EQUAL, commonsuffix));", "-    }", "-    diff_cleanupMerge(diffs);", "-    return diffs;", "-  }"], "commitAfterChange": "ccec4a1da96e4230996fd3f45653be59c64dac88", "signatureAfterChange": " \tpublic LinkedList<Diff> diff_main(String text1Initial, String text2Initial, \t\t\tboolean checklines)", "id": "5357d3c773d9618e2b43523ffc51cb0a", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "2aeaee044de46ead4c9c5b82b638e912", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"]}