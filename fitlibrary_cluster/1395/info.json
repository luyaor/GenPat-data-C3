{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 9, "signatureBeforeChange": "\r \tprivate void callSetUpSutChain(Object sutInitially, final Table table, final TestResults testResults)", "fileName": "src/fitlibrary/flow/DoFlow.java", "methodNumberAfterChange": 13, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["+\tprivate void callSetUpSutChain(Object sutInitially, final Row row, final TestResults testResults) {\r", "+\t\tsetUpTearDown.callSetUpSutChain(sutInitially, row, testResults);\r", "-\t}\r", "-\tprivate void callSetUpSutChain(Object sutInitially, final Table table, final TestResults testResults) {\r", "-\t\tObject sut = sutInitially;\r", "-\t\tif (sut instanceof TypedObject)\r", "-\t\t\tsut = ((TypedObject)sut).getSubject();\r", "-\t\tsetUpTearDownManager.addReferences(sut, new MethodCaller(){\r", "-\t\t\tpublic void setUp(Object object) {\r", "-\t\t\t\tcallMethod(object,\"setUp\",table,testResults);\r", "-\t\t\t}\r", "-\t\t\tpublic void tearDown(Object object) {\r", "-\t\t\t\tcallMethod(object,\"tearDown\",table,testResults);\r", "-\t\t\t}\r", "-\t\t});\r", "-\t}\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \tprivate void callSetUpSutChain(Object sutInitially, final Row row, final TestResults testResults)", "id": "64290efdfd37a55ae536b01580ac236d", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 21, "signatureBeforeChange": "\r \t@Override\r \tpublic boolean checkResult(Cell expectedCell, Object result, boolean showWrongs, boolean handleSubtype, TestResults testResults)", "fileName": "src/fitlibrary/closure/CalledMethodTarget.java", "methodNumberAfterChange": 21, "commitBeforeChange": "02e542836443af04f72003e8d730694e6f8811b7", "diff": ["-\tpublic boolean checkResult(Cell expectedCell, Object result, boolean showWrongs, boolean handleSubtype, TestResults testResults) {\r", "+\tpublic boolean checkResult(Cell expectedCell, Object initialResult, boolean showWrongs, \r", "+\t\t\tboolean handleSubtype, TestResults testResults) {\r", "+\t\tObject result = initialResult;\r", "+\t\tif (result != null && Iterator.class.isAssignableFrom(result.getClass())) {\r", "+\t\t\tIterator<?> it = (Iterator<?>) result;\r", "+\t\t\tList<Object> list = new ArrayList<Object>();\r", "+\t\t\twhile (it.hasNext())\r", "+\t\t\t\tlist.add(it.next());\r", "+\t\t\tresult = list;\r", "+\t\t}\r", "-\t\t\t\tif (result instanceof String)\r", "+\t\t\t\tif (result instanceof String) {\r", "-\t\t\t\telse\r", "+\t\t\t\t} else {\r", "+\t\t\t\t}\r"], "commitAfterChange": "3e49a68db9f888715cfae72403c05f9f5d45b868", "signatureAfterChange": "\r \t@Override\r \tpublic boolean checkResult(Cell expectedCell, Object initialResult, boolean showWrongs, \r \t\t\tboolean handleSubtype, TestResults testResults)", "id": "b51f2183bc3be03a605ac4a0895e10e2", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "71b6bce351bb107eb29648a399ee9c6f", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_DBSCAN"]}