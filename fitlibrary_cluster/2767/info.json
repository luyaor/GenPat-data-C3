{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 16, "signatureBeforeChange": "\r \tpublic List<Class<?>> possibleClasses(Evaluator evaluator)", "fileName": "src/fitlibrary/closure/LookupMethodTargetStandard.java", "methodNumberAfterChange": 15, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tpublic List<Class<?>> possibleClasses(Evaluator evaluator) {\r", "-\t\treturn scopeOf(evaluator).possibleClasses();\r", "+\tpublic List<Class<?>> possibleClasses(IScope scope) {\r", "+\t\treturn scope.possibleClasses();\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tpublic List<Class<?>> possibleClasses(IScope scope)", "id": "30402424624dcd5d2fab03a6565a21a0", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 21, "signatureBeforeChange": "\r \t@Override\r \tpublic boolean checkResult(Cell expectedCell, Object result, boolean showWrongs, boolean handleSubtype, TestResults testResults)", "fileName": "src/fitlibrary/closure/CalledMethodTarget.java", "methodNumberAfterChange": 21, "commitBeforeChange": "767f6cb947a46bb148e39b288dc9b54a99aee022", "diff": ["-\t\t\t\texpectedCell.passIfNotEmbedded(testResults,evaluator);\r", "+\t\t\t\texpectedCell.passIfNotEmbedded(testResults,runtime);\r", "-\t\t\tif (showWrongs && (result == null || !expectedCell.hasEmbeddedTables(evaluator))) {\r", "+\t\t\tif (showWrongs && (result == null || !expectedCell.hasEmbeddedTables(runtime))) {\r", "-\t\t\t\t\texpectedCell.failWithStringEquals(testResults,valueParser.show(result),evaluator);\r", "+\t\t\t\t\texpectedCell.failWithStringEquals(testResults,valueParser.show(result),runtime);\r", "-\t\t\t\t\texpectedCell.fail(testResults,valueParser.show(result),evaluator);\r", "+\t\t\t\t\texpectedCell.fail(testResults,valueParser.show(result),runtime);\r"], "commitAfterChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "signatureAfterChange": "\r \t@Override\r \tpublic boolean checkResult(Cell expectedCell, Object result, boolean showWrongs, boolean handleSubtype, TestResults testResults)", "id": "381e34a20b40a088365aa775589f3b49", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t\r \tpublic ByStringParser(RuntimeContext runtime)", "fileName": "src/fitlibrary/parser/ByStringParser.java", "methodNumberAfterChange": 0, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\tpublic ByStringParser(RuntimeContext runtime) {\r", "-\t\tthis.runtime = runtime;\r", "+\tpublic ByStringParser(VariableResolver resolver) {\r", "+\t\tthis.resolver = resolver;\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \t\r \tpublic ByStringParser(VariableResolver resolver)", "id": "7b53f7818da18bf1a66e679044f00af9", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 34, "signatureBeforeChange": "\r \tpublic boolean toExpandDefinedActions()", "fileName": "src/fitlibrary/traverse/workflow/DoTraverseInterpreter.java", "methodNumberAfterChange": 26, "commitBeforeChange": "fc8e697e0b6ce0d0c19d98f2b34d0b0b9e21ffaa", "diff": ["-\t}\r", "-\t\treturn \"true\".equals(getDynamicVariable(EXPAND_DEFINED_ACTIONS));\r", "+\t\treturn getRuntimeContext().toExpandDefinedActions();\r"], "commitAfterChange": "0fcaf42e2a6c9a3f5f224f6ee86c84fd493c8818", "signatureAfterChange": "\r \tpublic boolean toExpandDefinedActions()", "id": "d3f892593eacae9e4b4504667e63e326", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 15, "signatureBeforeChange": "\r     @Override\r \tpublic void invokeAndCheckForSpecial(Row row, Cell expectedCell, TestResults testResults, Row fullRow, Cell specialCell)", "fileName": "src/fitlibrary/closure/CalledMethodTarget.java", "methodNumberAfterChange": 15, "commitBeforeChange": "767f6cb947a46bb148e39b288dc9b54a99aee022", "diff": ["-\t\t\tDynamicVariablesRecording recorder = evaluator.getRuntimeContext().getDynamicVariableRecorder();\r", "-\t\t\tif (recorder.isRecording() && expectedCell.unresolved(evaluator)) {\r", "+\t\t\tDynamicVariablesRecording recorder = runtime.getDynamicVariableRecorder();\r", "+\t\t\tif (recorder.isRecording() && expectedCell.unresolved(runtime)) {\r", "-            \t\tevaluator.setDynamicVariable(key, resultString);\r", "+\t\t\t\t\truntime.setDynamicVariable(key, resultString);\r"], "commitAfterChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "signatureAfterChange": "\r     @Override\r \tpublic void invokeAndCheckForSpecial(Row row, Cell expectedCell, TestResults testResults, Row fullRow, Cell specialCell)", "id": "e96e85a3b67b24955ff015f5fda1e004", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t\r \tpublic ByStringParser(Evaluator evaluator)", "fileName": "src/fitlibrary/parser/ByStringParser.java", "methodNumberAfterChange": 0, "commitBeforeChange": "fc8e697e0b6ce0d0c19d98f2b34d0b0b9e21ffaa", "diff": ["-\tpublic ByStringParser(Evaluator evaluator) {\r", "-\t\tthis.evaluator = evaluator;\r", "+\tpublic ByStringParser(RuntimeContext runtime) {\r", "+\t\tthis.runtime = runtime;\r"], "commitAfterChange": "0fcaf42e2a6c9a3f5f224f6ee86c84fd493c8818", "signatureAfterChange": "\r \t\r \tpublic ByStringParser(RuntimeContext runtime)", "id": "ec504023e01320fff0c050b85198d813", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "fdca2c57b881d04dc4f6ba1ec8ef7ea7", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_DBSCAN"]}