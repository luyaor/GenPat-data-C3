{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \t@Test\r \tpublic void seqStyle()", "fileName": "test/fitlibrary/closure/TestActionSignature.java", "methodNumberAfterChange": 4, "commitBeforeChange": "5327f82710d64a8962e506a103d189fd75c5dbba", "diff": ["-\t\tassertThat(ActionSignature.seqStyle(\"act\"),is(new ActionSignature(\"act\",0)));\r", "-\t\tassertThat(ActionSignature.seqStyle(\"act\",\"1\"),is(new ActionSignature(\"act\",1)));\r", "-\t\tassertThat(ActionSignature.seqStyle(\"act\",\"1\",\"ive\"),is(new ActionSignature(\"act\",2)));\r", "-\t\tassertThat(ActionSignature.seqStyle(\"act\",\"1\",\"ive\",\"2\"),is(new ActionSignature(\"act\",3)));\r", "-\t\tassertThat(ActionSignature.seqStyle(\"act\",\"1\",\"ive\",\"2\",\"ly\"),is(new ActionSignature(\"act\",4)));\r", "-\t\tassertThat(ActionSignature.seqStyle(CollectionUtility.list(\"act\",\"1\",\"ive\",\"2\",\"ly\")),is(new ActionSignature(\"act\",4)));\r", "+\t\tassertThat(ActionSignature.seqStyle(runtime,\"act\"),is(new ActionSignature(\"act\",0,runtime)));\r", "+\t\tassertThat(ActionSignature.seqStyle(runtime,\"act\",\"1\"),is(new ActionSignature(\"act\",1,runtime)));\r", "+\t\tassertThat(ActionSignature.seqStyle(runtime,\"act\",\"1\",\"ive\"),is(new ActionSignature(\"act\",2,runtime)));\r", "+\t\tassertThat(ActionSignature.seqStyle(runtime,\"act\",\"1\",\"ive\",\"2\"),is(new ActionSignature(\"act\",3,runtime)));\r", "+\t\tassertThat(ActionSignature.seqStyle(runtime,\"act\",\"1\",\"ive\",\"2\",\"ly\"),is(new ActionSignature(\"act\",4,runtime)));\r", "+\t\tassertThat(ActionSignature.seqStyle(runtime,CollectionUtility.list(\"act\",\"1\",\"ive\",\"2\",\"ly\")),is(new ActionSignature(\"act\",4,runtime)));\r"], "commitAfterChange": "fc04ff1c33cda53766142c18fa0ccb6a92e65b68", "signatureAfterChange": "\r \t@Test\r \tpublic void seqStyle()", "id": "9a8c59308ce4a3755d380972788b1d7f", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \t@Test\r \tpublic void doStyle()", "fileName": "test/fitlibrary/closure/TestActionSignature.java", "methodNumberAfterChange": 3, "commitBeforeChange": "5327f82710d64a8962e506a103d189fd75c5dbba", "diff": ["-\t\tassertThat(ActionSignature.doStyle(\"act\"),is(new ActionSignature(\"act\",0)));\r", "-\t\tassertThat(ActionSignature.doStyle(\"act\",\"1\"),is(new ActionSignature(\"act\",1)));\r", "-\t\tassertThat(ActionSignature.doStyle(\"act\",\"1\",\"ive\"),is(new ActionSignature(\"actIve\",1)));\r", "-\t\tassertThat(ActionSignature.doStyle(\"act\",\"1\",\"ive\",\"2\"),is(new ActionSignature(\"actIve\",2)));\r", "-\t\tassertThat(ActionSignature.doStyle(\"act\",\"1\",\"ive\",\"2\",\"ly\"),is(new ActionSignature(\"actIveLy\",2)));\r", "-\t\tassertThat(ActionSignature.doStyle(CollectionUtility.list(\"act\",\"1\",\"ive\",\"2\",\"ly\")),is(new ActionSignature(\"actIveLy\",2)));\r", "+\t\tassertThat(ActionSignature.doStyle(runtime,\"act\"),is(new ActionSignature(\"act\",0,runtime)));\r", "+\t\tassertThat(ActionSignature.doStyle(runtime,\"act\",\"1\"),is(new ActionSignature(\"act\",1,runtime)));\r", "+\t\tassertThat(ActionSignature.doStyle(runtime,\"act\",\"1\",\"ive\"),is(new ActionSignature(\"actIve\",1,runtime)));\r", "+\t\tassertThat(ActionSignature.doStyle(runtime,\"act\",\"1\",\"ive\",\"2\"),is(new ActionSignature(\"actIve\",2,runtime)));\r", "+\t\tassertThat(ActionSignature.doStyle(runtime,\"act\",\"1\",\"ive\",\"2\",\"ly\"),is(new ActionSignature(\"actIveLy\",2,runtime)));\r", "+\t\tassertThat(ActionSignature.doStyle(runtime,CollectionUtility.list(\"act\",\"1\",\"ive\",\"2\",\"ly\")),is(new ActionSignature(\"actIveLy\",2,runtime)));\r"], "commitAfterChange": "fc04ff1c33cda53766142c18fa0ccb6a92e65b68", "signatureAfterChange": "\r \t@Test\r \tpublic void doStyle()", "id": "9e2bce675fa6d70a53de0561c0f8b528", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "8582230de05effac31f14a071d8820e2", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"]}