{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tprivate Row appendTableToReport(Table callingTable, Row actualParameterNames, int errors, List<Object> parameters, Tables resultingTables)", "fileName": "src/fitlibrary/definedAction/UseTemplateTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\tprivate Row appendTableToReport(Table callingTable, Row actualParameterNames, int errors, List<Object> parameters, Tables resultingTables) {\r", "-\t\tTable commentTable = new Table();\r", "+\tprivate RowOnParse appendTableToReport(Table callingTable, Row actualParameterNames, int errors, List<Object> parameters, TablesOnParse resultingTables) {\r", "+\t\tTable commentTable = new TableOnParse();\r", "-\t\tTable paramsTable = new Table();\r", "-\t\tRow templateRow = paramsTable.newRow();\r", "+\t\tTableOnParse paramsTable = new TableOnParse();\r", "+\t\tRowOnParse templateRow = paramsTable.newRow();\r", "-\t\tRow paramsRow = paramsTable.newRow();\r", "+\t\tRowOnParse paramsRow = paramsTable.newRow();\r", "-\t\t\tparamsRow.addCell(new Cell(actualParameterNames.text(c,this)));\r", "-\t\tRow argsRow = paramsTable.newRow();\r", "+\t\t\tparamsRow.addCell(new CellOnParse(actualParameterNames.text(c,this)));\r", "+\t\tRowOnParse argsRow = paramsTable.newRow();\r", "-\t\t\tif (paramValue instanceof Table) {\r", "+\t\t\tif (paramValue instanceof TableOnParse) {\r", "-\t\t\t\tnewCell.setInnerTables(new Tables((Table) paramValue));\r", "+\t\t\t\tnewCell.setInnerTables(new TablesOnParse((TableOnParse) paramValue));\r", "-\t\tcommentTable.newRow().addCell(new Cell(paramsTable));\r", "-\t\tcommentTable.newRow().addCell(new Cell(resultingTables));\r", "+\t\tcommentTable.newRow().addCell(new CellOnParse(paramsTable));\r", "+\t\tcommentTable.newRow().addCell(new CellOnParse(resultingTables));\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \tprivate RowOnParse appendTableToReport(Table callingTable, Row actualParameterNames, int errors, List<Object> parameters, TablesOnParse resultingTables)", "id": "2cdf3e3ef66ec82ed6866c78127ce6f2", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r \tprivate Table createDefineActionTable(Tables innerTables)", "fileName": "src/fitlibrary/definedAction/DefineActionsOnPageSlowly.java", "methodNumberAfterChange": 8, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\tprivate Table createDefineActionTable(Tables innerTables) {\r", "-\t\tTable defineActionTable = new Table();\r", "-\t\tRow row = new Row();\r", "+\tprivate TableOnParse createDefineActionTable(TablesOnParse innerTables) {\r", "+\t\tTableOnParse defineActionTable = new TableOnParse();\r", "+\t\tRowOnParse row = new RowOnParse();\r", "-\t\trow = new Row();\r", "-\t\trow.addCell(new Cell(innerTables));\r", "+\t\trow = new RowOnParse();\r", "+\t\trow.addCell(new CellOnParse(innerTables));\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \tprivate TableOnParse createDefineActionTable(TablesOnParse innerTables)", "id": "8a8da8fecba20acb11450f71e4034b89", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r \tprivate void macroReplace(Tables tables, Map<String,Object> mapToRef)", "fileName": "src/fitlibrary/definedAction/DefinedActionTraverse.java", "methodNumberAfterChange": 6, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\tprivate void macroReplace(Tables tables, Map<String,Object> mapToRef) {\r", "+\tprivate void macroReplace(TablesOnParse tables, Map<String,Object> mapToRef) {\r", "-\t\t\tTable table = tables.table(t);\r", "+\t\t\tTableOnParse table = tables.table(t);\r", "-\t\t\t\tRow row = table.row(r);\r", "+\t\t\t\tRowOnParse row = table.row(r);\r", "-\t\t\t\t\t\t\tif (value instanceof Table) {\r", "-\t\t\t\t\t\t\t\tcell.setInnerTables(new Tables((Table) value));\r", "+\t\t\t\t\t\t\tif (value instanceof TableOnParse) {\r", "+\t\t\t\t\t\t\t\tcell.setInnerTables(new TablesOnParse((TableOnParse) value));\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \tprivate void macroReplace(TablesOnParse tables, Map<String,Object> mapToRef)", "id": "fd5ef3156ea54fa9e5c93592eda0b3c2", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "c55f2b8f2468cd65e917ce5338b34b92", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_DBSCAN"]}