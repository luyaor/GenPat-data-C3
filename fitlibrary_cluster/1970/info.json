{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r \tprivate String possibleSeq(Row row)", "fileName": "src/fitlibrary/traverse/workflow/DispatchRowInFlow.java", "methodNumberAfterChange": 6, "commitBeforeChange": "f7ebaaa92ebfbd1939c31f0af7fd44102b5c424c", "diff": ["-\t\tString result = \"public Type \"+ExtendedCamelCase.camel(row.text(0,evaluator))+\"(\";\r", "+\t\tString result = \"public Type \"+evaluator.getRuntimeContext().extendedCamel(row.text(0,evaluator))+\"(\";\r"], "commitAfterChange": "0209ef28b9bcd09ff4e0df509885b3e7b6079574", "signatureAfterChange": "\r \tprivate String possibleSeq(Row row)", "id": "087df930cd517c9e73b6b2830193899a", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r \tprivate static String buildArguments(Row row, List<String> arguments, Evaluator evaluator)", "fileName": "src/fitlibrary/collection/CollectionSetUpTraverse.java", "methodNumberAfterChange": 8, "commitBeforeChange": "5327f82710d64a8962e506a103d189fd75c5dbba", "diff": ["-            arguments.add(ExtendedCamelCase.camel(name));\r", "+            arguments.add(evaluator.getRuntimeContext().extendedCamel(name));\r"], "commitAfterChange": "fc04ff1c33cda53766142c18fa0ccb6a92e65b68", "signatureAfterChange": "\r \tprivate static String buildArguments(Row row, List<String> arguments, Evaluator evaluator)", "id": "b157b4aa08f7b15df3acf1318174cc26", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \tprivate static ICalledMethodTarget findMethodTarget(Row row, Evaluator evaluator, boolean embedded)", "fileName": "src/fitlibrary/collection/CollectionSetUpTraverse.java", "methodNumberAfterChange": 7, "commitBeforeChange": "5327f82710d64a8962e506a103d189fd75c5dbba", "diff": ["-\t\tString methodName = ExtendedCamelCase.camel(argNames);\r", "+\t\tString methodName = evaluator.getRuntimeContext().extendedCamel(argNames);\r"], "commitAfterChange": "fc04ff1c33cda53766142c18fa0ccb6a92e65b68", "signatureAfterChange": "\r \tprivate static ICalledMethodTarget findMethodTarget(Row row, Evaluator evaluator, boolean embedded)", "id": "e03b736aa29e426cd605f84374a7323b", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \r \tpublic PostFixSpecialCaller(Row row, Evaluator evaluator, boolean sequencing)", "fileName": "src/fitlibrary/traverse/workflow/caller/PostFixSpecialCaller.java", "methodNumberAfterChange": 0, "commitBeforeChange": "f7ebaaa92ebfbd1939c31f0af7fd44102b5c424c", "diff": ["-\t\t    (\"set\".equals(firstCell) || \"setSymbolNamed\".equals(ExtendedCamelCase.camel(firstCell))))\r", "+\t\t    (\"set\".equals(firstCell) || \"setSymbolNamed\".equals(evaluator.getRuntimeContext().extendedCamel(firstCell))))\r"], "commitAfterChange": "0209ef28b9bcd09ff4e0df509885b3e7b6079574", "signatureAfterChange": "\r \r \tpublic PostFixSpecialCaller(Row row, Evaluator evaluator, boolean sequencing)", "id": "f90e09f4c3941f6ced40608c8f863206", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "d145a680ff208a57c20dd0f57b50d8a7", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL"]}