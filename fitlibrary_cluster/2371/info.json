{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \t@Test\r \tpublic void rowOfOneHasSizeOf1()", "fileName": "test/fitlibrary/matcher/TestTableBuilderForTests.java", "methodNumberAfterChange": 8, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tRowBuilder rowBuilder = row().\r", "-\t\t\twith(cell());\r", "-\t\tRow row = rowBuilder.expect(context);\r", "+\t\tRowBuilder rowBuilder = row().with(cell());\r", "+\t\tRow row = rowBuilder.mock(context);\r", "-\t\tassertThat(row.last(), sameInstance(row.elementAt(0)));\r", "+\t\tassertThat(row.last(), sameInstance(row.at(0)));\r", "-\t\tassertThat(iterator.next(), sameInstance(row.elementAt(0)));\r", "+\t\tassertThat(iterator.next(), sameInstance(row.at(0)));\r", "+\t\tassertThat(iterator.hasNext(), is(false));\r", "+\t\t\r", "+\t\tassertThat(row.size(), is(1));\r", "+\t\titerator = row.iterator();\r", "+\t\tassertThat(iterator.hasNext(), is(true));\r", "+\t\tassertThat(iterator.next(), sameInstance(row.at(0)));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Test\r \tpublic void rowOfOneHasSizeOf1()", "id": "015a3478007f96438b5eb9218fe44597", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r \t@Test\r \tpublic void rowOfTwoHasSizeOf2()", "fileName": "test/fitlibrary/matcher/TestTableBuilderForTests.java", "methodNumberAfterChange": 9, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tRowBuilder rowBuilder = row().\r", "-\t\t\twith(cell(),cell());\r", "-\t\tRow row = rowBuilder.expect(context);\r", "+\t\tRowBuilder rowBuilder = row().with(cell(),cell());\r", "+\t\tRow row = rowBuilder.mock(context);\r", "-\t\tassertThat(row.last(), is(row.elementAt(1)));\r", "+\t\tassertThat(row.last(), is(row.at(1)));\r", "-\t\tassertThat(iterator.next(), sameInstance(row.elementAt(0)));\r", "+\t\tassertThat(iterator.next(), sameInstance(row.at(0)));\r", "-\t\tassertThat(iterator.next(), sameInstance(row.elementAt(1)));\r", "+\t\tassertThat(iterator.next(), sameInstance(row.at(1)));\r", "-\t\tassertThat(row.elementAt(0), not(sameInstance(row.elementAt(1))));\r", "+\t\tassertThat(row.at(0), not(sameInstance(row.at(1))));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Test\r \tpublic void rowOfTwoHasSizeOf2()", "id": "650ccb955fe85a39bbdfd8b4301015f0", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "6d0afb4f9e2554704a2faa1fc5e9901f", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"]}