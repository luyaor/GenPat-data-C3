{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tpublic ParameterBinder(List<String> formalParameters, Tables tables, String pageName, VariableResolver resolver)", "fileName": "src/fitlibrary/definedAction/ParameterBinder.java", "methodNumberAfterChange": 0, "commitBeforeChange": "8c641f862310f1dca2920a59e226aed52b07dae9", "diff": ["+\tpublic ParameterBinder(List<String> formalParameters, Tables tables, String pageName) {\r", "+\t\tthis.formalParameters = formalParameters;\r", "+\t\tthis.tables = tables;\r", "+\t\tthis.pageName = pageName;\r", "+\t}\r", "-\tpublic ParameterBinder(List<String> formalParameters, Tables tables, String pageName, VariableResolver resolver) {\r", "-\t\tthis.tables = tables;\r", "-\t\tthis.pageName = pageName;\r", "-\t\tMap<String,Object> mapToRef = new HashMap<String,Object>();\r", "-\t\tfor (int c = 0; c < formalParameters.size(); c++) {\r", "-\t\t\tString formal = formalParameters.get(c);\r", "-\t\t\tmapToRef.put(formal,paramRef(c));\r", "-\t\t}\r", "-\t\tthis.resolver = resolver;\r", "-\t\tmacroReplace(tables,mapToRef,resolver);\r", "-\t}\r"], "commitAfterChange": "c9a02fbef6bcaff0b0f1bdcd96e45453e110ead4", "signatureAfterChange": "\r \r \tpublic ParameterBinder(List<String> formalParameters, Tables tables, String pageName)", "id": "4c7c0d0cb0f01bc4fb3d7dc4fb97ed0c", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tpublic Tables substitute(List<Object> actualParameters)", "fileName": "src/fitlibrary/definedAction/ParameterBinder.java", "methodNumberAfterChange": 1, "commitBeforeChange": "8c641f862310f1dca2920a59e226aed52b07dae9", "diff": ["+\t}\r", "+\tpublic Tables getCopyOfBody() {\r", "+\t\treturn tables.deepCopy();\r", "+\t}\r", "-\t}\r", "-\tpublic Tables substitute(List<Object> actualParameters) {\r", "-\t\tTables copy = tables.deepCopy();\r", "-\t\tMap<String,Object> mapFromRef = new HashMap<String,Object>();\r", "-\t\tfor (int i = 0; i < actualParameters.size(); i++)\r", "-\t\t\tmapFromRef.put(paramRef(i), actualParameters.get(i));\r", "-\t\tmacroReplace(copy, mapFromRef,resolver);\r", "-\t\treturn copy;\r", "-\t}\r"], "commitAfterChange": "c9a02fbef6bcaff0b0f1bdcd96e45453e110ead4", "signatureAfterChange": "\r \tpublic Tables getCopyOfBody()", "id": "8e8393aaf78635ecc1f325f32994b57f", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "e06a44c4f72bcf61f348c14ac9d0ac7a", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"]}