{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r \t@SuppressWarnings(\"unchecked\")\r \tpublic boolean matches(Cell cell, Object result, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/parser/collection/MapParser.java", "methodNumberAfterChange": 6, "commitBeforeChange": "681d5f08a03cb8efaa429831112a5d45fa950ef3", "diff": ["-\t\t\treturn !cell.hasEmbeddedTable() && cell.isBlank(evaluator);\r", "+\t\t\treturn !cell.hasEmbeddedTables() && cell.isBlank(evaluator);\r", "-\t\tif (cell.hasEmbeddedTable())\r", "+\t\tif (cell.hasEmbeddedTables())\r"], "commitAfterChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "signatureAfterChange": "\r \t@SuppressWarnings(\"unchecked\")\r \tpublic boolean matches(Cell cell, Object result, TestResults testResults) throws Exception", "id": "0dfe94d64f8c7646d9098691adbcd49a", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r     public boolean matches(Cell cell, Object result, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/object/DomainObjectParser.java", "methodNumberAfterChange": 4, "commitBeforeChange": "681d5f08a03cb8efaa429831112a5d45fa950ef3", "diff": ["-\t\t\treturn !cell.hasEmbeddedTable() && cell.isBlank(evaluator);\r", "-    \tif (cell.hasEmbeddedTable())\r", "+\t\t\treturn !cell.hasEmbeddedTables() && cell.isBlank(evaluator);\r", "+    \tif (cell.hasEmbeddedTables())\r"], "commitAfterChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "signatureAfterChange": "\r     public boolean matches(Cell cell, Object result, TestResults testResults) throws Exception", "id": "2932e97f44a33cb11eb4c7b1a6ccfea8", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r \tprivate static void macroReplaceCell(Cell cell, String key, Object value)", "fileName": "src/fitlibrary/definedAction/ParameterSubstitution.java", "methodNumberAfterChange": 6, "commitBeforeChange": "681d5f08a03cb8efaa429831112a5d45fa950ef3", "diff": ["-\t\tif (cell.hasEmbeddedTable())\r", "+\t\tif (cell.hasEmbeddedTables())\r", "-\t\t\tif (cell.hasEmbeddedTable())\r", "+\t\t\tif (cell.hasEmbeddedTables())\r"], "commitAfterChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "signatureAfterChange": "\r \tprivate static void macroReplaceCell(Cell cell, String key, Object value)", "id": "460a373ab931eb57f2c3f0cd003324ad", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \tpublic boolean matches(Cell cell, Object actual, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/parser/collection/ListParser.java", "methodNumberAfterChange": 7, "commitBeforeChange": "681d5f08a03cb8efaa429831112a5d45fa950ef3", "diff": ["-\t\t\treturn !cell.hasEmbeddedTable() && cell.isBlank(evaluator);\r", "-    \tif (cell.hasEmbeddedTable())\r", "+\t\t\treturn !cell.hasEmbeddedTables() && cell.isBlank(evaluator);\r", "+    \tif (cell.hasEmbeddedTables())\r"], "commitAfterChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "signatureAfterChange": "\r \tpublic boolean matches(Cell cell, Object actual, TestResults testResults) throws Exception", "id": "c9dc8a0c4e0a97b7f54c0f2e790cead8", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tpublic boolean matches(Cell cell, Object result, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/parser/collection/SetParser.java", "methodNumberAfterChange": 5, "commitBeforeChange": "681d5f08a03cb8efaa429831112a5d45fa950ef3", "diff": ["-\t\t\treturn !cell.hasEmbeddedTable() && cell.isBlank(evaluator);\r", "-\t\tif (cell.hasEmbeddedTable())\r", "+\t\t\treturn !cell.hasEmbeddedTables() && cell.isBlank(evaluator);\r", "+\t\tif (cell.hasEmbeddedTables())\r"], "commitAfterChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "signatureAfterChange": "\r \tpublic boolean matches(Cell cell, Object result, TestResults testResults) throws Exception", "id": "cd03f491cb64042d75d6494f6ade4f01", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "4411d4b70d3f09209c657e54b384fd34", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL"]}