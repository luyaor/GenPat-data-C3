{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r \t@Test\r \tpublic void testParseWithGenericListEnumFinder() throws Exception", "fileName": "test/fitlibraryGeneric/TestDirectAccessToParser.java", "methodNumberAfterChange": 4, "commitBeforeChange": "19244da227b35deeb114ad22bd267b37f601baa7", "diff": ["+\t@Test\r", "+\tpublic void testParseWithEnumFinder() throws Exception {\r", "+\t\tassertThat(ParserSelectorForType.evaluate(doFixture, En.class, \"a\"),is((Object)En.A));\r", "+\t}\r", "-\t@Test\r", "-\tpublic void testParseWithGenericListEnumFinder() throws Exception {\r", "-\t\tLocalParameterizedType innerType = new LocalParameterizedType(TestDirectAccessToParser.class, List.class, En.class);\r", "-\t\tLocalParameterizedType type = new LocalParameterizedType(TestDirectAccessToParser.class, Gen.class, innerType);\r", "-\t\tList<En> expectedList = new ArrayList<En>();\r", "-\t\texpectedList.add(En.A);\r", "-\t\texpectedList.add(En.B);\r", "-\t\tassertThat(ParserSelectorForType.evaluate(doFixture, type, \"a, b\"),is((Object)new Gen<List<En>>(expectedList)));\r", "-\t}\r"], "commitAfterChange": "4c09d4a78ae5171e97d9d95e70df7d10c6686bd5", "signatureAfterChange": "\r \t@Test\r \tpublic void testParseWithEnumFinder() throws Exception", "id": "26eb76aa28f17b2c2646ea6859acac24", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 10, "signatureBeforeChange": "\r \tprivate void colourReport(Tables body, Row row,\r \t\t\tTestResults testResults, TestResults subTestResults)", "fileName": "src/fitlibrary/traverse/workflow/caller/DefinedActionCaller.java", "methodNumberAfterChange": 10, "commitBeforeChange": "cd20838066679088607bacd4884b58979b698e68", "diff": ["-\t}\r", "-\tprivate void colourReport(Tables body, Row row,\r", "-\t\t\tTestResults testResults, TestResults subTestResults) {\r", "+\t}\r", "+\tprivate void colourRowInReport(Row row, TestResults testResults, TestResults subTestResults) {\r", "+\t\tif (runtime.toExpandDefinedActions() || subTestResults.problems()) {\r", "-\t\t\tString pageName = binder.getPageName();\r", "-\t\t\tCell cell = TableFactory.cell(body);\r", "-\t\t\tcell.at(0).setLeader(Fixture.label(link(pageName))+cell.at(0).getLeader());\r", "-\t\t\tcell.calls();\r", "-\t\t\trow.add(cell);\r"], "commitAfterChange": "e3f9a7058b7a695d0825f787e929954ce3c4ac47", "signatureAfterChange": "\r \tprivate void colourRowInReport(Row row, TestResults testResults, TestResults subTestResults)", "id": "3c6597a9c66cade48d55003c3254a5c4", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "436e83f7d9baa53ed23151891a30e40d", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_DBSCAN"]}