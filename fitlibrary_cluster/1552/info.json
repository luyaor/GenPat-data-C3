{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \t@Test\r \tpublic void passesWithNullResult() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestEnsure.java", "methodNumberAfterChange": 0, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\t}\r", "+\t\r", "-\t\tresultWhenNoException(null,true);\r", "+\t\tcontext.checking(new Expectations() {{\r", "+\t\t\tone(action).run(); will(returnValue(null));\r", "+\t\t}});\r", "+\t\tassertThat(globalActionScope.ensure(action),is(true));\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \t\r \t@Test\r \tpublic void passesWithNullResult() throws Exception", "id": "46ef3430625b36fc78324aa546458525", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \t@Test\r \tpublic void passesWithTrueResult() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestEnsure.java", "methodNumberAfterChange": 1, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\t\tresultWhenNoException(true,true);\r", "+\t\tcontext.checking(new Expectations() {{\r", "+\t\t\tone(action).run(); will(returnValue(true));\r", "+\t\t}});\r", "+\t\tassertThat(globalActionScope.ensure(action),is(true));\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \t@Test\r \tpublic void passesWithTrueResult() throws Exception", "id": "49df602d28f3de4c6c50a6b618980e60", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \t@Test\r \tpublic void failsWithFalseResult() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestEnsure.java", "methodNumberAfterChange": 2, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\t\tresultWhenNoException(false,false);\r", "-\t}\r", "+\t\tcontext.checking(new Expectations() {{\r", "+\t\t\tone(action).run(); will(returnValue(false));\r", "+\t\tassertThat(globalActionScope.ensure(action),is(false));\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \t@Test\r \tpublic void failsWithFalseResult() throws Exception", "id": "b3b7ba6dd3c6253bdd6270e6733880df", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "1e48314b6d3d06b4758a323fcf314285", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"]}