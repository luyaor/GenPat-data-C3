{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0be935fd59dc7a7c547b621fcd4b2138", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21ee2b001f86fba7e0673d24ffb6c288", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/interceptor/ErrorCollector.java", "commitBeforeChange": "23cee0d142da2296c7a1dad7129da784ad9eb3f7", "commitAfterChange": "b4a19d903c5ec7e5ddad0776e8f611338b58be08", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic <T> void checkThat(T value, Matcher<T> matcher)", "signatureAfterChange": "  \tpublic <T> void checkThat(final T value, final Matcher<T> matcher)", "diff": ["-\t// TODO (Jun 15, 2009 10:00:10 PM): is this same as assertThat?", "-\tpublic <T> void checkThat(T value, Matcher<T> matcher) {", "-\t\t// TODO (Jun 15, 2009 10:01:28 PM): checkReturns", "-\t\ttry {", "-\t\t\tassertThat(value, matcher);", "-\t\t} catch (AssertionError e) {", "-\t\t\taddError(e);", "-\t\t}", "+\tpublic <T> void checkThat(final T value, final Matcher<T> matcher) {", "+\t\tcheckSucceeds(new Callable<Object>() {", "+\t\t\tpublic Object call() throws Exception {", "+\t\t\t\tassertThat(value, matcher);", "+\t\t\t\treturn value;", "+\t\t\t}", "+\t\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41a4aec2ed10ba7a8739a3aa7b4de129", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/interceptor/ErrorCollector.java", "commitBeforeChange": "50b77b1f3108aa77af0906162d552e513936c322", "commitAfterChange": "e9e9b31a483fc562af4ebf5c59e7c89a8ef83459", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic <T> void checkThat(T value, Matcher<T> matcher)", "signatureAfterChange": "  \tpublic <T> void checkThat(final T value, final Matcher<T> matcher)", "diff": ["-\t// TODO (Jun 15, 2009 10:00:10 PM): is this same as assertThat?", "-\tpublic <T> void checkThat(T value, Matcher<T> matcher) {", "-\t\t// TODO (Jun 15, 2009 10:01:28 PM): checkReturns", "-\t\ttry {", "-\t\t\tassertThat(value, matcher);", "-\t\t} catch (AssertionError e) {", "-\t\t\taddError(e);", "-\t\t}", "+\tpublic <T> void checkThat(final T value, final Matcher<T> matcher) {", "+\t\tcheckSucceeds(new Callable<Object>() {", "+\t\t\tpublic Object call() throws Exception {", "+\t\t\t\tassertThat(value, matcher);", "+\t\t\t\treturn value;", "+\t\t\t}", "+\t\t});"]}]}