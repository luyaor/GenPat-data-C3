{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8134de2134250cd799c0bab22df5e77f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4eeaf1154d50a59ca27f6ce61d1b16ae", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprotected void printFailures(Result result)", "signatureAfterChange": "      protected void printFailures(Result result)", "diff": ["-\tprotected void printFailures(Result result) {", "-\t\tList<Failure> failures= result.getFailures();", "-\t\tif (failures.size() == 0)", "-\t\t\treturn;", "-\t\tif (failures.size() == 1)", "-\t\t\tgetWriter().println(\"There was \" + failures.size() + \" failure:\");", "-\t\telse", "-\t\t\tgetWriter().println(\"There were \" + failures.size() + \" failures:\");", "-\t\tint i= 1;", "-\t\tfor (Failure each : failures)", "-\t\t\tprintFailure(each, \"\" + i++);", "-\t}", "+    protected void printFailures(Result result) {", "+        List<Failure> failures = result.getFailures();", "+        if (failures.size() == 0) {", "+            return;", "+        }", "+        if (failures.size() == 1) {", "+            getWriter().println(\"There was \" + failures.size() + \" failure:\");", "+        } else {", "+            getWriter().println(\"There were \" + failures.size() + \" failures:\");", "+        }", "+        int i = 1;", "+        for (Failure each : failures) {", "+            printFailure(each, \"\" + i++);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2c4263ffdf112af723cfd45a4c2c260", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/textui/ResultPrinter.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tprotected void printDefects(Enumeration<TestFailure> booBoos, int count, String type)", "signatureAfterChange": "      protected void printDefects(Enumeration<TestFailure> booBoos, int count, String type)", "diff": ["-\t", "-\tprotected void printDefects(Enumeration<TestFailure> booBoos, int count, String type) {", "-\t\tif (count == 0) return;", "-\t\tif (count == 1)", "-\t\t\tgetWriter().println(\"There was \" + count + \" \" + type + \":\");", "-\t\telse", "-\t\t\tgetWriter().println(\"There were \" + count + \" \" + type + \"s:\");", "-\t\tfor (int i= 1; booBoos.hasMoreElements(); i++) {", "-\t\t\tprintDefect(booBoos.nextElement(), i);", "-\t\t}", "-\t}", "+    protected void printDefects(Enumeration<TestFailure> booBoos, int count, String type) {", "+        if (count == 0) return;", "+        if (count == 1) {", "+            getWriter().println(\"There was \" + count + \" \" + type + \":\");", "+        } else {", "+            getWriter().println(\"There were \" + count + \" \" + type + \"s:\");", "+        }", "+        for (int i = 1; booBoos.hasMoreElements(); i++) {", "+            printDefect(booBoos.nextElement(), i);", "+        }", "+    }"]}]}