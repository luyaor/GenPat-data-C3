{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7819215d15e98e58c2753f9ab393ed05", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a5c6755385cfe362dea353edcd773d2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/RunAfters.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void evaluate() throws Throwable", "signatureAfterChange": "      @Override     public void evaluate() throws Throwable", "diff": ["-            fNext.evaluate();", "+            next.evaluate();", "-            for (FrameworkMethod each : fAfters) {", "+            for (FrameworkMethod each : afters) {", "-                    each.invokeExplosively(fTarget);", "+                    each.invokeExplosively(target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e456e11ae59a068db5e5f71d7b1e68f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "41092ce4e01cc57d8aa1911e2f1169e0f355b1ae", "commitAfterChange": "3e08f69912d69189e895c279b1bece0c7c0840f4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          protected TestClassRunnerForParameters(Class<?> type, String pattern, int index, Object[] parameters) throws InitializationError", "signatureAfterChange": "         @Deprecated         protected TestClassRunnerForParameters(Class<?> type, String pattern, int index, Object[] parameters) throws InitializationError", "diff": ["+         */", "+        @Deprecated", "-            super(type);", "+            this(createTestWithParameters(new TestClass(type), pattern, index,", "+                    parameters));", "+        }", "-            fParameters = parameters;", "-            fName = nameFor(pattern, index, parameters);"]}]}