{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2907fc95411602613a166de0ddd6db12", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "146bfc68c44383c6fcbdce8351106c52", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/Parameterized.java", "commitBeforeChange": "db89759c22060a89f6750e2e92ce93072eace561", "commitAfterChange": "521fdb5aae536bd5055f6d0e4f09c5a7bdb5799f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t\tpublic RunAllParameterMethods(Class<?> klass) throws Exception", "signatureAfterChange": "  \tpublic Parameterized(Class<?> klass) throws Exception", "diff": ["-", "-\t\tpublic RunAllParameterMethods(Class<?> klass) throws Exception {", "-\t\t\tsuper(klass.getName());", "-\t\t\tfKlass= klass;", "-\t\t\tint i= 0;", "-\t\t\tfor (final Object each : getParametersList()) {", "-\t\t\t\tif (each instanceof Object[])", "-\t\t\t\t\tsuper.add(new TestClassRunnerForParameters(klass, (Object[])each, i++));", "-\t\t\t\telse", "-\t\t\t\t\tthrow new Exception(String.format(\"%s.%s() must return a Collection of arrays.\", fKlass.getName(), getParametersMethod().getName()));", "-\t\t\t}", "-\t\t}", "+", "+\tpublic Parameterized(Class<?> klass) throws Exception {", "+\t\tsuper(klass.getName());", "+\t\tfTestClass= new TestClass(klass);", "+\t\t", "+\t\tMethodValidator methodValidator= new MethodValidator(fTestClass);", "+\t\tmethodValidator.validateStaticMethods();", "+\t\tmethodValidator.validateInstanceMethods();", "+\t\tmethodValidator.assertValid();", "+\t\t", "+\t\tint i= 0;", "+\t\tfor (final Object each : getParametersList()) {", "+\t\t\tif (each instanceof Object[])", "+\t\t\t\tadd(new TestClassRunnerForParameters(fTestClass, (Object[])each, i++));", "+\t\t\telse", "+\t\t\t\tthrow new Exception(String.format(\"%s.%s() must return a Collection of arrays.\", fTestClass.getName(), getParametersMethod().getName()));", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "534b137a01deafc03b4c03017fdb24ee", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "6664bd272c43bcdf00f9ef9ce6f2d73af82036b1", "commitAfterChange": "d6c79c0f626afd12506b6a5a672cdec84683c3ca", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static MaxCore createFresh()", "signatureAfterChange": " \tpublic static MaxCore createFresh()", "diff": ["-", "+public class MaxCore {", "-\t\treturn new MaxCore();", "+\t\t// TODO (Mar 2, 2009 11:38:46 PM): exposed implementation detail", "+\t\tFile file= new File(\"MaxCore.ser\");", "+\t\tif (file.exists())", "+\t\t\tfile.delete();", "+", "+\t\ttry {", "+\t\t\treturn new MaxCore();", "+\t\t} catch (Throwable e) {", "+\t\t\t// TODO Auto-generated catch block", "+\t\t\te.printStackTrace();", "+\t\t\tthrow new RuntimeException(e);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6652f774ae33e2906e3a93e62d7b3b35", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "6eb76c8b08c738823546fe5b935b653951fc773e", "commitAfterChange": "474df716f498aa2695c422cceb3e46cad999e972", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static MaxCore createFresh()", "signatureAfterChange": " \tpublic static MaxCore createFresh()", "diff": ["-", "+public class MaxCore {", "-\t\treturn new MaxCore();", "+\t\t// TODO (Mar 2, 2009 11:38:46 PM): exposed implementation detail", "+\t\tFile file= new File(\"MaxCore.ser\");", "+\t\tif (file.exists())", "+\t\t\tfile.delete();", "+", "+\t\ttry {", "+\t\t\treturn new MaxCore();", "+\t\t} catch (Throwable e) {", "+\t\t\t// TODO Auto-generated catch block", "+\t\t\te.printStackTrace();", "+\t\t\tthrow new RuntimeException(e);", "+\t\t}"]}]}