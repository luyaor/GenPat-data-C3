{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d415d2fc8e6845c38455343f5643cb5f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2178f3788485ba60698a01cf466a2dc0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/extensions/RepeatedTest.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic RepeatedTest(Test test, int repeat)", "signatureAfterChange": "      public RepeatedTest(Test test, int repeat)", "diff": ["-\tpublic RepeatedTest(Test test, int repeat) {", "-\t\tsuper(test);", "-\t\tif (repeat < 0)", "-\t\t\tthrow new IllegalArgumentException(\"Repetition count must be >= 0\");", "-\t\tfTimesRepeat= repeat;", "-\t}", "+    public RepeatedTest(Test test, int repeat) {", "+        super(test);", "+        if (repeat < 0) {", "+            throw new IllegalArgumentException(\"Repetition count must be >= 0\");", "+        }", "+        fTimesRepeat = repeat;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b97c951b50480eb66e20f86352b3d0e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "  \tstatic private void failSame(String message)", "signatureAfterChange": "      static private void failSame(String message)", "diff": ["-\tstatic private void failSame(String message) {", "-\t\tString formatted= \"\";", "-\t\tif (message != null)", "-\t\t\tformatted= message + \" \";", "-\t\tfail(formatted + \"expected not same\");", "-\t}", "+", "+    static private void failSame(String message) {", "+        String formatted = \"\";", "+        if (message != null) {", "+            formatted = message + \" \";", "+        }", "+        fail(formatted + \"expected not same\");", "+    }"]}]}