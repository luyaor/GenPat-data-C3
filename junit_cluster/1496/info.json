{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "52d70dc24863307db7b708e290e95c3b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "049e27680f539ffdf3de520fc6f3d34d", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/runner/TextFeedbackTest.java", "commitBeforeChange": "9a866f6c679298e64194fbfa5ef82262a792824d", "commitAfterChange": "9a629cbfbc732e6b3feb382bd10e872f84ddc510", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void testNormalOperation()", "signatureAfterChange": " \t \tpublic void testTwoTests()", "diff": ["-\tpublic void testNormalOperation() {", "-\t\tOutputStream output= new ByteArrayOutputStream();", "-\t\tPrintStream writer= new PrintStream(output);", "-\t\tTestRunner runner= new TestRunner(writer);", "-\t\tCollator c= Collator.getInstance(); ", "+\t", "+\tpublic void testTwoTests() {", "+\t\tString expected= expected(new String[]{\"..\", \"Time: 0\", \"\", \"OK (2 tests)\", \"\"});", "+\t\tTestSuite suite = new TestSuite();", "+\t\tsuite.addTest(new TestCase() { public void runTest() {}});", "+\t\tsuite.addTest(new TestCase() { public void runTest() {}});", "+\t\trunner.doRun(suite);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bc13ad463bc7ac6d4de855e8468b342", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/AllTests.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Test suite ( )", "signatureAfterChange": " \tpublic static Test suite ( )", "diff": ["-\t\tsuite.addTest(new TestSuite(ExtensionTest.class));", "-\t    suite.addTest(new TestSuite(TestCaseTest.class));", "-\t    suite.addTest(SuiteTest.suite()); // Tests suite building, so can't use automatic test extraction ", "-\t\tsuite.addTest(new TestSuite(ExceptionTestCaseTest.class));", "-\t\tsuite.addTest(new TestSuite(TestListenerTest.class));", "-\t\tsuite.addTest(new TestSuite(ActiveTestTest.class));", "-\t\tsuite.addTest(new TestSuite(AssertTest.class));", "-\t\tsuite.addTest(new TestSuite(TextRunnerTest.class));", "-\t\t", "-\t\tif (!BaseTestRunner.inVAJava())", "+\t\tsuite.addTestSuite(ExtensionTest.class);", "+\t\tsuite.addTestSuite(TestCaseTest.class);", "+\t\tsuite.addTest(SuiteTest.suite()); // Tests suite building, so can't use automatic test extraction ", "+\t\tsuite.addTestSuite(ExceptionTestCaseTest.class);", "+\t\tsuite.addTestSuite(TestListenerTest.class);", "+\t\tsuite.addTestSuite(ActiveTestTest.class);", "+\t\tsuite.addTestSuite(AssertTest.class);", "+\t\tsuite.addTestSuite(StackFilterTest.class);", "+\t\tsuite.addTestSuite(SorterTest.class);", "+\t\tif (!BaseTestRunner.inVAJava()) {", "+\t\t\tsuite.addTestSuite(TextRunnerTest.class);", "-\t    return suite;", "+\t\t}", "+\t\treturn suite;"]}]}