{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0329c3166a07ccb7c2bf14c2c819935", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "878a9b29686b269c16066a1021452ba9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactoryFactory.java", "commitBeforeChange": "5edfb4447b609c178d63a3d991172861076d143b", "commitAfterChange": "34336085d5aba69c997f8e6b244531561afebcd4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Filter createFilter(Class<? extends FilterFactory> filterFactoryClass, FilterFactoryParams args)             throws FilterFactory.FilterNotCreatedException, FilterFactoryNotCreatedException", "signatureAfterChange": "     public Filter createFilter(Class<? extends FilterFactory> filterFactoryClass, FilterFactoryParams params)             throws FilterFactoryNotCreatedException", "diff": ["-    public Filter createFilter(Class<? extends FilterFactory> filterFactoryClass, FilterFactoryParams args)", "-            throws FilterFactory.FilterNotCreatedException, FilterFactoryNotCreatedException {", "-        return createFilter(filterFactoryClass.getName(), args);", "+    public Filter createFilter(Class<? extends FilterFactory> filterFactoryClass, FilterFactoryParams params)", "+            throws FilterFactoryNotCreatedException {", "+        FilterFactory filterFactory = createFilterFactory(filterFactoryClass);", "+", "+        return filterFactory.createFilter(params);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7c73094ee1a93bd80cce162df957d17", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactoryFactory.java", "commitBeforeChange": "5edfb4447b609c178d63a3d991172861076d143b", "commitAfterChange": "34336085d5aba69c997f8e6b244531561afebcd4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Filter createFilter(String filterFactoryFqcn, FilterFactoryParams args)             throws FilterFactory.FilterNotCreatedException, FilterFactoryNotCreatedException", "signatureAfterChange": "     public Filter createFilter(String filterFactoryFqcn, FilterFactoryParams params)             throws FilterFactoryNotCreatedException", "diff": ["-    public Filter createFilter(String filterFactoryFqcn, FilterFactoryParams args)", "-            throws FilterFactory.FilterNotCreatedException, FilterFactoryNotCreatedException {", "-        return args.apply(filterFactoryFqcn);", "+    public Filter createFilter(String filterFactoryFqcn, FilterFactoryParams params)", "+            throws FilterFactoryNotCreatedException {", "+        FilterFactory filterFactory = createFilterFactory(filterFactoryFqcn);", "+", "+        return filterFactory.createFilter(params);", "+    }"]}]}