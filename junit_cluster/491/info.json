{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba9e871f89d361cabdbf61ebb353d861", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "017869bb8ca11f0bc1f65c78017d66e7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "a07f1be1bc7eb7f7d757da48d0a3110452cca4d4", "commitAfterChange": "095d3f8df0708f98d41f5894a892388b6985c44f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void validateConstructor(List<Throwable> errors)", "signatureAfterChange": " \t \tprivate void validateConstructor(List<Throwable> errors)", "diff": ["+\t", "+\tprivate void validateConstructor(List<Throwable> errors) {", "+\t\tvalidateOnlyOneConstructor(errors);", "+\t\tvalidateZeroArgConstructor(errors);", "+\t}", "-\tprotected void validateConstructor(List<Throwable> errors) {", "-\t\tConstructor<?>[] constructors= getTestClass().getJavaClass()", "-\t\t\t\t.getConstructors();", "-\t\tif (!(constructors.length == 1 && ", "-\t\t\t\tconstructors[0].getParameterTypes().length == 0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c68f0614193e48bf1fb610eac672f69", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "b0b34427e9e644868f2b63d40d0556c35e818a63", "commitAfterChange": "dd9ee989f3f322c7c6793f95a73b28f3cc11c11e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void validateNoArgConstructor(List<Throwable> errors)", "signatureAfterChange": " \tprotected void validateConstructor(List<Throwable> errors)", "diff": ["-\tprotected void validateNoArgConstructor(List<Throwable> errors) {", "+\tprotected void validateConstructor(List<Throwable> errors) {", "-\t\tif (constructors.length != 1 || ", "-\t\t\t\tconstructors[0].getParameterTypes().length > 0) {", "+\t\tif (!(constructors.length == 1 && ", "+\t\t\t\tconstructors[0].getParameterTypes().length == 0)) {"]}]}