{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5bf73f2f265ada5d8303704aeb7bf3fe", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cfbb920b0286e7bcd6dae6a7146c209", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "7b5641996d486bbcb33f13a9130821303e1e7d89", "commitAfterChange": "1ad3a59952f3528914d1225d51bbb04adb62c22f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic void evaluate() throws Throwable", "signatureAfterChange": "  \t@Override \tpublic void evaluate() throws Throwable", "diff": ["-\t\tThread thread= new Thread() {", "-\t\t\t@Override", "-\t\t\tpublic void run() {", "-\t\t\t\ttry {", "-\t\t\t\t\tfNext.evaluate();", "-\t\t\t\t\tfFinished= true;", "-\t\t\t\t} catch (Throwable e) {", "-\t\t\t\t\tfThrown= e;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t};", "+\t\tStatementThread thread= evaluateStatement();", "+\t\tif (!thread.fFinished)", "+\t\t\tthrowExceptionForUnfinishedThread(thread);", "+\t}", "-\t\tif (fFinished)", "-\t\t\treturn;", "-\t\tif (fThrown != null)", "-\t\t\tthrow fThrown;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb6f1103b64129405fac5bb6ece07f77", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "7b5641996d486bbcb33f13a9130821303e1e7d89", "commitAfterChange": "1ad3a59952f3528914d1225d51bbb04adb62c22f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t\t\t@Override \t\t\tpublic void run()", "signatureAfterChange": "  \t\t@Override \t\tpublic void run()", "diff": ["-\t\tThread thread= new Thread() {", "-\t\t\t@Override", "-\t\t\tpublic void run() {", "-\t\t\t\ttry {", "-\t\t\t\t\tfNext.evaluate();", "-\t\t\t\t\tfFinished= true;", "-\t\t\t\t} catch (Throwable e) {", "-\t\t\t\t\tfThrown= e;", "-\t\t\t\t}", "-\t\t\t}", "+", "+\t\t@Override", "+\t\tpublic void run() {", "+\t\t\ttry {", "+\t\t\t\tfStatement.evaluate();", "+\t\t\t\tfFinished= true;", "+\t\t\t} catch (InterruptedException e) {", "+\t\t\t\t//don't log the InterruptedException", "+\t\t\t} catch (Throwable e) {", "+\t\t\t\tfExceptionThrownByOriginalStatement= e;", "+\t\t\t}", "+\t\t}"]}]}