{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e916c31a7b4e5476afa179c0b39d914a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ebcdefbe629cfe257d0039156e09857", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/ErrorReportingRunner.java", "commitBeforeChange": "95bd62b2ffd80394d1a17e9078a4d79478423030", "commitAfterChange": "9c8d59d9869280a698c3f3a119eb69f0e897c94b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic ErrorReportingRunner(Description description, Throwable cause)", "signatureAfterChange": "  \tpublic ErrorReportingRunner(Class<?> type, Throwable cause)", "diff": ["-\tpublic ErrorReportingRunner(Description description, Throwable cause) {", "-\t\tfDescription= description;", "+", "+\tpublic ErrorReportingRunner(Class<?> type, Throwable cause) {", "+\t\t// TODO: (Dec 10, 2007 9:35:57 PM) Is this the only time calling super(null)?", "+", "+\t\tsuper(null);", "+\t\t// TODO: (Dec 10, 2007 9:41:50 PM) remove fClass", "+", "+\t\tfClass= type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8ce8c1d238e3147072b7e7222ec9405", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/TheoryMethod.java", "commitBeforeChange": "85c570ea92f0ee7d17573966dd7f94f4c3b0b61a", "commitAfterChange": "79d696c81cb996e6a199b062c0ae1f53408d5ebd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Override \tpublic void invoke(Object test) throws IllegalArgumentException, \t\t\tIllegalAccessException, InvocationTargetException", "signatureAfterChange": "  \t@Override \tpublic void invoke(Roadie context) \t\t\tthrows IllegalArgumentException, IllegalAccessException, \t\t\tInvocationTargetException", "diff": ["-\tpublic void invoke(Object test) throws IllegalArgumentException,", "-\t\t\tIllegalAccessException, InvocationTargetException {", "-\t\tint runCount= 0;", "+", "+\t@Override", "+\tpublic void invoke(Roadie context)", "+\t\t\tthrows IllegalArgumentException, IllegalAccessException,", "+\t\t\tInvocationTargetException {", "-\t\t\trunCount+= runWithDiscoveredParameterValues(test,", "-\t\t\t\t\tnew PotentialMethodValues(), ParameterSignature", "-\t\t\t\t\t\t\t.signatures(fMethod));", "+\t\t\trunWithDiscoveredParameterValues(context, new PotentialMethodValues(),", "+\t\t\t\t\tParameterSignature.signatures(fMethod));", "-\t\tif (runCount == 0)", "+\t\tif (successes == 0)"]}]}