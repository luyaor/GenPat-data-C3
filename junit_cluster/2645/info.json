{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5b56b6cc27ace1d0bc6592653a2d55a0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5568e1a82dc4eef5edb8417b139395eb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/Timeout.java", "commitBeforeChange": "5da2d76bcf619ac0bd8c6ff5f6fc6b807978da8a", "commitAfterChange": "11039f25897fe4daba274292a49a078afa87991b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Deprecated     public Timeout(int millis)", "signatureAfterChange": "     @Deprecated     public Timeout(int millis)", "diff": ["-        this((long) millis);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7706a164e9b64a538447612a614180d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "94aa692b0489d1fabd31c779c1a700a3b0890a24", "commitAfterChange": "544e5ba3a3034932879604b72fb6f8526d27eb50", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void throwTimeoutException(StatementThread thread) throws Exception", "signatureAfterChange": "      private void throwTimeoutException(StatementThread thread) throws Exception", "diff": ["-                \"test timed out after %d milliseconds\", fTimeout));", "+                \"test timed out after %d milliseconds\", TimeUnit.MILLISECONDS.convert(fTimeout, fTimeUnit)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e84620f15b182c771c66eed5f3cebaee", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "ce280f0afd532351d5783cf93d08526181eee4c8", "commitAfterChange": "cec8e3ed1246c289ae156c4418d2e224bd793f4b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic Categories(Class<?> klass, RunnerBuilder builder) \t\t\tthrows InitializationError", "signatureAfterChange": "  \tpublic Categories(Class<?> klass, RunnerBuilder builder) \t\t\tthrows InitializationError", "diff": ["-\t\t\tfilter(new CategoryFilter(getCategory(klass)));", "+\t\t\tfilter(new CategoryFilter(getIncludedCategory(klass),", "+\t\t\t\t\tgetExcludedCategory(klass)));"]}]}