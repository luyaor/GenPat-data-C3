{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2fae9c6e7a391c85477e1667e52f5c33", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "225a6a4f92e827e97f5d5704ae8c3dab", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/manipulation/Sorter.java", "commitBeforeChange": "8964b10541f840e559a3308a043b64a8c1f6af57", "commitAfterChange": "42beed3ad166a9cceefc59f6c79a16844cae0d02", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void apply(Runner runner)", "signatureAfterChange": " \tpublic void apply(Object object)", "diff": ["-\tpublic void apply(Runner runner) {", "-\t\tif (runner instanceof Sortable) {", "-\t\t\tSortable sortable = (Sortable) runner;", "+\tpublic void apply(Object object) {", "+\t\tif (object instanceof Sortable) {", "+\t\t\tSortable sortable = (Sortable) object;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a170ea4f2aca1cc65a9928fb2277c03", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TestName.java", "commitBeforeChange": "4041354a3a7629b74970e0624b7564736c20e1e3", "commitAfterChange": "d21d4edb6a5c55a3d8930dd26762a26cad67d827", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \t@Override \tpublic void starting(FrameworkMethod method)", "signatureAfterChange": "  \t@Override \tpublic void starting(Description d)", "diff": ["-\tpublic void starting(FrameworkMethod method) {", "-\t\tfName= method.getName();", "+\tpublic void starting(Description d) {", "+\t\tfName= d.getMethodName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8add520d0f0e713e085ea2ce2c509a79", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestElement.java", "commitBeforeChange": "a4c68872a91681139d404825c2bb04bd5ba804dd", "commitAfterChange": "f0ef837a40922ac08c608661385abf71732975d3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic boolean runBefores(EachTestNotifier roadie, Object target)", "signatureAfterChange": "  \tpublic boolean runBefores(FailureListener listener, Object target)", "diff": ["-\tpublic boolean runBefores(EachTestNotifier roadie, Object target) {", "-\t\t// TODO: (Oct 5, 2007 11:29:38 AM) just throw the exception!  Should work the same way", "-\t", "+\tpublic boolean runBefores(FailureListener listener, Object target) {", "-\t\t\troadie.addFailure(e);", "+\t\t\tlistener.addFailure(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9503da08063419ba183fb0de02fa2977", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/MethodSorter.java", "commitBeforeChange": "35916619de9d9c3e7ec3d793ab3072c9e78db258", "commitAfterChange": "7924760d2d64f5f7651e9e57d1ca01e1bcce74e0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private static Comparator<Method> getSorter(SortMethodsWith sortMethodsWith)", "signatureAfterChange": "      private static Comparator<Method> getSorter(FixMethodOrder fixMethodOrder)", "diff": ["-    private static Comparator<Method> getSorter(SortMethodsWith sortMethodsWith) {", "-        if (sortMethodsWith == null) {", "+    private static Comparator<Method> getSorter(FixMethodOrder fixMethodOrder) {", "+        if (fixMethodOrder == null) {", "-        return sortMethodsWith.value().getComparator();", "+        return fixMethodOrder.value().getComparator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9803a2437e5ce7eea879d157a2d6bc25", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java", "commitBeforeChange": "a4c68872a91681139d404825c2bb04bd5ba804dd", "commitAfterChange": "f0ef837a40922ac08c608661385abf71732975d3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t\t@Override \t\tprotected void runWithIncompleteAssignment(Assignments incomplete, EachTestNotifier notifier) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tThrowable", "signatureAfterChange": "  \t\t@Override \t\tprotected void runWithIncompleteAssignment(Assignments incomplete, FailureListener listener) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tThrowable", "diff": ["-\t\tprotected void runWithIncompleteAssignment(Assignments incomplete, EachTestNotifier notifier)", "+\t\tprotected void runWithIncompleteAssignment(Assignments incomplete, FailureListener listener)", "-\t\t\t\trunWithAssignment(incomplete.assignNext(guessers.remove(0)), notifier);", "+\t\t\t\trunWithAssignment(incomplete.assignNext(guessers.remove(0)), listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdf6e6f5ec819bcfad29eeef59197430", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "4dcf3a499652b3c089d91e209c6f01313115ff76", "commitAfterChange": "a916d4133c7e394130d7953da427aae9917ab92c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprotected void printFailure(Failure failure, String prefix)", "signatureAfterChange": "  \tprotected void printFailure(TestRunEvent each, String prefix)", "diff": ["-\tprotected void printFailure(Failure failure, String prefix) {", "-\t\tgetWriter().println(prefix + \") \" + failure.getTestHeader());", "-\t\tgetWriter().print(failure.getTrace());", "+\tprotected void printFailure(TestRunEvent each, String prefix) {", "+\t\tgetWriter().println(prefix + \") \" + each.getTestHeader());", "+\t\tgetWriter().print(each.getTrace());"]}]}