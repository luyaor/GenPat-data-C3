{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f6a273b82d14ad3dbf5402fcbefa24b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63383caa1642aa1afe40d23e68627562", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "commitAfterChange": "59b1e2926cdebfd257c6c091ee2bd478d8aa04d2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t \tpublic static Assignments allUnassigned(Method testMethod, \t\t\tClass<?> testClass)", "signatureAfterChange": "  \tpublic static Assignments allUnassigned(Method testMethod, \t\t\tClass<?> testClass)", "diff": ["-\t", "+\t\tArrayList<ParameterSignature> signatures= ParameterSignature.signatures(testMethod);", "+\t\tsignatures.addAll(ParameterSignature.signatures(testClass.getConstructors()[0]));", "-\t\t\t\tParameterSignature.signatures(testMethod), testClass);", "+\t\t\t\tsignatures, testClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc5d9789aa156bdcbf911ccdfc33e565", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "4e1018a940699a38673b1861977110e6b558afb1", "commitAfterChange": "4cb9a65f450efa5f2a42128856c7b56e6d283386", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static Assignments allUnassigned(Method testMethod, \t\t\tClass<?> testClass)", "signatureAfterChange": "  \tpublic static Assignments allUnassigned(Method testMethod, \t\t\tClass<?> testClass)", "diff": ["-\t\tArrayList<ParameterSignature> signatures= ParameterSignature.signatures(testMethod);", "-\t\tsignatures.addAll(ParameterSignature.signatures(testClass.getConstructors()[0]));", "+\t\tList<ParameterSignature> signatures= ParameterSignature.signatures(testClass.getConstructors()[0]);", "+\t\tsignatures.addAll(ParameterSignature.signatures(testMethod));"]}]}