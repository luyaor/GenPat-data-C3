{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f2775e7882180d5bf9c8862e8210ff16", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b10e1379fc6950ff3e27a63518ea68d8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate void addArrayValues(String name, List<PotentialAssignment> list, Object array)", "signatureAfterChange": "      private void addArrayValues(String name, List<PotentialAssignment> list, Object array)", "diff": ["-\tprivate void addArrayValues(String name, List<PotentialAssignment> list, Object array) {", "-\t\tfor (int i= 0; i < Array.getLength(array); i++)", "-\t\t\tlist.add(PotentialAssignment.forValue(name + \"[\" + i + \"]\", Array.get(array, i)));", "-\t}", "+    private void addArrayValues(String name, List<PotentialAssignment> list, Object array) {", "+        for (int i = 0; i < Array.getLength(array); i++) {", "+            list.add(PotentialAssignment.forValue(name + \"[\" + i + \"]\", Array.get(array, i)));", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cebdd075f829651f24f2cdbff47e9656", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/junit/samples/money/MoneyBag.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t@Override \tpublic int hashCode()", "signatureAfterChange": "      @Override     public int hashCode()", "diff": ["-\t}", "-\t@Override", "-\tpublic int hashCode() {", "-\t\tint hash= 0;", "-\t    for (Money each : fMonies)", "-\t        hash^= each.hashCode();", "-\t    return hash;", "-\t}", "+", "+    @Override", "+    public int hashCode() {", "+        int hash = 0;", "+        for (Money each : fMonies) {", "+            hash ^= each.hashCode();", "+        }", "+        return hash;", "+    }"]}]}