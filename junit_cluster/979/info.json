{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "40276f71c2da988b5e2a2311f65e0dbe", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e2d68cdcf704b77ee45d50f302422cf", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/TheoryMethodRunner.java", "commitBeforeChange": "4081076e513e84bb2376f889d4108e64e9a18653", "commitAfterChange": "a58514aec7e843339be24980e92aeeb759327ffb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t\tprotected void runWithCompleteAssignment(Assignments complete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tInvocationTargetException, NoSuchMethodException, Throwable", "signatureAfterChange": "  \t\tprotected void runWithCompleteAssignment(Assignments complete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tInvocationTargetException, NoSuchMethodException, Throwable", "diff": ["-\t\t\t\tthisContext.runProtected(TheoryMethodRunner.this, new Runnable() { // TODO Ugly...", "-\t\t\t\t\tpublic void run() {", "+\t\t\t\tnew BeforeAndAfter(new Anchor() {", "+\t\t\t\t\t@Override", "+\t\t\t\t\tpublic void run(Roadie context) throws Throwable {", "-\t\t\t\t});", "+\t\t\t\t}).run(thisContext); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95314dd90f37b8db168d23dd00345c05", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/MethodRoadie.java", "commitBeforeChange": "45899955c670e52681c3a7655e1b110fa5570eb9", "commitAfterChange": "7a2a3811a762d7988dc153d59c4222a6ab96bf82", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void runTest()", "signatureAfterChange": " \t \tpublic void runTest()", "diff": ["-\t\t// TODO (Jul 2, 2007 4:54:13 PM):  duplicated in timeout branch?", "-", "-\t\ttry {", "-\t\t\trunBefores();", "-\t\t\trunTestMethod();", "-\t\t} catch (FailedBefore e) {", "-\t\t} finally {", "-\t\t\trunAfters();", "-\t\t}", "+\t\trunBeforesThenTestThenAfters(new Runnable() {", "+\t\t\tpublic void run() {", "+\t\t\t\trunTestMethod();", "+\t\t\t}", "+\t\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d90885e88daeaf5e6393d6e777cd1999", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/Parameterized.java", "commitBeforeChange": "db89759c22060a89f6750e2e92ce93072eace561", "commitAfterChange": "521fdb5aae536bd5055f6d0e4f09c5a7bdb5799f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic Parameterized(final Class<?> klass) throws Exception", "signatureAfterChange": " \t \t@Override \tpublic void run(final RunNotifier notifier)", "diff": ["-\tpublic Parameterized(final Class<?> klass) throws Exception {", "-\t\tsuper(klass, new RunAllParameterMethods(klass));", "+\tpublic void run(final RunNotifier notifier) {", "+\t\tnew ClassRoadie(notifier, fTestClass, getDescription(), new Runnable() {", "+\t\t\tpublic void run() {", "+\t\t\t\trunChildren(notifier);", "+\t\t\t}", "+\t\t}).runProtected();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea890b5fa693742ca6f158e4417c06fe", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "43b0fe352d5bced0c341640d0c630d23f2022a7e", "commitAfterChange": "679e5dd3e4af3115492fabed45ea8c48bfa9d9bf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t\t\tpublic void run()", "signatureAfterChange": "  \t\t@Override \t\tpublic void run(final Roadie context)", "diff": ["-\t\tcontext.runProtected(this, new Runnable() {", "-\t\t\tpublic void run() {", "-\t\t\t\trunInsideBeforeAndAfter(context);", "+", "+\t\t@Override", "+\t\tpublic void run(final Roadie context) {", "+\t\t\tcontext.runProtected(JUnit4MethodRunner.this, new Runnable() {", "+\t\t\t\tpublic void run() {", "+\t\t\t\t\tfNext.run(context);", "+\t\t\t\t}", "+\t\t\t});", "+\t\t}"]}]}