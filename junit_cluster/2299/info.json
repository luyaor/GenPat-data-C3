{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "143adaf3ecebe6ec4dbc6a07ce0aa7db", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ab592ceb2e065858fd6a703560bbfa7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "88e2a7611e0c9e93aefca75056ac52c46fb5799b", "commitAfterChange": "c75dcc28810aeb1c918ee7430981b31f41742ea7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private static <T extends FrameworkMember<T>>  void convertListValuesToBeUnmodifiable(             Map<Class<? extends Annotation>, List<T>> methodsForAnnotations)", "signatureAfterChange": "      private static <T extends FrameworkMember<T>> void convertListValuesToBeUnmodifiable(             Map<Class<? extends Annotation>, List<T>> source, Map<Class<? extends Annotation>, List<T>> target)", "diff": ["-    private static <T extends FrameworkMember<T>>  void convertListValuesToBeUnmodifiable(", "-            Map<Class<? extends Annotation>, List<T>> methodsForAnnotations) {", "-        for (Class<? extends Annotation> clazz : methodsForAnnotations.keySet()) {", "-            methodsForAnnotations.put(clazz, Collections.unmodifiableList(methodsForAnnotations.get(clazz)));", "+    private static <T extends FrameworkMember<T>> void convertListValuesToBeUnmodifiable(", "+            Map<Class<? extends Annotation>, List<T>> source, Map<Class<? extends Annotation>, List<T>> target) {", "+        Set<Class<? extends Annotation>> classes = source.keySet();", "+        for (Class<? extends Annotation> clazz : classes) {", "+            target.put(clazz, Collections.unmodifiableList(source.get(clazz)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f17dc6c57d1eae7d88e7bd896cc652ef", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "df88873d5013e400489550cf15e9b51dc438eb4b", "commitAfterChange": "862f41cbc1757a4783b725c23588d41219735b72", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private static <T extends FrameworkMember<T>> void convertListValuesToBeUnmodifiable(             Map<Class<? extends Annotation>, List<T>> source, Map<Class<? extends Annotation>, List<T>> target)", "signatureAfterChange": "      private static <T extends FrameworkMember<T>> Map<Class<? extends Annotation>, List<T>>             makeDeeplyUnmodifiable(Map<Class<? extends Annotation>, List<T>> source)", "diff": ["-    private static <T extends FrameworkMember<T>> void convertListValuesToBeUnmodifiable(", "-            Map<Class<? extends Annotation>, List<T>> source, Map<Class<? extends Annotation>, List<T>> target) {", "+    private static <T extends FrameworkMember<T>> Map<Class<? extends Annotation>, List<T>>", "+            makeDeeplyUnmodifiable(Map<Class<? extends Annotation>, List<T>> source) {", "+        LinkedHashMap<Class<? extends Annotation>, List<T>> copy =", "+                new LinkedHashMap<Class<? extends Annotation>, List<T>>();", "-            target.put(entry.getKey(), Collections.unmodifiableList(entry.getValue()));", "+            copy.put(entry.getKey(), Collections.unmodifiableList(entry.getValue()));", "+        return Collections.unmodifiableMap(copy);"]}]}