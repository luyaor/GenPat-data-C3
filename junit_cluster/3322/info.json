{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "25e25b814a14603c63953ed120322696", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "722cfc93800663f105a04417245c546e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/experimental/categories/CategoryFilterFactoryTest.java", "commitBeforeChange": "5edfb4447b609c178d63a3d991172861076d143b", "commitAfterChange": "34336085d5aba69c997f8e6b244531561afebcd4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void shouldCreateFilter() throws Exception", "signatureAfterChange": "      @Test     public void shouldCreateFilter() throws Exception", "diff": ["-        Filter filter = categoryFilterFactory.createFilter(CategoryFilterFactoryStub.class.getName());", "+        FilterFactoryParams params = categoryFilterFactory.parseArgs(CategoryFilterFactoryStub.class.getName());", "+        Filter filter = categoryFilterFactory.createFilter(params);", "-        assertThat(filter, is((Filter) null));", "+        assertThat(filter, instanceOf(DummyFilter.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86227c587d22afcc36c611bbb819eb42", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/experimental/categories/CategoryFilterFactoryTest.java", "commitBeforeChange": "5edfb4447b609c178d63a3d991172861076d143b", "commitAfterChange": "34336085d5aba69c997f8e6b244531561afebcd4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void shouldThrowException() throws Exception", "signatureAfterChange": "      @Test     public void shouldThrowException() throws Exception", "diff": ["+        CategoryFilterFactory categoryFilterFactory = new CategoryFilterFactoryStub();", "+", "-        CategoryFilterFactory categoryFilterFactory = new CategoryFilterFactoryStub();", "-        Filter filter = categoryFilterFactory.createFilter(\"NonExistentFilter\");", "-", "-        assertThat(filter, is((Filter) null));", "-    }", "+        categoryFilterFactory.parseArgs(\"NonExistentFilter\");"]}]}