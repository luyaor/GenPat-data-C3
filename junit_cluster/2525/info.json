{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b79dd464d137c57a005054a1d17a4c5e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56bdcdeca3de23d826bd9b2d86cd48b7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/framework/Assert.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tstatic public void assertNotSame(String message, Object expected, Object actual)", "signatureAfterChange": "     static public void assertNotSame(String message, Object expected, Object actual)", "diff": ["-\t */", "-\tstatic public void assertNotSame(String message, Object expected, Object actual) {", "-\t\tif (expected == actual)", "-\t\t\tfailSame(message);", "-\t}", "+     */", "+    static public void assertNotSame(String message, Object expected, Object actual) {", "+        if (expected == actual) {", "+            failSame(message);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed3490afe51b9126decd23a668455123", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/framework/ComparisonCompactor.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic String compact(String message)", "signatureAfterChange": "      public String compact(String message)", "diff": ["-\tpublic String compact(String message) {", "-\t\tif (fExpected == null || fActual == null || areStringsEqual())", "-\t\t\treturn Assert.format(message, fExpected, fActual);", "-\t\tfindCommonPrefix();", "-\t\tfindCommonSuffix();", "-\t\tString expected= compactString(fExpected);", "-\t\tString actual= compactString(fActual);", "-\t\treturn Assert.format(message, expected, actual);", "-\t}", "+    public String compact(String message) {", "+        if (fExpected == null || fActual == null || areStringsEqual()) {", "+            return Assert.format(message, fExpected, fActual);", "+        }", "+        findCommonPrefix();", "+        findCommonSuffix();", "+        String expected = compactString(fExpected);", "+        String actual = compactString(fActual);", "+        return Assert.format(message, expected, actual);", "+    }"]}]}