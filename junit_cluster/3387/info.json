{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b62f500a9caa0f5ef5484b6efd93d623", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3c23afaf493c51530b42b68ba29e10b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/TestIntrospector.java", "commitBeforeChange": "88f0fe3ced24506ddf9791f7a088163f4e7b1f20", "commitAfterChange": "3d7fee93ddc21a6e849c36d5ae58b37b3d189665", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t\tprivate boolean isShadowed(Method method)", "signatureAfterChange": " \t \tprivate boolean isShadowed(Method method, List<Method> results)", "diff": ["-", "-\t\tprivate boolean isShadowed(Method method) {", "-\t\t\tfor (Method each : methods) {", "-\t\t\t\tif (isShadowed(method, each))", "-\t\t\t\t\treturn true;", "-\t\t\t}", "-\t\t\treturn false;", "-\t\t}", "+\t", "+\tprivate boolean isShadowed(Method method, List<Method> results) {", "+\t\tfor (Method each : results) {", "+\t\t\tif (isShadowed(method, each))", "+\t\t\t\treturn true;", "+\t\t}", "+\t\treturn false;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebddf4fb6a215d3d5d8b6ffd9c3c0db4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/TestIntrospector.java", "commitBeforeChange": "6a83bc0f1e5f9839a36910c3a21108bc38367afb", "commitAfterChange": "890b7b977e42360aa8975c8535fc66bfd8d8cb3e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate boolean isShadowed(Method method, List<Method> results)", "signatureAfterChange": "  \t\tprivate boolean isShadowed(Method method)", "diff": ["+", "+\t\tprivate boolean isShadowed(Method method) {", "+\t\t\tfor (Method each : methods) {", "+\t\t\t\tif (isShadowed(method, each))", "+\t\t\t\t\treturn true;", "+\t\t\t}", "+\t\t\treturn false;", "+\t\t}", "-\t", "-\tprivate boolean isShadowed(Method method, List<Method> results) {", "-\t\tfor (Method each : results) {", "-\t\t\tif (isShadowed(method, each))", "-\t\t\t\treturn true;", "-\t\t}", "-\t\treturn false;", "-\t}"]}]}