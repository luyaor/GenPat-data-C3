{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e68fc30d1b04fce627ef8ecf1ab95b15", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a85b231d95b8a1e443711bc2909cd19", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "8b9dfefada78a74b6b1fa34ff0bab298267f8210", "commitAfterChange": "a0eea1357f0a0f4faea1245197f20ceee5ca3a5a", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic static <T> void assertThat(String reason, T actual, \t\t\tMatcher<? super T> matcher)", "signatureAfterChange": " \tpublic static <T> void assertThat(String reason, T actual, \t\t\tMatcher<? super T> matcher)", "diff": ["-\t\tif (!matcher.matches(actual)) {", "-\t\t\tDescription description= new StringDescription();", "-\t\t\tdescription.appendText(reason);", "-\t\t\tdescription.appendText(\"\\nExpected: \");", "-\t\t\tdescription.appendDescriptionOf(matcher);", "-\t\t\tdescription.appendText(\"\\n     got: \");", "-\t\t\tdescription.appendValue(actual);", "-\t\t\tdescription.appendText(\"\\n\");", "-\t\t\tthrow new java.lang.AssertionError(description.toString());", "-\t\t}", "+\t\tMatcherAssert.assertThat(reason, actual, matcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5b4eb8d72be257b99454fa7e5cff0bf", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "c618504adee4bc91b3bd7e0ff06be6e1fa9d88cc", "commitAfterChange": "15815f55d2e9ae567ef8fe0a172f498b87a3a880", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic static <T> void assertThat(String reason, T actual, \t\t\tMatcher<T> matcher)", "signatureAfterChange": " \tpublic static <T> void assertThat(String reason, T actual, \t\t\tMatcher<T> matcher)", "diff": ["-\t\tMatcherAssert.assertThat(reason, actual, matcher);", "+\t\tif (!matcher.matches(actual)) {", "+\t\t\tDescription description= new StringDescription();", "+\t\t\tdescription.appendText(reason);", "+\t\t\tdescription.appendText(\"\\nExpected: \");", "+\t\t\tdescription.appendDescriptionOf(matcher);", "+\t\t\tdescription.appendText(\"\\n     got: \");", "+\t\t\tdescription.appendValue(actual);", "+\t\t\tdescription.appendText(\"\\n\");", "+\t\t\tthrow new java.lang.AssertionError(description.toString());", "+\t\t}"]}]}