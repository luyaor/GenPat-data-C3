{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a1cb1fac91fe4c9e1265722611ec91a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2564f11d084b3e963ba7b7580774da56", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/interceptor/ExpectedException.java", "commitBeforeChange": "3f05aac1da5851a1957c3c9ca46148464e5fd513", "commitAfterChange": "a423117429dc71bf3068eeae38c6443672beda7f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprivate boolean noExpectedException()", "signatureAfterChange": "  \tprivate Matcher<Throwable> hasMessage(Matcher<String> matcher)", "diff": ["-\tprivate boolean noExpectedException() {", "-\t\treturn fType == null && fMessage == null;", "+\tprivate Matcher<Throwable> hasMessage(Matcher<String> matcher) {", "+\t\treturn new FeatureMatcher<Throwable, String>(matcher,", "+\t\t\t\t\"exception with message\", \"getMessage()\") {", "+\t\t\t@Override", "+\t\t\tprotected String featureValueOf(Throwable actual) {", "+\t\t\t\treturn actual.getMessage();", "+\t\t\t}", "+\t\t};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8945adab5358458a31e847172977510b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/interceptor/ExpectedException.java", "commitBeforeChange": "275d17729f7e8ef81711bf3c6fcb150ae2109a21", "commitAfterChange": "d5af0e46c1cd912ef0932ce868517b1e8335531e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprivate boolean noExpectedException()", "signatureAfterChange": "  \tprivate Matcher<Throwable> hasMessage(Matcher<String> matcher)", "diff": ["-\tprivate boolean noExpectedException() {", "-\t\treturn fType == null && fMessage == null;", "+\tprivate Matcher<Throwable> hasMessage(Matcher<String> matcher) {", "+\t\treturn new FeatureMatcher<Throwable, String>(matcher,", "+\t\t\t\t\"exception with message\", \"getMessage()\") {", "+\t\t\t@Override", "+\t\t\tprotected String featureValueOf(Throwable actual) {", "+\t\t\t\treturn actual.getMessage();", "+\t\t\t}", "+\t\t};"]}]}