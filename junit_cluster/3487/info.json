{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e2e7ce930a832fc04c8733f40b80789", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c24989b184bbf23ce00e5a5d1a9092e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "commitAfterChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tprotected Link possiblyExpectingExceptions(TestMethod method, Link next)", "signatureAfterChange": "  \tprotected Statement possiblyExpectingExceptions(TestMethod method, Statement next)", "diff": ["-\tprotected Link possiblyExpectingExceptions(TestMethod method, Link next) {", "+\tprotected Statement possiblyExpectingExceptions(TestMethod method, Statement next) {", "-\t\t\t? new ExpectingException(next, method.getExpectedException())", "+\t\t\t? new ExpectException(next, method.getExpectedException())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b90d0cc12b9316bed343aeb0160a4ad6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprotected Statement possiblyExpectingExceptions(TestMethod method, \t\t\tStatement next)", "signatureAfterChange": "  \tprivate Statement possiblyExpectingExceptions(TestAnnotation annotation, \t\t\tStatement next)", "diff": ["-\tprotected Statement possiblyExpectingExceptions(TestMethod method,", "+\tprivate Statement possiblyExpectingExceptions(TestAnnotation annotation,", "-\t\treturn method.expectsException() ? new ExpectException(next, method", "+\t\treturn annotation.expectsException() ? new ExpectException(next, annotation"]}]}