{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5fbcca1eb466076ad02e455ff536d137", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90ecc6ba6ecd060df24294665fe7dcc6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf", "commitAfterChange": "0128bff582b2d10bffff9ff497c3e6f697958b83", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  \tprivate Statement withTestRules(FrameworkMethod method, Object target, \t\t\tStatement result)", "signatureAfterChange": " \tprivate Statement withTestRules(FrameworkMethod method, Object target, \t\t\tStatement statement)", "diff": ["+\t */", "-\t\t\tStatement result) {", "-\t\treturn TestRule.applyAll(getTestRules(target), result, describeChild(method));", "+\t\t\tStatement statement) {", "+\t\tList<TestRule> testRules= getTestRules(target);", "+\t\treturn testRules.isEmpty() ? statement :", "+\t\t\tnew RunRules(statement, testRules, describeChild(method));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99c2ed5c9114505421d497fb0f20b2f5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf", "commitAfterChange": "0128bff582b2d10bffff9ff497c3e6f697958b83", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate Statement withClassRules(Statement statement)", "signatureAfterChange": " \tprivate Statement withClassRules(Statement statement)", "diff": ["-\t\tfinal List<TestRule> classRules= classRules();", "-\t\tif (classRules.isEmpty()) {", "-\t\t\treturn statement;", "-\t\t}", "-\t\treturn TestRule.applyAll(classRules, statement, getDescription());", "+\t\tList<TestRule> classRules= classRules();", "+\t\treturn classRules.isEmpty() ? statement :", "+\t\t    new RunRules(statement, classRules, getDescription());"]}]}