{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ceaff7853eb241d048b0da2cb8c1fb77", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d6b58282f45c006df104234de357e59", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/MethodRoadie.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate void runBefores() throws FailedBefore", "signatureAfterChange": "      private void runBefores() throws FailedBefore", "diff": ["-\t", "-\tprivate void runBefores() throws FailedBefore {", "-\t\ttry {", "-\t\t\ttry {", "-\t\t\t\tList<Method> befores= fTestMethod.getBefores();", "-\t\t\t\tfor (Method before : befores)", "-\t\t\t\t\tbefore.invoke(fTest);", "-\t\t\t} catch (InvocationTargetException e) {", "-\t\t\t\tthrow e.getTargetException();", "-\t\t\t}", "-\t\t} catch (AssumptionViolatedException e) {", "-\t\t\tthrow new FailedBefore();", "-\t\t} catch (Throwable e) {", "-\t\t\taddFailure(e);", "-\t\t\tthrow new FailedBefore();", "-\t\t}", "-\t}", "+", "+    private void runBefores() throws FailedBefore {", "+        try {", "+            try {", "+                List<Method> befores = fTestMethod.getBefores();", "+                for (Method before : befores) {", "+                    before.invoke(fTest);", "+                }", "+            } catch (InvocationTargetException e) {", "+                throw e.getTargetException();", "+            }", "+        } catch (AssumptionViolatedException e) {", "+            throw new FailedBefore();", "+        } catch (Throwable e) {", "+            addFailure(e);", "+            throw new FailedBefore();", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e159a7ca67fd358ae7963621fc6c901", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/ClassRoadie.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate void runBefores() throws FailedBefore", "signatureAfterChange": "      private void runBefores() throws FailedBefore", "diff": ["-\tprivate void runBefores() throws FailedBefore {", "-\t\ttry {", "-\t\t\ttry {", "-\t\t\t\tList<Method> befores= fTestClass.getBefores();", "-\t\t\t\tfor (Method before : befores)", "-\t\t\t\t\tbefore.invoke(null);", "-\t\t\t} catch (InvocationTargetException e) {", "-\t\t\t\tthrow e.getTargetException();", "-\t\t\t}", "-\t\t} catch (org.junit.internal.AssumptionViolatedException e) {", "-\t\t\tthrow new FailedBefore();", "-\t\t} catch (Throwable e) {", "-\t\t\taddFailure(e);", "-\t\t\tthrow new FailedBefore();", "-\t\t}", "-\t}", "+", "+    private void runBefores() throws FailedBefore {", "+        try {", "+            try {", "+                List<Method> befores = fTestClass.getBefores();", "+                for (Method before : befores) {", "+                    before.invoke(null);", "+                }", "+            } catch (InvocationTargetException e) {", "+                throw e.getTargetException();", "+            }", "+        } catch (org.junit.internal.AssumptionViolatedException e) {", "+            throw new FailedBefore();", "+        } catch (Throwable e) {", "+            addFailure(e);", "+            throw new FailedBefore();", "+        }", "+    }"]}]}