{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95b6f357743dcbdcb9e5a6b99b0605ca", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90f5f5a1360915801d05b0b46e0a331f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/running/classes/ParameterizedTestTest.java", "commitBeforeChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "commitAfterChange": "2807ff63d6b408a927fd3dd684a42a2366677657", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \t \t@Test public void meaningfulFailureWhenParameterListsAreNotArrays()", "signatureAfterChange": "  \t@Test \tpublic void meaningfulFailureWhenParameterListsAreNotArrays()", "diff": ["-\t", "-\t@Test public void meaningfulFailureWhenParameterListsAreNotArrays() {", "-\t\tResult result= JUnitCore.runClasses(WrongElementType.class);", "-\t\tString expected= String.format(\"%s.data() must return a Collection of arrays.\", WrongElementType.class.getName());", "-\t\tassertEquals(expected, result.getFailures().get(0).getMessage());", "+", "+\t@Test", "+\tpublic void meaningfulFailureWhenParameterListsAreNotArrays() {", "+\t\tString expected= String.format(", "+\t\t\t\t\"%s.data() must return a Collection of arrays.\",", "+\t\t\t\tWrongElementType.class.getName());", "+\t\tassertThat(testResult(WrongElementType.class).toString(),", "+\t\t\t\tcontainsString(expected));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6689f6e4d3ad70299d3916475ae8ed0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java", "commitBeforeChange": "982a75011a074ab25f2c96a1c2639c5b1ebb3b18", "commitAfterChange": "5475e12b57f5af0140deffa7f45c75dc47803167", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \t@Test \tpublic void meaningfulFailureWhenParameterListsAreNotArrays()", "signatureAfterChange": "  \t@Test \tpublic void meaningfulFailureWhenParametersAreNotArrays()", "diff": ["-\tpublic void meaningfulFailureWhenParameterListsAreNotArrays() {", "-\t\tString expected= String.format(", "-\t\t\t\t\"%s.data() must return a Collection of arrays.\",", "-\t\t\t\tWrongElementType.class.getName());", "-\t\tassertThat(testResult(WrongElementType.class).toString(),", "-\t\t\t\tcontainsString(expected));", "+\tpublic void meaningfulFailureWhenParametersAreNotArrays() {", "+\t\tassertThat(", "+\t\t\t\ttestResult(WrongElementType.class).toString(),", "+\t\t\t\tcontainsString(\"WrongElementType.data() must return an Iterable of arrays.\"));"]}]}