{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "51bc5f299cd6c31671614f4f113d8165", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "454c7ccebc22b633735f1a9bfd7a4684", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "2ade5fd3aad123d6507b59ed5d48c8f030314f00", "commitAfterChange": "cc8497f28e1d5a46d7940a0b36556154c83d6f7a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void addSinglePointMethods(ParameterSignature sig,             List<PotentialAssignment> list)", "signatureAfterChange": "      private void addSinglePointMethods(ParameterSignature sig, List<PotentialAssignment> list)", "diff": ["-    private void addSinglePointMethods(ParameterSignature sig,", "-            List<PotentialAssignment> list) {", "+    private void addSinglePointMethods(ParameterSignature sig, List<PotentialAssignment> list) {", "-            if (sig.canAcceptType(dataPointMethod.getType())) {", "-                try {", "-                    list.add(PotentialAssignment.forValue(dataPointMethod.getName(), dataPointMethod.invokeExplosively(null)));", "-                } catch (Throwable e) {", "-                    // ignore and move on", "-                }", "+            Object value;", "+            ", "+            try {", "+                value = dataPointMethod.invokeExplosively(null);", "+            } catch (Throwable e) {", "+                // ignore and move on", "+                continue;", "+            }", "+                ", "+            if (sig.canAcceptValue(value)) {", "+                list.add(PotentialAssignment.forValue(dataPointMethod.getName(), value));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88e2e8ca186496dafd8e2f51d4a0104a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "2ade5fd3aad123d6507b59ed5d48c8f030314f00", "commitAfterChange": "cc8497f28e1d5a46d7940a0b36556154c83d6f7a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "          private void addSinglePointFields(ParameterSignature sig,             List<PotentialAssignment> list)", "signatureAfterChange": "      private void addSinglePointFields(ParameterSignature sig, List<PotentialAssignment> list)", "diff": ["-    private void addSinglePointFields(ParameterSignature sig,", "-            List<PotentialAssignment> list) {", "+    private void addSinglePointFields(ParameterSignature sig, List<PotentialAssignment> list) {", "-            Class<?> type = field.getType();", "-            if (sig.canAcceptType(type)) {", "-                list.add(PotentialAssignment.forValue(field.getName(), getStaticFieldValue(field)));", "+            Object value = getStaticFieldValue(field);", "+            ", "+            if (sig.canAcceptValue(value)) {", "+                list.add(PotentialAssignment.forValue(field.getName(), value));"]}]}