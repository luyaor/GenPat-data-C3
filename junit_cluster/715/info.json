{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "389932e71a7ffe42cd6cee0ca246958a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f7e3df89486fb0b05ada7cc0903bbb9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "248bdb8248d80ac57d8b485ef73e758103a0c312", "commitAfterChange": "18299dc8f8aaae0e64345795b2884eb7f42ad460", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t@SuppressWarnings(\"unchecked\") \tprivate static List<Object[]> getParametersList(TestClass testClass) \t\t\tthrows Throwable", "signatureAfterChange": "  \t@SuppressWarnings(\"unchecked\") \tprivate static List<Object[]> getParametersList(Class<?> klass) \t\t\tthrows Throwable", "diff": ["-\tprivate static List<Object[]> getParametersList(TestClass testClass)", "+\tprivate static List<Object[]> getParametersList(Class<?> klass)", "-\t\treturn (List<Object[]>) getParametersMethod(testClass)", "+\t\treturn (List<Object[]>) getParametersMethod(klass)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48fecabf708c2ef98105a248bec81875", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "982a75011a074ab25f2c96a1c2639c5b1ebb3b18", "commitAfterChange": "5475e12b57f5af0140deffa7f45c75dc47803167", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t@SuppressWarnings(\"unchecked\") \tprivate List<Object[]> getParametersList(TestClass klass) \t\t\tthrows Throwable", "signatureAfterChange": "  \t@SuppressWarnings(\"unchecked\") \tprivate Iterable<Object[]> getAllParameters() \t\t\tthrows Throwable", "diff": ["-\tprivate List<Object[]> getParametersList(TestClass klass)", "+\tprivate Iterable<Object[]> getAllParameters()", "-\t\treturn (List<Object[]>) getParametersMethod(klass).invokeExplosively(", "-\t\t\t\tnull);", "+\t\tObject parameters= getParametersMethod().invokeExplosively(null);", "+\t\tif (parameters instanceof Iterable)", "+\t\t\treturn (Iterable<Object[]>) parameters;", "+\t\telse", "+\t\t\tthrow parametersMethodReturnedWrongType();"]}]}