{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "26841e69426aa0e761017227c1533e11", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35b696d0b7d26b9c433d1b13ceb20e98", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public Object[] getActualValues(int start, int stop)              throws CouldNotGenerateValueException", "signatureAfterChange": "      public Object[] getActualValues(int start, int stop)              throws CouldNotGenerateValueException", "diff": ["-            values[i - start] = fAssigned.get(i).getValue();", "+            values[i - start] = assigned.get(i).getValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "539b719c80d44fe37b6e62a638e7ca4d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedExceptionMatcherBuilder.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      void add(Matcher<?> matcher)", "signatureAfterChange": "      void add(Matcher<?> matcher)", "diff": ["-        fMatchers.add(matcher);", "+        matchers.add(matcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92ede3da4b21a07da49b83370b9bd4e9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public Object[] getAllArguments() throws CouldNotGenerateValueException", "signatureAfterChange": "      public Object[] getAllArguments() throws CouldNotGenerateValueException", "diff": ["-        return getActualValues(0, fAssigned.size());", "+        return getActualValues(0, assigned.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5d8a05a59522a2b6041ea913f37e48f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedExceptionMatcherBuilder.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      boolean expectsThrowable()", "signatureAfterChange": "      boolean expectsThrowable()", "diff": ["-        return !fMatchers.isEmpty();", "+        return !matchers.isEmpty();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc4138974b720346e1f09cc6d8756ca5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedExceptionMatcherBuilder.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @SuppressWarnings({\"unchecked\", \"rawtypes\"})     private List<Matcher<? super Throwable>> castedMatchers()", "signatureAfterChange": "      @SuppressWarnings({\"unchecked\", \"rawtypes\"})     private List<Matcher<? super Throwable>> castedMatchers()", "diff": ["-        return new ArrayList<Matcher<? super Throwable>>((List) fMatchers);", "+        return new ArrayList<Matcher<? super Throwable>>((List) matchers);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1ca766b39db2ff79db9fe0bae940351", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public Object[] getMethodArguments() throws CouldNotGenerateValueException", "signatureAfterChange": "      public Object[] getMethodArguments() throws CouldNotGenerateValueException", "diff": ["-        return getActualValues(getConstructorParameterCount(), fAssigned.size());", "+        return getActualValues(getConstructorParameterCount(), assigned.size());"]}]}