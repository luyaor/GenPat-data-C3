{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "424dee2359e1dc336ed6cb99c1fcfd54", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03304604d82849fde88f093ed276b1c2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java", "commitBeforeChange": "6664bd272c43bcdf00f9ef9ce6f2d73af82036b1", "commitAfterChange": "d6c79c0f626afd12506b6a5a672cdec84683c3ca", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \t@Test public void testsRunInParallel()", "signatureAfterChange": " \t \t@Test public void testsRunInParallel()", "diff": ["-\t@Test/*(timeout=1500)*/ public void testsRunInParallel() {", "+\t@Test public void testsRunInParallel() {", "-\t\tResult result= JUnitCore.runClasses(ParallelComputer.methods(), Example.class);", "+\t\tResult result= JUnitCore.runClasses(ParallelComputer.methods(),", "+\t\t\t\tExample.class);", "-\t\tassertThat(end - start, greaterThanOrEquals(1000));", "+\t\tassertThat(end - start, betweenInclusive(1000, 1500));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49fa2daa52c3c9ab2b4568449fadd58f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java", "commitBeforeChange": "6eb76c8b08c738823546fe5b935b653951fc773e", "commitAfterChange": "474df716f498aa2695c422cceb3e46cad999e972", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \t@Test public void testsRunInParallel()", "signatureAfterChange": " \t \t@Test public void testsRunInParallel()", "diff": ["-\t@Test/*(timeout=1500)*/ public void testsRunInParallel() {", "+\t@Test public void testsRunInParallel() {", "-\t\tResult result= JUnitCore.runClasses(ParallelComputer.methods(), Example.class);", "+\t\tResult result= JUnitCore.runClasses(ParallelComputer.methods(),", "+\t\t\t\tExample.class);", "-\t\tassertThat(end - start, greaterThanOrEquals(1000));", "+\t\tassertThat(end - start, betweenInclusive(1000, 1500));"]}]}