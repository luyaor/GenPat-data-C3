{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "967b0e0f763b464a9c17ede6fb0e2cd2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5db2aef2cd57e7bfab37653ce15be260", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assume.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static <T> void assumeThat(String message, T actual, Matcher<T> matcher)", "signatureAfterChange": "     public static <T> void assumeThat(String message, T actual, Matcher<T> matcher)", "diff": ["-\t */", "-\tpublic static <T> void assumeThat(String message, T actual, Matcher<T> matcher) {", "-\t\tif (!matcher.matches(actual))", "-\t\t\tthrow new AssumptionViolatedException(message, actual, matcher); ", "-\t}", "+     */", "+    public static <T> void assumeThat(String message, T actual, Matcher<T> matcher) {", "+        if (!matcher.matches(actual)) {", "+            throw new AssumptionViolatedException(message, actual, matcher);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adb3e6b1599a26ace274811edbc4abac", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assume.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static <T> void assumeThat(T actual, Matcher<T> matcher)", "signatureAfterChange": "     public static <T> void assumeThat(T actual, Matcher<T> matcher)", "diff": ["-\t */", "-\tpublic static <T> void assumeThat(T actual, Matcher<T> matcher) {", "-\t\tif (!matcher.matches(actual))", "-\t\t\tthrow new AssumptionViolatedException(actual, matcher); ", "-\t}", "+     */", "+    public static <T> void assumeThat(T actual, Matcher<T> matcher) {", "+        if (!matcher.matches(actual)) {", "+            throw new AssumptionViolatedException(actual, matcher);", "+        }", "+    }"]}]}