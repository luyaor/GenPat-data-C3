{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1cbc23194503a7c6fe48ac9656113b5a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36d0b6a644921128d2c770ed70dea8fc", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/rules/RuleFieldValidator.java", "commitBeforeChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "commitAfterChange": "759061a31775afd29ff99fd2a55969bd6aaa8c2f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 18, "signatureBeforeChange": "      private void validateTestRuleOrMethodRule(FrameworkMember<?> member,             List<Throwable> errors)", "signatureAfterChange": "         public void validate(FrameworkMember<?> member, Class<? extends Annotation> annotation, List<Throwable> errors)", "diff": ["-    private void validateTestRuleOrMethodRule(FrameworkMember<?> member,", "-            List<Throwable> errors) {", "-        if (!isMethodRule(member) && !isTestRule(member)) {", "-            addError(errors, member, methods ?", "-                    \"must return an implementation of MethodRule or TestRule.\" :", "-                    \"must implement MethodRule or TestRule.\");", "-        }", "-    }", "+    private static final class FieldMustBeARule implements RuleValidator {", "+        public void validate(FrameworkMember<?> member, Class<? extends Annotation> annotation, List<Throwable> errors) {", "+            if (!isRuleType(member)) {", "+                errors.add(new ValidationError(member, annotation,", "+                        \"must implement MethodRule or TestRule.\"));", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d91cffebd061e7d7e3536e97bfe71074", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/rules/RuleFieldValidator.java", "commitBeforeChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "commitAfterChange": "759061a31775afd29ff99fd2a55969bd6aaa8c2f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 12, "signatureBeforeChange": "          private void validatePublicClass(FrameworkMember<?> member, List<Throwable> errors)", "signatureAfterChange": "         void validate(FrameworkMember<?> member, Class<? extends Annotation> annotation, List<Throwable> errors);", "diff": ["-    ", "-    private void validatePublicClass(FrameworkMember<?> member, List<Throwable> errors) {", "-        if (staticMembers && !isDeclaringClassPublic(member)) {", "-            addError(errors, member, \" must be declared in a public class.\");", "+         */", "+        void validate(FrameworkMember<?> member, Class<? extends Annotation> annotation, List<Throwable> errors);"]}]}