{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a751a227233c72fac1c20a24bf9ff83", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4436c356fd8101fa7162f0d7a459614d", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/DefaultFailureDetailView.java", "commitBeforeChange": "b6a023c447628100c104708666eddd0b2eaa41d3", "commitAfterChange": "86b71cb1b9784a9b87c86b4f3f12632ae6773d1f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic Component getComponent()", "signatureAfterChange": " \tpublic Component getComponent()", "diff": ["-\t\tif (fTextArea == null) {", "-\t\t\tfTextArea= new JTextArea();", "-\t\t\tfTextArea.setRows(5);", "-\t\t\tfTextArea.setTabSize(0);", "-\t\t\tfTextArea.setEditable(false);", "+\t\tif (fList == null) {", "+\t\t\tfList= new JList(new StackTraceListModel());", "+\t\t\tfList.setFont(new Font(\"Dialog\", Font.PLAIN, 12));", "+\t\t\tfList.setPrototypeCellValue(\"A Stack Trace Entry Line\");", "+\t\t\tfList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);", "+\t\t\tfList.setVisibleRowCount(5);", "+\t\t\tfList.setCellRenderer(new StackEntryRenderer());", "-\t\treturn fTextArea;", "+\t\treturn fList;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7284aa0464143f89ed1ec643e396b14", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "b294a12beffb7952de6aef3198d47f7cd08486d7", "commitAfterChange": "fa6483264ce2530585b374c276c2266d0d0c4ef0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \t@Ignore \t@Test public void junit3TestsAreOnlyIncludedOnceWhenExpandingForSorting() throws Exception", "signatureAfterChange": " \t \t@Test public void saffSqueezeExample() throws Exception", "diff": ["-\t@Test public void junit3TestsAreOnlyIncludedOnceWhenExpandingForSorting() throws Exception {", "+\t@Test public void saffSqueezeExample() throws Exception {", "+\t\tfinal Description method= Description.createTestDescription(TwoOldTests.class, \"testOne\");", "+\t\tFilter filter= Filter.matchDescription(method);", "+\t\tJUnit38ClassRunner child= new JUnit38ClassRunner(TwoOldTests.class);", "+\t\tchild.filter(filter);", "+\t\tassertEquals(1, child.testCount());", "+\t}"]}]}