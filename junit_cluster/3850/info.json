{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5afd54735e5cb8030c386d28d9395e68", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a1d70172eb10f7648372be568d792ea", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ErrorCollector.java", "commitBeforeChange": "da545cc5f425dd1392ffaa7d2cb8be3b2ef8a179", "commitAfterChange": "5c4d8c62e341acb7d46eff730a19b2ce041c2dfe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic <T> void checkThat(final T value, final Matcher<T> matcher)", "signatureAfterChange": " \tpublic <T> void checkThat(final T value, final Matcher<T> matcher)", "diff": ["-\t\tcheckSucceeds(new Callable<Object>() {", "-\t\t\tpublic Object call() throws Exception {", "-\t\t\t\tassertThat(value, matcher);", "-\t\t\t\treturn value;", "-\t\t\t}", "-\t\t});", "+\t\tcheckThat(\"\", value, matcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b2f52640aba122ef17d4ef64695b975", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/RunNotifier.java", "commitBeforeChange": "1cec456a2c5638818959856eb3cef98743cbe08b", "commitAfterChange": "0ce06206263ed060bd0ede049c1713286c2487ea", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void fireTestFailure(final Failure failure)", "signatureAfterChange": " \tpublic void fireTestFailure(Failure failure)", "diff": ["-\tpublic void fireTestFailure(final Failure failure) {", "-\t\tnew SafeNotifier() {", "-\t\t\t@Override", "-\t\t\tprotected void notifyListener(RunListener each) throws Exception {", "-\t\t\t\teach.testFailure(failure);", "-\t\t\t};", "-\t\t}.run();", "+\tpublic void fireTestFailure(Failure failure) {", "+\t\tfireTestFailures(fListeners, asList(failure));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47201a0ad3a2ae22e3fc7ceef5998836", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "a68b42cafad9f55f8296a2540f7aa93378ec1c40", "commitAfterChange": "23793cd92c4c0f8449e2edaec745437c5ebbd619", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t@SuppressWarnings(\"unchecked\") \tpublic void expect(Matcher<?> matcher)", "signatureAfterChange": " \tpublic void expect(Matcher<?> matcher)", "diff": ["-\t// world.", "-\t@SuppressWarnings(\"unchecked\")", "-\t\tif (fMatcher == null)", "-\t\t\tfMatcher= (Matcher<Object>) matcher;", "-\t\telse", "-\t\t\tfMatcher= both(fMatcher).and((Matcher<Object>) matcher);", "+\t\tfMatcher.and(matcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b0f0d901c4d0803792fda46bdf84d6b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "2bb6d5de002052680d443065e1c26f59be212e4b", "commitAfterChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Override \tprotected Link chain(final TestMethod method)", "signatureAfterChange": "  \t@Override \tprotected Link chain(final TestMethod method)", "diff": ["-\t\treturn notifying(method, new Link() {", "-\t\t\t@Override", "-\t\t\tpublic void run(Roadie context) throws Throwable {", "-\t\t\t\tpossiblyExpectingExceptions(method, invoke(method)).run(context);", "-\t\t\t}", "-\t\t});", "+\t\tLink next= invoke(method);", "+\t\tnext= ignoreViolatedAssumptions(next);", "+\t\tnext= possiblyExpectingExceptions(method, next);", "+\t\treturn notifying(method, next);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e2d20584616b7f0ebb4c2f343ff1ff5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "979e8abbe974e8847668f5887403da78a6165ebc", "commitAfterChange": "1fcd990f60518c941a44bae2596392021614a20b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprotected Statement runChildren(final RunNotifier notifier)", "signatureAfterChange": "  \tprivate void runChildren(final RunNotifier notifier)", "diff": ["-\tprotected Statement runChildren(final RunNotifier notifier) {", "-\t\t\t\tfor (T each : getFilteredChildren())", "-\t\t\t\t\trunChild(each, notifier);", "+\tprivate void runChildren(final RunNotifier notifier) {", "+\t\tfor (T each : getFilteredChildren())", "+\t\t\trunChild(each, notifier);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6155b9cf54204ff7d5f3084a26e5418d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExternalResource.java", "commitBeforeChange": "af5722e040626f7c3aa14ccbfb4cb2375f43a561", "commitAfterChange": "568e29c871ea144e12f273dc7e12c949a5a507da", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic final Statement apply(final Statement base, \t\t\tFrameworkMethod method, Object target)", "signatureAfterChange": " \tpublic final Statement apply(final Statement base, \t\t\tFrameworkMethod method, Object target)", "diff": ["-public abstract class ExternalResource implements MethodRule {", "+public abstract class ExternalResource implements MethodRule, ClassRule.Value {", "+\t\treturn statement(base);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac8b87b85c6ae466768da1b944c4b8ee", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/TestRuleTest.java", "commitBeforeChange": "308768863b78f3a6345e25d7f9d35892c2de5a01", "commitAfterChange": "81b50e9f3bdb66543d07e7349026bd3b447f433e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t\t\tpublic Statement apply(final Statement base, Description description)", "signatureAfterChange": "  \t\tpublic Statement apply(Statement base, Description description)", "diff": ["+", "+\t\tpublic Statement apply(Statement base, Description description) {", "+\t\t\tapplications++;", "+\t\t\treturn base;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0c729f4920918716d4be0400c29d92f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "a58514aec7e843339be24980e92aeeb759327ffb", "commitAfterChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tprotected Anchor anchor()", "signatureAfterChange": "  \tprotected Link anchor()", "diff": ["-", "-\tprotected Anchor anchor() {", "-\t\treturn new Anchor(){", "-\t\t\t@Override", "-\t\t\tpublic void run(Roadie context) throws Throwable {", "-\t\t\t\tExplosiveMethod.from(fTestMethod.getMethod()).invoke(", "-\t\t\t\t\t\tcontext.getTarget());", "-\t\t\t}", "-\t\t};", "+", "+\tprotected Link anchor() {", "+\t\treturn new MethodRunner();"]}]}