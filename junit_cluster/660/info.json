{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b10c8199bacf78eb2bd32e4c92ce16c1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bd8094f99782357768545ce858a7abd", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "29416b4ee89314119fb0f2d8011d63ac36531388", "commitAfterChange": "8817825612894d11856312a777281b6c7cf81672", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic synchronized void addError(Test test, Throwable t)", "signatureAfterChange": "  \tpublic void testFailed(int status, Test test, Throwable t)", "diff": ["-\tpublic synchronized void addError(Test test, Throwable t) {", "-\t\twriter().print(\"E\");", "+\tpublic void testFailed(int status, Test test, Throwable t) {", "+\t\tswitch (status) {", "+\t\t\tcase TestRunListener.STATUS_ERROR: writer().print(\"E\"); break;", "+\t\t\tcase TestRunListener.STATUS_FAILURE: writer().print(\"F\"); break;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fd9113ef8c8c825f9768ffb60f7b7f8", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/awtui/TestRunner.java", "commitBeforeChange": "29416b4ee89314119fb0f2d8011d63ac36531388", "commitAfterChange": "8817825612894d11856312a777281b6c7cf81672", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void addFailure(Test test, AssertionFailedError t)", "signatureAfterChange": "  \tpublic void testFailed(int status, Test test, Throwable t)", "diff": ["-\tpublic void addFailure(Test test, AssertionFailedError t) {", "-\t\tfNumberOfFailures.setText(Integer.toString(fTestResult.failureCount()));", "-\t\tappendFailure(\"Failure\", test, t);", "+", "+\tpublic void testFailed(int status, Test test, Throwable t) {", "+\t\tswitch (status) {", "+\t\t\tcase TestRunListener.STATUS_ERROR:", "+\t\t\t\tfNumberOfErrors.setText(Integer.toString(fTestResult.errorCount()));", "+\t\t\t\tappendFailure(\"Error\", test, t);", "+\t\t\t\tbreak;", "+\t\t\tcase TestRunListener.STATUS_FAILURE:", "+\t\t\t\tfNumberOfFailures.setText(Integer.toString(fTestResult.failureCount()));", "+\t\t\t\tappendFailure(\"Failure\", test, t);", "+\t\t\t\tbreak;", "+\t\t}", "+\t}"]}]}