{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5525a9bc735cf43f30102023813acb02", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "248fac91b69bb85d0fe2ea1077e05826", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/JUnitCommandLineParserTest.java", "commitBeforeChange": "b1cf4b5bc6ead8c3dfcbbb9ebe69be85f5e53cb8", "commitAfterChange": "56193048f411846a58c0e0377a5f1ccfecd3d2f9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \r     @Test\r     public void shouldCreateFailureUponUnknownTestClass() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldCreateFailureUponUnknownTestClass() throws Exception", "diff": ["+        String unknownTestClass = \"UnknownTestClass\";\r", "-                \"UnknownTestClass\"\r", "+                unknownTestClass\r", "-        List<Failure> failures = jUnitCommandLineParser.getFailures();\r", "-        Throwable exception = failures.get(0).getException();\r", "+        Runner runner = jUnitCommandLineParser.createRequest(new Computer()).getRunner();\r", "+        Description description = runner.getDescription().getChildren().get(0);\r", "-        assertThat(exception, instanceOf(ClassNotFoundException.class));\r", "+        assertThat(description.toString(), allOf(\r", "+                containsString(\"initializationError: \"),\r", "+                containsString(ClassNotFoundException.class.getName()),\r", "+                containsString(unknownTestClass)));\r", "+    }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "435d33c1511c87e182e75f9b1b740743", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/JUnitCommandLineParserTest.java", "commitBeforeChange": "b1cf4b5bc6ead8c3dfcbbb9ebe69be85f5e53cb8", "commitAfterChange": "56193048f411846a58c0e0377a5f1ccfecd3d2f9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \r     @Test\r     public void shouldCreateFailureUponUnknownOption() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldCreateFailureUponUnknownOption() throws Exception", "diff": ["+        String unknownOption = \"--unknown-option\";\r", "-                \"--unknown-option\"\r", "+                unknownOption\r", "-        List<Failure> failures = jUnitCommandLineParser.getFailures();\r", "-        Throwable exception = failures.get(0).getException();\r", "+        Runner runner = jUnitCommandLineParser.createRequest(new Computer()).getRunner();\r", "+        Description description = runner.getDescription().getChildren().get(0);\r", "-        assertThat(exception, instanceOf(JUnitCommandLineParser.CommandLineParserError.class));\r", "+        assertThat(description.toString(), allOf(\r", "+                containsString(\"initializationError: \"),\r", "+                containsString(JUnitCommandLineParser.CommandLineParserError.class.getName()),\r", "+                containsString(unknownOption)));\r"]}]}