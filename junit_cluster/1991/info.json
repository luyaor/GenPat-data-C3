{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fca4445f52c64f2752be3235aa570d03", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60b9377f3c3b9efba2d507b388f55c6b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "b77d9de8e3e2894fc6120c95a8e7766c38912d49", "commitAfterChange": "796e723caa0a1f75bb7b48b2454bea633fbf8e4e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t\t \t\t@Override \t\tpublic void run(RunNotifier notifier)", "signatureAfterChange": "  \t\t@Override \t\tpublic void run(RunNotifier notifier)", "diff": ["-\t\t", "-\t\t@Override", "-\t\tpublic void run(RunNotifier notifier) {", "-\t\t\tsuper.run(notifier);", "-\t\t\tfor (Future<Object> each : fCollator.results)", "-\t\t\t\ttry {", "-\t\t\t\t\teach.get();", "-\t\t\t\t} catch (Exception e) {", "-\t\t\t\t\te.printStackTrace();", "-\t\t\t\t} ", "-\t\t}", "+", "+\t\t@Override", "+\t\tpublic void run(RunNotifier notifier) {", "+\t\t\tsuper.run(notifier);", "+\t\t\tfor (Future<Object> each : fResults)", "+\t\t\t\ttry {", "+\t\t\t\t\teach.get();", "+\t\t\t\t} catch (Exception e) {", "+\t\t\t\t\te.printStackTrace();", "+\t\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfd6c36f2fd9e22e00dad2649c1628cc", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "0dc3de7fbcf997ca8465ed9e7793a0b4f730121b", "commitAfterChange": "3d08ecc6a661f09520559637794c9a161db90f3d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t\t \t\t@Override \t\tpublic void run(RunNotifier notifier)", "signatureAfterChange": "  \t\t@Override \t\tpublic void run(RunNotifier notifier)", "diff": ["-\t\t", "-\t\t@Override", "-\t\tpublic void run(RunNotifier notifier) {", "-\t\t\tsuper.run(notifier);", "-\t\t\tfor (Future<Object> each : fCollator.results)", "-\t\t\t\ttry {", "-\t\t\t\t\teach.get();", "-\t\t\t\t} catch (Exception e) {", "-\t\t\t\t\te.printStackTrace();", "-\t\t\t\t} ", "-\t\t}", "+", "+\t\t@Override", "+\t\tpublic void run(RunNotifier notifier) {", "+\t\t\tsuper.run(notifier);", "+\t\t\tfor (Future<Object> each : fResults)", "+\t\t\t\ttry {", "+\t\t\t\t\teach.get();", "+\t\t\t\t} catch (Exception e) {", "+\t\t\t\t\te.printStackTrace();", "+\t\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb61fb6dc2688f8154c131bb1504f6ed", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "4d6f0702dae590809b808230f027a60aa0a4a345", "commitAfterChange": "b737131b847c53bb4f1cf6dbf86f586008550eba", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t\t@Override \t\tpublic void run(RunNotifier notifier)", "signatureAfterChange": "  \t\t\tpublic void finished()", "diff": ["-", "-\t\t@Override", "-\t\tpublic void run(RunNotifier notifier) {", "-\t\t\tsuper.run(notifier);", "-\t\t\tfor (Future<Object> each : fResults)", "-\t\t\t\ttry {", "-\t\t\t\t\teach.get();", "-\t\t\t\t} catch (Exception e) {", "-\t\t\t\t\te.printStackTrace();", "-\t\t\t\t}", "-\t\t}", "+\t\t\tpublic void finished() {", "+\t\t\t\tfor (Future<Object> each : fResults)", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\teach.get();", "+\t\t\t\t\t} catch (Exception e) {", "+\t\t\t\t\t\te.printStackTrace();", "+\t\t\t\t\t}", "+\t\t\t}"]}]}