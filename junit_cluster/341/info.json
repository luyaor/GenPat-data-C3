{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bceb842a6b6e7fc9e08b378e259e0d36", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78acac34ea1cd5b3ccec7bcbe23b2d1f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/MethodValidator.java", "commitBeforeChange": "db89759c22060a89f6750e2e92ce93072eace561", "commitAfterChange": "521fdb5aae536bd5055f6d0e4f09c5a7bdb5799f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void validateInstanceMethods()", "signatureAfterChange": "  \tpublic void validateInstanceMethods()", "diff": ["+\t\t", "+\t\tList<Method> methods= fTestClass.getAnnotatedMethods(Test.class);", "+\t\tif (methods.size() == 0)", "+\t\t\tfErrors.add(new Exception(\"No runnable methods\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e946123b59c1654bee347535673bcbd8", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/runner/BaseTestRunner.java", "commitBeforeChange": "1e752dcb0a967bcb47fae4b12fb8765e79571e69", "commitAfterChange": "bfc94ee739d62127c7477300b26127bd560765a1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic Test getTest(String suiteClassName)", "signatureAfterChange": " \tpublic Test getTest(String suiteClassName)", "diff": ["-\t\t} catch (NoClassDefFoundError e) {", "-\t\t\trunFailed(\"Class definition \\\"\"+suiteClassName+\"\\\" not found\");", "+\t\t} catch (ClassNotFoundException e) {", "+\t\t\tString clazz= e.getMessage();", "+\t\t\tif (clazz == null) ", "+\t\t\t\tclazz= suiteClassName;", "+\t\t\trunFailed(\"Class not found \\\"\"+clazz+\"\\\"\");", "-\t\t\trunFailed(\"Class \\\"\"+suiteClassName+\"\\\" not found\");", "+\t\t\trunFailed(\"Error: \"+e.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f238d83baf87b993f4470a22bee82fa9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "94d454a32857d85e08600e38728418863478501c", "commitAfterChange": "a07f1be1bc7eb7f7d757da48d0a3110452cca4d4", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t\t \t\t@Override \t\tprotected void validateNoArgConstructor(List<Throwable> errors)", "signatureAfterChange": "  \t\t@Override \t\tprotected void validateConstructor(List<Throwable> errors)", "diff": ["-\t\t", "+", "-\t\tprotected void validateNoArgConstructor(List<Throwable> errors) {", "-\t\t\t// do nothing: constructor should have parameters", "-\t\t\t// TODO: but should still be public, and just one", "+\t\tprotected void validateConstructor(List<Throwable> errors) {", "+\t\t\tConstructor<?>[] constructors= getTestClass().getJavaClass()", "+\t\t\t\t\t.getConstructors();", "+\t\t\tif (!(constructors.length == 1)) {", "+\t\t\t\tString gripe= \"Test class should have exactly one public constructor\";", "+\t\t\t\terrors.add(new Exception(gripe));", "+\t\t\t}"]}]}