{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e51376f3ce4e8698c22388f34354987", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c42a8fe3ef690732dff2c65f16d71e43", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/requests/ClassRequest.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public Runner getRunner()", "signatureAfterChange": "      @Override     public Runner getRunner()", "diff": ["-        if (fRunner == null) {", "-            synchronized (fRunnerLock) {", "-                if (fRunner == null) {", "-                    fRunner = new AllDefaultPossibilitiesBuilder(fCanUseSuiteMethod).safeRunnerForClass(fTestClass);", "+        if (runner == null) {", "+            synchronized (runnerLock) {", "+                if (runner == null) {", "+                    runner = new AllDefaultPossibilitiesBuilder(canUseSuiteMethod).safeRunnerForClass(testClass);", "-        return fRunner;", "+        return runner;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e700a87af220fe24f992da82f7d7ceb7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      private Collection<T> getFilteredChildren()", "signatureAfterChange": "      private Collection<T> getFilteredChildren()", "diff": ["-        if (fFilteredChildren == null) {", "-            synchronized (fChildrenLock) {", "-                if (fFilteredChildren == null) {", "-                    fFilteredChildren = Collections.unmodifiableCollection(getChildren());", "+        if (filteredChildren == null) {", "+            synchronized (childrenLock) {", "+                if (filteredChildren == null) {", "+                    filteredChildren = Collections.unmodifiableCollection(getChildren());", "-        return fFilteredChildren;", "+        return filteredChildren;"]}]}