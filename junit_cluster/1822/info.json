{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "10b43f9c8d2c6cf582283ee094eed752", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a8dd5a6b94d7a23d4a06164c4a017f3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java", "commitBeforeChange": "dca4a949f93bb85cc8ee0eb8789979a18aa3ffc7", "commitAfterChange": "cb6abf6fc729f07c5d60b0756e91af444400b4b5", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "      @Test     public void meaningfulFailureWhenParametersNotPublic() throws Exception", "signatureAfterChange": "      @Test     public void meaningfulFailureWhenParametersNotPublic()", "diff": ["-    public void meaningfulFailureWhenParametersNotPublic() throws Exception {", "-        Result result = JUnitCore.runClasses(ProtectedParametersTest.class);", "-        String expected = String.format(", "-                \"No public static parameters method on class %s\",", "-                ProtectedParametersTest.class.getName());", "-        assertEquals(expected, result.getFailures().get(0).getMessage());", "+    public void meaningfulFailureWhenParametersNotPublic() {", "+        assertTestCreatesSingleFailureWithMessage(ProtectedParametersTest.class,", "+                \"No public static parameters method on class \"", "+                        + ProtectedParametersTest.class.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90f5f5a1360915801d05b0b46e0a331f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/running/classes/ParameterizedTestTest.java", "commitBeforeChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "commitAfterChange": "2807ff63d6b408a927fd3dd684a42a2366677657", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \t \t@Test public void meaningfulFailureWhenParameterListsAreNotArrays()", "signatureAfterChange": "  \t@Test \tpublic void meaningfulFailureWhenParameterListsAreNotArrays()", "diff": ["-\t", "-\t@Test public void meaningfulFailureWhenParameterListsAreNotArrays() {", "-\t\tResult result= JUnitCore.runClasses(WrongElementType.class);", "-\t\tString expected= String.format(\"%s.data() must return a Collection of arrays.\", WrongElementType.class.getName());", "-\t\tassertEquals(expected, result.getFailures().get(0).getMessage());", "+", "+\t@Test", "+\tpublic void meaningfulFailureWhenParameterListsAreNotArrays() {", "+\t\tString expected= String.format(", "+\t\t\t\t\"%s.data() must return a Collection of arrays.\",", "+\t\t\t\tWrongElementType.class.getName());", "+\t\tassertThat(testResult(WrongElementType.class).toString(),", "+\t\t\t\tcontainsString(expected));"]}]}