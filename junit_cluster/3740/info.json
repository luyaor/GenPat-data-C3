{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3172e79d3c5522c34cb8b68569953079", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04f3f3d0e4c9a2879919bd1118030c37", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java", "commitBeforeChange": "3c122b6a93499ee82d346c097141d2137b93c48c", "commitAfterChange": "9ec6a3fa39cb8aafe645a7f33e7da9a788679fe3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void failed()", "signatureAfterChange": "      @Test     public void failed()", "diff": ["-        Result result = JUnitCore.runClasses(FailedTest.class);", "+        Result result= JUnitCore.runClasses(FailedTest.class);", "-        assertThat(record.fName, is(\"failedTest\"));", "-        assertThat(record.fName, is(finishedRecord.fName));", "-        assertThat(record.fStatus, is(TestStatus.FAILED));", "-        assertTrue(\"timeSpent > 0\", record.fDuration > 0);", "-        assertThat(record.fDuration, is(finishedRecord.fDuration));", "+        assertThat(fRecord.fName, is(\"failedTest\"));", "+        assertThat(fRecord.fName, is(fFinishedRecord.fName));", "+        assertThat(fRecord.fStatus, is(TestStatus.FAILED));", "+        assertTrue(\"timeSpent > 0\", fRecord.fDuration > 0);", "+        assertThat(fRecord.fDuration, is(fFinishedRecord.fDuration));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5646aa52e314ae9c417cd650424c0caf", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java", "commitBeforeChange": "3c122b6a93499ee82d346c097141d2137b93c48c", "commitAfterChange": "9ec6a3fa39cb8aafe645a7f33e7da9a788679fe3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void skipped()", "signatureAfterChange": "      @Test     public void skipped()", "diff": ["-        Result result = JUnitCore.runClasses(SkippedTest.class);", "+        Result result= JUnitCore.runClasses(SkippedTest.class);", "-        assertThat(record.fName, is(\"skippedTest\"));", "-        assertThat(record.fName, is(finishedRecord.fName));", "-        assertThat(record.fStatus, is(TestStatus.SKIPPED));", "-        assertTrue(\"timeSpent > 0\", record.fDuration > 0);", "-        assertThat(record.fDuration, is(finishedRecord.fDuration));", "+        assertThat(fRecord.fName, is(\"skippedTest\"));", "+        assertThat(fRecord.fName, is(fFinishedRecord.fName));", "+        assertThat(fRecord.fStatus, is(TestStatus.SKIPPED));", "+        assertTrue(\"timeSpent > 0\", fRecord.fDuration > 0);", "+        assertThat(fRecord.fDuration, is(fFinishedRecord.fDuration));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecea7015e0343bc500e5eb7c22bed381", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java", "commitBeforeChange": "3c122b6a93499ee82d346c097141d2137b93c48c", "commitAfterChange": "9ec6a3fa39cb8aafe645a7f33e7da9a788679fe3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void succeeded()", "signatureAfterChange": "      @Test     public void succeeded()", "diff": ["-        Result result = JUnitCore.runClasses(SuccessfulTest.class);", "+        Result result= JUnitCore.runClasses(SuccessfulTest.class);", "-        assertThat(record.fName, is(\"successfulTest\"));", "-        assertThat(record.fName, is(finishedRecord.fName));", "-        assertThat(record.fStatus, is(TestStatus.SUCCEEDED));", "-        assertTrue(\"timeSpent > 0\", record.fDuration > 0);", "-        assertThat(record.fDuration, is(finishedRecord.fDuration));", "+        assertThat(fRecord.fName, is(\"successfulTest\"));", "+        assertThat(fRecord.fName, is(fFinishedRecord.fName));", "+        assertThat(fRecord.fStatus, is(TestStatus.SUCCEEDED));", "+        assertTrue(\"timeSpent > 0\", fRecord.fDuration > 0);", "+        assertThat(fRecord.fDuration, is(fFinishedRecord.fDuration));"]}]}