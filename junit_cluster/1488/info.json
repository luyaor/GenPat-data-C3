{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0628a0f8f1049b6b45da0b3c6362a39", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5570f310427c4a869ee6f7e6e13740f4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Request.java", "commitBeforeChange": "df48b66e73c740acb15f065eb7a4bad433930891", "commitAfterChange": "fab8f0da7e35f0436b80bf5cfe799882b2cb4db5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Request aClass(Class<?> clazz)", "signatureAfterChange": " \tpublic static Request aClass(Class<?> clazz)", "diff": ["+\tprivate static boolean firstTime= true;", "-\t\treturn new ClassRequest(clazz);", "+\t\tif (firstTime) {", "+\t\t\tfirstTime= false;", "+\t\t\tfinal ClassRequest delegate= new ClassRequest(clazz);", "+\t\t\treturn new Request() {", "+\t\t\t\t@Override", "+\t\t\t\tpublic Runner getRunner() {", "+\t\t\t\t\treturn new Runner() {", "+\t\t\t\t\t", "+\t\t\t\t\t\t@Override", "+\t\t\t\t\t\tpublic void run(RunNotifier notifier) {", "+\t\t\t\t\t\t\tJUnitCore core= new JUnitCore();", "+\t\t\t\t\t\t\tcore.fNotifier= notifier;", "+\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\tMaxCore.forFolder(\"defaultMaxCore\").run(delegate, core);", "+\t\t\t\t\t\t\t} catch (CouldNotReadCoreException e) {", "+\t\t\t\t\t\t\t\te.printStackTrace();", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t", "+\t\t\t\t\t\t@Override", "+\t\t\t\t\t\tpublic Description getDescription() {", "+\t\t\t\t\t\t\treturn delegate.getRunner().getDescription();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t};", "+\t\t\t\t}", "+\t\t\t};", "+\t\t}", "+\t\telse", "+\t\t\treturn new ClassRequest(clazz);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e03777672cc8d9b7efdbc9c41c8e1ce4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Request.java", "commitBeforeChange": "b294a12beffb7952de6aef3198d47f7cd08486d7", "commitAfterChange": "fa6483264ce2530585b374c276c2266d0d0c4ef0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Request aClass(Class<?> clazz)", "signatureAfterChange": " \tpublic static Request aClass(Class<?> clazz)", "diff": ["-\tprivate static boolean firstTime= false; // Don't try to trick Eclipse with what we check in", "-\t\tif (firstTime) {", "-\t\t\tfirstTime= false;", "-\t\t\tfinal ClassRequest delegate= new ClassRequest(clazz);", "-\t\t\treturn new Request() {", "-\t\t\t\t@Override", "-\t\t\t\tpublic Runner getRunner() {", "-\t\t\t\t\treturn new Runner() {", "-\t\t\t\t\t", "-\t\t\t\t\t\t@Override", "-\t\t\t\t\t\tpublic void run(RunNotifier notifier) {", "-\t\t\t\t\t\t\tJUnitCore core= new JUnitCore();", "-\t\t\t\t\t\t\tcore.fNotifier= notifier;", "-\t\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\t\tMaxCore.forFolder(\"defaultMaxCore\").run(delegate, core);", "-\t\t\t\t\t\t\t} catch (CouldNotReadCoreException e) {", "-\t\t\t\t\t\t\t\te.printStackTrace();", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t", "-\t\t\t\t\t\t@Override", "-\t\t\t\t\t\tpublic Description getDescription() {", "-\t\t\t\t\t\t\treturn delegate.getRunner().getDescription();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t};", "-\t\t\t\t}", "-\t\t\t};", "-\t\t}", "-\t\telse", "-\t\t\treturn new ClassRequest(clazz);", "+\t\treturn new ClassRequest(clazz);"]}]}