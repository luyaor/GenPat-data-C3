{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6425321cb8f3cb3979445713f19df4ac", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56d154be9a6fc39b6e6c294dad222940", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/runner/WithDataPointFields.java", "commitBeforeChange": "1fe4f2534d39f819eae3ae1a6e6169c651b0a8a8", "commitAfterChange": "f98130957df08de9cae93169298e04bf84388cae", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t\t@Test(expected= NullPointerException.class) \t\tpublic void shouldThrow()", "signatureAfterChange": "  \t\t@Theory \t\tpublic void stringsAreOK(String string)", "diff": ["-\tpublic static class HonorExpectedException {", "-\t\t@Test(expected= NullPointerException.class)", "-\t\tpublic void shouldThrow() {", "-", "-\t\t}", "+", "+\t\t@Theory", "+\t\tpublic void stringsAreOK(String string) {", "+\t\t\tassertTrue(befores == 1);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc37df930a2e0dbaf34c076a5d6a7e4b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/runner/WithDataPointFields.java", "commitBeforeChange": "1fe4f2534d39f819eae3ae1a6e6169c651b0a8a8", "commitAfterChange": "f98130957df08de9cae93169298e04bf84388cae", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t\t@Test(timeout= 5) \t\tpublic void shouldStop()", "signatureAfterChange": "  \t\t@Theory \t\tpublic void haveAPostiveSquare()", "diff": ["-\tpublic static class HonorTimeout {", "-\t\t@Test(timeout= 5)", "-\t\tpublic void shouldStop() {", "-\t\t\twhile (true) {", "-\t\t\t\ttry {", "-\t\t\t\t\tThread.sleep(1000);", "-\t\t\t\t} catch (InterruptedException e) {", "-", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "+", "+\t\t@Theory", "+\t\tpublic void haveAPostiveSquare() {", "+\t\t\tassertTrue(x * x > 0);", "+\t\t}"]}]}