{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4fa9933eb33334a26ea074d75bad32ae", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac0c8bb4d238918f5907fae9ae375554", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/InexactComparisonCriteria.java", "commitBeforeChange": "ed2b51b0c78a079f806ea9157f77f83705f8e04b", "commitAfterChange": "0333e7efdc9ecf81df4212f82c3a59c6ff0fab19", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tprotected void assertElementsEqual(Object expected, Object actual)", "signatureAfterChange": "  \t@Override \tprotected void assertElementsEqual(Object expected, Object actual)", "diff": ["-\t\t\tAssert.assertEquals((Double)expected, (Double)actual, fDelta);", "+\t\t\tAssert.assertEquals((Double)expected, (Double)actual, (Double)fDelta);", "-\t\t\tAssert.assertEquals((Float)expected, (Float)actual, fDelta);", "+\t\t\tAssert.assertEquals((Float)expected, (Float)actual, (Float)fDelta);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e492556727e80018a71e4f15c2755bfa", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/InexactComparisonCriteria.java", "commitBeforeChange": "ed2b51b0c78a079f806ea9157f77f83705f8e04b", "commitAfterChange": "c7f5669a59fd42f887e02664e2709b7522a0302d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tprotected void assertElementsEqual(Object expected, Object actual)", "signatureAfterChange": "  \t@Override \tprotected void assertElementsEqual(Object expected, Object actual)", "diff": ["-\t\t\tAssert.assertEquals((Double)expected, (Double)actual, fDelta);", "+\t\t\tAssert.assertEquals((Double)expected, (Double)actual, (Double)fDelta);", "-\t\t\tAssert.assertEquals((Float)expected, (Float)actual, fDelta);", "+\t\t\tAssert.assertEquals((Float)expected, (Float)actual, (Float)fDelta);"]}]}