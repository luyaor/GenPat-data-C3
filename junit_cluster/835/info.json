{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a0eb4cd696c61a5701954b1aa34dbb8e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7da4b2dffb72c678f61015a48b3ee99f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/Assert.java", "commitBeforeChange": "88f0fe3ced24506ddf9791f7a088163f4e7b1f20", "commitAfterChange": "3d7fee93ddc21a6e849c36d5ae58b37b3d189665", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic static void assertEquals(String message, Object[] expecteds, Object[] actuals)", "signatureAfterChange": " \t@Deprecated \tpublic static void assertEquals(String message, Object[] expecteds, Object[] actuals)", "diff": ["-\tpublic static void assertEquals(String message, Object[] expecteds, Object[] actuals) {", "-\t\tif (expecteds == actuals)", "-\t\t\treturn;", "-\t\tString header = message == null ? \"\" : message + \": \";", "-\t\tif (expecteds == null)", "-\t\t\tfail(header + \"expected array was null\");", "-\t\tif (actuals == null)", "-\t\t\tfail(header + \"actual array was null\");", "-\t\tif (actuals.length != expecteds.length)", "-\t\t\tfail(header + \"array lengths differed, expected.length=\" + expecteds.length + \" actual.length=\" + actuals.length);", "-", "-\t\tfor (int i= 0; i < expecteds.length; i++) {", "-\t\t\tObject o1= expecteds[i];", "-\t\t\tObject o2= actuals[i];", "-\t\t\tif (o1.getClass().isArray() && o2.getClass().isArray()) {", "-\t\t\t\tObject[] expected= (Object[]) o1;", "-\t\t\t\tObject[] actual= (Object[]) o2;", "-\t\t\t\ttry {", "-\t\t\t\t\tassertEquals(message, expected, actual);", "-\t\t\t\t} catch (ArrayComparisonFailure e) {", "-\t\t\t\t\te.addDimension(i);", "-\t\t\t\t\tthrow e;", "-\t\t\t\t}", "-\t\t\t} else", "-\t\t\t\ttry {", "-\t\t\t\t\tassertEquals(o1, o2);", "-\t\t\t\t} catch (AssertionError e) {", "-\t\t\t\t\tthrow new ArrayComparisonFailure(header, e, i);", "-\t\t\t\t}", "-\t\t}", "+\t */", "+\t@Deprecated", "+\tpublic static void assertEquals(String message, Object[] expecteds, Object[] actuals) {", "+\t\tassertArrayEquals(message, expecteds, actuals);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d96b40bc255c698f8cb9277edfeb29d", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/framework/ComparisonFailure.java", "commitBeforeChange": "ece77fa477a6d322bb5b37c7e2367f4c4dfbf9f3", "commitAfterChange": "ba28bf0f0384ba8b2fc377ef612545f411a56ec4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic String getMessage()", "signatureAfterChange": " \tpublic String getMessage()", "diff": ["-\t\tif (fExpected == null || fActual == null)", "-\t\t\treturn Assert.format(super.getMessage(), fExpected, fActual);", "-\t\t\t", "-\t\tint end= Math.min(fExpected.length(), fActual.length());", "-\t\t", "-\t\tint i= 0;", "-\t\tfor(; i < end; i++) {", "-\t\t\tif (fExpected.charAt(i) != fActual.charAt(i))", "-\t\t\t\tbreak;", "-\t\t}", "-\t\tint j= fExpected.length()-1;", "-\t\tint k= fActual.length()-1;", "-\t\tfor (; k >= i && j >= i; k--,j--) {", "-\t\t\tif (fExpected.charAt(j) != fActual.charAt(k))", "-\t\t\t\tbreak;", "-\t\t}", "-\t\tString actual, expected;", "-\t\t", "-\t\t// equal strings", "-\t\tif (j < i && k < i) {", "-\t\t\texpected= fExpected;", "-\t\t\tactual= fActual;", "-\t\t} else {", "-\t\t\texpected= fExpected.substring(i, j+1);", "-\t\t\tactual= fActual.substring(i, k+1);", "-\t\t\tif (i <= end && i > 0) {", "-\t\t\t\texpected= \"...\"+expected;", "-\t\t\t\tactual= \"...\"+actual;", "-\t\t\t}", "-\t\t\t", "-\t\t\tif (j < fExpected.length()-1)", "-\t\t\t\texpected= expected+\"...\";", "-\t\t\tif (k < fActual.length()-1)", "-\t\t\t\tactual= actual+\"...\";", "-\t\t}\t", "-\t\treturn Assert.format(super.getMessage(), expected, actual);", "+\t\treturn new ComparisonCompactor(MAX_CONTEXT_LENGTH, fExpected, fActual).compact(super.getMessage());", "+\t}"]}]}