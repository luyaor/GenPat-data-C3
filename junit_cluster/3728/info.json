{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "39061f27f947e5000d5f81ab07563806", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "131d117cadaeb9aaa47a0a4ddf52ac5f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "0d6cd750d53486f01f12ddfee8657d94b5940574", "commitAfterChange": "a7c07de664a4562c3ff171102729f06a5f572d9b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprotected void printFailures(Result result)", "signatureAfterChange": "  \tprotected void printFailures(Result result)", "diff": ["-\t\tif (result.getFailureCount() == 0)", "-\t\t\treturn;", "-\t\tif (result.getFailureCount() == 1)", "-\t\t\tgetWriter().println(\"There was \" + result.getFailureCount() + \" failure:\");", "-\t\telse", "-\t\t\tgetWriter().println(\"There were \" + result.getFailureCount() + \" failures:\");", "-\t\tint i= 1;", "-\t\tfor (Failure each : result.getFailures())", "-\t\t\tprintFailure(each, i++);", "+\t\tprintExceptions(\"failure\", \"\", result.getFailures());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "211eda4cb4be9cee92bb3b528b243c22", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "0d6cd750d53486f01f12ddfee8657d94b5940574", "commitAfterChange": "a7c07de664a4562c3ff171102729f06a5f572d9b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate void printIgnorances(Result result)", "signatureAfterChange": " \t \tprivate void printIgnorances(Result result)", "diff": ["-\t\t// TODO: (Dec 7, 2007 10:23:17 AM) DUP", "+\t\tprintExceptions(\"ignored test\", \"IGNORED TEST \", result.getIgnorances());", "+\t}", "-\t\tif (result.getIgnoreCount() == 0)", "-\t\tif (result.getIgnoreCount() == 1)", "-\t\t\tgetWriter().println(\"There was \" + result.getIgnoreCount() + \" ignored test:\");", "-\t\t\tgetWriter().println(\"There were \" + result.getIgnoreCount() + \" ignored tests:\");", "-\t\tfor (Ignorance each : result.getIgnorances())", "-\t\t\tprintFailure(each, i++);"]}]}