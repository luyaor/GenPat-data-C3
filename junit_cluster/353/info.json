{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0731079b46b460032647cef6f70901ee", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "017869bb8ca11f0bc1f65c78017d66e7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "a07f1be1bc7eb7f7d757da48d0a3110452cca4d4", "commitAfterChange": "095d3f8df0708f98d41f5894a892388b6985c44f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void validateConstructor(List<Throwable> errors)", "signatureAfterChange": " \t \tprivate void validateConstructor(List<Throwable> errors)", "diff": ["+\t", "+\tprivate void validateConstructor(List<Throwable> errors) {", "+\t\tvalidateOnlyOneConstructor(errors);", "+\t\tvalidateZeroArgConstructor(errors);", "+\t}", "-\tprotected void validateConstructor(List<Throwable> errors) {", "-\t\tConstructor<?>[] constructors= getTestClass().getJavaClass()", "-\t\t\t\t.getConstructors();", "-\t\tif (!(constructors.length == 1 && ", "-\t\t\t\tconstructors[0].getParameterTypes().length == 0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea3f7350c99f0009701543fa0e2e7ede", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "85f9d8397bfd96261c3214284672180c522e2d38", "commitAfterChange": "9cf5b64d8dbbb064fed3d4ee88eced2b6a7d50fe", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private boolean hasValidatorAnnotation(Annotation annotation)", "signatureAfterChange": "      private boolean hasValidatorAnnotation(Class<? extends Annotation> annotationType)", "diff": ["-    private boolean hasValidatorAnnotation(Annotation annotation) {", "-        Class<? extends Annotation> annotationType = annotation.annotationType();", "-        boolean hasValidatorAnnotation;", "-        if (fAnnotationTypeToValidatorMap.containsKey(annotationType)) {", "-            hasValidatorAnnotation = fAnnotationTypeToValidatorMap.get(annotationType) != null;", "-        } else {", "-            hasValidatorAnnotation = hasValidatorAnnotation(annotationType);", "-            if (!hasValidatorAnnotation) {", "-                fAnnotationTypeToValidatorMap.put(annotationType, null);", "-            }", "-        }", "-", "-        return hasValidatorAnnotation;", "-    }", "+        return getAnnotationValidator(annotationType) != null;"]}]}