{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe7b0e62851df9c6ed61512a060cb753", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2064c7834cbfdb5cba02874512c33a63", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tstatic public void assertEquals(String message, double expected, \t\t\tdouble actual, double delta)", "signatureAfterChange": "     static public void assertEquals(String message, double expected,             double actual, double delta)", "diff": ["-\t */", "-\tstatic public void assertEquals(String message, double expected,", "-\t\t\tdouble actual, double delta) {", "-\t\tif (doubleIsDifferent(expected, actual, delta))", "-\t\t\tfailNotEquals(message, new Double(expected), new Double(actual));", "-\t}", "+     */", "+    static public void assertEquals(String message, double expected,", "+            double actual, double delta) {", "+        if (doubleIsDifferent(expected, actual, delta)) {", "+            failNotEquals(message, new Double(expected), new Double(actual));", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65e274543b1da5b0b44302dca95ef4db", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/runner/BaseTestRunner.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   \tpublic static int getPreference(String key, int dflt)", "signatureAfterChange": "      public static int getPreference(String key, int dflt)", "diff": ["- \tpublic static int getPreference(String key, int dflt) {", "- \t\tString value= getPreference(key);", "- \t\tint intValue= dflt;", "- \t\tif (value == null)", "- \t\t\treturn intValue;", "- \t\ttry {", "- \t\t\tintValue= Integer.parseInt(value);", "- \t \t} catch (NumberFormatException ne) {", "- \t\t}", "- \t\treturn intValue;", "- \t}", "+    public static int getPreference(String key, int dflt) {", "+        String value = getPreference(key);", "+        int intValue = dflt;", "+        if (value == null) {", "+            return intValue;", "+        }", "+        try {", "+            intValue = Integer.parseInt(value);", "+        } catch (NumberFormatException ne) {", "+        }", "+        return intValue;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e7f1c3126e8e75fe5a616a1252fb54d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \t\t@Override \t\tpublic void evaluate() throws Throwable", "signatureAfterChange": "          @Override         public void evaluate() throws Throwable", "diff": ["-\t\t@Override", "-\t\tpublic void evaluate() throws Throwable {", "-\t\t\ttry {", "-\t\t\t\tfNext.evaluate();", "-\t\t\t\tif (fMatcherBuilder.expectsThrowable())", "-\t\t\t\t\tfailDueToMissingException();", "-\t\t\t} catch (AssumptionViolatedException e) {", "-\t\t\t\toptionallyHandleException(e, handleAssumptionViolatedExceptions);", "-\t\t\t} catch (AssertionError e) {", "-\t\t\t\toptionallyHandleException(e, handleAssertionErrors);", "-\t\t\t} catch (Throwable e) {", "-\t\t\t\thandleException(e);", "-\t\t\t}", "-\t\t}", "+        @Override", "+        public void evaluate() throws Throwable {", "+            try {", "+                fNext.evaluate();", "+                if (fMatcherBuilder.expectsThrowable()) {", "+                    failDueToMissingException();", "+                }", "+            } catch (AssumptionViolatedException e) {", "+                optionallyHandleException(e, handleAssumptionViolatedExceptions);", "+            } catch (AssertionError e) {", "+                optionallyHandleException(e, handleAssertionErrors);", "+            } catch (Throwable e) {", "+                handleException(e);", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee4e0d244e03ba22e937982740fa59b4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tstatic public void assertNotEquals(String message, double first,  \t\t\tdouble second, double delta)", "signatureAfterChange": "     static public void assertNotEquals(String message, double first,             double second, double delta)", "diff": ["-\t */", "-\tstatic public void assertNotEquals(String message, double first, ", "-\t\t\tdouble second, double delta) {", "-\t\tif (!doubleIsDifferent(first, second, delta))", "-\t\t\tfailEquals(message, new Double(first));", "-\t}\t", "+     */", "+    static public void assertNotEquals(String message, double first,", "+            double second, double delta) {", "+        if (!doubleIsDifferent(first, second, delta)) {", "+            failEquals(message, new Double(first));", "+        }", "+    }"]}]}