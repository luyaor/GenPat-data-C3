{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f68fa784d9d3f62d7f172b7cbf61027", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dc1f434dbf2d98a2a43e533d40579da", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/framework/TestSuite.java", "commitBeforeChange": "b6a023c447628100c104708666eddd0b2eaa41d3", "commitAfterChange": "86b71cb1b9784a9b87c86b4f3f12632ae6773d1f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic Test createTest(Class theClass, String name) throws IllegalArgumentException", "signatureAfterChange": "  \tstatic public Test createTest(Class theClass, String name)", "diff": ["-\tpublic Test createTest(Class theClass, String name) throws IllegalArgumentException {", "-\t\tConstructor c;", "+\tstatic public Test createTest(Class theClass, String name) {", "+\t\tConstructor constructor;", "-\t\t\tc= getConstructor(theClass);", "+\t\t\tconstructor= getTestConstructor(theClass);", "-\t\t\tif (c.getParameterTypes().length == 0) {", "-\t\t\t\ttest= c.newInstance(new Object[0]);", "+\t\t\tif (constructor.getParameterTypes().length == 0) {", "+\t\t\t\ttest= constructor.newInstance(new Object[0]);", "-\t\t\t\ttest= c.newInstance(new Object[]{name});", "+\t\t\t\ttest= constructor.newInstance(new Object[]{name});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d856ca5bd791e784ca41f5aaab14d2cd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/ArrayComparisonFailure.java", "commitBeforeChange": "2859b41ad921d7f525c8dff5a3a9a5a0eb8d68b9", "commitAfterChange": "8a6ada28b1b763d1eecb009716e8c75660271565", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public String getMessage()", "signatureAfterChange": "      @Override     public String getMessage()", "diff": ["-        StringBuilder builder = new StringBuilder();", "+        StringBuilder sb = new StringBuilder();", "-            builder.append(fMessage);", "+            sb.append(fMessage);", "-        builder.append(\"arrays first differed at element \");", "+        sb.append(\"arrays first differed at element \");", "-            builder.append(\"[\");", "-            builder.append(each);", "-            builder.append(\"]\");", "+            sb.append(\"[\");", "+            sb.append(each);", "+            sb.append(\"]\");", "-        builder.append(\"; \");", "-        builder.append(fCause.getMessage());", "-        return builder.toString();", "+        sb.append(\"; \");", "+        sb.append(fCause.getMessage());", "+        return sb.toString();"]}]}