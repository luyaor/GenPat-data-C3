{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb65183198430d5a8c1837b155d3e093", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "027c213cb8cf424ee46e34dbeaa09ea4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "4081076e513e84bb2376f889d4108e64e9a18653", "commitAfterChange": "a58514aec7e843339be24980e92aeeb759327ffb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t\t@Override \t\tpublic void run(final Roadie context)", "signatureAfterChange": "  \t\t@Override \t\tpublic void run(final Roadie context)", "diff": ["-\t\t\t\t\tfNext.run(context);", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tfNext.run(context);", "+\t\t\t\t\t} catch (Exception e) {", "+\t\t\t\t\t\tthrow e;", "+\t\t\t\t\t} catch (Error e) {", "+\t\t\t\t\t\tthrow e;", "+\t\t\t\t\t} catch (Throwable e) {", "+\t\t\t\t\t\t// TODO: (Oct 5, 2007 11:27:11 AM) Now what?", "+\t\t\t\t\t}", "+\t\t\t} catch (ExecutionException e) {", "+\t\t\t\tcontext.addFailure(e.getCause());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f4e2cf7b3a1e90511825553e90c78f7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestClass.java", "commitBeforeChange": "0e1c92693e70e52ad9af23ee6180500c74fc9c95", "commitAfterChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void runProtected(RunNotifier notifier, Description description, Runnable runnable)", "signatureAfterChange": "  \tpublic void runProtected(RunNotifier notifier, Description description, Runnable runnable)", "diff": ["-\t\trunProtected(new EachTestNotifier(notifier, description), runnable, null);", "+\t\tEachTestNotifier testNotifier= new EachTestNotifier(notifier, description);", "+\t\ttry {", "+\t\t\trunProtected(testNotifier, runnable, null);", "+\t\t} catch (AssumptionViolatedException e) {", "+\t\t\t// TODO: (Oct 12, 2007 10:21:33 AM) DUP with other ignorings", "+\t\t} catch (StoppedByUserException e) {", "+\t\t\t// TODO: (Oct 12, 2007 10:26:35 AM) DUP", "+", "+\t\t\tthrow e;", "+\t\t} catch (Throwable e) {", "+\t\t\ttestNotifier.addFailure(e);", "+\t\t}"]}]}