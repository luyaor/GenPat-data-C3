{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e70bb00678e6ab2e5ea5ca3b95ab71f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c5ae13fc03a17457c38f57e37507dd1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "a58514aec7e843339be24980e92aeeb759327ffb", "commitAfterChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t\t@Override \t\tpublic void run(final Roadie context)", "signatureAfterChange": "  \t\t@Override \t\tpublic void run(final Roadie context) throws Throwable", "diff": ["-\t\tpublic void run(final Roadie context) {", "+\t\tpublic void run(final Roadie context) throws Throwable {", "-\t\t\t\tcontext.addFailure(new Exception(String.format(", "-\t\t\t\t\t\t\"test timed out after %d milliseconds\", timeout)));", "+\t\t\t\tthrow new Exception(String.format(", "+\t\t\t\t\t\t\"test timed out after %d milliseconds\", timeout));", "-\t\t\t\tcontext.addFailure(e.getCause());", "-\t\t\t} catch (Exception e) {", "-\t\t\t\tcontext.addFailure(e);", "+\t\t\t\tthrow e.getCause();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f54bdf04fbe0f9f4d1dbafce2a4400ee", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "a58514aec7e843339be24980e92aeeb759327ffb", "commitAfterChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t\t@Override \t\tpublic void run(final Roadie context)", "signatureAfterChange": "  \t\t@Override \t\tpublic void run(final Roadie context) throws Throwable", "diff": ["-\t\tpublic void run(final Roadie context) {", "-\t\t\tcontext.runProtected(JUnit4MethodRunner.this, new Runnable() {", "-\t\t\t\tpublic void run() {", "-\t\t\t\t\t// TODO: (Oct 5, 2007 11:56:12 AM) DUP with Theory", "-", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tfNext.run(context);", "-\t\t\t\t\t} catch (Throwable e) {", "-\t\t\t\t\t\tcontext.addFailure(e);", "-\t\t\t\t\t}", "-\t\t\t\t}\t\t\t", "-\t\t\t});", "+\t\tpublic void run(final Roadie context) throws Throwable {", "+\t\t\ttry {", "+\t\t\t\tif (context.runBefores(JUnit4MethodRunner.this)) // TODO get rid of the dependency on the enclosing instance", "+\t\t\t\t\tfNext.run(context);", "+\t\t\t} finally {", "+\t\t\t\tcontext.runAfters(JUnit4MethodRunner.this);", "+\t\t\t}"]}]}