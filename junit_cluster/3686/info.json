{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e1fdfeec979036555407fd505a552e3", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b598a640649045e2ba329a27174ba7bd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/builders/AnnotatedBuilder.java", "commitBeforeChange": "f4d4a0a9f11656625aabbb2a4b3b1164a8722f1c", "commitAfterChange": "3cd86b7018f2c57f10d671d007d08caa74463c09", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public Runner buildRunner(Class<? extends Runner> runnerClass,             Class<?> testClass) throws Exception", "signatureAfterChange": "      public Runner buildRunner(Class<? extends Runner> runnerClass,             Class<?> testClass) throws Exception", "diff": ["-            return runnerClass.getConstructor(Class.class).newInstance(", "-                    new Object[]{testClass});", "+            return runnerClass.getConstructor(Class.class).newInstance(testClass);", "-                        RunnerBuilder.class).newInstance(", "-                        new Object[]{testClass, fSuiteBuilder});", "+                        RunnerBuilder.class).newInstance(testClass, fSuiteBuilder);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb05e169cb5e9322e7483659aeb3a813", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "e1bf14b4d5b7aecf4611fd400417359424121544", "commitAfterChange": "f6a3d7405b72966d3714355804e1b3c14b1425cb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "      private List<Runner> createRunnersForParameters(Iterable<Object[]> allParameters, String namePattern) throws Exception", "signatureAfterChange": "      private List<Runner> createRunnersForParameters(Iterable<Object> allParameters, String namePattern) throws Exception", "diff": ["-    private List<Runner> createRunnersForParameters(Iterable<Object[]> allParameters, String namePattern) throws Exception {", "+    private List<Runner> createRunnersForParameters(Iterable<Object> allParameters, String namePattern) throws Exception {", "-            for (Object[] parametersOfSingleTest : allParameters) {", "-                children.add(createRunner(namePattern, i++, parametersOfSingleTest));", "+            for (Object parametersOfSingleTest : allParameters) {", "+                children.add(createRunnerWithNotNormalizedParameters(", "+                    namePattern, i++, parametersOfSingleTest));"]}]}