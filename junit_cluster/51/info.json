{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb5d03374f0a074bd1bbc60cfe8e9b25", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b9d2b7e39ea322fdc8cb587208c5275", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/awtui/TestRunner.java", "commitBeforeChange": "b6a023c447628100c104708666eddd0b2eaa41d3", "commitAfterChange": "86b71cb1b9784a9b87c86b4f3f12632ae6773d1f", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tprivate void rerunTest(Test test)", "signatureAfterChange": "  \tprivate void rerunTest(Test test)", "diff": ["+\t\tTestCase rerunTest= (TestCase)test;", "-\t\t\tClass reloadedTestClass= getLoader().reload(test.getClass());", "-\t\t\tClass[] classArgs= { String.class };", "-\t\t\tConstructor constructor= reloadedTestClass.getConstructor(classArgs);", "-\t\t\tObject[] args= new Object[]{((TestCase)test).getName()};", "-\t\t\treloadedTest= (Test)constructor.newInstance(args);", "+\t\t\tClass reloadedTestClass= getLoader().reload(test.getClass()); ", "+\t\t\treloadedTest= TestSuite.createTest(reloadedTestClass, rerunTest.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e31c8da92f328ab04c8666902aaa6d59", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "b6a023c447628100c104708666eddd0b2eaa41d3", "commitAfterChange": "86b71cb1b9784a9b87c86b4f3f12632ae6773d1f", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "  \tprivate void rerunTest(Test test)", "signatureAfterChange": "  \tprivate void rerunTest(Test test)", "diff": ["+\t\tTestCase rerunTest= (TestCase)test;", "+", "-\t\t\tClass reloadedTestClass= getLoader().reload(test.getClass());", "-\t\t\tClass[] classArgs= { String.class };", "-\t\t\tConstructor constructor= reloadedTestClass.getConstructor(classArgs);", "-\t\t\tObject[] args= new Object[]{((TestCase)test).getName()};", "-\t\t\treloadedTest= (Test)constructor.newInstance(args);", "+\t\t\tClass reloadedTestClass= getLoader().reload(test.getClass()); ", "+\t\t\treloadedTest= TestSuite.createTest(reloadedTestClass, rerunTest.getName());"]}]}