{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a0b5c2c4a9ce29809aaecb69ae2e3eb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "848668e565e07d9a571446f9f2eb6a47", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/ErrorReportingRunner.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic Description getDescription()", "signatureAfterChange": "      @Override     public Description getDescription()", "diff": ["-\t@Override", "-\tpublic Description getDescription() {", "-\t\tDescription description= Description.createSuiteDescription(fTestClass);", "-\t\tfor (Throwable each : fCauses)", "-\t\t\tdescription.addChild(describeCause(each));", "-\t\treturn description;", "-\t}", "+    @Override", "+    public Description getDescription() {", "+        Description description = Description.createSuiteDescription(fTestClass);", "+        for (Throwable each : fCauses) {", "+            description.addChild(describeCause(each));", "+        }", "+        return description;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b99692826c6f0cc59341e8b21598252e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \t@Override \tpublic Description getDescription()", "signatureAfterChange": "      @Override     public Description getDescription()", "diff": ["-\t", "-\t@Override", "-\tpublic Description getDescription() {", "-\t\tDescription description= Description.createSuiteDescription(getName(),", "-\t\t\t\tgetRunnerAnnotations());", "-\t\tfor (T child : getFilteredChildren())", "-\t\t\tdescription.addChild(describeChild(child));", "-\t\treturn description;", "-\t}", "+    @Override", "+    public Description getDescription() {", "+        Description description = Description.createSuiteDescription(getName(),", "+                getRunnerAnnotations());", "+        for (T child : getFilteredChildren()) {", "+            description.addChild(describeChild(child));", "+        }", "+        return description;", "+    }"]}]}