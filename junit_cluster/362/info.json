{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a27c3936e3421aa5f62a5e708d2e8c6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52ab4d9813a3adcd930ebb6e41aa1e16", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "c7fe9c82850d54468bfbc900a418873d4d5107fe", "commitAfterChange": "c7874453182cde8e7b38cf3ce356d16d3d1dcde8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprivate static MaxHistory readHistory(File storedResults) throws CouldNotReadCoreException", "signatureAfterChange": " \t \tprivate static MaxHistory readHistory(File storedResults) throws CouldNotReadCoreException", "diff": ["-", "+\t\tFileInputStream file= null;", "-\t\t\tstream= new ObjectInputStream(new FileInputStream(storedResults));", "-\t\t} catch (IOException e) {", "+\t\t\tfile= new FileInputStream(storedResults);", "+\t\t} catch (FileNotFoundException e) {", "-\t\t\treturn (MaxHistory) stream.readObject();", "-\t\t} catch (Exception e) {", "-\t\t\tthrow new CouldNotReadCoreException(e); //TODO think about what we can do better here", "-\t\t} finally {", "-\t\t\t\tstream.close();", "+\t\t\t\tstream= new ObjectInputStream(file);", "+\t\t\ttry {", "+\t\t\t\treturn (MaxHistory) stream.readObject();", "+\t\t\t} catch (Exception e) {", "+\t\t\t\tthrow new CouldNotReadCoreException(e); //TODO think about what we can do better here", "+\t\t\t} finally {", "+\t\t\t\ttry {", "+\t\t\t\t\tstream.close();", "+\t\t\t\t} catch (IOException e) {", "+\t\t\t\t\tthrow new CouldNotReadCoreException(e);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} finally {", "+\t\t\ttry {", "+\t\t\t\tfile.close();", "+\t\t\t} catch (IOException e) {", "+\t\t\t\t// TODO can't imagine what's gone wrong here, but who cares?", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3d0e31c9405583a05175042b96d5eb9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "c1fb11d4e5280cda98c84a910545703b15b1cf67", "commitAfterChange": "24466485d2dfb58818ac3abf222558a230cbf4cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprivate static MaxHistory readHistory(File storedResults) throws CouldNotReadCoreException", "signatureAfterChange": "  \tprivate static MaxHistory readHistory(File storedResults) \t\t\tthrows CouldNotReadCoreException", "diff": ["-\t", "-\tprivate static MaxHistory readHistory(File storedResults) throws CouldNotReadCoreException {", "-\t\t// TODO: rule of three", "-\t\t// TODO: Really?", "-\t\tObjectInputStream stream;", "-\t\tFileInputStream file= null;", "+", "+\tprivate static MaxHistory readHistory(File storedResults)", "+\t\t\tthrows CouldNotReadCoreException {", "-\t\t\tfile= new FileInputStream(storedResults);", "-\t\t} catch (FileNotFoundException e) {", "+\t\t\tFileInputStream file= new FileInputStream(storedResults);", "+\t\t\ttry {", "+\t\t\t\tObjectInputStream stream= new ObjectInputStream(file);", "+\t\t\t\ttry {", "+\t\t\t\t\treturn (MaxHistory) stream.readObject();", "+\t\t\t\t} finally {", "+\t\t\t\t\tstream.close();", "+\t\t\t\t}", "+\t\t\t} finally {", "+\t\t\t\tfile.close();", "+\t\t\t}", "+\t\t} catch (Exception e) {", "-\t\ttry {", "-\t\t\ttry {", "-\t\t\t\tstream= new ObjectInputStream(file);", "-\t\t\t} catch (IOException e) {", "-\t\t\t\tthrow new CouldNotReadCoreException(e);", "-\t\t\t}", "-\t\t\ttry {", "-\t\t\t\treturn (MaxHistory) stream.readObject();", "-\t\t\t} catch (Exception e) {", "-\t\t\t\tthrow new CouldNotReadCoreException(e); //TODO think about what we can do better here", "-\t\t\t} finally {", "-\t\t\t\ttry {", "-\t\t\t\t\tstream.close();", "-\t\t\t\t} catch (IOException e) {", "-\t\t\t\t\tthrow new CouldNotReadCoreException(e);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} finally {", "-\t\t\ttry {", "-\t\t\t\tfile.close();", "-\t\t\t} catch (IOException e) {", "-\t\t\t\t// TODO can't imagine what's gone wrong here, but who cares?", "-\t\t\t}", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e419acfdf596b24c57bcda8948d566d7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "be06ab8bfe4991ce64d4dae0655833b060362cda", "commitAfterChange": "fea583afc60dfdd67dec3349f0e0203d6cb3a69f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprivate static MaxHistory readHistory(File storedResults) throws CouldNotReadCoreException", "signatureAfterChange": "  \tprivate static MaxHistory readHistory(File storedResults) \t\t\tthrows CouldNotReadCoreException", "diff": ["-\t", "-\tprivate static MaxHistory readHistory(File storedResults) throws CouldNotReadCoreException {", "-\t\t// TODO: rule of three", "-\t\t// TODO: Really?", "-\t\tObjectInputStream stream;", "-\t\tFileInputStream file= null;", "+", "+\tprivate static MaxHistory readHistory(File storedResults)", "+\t\t\tthrows CouldNotReadCoreException {", "-\t\t\tfile= new FileInputStream(storedResults);", "-\t\t} catch (FileNotFoundException e) {", "+\t\t\tFileInputStream file= new FileInputStream(storedResults);", "+\t\t\ttry {", "+\t\t\t\tObjectInputStream stream= new ObjectInputStream(file);", "+\t\t\t\ttry {", "+\t\t\t\t\treturn (MaxHistory) stream.readObject();", "+\t\t\t\t} finally {", "+\t\t\t\t\tstream.close();", "+\t\t\t\t}", "+\t\t\t} finally {", "+\t\t\t\tfile.close();", "+\t\t\t}", "+\t\t} catch (Exception e) {", "-\t\ttry {", "-\t\t\ttry {", "-\t\t\t\tstream= new ObjectInputStream(file);", "-\t\t\t} catch (IOException e) {", "-\t\t\t\tthrow new CouldNotReadCoreException(e);", "-\t\t\t}", "-\t\t\ttry {", "-\t\t\t\treturn (MaxHistory) stream.readObject();", "-\t\t\t} catch (Exception e) {", "-\t\t\t\tthrow new CouldNotReadCoreException(e); //TODO think about what we can do better here", "-\t\t\t} finally {", "-\t\t\t\ttry {", "-\t\t\t\t\tstream.close();", "-\t\t\t\t} catch (IOException e) {", "-\t\t\t\t\tthrow new CouldNotReadCoreException(e);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} finally {", "-\t\t\ttry {", "-\t\t\t\tfile.close();", "-\t\t\t} catch (IOException e) {", "-\t\t\t\t// TODO can't imagine what's gone wrong here, but who cares?", "-\t\t\t}", "-\t\t}"]}]}