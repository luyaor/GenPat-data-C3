{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89a558c13eba0cb50c81d578c8cca011", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bed292f272fe447dcf007d227b4d934", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "0e1c92693e70e52ad9af23ee6180500c74fc9c95", "commitAfterChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t\tprotected void runWithIncompleteAssignment(Assignments incomplete, FailureListener listener) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tThrowable", "signatureAfterChange": "  \t\tprotected void runWithIncompleteAssignment(Assignments incomplete) throws InstantiationException, \t\t\t\tIllegalAccessException, Throwable", "diff": ["-\t\tprotected void runWithIncompleteAssignment(Assignments incomplete, FailureListener listener)", "-\t\t\t\tthrows InstantiationException, IllegalAccessException,", "-\t\t\t\tThrowable {", "-\t\t\tList<PotentialAssignment> potentialsForNextUnassigned= incomplete", "-\t\t\t\t\t\t\t.potentialsForNextUnassigned();", "-\t\t\tfor (PotentialAssignment source : potentialsForNextUnassigned) {", "-\t\t\t\trunWithAssignment(incomplete.assignNext(source), listener);", "+\t\tprotected void runWithIncompleteAssignment(Assignments incomplete) throws InstantiationException,", "+\t\t\t\tIllegalAccessException, Throwable {", "+\t\t\tfor (PotentialAssignment source : incomplete", "+\t\t\t\t\t.potentialsForNextUnassigned()) {", "+\t\t\t\trunWithAssignment(incomplete.assignNext(source));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79aefc70f6260effa385e29a998e3925", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "a4c68872a91681139d404825c2bb04bd5ba804dd", "commitAfterChange": "f0ef837a40922ac08c608661385abf71732975d3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t\tprotected void runWithIncompleteAssignment(Assignments incomplete, EachTestNotifier notifier) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tThrowable", "signatureAfterChange": "  \t\tprotected void runWithIncompleteAssignment(Assignments incomplete, FailureListener listener) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tThrowable", "diff": ["-\t\tprotected void runWithIncompleteAssignment(Assignments incomplete, EachTestNotifier notifier)", "+\t\tprotected void runWithIncompleteAssignment(Assignments incomplete, FailureListener listener)", "-\t\t\tfor (PotentialAssignment source : incomplete", "-\t\t\t\t\t.potentialsForNextUnassigned()) {", "-\t\t\t\trunWithAssignment(incomplete.assignNext(source), notifier);", "+\t\t\tList<PotentialAssignment> potentialsForNextUnassigned= incomplete", "+\t\t\t\t\t\t\t.potentialsForNextUnassigned();", "+\t\t\tfor (PotentialAssignment source : potentialsForNextUnassigned) {", "+\t\t\t\trunWithAssignment(incomplete.assignNext(source), listener);"]}]}