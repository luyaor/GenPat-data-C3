{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d6c4aa32dcf68ef3605c5c99cfbdef25", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49800c8ba20b8523cff0b33fb8f96b0e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/framework/TestSuite.java", "commitBeforeChange": "3448af3ea34963ae8f6481e8b16a2a1b5de605bb", "commitAfterChange": "cb69050a45f1688ad8c6e817cc511cfa67401f63", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate void addTestsFromTestCase(final Class<?> theClass)", "signatureAfterChange": "  \tprivate void addTestsFromTestCase(final Class<?> theClass)", "diff": ["-\t\t\tfor (Method each : superClass.getDeclaredMethods())", "+\t\t\tfor (Method each : MethodSorter.getDeclaredMethods(superClass))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ffaa34b965ffef178ae0bb5a97129fe", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "3448af3ea34963ae8f6481e8b16a2a1b5de605bb", "commitAfterChange": "cb69050a45f1688ad8c6e817cc511cfa67401f63", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic TestClass(Class<?> klass)", "signatureAfterChange": " \tpublic TestClass(Class<?> klass)", "diff": ["-\t\t\tfor (Method eachMethod : eachClass.getDeclaredMethods())", "+\t\t\tfor (Method eachMethod : MethodSorter.getDeclaredMethods(eachClass))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c11b084c1e0bdc8cb5925a769201c3aa", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/TestClass.java", "commitBeforeChange": "3448af3ea34963ae8f6481e8b16a2a1b5de605bb", "commitAfterChange": "cb69050a45f1688ad8c6e817cc511cfa67401f63", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic List<Method> getAnnotatedMethods(Class<? extends Annotation> annotationClass)", "signatureAfterChange": " \t \tpublic List<Method> getAnnotatedMethods(Class<? extends Annotation> annotationClass)", "diff": ["-\t\t\tMethod[] methods= eachClass.getDeclaredMethods();", "+\t\t\tMethod[] methods= MethodSorter.getDeclaredMethods(eachClass);"]}]}