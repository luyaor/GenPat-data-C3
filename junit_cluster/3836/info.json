{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b75c87b696171753a2d90da43e258a1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7659e198373ae21db40f3e6130222d41", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "af692868db814126bbac29a1f28f5adf30c6ce1c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public List<PotentialAssignment> potentialsForNextUnassigned()             throws Exception", "signatureAfterChange": "      public List<PotentialAssignment> potentialsForNextUnassigned()             throws Exception", "diff": ["-        return getSupplier(unassigned).getValueSources(unassigned);", "+        List<PotentialAssignment> assignments = getSupplier(unassigned).getValueSources(unassigned);", "+        ", "+        if (assignments.size() == 0) {", "+            assignments = generateAssignmentsFromTypeAlone(unassigned);", "+        }", "+        ", "+        return assignments;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae654e95afcc911ecd22af650cfe0f74", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "6a8215ab69317916807f246daef80a9d4cf5dc8e", "commitAfterChange": "cbf46b88c2937aece7018fa50ba4dbb133e03d06", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t\t@Override \t\tprotected void validateConstructor(List<Throwable> errors)", "signatureAfterChange": "  \t\t@Override \t\tprotected void validateConstructor(List<Throwable> errors)", "diff": ["+\t\t\tList<FrameworkField> annotatedFieldsByParameter = getTestClass().getAnnotatedFields(Parameter.class);", "+\t\t\tif (annotatedFieldsByParameter.size() > 0) {", "+\t\t\t\tvalidateZeroArgConstructor(errors);", "+\t\t\t}", "+\t\t}"]}]}