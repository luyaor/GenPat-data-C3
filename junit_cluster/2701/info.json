{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "beeb5efa0fd2a00d26695259aa858e6d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13dde4e25428efd0e2be713e383a39c8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "b77d9de8e3e2894fc6120c95a8e7766c38912d49", "commitAfterChange": "796e723caa0a1f75bb7b48b2454bea633fbf8e4e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \t@Override \tprotected Runner getRunner(RunnerBuilder builder, Class<?> testClass) \t\t\tthrows Throwable", "signatureAfterChange": "  \t@Override \tprotected Runner getRunner(RunnerBuilder builder, Class<?> testClass) \t\t\tthrows Throwable", "diff": ["-\t", "-\t@Override", "-\tprotected Runner getRunner(RunnerBuilder builder, Class<?> testClass)", "-\t\t\tthrows Throwable {", "-\t\treturn fMethods", "-\t\t\t? new ParallelRunner(testClass)", "-\t\t\t: super.getRunner(builder, testClass);", "-\t}", "+", "+\t@Override", "+\tprotected Runner getRunner(RunnerBuilder builder, Class<?> testClass)", "+\t\t\tthrows Throwable {", "+\t\t// TODO (May 4, 2009 4:09:16 PM): no guarantees here", "+\t\tBlockJUnit4ClassRunner runner= (BlockJUnit4ClassRunner) super.getRunner(builder, testClass);", "+\t\treturn fMethods ? parallelize(runner) : runner;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18f28ad702b2b49812eab93a8d4530c0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "0dc3de7fbcf997ca8465ed9e7793a0b4f730121b", "commitAfterChange": "3d08ecc6a661f09520559637794c9a161db90f3d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \t@Override \tprotected Runner getRunner(RunnerBuilder builder, Class<?> testClass) \t\t\tthrows Throwable", "signatureAfterChange": "  \t@Override \tprotected Runner getRunner(RunnerBuilder builder, Class<?> testClass) \t\t\tthrows Throwable", "diff": ["-\t", "-\t@Override", "-\tprotected Runner getRunner(RunnerBuilder builder, Class<?> testClass)", "-\t\t\tthrows Throwable {", "-\t\treturn fMethods", "-\t\t\t? new ParallelRunner(testClass)", "-\t\t\t: super.getRunner(builder, testClass);", "-\t}", "+", "+\t@Override", "+\tprotected Runner getRunner(RunnerBuilder builder, Class<?> testClass)", "+\t\t\tthrows Throwable {", "+\t\t// TODO (May 4, 2009 4:09:16 PM): no guarantees here", "+\t\tBlockJUnit4ClassRunner runner= (BlockJUnit4ClassRunner) super.getRunner(builder, testClass);", "+\t\treturn fMethods ? parallelize(runner) : runner;"]}]}