{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76ad6f31c28a9aae967937719b706b3d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e8266e5322cf436c4b1f31ea8d9b6be", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/SuiteMethodTest.java", "commitBeforeChange": "7a2a3811a762d7988dc153d59c4222a6ab96bf82", "commitAfterChange": "1299fcddc57ce7956d87022c3e32c09b447690a3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \t@Test public void makeSureSuiteNotUsedWithJUnit4Classes()", "signatureAfterChange": " \t \t@Test public void suiteIsUsedWithJUnit4Classes()", "diff": ["-\t@Test public void makeSureSuiteNotUsedWithJUnit4Classes() {", "+\t@Test public void suiteIsUsedWithJUnit4Classes() {", "-\t\tResult res= JUnitCore.runClasses(NewTestSuiteFails.class);", "-\t\tassertEquals(1, res.getFailureCount());", "+\t\tResult result= JUnitCore.runClasses(NewTestSuiteFails.class);", "+\t\tassertEquals(1, result.getFailureCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3ff684fa3e701b66fcbd783f82f1946", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/AssumingInTheoriesTest.java", "commitBeforeChange": "fbcebcae05bc4aee3f8dcf24ebfcf69e6b245a0f", "commitAfterChange": "178f854e4c7e31ece6d71f5aa4433f0432349f4f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Test \tpublic void theoryMeansOnlyAssumeShouldFail() throws InitializationError", "signatureAfterChange": "  \t@Test \tpublic void theoryMeansOnlyAssumeShouldFail() throws InitializationError", "diff": ["-\tpublic void theoryMeansOnlyAssumeShouldFail() throws InitializationError{", "-\t\t", "+\tpublic void theoryMeansOnlyAssumeShouldFail() throws InitializationError {", "-\t\tAssert.assertEquals(\"A theory with no valid parameters did not fail.\", 1, result.getFailureCount());", "-\t\t", "+\t\tAssert.assertEquals(1, result.getFailureCount());"]}]}