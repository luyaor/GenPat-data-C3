{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6988d8fc2ade4f1048923a591f6e6ee9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30a6c64506f7b5352de509ce7dd76278", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "3aca014a2c39723febbe7def2fd132da80c3f4a9", "commitAfterChange": "2c6c142aa801cef3520ca668e75a670a32b4859a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private void validateDataPointFields(List<Throwable> errors)", "signatureAfterChange": "      private void validateDataPointFields(List<Throwable> errors)", "diff": ["-            if (field.getAnnotation(DataPoint.class) == null) {", "+            if (field.getAnnotation(DataPoint.class) == null && field.getAnnotation(DataPoints.class) == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a16de8229de6ec05b8d971df6feb1a2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "90bf3119a6326671cc467386036302cc6040f752", "commitAfterChange": "34dd9f4e2bebbcf694dcb855a29edff9243a10d3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate void addFields(ParameterSignature sig, \t\t\tList<PotentialAssignment> list)", "signatureAfterChange": "  \tprivate void addFields(ParameterSignature sig, \t\t\tList<PotentialAssignment> list)", "diff": ["-\t\t\t\t} else if (sig.canAcceptType(type)) {", "+\t\t\t\t} else if (sig.canAcceptType(type)", "+\t\t\t\t\t\t&& field.getAnnotation(DataPoint.class) != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9abd58602b6f9e0a645ae24644e52865", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "1796fa2ddd8ab6e2551d40b1b1a63cd954837b19", "commitAfterChange": "4d1d0bb9ee6926b5a85ebc2ad077eb31f94e1181", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \t@Override \tpublic List<PotentialAssignment> getValueSources(ParameterSignature sig)", "signatureAfterChange": " \t \t@Override \tpublic List<PotentialAssignment> getValueSources(ParameterSignature sig)", "diff": ["-\t\t\t\t// TODO: (Dec 6, 2007 2:46:57 PM) if DataPoints present, interpret as array, not object", "-", "-\t\t\t\tif (sig.canAcceptType(type)) {", "+\t\t\t\tif (sig.canAcceptArrayType(type) && field.getAnnotation(DataPoints.class) != null) {", "+\t\t\t\t\taddArrayValues(list, getStaticFieldValue(field));", "+\t\t\t\t} else if (sig.canAcceptType(type)) {", "-\t\t\t\t} else if (sig.canAcceptArrayType(type)) {", "-\t\t\t\t\taddArrayValues(list, getStaticFieldValue(field));", "+\t\t", "+\t\t// TODO: (Dec 7, 2007 12:45:57 PM) should Enclosed be a CompositeRunner, too?"]}]}