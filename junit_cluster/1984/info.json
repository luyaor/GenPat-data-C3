{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "67df6e3230a15cf3e05c18537272420d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f21c4cc7c25f153fddcfbba978898a9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/links/FailOnTimeout.java", "commitBeforeChange": "2807ff63d6b408a927fd3dd684a42a2366677657", "commitAfterChange": "08ee65bccfde21186fb1d1303b36e966c9008c99", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic void evaluate() throws Throwable", "signatureAfterChange": "  \t@Override \tpublic void evaluate() throws Throwable", "diff": ["-\t\t\t\t// TODO: (Oct 12, 2007 10:15:08 AM) Use MultipleFailureException", "-\t\t\t\t// TODO: (Oct 12, 2007 10:15:19 AM) Use MultipleFailureException in construction", "-\t\t\t\t// TODO: (Oct 12, 2007 10:15:29 AM) Convert to Statement?", "-", "-", "-", "-\t\t\t\t} catch (Exception e) {", "-\t\t\t\t\tthrow e;", "-\t\t\t\t} catch (Error e) {", "-\t\t\t\t\tthrow e;", "-\t\t\t\t\t// TODO: (Oct 5, 2007 11:27:11 AM) Now what?  Is there a useful thing to do with this?", "+\t\t\t\t\tthrow new ExecutionException(e);", "-\t\t\tthrow e.getCause();", "+\t\t\tthrow unwrap(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f064339582cfc0642f5d28f1d59e00c1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCore.java", "commitBeforeChange": "d6662fcc06ec7b07c696eb703c47d3731e4e11c7", "commitAfterChange": "85578d48f6459a05665329faa9b52a861e9142cb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic Result run(Request request)", "signatureAfterChange": " \tpublic Result run(Request request)", "diff": ["-\t\t//return run(request.getRunner());", "-\t\tMaxCore max= null;", "-\t\ttry {", "-\t\t\tmax= MaxCore.forFolder(\"defaultMaxCore\");", "-\t\t} catch (CouldNotReadCoreException e) {", "-\t\t\te.printStackTrace();", "-\t\t}", "-\t\treturn max.run(request, this);", "+\t\treturn run(request.getRunner());"]}]}