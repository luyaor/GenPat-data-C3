{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "49eb2153e44cd9ab52665c094653e7a1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96fc7b812ae6ecccd74e003090154882", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "4cb9a65f450efa5f2a42128856c7b56e6d283386", "commitAfterChange": "73015005c155a0a7efdfe9edef87a95bb6fcc2de", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t\t\t\t\t \t\t\t\t\t@Override \t\t\t\t\tpublic Object createTest() throws Exception", "signatureAfterChange": "  \t\t\t@Override \t\t\tpublic Object createTest() throws Exception", "diff": ["+", "+\t\t\t@Override", "+\t\t\tpublic Object createTest() throws Exception {", "+\t\t\t\t// TODO: (Oct 12, 2007 12:31:12 PM) DUP", "+\t\t\t\t// TODO: (Oct 12, 2007 12:40:33 PM) honor assumption violations in JUnit4ClassRunner constructor invocations", "+", "+\t\t\t\treturn getTestClass().getJavaClass().getConstructors()[0].newInstance(fComplete.getConstructorArguments(nullsOk()));", "+\t\t\t}", "-\t\t\t\t\t", "-\t\t\t\t\t@Override", "-\t\t\t\t\tpublic Object createTest() throws Exception {", "-\t\t\t\t\t\t// TODO: (Oct 12, 2007 12:31:12 PM) DUP", "-\t\t\t\t\t\t// TODO: (Oct 12, 2007 12:40:33 PM) honor assumption violations in JUnit4ClassRunner constructor invocations", "-", "-\t\t\t\t\t\treturn getTestClass().getJavaClass().getConstructors()[0].newInstance(complete.getConstructorArguments(nullsOk()));", "-\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea80e4c699a805896defa3872c11b764", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "1d982e5310d57fe0ea4b63e05f20215ee3add1fe", "commitAfterChange": "24a5aad1f49b4decf946f1df701e354a18544132", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \t\t\t@Override \t\t\tpublic Object createTest() throws Exception", "signatureAfterChange": " \t\t\t\t\t \t\t\t\t\t@Override \t\t\t\t\tpublic Object createTest() throws Exception", "diff": ["-", "-\t\t\t@Override", "-\t\t\tpublic Object createTest() throws Exception {", "-\t\t\t\t// TODO: (Oct 12, 2007 12:31:12 PM) DUP", "-\t\t\t\t// TODO: (Oct 12, 2007 12:40:33 PM) honor assumption violations in JUnit4ClassRunner constructor invocations", "-", "-\t\t\t\treturn getTestClass().getJavaClass().getConstructors()[0].newInstance(fComplete.getConstructorArguments(nullsOk()));", "-\t\t\t}", "+\t\t\t\t\t", "+\t\t\t\t\t@Override", "+\t\t\t\t\tpublic Object createTest() throws Exception {", "+\t\t\t\t\t\t// TODO: (Oct 12, 2007 12:31:12 PM) DUP", "+\t\t\t\t\t\t// TODO: (Oct 12, 2007 12:40:33 PM) honor assumption violations in JUnit4ClassRunner constructor invocations", "+", "+\t\t\t\t\t\treturn getTestClass().getJavaClass().getConstructors()[0].newInstance(complete.getConstructorArguments(nullsOk()));", "+\t\t\t\t\t}"]}]}