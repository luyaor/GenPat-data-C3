{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1994a917febf100b65a658d955efae8b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a281c0159119de19915dcd283d9d5e2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/TheoryMethod.java", "commitBeforeChange": "149ecd4dcd99697710aa350e9cd3b3bcac877125", "commitAfterChange": "787ed4e5bc2b68e8b5cdb6190ff1fc053f1a5b13", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tvoid runWithDiscoveredParameterValues(final Roadie context, \t\t\tPotentialMethodValues valueSources, List<ParameterSignature> sigs) throws Throwable", "signatureAfterChange": "  \tprotected void reportParameterizedError(Throwable e, Object... params) \t\t\tthrows Throwable", "diff": ["-\tvoid runWithDiscoveredParameterValues(final Roadie context,", "-\t\t\tPotentialMethodValues valueSources, List<ParameterSignature> sigs) throws Throwable {", "-\t\tif (sigs.size() == 0) {", "-\t\t\ttry {", "-\t\t\t\tfinal Object[] values= valueSources.getValues(nullsOk());", "-\t\t\t\tcontext.runProtected(this, new Runnable() {", "-\t\t\t\t\tpublic void run() {", "-\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\tinvokeWithActualParameters(context.getTarget(), values);", "-\t\t\t\t\t\t} catch (Throwable e) {", "-\t\t\t\t\t\t\tthrown = e;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t});", "-\t\t\t\tif (thrown != null)", "-\t\t\t\t\tthrow thrown;", "-\t\t\t} catch (CouldNotGenerateValueException e) {", "-\t\t\t}", "-\t\t} else {", "-\t\t\tfor (PotentialParameterValue source : sigs.get(0)", "-\t\t\t\t\t.getPotentialValues(context.getTarget())) {", "-\t\t\t\trunWithDiscoveredParameterValues(context, valueSources", "-\t\t\t\t\t\t.concat(source), sigs.subList(1, sigs.size()));", "-\t\t\t}", "+", "+\tprotected void reportParameterizedError(Throwable e, Object... params)", "+\t\t\tthrows Throwable {", "+\t\tif (params.length == 0)", "+\t\t\tthrow e;", "+\t\tthrow new ParameterizedAssertionError(e, getMethod().getName(), params);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aabf459aac8567d6e2ef81f0037c6a11", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/CounterPanel.java", "commitBeforeChange": "4cc2e3df5e2b49ca40518a3203fb7c7305859111", "commitAfterChange": "94c8b3980368f13c3e2338f84dba0acd38381102", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic CounterPanel()", "signatureAfterChange": " \t \tpublic CounterPanel()", "diff": ["-\t\tsuper(new GridLayout(1, 6)); \t", "-\t\tfNumberOfErrors= createOutputField(8);", "+\t\tsuper(new GridBagLayout()); \t", "+\t\tfNumberOfErrors= createOutputField(5);", "-\t\tfNumberOfRuns= createOutputField(5); ", "-\t\tadd(new JLabel(\"Runs:\"));\t\t", "-\t\tadd(fNumberOfRuns);", "-\t\tadd(new JLabel(\"Errors:\", fErrorIcon, SwingConstants.LEFT));\t", "-\t\tadd(fNumberOfErrors);", "-\t\tadd(new JLabel(\"Failures: \", fFailureIcon, SwingConstants.LEFT));\t", "-\t\tadd(fNumberOfFailures);", "+\t\tfNumberOfRuns= createOutputField(9); ", "+\t\t", "+      addToGrid(new JLabel(\"Runs:\", JLabel.CENTER),", "+          0, 0, 1, 1, 0.0, 0.0,", "+          GridBagConstraints.CENTER, GridBagConstraints.NONE,", "+          new Insets(0, 0, 0, 0));", "+     addToGrid(fNumberOfRuns,", "+          1, 0, 1, 1, 0.33, 0.0,", "+          GridBagConstraints.CENTER, GridBagConstraints.HORIZONTAL,", "+          new Insets(0, 8, 0, 0));", "+          ", "+     addToGrid(new JLabel(\"Errors:\", fErrorIcon, SwingConstants.LEFT),", "+          2, 0, 1, 1, 0.0, 0.0,", "+          GridBagConstraints.CENTER, GridBagConstraints.NONE,", "+          new Insets(0, 8, 0, 0));", "+      addToGrid(fNumberOfErrors,", "+          3, 0, 1, 1, 0.33, 0.0,", "+          GridBagConstraints.CENTER, GridBagConstraints.HORIZONTAL,", "+          new Insets(0, 8, 0, 0));", "+          ", "+      addToGrid(new JLabel(\"Failures:\", fFailureIcon, SwingConstants.LEFT),", "+          4, 0, 1, 1, 0.0, 0.0,", "+          GridBagConstraints.CENTER, GridBagConstraints.NONE,", "+          new Insets(0, 8, 0, 0));", "+      addToGrid(fNumberOfFailures,", "+          5, 0, 1, 1, 0.33, 0.0,", "+          GridBagConstraints.CENTER, GridBagConstraints.HORIZONTAL,", "+          new Insets(0, 8, 0, 0));"]}]}