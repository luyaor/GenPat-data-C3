{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "939136e9d77c2e2c17964af3033dde4b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28de62d0a0bb77d89985a53648a580f1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxCore.java", "commitBeforeChange": "a72b0dbef4b01e8ad0b832d9a579dd7fabd5a071", "commitAfterChange": "378e17964a4188bad9b3d966207a2f682072148e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void run(Request request)", "signatureAfterChange": "  \tpublic void run(Request request)", "diff": ["+\t\t\tprivate Map<Description, Long> starts= new HashMap<Description, Long>();", "+", "-\t\t\t\tthrow new UnsupportedOperationException();", "+\t\t\t\tstarts.put(description, System.nanoTime());", "-\t\t\t\tthrow new UnsupportedOperationException();", "+\t\t\t\tlong end= System.nanoTime();", "+\t\t\t\tlong start= starts.get(description);", "+\t\t\t\tdurations.put(description, end - start);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd8538ee578bf8df694d50ad98df357b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "dbe8a972fadaed5d2b88f4dfa44328fa323b59a2", "commitAfterChange": "08719e9b61d07c17b6a4f599ecd2cd1a1519120a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     protected Description describeChild(FrameworkMethod method)", "signatureAfterChange": "      @Override     protected Description describeChild(FrameworkMethod method)", "diff": ["-        return Description.createTestDescription(getTestClass().getJavaClass(),", "-                testName(method), method.getAnnotations());", "+        Description description = fMethodDescriptions.get(method);", "+", "+        if (description == null) {", "+            description = Description.createTestDescription(getTestClass().getJavaClass(),", "+                    testName(method), method.getAnnotations());", "+            fMethodDescriptions.put(method, description);", "+        }", "+", "+        return description;"]}]}