{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f3fa4d41034194ef43d87eb9913a9c7f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "975e95825deb12d702556b369f5501a3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxCore.java", "commitBeforeChange": "451ca12156d5704809a1feff78a10a9451cd2023", "commitAfterChange": "ce7bda3346278aab6ccebedcd5b8c8d4ab27ba02", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void run(Request request)", "signatureAfterChange": "  \tpublic void run(Request request)", "diff": ["+", "-\t\t\tpublic void testStarted(Description description) throws Exception {", "+\t\t\t\tpublic void testStarted(Description description) throws Exception {", "-\t\t\t\tfDurations.put(description, end - start);", "+\t\t\t\tputTestDuration(description, end - start);", "-\t\t\t", "+", "-\t\t\t\tfFailures.put(failure.getDescription(), end);", "+\t\t\t\tputTestFailureTimestamp(failure.getDescription(), end);", "+\t\ttry {", "+\t\t\tsave();", "+\t\t} catch (FileNotFoundException e) {", "+\t\t\t// TODO", "+\t\t\te.printStackTrace();", "+\t\t} catch (IOException e) {", "+\t\t\t// TODO", "+\t\t\te.printStackTrace();", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3941e8883cf984f85bcedac2268bda9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxCore.java", "commitBeforeChange": "378e17964a4188bad9b3d966207a2f682072148e", "commitAfterChange": "451ca12156d5704809a1feff78a10a9451cd2023", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic void run(Request request)", "signatureAfterChange": " \t \tpublic void run(Request request)", "diff": ["-", "-\t\t\t\tstarts.put(description, System.nanoTime());", "+\t\t\t\tstarts.put(description, System.nanoTime()); // Get most accurate possible time", "-\t\t\t\tdurations.put(description, end - start);", "+\t\t\t\tfDurations.put(description, end - start);", "-\t\t\t\tthrow new UnsupportedOperationException();", "+\t\t\t\tlong end= System.currentTimeMillis(); // This needs to be comparable across tests", "+\t\t\t\tfFailures.put(failure.getDescription(), end);", "-\t\tResult result= core.run(request);", "-\t\tfFailures= result.getFailures();", "+\t\tcore.run(request);"]}]}