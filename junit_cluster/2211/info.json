{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "267f714bdf30b3778818b26728da00ad", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9739d010409521b502b01f390a49bd7e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "41092ce4e01cc57d8aa1911e2f1169e0f355b1ae", "commitAfterChange": "3e08f69912d69189e895c279b1bece0c7c0840f4", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      protected Runner createRunner(String pattern, int index, Object[] parameters) throws InitializationError", "signatureAfterChange": "      protected Runner createRunnerForTest(TestWithParameters test)             throws InitializationError", "diff": ["-    protected Runner createRunner(String pattern, int index, Object[] parameters) throws InitializationError {", "-        return new TestClassRunnerForParameters(getTestClass().getJavaClass(), pattern, index, parameters);", "+    protected Runner createRunnerForTest(TestWithParameters test)", "+            throws InitializationError {", "+        return new TestClassRunnerForParameters(test);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efe3e6cb49c5b71d5d7bde07573e637f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "e1bf14b4d5b7aecf4611fd400417359424121544", "commitAfterChange": "f6a3d7405b72966d3714355804e1b3c14b1425cb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @SuppressWarnings(\"unchecked\")     private Iterable<Object[]> allParameters() throws Throwable", "signatureAfterChange": "      @SuppressWarnings(\"unchecked\")     private Iterable<Object> allParameters() throws Throwable", "diff": ["-    private Iterable<Object[]> allParameters() throws Throwable {", "+    private Iterable<Object> allParameters() throws Throwable {", "-            return (Iterable<Object[]>) parameters;", "+            return (Iterable<Object>) parameters;", "+        } else if (parameters instanceof Object[]) {", "+            return Arrays.asList((Object[]) parameters);"]}]}