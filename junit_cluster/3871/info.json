{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d9b12e4a4ac514e14241cee7b0e3eed5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77f989af63e03e262ccb8bbeba84272a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/Each.java", "commitBeforeChange": "b1068dc55c95d1000e07b71d3a9d9a2fd26bfff9", "commitAfterChange": "d9cccce5034bb9876221d271914471b205220061", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static <T> Matcher<Iterable<T>> each(final Matcher<T> individual)", "signatureAfterChange": " \tpublic static <T> Matcher<Iterable<? super T>> each(final Matcher<? super T> individual)", "diff": ["-\tpublic static <T> Matcher<Iterable<T>> each(final Matcher<T> individual) {", "-\t\tfinal Matcher<Iterable<T>> allItemsAre = not(hasItem(not(individual)));", "+\tpublic static <T> Matcher<Iterable<? super T>> each(final Matcher<? super T> individual) {", "+\t\tfinal Matcher<Iterable<? super T>> allItemsAre = not(hasItem(not(individual)));", "-\t\treturn new BaseMatcher<Iterable<T>>() {", "+\t\treturn new BaseMatcher<Iterable<? super T>>() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4402d14f25b541f4e8574a646a351c0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/matchers/JUnitMatchers.java", "commitBeforeChange": "b1068dc55c95d1000e07b71d3a9d9a2fd26bfff9", "commitAfterChange": "d9cccce5034bb9876221d271914471b205220061", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic static <T> Matcher<Iterable<T>> everyItem(final Matcher<T> elementMatcher)", "signatureAfterChange": " \tpublic static <T> Matcher<Iterable<? super T>> everyItem(final Matcher<? super T> elementMatcher)", "diff": ["-\tpublic static <T> Matcher<Iterable<T>> everyItem(final Matcher<T> elementMatcher) {", "+\tpublic static <T> Matcher<Iterable<? super T>> everyItem(final Matcher<? super T> elementMatcher) {"]}]}