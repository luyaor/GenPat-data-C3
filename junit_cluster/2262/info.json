{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2354d24d810ba065cc026f4e9fa24f5d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "027c213cb8cf424ee46e34dbeaa09ea4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "4081076e513e84bb2376f889d4108e64e9a18653", "commitAfterChange": "a58514aec7e843339be24980e92aeeb759327ffb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t\t@Override \t\tpublic void run(final Roadie context)", "signatureAfterChange": "  \t\t@Override \t\tpublic void run(final Roadie context)", "diff": ["-\t\t\t\t\tfNext.run(context);", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tfNext.run(context);", "+\t\t\t\t\t} catch (Exception e) {", "+\t\t\t\t\t\tthrow e;", "+\t\t\t\t\t} catch (Error e) {", "+\t\t\t\t\t\tthrow e;", "+\t\t\t\t\t} catch (Throwable e) {", "+\t\t\t\t\t\t// TODO: (Oct 5, 2007 11:27:11 AM) Now what?", "+\t\t\t\t\t}", "+\t\t\t} catch (ExecutionException e) {", "+\t\t\t\tcontext.addFailure(e.getCause());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52ab4d9813a3adcd930ebb6e41aa1e16", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "c7fe9c82850d54468bfbc900a418873d4d5107fe", "commitAfterChange": "c7874453182cde8e7b38cf3ce356d16d3d1dcde8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprivate static MaxHistory readHistory(File storedResults) throws CouldNotReadCoreException", "signatureAfterChange": " \t \tprivate static MaxHistory readHistory(File storedResults) throws CouldNotReadCoreException", "diff": ["-", "+\t\tFileInputStream file= null;", "-\t\t\tstream= new ObjectInputStream(new FileInputStream(storedResults));", "-\t\t} catch (IOException e) {", "+\t\t\tfile= new FileInputStream(storedResults);", "+\t\t} catch (FileNotFoundException e) {", "-\t\t\treturn (MaxHistory) stream.readObject();", "-\t\t} catch (Exception e) {", "-\t\t\tthrow new CouldNotReadCoreException(e); //TODO think about what we can do better here", "-\t\t} finally {", "-\t\t\t\tstream.close();", "+\t\t\t\tstream= new ObjectInputStream(file);", "+\t\t\ttry {", "+\t\t\t\treturn (MaxHistory) stream.readObject();", "+\t\t\t} catch (Exception e) {", "+\t\t\t\tthrow new CouldNotReadCoreException(e); //TODO think about what we can do better here", "+\t\t\t} finally {", "+\t\t\t\ttry {", "+\t\t\t\t\tstream.close();", "+\t\t\t\t} catch (IOException e) {", "+\t\t\t\t\tthrow new CouldNotReadCoreException(e);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} finally {", "+\t\t\ttry {", "+\t\t\t\tfile.close();", "+\t\t\t} catch (IOException e) {", "+\t\t\t\t// TODO can't imagine what's gone wrong here, but who cares?", "+\t\t\t}"]}]}