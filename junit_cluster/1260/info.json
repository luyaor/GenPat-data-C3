{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe9c31706d4283ba101ab13c3fad5218", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "585265317ca80c668e780f000eb24637", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "d3e86b059db787af5c0d58ddf3f69af5b42865b8", "commitAfterChange": "7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tprotected void runChild(FrameworkMethod method, RunNotifier notifier)", "signatureAfterChange": " \t@Override \tpublic void runChild(FrameworkMethod method, RunNotifier notifier)", "diff": ["+\t// TODO: public?", "-\tprotected void runChild(FrameworkMethod method, RunNotifier notifier) {", "+\tpublic void runChild(FrameworkMethod method, RunNotifier notifier) {", "-\t\t\teachNotifier.fireTestIgnored();", "-\t\t\treturn;", "+\t\t\trunIgnored(eachNotifier);", "+\t\t} else {", "+\t\t\trunNotIgnored(method, eachNotifier);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65fb2191f7becdbf85e921dc68100650", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "979e8abbe974e8847668f5887403da78a6165ebc", "commitAfterChange": "1fcd990f60518c941a44bae2596392021614a20b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t\tprotected void runWithCompleteAssignment(final Assignments complete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tInvocationTargetException, NoSuchMethodException, Throwable", "signatureAfterChange": "  \t\tprotected void runWithCompleteAssignment(final Assignments complete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tInvocationTargetException, NoSuchMethodException, Throwable", "diff": ["-\t\t\t\tpublic Statement childBlock(FrameworkMethod method) {", "-\t\t\t\t\tfinal Statement statement= super.childBlock(method);", "+\t\t\t\tpublic Statement methodBlock(FrameworkMethod method) {", "+\t\t\t\t\tfinal Statement statement= super.methodBlock(method);", "-\t\t\t\tprotected Statement invoke(FrameworkMethod method, Object test) {", "+\t\t\t\tprotected Statement methodInvoker(FrameworkMethod method, Object test) {", "-\t\t\t}.childBlock(fTestMethod).evaluate();", "+\t\t\t}.methodBlock(fTestMethod).evaluate();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cbb3c09441af187e81abf3cf2b2f3a6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf", "commitAfterChange": "bed58a573c373d57d64fa369f58b2a8f0dbee3d7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tprotected void runChild(FrameworkMethod method, RunNotifier notifier)", "signatureAfterChange": "  \t@Override \tprotected void runChild(final FrameworkMethod method, RunNotifier notifier)", "diff": ["-\tprotected void runChild(FrameworkMethod method, RunNotifier notifier) {", "-\t\tEachTestNotifier eachNotifier= makeNotifier(method, notifier);", "+\tprotected void runChild(final FrameworkMethod method, RunNotifier notifier) {", "+\t\tDescription description= describeChild(method);", "-\t\t\trunIgnored(eachNotifier);", "+\t\t\tnotifier.fireTestIgnored(description);", "-\t\t\trunNotIgnored(method, eachNotifier);", "+\t\t\trunLeaf(methodBlock(method), description, notifier);", "-\t}"]}]}