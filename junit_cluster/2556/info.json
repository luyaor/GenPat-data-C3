{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a515b8438babee25beae87b0c5a489f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "917469a27908487692ff5958439d185e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "9cf5b64d8dbbb064fed3d4ee88eced2b6a7d50fe", "commitAfterChange": "bae4bd80513360c5e884e760447000d9c96ffd72", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void invokeValidatorsOnClass(List<Throwable> errors)", "signatureAfterChange": "      private void invokeValidatorsOnClass(List<Throwable> errors)", "diff": ["-            if (hasValidatorAnnotation(annotation.annotationType())) {", "-                AnnotationValidator annotationValidator =", "-                        getAnnotationValidator(annotation.annotationType());", "-                annotationValidator.validateAnnotatedClass(getTestClass().getJavaClass(), errors);", "-            }", "+            Class<? extends Annotation> annotationType = annotation.annotationType();", "+            ValidateWith validateWithAnnotation = annotationType.getAnnotation(ValidateWith.class);", "+            AnnotationValidator annotationValidator =", "+                    fAnnotationValidatorFactory.createAnnotationValidator(validateWithAnnotation);", "+            annotationValidator.validateAnnotatedClass(getTestClass().getJavaClass(), errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea3f7350c99f0009701543fa0e2e7ede", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "85f9d8397bfd96261c3214284672180c522e2d38", "commitAfterChange": "9cf5b64d8dbbb064fed3d4ee88eced2b6a7d50fe", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private boolean hasValidatorAnnotation(Annotation annotation)", "signatureAfterChange": "      private boolean hasValidatorAnnotation(Class<? extends Annotation> annotationType)", "diff": ["-    private boolean hasValidatorAnnotation(Annotation annotation) {", "-        Class<? extends Annotation> annotationType = annotation.annotationType();", "-        boolean hasValidatorAnnotation;", "-        if (fAnnotationTypeToValidatorMap.containsKey(annotationType)) {", "-            hasValidatorAnnotation = fAnnotationTypeToValidatorMap.get(annotationType) != null;", "-        } else {", "-            hasValidatorAnnotation = hasValidatorAnnotation(annotationType);", "-            if (!hasValidatorAnnotation) {", "-                fAnnotationTypeToValidatorMap.put(annotationType, null);", "-            }", "-        }", "-", "-        return hasValidatorAnnotation;", "-    }", "+        return getAnnotationValidator(annotationType) != null;"]}]}