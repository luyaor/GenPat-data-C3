{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "08af8ee4253f986ad4ccb6f4864a9fd2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4759615f2d1ca009e4ba73d48fc258f9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/ExcludeCategories.java", "commitBeforeChange": "0a9a389570a171b67c3155d312f2e90bdab5aaaf", "commitAfterChange": "318adee43493447e22bbea89e0f17260e0186a14", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Override     public Filter createFilter(Class<?>[] categories) throws ClassNotFoundException", "signatureAfterChange": "     @Override     public Filter createFilter(Class<?>[] categories)", "diff": ["-public final class ExcludeCategories extends CategoryFilter.CategoriesFilterFactory {", "+public final class ExcludeCategories extends CategoryFilterFactory {", "-    public Filter createFilter(Class<?>[] categories) throws ClassNotFoundException {", "-        return new CategoryFilter.ExcludesAny(categories);", "+    public Filter createFilter(Class<?>[] categories) {", "+        return new ExcludesAny(categories);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74d1b51109acee44431df44010cd84c6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "196c4ed79cbaca37709643b54913b361b677ae04", "commitAfterChange": "0a9a389570a171b67c3155d312f2e90bdab5aaaf", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 20, "signatureBeforeChange": "             @Override             public Filter createFilter(Class<?>[] categories) throws ClassNotFoundException", "signatureAfterChange": "              public IncludesAny(Set<Class<?>> categories)", "diff": ["+            public IncludesAny(Set<Class<?>> categories) {", "+                super(true, categories, true, null);", "-        public static class ExcludesAnyFilterFactory extends CategoriesFilterFactory {", "-            @Override", "-            public Filter createFilter(Class<?>[] categories) throws ClassNotFoundException {", "-                return new CategoryFilterWrapper(CategoryFilter.exclude(categories));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f7fec03e9fe55dd3d9462acda358660", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/IncludeCategories.java", "commitBeforeChange": "0a9a389570a171b67c3155d312f2e90bdab5aaaf", "commitAfterChange": "318adee43493447e22bbea89e0f17260e0186a14", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Override     public Filter createFilter(Class<?>[] categories) throws FilterNotCreatedException", "signatureAfterChange": "     @Override     public Filter createFilter(Class<?>[] categories)", "diff": ["-public final class IncludeCategories extends CategoryFilter.CategoriesFilterFactory {", "+public final class IncludeCategories extends CategoryFilterFactory {", "-    public Filter createFilter(Class<?>[] categories) throws FilterNotCreatedException {", "-        return new CategoryFilter.IncludesAny(categories);", "+    public Filter createFilter(Class<?>[] categories) {", "+        return new IncludesAny(categories);", "+    }"]}]}