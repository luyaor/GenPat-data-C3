{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83610f9dbb355367b121943e26c32d82", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bef9cecd40d04b178b69a68d9b41e2a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/CompositeRunner.java", "commitBeforeChange": "44fabd25eb7d8c5291094b033007c32b7a1b8da2", "commitAfterChange": "0fa19baf003c5808831c59f8a839cc871586f30e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \t@Override \tprotected Runner filterChild(Runner child, Filter filter) throws NoTestsRemainException", "signatureAfterChange": "  \t \t@Override \tprotected Runner filterChild(Runner child, Filter filter) throws NoTestsRemainException", "diff": ["-\t", "-\t@Override", "-\tprotected Runner filterChild(Runner child, Filter filter) throws NoTestsRemainException {", "-\t\t// TODO: (Dec 7, 2007 9:38:08 AM) shouldn't have this check here", "-", "-\t\tif (filter != null)", "-\t\t\tfilter.apply(child);\t\t", "-\t\treturn child;", "-\t}", "+\t", "+\t@Override", "+\tprotected Runner filterChild(Runner child, Filter filter) throws NoTestsRemainException {", "+\t\tFilter.apply(filter, child);", "+\t\treturn child;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0892e492b7dc83d8704e98051139902", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/CompositeRunner.java", "commitBeforeChange": "44fabd25eb7d8c5291094b033007c32b7a1b8da2", "commitAfterChange": "0fa19baf003c5808831c59f8a839cc871586f30e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \t@Override \tprotected Runner sortChild(Runner child, Sorter sorter)", "signatureAfterChange": " \t \t@Override \tprotected Runner sortChild(Runner child, Sorter sorter)", "diff": ["-\t", "-\t@Override", "-\tprotected Runner sortChild(Runner child, Sorter sorter) {", "-\t\t// TODO: (Dec 7, 2007 9:38:57 AM) shouldn't have this check here, and deal with duplication throughout", "-", "-\t\tif (sorter != null)", "-\t\t\tsorter.apply(child);", "-\t\treturn child;", "-\t}", "+\t", "+\t@Override", "+\tprotected Runner sortChild(Runner child, Sorter sorter) {", "+\t\tSorter.apply(sorter, child);", "+\t\treturn child;", "+\t}"]}]}