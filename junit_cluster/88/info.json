{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0bfa1ca8c25e882269e6e460c28cd429", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d30842246e8cc4eeda06417bb39d706", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/test/runner/TheoryContainerReferenceTest.java", "commitBeforeChange": "fcf95d1d6bfdd046f1328af108ad5376c62d50d4", "commitAfterChange": "b7bb33dd040e87bb08831ee950fd788f206bb59a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Test public void ignoreDataPointMethodsWithWrongTypes() \t\t\tthrows SecurityException, InstantiationException, \t\t\tIllegalAccessException", "signatureAfterChange": "  \t@Test public void ignoreDataPointMethodsWithWrongTypes() \t\t\tthrows SecurityException, InstantiationException, \t\t\tIllegalAccessException", "diff": ["-\t\tassertThat(potentialValues().toString(), Matchers", "-\t\t.not(hasToString(containsString(\"100\"))));", "+\t\tassertThat(potentialValues().toString(), not(containsString(\"100\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e3697768e526d91f9afd18714423485", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/Stopwatch.java", "commitBeforeChange": "7ae75535efbb7a95ac62cfa1d0ccb626cc23e8c7", "commitAfterChange": "0ffc637a33164dd219a6fbbb7210db84779c700a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public long runtime(TimeUnit unit)", "signatureAfterChange": "     public long runtime(TimeUnit unit)", "diff": ["-        return unit.convert(clock.nanoTime() - startNanos, TimeUnit.NANOSECONDS);", "+        return unit.convert(getNanos(), TimeUnit.NANOSECONDS);"]}]}