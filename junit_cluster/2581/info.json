{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c0383368eed811537260e07d0608f8e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32c0551244e1521064905d01a3d12db8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t@Deprecated \tprotected void validateInstanceMethods(List<Throwable> errors)", "signatureAfterChange": "     @Deprecated     protected void validateInstanceMethods(List<Throwable> errors)", "diff": ["-\t */", "-\t@Deprecated", "-\tprotected void validateInstanceMethods(List<Throwable> errors) {", "-\t\tvalidatePublicVoidNoArgMethods(After.class, false, errors);", "-\t\tvalidatePublicVoidNoArgMethods(Before.class, false, errors);", "-\t\tvalidateTestMethods(errors);", "+     */", "+    @Deprecated", "+    protected void validateInstanceMethods(List<Throwable> errors) {", "+        validatePublicVoidNoArgMethods(After.class, false, errors);", "+        validatePublicVoidNoArgMethods(Before.class, false, errors);", "+        validateTestMethods(errors);", "-\t\tif (computeTestMethods().size() == 0)", "-\t\t\terrors.add(new Exception(\"No runnable methods\"));", "-\t}", "+        if (computeTestMethods().size() == 0) {", "+            errors.add(new Exception(\"No runnable methods\"));", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48ab4c70b5d5a80e6c17c6549ccbc09e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  \tstatic private void failNotNull(String message, Object actual)", "signatureAfterChange": "      static private void failNotNull(String message, Object actual)", "diff": ["-\tstatic private void failNotNull(String message, Object actual) {", "-\t\tString formatted= \"\";", "-\t\tif (message != null)", "-\t\t\tformatted= message + \" \";", "-\t\tfail(formatted + \"expected null, but was:<\" + actual + \">\");", "-\t}", "+", "+    static private void failNotNull(String message, Object actual) {", "+        String formatted = \"\";", "+        if (message != null) {", "+            formatted = message + \" \";", "+        }", "+        fail(formatted + \"expected null, but was:<\" + actual + \">\");", "+    }"]}]}