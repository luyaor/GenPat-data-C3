{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "37ed3d8cecfaff50aca18f3546a3de06", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d249f1c0cfc3d587fe126cc03b0ee73", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public Object[] getAllArguments(boolean nullsOk)             throws CouldNotGenerateValueException", "signatureAfterChange": "      public Object[] getAllArguments() throws CouldNotGenerateValueException", "diff": ["-    public Object[] getAllArguments(boolean nullsOk)", "-            throws CouldNotGenerateValueException {", "-        return getActualValues(0, fAssigned.size(), nullsOk);", "+    public Object[] getAllArguments() throws CouldNotGenerateValueException {", "+        return getActualValues(0, fAssigned.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "287cd27ae6fbd71fd10fb17dcffc401c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public Object[] getMethodArguments(boolean nullsOk)             throws CouldNotGenerateValueException", "signatureAfterChange": "      public Object[] getMethodArguments() throws CouldNotGenerateValueException", "diff": ["-    public Object[] getMethodArguments(boolean nullsOk)", "-            throws CouldNotGenerateValueException {", "-        return getActualValues(getConstructorParameterCount(),", "-                fAssigned.size(), nullsOk);", "+    public Object[] getMethodArguments() throws CouldNotGenerateValueException {", "+        return getActualValues(getConstructorParameterCount(), fAssigned.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "381288cd733db2d58837d86121153a12", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public Object[] getConstructorArguments(boolean nullsOk)             throws CouldNotGenerateValueException", "signatureAfterChange": "      public Object[] getConstructorArguments()             throws CouldNotGenerateValueException", "diff": ["-    public Object[] getConstructorArguments(boolean nullsOk)", "+    public Object[] getConstructorArguments()", "-        return getActualValues(0, getConstructorParameterCount(), nullsOk);", "+        return getActualValues(0, getConstructorParameterCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b92a633463bf21f93025f064a1d0da1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "9423b224d0bafeeabe485e51a7f3080cfac0a368", "commitAfterChange": "a3e0b1c6cbd770405cb7fdd4291090afc8e49df7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic Object[] getAllArguments(boolean nullsOk) throws CouldNotGenerateValueException", "signatureAfterChange": "  \tpublic Object[] getAllArguments() throws CouldNotGenerateValueException", "diff": ["-\tpublic Object[] getAllArguments(boolean nullsOk) throws CouldNotGenerateValueException {", "-\t\treturn getActualValues(nullsOk, 0, fAssigned.size());", "+\tpublic Object[] getAllArguments() throws CouldNotGenerateValueException {", "+\t\treturn getActualValues(0, fAssigned.size());"]}]}