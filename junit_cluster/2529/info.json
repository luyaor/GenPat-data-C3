{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd478c6e0329d7ddf40dcfd577391f4d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b04eb2776454e51183be179921a44cd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java", "commitBeforeChange": "1fa373f01d126d437f08a57a7b5e7a7ec0a01b85", "commitAfterChange": "8672a83f51b183c756649a423b908271c894b8df", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \t@Test \tpublic void failureOnInitialization()", "signatureAfterChange": " \t \t@Test \tpublic void failureOnInitialization()", "diff": ["-\t\tResult result = JUnitCore.runClasses(BadIndexForAnnotedFieldTest.class);", "+\t\tResult result = JUnitCore.runClasses(BadIndexForAnnotatedFieldTest.class);", "-\t\tassertEquals(\"Invalid @parameter value: 2. @parameter fields counted: 1. Please use an index between 0 and 0.\",", "+\t\tassertEquals(\"Invalid @Parameter value: 2. @Parameter fields counted: 1. Please use an index between 0 and 0.\",", "-\t\tassertEquals(\"The index 0 is never used.\", failures.get(1).getException().getMessage());", "+\t\tassertEquals(\"@Parameter(0) is never used.\", failures.get(1).getException().getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0f94d59952bdb279155b277d89e5c72", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java", "commitBeforeChange": "1fa373f01d126d437f08a57a7b5e7a7ec0a01b85", "commitAfterChange": "8672a83f51b183c756649a423b908271c894b8df", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \t@Test \tpublic void numberOfFieldsAndParametersShouldMatch()", "signatureAfterChange": "  \t@Test \tpublic void numberOfFieldsAndParametersShouldMatch()", "diff": ["-\t\tResult result = JUnitCore.runClasses(BadNumberOfAnnotedFieldTest.class);", "+\t\tResult result = JUnitCore.runClasses(BadNumberOfAnnotatedFieldTest.class);", "-\t\tassertTrue(failures.get(0).getException().getMessage().contains(\"Wrong number of parameters and @parameter fields. @parameter fields counted: 1, available parameters: 2.\"));", "+\t\tassertTrue(failures.get(0).getException().getMessage().contains(\"Wrong number of parameters and @Parameter fields. @Parameter fields counted: 1, available parameters: 2.\"));"]}]}