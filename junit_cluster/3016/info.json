{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83dcb1e03cd6487eff496dcfc8553ce9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27cfcc803557d778c39051dd2bec8fea", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/junit3compatibility/SuiteMethodTest.java", "commitBeforeChange": "971c9a52281458375af79e303449fe22bf91feab", "commitAfterChange": "97402a3401c6cc2d45d395c0d9d636f483b5571c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t@Test \tpublic void descriptionAndRunNotificationsAreConsistent()", "signatureAfterChange": " \t@Test \tpublic void descriptionAndRunNotificationsAreConsistent()", "diff": ["-", "-\t\tRunner runner= Request.aClass(CompatibilityTest.class).getRunner();", "-\t\tPlan plan= runner.getPlan();", "-\t\tassertEquals(1, plan.getChildren().size());", "-\t\tassertEquals(\"initializationError\", plan.getChildren().get(0).getDescription()", "-\t\t\t\t.getMethodName());", "+\t\t", "+\t\tDescription description= Request.aClass(CompatibilityTest.class).getRunner().getDescription();", "+\t\tassertEquals(0, description.getChildren().size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cf652cc5d2385a24d23cdf6edd0c6ad", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/junit3compatibility/SuiteMethodTest.java", "commitBeforeChange": "496ee866a46f783d145b649a688df57cbf79490e", "commitAfterChange": "5f7fddf537e551109ffd6241a00c87a2b3521523", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t@Test \tpublic void descriptionAndRunNotificationsAreConsistent()", "signatureAfterChange": " \t@Test \tpublic void descriptionAndRunNotificationsAreConsistent()", "diff": ["-", "-\t\tRunner runner= Request.aClass(CompatibilityTest.class).getRunner();", "-\t\tPlan plan= runner.getPlan();", "-\t\tassertEquals(1, plan.getChildren().size());", "-\t\tassertEquals(\"initializationError\", plan.getChildren().get(0).getDescription()", "-\t\t\t\t.getMethodName());", "+\t\t", "+\t\tDescription description= Request.aClass(CompatibilityTest.class).getRunner().getDescription();", "+\t\tassertEquals(0, description.getChildren().size());"]}]}