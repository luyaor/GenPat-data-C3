{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4bf783e60f8963c2e38d7aae7fea777c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "674d776e6e21dff16fe08a5047ae5b31", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "8672a83f51b183c756649a423b908271c894b8df", "commitAfterChange": "0215c66179ed2c04da2e53f67aefc97b6db5782a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t\t@Override \t\tprotected void validateFields(List<Throwable> errors)", "signatureAfterChange": "  \t\t@Override \t\tprotected void validateFields(List<Throwable> errors)", "diff": ["-\t\t\tList<FrameworkField> annotatedFieldsByParameter = getTestClass().getAnnotatedFields(Parameter.class);", "-\t\t\tif (annotatedFieldsByParameter.size() > 0) {", "+\t\t\tif (fieldsAreAnnotated()) {", "+                List<FrameworkField> annotatedFieldsByParameter = getAnnotatedFieldsByParameter();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6689f6e4d3ad70299d3916475ae8ed0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java", "commitBeforeChange": "982a75011a074ab25f2c96a1c2639c5b1ebb3b18", "commitAfterChange": "5475e12b57f5af0140deffa7f45c75dc47803167", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \t@Test \tpublic void meaningfulFailureWhenParameterListsAreNotArrays()", "signatureAfterChange": "  \t@Test \tpublic void meaningfulFailureWhenParametersAreNotArrays()", "diff": ["-\tpublic void meaningfulFailureWhenParameterListsAreNotArrays() {", "-\t\tString expected= String.format(", "-\t\t\t\t\"%s.data() must return a Collection of arrays.\",", "-\t\t\t\tWrongElementType.class.getName());", "-\t\tassertThat(testResult(WrongElementType.class).toString(),", "-\t\t\t\tcontainsString(expected));", "+\tpublic void meaningfulFailureWhenParametersAreNotArrays() {", "+\t\tassertThat(", "+\t\t\t\ttestResult(WrongElementType.class).toString(),", "+\t\t\t\tcontainsString(\"WrongElementType.data() must return an Iterable of arrays.\"));"]}]}