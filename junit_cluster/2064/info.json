{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2efa43efc3f5a1cc199da7c9b79ba30d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28de62d0a0bb77d89985a53648a580f1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxCore.java", "commitBeforeChange": "a72b0dbef4b01e8ad0b832d9a579dd7fabd5a071", "commitAfterChange": "378e17964a4188bad9b3d966207a2f682072148e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void run(Request request)", "signatureAfterChange": "  \tpublic void run(Request request)", "diff": ["+\t\t\tprivate Map<Description, Long> starts= new HashMap<Description, Long>();", "+", "-\t\t\t\tthrow new UnsupportedOperationException();", "+\t\t\t\tstarts.put(description, System.nanoTime());", "-\t\t\t\tthrow new UnsupportedOperationException();", "+\t\t\t\tlong end= System.nanoTime();", "+\t\t\t\tlong start= starts.get(description);", "+\t\t\t\tdurations.put(description, end - start);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6c89fb6c7274a8aad4dc1562be577eb", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/runner/JUnitCore.java", "commitBeforeChange": "5cfc92d9ee355a316619563c6cb6e2834d130b01", "commitAfterChange": "b0c0b79ae5e0dcfc1670cf950d31a14f1c9c630c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic Result runMain(String... args)", "signatureAfterChange": " \tpublic Result runMain(String... args)", "diff": ["+\t\tList<Failure> missingClasses= new ArrayList<Failure>();", "+\t\t\t\tDescription description= Description.createSuiteDescription(each);", "+\t\t\t\tFailure failure= new Failure(description, e);", "+\t\t\t\tmissingClasses.add(failure);", "-\t\treturn run(classes.toArray(new Class[0]));", "+\t\tResult result= run(classes.toArray(new Class[0]));", "+\t\tfor (Failure each : missingClasses)", "+\t\t\tresult.getFailures().add(each);", "+\t\treturn result;"]}]}