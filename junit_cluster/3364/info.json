{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6e8db88a1a8ce2e202caf64046d4f81", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28dc4c1c28093fe64aed03efe55a3407", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "ed2b51b0c78a079f806ea9157f77f83705f8e04b", "commitAfterChange": "0333e7efdc9ecf81df4212f82c3a59c6ff0fab19", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tstatic public void assertEquals(long expected, long actual)", "signatureAfterChange": " \tstatic public void assertEquals(String message, float expected, \t\t\tfloat actual, float delta)", "diff": ["+\t */", "+\tstatic public void assertEquals(String message, float expected,", "+\t\t\tfloat actual, float delta) {", "+\t\tif (Float.compare(expected, actual) == 0)", "+\t\t{", "+\t\t\treturn;", "+\t\t}", "+\t\tif (!(Math.abs(expected - actual) <= delta))", "+\t\t{", "+\t\t\tfailNotEquals(message, new Float(expected), new Float(actual));", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44f20c6ad0123dd21b303eb34d922a03", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "ed2b51b0c78a079f806ea9157f77f83705f8e04b", "commitAfterChange": "c7f5669a59fd42f887e02664e2709b7522a0302d", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tstatic public void assertEquals(long expected, long actual)", "signatureAfterChange": " \tstatic public void assertEquals(String message, float expected, \t\t\tfloat actual, float delta)", "diff": ["+\t */", "+\tstatic public void assertEquals(String message, float expected,", "+\t\t\tfloat actual, float delta) {", "+\t\tif (Float.compare(expected, actual) == 0)", "+\t\t{", "+\t\t\treturn;", "+\t\t}", "+\t\tif (!(Math.abs(expected - actual) <= delta))", "+\t\t{", "+\t\t\tfailNotEquals(message, new Float(expected), new Float(actual));", "+\t\t}"]}]}