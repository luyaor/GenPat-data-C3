{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7003aa640244aa3b62a3b9e7f38914db", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "800591a40877f89c2f23f4827bd3882b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/TheoryMethodRunner.java", "commitBeforeChange": "4081076e513e84bb2376f889d4108e64e9a18653", "commitAfterChange": "a58514aec7e843339be24980e92aeeb759327ffb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tprotected Link chain()", "signatureAfterChange": "  \t@Override \tprotected Link chain()", "diff": ["-\t\treturn new Notifier(handleExceptions(anchor()));", "+\t\treturn new Notifier(new Link() {", "+\t\t", "+\t\t\t@Override", "+\t\t\tpublic void run(Roadie context) {", "+\t\t\t\t// TODO: (Oct 5, 2007 11:23:04 AM) handle more gracefully", "+", "+\t\t\t\ttry {", "+\t\t\t\t\thandleExceptions(anchor()).run(context);", "+\t\t\t\t} catch (Throwable e) {", "+\t\t\t\t\t// TODO: (Oct 5, 2007 11:23:47 AM) Don't make addFailure be public", "+\t\t\t\t\tcontext.addFailure(e);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t", "+\t\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb6f1103b64129405fac5bb6ece07f77", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "7b5641996d486bbcb33f13a9130821303e1e7d89", "commitAfterChange": "1ad3a59952f3528914d1225d51bbb04adb62c22f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t\t\t@Override \t\t\tpublic void run()", "signatureAfterChange": "  \t\t@Override \t\tpublic void run()", "diff": ["-\t\tThread thread= new Thread() {", "-\t\t\t@Override", "-\t\t\tpublic void run() {", "-\t\t\t\ttry {", "-\t\t\t\t\tfNext.evaluate();", "-\t\t\t\t\tfFinished= true;", "-\t\t\t\t} catch (Throwable e) {", "-\t\t\t\t\tfThrown= e;", "-\t\t\t\t}", "-\t\t\t}", "+", "+\t\t@Override", "+\t\tpublic void run() {", "+\t\t\ttry {", "+\t\t\t\tfStatement.evaluate();", "+\t\t\t\tfFinished= true;", "+\t\t\t} catch (InterruptedException e) {", "+\t\t\t\t//don't log the InterruptedException", "+\t\t\t} catch (Throwable e) {", "+\t\t\t\tfExceptionThrownByOriginalStatement= e;", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea890b5fa693742ca6f158e4417c06fe", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "43b0fe352d5bced0c341640d0c630d23f2022a7e", "commitAfterChange": "679e5dd3e4af3115492fabed45ea8c48bfa9d9bf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t\t\tpublic void run()", "signatureAfterChange": "  \t\t@Override \t\tpublic void run(final Roadie context)", "diff": ["-\t\tcontext.runProtected(this, new Runnable() {", "-\t\t\tpublic void run() {", "-\t\t\t\trunInsideBeforeAndAfter(context);", "+", "+\t\t@Override", "+\t\tpublic void run(final Roadie context) {", "+\t\t\tcontext.runProtected(JUnit4MethodRunner.this, new Runnable() {", "+\t\t\t\tpublic void run() {", "+\t\t\t\t\tfNext.run(context);", "+\t\t\t\t}", "+\t\t\t});", "+\t\t}"]}]}