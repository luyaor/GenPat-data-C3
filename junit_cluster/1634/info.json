{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95dc3ce11bb5eb599ea036412e55a656", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35f658ea7b347c33bc5ccaa764a929a7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/rules/RuleFieldValidator.java", "commitBeforeChange": "49d62f902ba7dba44b0b2b3b71e45004c667b2d5", "commitAfterChange": "faba199e389e3c977fc5573315790a5cde5f7611", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate void optionallyValidateStatic(FrameworkField field, \t\t\tList<Throwable> errors)", "signatureAfterChange": "  \tprivate void optionallyValidateStatic(FrameworkMember<?> member, \t\t\tList<Throwable> errors)", "diff": ["-\tprivate void optionallyValidateStatic(FrameworkField field,", "+\tprivate void optionallyValidateStatic(FrameworkMember<?> member,", "-\t\tif (fOnlyStaticFields && !field.isStatic())", "-\t\t\taddError(errors, field, \"must be static.\");", "+\t\tif (fOnlyStaticMembers && !member.isStatic())", "+\t\t\taddError(errors, member, \"must be static.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a27358c787653b73b38ab96af60f166c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/rules/RuleFieldValidator.java", "commitBeforeChange": "849a16f44256cd7c6514ed7c289c993d633a53fe", "commitAfterChange": "b4f0afa639b42fa551fdcb26d9c1855ae4d778cf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate void optionallyValidateStatic(FrameworkMember<?> member, \t\t\tList<Throwable> errors)", "signatureAfterChange": "  \tprivate void validateStatic(FrameworkMember<?> member, \t\t\tList<Throwable> errors)", "diff": ["-\tprivate void optionallyValidateStatic(FrameworkMember<?> member,", "+\tprivate void validateStatic(FrameworkMember<?> member,", "-\t\tif (fOnlyStaticMembers && !member.isStatic())", "+\t\tif (fStaticMembers && !member.isStatic())", "+\t\tif (!fStaticMembers && member.isStatic())", "+\t\t\taddError(errors, member, \"must not be static.\");"]}]}