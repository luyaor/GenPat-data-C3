{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "78a31324151fa976406da7dd4732c43f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1df92faa044ff48d7a4ec2515d45b2d2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/RunNotifier.java", "commitBeforeChange": "37a611801fbea6ecc9b6356d9616e761c8b59b91", "commitAfterChange": "d9c908b9aab5f610e2f42aba1863ce25e36423f2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void fireTestIgnored(final Description description)", "signatureAfterChange": " \tpublic void fireTestIgnored(final Description description)", "diff": ["-\t\t\t\teach.testIgnored(description, getIgnoredReason(description));", "-", "-\t\t\tprivate String getIgnoredReason(final Description description) {", "-\t\t\t\tIgnore annotation= description.getAnnotation(Ignore.class);", "-\t\t\t\tif (annotation == null)", "-\t\t\t\t\treturn null;", "-\t\t\t\treturn annotation.value();", "-\t\t\t};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bca1af62db3d1b21514a409b6b310d0a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxCore.java", "commitBeforeChange": "378e17964a4188bad9b3d966207a2f682072148e", "commitAfterChange": "451ca12156d5704809a1feff78a10a9451cd2023", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic List<Description> sort(Request request)", "signatureAfterChange": "  \tpublic List<Description> sort(Request request)", "diff": ["-\t\tCollections.sort(tests, new Comparator<Description>() {", "-\t\t\tpublic int compare(Description o1, Description o2) {", "-\t\t\t\treturn getDuration(o1).compareTo(getDuration(o2));", "-\t\t\t}", "-", "-\t\t\tprivate Long getDuration(Description o1) {", "-\t\t\t\tLong result= durations.get(o1);", "-\t\t\t\tif (result == null) result= 0L;", "-\t\t\t\treturn result;", "-\t\t\t}", "-\t\t});", "+\t\tCollections.sort(tests, new TestComparator());"]}]}