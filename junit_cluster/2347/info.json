{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "001afab1eb4d2e0b31a26b1942f36551", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ac911fe4a7a5f4a4ae0a203a1ce3653", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/ComparisonFailure.java", "commitBeforeChange": "95f56b32ef3950e83273335e1ba6c2b6cf1a5540", "commitAfterChange": "674bb8f296b0bc7bbfbd8a1126cff2d98333bbf2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "          private String computeCommonSuffix()", "signatureAfterChange": "          private String computeCommonSuffix()", "diff": ["-            int end = Math.min(fExpected.length() - fSuffix + fContextLength, fExpected.length());", "-            return fExpected.substring(fExpected.length() - fSuffix, end) + (fExpected.length() - fSuffix < fExpected.length() - fContextLength ? ELLIPSIS : \"\");", "+            int end = Math.min(expected.length() - suffix + contextLength, expected.length());", "+            return expected.substring(expected.length() - suffix, end) + (expected.length() - suffix < expected.length() - contextLength ? ELLIPSIS : \"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1b69361ece1e0ba8534a71cdfb90b8c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/ComparisonFailure.java", "commitBeforeChange": "f4327736c972fedab912ea5508095e312f1f79e1", "commitAfterChange": "4c1758d3b8003d4b3589fe80af16f590c2e6abe8", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "          private String computeCommonSuffix()", "signatureAfterChange": "          private String computeCommonSuffix()", "diff": ["-            int end = Math.min(fExpected.length() - fSuffix + 1 + fContextLength, fExpected.length());", "-            return fExpected.substring(fExpected.length() - fSuffix + 1, end) + (fExpected.length() - fSuffix + 1 < fExpected.length() - fContextLength ? ELLIPSIS : \"\");", "+            int end = Math.min(fExpected.length() - fSuffix + fContextLength, fExpected.length());", "+            return fExpected.substring(fExpected.length() - fSuffix, end) + (fExpected.length() - fSuffix < fExpected.length() - fContextLength ? ELLIPSIS : \"\");"]}]}