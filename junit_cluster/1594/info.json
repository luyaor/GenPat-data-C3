{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e64b101b73432a18b718b20e752d73a6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cd94ab11b5c31e8fd0e0864cf72b4a1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/RunBefores.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic void evaluate() throws Throwable", "signatureAfterChange": "      @Override     public void evaluate() throws Throwable", "diff": ["-\t@Override", "-\tpublic void evaluate() throws Throwable {", "-\t\tfor (FrameworkMethod before : fBefores)", "-\t\t\tbefore.invokeExplosively(fTarget);", "-\t\tfNext.evaluate();", "-\t}", "+    @Override", "+    public void evaluate() throws Throwable {", "+        for (FrameworkMethod before : fBefores) {", "+            before.invokeExplosively(fTarget);", "+        }", "+        fNext.evaluate();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "537e7ce2214e78aa7ceee87c94f2f592", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic void evaluate() throws Throwable", "signatureAfterChange": "      @Override     public void evaluate() throws Throwable", "diff": ["-\t@Override", "-\tpublic void evaluate() throws Throwable {", "-\t\tStatementThread thread= evaluateStatement();", "-\t\tif (!thread.fFinished)", "-\t\t\tthrowExceptionForUnfinishedThread(thread);", "-\t}", "+    @Override", "+    public void evaluate() throws Throwable {", "+        StatementThread thread = evaluateStatement();", "+        if (!thread.fFinished) {", "+            throwExceptionForUnfinishedThread(thread);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a5c6755385cfe362dea353edcd773d2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/RunAfters.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void evaluate() throws Throwable", "signatureAfterChange": "      @Override     public void evaluate() throws Throwable", "diff": ["-            fNext.evaluate();", "+            next.evaluate();", "-            for (FrameworkMethod each : fAfters) {", "+            for (FrameworkMethod each : afters) {", "-                    each.invokeExplosively(fTarget);", "+                    each.invokeExplosively(target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a298594d2c5103900d7363e86d0151bd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/RunBefores.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void evaluate() throws Throwable", "signatureAfterChange": "      @Override     public void evaluate() throws Throwable", "diff": ["-        for (FrameworkMethod before : fBefores) {", "-            before.invokeExplosively(fTarget);", "+        for (FrameworkMethod before : befores) {", "+            before.invokeExplosively(target);", "-        fNext.evaluate();", "+        next.evaluate();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abf87de67af91dad461d05c3f3522458", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "34e66740b9117ce85cfd416f9e931b2e533ab16e", "commitAfterChange": "85b7c26e63f851004ce20d4a00fbf1b46607ab0c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void evaluate() throws Throwable", "signatureAfterChange": "      @Override     public void evaluate() throws Throwable", "diff": ["-        StatementThread thread = evaluateStatement();", "-        if (!thread.fFinished) {", "-            throwExceptionForUnfinishedThread(thread);", "-        }", "-    }", "+        FutureTask<Throwable> task = new FutureTask<Throwable>(new CallableStatement());", "+        Thread thread = new Thread(task, \"Time-limited test\");", "+        Throwable throwable = getResult(task, thread);", "+        if (throwable != null) {", "+        \tthrow throwable;"]}]}