{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ab6c65fdd2ed2e86a808460d2e0cd48", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "040df64fe99109d650e7c331788aa7c6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/categories/CategoryTest.java", "commitBeforeChange": "a8a05d5b490aff69efc6be29fa28a7b14674ab48", "commitAfterChange": "9eab1418bf073556414f8654a8b66d65d784ed71", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \t\tpublic CategoryRunner(Class<?> klass, RunnerBuilder builder) \t\t\t\tthrows InitializationError", "signatureAfterChange": " \t\t@Category({FastTests.class, SlowTests.class}) \t\t@Test \t\tpublic void a()", "diff": ["-", "-\t\tpublic CategoryRunner(Class<?> klass, RunnerBuilder builder)", "-\t\t\t\tthrows InitializationError {", "-\t\t\tsuper(klass, builder);", "-\t\t\ttry {", "-\t\t\t\tfilter(new CategoryFilter(getCategory(klass)));", "-\t\t\t} catch (NoTestsRemainException e) {", "-\t\t\t\t// TODO Auto-generated catch block", "-\t\t\t\t// e.printStackTrace();", "-\t\t\t\t// TODO: figure out what should happen if everything is filtered out, and test that it does.", "-\t\t\t}", "-\t\t}", "+\tpublic static class OneThatIsBothFastAndSlow {", "+\t\t@Category({FastTests.class, SlowTests.class})", "+\t\t@Test", "+\t\tpublic void a() {", "+", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "602134410c8dc5d1c42ac36ffd4a0b62", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/categories/CategoryTest.java", "commitBeforeChange": "9ddffd19ff126e411539940fc54d3e47e2161452", "commitAfterChange": "ce810b763e5021629248702993f226e3bf969db8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \t\tpublic CategoryRunner(Class<?> klass, RunnerBuilder builder) \t\t\t\tthrows InitializationError", "signatureAfterChange": " \t\t@Category({FastTests.class, SlowTests.class}) \t\t@Test \t\tpublic void a()", "diff": ["-", "-\t\tpublic CategoryRunner(Class<?> klass, RunnerBuilder builder)", "-\t\t\t\tthrows InitializationError {", "-\t\t\tsuper(klass, builder);", "-\t\t\ttry {", "-\t\t\t\tfilter(new CategoryFilter(getCategory(klass)));", "-\t\t\t} catch (NoTestsRemainException e) {", "-\t\t\t\t// TODO Auto-generated catch block", "-\t\t\t\t// e.printStackTrace();", "-\t\t\t\t// TODO: figure out what should happen if everything is filtered out, and test that it does.", "-\t\t\t}", "-\t\t}", "+\tpublic static class OneThatIsBothFastAndSlow {", "+\t\t@Category({FastTests.class, SlowTests.class})", "+\t\t@Test", "+\t\tpublic void a() {", "+", "+\t\t}"]}]}