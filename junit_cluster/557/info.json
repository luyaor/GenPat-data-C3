{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a8f56d9b526af5984ba6ab467e556d04", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76dc87cbf48e9dc9cb3ac4f5714ec946", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "49d62f902ba7dba44b0b2b3b71e45004c667b2d5", "commitAfterChange": "faba199e389e3c977fc5573315790a5cde5f7611", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tprivate Statement withTestRules(FrameworkMethod method, Object target, \t\t\tStatement statement)", "signatureAfterChange": " \tprivate Statement withTestRules(FrameworkMethod method, List<TestRule> testRules, \t\t\tStatement statement)", "diff": ["-\tprivate Statement withTestRules(FrameworkMethod method, Object target,", "+\tprivate Statement withTestRules(FrameworkMethod method, List<TestRule> testRules,", "-\t\tList<TestRule> testRules= getTestRules(target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba522f08e2456c24dc4cd68e7d2db266", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "49d62f902ba7dba44b0b2b3b71e45004c667b2d5", "commitAfterChange": "faba199e389e3c977fc5573315790a5cde5f7611", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \t@SuppressWarnings(\"deprecation\") \tprivate Statement withMethodRules(FrameworkMethod method, Object target, \t\t\tStatement result)", "signatureAfterChange": "  \t@SuppressWarnings(\"deprecation\") \tprivate Statement withMethodRules(FrameworkMethod method, List<TestRule> testRules, \t\t\tObject target, Statement result)", "diff": ["-\tprivate Statement withMethodRules(FrameworkMethod method, Object target,", "-\t\t\tStatement result) {", "-\t\tList<TestRule> testRules= getTestRules(target);", "+\tprivate Statement withMethodRules(FrameworkMethod method, List<TestRule> testRules,", "+\t\t\tObject target, Statement result) {"]}]}