{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6625605d03ab40325b6f84423ce6d79", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38c90a20f248b190af0aa185ef85a1de", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "fa9b88f335a338f65de8ded6f4b59d0123c3e6a2", "commitAfterChange": "de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 7, "signatureBeforeChange": "          public CategoryFilter(Class<?> includedCategory,                 Class<?> excludedCategory)", "signatureAfterChange": "          private CategoryFilter(boolean matchAnyIncludes, Set<Class<?>> includes,                                boolean matchAnyExcludes, Set<Class<?>> excludes)", "diff": ["-", "-        public CategoryFilter(Class<?> includedCategory,", "-                Class<?> excludedCategory) {", "-            fIncluded = includedCategory;", "-            fExcluded = excludedCategory;", "+", "+        private CategoryFilter(boolean matchAnyIncludes, Set<Class<?>> includes,", "+                               boolean matchAnyExcludes, Set<Class<?>> excludes) {", "+            fIncludedAny= matchAnyIncludes;", "+            fExcludedAny= matchAnyExcludes;", "+            fIncluded= copyAndRefine(includes);", "+            fExcluded= copyAndRefine(excludes);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab0ec887ad89101c35cf1509e307d1ea", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "          protected CategoryFilter(boolean matchAnyIncludes, Set<Class<?>> includes,                                boolean matchAnyExcludes, Set<Class<?>> excludes)", "signatureAfterChange": "          protected CategoryFilter(boolean matchAnyIncludes, Set<Class<?>> includes,                                boolean matchAnyExcludes, Set<Class<?>> excludes)", "diff": ["-            fIncludedAny= matchAnyIncludes;", "-            fExcludedAny= matchAnyExcludes;", "-            fIncluded= copyAndRefine(includes);", "-            fExcluded= copyAndRefine(excludes);", "+            includedAny = matchAnyIncludes;", "+            excludedAny = matchAnyExcludes;", "+            included = copyAndRefine(includes);", "+            excluded = copyAndRefine(excludes);"]}]}