{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "329e9ed379a3f066549f06ef7913af8b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37b02e4588447d65812b5c91fae262b8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "6a8215ab69317916807f246daef80a9d4cf5dc8e", "commitAfterChange": "48aabe1b16bd288f74ac4ff92e3a38792533be39", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@SuppressWarnings(\"deprecation\") \tprivate void addSinglePointMethods(ParameterSignature sig, \t\t\tList<PotentialAssignment> list)", "signatureAfterChange": "  \tprivate void addSinglePointMethods(ParameterSignature sig, \t\t\t\t\t\t\t\t\t   List<PotentialAssignment> list)", "diff": ["-\t@SuppressWarnings(\"deprecation\")", "-\t\t\tList<PotentialAssignment> list) {", "+\t\t\t\t\t\t\t\t\t   List<PotentialAssignment> list) {", "-\t\t\tClass<?> type= sig.getType();", "-\t\t\tif ((dataPointMethod.producesType(type)))", "+\t\t\tif (isCorrectlyTyped(sig, dataPointMethod.getType()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e83f41b199142f39ea1a5081472b3236", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/TestIntrospector.java", "commitBeforeChange": "890b7b977e42360aa8975c8535fc66bfd8d8cb3e", "commitAfterChange": "88f0fe3ced24506ddf9791f7a088163f4e7b1f20", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t\tpublic MethodCollector addMethods(Class<?> testClass)", "signatureAfterChange": "  \t\tpublic MethodCollector addMethods(Class<?> testClass)", "diff": ["-\t\t\t\tAnnotation annotation= eachMethod", "-\t\t\t\t\t\t.getAnnotation(annotationClass);", "-\t\t\t\tif (annotation != null && !isShadowed(eachMethod))", "+\t\t\t\tif (hasAnnotation(eachMethod) && !isShadowed(eachMethod))", "-\t\t\t", "-\t\t\taddSuperclasses(testClass);\t\t\t", "+", "+\t\t\taddSuperclasses(testClass);", "+\t\t}"]}]}