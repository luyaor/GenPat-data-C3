{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f87d70d5e57a5142f3cee2b84b28d3c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "131afdbed2e431b26b0cd6a0f4bc2ee9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "e727dd6b1cb2caa1699da3b2df7625c9554adc36", "commitAfterChange": "95bd62b2ffd80394d1a17e9078a4d79478423030", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t\t \t\t@Override \t\tpublic void testIgnoredReason(Description description, \t\t\t\tAssumptionViolatedException e)", "signatureAfterChange": " \t\t \t\t@Override \t\tpublic void testAssumptionFailed(Description description, \t\t\t\tAssumptionViolatedException e)", "diff": ["-\t\tpublic void testIgnoredReason(Description description,", "+\t\tpublic void testAssumptionFailed(Description description,", "-\t\t\tfIgnorances.add(new Ignorance(description, e));", "+\t\t\t// TODO: (Dec 12, 2007 2:39:00 PM) text should be unrunnable, not IGNORED TEST", "+", "+\t\t\tfUnrunnables.add(new FailedAssumption(description, e));", "+\t\t\tfAssumptionFailed = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e70bad83e0f2a88b9b3d893bb7a4ef0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "647e9ff7881d796ea6b87472e3c1bd40e2e19c76", "commitAfterChange": "77ecd2119d3124b72935038effffadf7b98eccd9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t\t@Override \t\tpublic void testStarted(Description description) throws Exception", "signatureAfterChange": "  \t\t@Override \t\tpublic void testFinished(Description description) throws Exception", "diff": ["-\t\tpublic void testStarted(Description description) throws Exception {", "-\t\t\tfCount++;", "+\t\tpublic void testFinished(Description description) throws Exception {", "+\t\t\tif (!fTestIgnored)", "+\t\t\t\tfCount++;", "+\t\t\tfTestIgnored = false;"]}]}