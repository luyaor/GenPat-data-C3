{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e6d4feff15c28043657b867fe4e53a9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7427e453571e397e0cf12df528a59b76", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "4dcf3a499652b3c089d91e209c6f01313115ff76", "commitAfterChange": "a916d4133c7e394130d7953da427aae9917ab92c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tprivate void printIgnorances(Result result)", "signatureAfterChange": " \t \tprivate void printIgnorances(Result result)", "diff": ["-\t\t// TODO: (Dec 13, 2007 12:57:04 AM) DUP", "-", "-\t\tif (result.getIgnorances().size() == 0)", "-\t\t\treturn;", "-\t\tif (result.getIgnorances().size() == 1)", "-\t\t\t// TODO: (Dec 13, 2007 12:55:01 AM) test this back in", "-", "-\t\t\tgetWriter().println(\"There was \" + result.getIgnorances().size() + \" \" + \"ignored test\" + \":\");", "-\t\telse", "-\t\t\tgetWriter().println(\"There were \" + result.getIgnorances().size() + \" \" + \"ignored test\" + \"s:\");", "-\t\tfor (Ignorance each : result.getIgnorances()) {", "-\t\t\t// TODO: (Dec 13, 2007 12:57:12 AM) Cheating", "-", "-\t\t\tgetWriter().println(\"IGNORED TEST 1) \" + each.getReason());", "-\t\t}", "+\t\tprintEvents(\"ignored test\", \"IGNORED TEST \", result.getIgnorances());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9d63e899c51b88bc44f62437987f3be", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "785a33b478d358e79a3b6592754ad9ec051e4278", "commitAfterChange": "5d9e0022d3f6db1367d530579de6332b9c8802e3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test public void nameAndDescriptor() throws Exception", "signatureAfterChange": "         void delta()", "diff": ["-", "-    @Test public void nameAndDescriptor() throws Exception {", "-        assertEquals(\"a~(IDLjava/lang/Thread;)Ljava/lang/Object;\", MethodSorter.nameAndDescriptor(Dummy.class.getDeclaredMethod(\"a\", int.class, double.class, Thread.class)));", "-        assertEquals(\"b~([[I)V\", MethodSorter.nameAndDescriptor(Dummy.class.getDeclaredMethod(\"b\", int[][].class)));", "-        assertEquals(\"c~()I\", MethodSorter.nameAndDescriptor(Dummy.class.getDeclaredMethod(\"c\")));", "-        assertEquals(\"c~(Z)V\", MethodSorter.nameAndDescriptor(Dummy.class.getDeclaredMethod(\"c\", boolean.class)));", "-    }", "+        void gamma(boolean b) {}", "+        void delta() {}"]}]}