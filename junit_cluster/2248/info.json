{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c732f7eab7d27a84194102c655f2c6ad", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d30842246e8cc4eeda06417bb39d706", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/test/runner/TheoryContainerReferenceTest.java", "commitBeforeChange": "fcf95d1d6bfdd046f1328af108ad5376c62d50d4", "commitAfterChange": "b7bb33dd040e87bb08831ee950fd788f206bb59a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Test public void ignoreDataPointMethodsWithWrongTypes() \t\t\tthrows SecurityException, InstantiationException, \t\t\tIllegalAccessException", "signatureAfterChange": "  \t@Test public void ignoreDataPointMethodsWithWrongTypes() \t\t\tthrows SecurityException, InstantiationException, \t\t\tIllegalAccessException", "diff": ["-\t\tassertThat(potentialValues().toString(), Matchers", "-\t\t.not(hasToString(containsString(\"100\"))));", "+\t\tassertThat(potentialValues().toString(), not(containsString(\"100\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac495479d7ee66dfa830bb0a37c1730f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/test/runner/TheoryContainerReferenceTest.java", "commitBeforeChange": "fcf95d1d6bfdd046f1328af108ad5376c62d50d4", "commitAfterChange": "b7bb33dd040e87bb08831ee950fd788f206bb59a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t@Test public void pickUpDataPointMethods() throws SecurityException, \t\t\tInstantiationException, IllegalAccessException", "signatureAfterChange": "  \t@Test public void pickUpDataPointMethods() throws SecurityException, \t\t\tInstantiationException, IllegalAccessException", "diff": ["-\t\tassertThat(potentialValues(), hasToString(containsString(\"100\")));", "+\t\tassertThat(potentialValues().toString(), containsString(\"100\"));"]}]}