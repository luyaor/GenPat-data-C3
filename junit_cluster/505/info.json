{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e6b1a816b3d0a54d943a6ff9a233e7db", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5504a6ccc67bb456fa8ddc6da12be7d8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java", "commitBeforeChange": "e1bf14b4d5b7aecf4611fd400417359424121544", "commitAfterChange": "f6a3d7405b72966d3714355804e1b3c14b1425cb", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 58, "signatureBeforeChange": "         @Parameters         public static Iterable<String> data()", "signatureAfterChange": "         @Parameters         public static Iterable<? extends Object> data()", "diff": ["-    static public class WrongElementType {", "-        @Parameters", "-        public static Iterable<String> data() {", "-            return Arrays.asList(\"a\", \"b\", \"c\");", "-        }", "+    static public class SingleArgumentTestWithIterable {", "+        @Parameters", "+        public static Iterable<? extends Object> data() {", "+            return asList(\"first test\", \"second test\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d72a6bb92f806b16af9dd1a9ef851b29", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java", "commitBeforeChange": "e1bf14b4d5b7aecf4611fd400417359424121544", "commitAfterChange": "f6a3d7405b72966d3714355804e1b3c14b1425cb", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "          @Parameters         public static Collection<Object[]> data()", "signatureAfterChange": "         @Parameters(name= \"{index}: fib({0})={1}\")         public static Object[][] data()", "diff": ["+    static public class FibonacciTestWithArray {", "+        @Parameters(name= \"{index}: fib({0})={1}\")", "+        public static Object[][] data() {", "+            return new Object[][] { { 0, 0 }, { 1, 1 }, { 2, 1 },", "+                { 3, 2 }, { 4, 3 }, { 5, 5 }, { 6, 8 } };", "+        }"]}]}