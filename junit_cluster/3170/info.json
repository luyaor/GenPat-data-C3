{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cccf8276d65eb889810ba9cf356fbaba", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "156e115a346222b936fc5c67bcb43762", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/DescriptionTest.java", "commitBeforeChange": "09f3e35b7f006006d44de0daccd1b4cf2c500be1", "commitAfterChange": "b564894980310e40f4c21006ff0c2346c4fc71f6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t@Test \tpublic void sameNamesButDifferentUniqueIdAreNotEqual() throws Exception", "signatureAfterChange": "  \t@Test \tpublic void sameNamesButDifferentUniqueIdAreNotEqual() throws Exception", "diff": ["-\t\tassertThat(Description.createTestDescription(\"something that's not a class name\", \"aTestMethod\", 1),", "-\t\t\t\t\t\tnot(equalTo(Description.createTestDescription(\"something that's not a class name\", \"aTestMethod\", 2))));", "+\t\tassertThat(Description.createTestDescription(\"not a class name\", \"aTestMethod\", 1),", "+\t\t\t\t\t\tnot(equalTo(Description.createTestDescription(\"not a class name\", \"aTestMethod\", 2))));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0a1a4f6f02922c40dfb0d1211375f3a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/DescriptionTest.java", "commitBeforeChange": "09f3e35b7f006006d44de0daccd1b4cf2c500be1", "commitAfterChange": "b564894980310e40f4c21006ff0c2346c4fc71f6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Test \tpublic void parseClassNameAndMethodUniqueId() throws Exception", "signatureAfterChange": "  \t@Test \tpublic void parseClassNameAndMethodUniqueId() throws Exception", "diff": ["-\t\tDescription description = Description.createTestDescription(\"something that's not a class name\", \"aTestMethod\", 123);", "+\t\tDescription description = Description.createTestDescription(\"not a class name\", \"aTestMethod\", 123);", "-\t\tassertThat(description.getClassName(), equalTo(\"something that's not a class name\"));", "+\t\tassertThat(description.getClassName(), equalTo(\"not a class name\"));"]}]}