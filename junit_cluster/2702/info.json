{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8943a482ce058d1b246d1beb84b413e2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8eae863b5231c8a2b452b4a2201eef22", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 28, "signatureBeforeChange": " \t \tprotected JLabel createLogo()", "signatureAfterChange": " \t \tprotected JLabel createLogo()", "diff": ["-\t\tjava.net.URL url= BaseTestRunner.class.getResource(\"logo.gif\");", "-\t\treturn new JLabel(new ImageIcon(url));", "+\t\tJLabel label;", "+\t\tIcon icon= getIconResource(BaseTestRunner.class, \"logo.gif\");", "+\t\tif (icon != null) ", "+\t\t\tlabel= new JLabel(icon);", "+\t\telse", "+\t\t\tlabel= new JLabel(\"JV\");", "+\t\tlabel.setToolTipText(\"JUnit Version \"+Version.id());", "+\t\treturn label;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fe7d60492c6bd946be9e40b298a9d51", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "26f9ebac45e0ff95c72d356b98b64eaf3de4f618", "commitAfterChange": "99b0ebc70e061d7620179f4e72e735e3944e54cd", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     protected List<org.junit.rules.MethodRule> rules(Object target)", "signatureAfterChange": "     protected List<MethodRule> rules(Object target)", "diff": ["-    protected List<org.junit.rules.MethodRule> rules(Object target) {", "-        return getTestClass().getAnnotatedFieldValues(target, Rule.class,", "-                org.junit.rules.MethodRule.class);", "+    protected List<MethodRule> rules(Object target) {", "+        List<MethodRule> rules = getTestClass().getAnnotatedMethodValues(target, ", "+                Rule.class, MethodRule.class);", "+        ", "+        rules.addAll(getTestClass().getAnnotatedFieldValues(target,", "+                Rule.class, MethodRule.class));", "+        ", "+        return rules;"]}]}