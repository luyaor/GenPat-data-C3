{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aadd961f2061169fd38e19bb80c40a62", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "983ba90d77638928076f40201ff12f12", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "734ab5187c068599352e5fdc7374c1334d484fef", "commitAfterChange": "54917b88aab026dabb4541276ed875117c1e1faa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static MaxHistory locallyStored(File file)", "signatureAfterChange": " \tpublic static MaxHistory forFolder(File file)", "diff": ["-\tpublic static MaxHistory locallyStored(File file) {", "-\t\ttry {", "-\t\t\tif (file.exists())", "+\tpublic static MaxHistory forFolder(File file) {", "+\t\t// TODO: temp!", "+\t\tif (file.getPath() == null)", "+\t\t\tthrow new NullPointerException();", "+\t\tif (file.exists())", "+\t\t\ttry {", "-\t\t} catch (CouldNotReadCoreException e) {", "-\t\t\te.printStackTrace();", "-\t\t\tfile.delete();", "-\t\t}", "+\t\t\t} catch (CouldNotReadCoreException e) {", "+\t\t\t\te.printStackTrace();", "+\t\t\t\tfile.delete();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e89adbd42e1557be26ba6e289363481d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "8e313a1e58a56694c0441b2fa60974fa8e1bfe31", "commitAfterChange": "409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static MaxHistory locallyStored(File file)", "signatureAfterChange": " \tpublic static MaxHistory forFolder(File file)", "diff": ["-\tpublic static MaxHistory locallyStored(File file) {", "-\t\ttry {", "-\t\t\tif (file.exists())", "+\tpublic static MaxHistory forFolder(File file) {", "+\t\t// TODO: temp!", "+\t\tif (file.getPath() == null)", "+\t\t\tthrow new NullPointerException();", "+\t\tif (file.exists())", "+\t\t\ttry {", "-\t\t} catch (CouldNotReadCoreException e) {", "-\t\t\te.printStackTrace();", "-\t\t\tfile.delete();", "-\t\t}", "+\t\t\t} catch (CouldNotReadCoreException e) {", "+\t\t\t\te.printStackTrace();", "+\t\t\t\tfile.delete();", "+\t\t\t}"]}]}