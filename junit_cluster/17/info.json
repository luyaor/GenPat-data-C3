{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "897c879ac3614efec10d52ac994311c8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03b6fd2bf0e0314064c5399acc3d04ea", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "ce280f0afd532351d5783cf93d08526181eee4c8", "commitAfterChange": "cec8e3ed1246c289ae156c4418d2e224bd793f4b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprivate Class<? extends CategoryType> getCategory(Class<?> klass)", "signatureAfterChange": "  \tprivate Class<?> getIncludedCategory(Class<?> klass)", "diff": ["-\tprivate Class<? extends CategoryType> getCategory(Class<?> klass) {", "-\t\treturn klass.getAnnotation(IncludeCategory.class).value();", "+\tprivate Class<?> getIncludedCategory(Class<?> klass) {", "+\t\tIncludeCategory annotation= klass.getAnnotation(IncludeCategory.class);", "+\t\treturn annotation == null ? null : annotation.value();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "817b0fd422b0f261c2f2a70e016c2af1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "1cec456a2c5638818959856eb3cef98743cbe08b", "commitAfterChange": "e0cddcdfa8ec823da136af500cce0910a1dd2264", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate void createRunnersForParameters(Iterable<Object[]> allParameters) \t\t\tthrows InitializationError, Exception", "signatureAfterChange": "  \tprivate void createRunnersForParameters(Iterable<Object[]> allParameters, \t\t\tString namePattern) throws InitializationError, Exception", "diff": ["-\tprivate void createRunnersForParameters(Iterable<Object[]> allParameters)", "-\t\t\tthrows InitializationError, Exception {", "+\tprivate void createRunnersForParameters(Iterable<Object[]> allParameters,", "+\t\t\tString namePattern) throws InitializationError, Exception {", "+\t\t\t\tString name= nameFor(namePattern, i, parametersOfSingleTest);", "-\t\t\t\t\t\ti);", "+\t\t\t\t\t\tname);"]}]}