{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f71384eeefa0f3d486573ba4eb1de43", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "716044f37c5021ae17814aab2f646e5b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "6a8215ab69317916807f246daef80a9d4cf5dc8e", "commitAfterChange": "48aabe1b16bd288f74ac4ff92e3a38792533be39", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate void addMultiPointMethods(List<PotentialAssignment> list)", "signatureAfterChange": "  \tprivate void addMultiPointMethods(ParameterSignature sig, List<PotentialAssignment> list)", "diff": ["-\tprivate void addMultiPointMethods(List<PotentialAssignment> list) {", "+\tprivate void addMultiPointMethods(ParameterSignature sig, List<PotentialAssignment> list) {", "-\t\t\t\taddArrayValues(dataPointsMethod.getName(), list, dataPointsMethod.invokeExplosively(null));", "+\t\t\t\taddMultiPointArrayValues(sig, dataPointsMethod.getName(), list, dataPointsMethod.invokeExplosively(null));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8eb8028171ac5e849cc81c846237843", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "e727dd6b1cb2caa1699da3b2df7625c9554adc36", "commitAfterChange": "95bd62b2ffd80394d1a17e9078a4d79478423030", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate FrameworkMethod getParametersMethod() throws Exception", "signatureAfterChange": "  \tprivate static FrameworkMethod getParametersMethod(TestClass testClass) throws Exception", "diff": ["-\tprivate FrameworkMethod getParametersMethod() throws Exception {", "-\t\tList<FrameworkMethod> methods= getTestClass()", "+\tprivate static FrameworkMethod getParametersMethod(TestClass testClass) throws Exception {", "+\t\tList<FrameworkMethod> methods= testClass", "-\t\t\t\t+ getTestClass().getName());", "+\t\t\t\t+ testClass.getName());"]}]}