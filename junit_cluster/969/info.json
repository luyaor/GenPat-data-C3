{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a0ae821d42297c7c105bc13a943289b5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cf57eb4d4b62231780f3ed1147d568c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/assertion/MultipleFailureExceptionTest.java", "commitBeforeChange": "91a7ff28a3879d4a409176e092887924700d08b6", "commitAfterChange": "cb818f191ea2b9fe563aa20c581b16f3f23b7c4c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test(expected = ExpectedException.class)     public void assertEmptyRethrowsSingleThrowable() throws Throwable", "signatureAfterChange": "      public void assertEmptyRethrowsSingleRuntimeException() throws Exception", "diff": ["-    @Test(expected = ExpectedException.class)", "-    public void assertEmptyRethrowsSingleThrowable() throws Throwable {", "-        MultipleFailureException.assertEmpty(", "-                Collections.<Throwable>singletonList(new ExpectedException(\"pesto\")));", "+    public void assertEmptyRethrowsSingleRuntimeException() throws Exception {", "+        Throwable exception= new ExpectedException(\"pesto\");", "+        List<Throwable> errors= Collections.singletonList(exception);", "+        try {", "+            MultipleFailureException.assertEmpty(errors);", "+            fail();", "+        } catch (ExpectedException e) {", "+            assertSame(e, exception);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "909a0c111d2bd905429b13419c00d04b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "34e66740b9117ce85cfd416f9e931b2e533ab16e", "commitAfterChange": "85b7c26e63f851004ce20d4a00fbf1b46607ab0c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 5, "signatureBeforeChange": "          @Override         public void run()", "signatureAfterChange": "          public Throwable call() throws Exception", "diff": ["-", "-        @Override", "-        public void run() {", "+        public Throwable call() throws Exception {", "-                fStatement.evaluate();", "-                fFinished = true;", "-            } catch (InterruptedException e) {", "-                // don't log the InterruptedException", "-            } catch (InterruptedIOException e) {", "-                // don't log the InterruptedIOException", "-            } catch (ClosedByInterruptException e) {", "-                // don't log the ClosedByInterruptException", "+                fOriginalStatement.evaluate();", "+            } catch (Exception e) {", "+                throw e;", "-                fExceptionThrownByOriginalStatement = e;", "+                return e;", "+            return null;"]}]}