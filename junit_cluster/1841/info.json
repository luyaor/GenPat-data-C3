{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f06c57a8db861eebf02037f26518a649", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80d62cbcf451ace0dfdd21aa7ae04b72", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/rules/RuleFieldValidator.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void validate(TestClass target, List<Throwable> errors)", "signatureAfterChange": "     public void validate(TestClass target, List<Throwable> errors)", "diff": ["-        List<? extends FrameworkMember<?>> members = fMethods ? target.getAnnotatedMethods(fAnnotation)", "-                : target.getAnnotatedFields(fAnnotation);", "+        List<? extends FrameworkMember<?>> members = methods ? target.getAnnotatedMethods(annotation)", "+                : target.getAnnotatedFields(annotation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f80d95f3b18922814c946c88303c9b4f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/rules/RuleFieldValidator.java", "commitBeforeChange": "49d62f902ba7dba44b0b2b3b71e45004c667b2d5", "commitAfterChange": "faba199e389e3c977fc5573315790a5cde5f7611", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void validate(TestClass target, List<Throwable> errors)", "signatureAfterChange": " \tpublic void validate(TestClass target, List<Throwable> errors)", "diff": ["-\t\tList<FrameworkField> fields= target.getAnnotatedFields(fAnnotation);", "-\t\tfor (FrameworkField each : fields)", "-\t\t\tvalidateField(each, errors);", "+\t\tList<? extends FrameworkMember<?>> members= fMethods ? target.getAnnotatedMethods(fAnnotation)", "+\t\t\t\t\t\t\t\t\t\t: target.getAnnotatedFields(fAnnotation);", "+\t\t", "+\t\tfor (FrameworkMember<?> each : members)", "+\t\t\tvalidateMember(each, errors);"]}]}