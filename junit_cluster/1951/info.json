{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d974877dfa3969c3fe2ef280451835ab", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "211923a54eb8959978195ef45788a279", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/ComparisonFailure.java", "commitBeforeChange": "950702c6adbbcbbee0ce2061d674bf05e0c997b1", "commitAfterChange": "a5d194fcb57b1b320ae808bc5a8d153f98f18a84", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 7, "signatureBeforeChange": "          private String computeCommonSuffix()", "signatureAfterChange": "          private String sharedSuffix(String prefix)", "diff": ["+", "+        private String sharedSuffix(String prefix) {", "+            int suffixLength = 0;", "+            int maxSuffixLength = Math.min(expected.length() - prefix.length(),", "+                    actual.length() - prefix.length()) - 1;", "+            for (; suffixLength <= maxSuffixLength; suffixLength++) {", "+                if (expected.charAt(expected.length() - 1 - suffixLength)", "+                        != actual.charAt(actual.length() - 1 - suffixLength)) {", "+            return expected.substring(expected.length() - suffixLength);", "-        private String computeCommonSuffix() {", "-            int end = Math.min(expected.length() - suffix + contextLength, expected.length());", "-            return expected.substring(expected.length() - suffix, end) + (expected.length() - suffix < expected.length() - contextLength ? ELLIPSIS : \"\");", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4d0be3f1b12e4d276275260ffdd7ade", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "81bb4fe24756a6a21b57975cac9eda4ce2304308", "commitAfterChange": "d517352c4b06fee4d5dfddfc69c86514d09eddc3", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected Statement childrenInvoker(final RunNotifier notifier)", "signatureAfterChange": "     protected Statement childrenInvoker(final RunNotifier notifier)", "diff": ["+        final Collection<T> filteredChildren= getFilteredChildren();", "+        Collection<T> filteredChildrenCopy= new ArrayList<T>(filteredChildren);", "+", "+        for (T child : filteredChildren) {", "+            if (isIgnoredMethod(child)) {", "+                Description childDescription= describeChild(child);", "+                notifier.fireTestIgnored(childDescription);", "+                filteredChildrenCopy.remove(child);", "+            }", "+", "+        }", "+", "+        final Collection<T> filteredChildrenWithoutIgnores= Collections", "+                .unmodifiableCollection(filteredChildrenCopy);", "+", "+        if (filteredChildrenWithoutIgnores.isEmpty()) {", "+            return new EmptyStatement();", "+        }", "+", "-                runChildren(notifier);", "+                runChildren(notifier, filteredChildrenWithoutIgnores);"]}]}