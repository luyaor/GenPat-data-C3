{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "287fb6969d344e3124106504b57b3f8d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5db3f977c064541aabc0b466419c95c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/parameterized/TestWithParameters.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public boolean equals(Object obj)", "signatureAfterChange": "      @Override     public boolean equals(Object obj)", "diff": ["-        return fName.equals(other.fName)", "-                && fParameters.equals(other.fParameters)", "-                && fTestClass.equals(other.fTestClass);", "+        return name.equals(other.name)", "+                && parameters.equals(other.parameters)", "+                && testClass.equals(other.testClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f374ca89ab4fd34d74c256ab180d725d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/parameterized/BlockJUnit4ClassRunnerWithParameters.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private Object createTestUsingFieldInjection() throws Exception", "signatureAfterChange": "      private Object createTestUsingFieldInjection() throws Exception", "diff": ["-        if (annotatedFieldsByParameter.size() != fParameters.length) {", "+        if (annotatedFieldsByParameter.size() != parameters.length) {", "-                            + \", available parameters: \" + fParameters.length", "+                            + \", available parameters: \" + parameters.length", "-                field.set(testClassInstance, fParameters[index]);", "+                field.set(testClassInstance, parameters[index]);", "-                        + \" with the value \" + fParameters[index]", "+                        + \" with the value \" + parameters[index]", "-                        + fParameters[index].getClass().getSimpleName()", "+                        + parameters[index].getClass().getSimpleName()"]}]}