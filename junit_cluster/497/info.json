{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b77b5e9d5c790185017be79f70ae120", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "293d0710e5892489fad34812ed3a9f51", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/RunNotifier.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate void fireTestFailures(List<RunListener> listeners, \t\t\tfinal List<Failure> failures)", "signatureAfterChange": "      private void fireTestFailures(List<RunListener> listeners,             final List<Failure> failures)", "diff": ["-\tprivate void fireTestFailures(List<RunListener> listeners,", "-\t\t\tfinal List<Failure> failures) {", "-\t\tif (!failures.isEmpty())", "-\t\t\tnew SafeNotifier(listeners) {", "-\t\t\t\t@Override", "-\t\t\t\tprotected void notifyListener(RunListener listener)", "-\t\t\t\t\t\tthrows Exception {", "-\t\t\t\t\tfor (Failure each : failures)", "-\t\t\t\t\t\tlistener.testFailure(each);", "-\t\t\t\t};", "-\t\t\t}.run();", "-\t}", "+", "+    private void fireTestFailures(List<RunListener> listeners,", "+            final List<Failure> failures) {", "+        if (!failures.isEmpty()) {", "+            new SafeNotifier(listeners) {", "+                @Override", "+                protected void notifyListener(RunListener listener)", "+                        throws Exception {", "+                    for (Failure each : failures) {", "+                        listener.testFailure(each);", "+                    }", "+                }", "+", "+                ;", "+            }.run();", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9434072567d192c4310c6e74576beb93", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/RunNotifier.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void fireTestStarted(final Description description) throws StoppedByUserException", "signatureAfterChange": "     public void fireTestStarted(final Description description) throws StoppedByUserException", "diff": ["-\t */", "-\tpublic void fireTestStarted(final Description description) throws StoppedByUserException {", "-\t\tif (fPleaseStop)", "-\t\t\tthrow new StoppedByUserException();", "-\t\tnew SafeNotifier() {", "-\t\t\t@Override", "-\t\t\tprotected void notifyListener(RunListener each) throws Exception {", "-\t\t\t\teach.testStarted(description);", "-\t\t\t};", "-\t\t}.run();", "-\t}", "+     */", "+    public void fireTestStarted(final Description description) throws StoppedByUserException {", "+        if (fPleaseStop) {", "+            throw new StoppedByUserException();", "+        }", "+        new SafeNotifier() {", "+            @Override", "+            protected void notifyListener(RunListener each) throws Exception {", "+                each.testStarted(description);", "+            }", "+", "+            ;", "+        }.run();", "+    }"]}]}