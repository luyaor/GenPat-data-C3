{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7be6a22247dd8879a9a490d51a723f2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3100e05172af43e331aa53d2e6cd65e0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/ParameterizedAssertionError.java", "commitBeforeChange": "67e3edf20613b1278f4be05353b31b5129e21882", "commitAfterChange": "37a611801fbea6ecc9b6356d9616e761c8b59b91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic static String join(String delimiter, \t\t\tCollection<Object> values)", "signatureAfterChange": "  \tpublic static String join(String delimiter, \t\t\tCollection<Object> values)", "diff": ["-\t\t\tbuffer.append(String.valueOf(next));", "+\t\t\tbuffer.append(stringValueOf(next));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "343d2130fac99032add70e2a4348e9c8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/framework/JUnit4TestAdapter.java", "commitBeforeChange": "971c9a52281458375af79e303449fe22bf91feab", "commitAfterChange": "97402a3401c6cc2d45d395c0d9d636f483b5571c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic List<Test> getTests()", "signatureAfterChange": " \tpublic List<Test> getTests()", "diff": ["-\t\treturn fCache.asTestList(fRunner.getPlan());", "+\t\treturn fCache.asTestList(getDescription());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41611254873f5a6cb090741b8baa816f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/framework/JUnit4TestAdapter.java", "commitBeforeChange": "496ee866a46f783d145b649a688df57cbf79490e", "commitAfterChange": "5f7fddf537e551109ffd6241a00c87a2b3521523", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic List<Test> getTests()", "signatureAfterChange": " \tpublic List<Test> getTests()", "diff": ["-\t\treturn fCache.asTestList(fRunner.getPlan());", "+\t\treturn fCache.asTestList(getDescription());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d8fb7c9c8f1958b71983463c4a36621", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "bb13b318cd79a68470e93c79635090c7bb565475", "commitAfterChange": "8b35f0c0a07b80f068d78bf03025bcebef760a1e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private void handleException(Throwable e) throws Throwable", "signatureAfterChange": "      private void handleException(Throwable e) throws Throwable", "diff": ["-        if (fMatcherBuilder.expectsThrowable()) {", "+        if (isAnyExceptionExpected()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64fa84da1e242493b125f2b12b6572b1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "bb13b318cd79a68470e93c79635090c7bb565475", "commitAfterChange": "8b35f0c0a07b80f068d78bf03025bcebef760a1e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "          @Override         public void evaluate() throws Throwable", "signatureAfterChange": "          @Override         public void evaluate() throws Throwable", "diff": ["-            if (fMatcherBuilder.expectsThrowable()) {", "+            if (isAnyExceptionExpected()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e0db5ed8bf55336fe055dbdf7466544", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/Stopwatch.java", "commitBeforeChange": "ecb4de6a163e83471896956e1602dd5f4235952f", "commitAfterChange": "ebc674b2536e5bda7083dfd7841cf5c3c846b274", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void starting()", "signatureAfterChange": "      private void starting()", "diff": ["-        fStartNanos= System.nanoTime();", "+        fStartNanos= currentNanoTime();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "891b9ddab95a5a512a85149ecfb30938", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/Stopwatch.java", "commitBeforeChange": "ecb4de6a163e83471896956e1602dd5f4235952f", "commitAfterChange": "ebc674b2536e5bda7083dfd7841cf5c3c846b274", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private void stopping()", "signatureAfterChange": "      private void stopping()", "diff": ["-        fEndNanos= System.nanoTime();", "+        fEndNanos= currentNanoTime();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a81a32bd84146cf31e518de3a0446bd2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "6a756d53f90fe0765ce1adbf1203cc0acbc618b9", "commitAfterChange": "13ff0f993803b7df6d155e95495410e7290da732", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private Thread[] getThreadArray(ThreadGroup group)", "signatureAfterChange": "     private Thread[] getThreadArray(ThreadGroup group)", "diff": ["-        return Arrays.copyOf(threads, enumCount);", "+        return copyThreads(threads, enumCount);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc4aec4e015608ea7e5c9dc78926ea17", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "96df21cba5e56ee6d78fe51e86b4cc2bd2ceaf30", "commitAfterChange": "13885b99cf6d2f4bd2efa2211f57c103bbc03263", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \t@Override \tpublic Description getDescription()", "signatureAfterChange": " \t \t@Override \tpublic Description getDescription()", "diff": ["-\t\t\t\tfTestClass.getAnnotations());", "+\t\t\t\tgetRunnerAnnotations());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da391475ed5e0c9fa0ea6e00e5b2c484", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assume.java", "commitBeforeChange": "7ca2c7d2e052b99526415113b8d5dcc513e7de07", "commitAfterChange": "e35fb32e07a4cfe69dd86024a79d9cb3b9132e55", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t\tpublic static void assumeNotNull(Object... objects)", "signatureAfterChange": " \t\tpublic static void assumeNotNull(Object... objects)", "diff": ["-\t\tassumeThat(asList(objects), Each.each(notNullValue()));", "+\t\tassumeThat(asList(objects), everyItem(notNullValue()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1356b16ca9411037de680411f279e89", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assume.java", "commitBeforeChange": "695ae54ef17fc658734119b5378b19ff754a9951", "commitAfterChange": "52e61a55e8ffcaab2586ea8fec28e4b01336cd30", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t\tpublic static void assumeNotNull(Object... objects)", "signatureAfterChange": " \t\tpublic static void assumeNotNull(Object... objects)", "diff": ["-\t\tassumeThat(asList(objects), Each.each(notNullValue()));", "+\t\tassumeThat(asList(objects), everyItem(notNullValue()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f427ee2cc7101c29e05b146a357f8309", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assume.java", "commitBeforeChange": "f4df6d58cee244fa668195fc1cb3d187a4681282", "commitAfterChange": "4f1dbfc8619f5827a919106d14d42777b838638a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t\tpublic static void assumeNotNull(Object... objects)", "signatureAfterChange": " \t\tpublic static void assumeNotNull(Object... objects)", "diff": ["-\t\tassumeThat(asList(objects), Each.each(notNullValue()));", "+\t\tassumeThat(asList(objects), everyItem(notNullValue()));"]}]}