{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8104788546b8a88332232475d93b8eed", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02fc23021dc9d59c76ee4ae6acb2c2fe", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/results/ResultMatchersTest.java", "commitBeforeChange": "052fc095d5b4a8af643d0e4402a504716ad8eb03", "commitAfterChange": "231241782c199d39943f742d0abe57057b0b785c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate Result createResult() throws Exception", "signatureAfterChange": " \t \tprivate PrintableResult createPrintableResult() throws Exception", "diff": ["-\tprivate Result createResult() throws Exception {", "-\t\tResult result= new Result();", "-\t\tresult.createListener().testFailure(new Failure(null, new IllegalArgumentException()));", "-\t\treturn result;", "+\tprivate PrintableResult createPrintableResult() throws Exception {", "+\t\treturn new PrintableResult(Arrays.asList(new Failure(Description.TEST_MECHANISM, new IllegalArgumentException())));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a2ac302c1abae7a3e865ce5035831af", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "5cdd702717c5ca7dd3002e95847232681c445127", "commitAfterChange": "0956a4e6a236e9414c0d19a349206f3350501c60", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected Statement childrenInvoker(final RunNotifier notifier)", "signatureAfterChange": "     protected Statement childrenInvoker(final RunNotifier notifier)", "diff": ["-        final Collection<T> filteredChildrenWithoutIgnores = getFilteredChildrenWithoutIgnored(notifier);", "-", "-        if (filteredChildrenWithoutIgnores.isEmpty()) {", "-            return ALL_TESTS_IGNORED;", "-        }", "-", "-        return new Statement() {", "+        return new ChildrenAwareStatement(getFilteredChildren()) {", "+            ", "-                runChildren(notifier, filteredChildrenWithoutIgnores);", "+                runChildren(notifier, getChildren());", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa919a7767f048073d3b4f1a4c4fb5b6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "d6662fcc06ec7b07c696eb703c47d3731e4e11c7", "commitAfterChange": "85578d48f6459a05665329faa9b52a861e9142cb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic List<Description> sort(Request request)", "signatureAfterChange": "  \tpublic List<Description> sortedLeavesForTest(Request request)", "diff": ["-\tpublic List<Description> sort(Request request) {", "-\t\tList<Description> tests= findLeaves(request);", "-\t\tCollections.sort(tests, new TestComparator());", "-\t\treturn tests;", "+\tpublic List<Description> sortedLeavesForTest(Request request) {", "+\t\treturn findLeaves(sortRequest(request));"]}]}