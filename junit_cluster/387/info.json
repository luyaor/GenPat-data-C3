{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23e1d9e9648a71940a4ddc0caaf8bbe5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c7549d912daa1a9a7a15512e00f7582", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/NoGenericTypeParametersValidator.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tvoid validate(List<Throwable> errors)", "signatureAfterChange": "      void validate(List<Throwable> errors)", "diff": ["-\tvoid validate(List<Throwable> errors) {", "-\t\tfor (Type each : fMethod.getGenericParameterTypes())", "-\t\t\tvalidateNoTypeParameterOnType(each, errors);", "-\t}", "+    void validate(List<Throwable> errors) {", "+        for (Type each : fMethod.getGenericParameterTypes()) {", "+            validateNoTypeParameterOnType(each, errors);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "670b9db47e707d0abb89b46c396631b5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/NoGenericTypeParametersValidator.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate void validateNoTypeParameterOnWildcardType(WildcardType wildcard, \t\t\tList<Throwable> errors)", "signatureAfterChange": "      private void validateNoTypeParameterOnWildcardType(WildcardType wildcard,             List<Throwable> errors)", "diff": ["-\tprivate void validateNoTypeParameterOnWildcardType(WildcardType wildcard,", "-\t\t\tList<Throwable> errors) {", "-\t\tfor (Type each : wildcard.getUpperBounds())", "-\t\t    validateNoTypeParameterOnType(each, errors);", "-\t\tfor (Type each : wildcard.getLowerBounds())", "-\t\t    validateNoTypeParameterOnType(each, errors);", "-\t}", "+    private void validateNoTypeParameterOnWildcardType(WildcardType wildcard,", "+            List<Throwable> errors) {", "+        for (Type each : wildcard.getUpperBounds()) {", "+            validateNoTypeParameterOnType(each, errors);", "+        }", "+        for (Type each : wildcard.getLowerBounds()) {", "+            validateNoTypeParameterOnType(each, errors);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96a9adb5b6ea9092910a0a0647eeabe7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/NoGenericTypeParametersValidator.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate void validateNoTypeParameterOnParameterizedType(ParameterizedType parameterized, \t\t\tList<Throwable> errors)", "signatureAfterChange": "      private void validateNoTypeParameterOnParameterizedType(ParameterizedType parameterized,             List<Throwable> errors)", "diff": ["-\tprivate void validateNoTypeParameterOnParameterizedType(ParameterizedType parameterized,", "-\t\t\tList<Throwable> errors) {", "-\t\tfor (Type each : parameterized.getActualTypeArguments())", "-\t\t\tvalidateNoTypeParameterOnType(each, errors);", "-\t}", "+    private void validateNoTypeParameterOnParameterizedType(ParameterizedType parameterized,", "+            List<Throwable> errors) {", "+        for (Type each : parameterized.getActualTypeArguments()) {", "+            validateNoTypeParameterOnType(each, errors);", "+        }", "+    }"]}]}