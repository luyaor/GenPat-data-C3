{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af8d4bf1e5d67c4447ffc90c455de273", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ac93f7105ab37264b9fa20945bbd943", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/TestClass.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tprivate boolean isShadowed(Method method, List<Method> results)", "signatureAfterChange": "      private boolean isShadowed(Method method, List<Method> results)", "diff": ["-\t", "-\tprivate boolean isShadowed(Method method, List<Method> results) {", "-\t\tfor (Method each : results) {", "-\t\t\tif (isShadowed(method, each))", "-\t\t\t\treturn true;", "-\t\t}", "-\t\treturn false;", "-\t}", "+    private boolean isShadowed(Method method, List<Method> results) {", "+        for (Method each : results) {", "+            if (isShadowed(method, each)) {", "+                return true;", "+            }", "+        }", "+        return false;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ac72bb9eed4d4437270e079ebf93e29", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMember.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tboolean isShadowedBy(List<T> members)", "signatureAfterChange": "      boolean isShadowedBy(List<T> members)", "diff": ["-\tboolean isShadowedBy(List<T> members) {", "-\t\tfor (T each : members)", "-\t\t\tif (isShadowedBy(each))", "-\t\t\t\treturn true;", "-\t\treturn false;", "-\t}", "+    boolean isShadowedBy(List<T> members) {", "+        for (T each : members) {", "+            if (isShadowedBy(each)) {", "+                return true;", "+            }", "+        }", "+        return false;", "+    }"]}]}