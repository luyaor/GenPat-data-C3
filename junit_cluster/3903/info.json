{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4689e353cd94dfe3a72e5d067609e2df", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0894fef2d6141f68848e7e1cad2e6464", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/runner/BaseTestRunner.java", "commitBeforeChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "commitAfterChange": "a8ec4efa178afdbc7844e94d08ab38b811c7409a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static String truncate(String s)", "signatureAfterChange": " \tpublic static String truncate(String s)", "diff": ["-\t\tif (fMaxMessageLength != -1 && s.length() > fMaxMessageLength)", "-\t\t\ts= s.substring(0, fMaxMessageLength)+\"...\";", "+\t\tif (fgMaxMessageLength != -1 && s.length() > fgMaxMessageLength)", "+\t\t\ts= s.substring(0, fgMaxMessageLength)+\"...\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09eddbc33fa909106dada6feac4d593c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/validator/AnnotationValidatorFactory.java", "commitBeforeChange": "15566c4b6633db5cc84cae78088b36346b7d42f4", "commitAfterChange": "9d3821f6411ad85a683b8d38e4d42411229f2eec", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public AnnotationValidator createAnnotationValidator(ValidateWith validateWithAnnotation)", "signatureAfterChange": "     public AnnotationValidator createAnnotationValidator(ValidateWith validateWithAnnotation)", "diff": ["-        AnnotationValidator validator = fAnnotationTypeToValidatorMap.get(validateWithAnnotation);", "+        AnnotationValidator validator = VALIDATORS_FOR_ANNOTATION_TYPES.get(validateWithAnnotation);", "-            fAnnotationTypeToValidatorMap.putIfAbsent(validateWithAnnotation, annotationValidator);", "-            return fAnnotationTypeToValidatorMap.get(validateWithAnnotation);", "+            VALIDATORS_FOR_ANNOTATION_TYPES.putIfAbsent(validateWithAnnotation, annotationValidator);", "+            return VALIDATORS_FOR_ANNOTATION_TYPES.get(validateWithAnnotation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f425e6719ae15c705a8b433990c77335", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/methods/TimeoutTest.java", "commitBeforeChange": "7eef2314cb78d41def996cdd80c5a56c94a993f3", "commitAfterChange": "35b428a24bdd2eddd9653189632896d4f5b1ce42", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "                  public void failure(boolean mainThreadStalls) throws Exception", "signatureAfterChange": "                  public void failure(boolean mainThreadStalls) throws Exception", "diff": ["-            Thread t1 = new Thread (new threadTest (false), \"timeout-thr1\");", "-            Thread t2 = new Thread (new threadTest (!mainThreadStalls), \"timeout-thr2\");", "-            Thread t3 = new Thread (new threadTest (false), \"timeout-thr3\");", "+            Thread t1 = new Thread(new ThreadTest(false), \"timeout-thr1\");", "+            Thread t2 = new Thread(new ThreadTest(!mainThreadStalls), \"timeout-thr2\");", "+            Thread t3 = new Thread(new ThreadTest(false), \"timeout-thr3\");"]}]}