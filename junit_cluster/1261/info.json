{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e632fa2b37154bc90b234e4c6b3f7382", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17283206db142b8b1d2d21780dd0168a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/RunNotifier.java", "commitBeforeChange": "e727dd6b1cb2caa1699da3b2df7625c9554adc36", "commitAfterChange": "95bd62b2ffd80394d1a17e9078a4d79478423030", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic void fireTestIgnoredReason(final Description description, \t\t\tfinal AssumptionViolatedException e)", "signatureAfterChange": "  \t\t\tprivate String getIgnoredReason(final Description description)", "diff": ["+", "+\t\t\tprivate String getIgnoredReason(final Description description) {", "+\t\t\t\tIgnore annotation= description.getAnnotation(Ignore.class);", "+\t\t\t\tif (annotation == null)", "+\t\t\t\t\treturn null;", "+\t\t\t\treturn annotation.value();", "-\tpublic void fireTestIgnoredReason(final Description description,", "-\t\t\t\teach.testIgnoredReason(description, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4d1581355fc34a1bafa2a6ed75856e8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "4d6f0702dae590809b808230f027a60aa0a4a345", "commitAfterChange": "b737131b847c53bb4f1cf6dbf86f586008550eba", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t\t@Override \t\tpublic void runChild(final T child, final RunNotifier notifier)", "signatureAfterChange": "  \t\t\tpublic void runChild(final Runnable childStatement)", "diff": ["+\t\t\tpublic void runChild(final Runnable childStatement) {", "+\t\t\t\tfResults.add(fService.submit(new Callable<Object>() {", "+\t\t\t\t\tpublic Object call() throws Exception {", "+\t\t\t\t\t\tchildStatement.run();", "+\t\t\t\t\t\treturn null;", "+\t\t\t\t\t}", "+\t\t\t\t}));", "+\t\t\t}", "-", "-\t\t@Override", "-\t\tpublic void runChild(final T child, final RunNotifier notifier) {", "-\t\t\tfResults.add(fService.submit(new Callable<Object>() {", "-\t\t\t\tpublic Object call() throws Exception {", "-\t\t\t\t\tfDelegate.internalRunChild(child, notifier);", "-\t\t\t\t\treturn null;", "-\t\t\t\t}", "-\t\t\t}));", "-\t\t}"]}]}