{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "07e359a7491873041da3489e15f9067b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a0b124f10e4cd68d836dfe30a20c40c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/TestMethod.java", "commitBeforeChange": "f98130957df08de9cae93169298e04bf84388cae", "commitAfterChange": "43b0fe352d5bced0c341640d0c630d23f2022a7e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprotected void runTestUnprotected(final Roadie context)", "signatureAfterChange": "  \tvoid assertExceptionExpected(final Roadie context, Throwable e)", "diff": ["-\tprotected void runTestUnprotected(final Roadie context) {", "-\t\ttry {", "-\t\t\tinvoke(context);", "-", "-\t\t\tif (expectsException())", "-\t\t\t\tcontext.addFailure(new AssertionError(\"Expected exception: \"", "-\t\t\t\t\t\t+ getExpectedException().getName()));", "-\t\t} catch (Throwable e) {", "-\t\t\tif (e instanceof AssumptionViolatedException) {", "-\t\t\t\t// do nothing", "-\t\t\t} else if (!expectsException())", "-\t\t\t\tcontext.addFailure(e);", "-\t\t\telse if (isUnexpected(e)) {", "-\t\t\t\tString message= \"Unexpected exception, expected<\"", "-\t\t\t\t\t\t+ getExpectedException().getName() + \"> but was<\"", "-\t\t\t\t\t\t+ e.getClass().getName() + \">\";", "-\t\t\t\tcontext.addFailure(new Exception(message, e));", "-\t\t\t}", "+\tvoid assertExceptionExpected(final Roadie context, Throwable e) {", "+\t\tif (!expectsException())", "+\t\t\tcontext.addFailure(e);", "+\t\telse if (isUnexpected(e)) {", "+\t\t\tString message= \"Unexpected exception, expected<\"", "+\t\t\t\t\t+ getExpectedException().getName() + \"> but was<\"", "+\t\t\t\t\t+ e.getClass().getName() + \">\";", "+\t\t\tcontext.addFailure(new Exception(message, e));", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c4f38fd5803198eca7bc66e2d4b317e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "1d97da73fdafce8f5cf9d722f23c5cba41b26b70", "commitAfterChange": "88f7a12d472b1157639db5148b29c8a8825802a3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void validatePublicVoid(boolean isStatic, List<Throwable> errors)", "signatureAfterChange": "     public void validatePublicVoid(boolean isStatic, List<Throwable> errors)", "diff": ["-        }", "-        if (!Modifier.isPublic(getDeclaringClass().getModifiers())) {", "-            errors.add(new Exception(\"Class \" + getDeclaringClass().getName() + \" should be public\"));"]}]}