{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "85a395d7d65715a85b25998555770c17", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88c9edcd1ca6dfa4ee9b2819b14cc2e7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "85578d48f6459a05665329faa9b52a861e9142cb", "commitAfterChange": "8d9ac8d65204fe8cd7e1d9146f123a461952bae9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \t@Test public void remember() throws CouldNotReadCoreException", "signatureAfterChange": " \t \t@Test public void remember() throws CouldNotReadCoreException", "diff": ["-\t\tMaxCore original= MaxCore.forFolder(\"folder\");", "-\t\toriginal.run(request);", "-\t\tMaxCore reincarnation= MaxCore.forFolder(\"folder\");", "-\t\tDescription thing= reincarnation.sortedLeavesForTest(request).get(1);", "-\t\tassertEquals(Description.createTestDescription(TwoUnEqualTests.class, \"slow\"), thing);\t", "+\t\tfMax.run(request);", "+\t\tMaxCore reincarnation= MaxCore.forFolder(fMax.getFolder());", "+\t\ttry {", "+\t\t\tDescription thing= reincarnation.sortedLeavesForTest(request).get(1);", "+\t\t\tassertEquals(Description.createTestDescription(TwoUnEqualTests.class, \"slow\"), thing);", "+\t\t} finally {", "+\t\t\treincarnation.forget();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c13f3f385ccc7989cfa503fef907cdfe", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/links/Invoke.java", "commitBeforeChange": "a4c68872a91681139d404825c2bb04bd5ba804dd", "commitAfterChange": "f0ef837a40922ac08c608661385abf71732975d3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \t@Override \tpublic void run(EachTestNotifier context) throws Throwable", "signatureAfterChange": " \t \t@Override \tpublic void run(FailureListener listener)", "diff": ["-\tpublic void run(EachTestNotifier context) throws Throwable {", "-\t\tfTestMethod.invokeExplosively(fTarget);", "+\tpublic void run(FailureListener listener) {", "+\t\ttry {", "+\t\t\tfTestMethod.invokeExplosively(fTarget);", "+\t\t} catch (Throwable e) {", "+\t\t\tlistener.addFailure(e);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf480c5eaa9e5a235fd3a9da7d395b86", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/links/Notifying.java", "commitBeforeChange": "0e1c92693e70e52ad9af23ee6180500c74fc9c95", "commitAfterChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic void run(FailureListener listener)", "signatureAfterChange": "  \t@Override \tpublic void run(EachTestNotifier context)", "diff": ["-\tpublic void run(FailureListener listener) {", "-\t\tfNotifier.fireTestStarted();", "-\t\tfNext.run(listener);", "-\t\tfNotifier.fireTestFinished();", "+\tpublic void run(EachTestNotifier context) {", "+\t\tcontext.fireTestStarted();", "+\t\ttry {", "+\t\t\tfNext.run();", "+\t\t} catch (Throwable e) {", "+\t\t\tcontext.addFailure(e);", "+\t\t} finally {", "+\t\t\tcontext.fireTestFinished();", "+\t\t}"]}]}