{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d10c3bbdaadc3e35fdfc3af96d05e35", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1403257fc946deaaf4356ced305cb4d0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/methods/TimeoutTest.java", "commitBeforeChange": "5ca9da987a7d4dc00e082aaf552cbd8ee8c7bd33", "commitAfterChange": "fba19ba73a93dcc2d18942b3cf4992ce010afdb2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void stalledThreadAppearsInStackTrace() throws Exception", "signatureAfterChange": "          @Test     public void stalledThreadAppearsInStackTrace() throws Exception", "diff": ["+    ", "-        Writer buffer = new StringWriter();", "-        PrintWriter writer = new PrintWriter(buffer);", "-        exception.printStackTrace(writer);", "-        assertThat(buffer.toString(), containsString(\"infiniteLoop\")); // Make sure we have the stalled frame on the stack somewhere", "+        assertThat(stackForException(exception), containsString(\"infiniteLoop\")); // Make sure we have the stalled frame on the stack somewhere", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7573bb2dca169b83e710cac4586b4e6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "010f7461c5e9bb4304b68b8c0eb3027b677d7f31", "commitAfterChange": "61badf2f7f147d6e782e1700b24da4ac06ce070c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private void createRunnersForParameters(Iterable<Object[]> allParameters,             String namePattern) throws InitializationError, Exception", "signatureAfterChange": "\r \r     private void createRunnersForParameters(Iterable<Object[]> allParameters, String namePattern) throws Exception", "diff": ["-", "-    private void createRunnersForParameters(Iterable<Object[]> allParameters,", "-            String namePattern) throws InitializationError, Exception {", "-        try {", "-            int i = 0;", "-            for (Object[] parametersOfSingleTest : allParameters) {", "-                String name = nameFor(namePattern, i, parametersOfSingleTest);", "-                TestClassRunnerForParameters runner = new TestClassRunnerForParameters(", "-                        getTestClass().getJavaClass(), parametersOfSingleTest,", "-                        name);", "-                runners.add(runner);", "-                ++i;", "-            }", "-        } catch (ClassCastException e) {", "-            throw parametersMethodReturnedWrongType();", "-        }", "-    }", "+\r", "+    private void createRunnersForParameters(Iterable<Object[]> allParameters, String namePattern) throws Exception {\r", "+        try {\r", "+            int i = 0;\r", "+            for (Object[] parametersOfSingleTest : allParameters) {\r", "+                runners.add(createRunner(namePattern, i++, parametersOfSingleTest));\r", "+            }\r", "+        } catch (ClassCastException e) {\r", "+            throw parametersMethodReturnedWrongType();\r", "+        }\r", "+    }\r"]}]}