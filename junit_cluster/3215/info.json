{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "453e9c984d2ac632d7c71342155e538d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af83a8203e9a0b7a84c2dbc62d7a4e81", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "b77d9de8e3e2894fc6120c95a8e7766c38912d49", "commitAfterChange": "796e723caa0a1f75bb7b48b2454bea633fbf8e4e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t@Override \tpublic Suite getSuite(RunnerBuilder builder, java.lang.Class<?>[] classes) throws InitializationError", "signatureAfterChange": "  \t@Override \tpublic Runner getSuite(RunnerBuilder builder, java.lang.Class<?>[] classes) \t\t\tthrows InitializationError", "diff": ["-", "-\t@Override", "-\tpublic Suite getSuite(RunnerBuilder builder, java.lang.Class<?>[] classes) throws InitializationError {", "-\t\treturn fClasses", "-\t\t\t? new ParallelSuite(builder, classes)", "-\t\t\t: super.getSuite(builder, classes);", "-\t}", "+", "+\t@Override", "+\tpublic Runner getSuite(RunnerBuilder builder, java.lang.Class<?>[] classes)", "+\t\t\tthrows InitializationError {", "+\t\tSuite suite= (Suite) super.getSuite(builder, classes);", "+\t\treturn fClasses ? parallelize(suite) : suite;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7c2522a5d1b0a16835bd7d0a131c3d9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "0dc3de7fbcf997ca8465ed9e7793a0b4f730121b", "commitAfterChange": "3d08ecc6a661f09520559637794c9a161db90f3d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t@Override \tpublic Suite getSuite(RunnerBuilder builder, java.lang.Class<?>[] classes) throws InitializationError", "signatureAfterChange": "  \t@Override \tpublic Runner getSuite(RunnerBuilder builder, java.lang.Class<?>[] classes) \t\t\tthrows InitializationError", "diff": ["-", "-\t@Override", "-\tpublic Suite getSuite(RunnerBuilder builder, java.lang.Class<?>[] classes) throws InitializationError {", "-\t\treturn fClasses", "-\t\t\t? new ParallelSuite(builder, classes)", "-\t\t\t: super.getSuite(builder, classes);", "-\t}", "+", "+\t@Override", "+\tpublic Runner getSuite(RunnerBuilder builder, java.lang.Class<?>[] classes)", "+\t\t\tthrows InitializationError {", "+\t\tSuite suite= (Suite) super.getSuite(builder, classes);", "+\t\treturn fClasses ? parallelize(suite) : suite;", "+\t}"]}]}