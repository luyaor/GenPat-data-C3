{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69f21319d795da3edb18541ca9970514", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31d273bc22ceb6027a559bc1b9e8647e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/links/WithBeforeAndAfter.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic void run(final Roadie context) throws Throwable", "signatureAfterChange": "  \t@Override \tpublic void run(final EachTestNotifier context) throws Throwable", "diff": ["-\tpublic void run(final Roadie context) throws Throwable {", "+\tpublic void run(final EachTestNotifier context) throws Throwable {", "-\t\t\tif (fElement.runBefores(context))", "+\t\t\tif (fElement.runBefores(context, fTarget))", "-\t\t\tfElement.runAfters(context);", "+\t\t\tfElement.runAfters(context, fTarget);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb9add243ac688fca1ff1282280d367d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t\tprotected void runWithCompleteAssignment(final Assignments complete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tInvocationTargetException, NoSuchMethodException, Throwable", "signatureAfterChange": "  \t\tprotected void runWithCompleteAssignment(final Assignments complete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tInvocationTargetException, NoSuchMethodException, Throwable", "diff": ["-\t\t\t\tfinal Roadie thisContext= complete.getContext()", "+\t\t\t\tfinal EachTestNotifier thisContext= complete.getContext()", "-\t\t\t\t\tpublic void run(Roadie context) throws Throwable {", "+\t\t\t\t\tpublic void run(EachTestNotifier context) throws Throwable {", "-\t\t\t\t}, fTestMethod).run(thisContext); ", "+\t\t\t\t}, fTestMethod, freshInstance).run(thisContext); "]}]}