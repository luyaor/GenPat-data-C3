{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f41f54b77801502b9457730c94f42d7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b18f0ad249b2f0ced7797c6baf4e276", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/junit/samples/money/MoneyBag.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tvoid appendBag(MoneyBag aBag)", "signatureAfterChange": "      void appendBag(MoneyBag aBag)", "diff": ["-\t}", "-\tvoid appendBag(MoneyBag aBag) {", "-\t\tfor (Money each : aBag.fMonies)", "-\t\t\tappendMoney(each);", "-\t}", "+", "+    void appendBag(MoneyBag aBag) {", "+        for (Money each : aBag.fMonies) {", "+            appendMoney(each);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96a9adb5b6ea9092910a0a0647eeabe7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/NoGenericTypeParametersValidator.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate void validateNoTypeParameterOnParameterizedType(ParameterizedType parameterized, \t\t\tList<Throwable> errors)", "signatureAfterChange": "      private void validateNoTypeParameterOnParameterizedType(ParameterizedType parameterized,             List<Throwable> errors)", "diff": ["-\tprivate void validateNoTypeParameterOnParameterizedType(ParameterizedType parameterized,", "-\t\t\tList<Throwable> errors) {", "-\t\tfor (Type each : parameterized.getActualTypeArguments())", "-\t\t\tvalidateNoTypeParameterOnType(each, errors);", "-\t}", "+    private void validateNoTypeParameterOnParameterizedType(ParameterizedType parameterized,", "+            List<Throwable> errors) {", "+        for (Type each : parameterized.getActualTypeArguments()) {", "+            validateNoTypeParameterOnType(each, errors);", "+        }", "+    }"]}]}