{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b313944d9e33387c56a84f68e9d25209", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e7e7eb2c168c51b8c2653a211a01289", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "bbcb8f416628bc168a2ed8353a30b4e9647abf6f", "commitAfterChange": "85d42f2ef0ce94448700c90ed99372def66dc2a2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate void ensureKey(Class<? extends Annotation> annotation)", "signatureAfterChange": "  \tprivate <T> void ensureKey(Map<Class<?>, List<T>> map, Class<?> annotation)", "diff": ["-\tprivate void ensureKey(Class<? extends Annotation> annotation) {", "-\t\tif (!fMethodsForAnnotations.containsKey(annotation))", "-\t\t\tfMethodsForAnnotations.put(annotation,", "-\t\t\t\t\tnew ArrayList<FrameworkMethod>());", "+\tprivate <T> void ensureKey(Map<Class<?>, List<T>> map, Class<?> annotation) {", "+\t\tif (!map.containsKey(annotation))", "+\t\t\tmap.put(annotation, new ArrayList<T>());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e65078cbe1097afebbacbed32d3fe5b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "610b38e6c9753ab01b8aef093d2fcaeabe3a7a32", "commitAfterChange": "5ccb8e7c1189ac4a248dc2aa2852d1a760937466", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate void ensureKey(Class<? extends Annotation> annotation)", "signatureAfterChange": "  \tprivate <T> void ensureKey(Map<Class<?>, List<T>> map, Class<?> annotation)", "diff": ["-\tprivate void ensureKey(Class<? extends Annotation> annotation) {", "-\t\tif (!fMethodsForAnnotations.containsKey(annotation))", "-\t\t\tfMethodsForAnnotations.put(annotation,", "-\t\t\t\t\tnew ArrayList<FrameworkMethod>());", "+\tprivate <T> void ensureKey(Map<Class<?>, List<T>> map, Class<?> annotation) {", "+\t\tif (!map.containsKey(annotation))", "+\t\t\tmap.put(annotation, new ArrayList<T>());"]}]}