{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7d9402cbb53ebe9e142caf6b9897fa5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5db2aef2cd57e7bfab37653ce15be260", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assume.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static <T> void assumeThat(String message, T actual, Matcher<T> matcher)", "signatureAfterChange": "     public static <T> void assumeThat(String message, T actual, Matcher<T> matcher)", "diff": ["-\t */", "-\tpublic static <T> void assumeThat(String message, T actual, Matcher<T> matcher) {", "-\t\tif (!matcher.matches(actual))", "-\t\t\tthrow new AssumptionViolatedException(message, actual, matcher); ", "-\t}", "+     */", "+    public static <T> void assumeThat(String message, T actual, Matcher<T> matcher) {", "+        if (!matcher.matches(actual)) {", "+            throw new AssumptionViolatedException(message, actual, matcher);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4e505cd49ba37f4e724402e01ec51bf", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \t@Before \tpublic void createMax()", "signatureAfterChange": "      @Before     public void createMax()", "diff": ["-\t@Before", "-\tpublic void createMax() {", "-\t\tfMaxFile= new File(\"MaxCore.ser\");", "-\t\tif (fMaxFile.exists())", "-\t\t\tfMaxFile.delete();", "-\t\tfMax= MaxCore.storedLocally(fMaxFile);", "-\t}", "+    @Before", "+    public void createMax() {", "+        fMaxFile = new File(\"MaxCore.ser\");", "+        if (fMaxFile.exists()) {", "+            fMaxFile.delete();", "+        }", "+        fMax = MaxCore.storedLocally(fMaxFile);", "+    }"]}]}