{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e392ec347c79c01faa5692f799442b2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d3cbc8f6ebd5b0e8fea91349c5bb9ac", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java", "commitBeforeChange": "ff7c54f564eac489de1aef062ff0048c128e1c4f", "commitAfterChange": "b23ffd790b06f561290239ef3b7a5239ba755f10", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \t@Test \tpublic void shouldFailWithHelpfulMessageForProtectedClassRule() throws Exception", "signatureAfterChange": "  \t@Test \tpublic void failWithHelpfulMessageForProtectedClassRule()", "diff": ["-\t", "-\t@Test", "-\tpublic void shouldFailWithHelpfulMessageForProtectedClassRule() throws Exception {", "-\t\tJUnitCore junitCore= new JUnitCore();", "-\t\tRequest request= Request.aClass(TestWithProtectedClassRule.class);", "-\t\tResult result= junitCore.run(request);", "-\t\tassertThat(result.getFailureCount(), is(1));", "-\t\tassertThat(result.getFailures().get(0).getMessage(), is(equalTo(\"The TestRule 'x' is not public.\")));", "-\t}", "+\t@Test", "+\tpublic void failWithHelpfulMessageForProtectedClassRule() {", "+\t\tassertClassHasFailureMessage(TestWithProtectedClassRule.class,", "+\t\t\t\t\"The TestRule 'temporaryFolder' must be public.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2a9367df9f28f4f1fcfc56359e35076", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java", "commitBeforeChange": "ff7c54f564eac489de1aef062ff0048c128e1c4f", "commitAfterChange": "b23ffd790b06f561290239ef3b7a5239ba755f10", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \t@Test \tpublic void shouldFailWithHelpfulMessageForNonStaticClassRule() throws Exception", "signatureAfterChange": "  \tprivate void assertClassHasFailureMessage(Class<?> klass, String message)", "diff": ["-\tpublic void shouldFailWithHelpfulMessageForNonStaticClassRule() throws Exception {", "-\t\tJUnitCore junitCore= new JUnitCore();", "-\t\tRequest request= Request.aClass(TestWithNonStaticClassRule.class);", "-\t\tResult result= junitCore.run(request);", "-\t\tassertThat(result.getFailureCount(), is(1));", "-\t\tassertThat(result.getFailures().get(0).getMessage(), is(equalTo(\"The TestRule 'x' is not static.\")));", "+\tprivate void assertClassHasFailureMessage(Class<?> klass, String message) {", "+\t\tJUnitCore junitCore= new JUnitCore();", "+\t\tRequest request= Request.aClass(klass);", "+\t\tResult result= junitCore.run(request);", "+\t\tassertThat(result.getFailureCount(), is(2)); //the second failure is no runnable methods", "+\t\tassertThat(result.getFailures().get(0).getMessage(),", "+\t\t\t\tis(equalTo(message)));"]}]}