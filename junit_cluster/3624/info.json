{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea972ed8eb0390a6941acbeb7f3901fd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "683bed841a1457412e54734e078ab71a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "b5573b70809bed76a0397bb5bb196b6b2144d3d4", "commitAfterChange": "356a069f8cbbad2a368fdbc6ceee4e94200e7140", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprivate void addToAnnotationLists(FrameworkMethod testMethod)", "signatureAfterChange": " \tprivate <T extends FrameworkMember<T>> void addToAnnotationLists(T member, Map<Class<?>, List<T>> map)", "diff": ["-\tprivate void addToAnnotationLists(FrameworkMethod testMethod) {", "-\t\tfor (Annotation each : computeAnnotations(testMethod))", "-\t\t\taddToAnnotationList(each.annotationType(), testMethod);", "+\t// TODO (May 25, 2009 9:46:48 PM): move to FrameworkMember", "+\tprivate <T extends FrameworkMember<T>> void addToAnnotationLists(T member, Map<Class<?>, List<T>> map) {", "+\t\tfor (Annotation each : member.getAnnotations()) {", "+\t\t\tClass<? extends Annotation> type= each.annotationType();", "+\t\t\tList<T> members= map.get(type);", "+\t\t\tif (isShadowedBy(member, members))", "+\t\t\t\treturn;", "+\t\t\tif (runsTopToBottom(type))", "+\t\t\t\tmembers.add(0, member);", "+\t\t\telse", "+\t\t\t\tmembers.add(member);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aecd52127c65602d8bf3529b6a56b43a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "a2bf97027581ae4da52a3905642cae3331623808", "commitAfterChange": "bbcb8f416628bc168a2ed8353a30b4e9647abf6f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprivate void addToAnnotationLists(FrameworkMethod testMethod)", "signatureAfterChange": " \tprivate <T extends FrameworkMember<T>> void addToAnnotationLists(T member, Map<Class<?>, List<T>> map)", "diff": ["-\tprivate void addToAnnotationLists(FrameworkMethod testMethod) {", "-\t\tfor (Annotation each : computeAnnotations(testMethod))", "-\t\t\taddToAnnotationList(each.annotationType(), testMethod);", "+\t// TODO (May 25, 2009 9:46:48 PM): move to FrameworkMember", "+\tprivate <T extends FrameworkMember<T>> void addToAnnotationLists(T member, Map<Class<?>, List<T>> map) {", "+\t\tfor (Annotation each : member.getAnnotations()) {", "+\t\t\tClass<? extends Annotation> type= each.annotationType();", "+\t\t\tList<T> members= map.get(type);", "+\t\t\tif (isShadowedBy(member, members))", "+\t\t\t\treturn;", "+\t\t\tif (runsTopToBottom(type))", "+\t\t\t\tmembers.add(0, member);", "+\t\t\telse", "+\t\t\t\tmembers.add(member);", "+\t\t}"]}]}