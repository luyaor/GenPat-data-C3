{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e07bf145f71ecd26217113236bc6708", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d2237a2d3aa720f2aa68a72a95c344e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "74fe490cc074f8be3cee760aac3f8e313698db82", "commitAfterChange": "5b5a17d3c50bf5e96f4baff2aa061ba039511048", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tprotected List<MethodRule> rules(Object test)", "signatureAfterChange": " \tprotected List<MethodRule> rules(Object test)", "diff": ["-\t\t\tif (MethodRule.class.isAssignableFrom(each.getField().getType())) {", "+\t\t\tif (MethodRule.class.isAssignableFrom(each.getType())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a16076ac76c9a04ecbda9baca274b9d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "8313ec5081733230050540899d6047a02d5fb745", "commitAfterChange": "01716157f2683f5610d721929a687e7dc3aee558", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tprotected List<MethodRule> rules(Object test)", "signatureAfterChange": " \tprotected List<MethodRule> rules(Object test)", "diff": ["-\t\t\tif (MethodRule.class.isAssignableFrom(each.getField().getType())) {", "+\t\t\tif (MethodRule.class.isAssignableFrom(each.getType())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f30910a85c27f396f61c0842e5be4de", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "56b1d5d4342c13151ae2d4b3f9aca146732cfb42", "commitAfterChange": "0815c4d619b177431e64a2485baa0f746f3e2886", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprivate void validateRuleField(Field field, List<Throwable> errors)", "signatureAfterChange": "  \tprivate void validateRuleField(Field field, List<Throwable> errors)", "diff": ["-\t\tif (!MethodRule.class.isAssignableFrom(field.getType()))", "+\t\tClass<?> type= field.getType();", "+\t\tif (!(MethodRule.class.isAssignableFrom(type) || ", "+\t\t\t\tTestRule.class.isAssignableFrom(type)))"]}]}