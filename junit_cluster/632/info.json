{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7268c5868218c295bc0c6acc99eb43ad", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08364dc341b563bd5bb6df552b2d1cec", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tprivate void assertNoDescendantsHaveCategoryAnnotations(Description description) throws InitializationError", "signatureAfterChange": "      private void assertNoDescendantsHaveCategoryAnnotations(Description description) throws InitializationError", "diff": ["-\t", "-\tprivate void assertNoDescendantsHaveCategoryAnnotations(Description description) throws InitializationError {\t\t\t", "-\t\tfor (Description each : description.getChildren()) {", "-\t\t\tif (each.getAnnotation(Category.class) != null)", "-\t\t\t\tthrow new InitializationError(\"Category annotations on Parameterized classes are not supported on individual methods.\");", "-\t\t\tassertNoDescendantsHaveCategoryAnnotations(each);", "-\t\t}", "-\t}", "+", "+    private void assertNoDescendantsHaveCategoryAnnotations(Description description) throws InitializationError {", "+        for (Description each : description.getChildren()) {", "+            if (each.getAnnotation(Category.class) != null) {", "+                throw new InitializationError(\"Category annotations on Parameterized classes are not supported on individual methods.\");", "+            }", "+            assertNoDescendantsHaveCategoryAnnotations(each);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf7d319fd85353383cccccc06e0a8435", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t\tprivate Description parentDescription(Description description)", "signatureAfterChange": "          private Description parentDescription(Description description)", "diff": ["-\t\tprivate Description parentDescription(Description description) {", "-\t\t\tClass<?> testClass= description.getTestClass();", "-\t\t\tif (testClass == null)", "-\t\t\t\treturn null;", "-\t\t\treturn Description.createSuiteDescription(testClass);", "-\t\t}", "+        private Description parentDescription(Description description) {", "+            Class<?> testClass = description.getTestClass();", "+            if (testClass == null) {", "+                return null;", "+            }", "+            return Description.createSuiteDescription(testClass);", "+        }"]}]}