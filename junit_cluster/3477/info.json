{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09caba2c155b615a8bfbb413ecee8020", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "776d2d1a7452483cb7473e2dbe3e6186", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "         @Override public String toString()", "signatureAfterChange": "         @Override public String toString()", "diff": ["-                .append(fIncluded.isEmpty() ? \"[all]\" : fIncluded);", "-            if (!fExcluded.isEmpty()) {", "-                description.append(\" - \").append(fExcluded);", "+                .append(included.isEmpty() ? \"[all]\" : included);", "+            if (!excluded.isEmpty()) {", "+                description.append(\" - \").append(excluded);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab0ec887ad89101c35cf1509e307d1ea", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "          protected CategoryFilter(boolean matchAnyIncludes, Set<Class<?>> includes,                                boolean matchAnyExcludes, Set<Class<?>> excludes)", "signatureAfterChange": "          protected CategoryFilter(boolean matchAnyIncludes, Set<Class<?>> includes,                                boolean matchAnyExcludes, Set<Class<?>> excludes)", "diff": ["-            fIncludedAny= matchAnyIncludes;", "-            fExcludedAny= matchAnyExcludes;", "-            fIncluded= copyAndRefine(includes);", "-            fExcluded= copyAndRefine(excludes);", "+            includedAny = matchAnyIncludes;", "+            excludedAny = matchAnyExcludes;", "+            included = copyAndRefine(includes);", "+            excluded = copyAndRefine(excludes);"]}]}