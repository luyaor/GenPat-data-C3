{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "391ae076a3fbe55d5c3cb16b3890d9cc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "076769cc301ebf576e708858745fd122", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "412519b20d4cb96466c03466fa003068e9fb5eca", "commitAfterChange": "8e3f361443ddf8bca21c3db661c75d374fe78dba", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \t@Override \tprotected void runChild(FrameworkMethod method, RunNotifier notifier)", "signatureAfterChange": " \t \t@Override \tprotected void runChild(FrameworkMethod method, RunNotifier notifier)", "diff": ["-\t\tDescription description= describeChild(method);", "-\t\tEachTestNotifier eachNotifier= new EachTestNotifier(notifier,", "-\t\t\t\tdescription);", "-\t\tnotifying(method, childBlock(method)).run(eachNotifier);", "+\t\tEachTestNotifier eachNotifier= makeNotifier(method, notifier);", "+\t\tif (method.isIgnored()) {", "+\t\t\teachNotifier.fireTestIgnored();", "+\t\t\treturn;", "+\t\t}", "+\t\t", "+\t\teachNotifier.fireTestStarted();", "+\t\ttry {", "+\t\t\tchildBlock(method).evaluate();", "+\t\t} catch (AssumptionViolatedException e) {", "+\t\t\teachNotifier.fireTestIgnored();", "+\t\t} catch (Throwable e) {", "+\t\t\teachNotifier.addFailure(e);", "+\t\t} finally {", "+\t\t\teachNotifier.fireTestFinished();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cdead10b961924eb6110fc4205a551c", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 50, "signatureBeforeChange": " \t \tprotected JTextArea createTraceArea()", "signatureAfterChange": "  \tTestCollector createTestCollector()", "diff": ["-\t", "-\tprotected JTextArea createTraceArea() {", "-\t\tJTextArea area= new JTextArea();", "-\t\tarea.setRows(5);", "-\t\tarea.setTabSize(0);", "-\t\tarea.setEditable(false);", "-\t\treturn area;", "+", "+\tTestCollector createTestCollector() {", "+\t\tString className= BaseTestRunner.getPreference(TESTCOLLECTOR_KEY);", "+\t\tif (className != null) {\t\t\t", "+\t\t\tClass collectorClass= null;", "+\t\t\ttry {", "+\t\t\t\tcollectorClass= Class.forName(className);", "+\t\t\t\treturn (TestCollector)collectorClass.newInstance();", "+\t\t\t} catch(Exception e) {", "+\t\t\t\tJOptionPane.showMessageDialog(fFrame, \"Could not create TestCollector - using default collector\");", "+\t\t\t}", "+\t\t}", "+\t\treturn new LoadingClassPathTestCollector();"]}]}