{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ab0950a0faf7e249718e7c7bd731e6c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04275a7d1089e4606c2da07d1b5d9667", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/TemporaryFolderUsageTest.java", "commitBeforeChange": "2d3090bf96357c0d9387a4e8f87525f776e52799", "commitAfterChange": "6f8a359dde5b1e317f0bab2da3ac2b5bce117884", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \t@Test \tpublic void newNestedFoldersCreatedUnderRootFolder() throws IOException", "signatureAfterChange": "  \t@Test \tpublic void newNestedFoldersCreatedUnderRootFolder() throws IOException", "diff": ["-\t\tassertFileExists(\"Nested folder\", f);", "-\t\tassertParentFolderForFileIs(\"bottom\", f, new File(tempFolder.getRoot(),", "+\t\tassertFileExists(f);", "+\t\tassertParentFolderForFileIs(f, new File(tempFolder.getRoot(),", "-\t\tassertParentFolderForFileIs(\"middle\", f.getParentFile(), new File(", "-\t\t\t\ttempFolder.getRoot(), \"top\"));", "+\t\tassertParentFolderForFileIs(f.getParentFile(),", "+\t\t\t\tnew File(tempFolder.getRoot(), \"top\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ea05f8e6735034d03f08bca3b34173e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/TemporaryFolderUsageTest.java", "commitBeforeChange": "2d3090bf96357c0d9387a4e8f87525f776e52799", "commitAfterChange": "6f8a359dde5b1e317f0bab2da3ac2b5bce117884", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tprivate void assertParentFolderForFileIs(String msg, File f, \t\t\tFile parentFolder)", "signatureAfterChange": "  \tprivate void assertParentFolderForFileIs(File f, File parentFolder)", "diff": ["-", "-\tprivate void assertParentFolderForFileIs(String msg, File f,", "-\t\t\tFile parentFolder) {", "-\t\tassertThat(msg + \": not under root\", f.getParentFile(),", "-\t\t\t\tis(parentFolder));", "+", "+\tprivate void assertParentFolderForFileIs(File f, File parentFolder) {", "+\t\tassertThat(\"'\" + f.getAbsolutePath() + \"': not under root\",", "+\t\t\t\tf.getParentFile(), is(parentFolder));", "+\t}"]}]}