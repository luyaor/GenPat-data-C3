{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c173f30f13d84c16bb1ff42a6359654f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26ba02efa2184d9d3f593956f1b553b5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "126b8eb8d9e550bfe3bbb03ff92b047172d928bb", "commitAfterChange": "53929101b4d9606d92dfd8d52e87f5dda467d51a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t\t@Override \t\tpublic void evaluate() throws Throwable", "signatureAfterChange": "  \t\t@Override \t\tpublic void evaluate() throws Throwable", "diff": ["-\t\t\t\ttry {", "-\t\t\t\t\tAssert.assertThat(e, fMatcher);", "-\t\t\t\t} catch (AssertionError ae) {", "-\t\t\t\t\t// add e as cause to have a complete error message in the", "-\t\t\t\t\t// results", "-\t\t\t\t\tae.initCause(e);", "-\t\t\t\t\tthrow ae;", "-\t\t\t\t}", "+", "+\t\t\t\tAssert.assertThat(e, fMatcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f4a4ce3e80374e23ebea6b94428fdb3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "34dd9f4e2bebbcf694dcb855a29edff9243a10d3", "commitAfterChange": "d9c81356e3a2fbb165c71b32d63d0cc39a1bd861", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic Class<?> parseClass()", "signatureAfterChange": " \tpublic Class<?> getTestClass()", "diff": ["-\t// This seems like reasonable API once we \"Composite-ize\" Description", "-\tpublic Class<?> parseClass() {", "+\t// TODO javadoc", "+\tpublic Class<?> getTestClass() {", "-\t\t\t\t// TODO (Nov 18, 2008 1:54:36 PM): something better", "-\t\t\te.printStackTrace();"]}]}