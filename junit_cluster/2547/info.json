{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a3f119a94d38499e2db511cb4d74c19", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b87b9d9a27653611bfc278264a54d1ba", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/TextRunnerTest.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tvoid execTest(String testClass, int expected) throws Exception", "signatureAfterChange": " \t \tvoid execTest(String testClass, boolean success) throws Exception", "diff": ["-\tvoid execTest(String testClass, int expected) throws Exception {", "+\tvoid execTest(String testClass, boolean success) throws Exception {", "-\t\tString [] cmd= { java, \"-cp\", cp, \"junit.textui.TestRunner\", testClass}; ", "+\t\t//use -classpath for JDK 1.1.7 compatibility", "+\t\tString [] cmd= { java, \"-classpath\", cp, \"junit.textui.TestRunner\", testClass}; ", "-\t\tint rc= p.waitFor();", "-\t\tassertEquals(expected, rc);", "+\t\tassert((p.waitFor() == 0) == success);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7284aa0464143f89ed1ec643e396b14", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "b294a12beffb7952de6aef3198d47f7cd08486d7", "commitAfterChange": "fa6483264ce2530585b374c276c2266d0d0c4ef0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \t@Ignore \t@Test public void junit3TestsAreOnlyIncludedOnceWhenExpandingForSorting() throws Exception", "signatureAfterChange": " \t \t@Test public void saffSqueezeExample() throws Exception", "diff": ["-\t@Test public void junit3TestsAreOnlyIncludedOnceWhenExpandingForSorting() throws Exception {", "+\t@Test public void saffSqueezeExample() throws Exception {", "+\t\tfinal Description method= Description.createTestDescription(TwoOldTests.class, \"testOne\");", "+\t\tFilter filter= Filter.matchDescription(method);", "+\t\tJUnit38ClassRunner child= new JUnit38ClassRunner(TwoOldTests.class);", "+\t\tchild.filter(filter);", "+\t\tassertEquals(1, child.testCount());", "+\t}"]}]}