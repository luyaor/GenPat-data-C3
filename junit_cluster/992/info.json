{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1996f45ad18ad9d59547b66f22be3324", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e41bd6d7f1f61fa29d1dd84d660fae4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "4d6f0702dae590809b808230f027a60aa0a4a345", "commitAfterChange": "ad5971c88fb501f007cf1a75200349fb7cbb4b25", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t\t@Override \t\tpublic void runChild(final T child, final RunNotifier notifier)", "signatureAfterChange": "  \t\t\tpublic void runChild(final SafeStatement statement)", "diff": ["+", "+\t\t\tpublic void runChild(final SafeStatement statement) {", "+\t\t\t\tfResults.add(fService.submit(new Callable<Object>() {", "+\t\t\t\t\tpublic Object call() throws Exception {", "+\t\t\t\t\t\tstatement.execute();", "+\t\t\t\t\t\treturn null;", "+\t\t\t\t\t}", "+\t\t\t\t}));", "+\t\t\t}", "-", "-\t\t@Override", "-\t\tpublic void runChild(final T child, final RunNotifier notifier) {", "-\t\t\tfResults.add(fService.submit(new Callable<Object>() {", "-\t\t\t\tpublic Object call() throws Exception {", "-\t\t\t\t\tfDelegate.internalRunChild(child, notifier);", "-\t\t\t\t\treturn null;", "-\t\t\t\t}", "-\t\t\t}));", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9650417e166ccc9bea3197ce6e2d2697", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "8435a2a04e66546490344a028052f648b5f9f213", "commitAfterChange": "13bda470bfa1fe989ce80d616fb096af1b937146", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t\t@Override \t\tpublic void runChild(final T child, final RunNotifier notifier)", "signatureAfterChange": "  \t\t\tpublic void runChild(final SafeStatement statement)", "diff": ["+", "+\t\t\tpublic void runChild(final SafeStatement statement) {", "+\t\t\t\tfResults.add(fService.submit(new Callable<Object>() {", "+\t\t\t\t\tpublic Object call() throws Exception {", "+\t\t\t\t\t\tstatement.execute();", "+\t\t\t\t\t\treturn null;", "+\t\t\t\t\t}", "+\t\t\t\t}));", "+\t\t\t}", "-", "-\t\t@Override", "-\t\tpublic void runChild(final T child, final RunNotifier notifier) {", "-\t\t\tfResults.add(fService.submit(new Callable<Object>() {", "-\t\t\t\tpublic Object call() throws Exception {", "-\t\t\t\t\tfDelegate.internalRunChild(child, notifier);", "-\t\t\t\t\treturn null;", "-\t\t\t\t}", "-\t\t\t}));", "-\t\t}"]}]}