{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0cd849c4d4d7a094ec23471168845f7c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0def3e4ff0641b0f1a50259a2f690d1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "b8adef37033aa4177453362d24b3f2ecb7031c59", "commitAfterChange": "043e82844ef2c3c0961d98a34771c84f7a950d1a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private void addFields(ParameterSignature sig,             List<PotentialAssignment> list)", "signatureAfterChange": "      private void addFields(ParameterSignature sig,             List<PotentialAssignment> list)", "diff": ["-        for (final Field field : fClass.getJavaClass().getFields()) {", "-            if (Modifier.isStatic(field.getModifiers())) {", "-                Class<?> type = field.getType();", "-                if (sig.canAcceptArrayType(type)", "-                        && field.getAnnotation(DataPoints.class) != null) {", "-                    try {", "-                        addArrayValues(field.getName(), list, getStaticFieldValue(field));", "-                    } catch (Throwable e) {", "-                        // ignore and move on", "-                    }", "-                } else if (sig.canAcceptType(type)", "-                        && field.getAnnotation(DataPoint.class) != null) {", "-                    list.add(PotentialAssignment", "-                            .forValue(field.getName(), getStaticFieldValue(field)));", "+        for (final Field field : getDataPointsFields(sig)) {", "+            Class<?> type = field.getType();", "+            if (sig.canAcceptArrayType(type)) {", "+                try {", "+                    addArrayValues(field.getName(), list, getStaticFieldValue(field));", "+                } catch (Throwable e) {", "+                    // ignore and move on", "+            }", "+        }", "+        for (final Field field : getSingleDataPointFields(sig)) {", "+            Class<?> type = field.getType();", "+            if (sig.canAcceptType(type)) {", "+                list.add(PotentialAssignment.forValue(field.getName(), getStaticFieldValue(field)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe35cf94f631ecaf437cdfb008b5fedd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "e07e59eb9d24f6e4fa85dd99f311c1feca6ea983", "commitAfterChange": "5d957024be0d1b181879d48b7915b3b8aad8f5d5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tprotected void collectInitializationErrors(List<Throwable> errors)", "signatureAfterChange": "  \t@Override \tprotected void collectInitializationErrors(List<Throwable> errors)", "diff": ["+\t\tsuper.collectInitializationErrors(errors);", "+\t\tvalidateDataPointFields(errors);", "+\t\t// TODO: validate theory methods", "+\t}"]}]}