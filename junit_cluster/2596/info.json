{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "265ab7ba714c69a3b3d582b68fa8a145", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84c5c8a21915ff26d3716bc45e7a6d4a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "1963b424c176742b711fb4226ce8f314d431813c", "commitAfterChange": "0030e51f286ed52ad4c2c44857c4a28525c83f93", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private ParameterSupplier getSupplier(ParameterSignature unassigned)             throws ReflectiveOperationException", "signatureAfterChange": "      private ParameterSupplier getSupplier(ParameterSignature unassigned)             throws ReflectiveOperationException", "diff": ["-        ParameterSupplier supplier = getAnnotatedSupplier(unassigned);", "-        if (supplier != null) {", "-            return supplier;", "-        }", "-", "-        return new AllMembersSupplier(fClass);", "-    }", "+        ", "+            return new AllMembersSupplier(fClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3a2dfc133626d1dc141809f6d08f4b6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "d96a05f8d33ed781c701c58dd285bf6464112719", "commitAfterChange": "1e55e32ba3dab864b20e9c162c5b421f99a11c6d", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     @Deprecated     protected Statement withPotentialTimeout(FrameworkMethod method,             Object test, Statement next)", "signatureAfterChange": "     @Deprecated     protected Statement withPotentialTimeout(FrameworkMethod method,             Object test, Statement next)", "diff": ["-        return timeout > 0 ? new FailOnTimeout(next, timeout) : next;", "+        if (timeout <= 0) {", "+            return next;", "+        }", "+        return FailOnTimeout.builder()", "+               .withTimeout(timeout, TimeUnit.MILLISECONDS)", "+               .build(next);"]}]}