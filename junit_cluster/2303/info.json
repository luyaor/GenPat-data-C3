{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af1b93ba42734c1de4c08a47075539fc", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d2a37b31564cab0fecacef6f3570357", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/AssumingInTheoriesTest.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "2ade5fd3aad123d6507b59ed5d48c8f030314f00", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Test \tpublic void theoryMeansOnlyAssumeShouldFail() throws InitializationError", "signatureAfterChange": "      @Test     public void theoryMeansOnlyAssumeShouldFail() throws InitializationError", "diff": ["-\t@Test", "-\tpublic void theoryMeansOnlyAssumeShouldFail() throws InitializationError {", "-\t\tJUnitCore junitRunner = new JUnitCore();", "-\t\tRunner theoryRunner = new Theories(TheoryWithNoUnassumedParameters.class);", "-\t\tRequest request = Request.runner(theoryRunner);", "-\t\tResult result = junitRunner.run(request);", "-\t\tAssert.assertEquals(1, result.getFailureCount());", "-\t}", "+    @Test", "+    public void theoryMeansOnlyAssumeShouldFail() throws InitializationError {", "+        Result result = runTheoryClass(TheoryWithNoUnassumedParameters.class);", "+        Assert.assertEquals(1, result.getFailureCount());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5b6a5c843841ae6d791bdb05349f68b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/AssumingInTheoriesTest.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Test \tpublic void theoryMeansOnlyAssumeShouldFail() throws InitializationError", "signatureAfterChange": "  \t@Test \tpublic void theoryMeansOnlyAssumeShouldFail() throws InitializationError", "diff": ["-\t\tJUnitCore junitRunner = new JUnitCore();", "-\t\tRunner theoryRunner = new Theories(TheoryWithNoUnassumedParameters.class);", "-\t\tRequest request = Request.runner(theoryRunner);", "-\t\tResult result = junitRunner.run(request);", "+\t\tResult result = runTheoryClass(TheoryWithNoUnassumedParameters.class);"]}]}