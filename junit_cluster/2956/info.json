{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f2668a1fb860346e9527a4433067929", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "530d320c73a3a7b08332423514183bff", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/ParameterSignature.java", "commitBeforeChange": "149ecd4dcd99697710aa350e9cd3b3bcac877125", "commitAfterChange": "787ed4e5bc2b68e8b5cdb6190ff1fc053f1a5b13", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic ParametersSuppliedBy getSupplier(Annotation annotation)", "signatureAfterChange": "  \tpublic boolean hasAnnotation(Class<? extends Annotation> type)", "diff": ["-", "-\tpublic ParametersSuppliedBy getSupplier(Annotation annotation) {", "-\t\treturn annotation.annotationType().getAnnotation(", "-\t\t\t\tParametersSuppliedBy.class);", "-\t}", "+", "+\tpublic boolean hasAnnotation(Class<? extends Annotation> type) {", "+\t\treturn getAnnotation(type) != null;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b87b9d9a27653611bfc278264a54d1ba", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/TextRunnerTest.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tvoid execTest(String testClass, int expected) throws Exception", "signatureAfterChange": " \t \tvoid execTest(String testClass, boolean success) throws Exception", "diff": ["-\tvoid execTest(String testClass, int expected) throws Exception {", "+\tvoid execTest(String testClass, boolean success) throws Exception {", "-\t\tString [] cmd= { java, \"-cp\", cp, \"junit.textui.TestRunner\", testClass}; ", "+\t\t//use -classpath for JDK 1.1.7 compatibility", "+\t\tString [] cmd= { java, \"-classpath\", cp, \"junit.textui.TestRunner\", testClass}; ", "-\t\tint rc= p.waitFor();", "-\t\tassertEquals(expected, rc);", "+\t\tassert((p.waitFor() == 0) == success);"]}]}