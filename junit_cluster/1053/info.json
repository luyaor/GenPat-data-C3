{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e1da4dcac4e496f0b562af34db22fb2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "357edd9a0f9a69494a273535614f4244", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/framework/TestCase.java", "commitBeforeChange": "0be4c31f80dc38ddf8decbc8d6d13bd23d3ae8b1", "commitAfterChange": "1ebb01554a9ec2b5b2c83e7331efb80c7fda3222", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic String toString()", "signatureAfterChange": " \tpublic String toString()", "diff": ["+\t    return getDisplayName();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64a87f11ef0e41ea8ccd8249f97e7bf3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "63743d52743cfdb104c38aabec192c8c86fadae0", "commitAfterChange": "1d97da73fdafce8f5cf9d722f23c5cba41b26b70", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected void collectInitializationErrors(List<Throwable> errors)", "signatureAfterChange": "     protected void collectInitializationErrors(List<Throwable> errors)", "diff": ["-        errors.addAll(fAnnotationsValidator.validateTestClass(getTestClass()));", "+        applyValidators(errors);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7925a2b271103e73b233f282c53debaa", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/methods/AnnotationTest.java", "commitBeforeChange": "1489b8e7d87f6948f8c5c95487bdd1d8377232c0", "commitAfterChange": "2d886e29734f9f55b75db91095880c5d109ff678", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \t \tpublic void testTestAndTeardownFailure() throws Exception", "signatureAfterChange": " \t \tpublic void testTestAndTeardownFailure() throws Exception", "diff": ["-\t\tassertThat(", "-\t\t\t\trunner.getFailures().toString(),", "-\t\t\t\tCoreMatchers.<String> both(containsString(\"hereAfter\")).and(", "-\t\t\t\t\t\tcontainsString(\"inTest\")));", "+\t\tassertThat(runner.getFailures().toString(), allOf(containsString(\"hereAfter\"), containsString(\"inTest\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bb10111a9ccc1ac9aae02420a8a86ff", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "fcf34a36ee94cde6a5d9157a472ca65a465756ac", "commitAfterChange": "01b427b3b89ce04d01f0ddbd746d13a175feec5b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \t@Override \tpublic boolean equals(Object obj)", "signatureAfterChange": "  \t@Override \tpublic boolean equals(Object obj)", "diff": ["-\t\treturn getDisplayName().equals(d.getDisplayName())", "-\t\t\t\t&& getChildren().equals(d.getChildren());", "+\t\treturn getDisplayName().equals(d.getDisplayName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9595f332056e2eb374a921ee48088d8e", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/internal/runners/TestIntrospector.java", "commitBeforeChange": "1a3b19c3609c0a1be7624ddce2ac69a1de79f779", "commitAfterChange": "a04c2a15112b426fcb86f8111b66d69c6d8e5a2f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate boolean isShadowed(Method method, List<Method> results)", "signatureAfterChange": " \t \tprivate boolean isShadowed(Method method, List<Method> results)", "diff": ["-\t\t\tif (each.getName().equals(method.getName()))", "+\t\t\tif (isShadowed(method, each))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9945e65660b0bab06555e86c9126f1d6", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/runner/BaseTestRunner.java", "commitBeforeChange": "1e752dcb0a967bcb47fae4b12fb8765e79571e69", "commitAfterChange": "bfc94ee739d62127c7477300b26127bd560765a1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic TestSuiteLoader getLoader()", "signatureAfterChange": " \tpublic TestSuiteLoader getLoader()", "diff": ["-\t\tif (getPreference(\"loading\").equals(\"true\") && !inVAJava() && fLoading)", "+\t\tif (useReoadingTestSuiteLoader())", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab15467f234a562db4d1af44edc3d21c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "19b0d51f397571ee8ab7810521718e555b520f4a", "commitAfterChange": "5f25ca318bc2b35ecf8526c08a1e3b3e17d375da", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \t@SuppressWarnings(\"deprecation\") \tprivate boolean isMethodRule(Class<?> type)", "signatureAfterChange": "  \t@SuppressWarnings(\"deprecation\") \tprivate boolean isMethodRule(Class<?> type)", "diff": ["-\t\treturn org.junit.rules.MethodRule.class.isAssignableFrom(type);", "+\t\treturn MethodRule.class.isAssignableFrom(type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8a32b685118a0defc05fc8e511390ae", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java", "commitBeforeChange": "eaa8d51a642df066faaa8f3c33020889fd0b758c", "commitAfterChange": "ab9caa3650a262ef4399cfd7f0d7fdc366d6e327", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \t@Test \tpublic void dataPointsMustBePublic()", "signatureAfterChange": "  \t@Test \tpublic void dataPointsMustBePublic()", "diff": ["-\t\t\t\tboth(failureCountIs(3))", "-\t\t\t\t\t\t.and(", "-\t\t\t\t\t\t\t\thasFailureContaining(\"DataPoint field THREE must be public\"))", "-\t\t\t\t\t\t.and(", "-\t\t\t\t\t\t\t\thasFailureContaining(\"DataPoint field FOUR must be public\"))", "-\t\t\t\t\t\t.and(", "-\t\t\t\t\t\t\t\thasFailureContaining(\"DataPoint field FIVE must be public\")));", "+\t\t\t\tallOf(failureCountIs(3),", "+\t\t\t\t\t\thasFailureContaining(\"DataPoint field THREE must be public\"),", "+\t\t\t\t\t\thasFailureContaining(\"DataPoint field FOUR must be public\"),", "+\t\t\t\t\t\thasFailureContaining(\"DataPoint field FIVE must be public\")));"]}]}