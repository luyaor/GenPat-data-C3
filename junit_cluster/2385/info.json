{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b2d783735b0a36d38dfe5ef54ff3bc0e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "998bca83900a0877ee3e5137648d52e2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestClass.java", "commitBeforeChange": "59b1e2926cdebfd257c6c091ee2bd478d8aa04d2", "commitAfterChange": "4e1018a940699a38673b1861977110e6b558afb1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void runProtected(RunNotifier notifier, Description description, Runnable runnable)", "signatureAfterChange": "  \tpublic void runProtected(RunNotifier notifier, Description description, \t\t\tStatement runnable)", "diff": ["-\tpublic void runProtected(RunNotifier notifier, Description description, Runnable runnable) {", "-\t\t// TODO: (Oct 8, 2007 1:02:02 PM) instead of this, have a runChildren overridable method in JUnit4ClassRunner", "-\t\tEachTestNotifier testNotifier= new EachTestNotifier(notifier, description);", "+\tpublic void runProtected(RunNotifier notifier, Description description,", "+\t\t\tStatement runnable) {", "+\t\t// TODO: (Oct 8, 2007 1:02:02 PM) instead of this, have a runChildren", "+\t\t// overridable method in JUnit4ClassRunner", "+\t\tEachTestNotifier testNotifier= new EachTestNotifier(notifier,", "+\t\t\t\tdescription);", "-\t\t\trunProtected(testNotifier, runnable, null);", "-\t\t} catch (AssumptionViolatedException e) {", "-\t\t\t// TODO: (Oct 12, 2007 10:21:33 AM) DUP with other ignorings should use Statements", "+\t\t\tStatement statement= new RunBefores(runnable, this, null);", "+\t\t\tstatement= new IgnoreViolatedAssumptions(statement);", "+\t\t\tstatement= new RunAfters(statement, this, null);", "+\t\t\tstatement.evaluate();", "-\t\t\t// TODO: (Oct 12, 2007 10:26:35 AM) DUP ", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4fe2f5b6a2a07b60d55657cca299194", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/ProgressBar.java", "commitBeforeChange": "b6a023c447628100c104708666eddd0b2eaa41d3", "commitAfterChange": "86b71cb1b9784a9b87c86b4f3f12632ae6773d1f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic int scale(int value)", "signatureAfterChange": " \t \tpublic void step(int value, boolean successful)", "diff": ["-\t", "-\tpublic int scale(int value) {", "-\t\tif (fTotal > 0)", "-\t\t\treturn Math.max(1, value*(getBounds().width-1)/fTotal);", "-\t\treturn value; ", "-\t}", "+\tpublic void step(int value, boolean successful) {", "+\t\tsetValue(value);", "+\t\t\tsetForeground(getStatusColor());"]}]}