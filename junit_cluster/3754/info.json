{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "715dbed63a281ed985cdc1d2a054881e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "162913d13d7e609720f6a6bf4d9003a7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/JUnitCommandLineParserTest.java", "commitBeforeChange": "b5084eb51ffdb2a3bd9bed7294afc941a733a693", "commitAfterChange": "c85a267605d4484121afeccef972a7266481ee7c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \r     @Test\r     public void shouldCreateFailureUponUnknownOption() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldCreateFailureUponUnknownOption() throws Exception", "diff": ["-        assertThat(description.toString(), allOf(\r", "-                containsString(\"initializationError:\"),\r", "-                containsString(JUnitCommandLineParser.CommandLineParserError.class.getName()),\r", "-                containsString(unknownOption)));\r", "+        assertThat(description.toString(), containsString(\"initializationError:\"));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c494f465a6d98166b31a43a92149fd49", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/JUnitCommandLineParserTest.java", "commitBeforeChange": "b5084eb51ffdb2a3bd9bed7294afc941a733a693", "commitAfterChange": "c85a267605d4484121afeccef972a7266481ee7c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r     @Test\r     public void shouldCreateFailureUponUnfoundFilterFactory() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldCreateFailureUponUnfoundFilterFactory() throws Exception", "diff": ["-        assertThat(description.toString(), allOf(\r", "-                containsString(\"initializationError:\"),\r", "-                containsString(FilterFactories.FilterFactoryNotCreatedException.class.getName()),\r", "-                containsString(nonExistentFilterFactory)));\r", "+        assertThat(description.toString(), containsString(\"initializationError:\"));\r"]}]}