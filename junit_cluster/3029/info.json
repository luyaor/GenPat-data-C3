{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96e504e46c6407f695ec2f1c5e45ee76", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ca4c7f6798a4060b633b610c2e7f7dd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/validator/CategoryValidator.java", "commitBeforeChange": "9cf5b64d8dbbb064fed3d4ee88eced2b6a7d50fe", "commitAfterChange": "bae4bd80513360c5e884e760447000d9c96ffd72", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void validateAnnotatedMethod(Method method, List<Throwable> errors)", "signatureAfterChange": "     @Override     public void validateAnnotatedMethod(Method method, List<Throwable> errors)", "diff": ["+    @Override", "-        final Set<Class<?>> incompatibleAnnotations = buildIncompatibleAnnotationsSet();", "-", "-            for (Class clazz : incompatibleAnnotations) {", "+            for (Class clazz : fIncompatibleAnnotations) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "def797ae4c827ff8c95f765bc6f2d67b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "cc6e2c090f1b5c294b7aca4ee8252c6db2347eca", "commitAfterChange": "d0cd805df54673c2d1376c58bcee23b6e32fb4ee", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private static <T> List<T> getAnnotatedMembers(Map<Class<?>, List<T>> map,             Class<? extends Annotation> type, boolean canFill)", "signatureAfterChange": "      private static <T> List<T> getAnnotatedMembers(Map<Class<?>, List<T>> map,             Class<? extends Annotation> type, boolean fillIfAbsent)", "diff": ["-            Class<? extends Annotation> type, boolean canFill) {", "-        if (!map.containsKey(type) && canFill) {", "+            Class<? extends Annotation> type, boolean fillIfAbsent) {", "+        if (!map.containsKey(type) && fillIfAbsent) {"]}]}