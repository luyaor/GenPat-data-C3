{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "547943bd619a97a88de388adaba9504e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07fc6e3e8f4485a23415b3103a54bbcc", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/MethodSorter.java", "commitBeforeChange": "db9a456f1cff2de765b0dd979bca020636dc88d0", "commitAfterChange": "c610a49727858597d9a10289bed0a0174053a69f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static Method[] getDeclaredMethods(Class<?> clazz)", "signatureAfterChange": "     public static Method[] getDeclaredMethods(Class<?> clazz)", "diff": ["+    \tComparator<Method> comparator = getSorter(clazz.getAnnotation(SortMethodsWith.class));", "+    \t", "-        Arrays.sort(methods, new Comparator<Method>() {", "-            @Override public int compare(Method m1, Method m2) {", "-                int i1 = m1.getName().hashCode();", "-                int i2 = m2.getName().hashCode();", "-                return i1 != i2 ? i1 - i2 : m1.toString().compareTo(m2.toString());", "-            }", "-        });", "+        if (comparator != null) {", "+        \tArrays.sort(methods, comparator);", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b79ddf5aebc715e6587bde7d6ed60e1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/ComparisonFailure.java", "commitBeforeChange": "950702c6adbbcbbee0ce2061d674bf05e0c997b1", "commitAfterChange": "a5d194fcb57b1b320ae808bc5a8d153f98f18a84", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "          private void findCommonSuffix()", "signatureAfterChange": "              public String compactPrefix()", "diff": ["-        private void findCommonSuffix() {", "-            int expectedSuffix = expected.length() - 1;", "-            int actualSuffix = actual.length() - 1;", "-            for (; actualSuffix >= prefix && expectedSuffix >= prefix; actualSuffix--, expectedSuffix--) {", "-                if (expected.charAt(expectedSuffix) != actual.charAt(actualSuffix)) {", "-                    break;", "-                }", "-            suffix = expected.length() - expectedSuffix - 1;", "-        }", "+            public String compactPrefix() {", "+                if (sharedPrefix.length() <= contextLength) {", "+                    return sharedPrefix;", "+                }", "+                return ELLIPSIS + sharedPrefix.substring(sharedPrefix.length() - contextLength);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67fe6beab605dc31bb2024328a35f4cf", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/ResultPrinter.java", "commitBeforeChange": "f7e1007ff23c57400a6b81361def3da5906cfb77", "commitAfterChange": "dd541a7c7b8feaaf966e55e6c91685ea071fb3c7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprotected void printBooBoos(Enumeration booBoos, int count, String type)", "signatureAfterChange": " \t \tpublic void printDefect(TestFailure booBoo, int count)", "diff": ["-\tprotected void printBooBoos(Enumeration booBoos, int count, String type) {", "-\t\t\tprintBooBoo((TestFailure) booBoos.nextElement(), i);", "+\tpublic void printDefect(TestFailure booBoo, int count) { // only public for testing purposes", "+\t\tprintDefectHeader(booBoo, count);", "+\t\tprintDefectTrace(booBoo);", "+\t}"]}]}