{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35cfc041b91c892df3dcddb8468abf21", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bf4271124a0462b96ff9df0c040c090", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assume.java", "commitBeforeChange": "d61e2885bfae9add429f42d9ce0d9bc8c3ef72b0", "commitAfterChange": "b521f9fbcc141e0a0925eaf5a0fd7f5285fa527c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static <T> void assumeThat(T value, Matcher<T> assumption)", "signatureAfterChange": " \tpublic static <T> void assumeThat(T actual, Matcher<T> matcher)", "diff": ["-\tpublic static <T> void assumeThat(T value, Matcher<T> assumption) {", "-\t\tif (!assumption.matches(value))", "-\t\t\tthrow new AssumptionViolatedException(value, assumption);", "+\tpublic static <T> void assumeThat(T actual, Matcher<T> matcher) {", "+\t\tif (!matcher.matches(actual))", "+\t\t\tthrow new AssumptionViolatedException(actual, matcher); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cd9e28ef5e1bdf84c15e73deda6b014", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/AssumptionViolatedException.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void describeTo(Description description)", "signatureAfterChange": "      public void describeTo(Description description)", "diff": ["-        if (fAssumption != null) {", "-            description.appendText(fAssumption);", "+        if (assumption != null) {", "+            description.appendText(assumption);", "-        if (fValueMatcher) {", "-            if (fAssumption != null) {", "+        if (valueMatcher) {", "+            if (assumption != null) {", "-            description.appendValue(fValue);", "+            description.appendValue(value);", "-            if (fMatcher != null) {", "+            if (matcher != null) {", "-                description.appendDescriptionOf(fMatcher);", "+                description.appendDescriptionOf(matcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "916ae24a36146c14529457ac532db16c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/AssumptionViolatedException.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void describeTo(Description description)", "signatureAfterChange": "      public void describeTo(Description description)", "diff": ["-        if (assumption != null) {", "-            description.appendText(assumption);", "+        if (fAssumption != null) {", "+            description.appendText(fAssumption);", "-        if (valueMatcher) {", "-            if (assumption != null) {", "+        if (fValueMatcher) {", "+            if (fAssumption != null) {", "-            description.appendValue(value);", "+            description.appendValue(fValue);", "-            if (matcher != null) {", "+            if (fMatcher != null) {", "-                description.appendDescriptionOf(matcher);", "+                description.appendDescriptionOf(fMatcher);"]}]}