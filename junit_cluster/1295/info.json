{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e72d99b18e1ba7a6ecc438015a2c3ba", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "513ac73bdf36d6587111313303e6ef44", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/runner/BaseTestRunner.java", "commitBeforeChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "commitAfterChange": "a8ec4efa178afdbc7844e94d08ab38b811c7409a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic static String filterStack(String stack)", "signatureAfterChange": " \tpublic static String filterStack(String stack)", "diff": ["-\t\tif (!getPreference(\"stackfilter\").equals(\"true\"))", "+\t\tif (!getPreference(\"filterstack\").equals(\"true\") || fgFilterStack == false)", "-\t\tStringWriter sw= new StringWriter(500);", "+\t\tStringWriter sw= new StringWriter();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b28e5e24bc1b7ac009d7a199b13acd21", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/awtui/TestRunner.java", "commitBeforeChange": "7d42d5ad6f2c80405d235a1dcdeb96cf6f9c4bca", "commitAfterChange": "8c46dd2f3212fa331528fc92019d4f22abe2ffc1", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 33, "signatureBeforeChange": "  \tsynchronized public void runSuite()", "signatureAfterChange": "  \tsynchronized public void runSuite()", "diff": ["-\t\tif (fRunner != null) {", "+\t\tif (fRunner != null && fTestResult != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c26b29ea108c71718c7682b7f7c34abd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/TestMethod.java", "commitBeforeChange": "bd7bff7c4ca18e1d0eab5260e585d3914e5fa53d", "commitAfterChange": "6acc164b4125da775cccd4035c1b99e9d404bacd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tClass<? extends Throwable> getExpectedException()", "signatureAfterChange": "  \tprotected Class<? extends Throwable> getExpectedException()", "diff": ["-\tClass<? extends Throwable> getExpectedException() {", "+\tprotected Class<? extends Throwable> getExpectedException() {", "-\t\tif (annotation.expected() == None.class)", "+\t\tif (annotation == null || annotation.expected() == None.class)"]}]}