{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55245ea5c70492ebd2473957c5aa5b14", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22faec37100c0575dc0611c66e4aff14", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/framework/ComparisonFailureTest.java", "commitBeforeChange": "ece77fa477a6d322bb5b37c7e2367f4c4dfbf9f3", "commitAfterChange": "ba28bf0f0384ba8b2fc377ef612545f411a56ec4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic void testComparisonErrorWithActualNull()", "signatureAfterChange": " \tpublic void testConnection()", "diff": ["-", "-\tpublic void testComparisonErrorWithActualNull() {", "-\t\tComparisonFailure failure= new ComparisonFailure(null, \"a\", null);", "-\t\tassertEquals(\"expected:<a> but was:<null>\", failure.getMessage());", "+\t// Most of the tests are in ComparisonCompactorTest", "+\tpublic void testConnection() {", "+\t\tComparisonFailure failure= new ComparisonFailure(\"warning\", \"Mary had a little lamb\", \"Mary had the little lamb\");", "+\t\tassertEquals(\"warning expected:<Mary had [a] little lamb> but was:<Mary had [the] little lamb>\", failure.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfc74aa1bd828ebf2a95d5d3323c8497", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "commitAfterChange": "a8ec4efa178afdbc7844e94d08ab38b811c7409a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void printHeader(TestResult result)", "signatureAfterChange": " \tpublic void printHeader(TestResult result)", "diff": ["-\t\t\twriter().println(\"Test Result Summary:\");", "-\t\t\twriter().println(\"Run: \"+result.runCount()+ ", "-\t\t\t\t         \" Failures: \"+result.failureCount()+", "-\t\t\t\t         \" Errors: \"+result.errorCount());", "+\t\t\twriter().println(\"Tests run: \"+result.runCount()+ ", "+\t\t\t\t         \",  Failures: \"+result.failureCount()+", "+\t\t\t\t         \",  Errors: \"+result.errorCount());"]}]}