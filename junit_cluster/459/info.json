{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "954745cbaf629d213db57067f19ae73c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a88dd06b2f01b53d08b3b50b193d24f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "4e1018a940699a38673b1861977110e6b558afb1", "commitAfterChange": "4cb9a65f450efa5f2a42128856c7b56e6d283386", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \t\tprivate void invokeWithActualParameters(Object target, \t\t\t\tAssignments complete) throws Throwable", "signatureAfterChange": "  \t\tprivate void invokeWithActualParameters(Object target, \t\t\t\tAssignments complete) throws Throwable", "diff": ["-\t\t\ttry {", "+//\t\t\ttry {", "-\t\t\t\tsuccesses++;", "-\t\t\t} catch (AssumptionViolatedException e) {", "-\t\t\t\thandleAssumptionViolation(e);", "-\t\t\t} catch (Throwable e) {", "-\t\t\t\treportParameterizedError(e, values);", "-\t\t\t}", "+//\t\t\t} catch (AssumptionViolatedException e) {", "+//\t\t\t\thandleAssumptionViolation(e);", "+//\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c40dbe0bf6d87f724552e8db4e72e52f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "41f96743522db61b14ef2c8ca7d719a226b9f153", "commitAfterChange": "bb13b318cd79a68470e93c79635090c7bb565475", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "          @Override         public void evaluate() throws Throwable", "signatureAfterChange": "          @Override         public void evaluate() throws Throwable", "diff": ["-            } catch (AssumptionViolatedException e) {", "-                optionallyHandleException(e, handleAssumptionViolatedExceptions);", "-                return;", "-            } catch (AssertionError e) {", "-                optionallyHandleException(e, handleAssertionErrors);", "-                return;", "-        }"]}]}