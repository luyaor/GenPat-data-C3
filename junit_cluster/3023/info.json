{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "50574ccc554fb8c61a90754026e1bd33", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c3d663da48973da35f27ebbef430000", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      private Assignments(List<PotentialAssignment> assigned,             List<ParameterSignature> unassigned, TestClass testClass)", "signatureAfterChange": "      private Assignments(List<PotentialAssignment> assigned,             List<ParameterSignature> unassigned, TestClass clazz)", "diff": ["-            List<ParameterSignature> unassigned, TestClass testClass) {", "-        fUnassigned = unassigned;", "-        fAssigned = assigned;", "-        fClass = testClass;", "+            List<ParameterSignature> unassigned, TestClass clazz) {", "+        this.unassigned = unassigned;", "+        this.assigned = assigned;", "+        this.clazz = clazz;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbc7f6fab1ab563809888cd3533ef134", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/AssumptionViolatedException.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public AssumptionViolatedException(String assumption, boolean valueMatcher, Object value, Matcher<?> matcher)", "signatureAfterChange": "      public AssumptionViolatedException(String assumption, boolean valueMatcher, Object value, Matcher<?> matcher)", "diff": ["-        fAssumption = assumption;", "-        fValue = value;", "-        fMatcher = matcher;", "-        fValueMatcher = valueMatcher;", "+        this.assumption = assumption;", "+        this.value = value;", "+        this.matcher = matcher;", "+        this.valueMatcher = valueMatcher;"]}]}