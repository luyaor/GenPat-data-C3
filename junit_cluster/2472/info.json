{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "567c163e66d55c78c22d26ffc5177fb9", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "181480db5a5ab547752060202b76b3ce", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "f49fb25b6fbffcc7a68b28824ed3856ffa9d6fdd", "commitAfterChange": "078e45bd31a9920e00633ad6ce658e22529304f2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tprotected Statement childBlock(FrameworkMethod method)", "signatureAfterChange": "  \tprotected String getName()", "diff": ["+", "+\tprotected String getName() {", "+\t\treturn getTestClass().getName();", "+\t}", "-\t", "-\tprotected Statement childBlock(FrameworkMethod method) {", "-\t\t\ttest= new ReflectiveCallable() {", "-\t\t\t\t@Override", "-\t\t\t\tprotected Object runReflectiveCall() throws Throwable {", "-\t\t\t\t\treturn createTest();", "-\t\t\t\t}", "-\t\t\t}.run();", "-\t\t} catch (Throwable e) {", "-\t\t\treturn new Fail(e);", "-", "-\t\tTestAnnotation annotation= new TestAnnotation(method);", "-\t\t", "-\t\tStatement link= invoke(method, test);", "-\t\tlink= possiblyExpectingExceptions(annotation, link);", "-\t\tlink= withPotentialTimeout(annotation, link);", "-\t\tlink= withBefores(method, test, link);", "-\t\tlink= withAfters(method, test, link);", "-\t\treturn link;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cd40fde6dfbeaadb0c0332d3e342dc6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "commitAfterChange": "44e7458b19d5cd1900a765a440c96e85b81d25fc", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprotected Link chain(TestMethod method)", "signatureAfterChange": "  \tprotected Link chain(TestMethod method)", "diff": ["+", "+\tprotected Link chain(TestMethod method) {", "+\t\t// TODO: (Oct 5, 2007 11:09:00 AM) Rename Link", "+", "+\t\tLink link= invoke(method);", "+\t\tlink= possiblyExpectingExceptions(method, link);", "+\t\tlink= withPotentialTimeout(method, link);", "+\t\tlink= withBeforeAndAfter(method, link);", "+\t\treturn notifying(method, link);", "+\t}", "-", "-\tprotected Link chain(TestMethod method) {", "-\t\t// TODO: (Oct 5, 2007 11:09:00 AM) Rename Link", "-", "-\t\tLink link= anchor(method);", "-\t\tlink= handleExceptions(link, method);", "-\t\tlink= timeout(link, method);", "-\t\t// TODO: (Oct 8, 2007 10:45:34 AM) parallelize (make beforeAndAfter method)", "-\t\t// TODO: (Oct 8, 2007 10:54:54 AM) sort methods", "-", "-\t\tlink= new BeforeAndAfter(link, method);", "-\t\treturn notifier(link, method);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "711bf30a616e0bbaf4d58bcfeb8f71f7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "0e1c92693e70e52ad9af23ee6180500c74fc9c95", "commitAfterChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tprotected Link chain(TestMethod method)", "signatureAfterChange": "  \tprotected NotificationStrategy chain(TestMethod method, Object test)", "diff": ["-\tprotected Link chain(TestMethod method) {", "-\t\t// TODO: (Oct 5, 2007 11:09:00 AM) Rename Link?", "-\t\tObject test;", "-\t\t\ttest= new ReflectiveCallable() {", "-\t\t\t\t@Override", "-\t\t\t\tprotected Object runReflectiveCall() throws Throwable {", "-\t\t\t\t\treturn createTest();", "-\t\t\t\t}", "-\t\t\t}.run();", "-\t\t\treturn throwException(e);", "-\t\t", "-\t\tLink link= invoke(method, test);", "-\t\tlink= possiblyExpectingExceptions(method, link);", "-\t\tlink= ignoreViolatedAssumptions(link);", "-\t\tlink= withPotentialTimeout(method, link);", "-\t\tlink= withBeforeAndAfter(method, link, test);", "-\t\treturn link;", "-\t}", "+\tprotected NotificationStrategy chain(TestMethod method, Object test) {", "+\t\t// TODO: (Oct 5, 2007 11:09:00 AM) Rename Link?", "+", "+\t\t// TODO: (Oct 9, 2007 2:12:24 PM) method + test is parameter object?", "+", "+\t\tLink link= invoke(method, test);", "+\t\tlink= possiblyExpectingExceptions(method, link);", "+\t\tlink= withPotentialTimeout(method, link);", "+\t\tlink= withBefores(method, test, link);", "+\t\tlink= ignoreViolatedAssumptions(link);", "+\t\tlink= withAfters(method, test, link);", "+\t\treturn notifying(method, link);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc97c8f964ffbeea8bc9cd80f40edcff", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "979e8abbe974e8847668f5887403da78a6165ebc", "commitAfterChange": "1fcd990f60518c941a44bae2596392021614a20b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprotected Statement childBlock(FrameworkMethod method)", "signatureAfterChange": " \tprotected Statement methodBlock(FrameworkMethod method)", "diff": ["-\tprotected Statement childBlock(FrameworkMethod method) {", "+\tprotected Statement methodBlock(FrameworkMethod method) {", "-\t\tStatement link= invoke(method, test);", "-\t\tlink= possiblyExpectingExceptions(method, test, link);", "-\t\tlink= withPotentialTimeout(method, test, link);", "-\t\tlink= withBefores(method, test, link);", "-\t\tlink= withAfters(method, test, link);", "-\t\treturn link;", "+\t\tStatement statement= methodInvoker(method, test);", "+\t\tstatement= possiblyExpectingExceptions(method, test, statement);", "+\t\tstatement= withPotentialTimeout(method, test, statement);", "+\t\tstatement= withBefores(method, test, statement);", "+\t\tstatement= withAfters(method, test, statement);", "+\t\treturn statement;"]}]}