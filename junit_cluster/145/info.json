{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b61e6e363d6c86bdf7754218aee31127", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38c90a20f248b190af0aa185ef85a1de", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "fa9b88f335a338f65de8ded6f4b59d0123c3e6a2", "commitAfterChange": "de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 7, "signatureBeforeChange": "          public CategoryFilter(Class<?> includedCategory,                 Class<?> excludedCategory)", "signatureAfterChange": "          private CategoryFilter(boolean matchAnyIncludes, Set<Class<?>> includes,                                boolean matchAnyExcludes, Set<Class<?>> excludes)", "diff": ["-", "-        public CategoryFilter(Class<?> includedCategory,", "-                Class<?> excludedCategory) {", "-            fIncluded = includedCategory;", "-            fExcluded = excludedCategory;", "+", "+        private CategoryFilter(boolean matchAnyIncludes, Set<Class<?>> includes,", "+                               boolean matchAnyExcludes, Set<Class<?>> excludes) {", "+            fIncludedAny= matchAnyIncludes;", "+            fExcludedAny= matchAnyExcludes;", "+            fIncluded= copyAndRefine(includes);", "+            fExcluded= copyAndRefine(excludes);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd5d3eebd8557155e7c27fe1f97dff64", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "010f7461c5e9bb4304b68b8c0eb3027b677d7f31", "commitAfterChange": "61badf2f7f147d6e782e1700b24da4ac06ce070c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          TestClassRunnerForParameters(Class<?> type, Object[] parameters,                 String name) throws InitializationError", "signatureAfterChange": "\r \r         protected TestClassRunnerForParameters(Class<?> type, String pattern, int index, Object[] parameters) throws InitializationError", "diff": ["-", "-        TestClassRunnerForParameters(Class<?> type, Object[] parameters,", "-                String name) throws InitializationError {", "-            super(type);", "-            fParameters = parameters;", "-            fName = name;", "-        }", "+\r", "+        protected TestClassRunnerForParameters(Class<?> type, String pattern, int index, Object[] parameters) throws InitializationError {\r", "+            super(type);\r", "+\r", "+            fPattern = pattern;\r", "+            fIndex = index;\r", "+            fParameters = parameters;\r", "+        }\r"]}]}