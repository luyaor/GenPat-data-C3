{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e4eef75663edae2210fd3ac2b8a4a07", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dca754c7bac5ace1a6676068e7bb984b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "a58514aec7e843339be24980e92aeeb759327ffb", "commitAfterChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tprotected Link chain()", "signatureAfterChange": "  \tprotected Link chain()", "diff": ["-\t\t// TODO: (Oct 5, 2007 11:09:00 AM) Rename Anchor and Link", "+\t\t// TODO: (Oct 5, 2007 11:09:00 AM) Rename Link", "-\t\tAnchor anchor= anchor();", "-\t\tAnchor next= handleExceptions(anchor);", "-\t\tnext= timeout(next);", "-\t\tLink link= new BeforeAndAfter(next);", "-\t\treturn new Notifier(link);", "+\t\tLink link= anchor();", "+\t\tlink= handleExceptions(link);", "+\t\tlink= timeout(link);", "+\t\tlink= new BeforeAndAfter(link);", "+\t\tlink= new Notifier(link);", "+\t\treturn new Ignored(link);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc97c8f964ffbeea8bc9cd80f40edcff", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "979e8abbe974e8847668f5887403da78a6165ebc", "commitAfterChange": "1fcd990f60518c941a44bae2596392021614a20b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprotected Statement childBlock(FrameworkMethod method)", "signatureAfterChange": " \tprotected Statement methodBlock(FrameworkMethod method)", "diff": ["-\tprotected Statement childBlock(FrameworkMethod method) {", "+\tprotected Statement methodBlock(FrameworkMethod method) {", "-\t\tStatement link= invoke(method, test);", "-\t\tlink= possiblyExpectingExceptions(method, test, link);", "-\t\tlink= withPotentialTimeout(method, test, link);", "-\t\tlink= withBefores(method, test, link);", "-\t\tlink= withAfters(method, test, link);", "-\t\treturn link;", "+\t\tStatement statement= methodInvoker(method, test);", "+\t\tstatement= possiblyExpectingExceptions(method, test, statement);", "+\t\tstatement= withPotentialTimeout(method, test, statement);", "+\t\tstatement= withBefores(method, test, statement);", "+\t\tstatement= withAfters(method, test, statement);", "+\t\treturn statement;"]}]}