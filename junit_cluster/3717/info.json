{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8caeebcb90d9b5e947bc304def7a8a9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "619408b5a4b69ae6747cfd86bb0c1895", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/builders/JUnit3Builder.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t@Override \tpublic Runner runnerForClass(Class<?> testClass) throws Throwable", "signatureAfterChange": "     @Override     public Runner runnerForClass(Class<?> testClass) throws Throwable", "diff": ["-\t@Override", "-\tpublic Runner runnerForClass(Class<?> testClass) throws Throwable {", "-\t\tif (isPre4Test(testClass))", "-\t\t\treturn new JUnit38ClassRunner(testClass);", "-\t\treturn null;", "-\t}", "+    @Override", "+    public Runner runnerForClass(Class<?> testClass) throws Throwable {", "+        if (isPre4Test(testClass)) {", "+            return new JUnit38ClassRunner(testClass);", "+        }", "+        return null;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c104a9694b8c5ffc41f6645eb7ff65a6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/builders/AllDefaultPossibilitiesBuilder.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprotected RunnerBuilder suiteMethodBuilder()", "signatureAfterChange": "      protected RunnerBuilder suiteMethodBuilder()", "diff": ["-\tprotected RunnerBuilder suiteMethodBuilder() {", "-\t\tif (fCanUseSuiteMethod)", "-\t\t\treturn new SuiteMethodBuilder();", "-\t\treturn new NullBuilder();", "-\t}", "+    protected RunnerBuilder suiteMethodBuilder() {", "+        if (fCanUseSuiteMethod) {", "+            return new SuiteMethodBuilder();", "+        }", "+        return new NullBuilder();", "+    }"]}]}