{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a23b00f354e601ea2b70802a2413c841", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46f6a6d82b64583812c532922e622a50", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "9cf5b64d8dbbb064fed3d4ee88eced2b6a7d50fe", "commitAfterChange": "bae4bd80513360c5e884e760447000d9c96ffd72", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private void invokeValidatorsOnFields(List<Throwable> errors)", "signatureAfterChange": "      private void invokeValidatorsOnFields(List<Throwable> errors)", "diff": ["-        for (Class<? extends Annotation> annotation : annotationMap.keySet()) {", "-                if (hasValidatorAnnotation(annotation)) {", "-                    for (FrameworkField frameworkField : annotationMap.get(annotation)) {", "-                        AnnotationValidator annotationValidator = getAnnotationValidator(annotation);", "-                        annotationValidator.validateAnnotatedField(frameworkField.getField(), errors);", "-                    }", "-                }", "-        }", "-    }", "+        for (Class<? extends Annotation> annotationType : annotationMap.keySet()) {", "+            ValidateWith validateWithAnnotation = annotationType.getAnnotation(ValidateWith.class);", "+            for (FrameworkField frameworkField : annotationMap.get(annotationType)) {", "+                AnnotationValidator annotationValidator = fAnnotationValidatorFactory.createAnnotationValidator(validateWithAnnotation);", "+                annotationValidator.validateAnnotatedField(frameworkField.getField(), errors);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5b6f56942c914dd6f1a8e8383050aa1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "9cf5b64d8dbbb064fed3d4ee88eced2b6a7d50fe", "commitAfterChange": "bae4bd80513360c5e884e760447000d9c96ffd72", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void invokeValidatorsOnMethods(List<Throwable> errors)", "signatureAfterChange": "      private void invokeValidatorsOnMethods(List<Throwable> errors)", "diff": ["-        for (Class<? extends Annotation> annotation : annotationMap.keySet()) {", "-            if (hasValidatorAnnotation(annotation)) {", "-                for (FrameworkMethod frameworkMethod : annotationMap.get(annotation)) {", "-                    AnnotationValidator annotationValidator = getAnnotationValidator(annotation);", "-                    annotationValidator.validateAnnotatedMethod(frameworkMethod.getMethod(), errors);", "-                }", "+        for (Class<? extends Annotation> annotationType : annotationMap.keySet()) {", "+            ValidateWith validateWithAnnotation = annotationType.getAnnotation(ValidateWith.class);", "+            for (FrameworkMethod frameworkMethod : annotationMap.get(annotationType)) {", "+                AnnotationValidator annotationValidator = fAnnotationValidatorFactory.createAnnotationValidator(validateWithAnnotation);", "+                annotationValidator.validateAnnotatedMethod(frameworkMethod.getMethod(), errors);"]}]}