{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "65bb958b8794de4def23af129e1acc3a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f89366204b89068f56d37f6556cb4a2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assume.java", "commitBeforeChange": "8a8008c96936d468a2f579bcea9a71e965558d57", "commitAfterChange": "ea47086066445ba537d1573fd7458de8875d6c45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t\tpublic void describeTo(Description description)", "signatureAfterChange": "  \t\tpublic void describeTo(Description description)", "diff": ["-\t\t\tdescription.appendText(\"got: \");", "-\t\t\tdescription.appendValue(fValue);", "-\t\t\tdescription.appendText(\", expected: \");", "-\t\t\tdescription.appendDescriptionOf(fMatcher);", "+\t\t\tif (fMatcher != null) {", "+\t\t\t\tdescription.appendText(\"got: \");", "+\t\t\t\tdescription.appendValue(fValue);", "+\t\t\t\tdescription.appendText(\", expected: \");", "+\t\t\t\tdescription.appendDescriptionOf(fMatcher);", "+\t\t\t} else {", "+\t\t\t\tdescription.appendText(\"failed assumption: \" + fValue);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5802daf6eac1364e61ba52d8ea66d9c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/AssumptionViolatedException.java", "commitBeforeChange": "2e53904ae22336000cdf8e12166436e18e538b87", "commitAfterChange": "3bb48f0a58eb44f36b6e03538a7db05b6c6da335", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void describeTo(Description description)", "signatureAfterChange": "  \tpublic void describeTo(Description description)", "diff": ["-\t\tif (fMatcher != null) {", "+\t\tif (fAssumption != null)", "+\t\t\tdescription.appendText(fAssumption);", "+", "+\t\tif (fValueMatcher) {", "+\t\t\tif (fAssumption != null)", "+\t\t\t\tdescription.appendText(\": \");", "+", "-\t\t\tdescription.appendText(\", expected: \");", "-\t\t\tdescription.appendDescriptionOf(fMatcher);", "-\t\t} else {", "-\t\t\tdescription.appendText(\"failed assumption: \" + fValue);", "+\t\t\t", "+\t\t\tif (fMatcher != null) {", "+\t\t\t\tdescription.appendText(\", expected: \");", "+\t\t\t\tdescription.appendDescriptionOf(fMatcher);", "+\t\t\t}"]}]}