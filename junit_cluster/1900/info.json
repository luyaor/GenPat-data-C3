{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ff33b97a52ba2d73930cbf6379483f1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cea3c342cb3ce55cda2187bbca6ebb7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/JUnitCoreTest.java", "commitBeforeChange": "56193048f411846a58c0e0377a5f1ccfecd3d2f9", "commitAfterChange": "826529633261161edd2d9dc0f866b2c3c0420514", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void shouldAddFailuresToResult()", "signatureAfterChange": "     @Test     public void shouldAddFailuresToResult()", "diff": ["-        assertThat(result.getFailures().get(0).getException(), instanceOf(ClassNotFoundException.class));", "+        assertThat(result.getFailures().get(0).getException(), instanceOf(IllegalArgumentException.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9019856c170ffc575d126b4edfca5819", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/JUnitCommandLineParserTest.java", "commitBeforeChange": "40b8761099da900ad219fe9b06060cda1e212f83", "commitAfterChange": "b01900fddca5ff54258e621025ccdbbc75f880f1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r     @Test\r     public void shouldCreateFailureUponUnfoundFilterFactory() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldCreateFailureUponUnfoundFilterFactory() throws Exception", "diff": ["-        assertThat(exception, instanceOf(FilterFactoryFactory.FilterFactoryNotCreatedException.class));\r", "+        assertThat(exception, instanceOf(FilterFactories.FilterFactoryNotCreatedException.class));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a217023b9e5d7c5198d0c06da622aa3c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/JUnitCommandLineParserTest.java", "commitBeforeChange": "5edfb4447b609c178d63a3d991172861076d143b", "commitAfterChange": "34336085d5aba69c997f8e6b244531561afebcd4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void shouldCreateFailureUponUnknownOption() throws Exception", "signatureAfterChange": "      @Test     public void shouldCreateFailureUponUnknownOption() throws Exception", "diff": ["-        assertThat(exception, instanceOf(JUnitCommandLineParser.Error.class));", "+        assertThat(exception, instanceOf(JUnitCommandLineParser.CommandLineParserError.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7da68b8195ab568443d5e31a6a26825", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/test/imposterization/AssumePassingTest.java", "commitBeforeChange": "fcf95d1d6bfdd046f1328af108ad5376c62d50d4", "commitAfterChange": "b7bb33dd040e87bb08831ee950fd788f206bb59a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@SuppressWarnings(\"unchecked\") \t@Test \tpublic void removedParameterizedFailureWhenZeroParams()", "signatureAfterChange": "  \t@SuppressWarnings(\"unchecked\") \t@Test \tpublic void removedParameterizedFailureWhenZeroParams()", "diff": ["-\t\tassertThat(onlyIfPassingFailures().get(0).getException(), Matchers", "-\t\t\t\t.is(AssertionError.class));", "+\t\tassertThat(onlyIfPassingFailures().get(0).getException(), is(AssertionError.class));"]}]}