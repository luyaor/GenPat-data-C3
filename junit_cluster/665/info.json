{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da44ad74b84f04e48a9bf6462a95014e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f191cfefaeb26b48b5d01b214dd7868", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/requests/ClassRequest.java", "commitBeforeChange": "7f08797ece011ff765e98635323d59811363df5b", "commitAfterChange": "a9482d75217d0ae1ad8220515ed22a9245a822fc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \t@Override \tpublic Runner getRunner()", "signatureAfterChange": " \t \t@Override \tpublic Runner getRunner()", "diff": ["-\t\tClass<? extends Runner> runnerClass= getRunnerClass(fTestClass);", "+\t\treturn buildRunner(getRunnerClass(fTestClass)); ", "+\t}", "-\t\t\tConstructor<? extends Runner> constructor= runnerClass.getConstructor(Class.class); // TODO good error message if no such constructor", "-\t\t\treturn constructor.newInstance(new Object[] { fTestClass });", "-\t\t} catch (StackOverflowError e) {", "-\t\t\tthrow new RuntimeException();", "-\t\t} "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dc1f434dbf2d98a2a43e533d40579da", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/framework/TestSuite.java", "commitBeforeChange": "b6a023c447628100c104708666eddd0b2eaa41d3", "commitAfterChange": "86b71cb1b9784a9b87c86b4f3f12632ae6773d1f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic Test createTest(Class theClass, String name) throws IllegalArgumentException", "signatureAfterChange": "  \tstatic public Test createTest(Class theClass, String name)", "diff": ["-\tpublic Test createTest(Class theClass, String name) throws IllegalArgumentException {", "-\t\tConstructor c;", "+\tstatic public Test createTest(Class theClass, String name) {", "+\t\tConstructor constructor;", "-\t\t\tc= getConstructor(theClass);", "+\t\t\tconstructor= getTestConstructor(theClass);", "-\t\t\tif (c.getParameterTypes().length == 0) {", "-\t\t\t\ttest= c.newInstance(new Object[0]);", "+\t\t\tif (constructor.getParameterTypes().length == 0) {", "+\t\t\t\ttest= constructor.newInstance(new Object[0]);", "-\t\t\t\ttest= c.newInstance(new Object[]{name});", "+\t\t\t\ttest= constructor.newInstance(new Object[]{name});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea9359f801f899cc214f36f18bd2a4ad", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/internal/requests/ClassRequest.java", "commitBeforeChange": "5139a1be36da4ed64a860de82e7d74f2e5405037", "commitAfterChange": "0cdf29715af64edd05229c400f214417fecdef89", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \t@Override \tpublic Runner getRunner()", "signatureAfterChange": " \t \t@Override \tpublic Runner getRunner()", "diff": ["-\t\tClass runnerClass= getRunnerClass(fTestClass);", "+\t\tClass<? extends Runner> runnerClass= getRunnerClass(fTestClass);", "-\t\t\tConstructor constructor= runnerClass.getConstructor(Class.class); // TODO good error message if no such constructor", "-\t\t\tRunner runner= (Runner) constructor", "-\t\t\t\t\t.newInstance(new Object[] { fTestClass });", "-\t\t\treturn runner;", "+\t\t\tConstructor<? extends Runner> constructor= runnerClass.getConstructor(Class.class); // TODO good error message if no such constructor", "+\t\t\treturn constructor.newInstance(new Object[] { fTestClass });"]}]}