{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6af7e58c9a5b95814662512e9b850f31", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9511c837d5f28528d664d233196ff7d6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "48af7e797dbefa1fc47e80394c7f74ef87c3c7ab", "commitAfterChange": "85f9d8397bfd96261c3214284672180c522e2d38", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private void invokeValidatorsOnFields(List<Throwable> errors)", "signatureAfterChange": "      private void invokeValidatorsOnFields(List<Throwable> errors)", "diff": ["-        Set<FrameworkField> annotatedFields = getTestClass().getAnnotatedFields();", "-        for (FrameworkField frameworkField : annotatedFields) {", "-            for (Annotation annotation : frameworkField.getAnnotations()) {", "+        Map<Class<? extends Annotation>, List<FrameworkField>> annotationMap =", "+                getTestClass().getAnnotationToFields();", "+        for (Class<? extends Annotation> annotation : annotationMap.keySet()) {", "-                    invokeValidatorsOnField(annotation, frameworkField, errors);", "+                    for (FrameworkField frameworkField : annotationMap.get(annotation)) {", "+                        AnnotationValidator annotationValidator =", "+                                getAnnotationValidator(annotation);", "+                        annotationValidator.validateAnnotatedField(frameworkField.getField(), errors);", "+                    }", "-            }", "-        }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e63925a7a1ae7e637262a19c6c404082", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "48af7e797dbefa1fc47e80394c7f74ef87c3c7ab", "commitAfterChange": "85f9d8397bfd96261c3214284672180c522e2d38", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void invokeValidatorsOnMethods(List<Throwable> errors)", "signatureAfterChange": "      private void invokeValidatorsOnMethods(List<Throwable> errors)", "diff": ["-        Set<FrameworkMethod> annotatedMethods = getTestClass().getAnnotatedMethods();", "-        for (FrameworkMethod frameworkMethod : annotatedMethods) {", "-            for (Annotation annotation : frameworkMethod.getAnnotations()) {", "-                if (hasValidatorAnnotation(annotation)) {", "-                    invokeValidatorsOnMethod(annotation, frameworkMethod, errors);", "+        Map<Class<? extends Annotation>, List<FrameworkMethod>> annotationMap =", "+                getTestClass().getAnnotationToMethods();", "+        for (Class<? extends Annotation> annotation : annotationMap.keySet()) {", "+            if (hasValidatorAnnotation(annotation)) {", "+                for (FrameworkMethod frameworkMethod : annotationMap.get(annotation)) {", "+                    AnnotationValidator annotationValidator =", "+                            getAnnotationValidator(annotation);", "+                    annotationValidator.validateAnnotatedMethod(frameworkMethod.getMethod(), errors);", "-        }", "-    }"]}]}