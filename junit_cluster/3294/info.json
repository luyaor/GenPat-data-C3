{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6681de956b6ac68ad3be09fbb4a86d37", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c1622131b038c17e345b6d4777713c8", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/CounterPanel.java", "commitBeforeChange": "b6a023c447628100c104708666eddd0b2eaa41d3", "commitAfterChange": "86b71cb1b9784a9b87c86b4f3f12632ae6773d1f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic CounterPanel()", "signatureAfterChange": " \t \tpublic CounterPanel()", "diff": ["-\t\tsuper(new GridLayout(2, 3));\t", "+\t\tsuper(new GridLayout(1, 6)); \t", "+\t\tfNumberOfErrors= createOutputField(8);", "+\t\tfNumberOfFailures= createOutputField(5);", "+\t\tfNumberOfRuns= createOutputField(5); ", "-\t\tadd(new JLabel(\"Errors:\"));\t", "-\t\tadd(new JLabel(\"Failures: \"));\t", "-\t\tfNumberOfErrors= createOutputField();", "-\t\tfNumberOfFailures= createOutputField();", "-\t\tfNumberOfRuns= createOutputField();", "+\t\tadd(new JLabel(\"Errors:\", fErrorIcon, SwingConstants.LEFT));\t", "+\t\tadd(new JLabel(\"Failures: \", fFailureIcon, SwingConstants.LEFT));\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "836d19de0575a952713bb99d239157e0", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/framework/AllTests.java", "commitBeforeChange": "d3b3a19c78435ef6b0d1c8832bcdb1a8d5ed6a4e", "commitAfterChange": "f41f48d8f0a71620b878617e5fffb4b48c872978", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic static Test suite()", "signatureAfterChange": " \t \tpublic static Test suite()", "diff": ["+\t\tsuite.addTestSuite(ComparisonFailureTest.class);", "+\t\tsuite.addTestSuite(DoublePrecisionAssertTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfa604a0f0801ad54965e62ae5f21dea", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/TimeoutTest.java", "commitBeforeChange": "10b674dbba2a8ceadb65dfc8e8033072f41fc2aa", "commitAfterChange": "6a83bc0f1e5f9839a36910c3a21108bc38367afb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \t \t@Test public void infiniteLoopRunsForApproximatelyLengthOfTimeout() throws Exception", "signatureAfterChange": " \t \t@Ignore(\"This breaks sporadically with time differences just slightly more than 200ms\") \t@Test public void infiniteLoopRunsForApproximatelyLengthOfTimeout() throws Exception", "diff": ["-\t", "+\t@Ignore(\"This breaks sporadically with time differences just slightly more than 200ms\")", "+\t\t// \"prime the pump\": running these beforehand makes the runtimes more predictable", "+\t\t//                   (because of class loading?)", "+\t\tJUnitCore.runClasses(InfiniteLoopTest.class, ImpatientLoopTest.class);"]}]}