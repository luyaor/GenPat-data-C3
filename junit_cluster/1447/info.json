{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3cee1b6901665dae6df45321ca0b6f1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0301be177a6519933114cd5eae442e7c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestElement.java", "commitBeforeChange": "4e1018a940699a38673b1861977110e6b558afb1", "commitAfterChange": "4cb9a65f450efa5f2a42128856c7b56e6d283386", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void runAfters(Object target) throws MultipleFailureException", "signatureAfterChange": "  \tpublic void runAfters(Object target) throws Throwable", "diff": ["-\tpublic void runAfters(Object target) throws MultipleFailureException {", "+\tpublic void runAfters(Object target) throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25ffaa2a4044b3ca7201aea157b0c4b7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "6bea82df32f687d636f1b843a1918a3a1ff22a6e", "commitAfterChange": "872faeab15115635b3260001979ae036e64e29bf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void expectMessage(Matcher<String> matcher)", "signatureAfterChange": " \tpublic void expectMessage(Matcher<String> matcher)", "diff": ["-\t\tfMatcher.andHasMessage(matcher);", "+\t\tfMatcher.andAlsoHasMessage(matcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26d45e47597f0a5df7d4e4ecc34502fb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TemporaryFolder.java", "commitBeforeChange": "59e5333b24d0e433de10d74c69e5de7700c6b744", "commitAfterChange": "2568203bdebd5a4a4ad9aa74b1d8369d22f668a3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic File newFolder(String... folderNames)", "signatureAfterChange": " \tpublic File newFolder(String... folderNames) throws IOException", "diff": ["-\tpublic File newFolder(String... folderNames) {", "+\tpublic File newFolder(String... folderNames) throws IOException {", "-\t\t\t\tthrow new IllegalArgumentException(", "+\t\t\t\tthrow new IOException("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29d831154381478ef12555c98d06b23d", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/runner/BaseTestRunner.java", "commitBeforeChange": "bfc94ee739d62127c7477300b26127bd560765a1", "commitAfterChange": "04f4f3197084ad9ad7c050ce1a40d6f4421662f4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic TestSuiteLoader getLoader()", "signatureAfterChange": " \tpublic TestSuiteLoader getLoader()", "diff": ["-\t\tif (useReoadingTestSuiteLoader())", "+\t\tif (useReloadingTestSuiteLoader())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bf6ab8747187aa4eea952bc6e3f79a5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "6bea82df32f687d636f1b843a1918a3a1ff22a6e", "commitAfterChange": "872faeab15115635b3260001979ae036e64e29bf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void expect(Matcher<?> matcher)", "signatureAfterChange": " \tpublic void expect(Matcher<?> matcher)", "diff": ["-\t\tfMatcher.and(matcher);", "+\t\tfMatcher.andAlso(matcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "407c8155416c53c2a16fc033b4737a02", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactory.java", "commitBeforeChange": "196c4ed79cbaca37709643b54913b361b677ae04", "commitAfterChange": "0a9a389570a171b67c3155d312f2e90bdab5aaaf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Filter createFilter(final String args) throws FilterNotFoundException", "signatureAfterChange": "      public Filter createFilter(String args) throws FilterNotCreatedException", "diff": ["-    public Filter createFilter(final String args) throws FilterNotFoundException {", "+    public Filter createFilter(String args) throws FilterNotCreatedException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40c1b92655347f26d3904111b6658ede", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "4dcf3a499652b3c089d91e209c6f01313115ff76", "commitAfterChange": "a916d4133c7e394130d7953da427aae9917ab92c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprotected void printFailures(Result result)", "signatureAfterChange": "  \tprotected void printFailures(Result result)", "diff": ["-\t\tprintExceptions(\"failure\", \"\", result.getFailures());", "+\t\tprintEvents(\"failure\", \"\", result.getFailures());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43263e95561cfc9e87f2019ecc870980", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "a1813f62876a6c7227ec5c866b621e01cda79664", "commitAfterChange": "97afc5e205e1c6ac0f5a9aefabed92d58d88ab81", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate void validateInterceptorField(Field field, List<Throwable> errors)", "signatureAfterChange": "  \tprivate void validateRuleField(Field field, List<Throwable> errors)", "diff": ["-\tprivate void validateInterceptorField(Field field, List<Throwable> errors) {", "+\tprivate void validateRuleField(Field field, List<Throwable> errors) {", "-\t\t\t\t\t+ \" must implement StatementInterceptor\"));", "+\t\t\t\t\t+ \" must implement MethodRule\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45e27a03fe627711db92796b95f58ae2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/ArrayComparisonFailure.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ArrayComparisonFailure(String message, AssertionError cause, int index)", "signatureAfterChange": "     public ArrayComparisonFailure(String message, AssertionError cause, int index)", "diff": ["-        this.message = message;", "+        this.fMessage = message;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46ad95cedc236bd026f493efc8a239af", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/listening/ResultTest.java", "commitBeforeChange": "d148bce8682505082a3cc634acbd36ac13a10c9a", "commitAfterChange": "497ebf11c284bcc2b32eecc4a063589b4f17d250", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t@Test public void failedAssumptionDoesntCountAsRun() throws Exception", "signatureAfterChange": " \t@Test public void failedAssumptionDoesntCountAsRun() throws Exception", "diff": ["-\t\tlistener.testAssumptionFailed(someTest, null);", "+\t\tlistener.testAssumptionInvalid(someTest, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cccdad1c2fc94e2e3cb3078bdce3e9a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TimeWatcher.java", "commitBeforeChange": "582d86c49eb8624b9db65e69ad0e404821505b3d", "commitAfterChange": "0a2601045f101930d0ca7f31c53b416fafbbe7a7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Override final protected void starting(Description description)", "signatureAfterChange": "      @Override final protected void starting(Description description)", "diff": ["-        startTime = System.nanoTime();", "+        startNanos = System.nanoTime();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69cdac3c4ee818baa02d2860e36f2dc2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "commitAfterChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t\tprotected void runWithCompleteAssignment(final Assignments complete) throws InstantiationException, \t\t\t\tIllegalAccessException, InvocationTargetException, \t\t\t\tNoSuchMethodException, Throwable", "signatureAfterChange": "  \t\tprotected void runWithCompleteAssignment(final Assignments complete) throws InstantiationException, \t\t\t\tIllegalAccessException, InvocationTargetException, \t\t\t\tNoSuchMethodException, Throwable", "diff": ["-\t\t\t\twithAfters(fTestMethod, freshInstance, withBefores(fTestMethod, freshInstance, methodCompletesWithParameters(complete, freshInstance))).run();", "+\t\t\t\twithAfters(fTestMethod, freshInstance, withBefores(fTestMethod, freshInstance, methodCompletesWithParameters(complete, freshInstance))).evaluate();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c6c3a8ef57b1743e31747a13948a7be", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestTimedOutException.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public long getTimeout()", "signatureAfterChange": "     public long getTimeout()", "diff": ["-        return fTimeout;", "+        return timeout;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f7bb4f3c6793c1b960a6c9fa4c3e580", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      private Test getTest()", "signatureAfterChange": "      private Test getTest()", "diff": ["-        return fTest;", "+        return test;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9019856c170ffc575d126b4edfca5819", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/JUnitCommandLineParserTest.java", "commitBeforeChange": "40b8761099da900ad219fe9b06060cda1e212f83", "commitAfterChange": "b01900fddca5ff54258e621025ccdbbc75f880f1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r     @Test\r     public void shouldCreateFailureUponUnfoundFilterFactory() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldCreateFailureUponUnfoundFilterFactory() throws Exception", "diff": ["-        assertThat(exception, instanceOf(FilterFactoryFactory.FilterFactoryNotCreatedException.class));\r", "+        assertThat(exception, instanceOf(FilterFactories.FilterFactoryNotCreatedException.class));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9365456b8c5d0fbc5b47df224a7fe3bc", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "cf507ab8446f6e8ea0191da998d7607c3e85c787", "commitAfterChange": "686240ea6cc89187c1fa190f077ea6dc73bdb258", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "      @Override     public void run(final RunNotifier notifier)", "signatureAfterChange": "      @Override     public void run(final RunNotifier notifier)", "diff": ["-            testNotifier.fireTestIgnored();", "+            testNotifier.addFailedAssumption(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9513a01bad92adb75c5a439ede71c72b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "96ca415d66bb37d6d3c54505cf34ce5dce3fecf5", "commitAfterChange": "bd5b90f75908b7a3ed074a7be29823170f008fb4", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected Statement methodBlock(FrameworkMethod method)", "signatureAfterChange": "     protected Statement methodBlock(final FrameworkMethod method)", "diff": ["-    protected Statement methodBlock(FrameworkMethod method) {", "+    protected Statement methodBlock(final FrameworkMethod method) {", "-                    return createTest();", "+                    return createTest(method);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95eeb352f65a16725bb3cff2bf9a6cf2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestClass.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void runProtected(RunNotifier notifier, Description description, Runnable runnable)", "signatureAfterChange": "  \tpublic void runProtected(RunNotifier notifier, Description description, Runnable runnable)", "diff": ["-\t\t// TODO: (Oct 8, 2007 1:02:02 PM) passthrough", "-\t\trunProtected(new Roadie(notifier, description, null), runnable);", "+\t\t// TODO: (Oct 8, 2007 1:02:02 PM) instead of this, have a runChildren overridable method in JUnit4ClassRunner", "+\t\trunProtected(new EachTestNotifier(notifier, description), runnable, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97eed4e185f520d4dfb8c3fc52bd7f5b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "e727dd6b1cb2caa1699da3b2df7625c9554adc36", "commitAfterChange": "95bd62b2ffd80394d1a17e9078a4d79478423030", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t\tprivate Object[] computeParams() throws Exception", "signatureAfterChange": "  \t\tprivate Object[] computeParams() throws Exception", "diff": ["-\t\t\t\treturn fParameters.get(fParameterSetNumber);", "+\t\t\t\treturn fParameterList.get(fParameterSetNumber);", "-\t\t\t\t\t\tgetTestClass().getName(), getParametersMethod().getName()));\t\t\t\t", "+\t\t\t\t\t\tgetTestClass().getName(), getParametersMethod(fTestClass).getName()));", "+\t\t\t\t// TODO: (Dec 10, 2007 9:22:07 PM) Should fTestClass be protected?", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a1a5e1244afb3355af831e952be075d", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/awtui/TestRunner.java", "commitBeforeChange": "4a28bf95b3c84e93aa7fbd7c3c0b4df91557a582", "commitAfterChange": "4999b51527fa32f2c17d3488ddc4095b19fa732a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tprotected Frame createUI(String suiteName)", "signatureAfterChange": " \t \tprotected Frame createUI(String suiteName)", "diff": ["-\t\taddGrid(panel, fUseLoadingRunner, 0, 2, 2, GridBagConstraints.HORIZONTAL, \t1.0, GridBagConstraints.WEST);", "+\t\taddGrid(panel, fUseLoadingRunner, 0, 2, 2, GridBagConstraints.NONE, \t1.0, GridBagConstraints.WEST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c91f7085030ce4fedc7e104e8c38638", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/Timeout.java", "commitBeforeChange": "94aa692b0489d1fabd31c779c1a700a3b0890a24", "commitAfterChange": "544e5ba3a3034932879604b72fb6f8526d27eb50", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public Statement apply(Statement base, Description description)", "signatureAfterChange": "      public Statement apply(Statement base, Description description)", "diff": ["-        return new FailOnTimeout(base, fMillis);", "+        return new FailOnTimeout(base, fTimeout, fTimeUnit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6b6780e8c0c770a7b1a0c5b1f521489", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCore.java", "commitBeforeChange": "45eaab756edc8913b1c74e87ef3b519da6afa5fc", "commitAfterChange": "917a88fad06ce108a596a8fdb4607b1a2fbb3f3e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static void runMainAndExit(JUnitSystem system, String... args)", "signatureAfterChange": " \tprivate static void runMainAndExit(JUnitSystem system, String... args)", "diff": ["-\tpublic static void runMainAndExit(JUnitSystem system, String... args) {", "+\tprivate static void runMainAndExit(JUnitSystem system, String... args) {", "-\t\tsystem.exit(result.wasSuccessful() ? 0 : 1);", "+\t\tSystem.exit(result.wasSuccessful() ? 0 : 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce3fa61ef1c8a78d03908a33dcc0ef8b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "8134371705a43fa2b2a8913678d4336d867f6647", "commitAfterChange": "785c7859cd87dc5cb3872fef476ce2f86c9259dd", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate Description(String displayName, Class<?> clazz, Serializable uniqueId, Annotation... annotations)", "signatureAfterChange": "  \tprivate Description(Class<?> clazz, String displayName, Serializable uniqueId, Annotation... annotations)", "diff": ["-\tprivate Description(String displayName, Class<?> clazz, Serializable uniqueId, Annotation... annotations) {", "+\tprivate Description(Class<?> clazz, String displayName, Serializable uniqueId, Annotation... annotations) {", "-        fClazz = clazz;", "+\t\tfTestClass= clazz;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf31fe9ea217b181d2ea9aebe2646b5a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/experimental/validator/AnnotationValidatorFactoryTest.java", "commitBeforeChange": "1273a35689bdcb3304f6634cdc3889c61f9b1b1f", "commitAfterChange": "d3ee5d06c0b797ce812cbfe35addc6146d5f07cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void exceptionWhenValidatorIsNotAnAnnotationValidator()", "signatureAfterChange": "      @Test     public void exceptionWhenAnnotationValidatorCantBeCreated()", "diff": ["-", "-    @Test", "-    public void exceptionWhenValidatorIsNotAnAnnotationValidator() {", "-        exception.expect(RuntimeException.class);", "-        exception.expectMessage(\"Error when creating AnnotationValidator class \" +", "-                \"org.junit.experimental.validator.AnnotationValidatorFactoryTest$ValidatorThatThrowsException\");", "-", "-        ValidateWith validateWith = SampleTestWithValidatorThatThrowsException.class.getAnnotation(ValidateWith.class);", "-        new AnnotationValidatorFactory().createAnnotationValidator(validateWith);", "-    }", "+", "+    @Test", "+    public void exceptionWhenAnnotationValidatorCantBeCreated() {", "+        exception.expect(RuntimeException.class);", "+        exception.expectMessage(\"Exception received when creating AnnotationValidator class \" +", "+                \"org.junit.experimental.validator.AnnotationValidatorFactoryTest$ValidatorThatThrowsException\");", "+", "+        ValidateWith validateWith = SampleTestWithValidatorThatThrowsException.class.getAnnotation(ValidateWith.class);", "+        new AnnotationValidatorFactory().createAnnotationValidator(validateWith);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3aec6ce26da83591dbaff739115895f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/EventCollector.java", "commitBeforeChange": "df70c1087de9d3827656ede187371bbe29d2a974", "commitAfterChange": "a538d25ae50887dc9395f2f59ad5040752c0ec4f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \t@Override \tpublic void testIgnored(Description description) throws Exception", "signatureAfterChange": "  \t@Override \tpublic void testIgnored(Description description) throws Exception", "diff": ["-", "-\t@Override", "-\tpublic void testIgnored(Description description) throws Exception {", "-\t\ttestIgnored.add(description);", "-\t}", "+", "+\t@Override", "+\tpublic void testIgnored(Description description) throws Exception {", "+\t\tfTestsIgnored.add(description);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6399b40ff091c4b1a9e66a9a4fecc99", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "37a611801fbea6ecc9b6356d9616e761c8b59b91", "commitAfterChange": "d9c908b9aab5f610e2f42aba1863ce25e36423f2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprotected void printFailure(TestRunEvent each, String prefix)", "signatureAfterChange": "  \tprotected void printFailure(Failure each, String prefix)", "diff": ["-\tprotected void printFailure(TestRunEvent each, String prefix) {", "+\tprotected void printFailure(Failure each, String prefix) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa2da34b0abef3d8a055b92c0ef01c8c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "8134371705a43fa2b2a8913678d4336d867f6647", "commitAfterChange": "785c7859cd87dc5cb3872fef476ce2f86c9259dd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate Description(String displayName, Class<?> clazz, Annotation... annotations)", "signatureAfterChange": "  \tprivate Description(Class<?> clazz, String displayName, Annotation... annotations)", "diff": ["-\tprivate Description(String displayName, Class<?> clazz, Annotation... annotations) {", "-\t\tthis(displayName, clazz, displayName, annotations);", "+\tprivate Description(Class<?> clazz, String displayName, Annotation... annotations) {", "+\t\tthis(clazz, displayName, displayName, annotations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdec2914152e91bcc0b0ff9f5fbe0ea0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java", "commitBeforeChange": "90bf3119a6326671cc467386036302cc6040f752", "commitAfterChange": "34dd9f4e2bebbcf694dcb855a29edff9243a10d3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate Matcher<Long> greaterThan(final long l)", "signatureAfterChange": "  \tprivate Matcher<Long> greaterThanOrEquals(final long l)", "diff": ["-\tprivate Matcher<Long> greaterThan(final long l) {", "+\tprivate Matcher<Long> greaterThanOrEquals(final long l) {", "-\t\t\t\treturn item > l;", "+\t\t\t\treturn item >= l;", "-\t\t\t\tdescription.appendText(\"greater than \" + l);", "+\t\t\t\tdescription.appendText(\"greater than or equal\" + l);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff5797dc419ec359d3dabac8e3937c14", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "1d982e5310d57fe0ea4b63e05f20215ee3add1fe", "commitAfterChange": "24a5aad1f49b4decf946f1df701e354a18544132", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic void filter(Filter filter) throws NoTestsRemainException", "signatureAfterChange": "  \tpublic void filter(Filter filter) throws NoTestsRemainException", "diff": ["-\t\t\tif (!filter.shouldRun(methodDescription(method)))", "+\t\t\tif (!filter.shouldRun(describeChild(method)))"]}]}