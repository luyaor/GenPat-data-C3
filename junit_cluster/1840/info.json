{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c65a383cf00e78c6c9c9c6839da6d930", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "049e27680f539ffdf3de520fc6f3d34d", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/runner/TextFeedbackTest.java", "commitBeforeChange": "9a866f6c679298e64194fbfa5ef82262a792824d", "commitAfterChange": "9a629cbfbc732e6b3feb382bd10e872f84ddc510", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void testNormalOperation()", "signatureAfterChange": " \t \tpublic void testTwoTests()", "diff": ["-\tpublic void testNormalOperation() {", "-\t\tOutputStream output= new ByteArrayOutputStream();", "-\t\tPrintStream writer= new PrintStream(output);", "-\t\tTestRunner runner= new TestRunner(writer);", "-\t\tCollator c= Collator.getInstance(); ", "+\t", "+\tpublic void testTwoTests() {", "+\t\tString expected= expected(new String[]{\"..\", \"Time: 0\", \"\", \"OK (2 tests)\", \"\"});", "+\t\tTestSuite suite = new TestSuite();", "+\t\tsuite.addTest(new TestCase() { public void runTest() {}});", "+\t\tsuite.addTest(new TestCase() { public void runTest() {}});", "+\t\trunner.doRun(suite);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab809f57989d213591cadb94be832d39", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/samples/money/MoneyTest.java", "commitBeforeChange": "ce0bb8f59ea7de1ac3bb4f678f7ddf84fe9388ed", "commitAfterChange": "0bb3dfe2939cc214ee5e77556a48d4aea9c6396a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void testNormalize()", "signatureAfterChange": " \tpublic void testSimplify()", "diff": ["-\tpublic void testNormalize() {", "-\t\tMoney bag[]= { new Money(26, \"CHF\"), new Money(28, \"CHF\"), new Money(6, \"CHF\") };", "-\t\tMoneyBag moneyBag= new MoneyBag(bag);", "-\t\tMoney expected[]= { new Money(60, \"CHF\") };", "-\t\t// note: expected is still a MoneyBag", "-\t\tMoneyBag expectedBag= new MoneyBag(expected);", "-\t\tassertEquals(expectedBag, moneyBag);", "+\tpublic void testSimplify() {", "+\t\tIMoney money= MoneyBag.create(new Money(26, \"CHF\"), new Money(28, \"CHF\"));", "+\t\tassertEquals(new Money(54, \"CHF\"), money);"]}]}