{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e0ca04d03e154102e714920e0633036", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "076769cc301ebf576e708858745fd122", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "412519b20d4cb96466c03466fa003068e9fb5eca", "commitAfterChange": "8e3f361443ddf8bca21c3db661c75d374fe78dba", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \t@Override \tprotected void runChild(FrameworkMethod method, RunNotifier notifier)", "signatureAfterChange": " \t \t@Override \tprotected void runChild(FrameworkMethod method, RunNotifier notifier)", "diff": ["-\t\tDescription description= describeChild(method);", "-\t\tEachTestNotifier eachNotifier= new EachTestNotifier(notifier,", "-\t\t\t\tdescription);", "-\t\tnotifying(method, childBlock(method)).run(eachNotifier);", "+\t\tEachTestNotifier eachNotifier= makeNotifier(method, notifier);", "+\t\tif (method.isIgnored()) {", "+\t\t\teachNotifier.fireTestIgnored();", "+\t\t\treturn;", "+\t\t}", "+\t\t", "+\t\teachNotifier.fireTestStarted();", "+\t\ttry {", "+\t\t\tchildBlock(method).evaluate();", "+\t\t} catch (AssumptionViolatedException e) {", "+\t\t\teachNotifier.fireTestIgnored();", "+\t\t} catch (Throwable e) {", "+\t\t\teachNotifier.addFailure(e);", "+\t\t} finally {", "+\t\t\teachNotifier.fireTestFinished();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5692527fea128ce6e0c7fa0040e05f3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/ErrorReportingRunner.java", "commitBeforeChange": "1fcd990f60518c941a44bae2596392021614a20b", "commitAfterChange": "e07e59eb9d24f6e4fa85dd99f311c1feca6ea983", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t@Override \tprotected void runChild(Throwable child, RunNotifier notifier)", "signatureAfterChange": "  \tprivate void runCause(Throwable child, RunNotifier notifier)", "diff": ["-\t@Override", "-\tprotected void runChild(Throwable child, RunNotifier notifier) {", "-\t\tDescription description= describeChild(child);", "-\t\tnotifier.fireTestStarted(description);", "-\t\tnotifier.fireTestFailure(new Failure(description, child));", "-\t\tnotifier.fireTestFinished(description);", "-\t}", "+", "+\tprivate void runCause(Throwable child, RunNotifier notifier) {", "+\t\tDescription description= describeCause(child);", "+\t\tnotifier.fireTestStarted(description);", "+\t\tnotifier.fireTestFailure(new Failure(description, child));", "+\t\tnotifier.fireTestFinished(description);"]}]}