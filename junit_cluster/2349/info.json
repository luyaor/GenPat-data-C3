{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f53ee99a435b7f1fd92130aaf62220a8", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "654f2cd7b2d30e7f29800e4e66e19d88", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/CategoryValidator.java", "commitBeforeChange": "fe5d86eba71a1f59dbbed09de4add01cc20420c0", "commitAfterChange": "d9054149988487750679e35a349df7e0e2df5870", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Override     public List<Exception> validateAnnotatedMethod(Method method)", "signatureAfterChange": "     @Override     public List<Exception> validateAnnotatedMethod(FrameworkMethod method)", "diff": ["-    public List<Exception> validateAnnotatedMethod(Method method) {", "+    public List<Exception> validateAnnotatedMethod(FrameworkMethod method) {", "-        Annotation[] declaredAnnotations = method.getDeclaredAnnotations();", "-        for (Annotation annotation : declaredAnnotations) {", "+        Annotation[] annotations = method.getAnnotations();", "+        for (Annotation annotation : annotations) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f48d0136f81d700a47cf5ca10ea9f40c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/CategoryValidator.java", "commitBeforeChange": "f5e7e1ff180bb17e4f9df702a038e06a974f78f6", "commitAfterChange": "fe5d86eba71a1f59dbbed09de4add01cc20420c0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Override     public List<Throwable> validateAnnotatedMethod(Method method)", "signatureAfterChange": "     @Override     public List<Exception> validateAnnotatedMethod(Method method)", "diff": ["-    public List<Throwable> validateAnnotatedMethod(Method method) {", "-        List<Throwable> errors = new ArrayList<Throwable>();", "+    public List<Exception> validateAnnotatedMethod(Method method) {", "+        List<Exception> errors = new ArrayList<Exception>();", "-            for (Class clazz : fIncompatibleAnnotations) {", "+            for (Class clazz : INCOMPATIBLE_ANNOTATIONS) {", "-        return Collections.unmodifiableList(errors);", "+        return unmodifiableList(errors);"]}]}