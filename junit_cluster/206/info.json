{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c5dbd0027516ade625f33685fa2606b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d519012abb801663252643d4fe5b957", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/framework/TestResult.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic synchronized void addError(Test test, Throwable t)", "signatureAfterChange": "     public synchronized void addError(Test test, Throwable t)", "diff": ["-\t */", "-\tpublic synchronized void addError(Test test, Throwable t) {", "-\t\tfErrors.add(new TestFailure(test, t));", "-\t\tfor (TestListener each : cloneListeners())", "-\t\t\teach.addError(test, t);", "-\t}", "+     */", "+    public synchronized void addError(Test test, Throwable t) {", "+        fErrors.add(new TestFailure(test, t));", "+        for (TestListener each : cloneListeners()) {", "+            each.addError(test, t);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7394d61345fefa2cbb50c08dc4cc758f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/framework/TestResult.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic synchronized void addFailure(Test test, AssertionFailedError t)", "signatureAfterChange": "     public synchronized void addFailure(Test test, AssertionFailedError t)", "diff": ["-\t */", "-\tpublic synchronized void addFailure(Test test, AssertionFailedError t) {", "-\t\tfFailures.add(new TestFailure(test, t));", "-\t\tfor (TestListener each : cloneListeners())", "-\t\t\teach.addFailure(test, t);", "-\t}", "+     */", "+    public synchronized void addFailure(Test test, AssertionFailedError t) {", "+        fFailures.add(new TestFailure(test, t));", "+        for (TestListener each : cloneListeners()) {", "+            each.addFailure(test, t);", "+        }", "+    }"]}]}