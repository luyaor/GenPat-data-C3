{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f916656a9ccc907b106362c076ac203", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1067f201c48e6e005d9df95e813dcd09", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "cbf46b88c2937aece7018fa50ba4dbb133e03d06", "commitAfterChange": "1fa373f01d126d437f08a57a7b5e7a7ec0a01b85", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t\t@Override \t\tpublic Object createTest() throws Exception", "signatureAfterChange": "  \t\t@Override \t\tpublic Object createTest() throws Exception", "diff": ["-\t\t\t\t\tthrow new Exception(\"Wrong number of parameters and @parameter fields. @parameter fields counted: \"+fields.size()+\", available parameters: \"+fParameters.length+\".\");", "+\t\t\t\t\tthrow new Exception(\"Wrong number of parameters and @parameter fields.\"+", "+\t\t\t\t\t\" @Parameter fields counted: \"+fields.size()+\", available parameters: \"+fParameters.length+\".\");", "-\t\t\t\t\t\tthrow new Exception(getTestClass().getName() + \": Trying to set \"+field.getName()+\" with the value \"+fParameters[index]+\" that is not the right type (\"+fParameters[index].getClass().getSimpleName()+\" instead of \"+field.getType().getSimpleName()+\").\", iare);", "+\t\t\t\t\t\tthrow new Exception(getTestClass().getName() + \": Trying to set \"+field.getName()+", "+\t\t\t\t\t\t\" with the value \"+fParameters[index]+", "+\t\t\t\t\t\t\" that is not the right type (\"+fParameters[index].getClass().getSimpleName()+\" instead of \"+", "+\t\t\t\t\t\tfield.getType().getSimpleName()+\").\", iare);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "532309842ba527b672f3c3e00e2fbdf6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/categories/CategoryTest.java", "commitBeforeChange": "fa9b88f335a338f65de8ded6f4b59d0123c3e6a2", "commitAfterChange": "de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 23, "signatureBeforeChange": "      @Test     public void describeACategoryFilter()", "signatureAfterChange": "      @Test     public void describeACategoryFilter()", "diff": ["-        assertEquals(\"category \" + SlowTests.class, filter.describe());", "+        assertEquals(\"categories [\" + SlowTests.class + \"]\", filter.describe());"]}]}