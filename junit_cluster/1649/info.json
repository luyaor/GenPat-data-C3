{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1451f9301f73a6c2ec60817d49ba7974", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa43d7360a8cbe9e0260d1e6952eea26", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxCore.java", "commitBeforeChange": "378e17964a4188bad9b3d966207a2f682072148e", "commitAfterChange": "451ca12156d5704809a1feff78a10a9451cd2023", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t\t\tprivate Long getDuration(Description o1)", "signatureAfterChange": " \t \t\tprivate Long getFailure(Description o1)", "diff": ["-", "-\t\t\tprivate Long getDuration(Description o1) {", "-\t\t\t\tLong result= durations.get(o1);", "-\t\t\t\tif (result == null) result= 0L;", "-\t\t\t\treturn result;", "-\t\t\t}", "+\t", "+\t\tprivate Long getFailure(Description o1) {", "+\t\t\tLong result= fFailures.get(o1);", "+\t\t\tif (result == null) result= 0L; // 0 = \"never failed (that I know about)\"", "+\t\t\treturn result;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8aaaef2b428c51b7f37bde2e4da9e78", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxCore.java", "commitBeforeChange": "378e17964a4188bad9b3d966207a2f682072148e", "commitAfterChange": "451ca12156d5704809a1feff78a10a9451cd2023", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t\t\tpublic int compare(Description o1, Description o2)", "signatureAfterChange": " \t \t\tprivate boolean isNew(Description o1)", "diff": ["-\t\treturn new Comparator<Description>() {", "-\t\t\tpublic int compare(Description o1, Description o2) {", "-\t\t\t\t// TODO: wrong (Failures are not Descriptions)", "-\t\t\t\treturn fFailures.contains(o1) ? -1 : 1;", "-\t\t\t}", "+\t", "+\t\tprivate boolean isNew(Description o1) {", "+\t\t\treturn ! fDurations.containsKey(o1);", "+\t\t}"]}]}