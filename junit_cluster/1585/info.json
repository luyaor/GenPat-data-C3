{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "85b9b9ce3203ee1fdac67d506675721a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9115d2d5a170136b05f51f510ac04fd2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "50e3d1bc87b4b16f0617b6212252363f499397ab", "commitAfterChange": "38d91308c302eb4f0b5ed24e064ee56395f9fc01", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          @Override         public Object getValue() throws CouldNotGenerateValueException", "signatureAfterChange": "          @Override         public Object getValue() throws CouldNotGenerateValueException", "diff": ["-            } catch (Throwable e) {", "+            } catch (Throwable t) {", "-                        Assume.assumeThat(e, not(instanceOf(ignorable)));", "+                        Assume.assumeThat(t, not(instanceOf(ignorable)));", "-                throw new CouldNotGenerateValueException();", "+                throw new CouldNotGenerateValueException(t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97d09d7de428b23fa32329adace27ffb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TestWatcher.java", "commitBeforeChange": "2745d016f648e783360bd076f23b36908f8125b0", "commitAfterChange": "b064a274adb12c6e866cb08dedc70534237330b2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void failedQuietly(Throwable t, Description description,             List<Throwable> errors)", "signatureAfterChange": "      private void failedQuietly(Throwable e, Description description,             List<Throwable> errors)", "diff": ["-    private void failedQuietly(Throwable t, Description description,", "+    private void failedQuietly(Throwable e, Description description,", "-            failed(t, description);", "-        } catch (Throwable t1) {", "-            errors.add(t1);", "+            failed(e, description);", "+        } catch (Throwable e1) {", "+            errors.add(e1);"]}]}