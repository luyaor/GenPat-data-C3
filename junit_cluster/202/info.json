{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f58af94e814617755846c9eb178174ed", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ca2d94e33a70317311b00efd6f54812", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java", "commitBeforeChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "commitAfterChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t@Override \tprotected JUnit4MethodRunner wrapMethod(Method method)", "signatureAfterChange": "  \t\t@SuppressWarnings(\"unchecked\") \t\tprivate GuesserQueue createGuesserQueue(Assignments incomplete) \t\t\t\tthrows InstantiationException, IllegalAccessException", "diff": ["-\tprotected JUnit4MethodRunner wrapMethod(Method method) {", "-\t\treturn new StubbedTheoryMethodRunner(method, getTestClass());", "+", "+\t\t@SuppressWarnings(\"unchecked\")", "+\t\tprivate GuesserQueue createGuesserQueue(Assignments incomplete)", "+\t\t\t\tthrows InstantiationException, IllegalAccessException {", "+\t\t\tParameterSignature nextUnassigned= incomplete.nextUnassigned();", "+", "+\t\t\tif (nextUnassigned.hasAnnotation(Stub.class)) {", "+\t\t\t\tGuesserQueue queue= new GuesserQueue();", "+\t\t\t\tqueue.add(new Guesser(nextUnassigned.getType()));", "+\t\t\t\treturn queue;", "+\t\t\t}", "+", "+\t\t\treturn GuesserQueue.forSingleValues(incomplete.potentialsForNextUnassigned());", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5035af515d2624b92f5468c7bea4ed97", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "dca4a949f93bb85cc8ee0eb8789979a18aa3ffc7", "commitAfterChange": "cb6abf6fc729f07c5d60b0756e91af444400b4b5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 6, "signatureBeforeChange": "      protected Runner createRunnerForTest(TestWithParameters test)             throws InitializationError", "signatureAfterChange": "      private List<Runner> createRunnersForParameters(             Iterable<Object> allParameters, String namePattern,             ParametersRunnerFactory runnerFactory)             throws InitializationError,             Exception", "diff": ["-", "-    protected Runner createRunnerForTest(TestWithParameters test)", "-            throws InitializationError {", "-        return new BlockJUnit4ClassRunnerWithParameters(test);", "+    private List<Runner> createRunnersForParameters(", "+            Iterable<Object> allParameters, String namePattern,", "+            ParametersRunnerFactory runnerFactory)", "+            throws InitializationError,", "+            Exception {", "+            List<TestWithParameters> tests = createTestsForParameters(", "+                    allParameters, namePattern);", "+            List<Runner> runners = new ArrayList<Runner>();", "+            for (TestWithParameters test : tests) {", "+                runners.add(runnerFactory", "+                        .createRunnerForTestWithParameters(test));", "+            return runners;"]}]}