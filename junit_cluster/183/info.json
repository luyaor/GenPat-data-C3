{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f02098270494ca2abe28b6b93cc7d920", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "100e7c1824f470c942b97528678c8fbb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "d3de6079892fa89aa46386c0369a29b4ef9e9e3c", "commitAfterChange": "669bb577583f2edd8cd65008a7c9ac19ebc350ea", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  \tprivate boolean shouldRun(T each)", "signatureAfterChange": "  \tprivate boolean shouldRun(T each)", "diff": ["-\t\treturn fFilter == null || fFilter.shouldRun(describeChild(each));", "+\t\treturn fFilter.shouldRun(describeChild(each));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23c8cea3476a537e9968bac079f22219", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/runner/BaseTestRunner.java", "commitBeforeChange": "a0f0ee1b3f72d9361eb09b3a25156c69a748aa47", "commitAfterChange": "478f7f9217cf5da219a7ba298e3a87f405378194", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tprotected boolean useReloadingTestSuiteLoader()", "signatureAfterChange": "  \tprotected boolean useReloadingTestSuiteLoader()", "diff": ["-", "-\t\treturn getPreference(\"loading\").equals(\"true\") && !inVAJava() && fLoading;", "+\t\treturn getPreference(\"loading\").equals(\"true\") && fLoading;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a988ef78000d9088a4078d2ae71fe86", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "2adef6f30c64c5e5e14e9261637d113f7adda884", "commitAfterChange": "37a8aaba8a817b4bebbeebcd645d304601a0c8f0", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public Categories(Class<?> klass, RunnerBuilder builder) throws InitializationError", "signatureAfterChange": "      public Categories(Class<?> klass, RunnerBuilder builder) throws InitializationError", "diff": ["-        assertNoCategorizedDescendentsOfUncategorizeableParents(getDescription());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6eb577ed6cfa59de81621d9bcdaf2cb4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "d3de6079892fa89aa46386c0369a29b4ef9e9e3c", "commitAfterChange": "669bb577583f2edd8cd65008a7c9ac19ebc350ea", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  \tprivate void filterChild(T child) throws NoTestsRemainException", "signatureAfterChange": "  \tprivate void filterChild(T child) throws NoTestsRemainException", "diff": ["-\t\tif (fFilter != null)", "-\t\t\tfFilter.apply(child);", "+\t\tfFilter.apply(child);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2c1b4a0749a8b1359668f2de89803f5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/requests/ClassesRequest.java", "commitBeforeChange": "478900d7d7af563a3b75b6ca9d7d44e37e2aff5b", "commitAfterChange": "163b0fe01b06f9993a03049c4aecad4ea5d04814", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t@Override  \tpublic Runner getRunner()", "signatureAfterChange": " \t@Override  \tpublic Runner getRunner()", "diff": ["-\t\t\tif (childRunner != null) // TODO when can this happen?", "-\t\t\t\trunners.add(childRunner);", "+\t\t\trunners.add(childRunner);  // TODO David, I took out the null check after examining all the implementors of getRunner()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a50b352a0c74ced26ad094315c7b352d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "a6368e40e787e7a23c9f1e58d6a47bf9fa2d0a2c", "commitAfterChange": "94ebd93396420bcd03ab99a352e38df822d59f67", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Statement childBlock(FrameworkMethod method)", "signatureAfterChange": "  \tpublic Statement childBlock(FrameworkMethod method)", "diff": ["-\t\tlink= ignoreViolatedAssumptions(link);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b11108e161eae6986f60f88b7a0146e0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java", "commitBeforeChange": "c236a9e019a814b3542dcfe3a3a61b036c14d252", "commitAfterChange": "24cbcbc12fdd2afb7d52ff354e08213db8a62edd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \t@Test public void testsRunInParallel()", "signatureAfterChange": " \t \t@Test public void testsRunInParallel()", "diff": ["+\t", "-\t\tfOne= null;", "-\t\tfTwo= null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b440c197dc7db26b65b366249513c65e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedExceptionMatcher.java", "commitBeforeChange": "2d886e29734f9f55b75db91095880c5d109ff678", "commitAfterChange": "6bea82df32f687d636f1b843a1918a3a1ff22a6e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tvoid and(Matcher<?> matcher)", "signatureAfterChange": "  \tvoid and(Matcher<?> matcher)", "diff": ["-\t", "+", "-\t\tfCompositeMatcher= withStacktrace(createCompositeMatcher());", "+\t\tfCompositeMatcher= null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4a9c6ab04ebb028ac5a42ac9339187b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "979e8abbe974e8847668f5887403da78a6165ebc", "commitAfterChange": "1fcd990f60518c941a44bae2596392021614a20b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic BlockJUnit4ClassRunner(Class<?> klass) throws InitializationError", "signatureAfterChange": " \tpublic BlockJUnit4ClassRunner(Class<?> klass) throws InitializationError", "diff": ["-\t\tfTestMethods= computeTestMethods();", "-\t\tvalidate();"]}]}