{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "245045120654091b6ac9d535fd36d57c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b67196495faffa4dea34a771e0723c8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "  \tstatic private void failNotSame(String message, Object expected, \t\t\tObject actual)", "signatureAfterChange": "      static private void failNotSame(String message, Object expected,             Object actual)", "diff": ["-\tstatic private void failNotSame(String message, Object expected,", "-\t\t\tObject actual) {", "-\t\tString formatted= \"\";", "-\t\tif (message != null)", "-\t\t\tformatted= message + \" \";", "-\t\tfail(formatted + \"expected same:<\" + expected + \"> was not:<\" + actual", "-\t\t\t\t+ \">\");", "-\t}", "+", "+    static private void failNotSame(String message, Object expected,", "+            Object actual) {", "+        String formatted = \"\";", "+        if (message != null) {", "+            formatted = message + \" \";", "+        }", "+        fail(formatted + \"expected same:<\" + expected + \"> was not:<\" + actual", "+                + \">\");", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9266bff3b815e94544c0eedda82c8f4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/framework/TestSuite.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \t@Override \tpublic String toString()", "signatureAfterChange": "     @Override     public String toString()", "diff": ["-\t */", "-\t@Override", "-\tpublic String toString() {", "-\t\tif (getName() != null)", "-\t\t\treturn getName();", "-\t\treturn super.toString();", "-\t }", "+     */", "+    @Override", "+    public String toString() {", "+        if (getName() != null) {", "+            return getName();", "+        }", "+        return super.toString();", "+    }"]}]}