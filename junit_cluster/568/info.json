{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7b12200587c977af24113d48c4d5f190", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "686975f6836fc352ed365b18c00c9f53", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/Parameterized.java", "commitBeforeChange": "1d982e5310d57fe0ea4b63e05f20215ee3add1fe", "commitAfterChange": "24a5aad1f49b4decf946f1df701e354a18544132", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic Parameterized(Class<?> klass) throws Throwable", "signatureAfterChange": "  \tpublic Parameterized(Class<?> klass) throws Throwable", "diff": ["-\t\tsuper(klass.getName());", "+\t\tsuper(klass);", "-\t\t", "-\t\tList<Throwable> errors = new ArrayList<Throwable>();", "+", "+\t\tList<Throwable> errors= new ArrayList<Throwable>();", "-\t\t", "-\t\tint i= 0;", "-\t\tfor (final Object each : getParametersList()) {", "-\t\t\tif (each instanceof Object[])", "-\t\t\t\tadd(new TestClassRunnerForParameters(klass, (Object[])each, i++));", "-\t\t\telse", "-\t\t\t\tthrow new Exception(String.format(\"%s.%s() must return a Collection of arrays.\", fTestClass.getName(), getParametersMethod().getName()));", "+\t\tfParameters= getParametersList();", "+\t\tfor (final Object each : fParameters) {", "+\t\t\tif (!(each instanceof Object[]))", "+\t\t\t\tthrow new Exception(String.format(", "+\t\t\t\t\t\t\"%s.%s() must return a Collection of arrays.\",", "+\t\t\t\t\t\tfTestClass.getName(), getParametersMethod().getName()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68daef405cb90d9b5b9f58c76404436e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "971c9a52281458375af79e303449fe22bf91feab", "commitAfterChange": "97402a3401c6cc2d45d395c0d9d636f483b5571c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tpublic void sort(Sorter sorter)", "signatureAfterChange": "  \tpublic void sort(Sorter sorter)", "diff": ["-\t\tCollections.sort(getCachedChildren(), comparator(sorter));", "-\t\tfor (T each : getCachedChildren()) {", "-\t\t\tsorter.apply(each);", "-\t\t}", "+\t\tfSorter= sorter;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c731333cab9d2216a8666163628c8538", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "496ee866a46f783d145b649a688df57cbf79490e", "commitAfterChange": "5f7fddf537e551109ffd6241a00c87a2b3521523", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tpublic void sort(Sorter sorter)", "signatureAfterChange": "  \tpublic void sort(Sorter sorter)", "diff": ["-\t\tCollections.sort(getCachedChildren(), comparator(sorter));", "-\t\tfor (T each : getCachedChildren()) {", "-\t\t\tsorter.apply(each);", "-\t\t}", "+\t\tfSorter= sorter;"]}]}