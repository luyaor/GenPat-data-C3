{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "733aeabd95d929f3fc89708c1d05c6f5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e9549e3f14263acb0d867de7ad91e5b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/model/TestClass.java", "commitBeforeChange": "af9634a3656bcd9c3988692c32381d0772077584", "commitAfterChange": "74fe2493715dfe5b7d408411ce5d63a17398db48", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic TestClass(Class<?> klass)", "signatureAfterChange": "  \tpublic TestClass(Class<?> klass)", "diff": ["+", "-\t\t\tthrow new IllegalArgumentException(\"Test class can only have one constructor\");", "+\t\t\tthrow new IllegalArgumentException(", "+\t\t\t\t\t\"Test class can only have one constructor\");", "+", "+\t\tfor (Class<?> eachClass : getSuperClasses(fClass))", "+\t\t\tfor (Method eachMethod : eachClass.getDeclaredMethods())", "+\t\t\t\taddToAnnotationLists(new FrameworkMethod(eachMethod));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d27c8c97e8770fa8fee5124467596ec8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "41092ce4e01cc57d8aa1911e2f1169e0f355b1ae", "commitAfterChange": "3e08f69912d69189e895c279b1bece0c7c0840f4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 21, "signatureBeforeChange": "          protected String nameFor(String pattern, int index, Object[] parameters)", "signatureAfterChange": "      private static TestWithParameters createTestWithParameters(             TestClass testClass, String pattern, int index, Object[] parameters)", "diff": ["-", "-        protected String nameFor(String pattern, int index, Object[] parameters) {", "-            String finalPattern = pattern.replaceAll(\"\\\\{index\\\\}\", Integer.toString(index));", "-            String name = MessageFormat.format(finalPattern, parameters);", "-            return \"[\" + name + \"]\";", "+", "+    private static TestWithParameters createTestWithParameters(", "+            TestClass testClass, String pattern, int index, Object[] parameters) {", "+        String finalPattern = pattern.replaceAll(\"\\\\{index\\\\}\",", "+                Integer.toString(index));", "+        String name = MessageFormat.format(finalPattern, parameters);", "+        return new TestWithParameters(\"[\" + name + \"]\", testClass,", "+                Arrays.asList(parameters));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5b18afefa121fb85bf3b2d77c6ec6f3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "fcf34a36ee94cde6a5d9157a472ca65a465756ac", "commitAfterChange": "01b427b3b89ce04d01f0ddbd746d13a175feec5b", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tpublic void sort(Sorter sorter)", "signatureAfterChange": "  \tpublic void sort(Sorter sorter)", "diff": ["+\t\tfor (T each : getFilteredChildren())", "+\t\t\tsortChild(each);", "+\t\tCollections.sort(getFilteredChildren(), comparator());"]}]}