{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82c0b911bb3fd1894cae4ed93721919a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e6b359fd31af90e6357bc086d6521a3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \t \tprivate Class<? extends Throwable> getExpectedException(Test annotation)", "signatureAfterChange": "      private Class<? extends Throwable> getExpectedException(Test annotation)", "diff": ["-\t", "-\tprivate Class<? extends Throwable> getExpectedException(Test annotation) {", "-\t\tif (annotation == null || annotation.expected() == None.class)", "-\t\t\treturn null;", "-\t\telse", "-\t\t\treturn annotation.expected();", "-\t}", "+", "+    private Class<? extends Throwable> getExpectedException(Test annotation) {", "+        if (annotation == null || annotation.expected() == None.class) {", "+            return null;", "+        } else {", "+            return annotation.expected();", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c39da80b6e4f8adc7b44294ab9009e13", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t\tprivate String getName(Test test)", "signatureAfterChange": "          private String getName(Test test)", "diff": ["-\t\tprivate String getName(Test test) {", "-\t\t\tif (test instanceof TestCase)", "-\t\t\t\treturn ((TestCase) test).getName();", "-\t\t\telse", "-\t\t\t\treturn test.toString();", "-\t\t}", "+        private String getName(Test test) {", "+            if (test instanceof TestCase) {", "+                return ((TestCase) test).getName();", "+            } else {", "+                return test.toString();", "+            }", "+        }"]}]}