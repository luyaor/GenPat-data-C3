{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "02803f526810f915101025b552ebd5ee", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06a697ad2bd9da7d19cc07c869950ac0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/interceptor/Interceptors.java", "commitBeforeChange": "796e723caa0a1f75bb7b48b2454bea633fbf8e4e", "commitAfterChange": "6aa1fb428b0b6de82ca6288863ce7571b0563017", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tprotected Statement withAfters(FrameworkMethod method, Object target, \t\t\tStatement statement)", "signatureAfterChange": "  \t@Override \tprotected Statement withBefores(FrameworkMethod method, Object target, \t\t\tStatement statement)", "diff": ["-\tprotected Statement withAfters(FrameworkMethod method, Object target,", "+\tprotected Statement withBefores(FrameworkMethod method, Object target,", "-\t\t// TODO Auto-generated method stub", "-\t\treturn super.withAfters(method, target, intercept(statement, target, method));", "+\t\treturn super.withBefores(method, target, intercept(statement, target, method));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "688e30cac4d915269066c2712d2dd5b9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/interceptor/Interceptors.java", "commitBeforeChange": "3d08ecc6a661f09520559637794c9a161db90f3d", "commitAfterChange": "e5a301651a359ed4ce2c1dd81a4a73868b4dddcc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tprotected Statement withAfters(FrameworkMethod method, Object target, \t\t\tStatement statement)", "signatureAfterChange": "  \t@Override \tprotected Statement withBefores(FrameworkMethod method, Object target, \t\t\tStatement statement)", "diff": ["-\tprotected Statement withAfters(FrameworkMethod method, Object target,", "+\tprotected Statement withBefores(FrameworkMethod method, Object target,", "-\t\t// TODO Auto-generated method stub", "-\t\treturn super.withAfters(method, target, intercept(statement, target, method));", "+\t\treturn super.withBefores(method, target, intercept(statement, target, method));"]}]}