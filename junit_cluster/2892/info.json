{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f0e62fe85b266a37677106b3f48b4014", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "350a420dc56e9acb91235603ef0f8b0a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "fc7acc64dbbf5c28ef4bd3b142e35922d6294428", "commitAfterChange": "223b34b516467bcd9cb7ebc7f49549f2e7362dca", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tprivate void findLeaves(Description description, List<Description> results)", "signatureAfterChange": " \t \tprivate void findLeaves(Description parent, Description description, List<Description> results)", "diff": ["-\tprivate void findLeaves(Description description, List<Description> results) {", "+\tprivate void findLeaves(Description parent, Description description, List<Description> results) {", "-\t\t\tresults.add(description);", "+\t\t\tif (description.toString().equals(\"warning(junit.framework.TestSuite$1)\"))", "+\t\t\t\tresults.add(Description.createSuiteDescription(MALFORMED_JUNIT_3_TEST_CLASS_PREFIX + parent));", "+\t\t\telse", "+\t\t\t\tresults.add(description);", "-\t\t\t\tfindLeaves(each, results);", "+\t\t\t\tfindLeaves(description, each, results);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c19cfa458150f49734e569ee50623a8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "003f66a2e928691100fbe719d7253b5213e99698", "commitAfterChange": "d8da2f699a89857292e5e5b92945b2fe3c0a039a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tprivate void findLeaves(Description description, List<Description> results)", "signatureAfterChange": " \t \tprivate void findLeaves(Description parent, Description description, List<Description> results)", "diff": ["-\tprivate void findLeaves(Description description, List<Description> results) {", "+\tprivate void findLeaves(Description parent, Description description, List<Description> results) {", "-\t\t\tresults.add(description);", "+\t\t\tif (description.toString().equals(\"warning(junit.framework.TestSuite$1)\"))", "+\t\t\t\tresults.add(Description.createSuiteDescription(MALFORMED_JUNIT_3_TEST_CLASS_PREFIX + parent));", "+\t\t\telse", "+\t\t\t\tresults.add(description);", "-\t\t\t\tfindLeaves(each, results);", "+\t\t\t\tfindLeaves(description, each, results);"]}]}