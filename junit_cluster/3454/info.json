{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d867b613006849f6fa548f572a46d0f4", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d5d9ef68999acd45c2b7f9edd884d75", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "88e2a7611e0c9e93aefca75056ac52c46fb5799b", "commitAfterChange": "c75dcc28810aeb1c918ee7430981b31f41742ea7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public TestClass(Class<?> klass)", "signatureAfterChange": "     public TestClass(Class<?> klass)", "diff": ["-        Map<Class<? extends Annotation>, List<FrameworkMethod>> methodsForAnnotations = new HashMap<Class<? extends Annotation>, List<FrameworkMethod>>();", "-        Map<Class<? extends Annotation>, List<FrameworkField>> fieldsForAnnotations = new HashMap<Class<? extends Annotation>, List<FrameworkField>>();", "+        Map<Class<? extends Annotation>, List<FrameworkMethod>> methodsForAnnotations =", "+                new LinkedHashMap<Class<? extends Annotation>, List<FrameworkMethod>>();", "+        Map<Class<? extends Annotation>, List<FrameworkField>> fieldsForAnnotations =", "+                new LinkedHashMap<Class<? extends Annotation>, List<FrameworkField>>();", "-            for (Field eachField : eachClass.getDeclaredFields()) {", "+            for (Field eachField : getSortedDeclaredFields(eachClass)) {", "-        convertListValuesToBeUnmodifiable(methodsForAnnotations);", "-        convertListValuesToBeUnmodifiable(fieldsForAnnotations);", "+        Map<Class<? extends Annotation>, List<FrameworkMethod>> methodsForAnnotationsWithUnmodifiableLists =", "+                new LinkedHashMap<Class<? extends Annotation>, List<FrameworkMethod>>();", "+        convertListValuesToBeUnmodifiable(methodsForAnnotations, methodsForAnnotationsWithUnmodifiableLists);", "-        fMethodsForAnnotations = Collections.unmodifiableMap(methodsForAnnotations);", "-        fFieldsForAnnotations = Collections.unmodifiableMap(fieldsForAnnotations);", "+        Map<Class<? extends Annotation>, List<FrameworkField>> fieldsForAnnotationsWithUnmodifiableLists =", "+                new LinkedHashMap<Class<? extends Annotation>, List<FrameworkField>>();", "+        convertListValuesToBeUnmodifiable(fieldsForAnnotations, fieldsForAnnotationsWithUnmodifiableLists);", "+", "+        fMethodsForAnnotations = Collections.unmodifiableMap(methodsForAnnotationsWithUnmodifiableLists);", "+        fFieldsForAnnotations = Collections.unmodifiableMap(fieldsForAnnotationsWithUnmodifiableLists);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67e32b0c95e0e6fa3687a269c80be91d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "df88873d5013e400489550cf15e9b51dc438eb4b", "commitAfterChange": "862f41cbc1757a4783b725c23588d41219735b72", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public TestClass(Class<?> klass)", "signatureAfterChange": "     public TestClass(Class<?> klass)", "diff": ["-        Map<Class<? extends Annotation>, List<FrameworkMethod>> methodsForAnnotationsWithUnmodifiableLists =", "-                new LinkedHashMap<Class<? extends Annotation>, List<FrameworkMethod>>();", "-        convertListValuesToBeUnmodifiable(methodsForAnnotations, methodsForAnnotationsWithUnmodifiableLists);", "-", "-        Map<Class<? extends Annotation>, List<FrameworkField>> fieldsForAnnotationsWithUnmodifiableLists =", "-                new LinkedHashMap<Class<? extends Annotation>, List<FrameworkField>>();", "-        convertListValuesToBeUnmodifiable(fieldsForAnnotations, fieldsForAnnotationsWithUnmodifiableLists);", "-", "-        fMethodsForAnnotations = Collections.unmodifiableMap(methodsForAnnotationsWithUnmodifiableLists);", "-        fFieldsForAnnotations = Collections.unmodifiableMap(fieldsForAnnotationsWithUnmodifiableLists);", "+        fMethodsForAnnotations = makeDeeplyUnmodifiable(methodsForAnnotations);", "+        fFieldsForAnnotations = makeDeeplyUnmodifiable(fieldsForAnnotations);"]}]}