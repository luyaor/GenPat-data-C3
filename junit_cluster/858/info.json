{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f989db09ddcd3441e2f78ab41502196", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a93ad70a0aa43ebb2e36fdc6b7d39d3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprivate void handleException(Throwable e) throws Throwable", "signatureAfterChange": "      private void handleException(Throwable e) throws Throwable", "diff": ["-\tprivate void handleException(Throwable e) throws Throwable {", "-\t\tif (fMatcherBuilder.expectsThrowable())", "-\t\t\tassertThat(e, fMatcherBuilder.build());", "-\t\telse", "-\t\t\tthrow e;", "-\t}", "+    private void handleException(Throwable e) throws Throwable {", "+        if (fMatcherBuilder.expectsThrowable()) {", "+            assertThat(e, fMatcherBuilder.build());", "+        } else {", "+            throw e;", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e253964579e974883687188c918bc8d3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tstatic public void assertEquals(String message, float expected, \t\t\tfloat actual, float delta)", "signatureAfterChange": "     static public void assertEquals(String message, float expected,             float actual, float delta)", "diff": ["-\t */", "-\tstatic public void assertEquals(String message, float expected,", "-\t\t\tfloat actual, float delta) {", "-\t\tif (Float.compare(expected, actual) == 0)", "-\t\t\treturn;", "-\t\tif (!(Math.abs(expected - actual) <= delta))", "-\t\t\tfailNotEquals(message, new Float(expected), new Float(actual));", "-\t\t}", "+     */", "+    static public void assertEquals(String message, float expected,", "+            float actual, float delta) {", "+        if (Float.compare(expected, actual) == 0) {", "+            return;", "+        }", "+        if (!(Math.abs(expected - actual) <= delta)) {", "+            failNotEquals(message, new Float(expected), new Float(actual));", "+        }", "+    }"]}]}