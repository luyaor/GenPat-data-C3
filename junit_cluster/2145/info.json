{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d205c0fee2edb03c3d27473d2b9f9f82", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "017869bb8ca11f0bc1f65c78017d66e7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "a07f1be1bc7eb7f7d757da48d0a3110452cca4d4", "commitAfterChange": "095d3f8df0708f98d41f5894a892388b6985c44f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void validateConstructor(List<Throwable> errors)", "signatureAfterChange": " \t \tprivate void validateConstructor(List<Throwable> errors)", "diff": ["+\t", "+\tprivate void validateConstructor(List<Throwable> errors) {", "+\t\tvalidateOnlyOneConstructor(errors);", "+\t\tvalidateZeroArgConstructor(errors);", "+\t}", "-\tprotected void validateConstructor(List<Throwable> errors) {", "-\t\tConstructor<?>[] constructors= getTestClass().getJavaClass()", "-\t\t\t\t.getConstructors();", "-\t\tif (!(constructors.length == 1 && ", "-\t\t\t\tconstructors[0].getParameterTypes().length == 0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a726eebf8566b27ede8ef3f8df5bf00c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "a07f1be1bc7eb7f7d757da48d0a3110452cca4d4", "commitAfterChange": "095d3f8df0708f98d41f5894a892388b6985c44f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t\t@Override \t\tprotected void validateConstructor(List<Throwable> errors)", "signatureAfterChange": "  \t\t@Override \t\tprotected void validateZeroArgConstructor(List<Throwable> errors)", "diff": ["-\t\tprotected void validateConstructor(List<Throwable> errors) {", "-\t\t\tConstructor<?>[] constructors= getTestClass().getJavaClass()", "-\t\t\t\t\t.getConstructors();", "-\t\t\tif (!(constructors.length == 1)) {", "-\t\t\t\tString gripe= \"Test class should have exactly one public constructor\";", "-\t\t\t\terrors.add(new Exception(gripe));", "-\t\t\t}", "+\t\tprotected void validateZeroArgConstructor(List<Throwable> errors) {", "+\t\t\t// constructor can, nay, should have args."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe35cf94f631ecaf437cdfb008b5fedd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "e07e59eb9d24f6e4fa85dd99f311c1feca6ea983", "commitAfterChange": "5d957024be0d1b181879d48b7915b3b8aad8f5d5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tprotected void collectInitializationErrors(List<Throwable> errors)", "signatureAfterChange": "  \t@Override \tprotected void collectInitializationErrors(List<Throwable> errors)", "diff": ["+\t\tsuper.collectInitializationErrors(errors);", "+\t\tvalidateDataPointFields(errors);", "+\t\t// TODO: validate theory methods", "+\t}"]}]}