{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6291e31b6a419a8e5a95deefab4cbfc9", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "394168b7154519c3c755680b393bf65c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/junit/samples/ListTest.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void testCapacity()", "signatureAfterChange": "      public void testCapacity()", "diff": ["-\t}", "-\tpublic void testCapacity() {", "-\t\tint size= fFull.size(); ", "-\t\tfor (int i= 0; i < 100; i++)", "-\t\t\tfFull.add(new Integer(i));", "-\t\tassertTrue(fFull.size() == 100+size);", "-\t}", "+", "+    public void testCapacity() {", "+        int size = fFull.size();", "+        for (int i = 0; i < 100; i++) {", "+            fFull.add(new Integer(i));", "+        }", "+        assertTrue(fFull.size() == 100 + size);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "834fc95210d9a1bfc0fdc00cf7fdbe2e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/samples/ListTest.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t@Ignore(\"not today\") @Test public void capacity()", "signatureAfterChange": "      @Ignore(\"not today\")     @Test     public void capacity()", "diff": ["-\t}", "-\t@Ignore(\"not today\") @Test public void capacity() {", "-\t\tint size= fFull.size(); ", "-\t\tfor (int i= 0; i < 100; i++)", "-\t\t\tfFull.add(i);", "-\t\tassertTrue(fFull.size() == 100+size);", "-\t}", "+", "+    @Ignore(\"not today\")", "+    @Test", "+    public void capacity() {", "+        int size = fFull.size();", "+        for (int i = 0; i < 100; i++) {", "+            fFull.add(i);", "+        }", "+        assertTrue(fFull.size() == 100 + size);", "+    }"]}]}