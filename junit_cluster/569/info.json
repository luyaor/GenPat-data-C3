{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a458fa3eb8ee0edf08795c0c13a215e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7a093dec99d0817a7fbf1a17eb6dc5e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "b508fe73c26345550b13bc8ee131090f7a27b534", "commitAfterChange": "32330b13f2ded8603665264f8400ddf1f6dd969a", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      @Test public void testNameAsc()", "signatureAfterChange": "      @Test public void testNameAsc()", "diff": ["-        // see http://bugs.sun.com/view_bug.do?bug_id=7023180 for why two alternatives are possible", "-        final String expectedAlternative1 = Arrays.asList(ALPHA, BETA, DELTA, EPSILON, GAMMA_VOID, GAMMA_BOOLEAN).toString();", "-        final String expectedAlternative2 = Arrays.asList(ALPHA, BETA, DELTA, EPSILON, GAMMA_BOOLEAN, GAMMA_VOID).toString();", "-", "-        assertThat(declaredMethods(DummySortWithNameAsc.class), anyOf(equalTo(expectedAlternative1), equalTo(expectedAlternative2)));", "+        String[] expected= new String[] { ALPHA, BETA, DELTA, EPSILON, GAMMA_VOID, GAMMA_BOOLEAN };", "+        assertEquals(Arrays.asList(expected).toString(), declaredMethods(DummySortWithNameAsc.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e48a5b6ef721e8b1e32c1df480b8eabf", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "6f74b19789ee42cc51193315e16a632fadc0a903", "commitAfterChange": "c360ca09cd3305eaf6e3f3026a6ee96d7e1ba65d", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      @Test public void testNameAsc()", "signatureAfterChange": "      @Test public void testNameAsc()", "diff": ["-        String[] expected= new String[] { ALPHA, BETA, DELTA, EPSILON, GAMMA_VOID, GAMMA_BOOLEAN };", "-        assertEquals(Arrays.asList(expected).toString(), declaredMethods(DummySortWithNameAsc.class));", "+        // see http://bugs.sun.com/view_bug.do?bug_id=7023180 for why two alternatives are possible", "+        final String expectedAlternative1 = Arrays.asList(ALPHA, BETA, DELTA, EPSILON, GAMMA_VOID, GAMMA_BOOLEAN).toString();", "+        final String expectedAlternative2 = Arrays.asList(ALPHA, BETA, DELTA, EPSILON, GAMMA_BOOLEAN, GAMMA_VOID).toString();", "+", "+        assertThat(declaredMethods(DummySortWithNameAsc.class), anyOf(equalTo(expectedAlternative1), equalTo(expectedAlternative2)));"]}]}