{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5e03e73406bb540c26fa531bed711d6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbb18fa1b8e1a33ce241ae7b9f49ddc7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/interceptor/VerifierInterceptorTest.java", "commitBeforeChange": "077d4657cce12a38d4f34266fc62c190b28235a9", "commitAfterChange": "23cee0d142da2296c7a1dad7129da784ad9eb3f7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \t@Test public void usedErrorCollectorTwiceShouldFail()", "signatureAfterChange": " \t \t@Test public void usedErrorCollectorTwiceShouldFail()", "diff": ["-\t\tassertThat(testResult(UsesErrorCollectorTwice.class), hasFailureContaining(\"first thing went wrong\"));", "-\t\tassertThat(testResult(UsesErrorCollectorTwice.class), hasFailureContaining(\"second thing went wrong\"));", "+\t\tPrintableResult testResult= testResult(UsesErrorCollectorTwice.class);", "+\t\tassertThat(testResult, hasFailureContaining(\"first thing went wrong\"));", "+\t\tassertThat(testResult, hasFailureContaining(\"second thing went wrong\"));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cacd00ab268c63c84faa3ec46b6a024e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/interceptor/VerifierInterceptorTest.java", "commitBeforeChange": "11258fcfd07dd63754fbea374bbba59ea82bc685", "commitAfterChange": "50b77b1f3108aa77af0906162d552e513936c322", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \t@Test public void usedErrorCollectorTwiceShouldFail()", "signatureAfterChange": " \t \t@Test public void usedErrorCollectorTwiceShouldFail()", "diff": ["-\t\tassertThat(testResult(UsesErrorCollectorTwice.class), hasFailureContaining(\"first thing went wrong\"));", "-\t\tassertThat(testResult(UsesErrorCollectorTwice.class), hasFailureContaining(\"second thing went wrong\"));", "+\t\tPrintableResult testResult= testResult(UsesErrorCollectorTwice.class);", "+\t\tassertThat(testResult, hasFailureContaining(\"first thing went wrong\"));", "+\t\tassertThat(testResult, hasFailureContaining(\"second thing went wrong\"));", "+\t}"]}]}