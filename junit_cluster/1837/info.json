{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "010c64de90cb9bf162322bab1f452929", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "797e74920b69642c1edbce171177de03", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "e727dd6b1cb2caa1699da3b2df7625c9554adc36", "commitAfterChange": "95bd62b2ffd80394d1a17e9078a4d79478423030", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tprivate void printIgnorances(Result result)", "signatureAfterChange": " \t \tprivate void printIgnorances(Result result)", "diff": ["+\t", "-\t\tprintExceptions(\"ignored test\", \"IGNORED TEST \", result.getIgnorances());", "+\t\t// TODO: (Dec 13, 2007 12:57:04 AM) DUP", "+", "+\t\tif (result.getIgnorances().size() == 0)", "+\t\t\treturn;", "+\t\tif (result.getIgnorances().size() == 1)", "+\t\t\t// TODO: (Dec 13, 2007 12:55:01 AM) test this back in", "+", "+\t\t\tgetWriter().println(\"There was \" + result.getIgnorances().size() + \" \" + \"ignored test\" + \":\");", "+\t\telse", "+\t\t\tgetWriter().println(\"There were \" + result.getIgnorances().size() + \" \" + \"ignored test\" + \"s:\");", "+\t\tfor (Ignorance each : result.getIgnorances()) {", "+\t\t\t// TODO: (Dec 13, 2007 12:57:12 AM) Cheating", "+", "+\t\t\tgetWriter().println(\"IGNORED TEST 1) \" + each.getReason());", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ab161d474cef699214dc737b90b2870", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "37a611801fbea6ecc9b6356d9616e761c8b59b91", "commitAfterChange": "d9c908b9aab5f610e2f42aba1863ce25e36423f2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprotected void printFailures(Result result)", "signatureAfterChange": "  \tprotected void printFailures(Result result)", "diff": ["-\t\tprintEvents(\"failure\", \"\", result.getFailures());", "-\t}", "+\t\tList<Failure> failures= result.getFailures();", "+\t\tif (failures.size() == 0)", "+\t\tif (failures.size() == 1)", "+\t\t\tgetWriter().println(\"There was \" + failures.size() + \" failure:\");", "+\t\t\tgetWriter().println(\"There were \" + failures.size() + \" failures:\");", "+\t\tfor (Failure each : failures)", "+\t\t\tprintFailure(each, \"\" + i++);"]}]}