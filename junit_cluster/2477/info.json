{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9319cc293138ea128beb0b37bf6b42ba", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "129af4f2c2320b481e2887fde8b42efc", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t\tpublic int compare(Description o1, Description o2)", "signatureAfterChange": "         public int compare(Description o1, Description o2)", "diff": ["-\tprivate class TestComparator implements Comparator<Description> {", "-\t\tpublic int compare(Description o1, Description o2) {", "-\t\t\t// Always prefer new tests", "-\t\t\tif (isNewTest(o1))", "-\t\t\t\treturn -1;", "-\t\t\tif (isNewTest(o2))", "-\t\t\t\treturn 1;", "-\t\t\t// Then most recently failed first", "-\t\t\tint result= getFailure(o2).compareTo(getFailure(o1));", "-\t\t\treturn result != 0 ? result", "-\t\t\t// Then shorter tests first", "-\t\t\t\t\t: getTestDuration(o1).compareTo(getTestDuration(o2));", "-\t\t}", "+    private class TestComparator implements Comparator<Description> {", "+        public int compare(Description o1, Description o2) {", "+            // Always prefer new tests", "+            if (isNewTest(o1)) {", "+                return -1;", "+            }", "+            if (isNewTest(o2)) {", "+                return 1;", "+            }", "+            // Then most recently failed first", "+            int result = getFailure(o2).compareTo(getFailure(o1));", "+            return result != 0 ? result", "+                    // Then shorter tests first", "+                    : getTestDuration(o1).compareTo(getTestDuration(o2));", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ee7c7561400b2e8d62c4b2c9f4ad987", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxCore.java", "commitBeforeChange": "378e17964a4188bad9b3d966207a2f682072148e", "commitAfterChange": "451ca12156d5704809a1feff78a10a9451cd2023", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t\t\tpublic int compare(Description o1, Description o2)", "signatureAfterChange": " \t\tpublic int compare(Description o1, Description o2)", "diff": ["-\t\tCollections.sort(tests, new Comparator<Description>() {", "-\t\t\tpublic int compare(Description o1, Description o2) {", "-\t\t\t\treturn getDuration(o1).compareTo(getDuration(o2));", "-\t\t\t}", "+\tprivate class TestComparator implements Comparator<Description> {", "+\t\tpublic int compare(Description o1, Description o2) {", "+\t\t\t// Always prefer new tests", "+\t\t\tif (isNew(o1))", "+\t\t\t\treturn -1;", "+\t\t\tif (isNew(o2))", "+\t\t\t\treturn 1;", "+\t\t\t// Then most recently failed first", "+\t\t\tint result= getFailure(o2).compareTo(getFailure(o1)); ", "+\t\t\treturn result != 0", "+\t\t\t\t? result", "+\t\t\t\t// Then shorter tests first", "+\t\t\t\t: fDurations.get(o1).compareTo(fDurations.get(o2));", "+\t\t}"]}]}