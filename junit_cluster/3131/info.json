{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a06187da41415dbcf1d3fa6a585b09fc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afdb9aa11f9d575b3c1fa5f1f325f240", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "248bdb8248d80ac57d8b485ef73e758103a0c312", "commitAfterChange": "18299dc8f8aaae0e64345795b2884eb7f42ad460", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate static FrameworkMethod getParametersMethod(TestClass testClass) \t\t\tthrows Exception", "signatureAfterChange": "  \tprivate static FrameworkMethod getParametersMethod(Class<?> klass) \t\t\tthrows Exception", "diff": ["-\tprivate static FrameworkMethod getParametersMethod(TestClass testClass)", "+\tprivate static FrameworkMethod getParametersMethod(Class<?> klass)", "-\t\tList<FrameworkMethod> methods= testClass", "+\t\tList<FrameworkMethod> methods= new TestClass(klass)", "-\t\t\t\t+ testClass.getName());", "+\t\t\t\t+ klass.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d981508566190fa10abe55f6f26c8d6c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "982a75011a074ab25f2c96a1c2639c5b1ebb3b18", "commitAfterChange": "5475e12b57f5af0140deffa7f45c75dc47803167", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tprivate FrameworkMethod getParametersMethod(TestClass testClass) \t\t\tthrows Exception", "signatureAfterChange": "  \tprivate FrameworkMethod getParametersMethod() \t\t\tthrows Exception", "diff": ["-\tprivate FrameworkMethod getParametersMethod(TestClass testClass)", "+\tprivate FrameworkMethod getParametersMethod()", "-\t\tList<FrameworkMethod> methods= testClass", "+\t\tList<FrameworkMethod> methods= getTestClass()", "-\t\t\tint modifiers= each.getMethod().getModifiers();", "-\t\t\tif (Modifier.isStatic(modifiers) && Modifier.isPublic(modifiers))", "+\t\t\tif (each.isStatic() && each.isPublic())", "-\t\t\t\t+ testClass.getName());", "+\t\t\t\t+ getTestClass().getName());"]}]}