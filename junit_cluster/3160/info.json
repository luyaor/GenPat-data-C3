{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1130a313c5b26859ccd081c5b48696e3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70b91d0beeee08c3ca387d3433853e67", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java", "commitBeforeChange": "3aca014a2c39723febbe7def2fd132da80c3f4a9", "commitAfterChange": "2c6c142aa801cef3520ca668e75a670a32b4859a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     public void dataPointsMustBePublic()", "signatureAfterChange": "      @Test     public void dataPointFieldsMustBePublic()", "diff": ["-    public void dataPointsMustBePublic() {", "-                testResult(DataPointsMustBePublic.class),", "-                allOf(failureCountIs(3),", "-                        hasFailureContaining(\"DataPoint field THREE must be public\"),", "-                        hasFailureContaining(\"DataPoint field FOUR must be public\"),", "-                        hasFailureContaining(\"DataPoint field FIVE must be public\")));", "+", "+    @Test", "+    public void dataPointFieldsMustBePublic() {", "+        PrintableResult result = testResult(DataPointFieldsMustBePublic.class);        ", "+        assertEquals(6, result.failureCount());", "+", "+        assertThat(result,", "+                allOf(hasFailureContaining(\"DataPoint field THREE must be public\"),", "+                      hasFailureContaining(\"DataPoint field THREES must be public\"),", "+                      hasFailureContaining(\"DataPoint field FOUR must be public\"),", "+                      hasFailureContaining(\"DataPoint field FOURS must be public\"),", "+                      hasFailureContaining(\"DataPoint field FIVE must be public\"),", "+                      hasFailureContaining(\"DataPoint field FIVES must be public\")));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9604b892e49b2e605856a5321794b71", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java", "commitBeforeChange": "3aca014a2c39723febbe7def2fd132da80c3f4a9", "commitAfterChange": "2c6c142aa801cef3520ca668e75a670a32b4859a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void dataPointsMustBeStatic()", "signatureAfterChange": "      @Test     public void dataPointFieldsMustBeStatic()", "diff": ["-", "-    @Test", "-    public void dataPointsMustBeStatic() {", "-        assertThat(", "-                testResult(DataPointsMustBeStatic.class),", "-                CoreMatchers.<PrintableResult>both(failureCountIs(2))", "-                        .and(", "-                                hasFailureContaining(\"DataPoint field THREE must be static\"))", "-                        .and(", "-                                hasFailureContaining(\"DataPoint field FOUR must be static\")));", "-    }", "+    public void dataPointFieldsMustBeStatic() {", "+                testResult(DataPointFieldsMustBeStatic.class),", "+                CoreMatchers.<PrintableResult>both(failureCountIs(2))", "+                        .and(", "+                                hasFailureContaining(\"DataPoint field THREE must be static\"))", "+                        .and(", "+                                hasFailureContaining(\"DataPoint field FOURS must be static\")));", "+    }"]}]}