{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96e7a5c088e7503a7337c573c800b8ba", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16c879508da4aa4d69dfb36325876d52", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "48af7e797dbefa1fc47e80394c7f74ef87c3c7ab", "commitAfterChange": "85f9d8397bfd96261c3214284672180c522e2d38", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private boolean hasValidatorAnnotation(Annotation annotation)", "signatureAfterChange": "      private boolean hasValidatorAnnotation(Class<? extends Annotation> annotationType)", "diff": ["-        Annotation[] annotations = annotation.annotationType().getAnnotations();", "+", "+    private boolean hasValidatorAnnotation(Class<? extends Annotation> annotationType) {", "+        Annotation[] annotations = annotationType.getAnnotations();", "-            if (Validator.class.isAssignableFrom(current.getClass())) {", "+            if (ValidateWith.class.isAssignableFrom(current.getClass())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa17e68ceca0ffa2082e7ed14d7c40fe", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/experimental/validator/AnnotationValidatorFactoryTest.java", "commitBeforeChange": "1273a35689bdcb3304f6634cdc3889c61f9b1b1f", "commitAfterChange": "d3ee5d06c0b797ce812cbfe35addc6146d5f07cb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void nullArgumentReturnsDefaultAnnotationValidator()", "signatureAfterChange": "          public Class<? extends Annotation> annotationType()", "diff": ["-    public void nullArgumentReturnsDefaultAnnotationValidator() {", "-        AnnotationValidator annotationValidator = new AnnotationValidatorFactory().createAnnotationValidator(null);", "-        assertThat(annotationValidator, is(instanceOf(AnnotationValidator.class)));", "-    }", "+", "+        public Class<? extends Annotation> annotationType() {", "+            return ValidateWith.class;"]}]}