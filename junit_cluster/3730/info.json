{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c4564df84335b3f511e8726fe26829b8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0229c3f2bfc929780258fec82173c4f7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/assertion/BothTest.java", "commitBeforeChange": "017ce048adbc360fed2e8d7ae55dfbb3dbdc76dc", "commitAfterChange": "4e2455b1f142bdf8f07383082638718695e51224", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Test \tpublic void eitherPasses()", "signatureAfterChange": "  \t@Test \tpublic void eitherPasses()", "diff": ["-\t\tassertThat(3, either(sameInstance(3)).or(sameInstance(4)));", "-\t\tassertThat(3, either(matches(is(String.class))).or(", "-\t\t\t\tmatches(is(Integer.class))));", "-\t\tassertThat(\"a\", either(sameInstance(\"a\")).or(sameInstance(\"b\")));", "-\t}", "+\t\tassertThat(3, either(is(3)).or(is(4)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fc2cfa82cffd4e6489dae9ad383f4fa", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java", "commitBeforeChange": "41f96743522db61b14ef2c8ca7d719a226b9f153", "commitAfterChange": "bb13b318cd79a68470e93c79635090c7bb565475", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Parameters     public static Collection<Object[]> testsWithEventMatcher()", "signatureAfterChange": "      @Parameters     public static Collection<Object[]> testsWithEventMatcher()", "diff": ["-                {ThrowExpectedAssumptionViolatedException.class,", "-                        everyTestRunSuccessful()},", "-                {ThrowAssumptionViolatedExceptionButExpectOtherType.class,", "-                        hasSingleFailure()},", "-                {", "-                        ThrowAssumptionViolatedExceptionButExpectOtherType.class,", "-                        hasSingleFailureWithMessage(containsString(\"Stacktrace was: org.junit.internal.AssumptionViolatedException\"))},", "-                {ViolateAssumptionAndExpectException.class,", "+                {ExpectAssertionErrorWhichIsNotThrown.class, hasSingleFailure()},", "+                {FailedAssumptionAndExpectException.class,", "-                {ThrowExpectedAssertionError.class, everyTestRunSuccessful()},", "-                {", "-                        DontThrowAssertionErrorButExpectOne.class,", "-                        hasSingleFailureWithMessage(\"Expected test to throw an instance of java.lang.AssertionError\")},", "-                {", "-                        ThrowUnexpectedAssertionError.class,", "-                        hasSingleFailureWithMessage(startsWith(\"\\nExpected: an instance of java.lang.NullPointerException\"))},", "-                {FailAndDontHandleAssertinErrors.class,", "+                {FailBeforeExpectingException.class,"]}]}