{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce4a9ca72d29e42ee184555b7e904d6e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "112c859cdd0c622b50b25471e2217894", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/runner/WithDataPointFields.java", "commitBeforeChange": "1fe4f2534d39f819eae3ae1a6e6169c651b0a8a8", "commitAfterChange": "f98130957df08de9cae93169298e04bf84388cae", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \t@Test \tpublic void honorExpected() throws Exception", "signatureAfterChange": "  \t@Ignore(\"until construction is handled in TestMethod\") \t@Test \tpublic void honorConstructorParameters()", "diff": ["-", "-\t@Test", "-\tpublic void honorExpected() throws Exception {", "-\t\tassertThat(testResult(HonorExpectedException.class).getFailures()", "-\t\t\t\t.size(), is(1));", "-\t}", "+", "+\t@Ignore(\"until construction is handled in TestMethod\")", "+\t@Test", "+\tpublic void honorConstructorParameters() {", "+\t\tassertThat(testResult(PositiveInts.class), isSuccessful());", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2468ded6dc6b5730ae9d764b8d1ffcb4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "db9a456f1cff2de765b0dd979bca020636dc88d0", "commitAfterChange": "c610a49727858597d9a10289bed0a0174053a69f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private static String declaredMethods(Class<?> c)", "signatureAfterChange": "          private String declaredMethods(Class<?> clazz)", "diff": ["-", "-    private static String declaredMethods(Class<?> c) {", "-        return Arrays.toString(MethodSorter.getDeclaredMethods(c)).replace(c.getName() + '.', \"\");", "-    }", "+    ", "+    private String declaredMethods(Class<?> clazz) {", "+        return toString(clazz, MethodSorter.getDeclaredMethods(clazz));", "+    }"]}]}