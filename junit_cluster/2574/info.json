{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cef0f2bdfa31855c1319983495b1f70a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48efba0970c59e43697d295ca86b78d1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "f49fb25b6fbffcc7a68b28824ed3856ffa9d6fdd", "commitAfterChange": "078e45bd31a9920e00633ad6ce658e22529304f2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tprotected void collectInitializationErrors(List<Throwable> errors)", "signatureAfterChange": " \t \tprotected void validate() throws InitializationError", "diff": ["+\t", "+\tprotected void validate() throws InitializationError {", "+\t\tMethodValidator methodValidator= new MethodValidator(fTestClass);", "+\t\tmethodValidator.validateMethodsForDefaultRunner();", "+\t\tmethodValidator.assertValid();", "-\tprotected void collectInitializationErrors(List<Throwable> errors) {", "-\t\tgetTestClass().validateMethodsForDefaultRunner(errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5265741c60be9513c73ab9e0af5fa83d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "commitAfterChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprotected void validate() throws InitializationError", "signatureAfterChange": "  \tprivate void validate() throws InitializationError", "diff": ["-\t", "-\tprotected void validate() throws InitializationError {", "-\t\tMethodValidator methodValidator= new MethodValidator(fTestClass);", "-\t\tmethodValidator.validateMethodsForDefaultRunner();", "-\t\tmethodValidator.assertValid();", "+", "+\tprivate void validate() throws InitializationError {", "+\t\tList<Throwable> errors= new ArrayList<Throwable>();", "+\t\tcollectInitializationErrors(errors);", "+\t\tif (!errors.isEmpty())", "+\t\t\tthrow new InitializationError(errors);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b79ce0659f167e10b122e572000a5c3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \tprivate void validate() throws InitializationError", "signatureAfterChange": "      private void validate() throws InitializationError", "diff": ["-\tprivate void validate() throws InitializationError {", "-\t\tList<Throwable> errors= new ArrayList<Throwable>();", "-\t\tcollectInitializationErrors(errors);", "-\t\tif (!errors.isEmpty())", "-\t\t\tthrow new InitializationError(errors);", "-\t}", "+", "+    private void validate() throws InitializationError {", "+        List<Throwable> errors = new ArrayList<Throwable>();", "+        collectInitializationErrors(errors);", "+        if (!errors.isEmpty()) {", "+            throw new InitializationError(errors);", "+        }", "+    }"]}]}