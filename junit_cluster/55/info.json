{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a8a52aba27641920a1992acc763ba81", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b9e37da4b23750f84d09d60a59119eb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "6664bd272c43bcdf00f9ef9ce6f2d73af82036b1", "commitAfterChange": "d6c79c0f626afd12506b6a5a672cdec84683c3ca", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \t@Test \tpublic void correctErrorFromMalformedTestSqueeze2()", "signatureAfterChange": "  \t@Test \tpublic void rememberOldRunsSqueeze()", "diff": ["+", "+\t@Test", "+\tpublic void rememberOldRunsSqueeze() {", "+\t\tfMax.run(TwoUnEqualTests.class);", "+\t\tString storedResults= fMax.fHistory.getFolder();", "+", "+\t\tMaxCore reincarnation= MaxCore.forFolder(storedResults);", "+\t\ttry {", "+\t\t\tList<Failure> failures= run(reincarnation)", "+\t\t\t\t\t.getFailures();", "+\t\t\tassertEquals(\"fast\", failures.get(0).getDescription()", "+\t\t\t\t\t.getMethodName());", "+\t\t\tassertEquals(\"slow\", failures.get(1).getDescription()", "+\t\t\t\t\t.getMethodName());", "+\t\t} finally {", "+\t\t\treincarnation.fHistory.forget();", "+\t\t}", "+\t}", "-", "-\t@Test", "-\tpublic void correctErrorFromMalformedTestSqueeze2() {", "-\t\tRequest request= Request.aClass(MalformedJUnit38TestMethod.class);", "-\t\tassertFalse(request instanceof SortingRequest);", "-\t\tList<Description> leaves= fMax.findLeaves(request);", "-\t\tCollections.sort(leaves, fMax.testComparator());", "-\t\tDescription each= leaves.get(0);", "-\t\tassertFalse(each.toString().equals(\"TestSuite with 0 tests\"));", "-\t\tassertEquals(MalformedJUnit38TestMethod.class.getName(), each", "-\t\t\t\t.toString());", "-\t\tString name= each.getClassName();", "-\t\tassertNotNull(name);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a481a70f3299469ec15f4dcf1e46076c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "6eb76c8b08c738823546fe5b935b653951fc773e", "commitAfterChange": "474df716f498aa2695c422cceb3e46cad999e972", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \t@Test \tpublic void correctErrorFromMalformedTestSqueeze2()", "signatureAfterChange": "  \t@Test \tpublic void rememberOldRunsSqueeze()", "diff": ["+", "+\t@Test", "+\tpublic void rememberOldRunsSqueeze() {", "+\t\tfMax.run(TwoUnEqualTests.class);", "+\t\tString storedResults= fMax.fHistory.getFolder();", "+", "+\t\tMaxCore reincarnation= MaxCore.forFolder(storedResults);", "+\t\ttry {", "+\t\t\tList<Failure> failures= run(reincarnation)", "+\t\t\t\t\t.getFailures();", "+\t\t\tassertEquals(\"fast\", failures.get(0).getDescription()", "+\t\t\t\t\t.getMethodName());", "+\t\t\tassertEquals(\"slow\", failures.get(1).getDescription()", "+\t\t\t\t\t.getMethodName());", "+\t\t} finally {", "+\t\t\treincarnation.fHistory.forget();", "+\t\t}", "+\t}", "-", "-\t@Test", "-\tpublic void correctErrorFromMalformedTestSqueeze2() {", "-\t\tRequest request= Request.aClass(MalformedJUnit38TestMethod.class);", "-\t\tassertFalse(request instanceof SortingRequest);", "-\t\tList<Description> leaves= fMax.findLeaves(request);", "-\t\tCollections.sort(leaves, fMax.testComparator());", "-\t\tDescription each= leaves.get(0);", "-\t\tassertFalse(each.toString().equals(\"TestSuite with 0 tests\"));", "-\t\tassertEquals(MalformedJUnit38TestMethod.class.getName(), each", "-\t\t\t\t.toString());", "-\t\tString name= each.getClassName();", "-\t\tassertNotNull(name);", "-\t}"]}]}