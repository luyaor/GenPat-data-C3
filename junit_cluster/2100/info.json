{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d6b6cf971db523077d3e706b772948a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45b1602134eb62371b38c5591e7dd9e2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "679e5dd3e4af3115492fabed45ea8c48bfa9d9bf", "commitAfterChange": "4081076e513e84bb2376f889d4108e64e9a18653", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprotected void runWithExpectedExceptionCheck(final Roadie context)", "signatureAfterChange": " \t\tpublic ExpectedException(Anchor next)", "diff": ["+\t\tAnchor fNext;", "+\t\tpublic ExpectedException(Anchor next) {", "+\t\t\tfNext= next;", "+\t\t}", "-", "-\tprotected void runWithExpectedExceptionCheck(final Roadie context) {", "-\t\ttry {", "-\t\t\trunInsideExpectedExceptionCheck(context);", "-", "-\t\t\tfTestMethod.assertNoExceptionExpected(context);", "-\t\t} catch (Throwable e) {", "-\t\t\tif (e instanceof AssumptionViolatedException) {", "-\t\t\t\t// do nothing", "-\t\t\t} else", "-\t\t\t\tfTestMethod.assertExceptionExpected(context, e);", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e37e53f68623ded145dc63186ec23a9b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "679e5dd3e4af3115492fabed45ea8c48bfa9d9bf", "commitAfterChange": "4081076e513e84bb2376f889d4108e64e9a18653", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprotected void runInsideExpectedExceptionCheck(final Roadie context) \t\t\tthrows Throwable", "signatureAfterChange": " \t\tpublic NoExpectedException(Anchor next)", "diff": ["+\t\tAnchor fNext;", "+\t\tpublic NoExpectedException(Anchor next) {", "+\t\t\tfNext= next;", "+\t\t}", "-", "-\tprotected void runInsideExpectedExceptionCheck(final Roadie context)", "-\t\t\tthrows Throwable {", "-\t\tExplosiveMethod.from(fTestMethod.getMethod()).invoke(", "-\t\t\t\tcontext.getTarget());", "-\t}"]}]}