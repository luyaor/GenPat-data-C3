{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b043d25dbc4703ae4341782862702dd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "153325e3317cc5ceaf00a66719b2eec5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCore.java", "commitBeforeChange": "496ee866a46f783d145b649a688df57cbf79490e", "commitAfterChange": "5f7fddf537e551109ffd6241a00c87a2b3521523", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic Result run(Runner runner)", "signatureAfterChange": " \tpublic Result run(Runner runner)", "diff": ["-\t\t\tfNotifier.fireTestRunStarted(runner.getPlan());", "+\t\t\tfNotifier.fireTestRunStarted(runner.getDescription());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "274b718dcdec6548f9f9d4c31f17fa5e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "d6662fcc06ec7b07c696eb703c47d3731e4e11c7", "commitAfterChange": "85578d48f6459a05665329faa9b52a861e9142cb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \t@Test public void twoTestsNotRunComeBackInRandomOrder()", "signatureAfterChange": " \t \t@Test public void twoTestsNotRunComeBackInRandomOrder()", "diff": ["-\t\tList<Description> things= max.sort(request);", "+\t\tList<Description> things= max.sortedLeavesForTest(request);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cca6c28d2d0b2c7c11429c735010e4c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/MultipleFailureException.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public List<Throwable> getFailures()", "signatureAfterChange": "      public List<Throwable> getFailures()", "diff": ["-        return Collections.unmodifiableList(errors);", "+        return Collections.unmodifiableList(fErrors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37529e3cc5cf1dfe40e367ba3da40b06", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/InitializationError.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public List<Throwable> getCauses()", "signatureAfterChange": "      public List<Throwable> getCauses()", "diff": ["-        return errors;", "+        return fErrors;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47573bdab1c6b4649cf5c817a975914d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "d6662fcc06ec7b07c696eb703c47d3731e4e11c7", "commitAfterChange": "85578d48f6459a05665329faa9b52a861e9142cb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \t@Test public void remember() throws CouldNotReadCoreException", "signatureAfterChange": " \t \t@Test public void remember() throws CouldNotReadCoreException", "diff": ["-\t\tDescription thing= reincarnation.sort(request).get(1);", "-\t\tassertEquals(Description.createTestDescription(TwoUnEqualTests.class, \"slow\"), thing);\t\t", "-\t}", "+\t\tDescription thing= reincarnation.sortedLeavesForTest(request).get(1);", "+\t\tassertEquals(Description.createTestDescription(TwoUnEqualTests.class, \"slow\"), thing);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5433cbe7bc35569c9fd147d167dadb08", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java", "commitBeforeChange": "496ee866a46f783d145b649a688df57cbf79490e", "commitAfterChange": "5f7fddf537e551109ffd6241a00c87a2b3521523", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Test \tpublic void theoryClassMethodsShowUp() throws Exception", "signatureAfterChange": "  \t@Test \tpublic void theoryClassMethodsShowUp() throws Exception", "diff": ["-\t\tassertThat(new Theories(HasATheory.class).getPlan().getChildren()", "-\t\t\t\t.size(), is(1));", "+\t\tassertThat(new Theories(HasATheory.class).getDescription()", "+\t\t\t\t.getChildren().size(), is(1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d832e458b8e75a2c0d433c3a302a8e3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "d0f619bfbdf4595db3e30fa7a27d7a6fdd08723a", "commitAfterChange": "0dc3de7fbcf997ca8465ed9e7793a0b4f730121b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic static void assertArrayEquals(String message, double[] expecteds, \t\t\tdouble[] actuals, double delta) throws ArrayComparisonFailure", "signatureAfterChange": " \tpublic static void assertArrayEquals(String message, double[] expecteds, \t\t\tdouble[] actuals, double delta) throws ArrayComparisonFailure", "diff": ["-\t\tnew InexactComparisonCriteria(delta).internalArrayEquals(message, expecteds, actuals);", "+\t\tnew InexactComparisonCriteria(delta).arrayEquals(message, expecteds, actuals);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c5cff75f5182bfb9f1ac3692dfd6695", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/ThrowableCauseMatcher.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void describeTo(Description description)", "signatureAfterChange": "      public void describeTo(Description description)", "diff": ["-        description.appendDescriptionOf(fMatcher);", "+        description.appendDescriptionOf(matcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c86b4c569855c5f9ac57c892a61aedd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCore.java", "commitBeforeChange": "971c9a52281458375af79e303449fe22bf91feab", "commitAfterChange": "97402a3401c6cc2d45d395c0d9d636f483b5571c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic Result run(Runner runner)", "signatureAfterChange": " \tpublic Result run(Runner runner)", "diff": ["-\t\t\tfNotifier.fireTestRunStarted(runner.getPlan());", "+\t\t\tfNotifier.fireTestRunStarted(runner.getDescription());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c85d447bfeba09efa2b8045e1732d44", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/ThrowableMessageMatcher.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     protected void describeMismatchSafely(T item, Description description)", "signatureAfterChange": "      @Override     protected void describeMismatchSafely(T item, Description description)", "diff": ["-        fMatcher.describeMismatch(item.getMessage(), description);", "+        matcher.describeMismatch(item.getMessage(), description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "991e271cbc72b3f7b4e14081a87e1dc0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/ThrowableMessageMatcher.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void describeTo(Description description)", "signatureAfterChange": "      public void describeTo(Description description)", "diff": ["-        description.appendDescriptionOf(fMatcher);", "+        description.appendDescriptionOf(matcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e304205d3c8ba8c2ef2d8eee6a82be0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "d0f619bfbdf4595db3e30fa7a27d7a6fdd08723a", "commitAfterChange": "0dc3de7fbcf997ca8465ed9e7793a0b4f730121b", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tprivate static void internalArrayEquals(String message, Object expecteds, \t\t\tObject actuals) throws ArrayComparisonFailure", "signatureAfterChange": " \tprivate static void internalArrayEquals(String message, Object expecteds, \t\t\tObject actuals) throws ArrayComparisonFailure", "diff": ["-\t\tnew ExactComparisonCriteria().internalArrayEquals(message, expecteds, actuals);", "+\t\tnew ExactComparisonCriteria().arrayEquals(message, expecteds, actuals);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3dc569bc6ecccd409261df3020cb2e2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "d6662fcc06ec7b07c696eb703c47d3731e4e11c7", "commitAfterChange": "85578d48f6459a05665329faa9b52a861e9142cb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \t@Test public void preferRecentlyFailed()", "signatureAfterChange": " \t \t@Test public void preferRecentlyFailed()", "diff": ["-\t\tList<Description> tests= max.sort(request);", "+\t\tList<Description> tests= max.sortedLeavesForTest(request);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a918fd9dcc8eaefe54f85dedb89164c8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "d0f619bfbdf4595db3e30fa7a27d7a6fdd08723a", "commitAfterChange": "0dc3de7fbcf997ca8465ed9e7793a0b4f730121b", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic static void assertArrayEquals(String message, float[] expecteds, \t\t\tfloat[] actuals, float delta) throws ArrayComparisonFailure", "signatureAfterChange": " \tpublic static void assertArrayEquals(String message, float[] expecteds, \t\t\tfloat[] actuals, float delta) throws ArrayComparisonFailure", "diff": ["-\t\tnew InexactComparisonCriteria(delta).internalArrayEquals(message, expecteds, actuals);", "+\t\tnew InexactComparisonCriteria(delta).arrayEquals(message, expecteds, actuals);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af8768534426182030cfc566f4cf6748", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/ThrowableCauseMatcher.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     protected boolean matchesSafely(T item)", "signatureAfterChange": "      @Override     protected boolean matchesSafely(T item)", "diff": ["-        return fMatcher.matches(item.getCause());", "+        return matcher.matches(item.getCause());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afe8379c569e5151016c950378dea0df", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "496ee866a46f783d145b649a688df57cbf79490e", "commitAfterChange": "5f7fddf537e551109ffd6241a00c87a2b3521523", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tprivate List<Description> findLeaves(Request request)", "signatureAfterChange": " \t \tprivate List<Description> findLeaves(Request request)", "diff": ["-\t\tfindLeaves(null, request.getRunner().getPlan(), results);", "+\t\tfindLeaves(null, request.getRunner().getDescription(), results);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba545cc5c9aa330c8784dbf4c8eb76b8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/InitializationError.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public InitializationError(List<Throwable> errors)", "signatureAfterChange": "      public InitializationError(List<Throwable> errors)", "diff": ["-        this.errors = errors;", "+        this.fErrors = errors;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb9508399627515b9ad77791e86195eb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/ThrowableMessageMatcher.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     protected boolean matchesSafely(T item)", "signatureAfterChange": "      @Override     protected boolean matchesSafely(T item)", "diff": ["-        return fMatcher.matches(item.getMessage());", "+        return matcher.matches(item.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc9f244c58cb0f7fa092447461970799", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "d6662fcc06ec7b07c696eb703c47d3731e4e11c7", "commitAfterChange": "85578d48f6459a05665329faa9b52a861e9142cb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \t@Test public void preferFast()", "signatureAfterChange": " \t \t@Test public void preferFast()", "diff": ["-\t\tDescription thing= max.sort(request).get(1);", "+\t\tDescription thing= max.sortedLeavesForTest(request).get(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce39194148231a468c3c817d05805991", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "fdc9cd5ea91f5ae1d7e5991abadd1b3f989626f7", "commitAfterChange": "31cbeb4f3c141295d0b0703ccff2b2ffbee780f4", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic static void assertArrayEquals(String message, double[] expecteds, \t\t\tdouble[] actuals, double delta) throws ArrayComparisonFailure", "signatureAfterChange": " \tpublic static void assertArrayEquals(String message, double[] expecteds, \t\t\tdouble[] actuals, double delta) throws ArrayComparisonFailure", "diff": ["-\t\tnew InexactComparisonCriteria(delta).internalArrayEquals(message, expecteds, actuals);", "+\t\tnew InexactComparisonCriteria(delta).arrayEquals(message, expecteds, actuals);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d12d128700cb64d6e7d92fa0137b1f99", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/InitializationError.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public List<Throwable> getCauses()", "signatureAfterChange": "     public List<Throwable> getCauses()", "diff": ["-        return errors;", "+        return fErrors;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d57c0f7300b31768a0ff49afa3c6bb00", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "d6662fcc06ec7b07c696eb703c47d3731e4e11c7", "commitAfterChange": "85578d48f6459a05665329faa9b52a861e9142cb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \t@Test public void preferNewTests()", "signatureAfterChange": " \t \t@Test public void preferNewTests()", "diff": ["-\t\tList<Description> things= max.sort(two);", "+\t\tList<Description> things= max.sortedLeavesForTest(two);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbed607eba77dffe70b174bb082bf9b7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "971c9a52281458375af79e303449fe22bf91feab", "commitAfterChange": "97402a3401c6cc2d45d395c0d9d636f483b5571c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tprivate List<Description> findLeaves(Request request)", "signatureAfterChange": " \t \tprivate List<Description> findLeaves(Request request)", "diff": ["-\t\tfindLeaves(null, request.getRunner().getPlan(), results);", "+\t\tfindLeaves(null, request.getRunner().getDescription(), results);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e08bfd991d488f8160a5a6e4594e8466", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "fdc9cd5ea91f5ae1d7e5991abadd1b3f989626f7", "commitAfterChange": "31cbeb4f3c141295d0b0703ccff2b2ffbee780f4", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic static void assertArrayEquals(String message, float[] expecteds, \t\t\tfloat[] actuals, float delta) throws ArrayComparisonFailure", "signatureAfterChange": " \tpublic static void assertArrayEquals(String message, float[] expecteds, \t\t\tfloat[] actuals, float delta) throws ArrayComparisonFailure", "diff": ["-\t\tnew InexactComparisonCriteria(delta).internalArrayEquals(message, expecteds, actuals);", "+\t\tnew InexactComparisonCriteria(delta).arrayEquals(message, expecteds, actuals);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e24b434c7f874cf0c5a9b00ba2fcbaba", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/InitializationError.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public InitializationError(List<Throwable> errors)", "signatureAfterChange": "     public InitializationError(List<Throwable> errors)", "diff": ["-        this.errors = errors;", "+        this.fErrors = errors;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed82aaf64d508253241617998c7786a0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/MultipleFailureException.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public MultipleFailureException(List<Throwable> errors)", "signatureAfterChange": "      public MultipleFailureException(List<Throwable> errors)", "diff": ["-        this.errors = new ArrayList<Throwable>(errors);", "+        this.fErrors = new ArrayList<Throwable>(errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f568b06f32f17d0f93045cfecd448973", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "d6662fcc06ec7b07c696eb703c47d3731e4e11c7", "commitAfterChange": "85578d48f6459a05665329faa9b52a861e9142cb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t@Test public void preferNewTestsOverTestsThatFailed()", "signatureAfterChange": " \t@Test public void preferNewTestsOverTestsThatFailed()", "diff": ["-\t\tList<Description> things= max.sort(two);", "+\t\tList<Description> things= max.sortedLeavesForTest(two);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fec638580f68661c509985677f768b58", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/ThrowableCauseMatcher.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     protected void describeMismatchSafely(T item, Description description)", "signatureAfterChange": "      @Override     protected void describeMismatchSafely(T item, Description description)", "diff": ["-        fMatcher.describeMismatch(item.getCause(), description);", "+        matcher.describeMismatch(item.getCause(), description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fede6b3259a57ca642b3f73aea2229e9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java", "commitBeforeChange": "971c9a52281458375af79e303449fe22bf91feab", "commitAfterChange": "97402a3401c6cc2d45d395c0d9d636f483b5571c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Test \tpublic void theoryClassMethodsShowUp() throws Exception", "signatureAfterChange": "  \t@Test \tpublic void theoryClassMethodsShowUp() throws Exception", "diff": ["-\t\tassertThat(new Theories(HasATheory.class).getPlan().getChildren()", "-\t\t\t\t.size(), is(1));", "+\t\tassertThat(new Theories(HasATheory.class).getDescription()", "+\t\t\t\t.getChildren().size(), is(1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffc6c617a2aa59a72672ba915d8ec77c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "fdc9cd5ea91f5ae1d7e5991abadd1b3f989626f7", "commitAfterChange": "31cbeb4f3c141295d0b0703ccff2b2ffbee780f4", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tprivate static void internalArrayEquals(String message, Object expecteds, \t\t\tObject actuals) throws ArrayComparisonFailure", "signatureAfterChange": " \tprivate static void internalArrayEquals(String message, Object expecteds, \t\t\tObject actuals) throws ArrayComparisonFailure", "diff": ["-\t\tnew ExactComparisonCriteria().internalArrayEquals(message, expecteds, actuals);", "+\t\tnew ExactComparisonCriteria().arrayEquals(message, expecteds, actuals);"]}]}