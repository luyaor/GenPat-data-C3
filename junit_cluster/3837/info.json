{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89874826e30493b8820828dcb9fa358d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d9e2725307d6ff577efa6836ebed3d8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "commitAfterChange": "44e7458b19d5cd1900a765a440c96e85b81d25fc", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tprotected Link notifier(Link link, TestMethod method)", "signatureAfterChange": "  \tprotected Link notifying(TestMethod method, Link link)", "diff": ["+", "+\tprotected Link notifying(TestMethod method, Link link) {", "+\t\tif (method.isIgnored())", "+\t\t\treturn new IgnoreTest();", "+\t\treturn new Notifying(link);", "+\t}", "-", "-\tprotected Link notifier(Link link, TestMethod method) {", "-\t\tif (method.isIgnored())", "-\t\t\treturn new Ignored();", "-\t\treturn new Notifier(link);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb0411052983eec699077aeb1761263f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "commitAfterChange": "44e7458b19d5cd1900a765a440c96e85b81d25fc", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic Link handleExceptions(Link next, TestMethod method)", "signatureAfterChange": "  \tprotected Link possiblyExpectingExceptions(TestMethod method, Link next)", "diff": ["+", "+\tprotected Link possiblyExpectingExceptions(TestMethod method, Link next) {", "+\t\treturn method.expectsException()", "+\t\t\t? new ExpectingException(next, method.getExpectedException())", "+\t\t\t: new ExpectingNoException(next);", "+\t}", "-", "-\tpublic Link handleExceptions(Link next, TestMethod method) {", "-\t\treturn method.expectsException()", "-\t\t\t? new ExpectedException(next, method.getExpectedException())", "-\t\t\t: new NoExpectedException(next);", "-\t}"]}]}