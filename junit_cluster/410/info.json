{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "deeb5fbf7df57f04c6acc773bef6b793", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f85ce382e0ab3644a39b379e63b1640", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void addMultiPointMethods(ParameterSignature sig, List<PotentialAssignment> list)", "signatureAfterChange": "      private void addMultiPointMethods(ParameterSignature sig, List<PotentialAssignment> list) throws Throwable", "diff": ["-    private void addMultiPointMethods(ParameterSignature sig, List<PotentialAssignment> list) {", "+    private void addMultiPointMethods(ParameterSignature sig, List<PotentialAssignment> list) throws Throwable {", "-            try {", "-                addMultiPointArrayValues(sig, dataPointsMethod.getName(), list, dataPointsMethod.invokeExplosively(null));", "-            } catch (Throwable e) {", "-                // ignore and move on", "-            }", "+            addMultiPointArrayValues(sig, dataPointsMethod.getName(), list, dataPointsMethod.invokeExplosively(null));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a1dcaa49425f43de64407d28a69b71a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "540fa757f7a9d86eea9b38e9920eec9bcee3afca", "commitAfterChange": "b421d0ebd66701187c10c2b0c7f519dc435531ae", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void addMultiPointMethods(ParameterSignature sig, List<PotentialAssignment> list) throws Throwable", "signatureAfterChange": "      private void addMultiPointMethods(ParameterSignature sig, List<PotentialAssignment> list) throws Throwable", "diff": ["-            if (returnType.isArray() && sig.canPotentiallyAcceptType(returnType.getComponentType())) {", "+            if ((returnType.isArray() && sig.canPotentiallyAcceptType(returnType.getComponentType())) ||", "+                    Iterable.class.isAssignableFrom(returnType)) {", "-                    addArrayValues(sig, dataPointsMethod.getName(), list, dataPointsMethod.invokeExplosively(null));", "+                    addDataPointsValues(returnType, sig, dataPointsMethod.getName(), list, ", "+                            dataPointsMethod.invokeExplosively(null));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "716044f37c5021ae17814aab2f646e5b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "6a8215ab69317916807f246daef80a9d4cf5dc8e", "commitAfterChange": "48aabe1b16bd288f74ac4ff92e3a38792533be39", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate void addMultiPointMethods(List<PotentialAssignment> list)", "signatureAfterChange": "  \tprivate void addMultiPointMethods(ParameterSignature sig, List<PotentialAssignment> list)", "diff": ["-\tprivate void addMultiPointMethods(List<PotentialAssignment> list) {", "+\tprivate void addMultiPointMethods(ParameterSignature sig, List<PotentialAssignment> list) {", "-\t\t\t\taddArrayValues(dataPointsMethod.getName(), list, dataPointsMethod.invokeExplosively(null));", "+\t\t\t\taddMultiPointArrayValues(sig, dataPointsMethod.getName(), list, dataPointsMethod.invokeExplosively(null));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88e2e8ca186496dafd8e2f51d4a0104a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "2ade5fd3aad123d6507b59ed5d48c8f030314f00", "commitAfterChange": "cc8497f28e1d5a46d7940a0b36556154c83d6f7a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "          private void addSinglePointFields(ParameterSignature sig,             List<PotentialAssignment> list)", "signatureAfterChange": "      private void addSinglePointFields(ParameterSignature sig, List<PotentialAssignment> list)", "diff": ["-    private void addSinglePointFields(ParameterSignature sig,", "-            List<PotentialAssignment> list) {", "+    private void addSinglePointFields(ParameterSignature sig, List<PotentialAssignment> list) {", "-            Class<?> type = field.getType();", "-            if (sig.canAcceptType(type)) {", "-                list.add(PotentialAssignment.forValue(field.getName(), getStaticFieldValue(field)));", "+            Object value = getStaticFieldValue(field);", "+            ", "+            if (sig.canAcceptValue(value)) {", "+                list.add(PotentialAssignment.forValue(field.getName(), value));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0659d374b40f6c51cf9fadee873f9d8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "e9d4de8e15255b03b60e935390e517d4de90a73b", "commitAfterChange": "278d76f285c4729700276e875ff8d69ea2ecfbc2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private void addMultiPointMethods(ParameterSignature sig, List<PotentialAssignment> list)", "signatureAfterChange": "      private void addMultiPointMethods(ParameterSignature sig, List<PotentialAssignment> list)", "diff": ["-            try {", "-                addArrayValues(sig, dataPointsMethod.getName(), list, dataPointsMethod.invokeExplosively(null));", "-            } catch (Throwable e) {", "-                // ignore and move on", "+            Class<?> returnType = dataPointsMethod.getReturnType();", "+            ", "+            if (returnType.isArray() && sig.canPotentiallyAcceptType(returnType.getComponentType())) {", "+                try {", "+                    addArrayValues(sig, dataPointsMethod.getName(), list, dataPointsMethod.invokeExplosively(null));", "+                } catch (Throwable e) {", "+                    // ignore and move on", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3a55dd9ce6037fd04ce073f2cc6c3fe", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "2ade5fd3aad123d6507b59ed5d48c8f030314f00", "commitAfterChange": "cc8497f28e1d5a46d7940a0b36556154c83d6f7a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "          private void addMultiPointFields(ParameterSignature sig,             List<PotentialAssignment> list)", "signatureAfterChange": "          private void addMultiPointFields(ParameterSignature sig, List<PotentialAssignment> list)", "diff": ["-    private void addMultiPointFields(ParameterSignature sig,", "-            List<PotentialAssignment> list) {", "+    private void addMultiPointFields(ParameterSignature sig, List<PotentialAssignment> list) {", "-            Class<?> type = field.getType();", "-            if (sig.canAcceptArrayType(type)) {", "-                try {", "-                    addArrayValues(field.getName(), list, getStaticFieldValue(field));", "-                } catch (Throwable e) {", "-                    // ignore and move on", "-                }", "-            }", "+            addArrayValues(sig, field.getName(), list, getStaticFieldValue(field));", "-    }    ", "+    }"]}]}