{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "decaed388720a0af0a86afeef0dc45b6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09189ea61c1ccaaa9b0f4564efd9e95d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/requests/ClassesRequest.java", "commitBeforeChange": "95bd62b2ffd80394d1a17e9078a4d79478423030", "commitAfterChange": "9c8d59d9869280a698c3f3a119eb69f0e897c94b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t@Override  \tpublic Runner getRunner()", "signatureAfterChange": " \t@Override  \tpublic Runner getRunner()", "diff": ["-\t\tList<Runner> runners= new ArrayList<Runner>();", "-\t\tfor (Class<?> each : fClasses) {", "-\t\t\tRunner childRunner= Request.aClass(each).getRunner();", "-\t\t\trunners.add(childRunner);  // TODO David, I took out the null check after examining all the implementors of getRunner()", "+\t\ttry {", "+\t\t\treturn new Suite(fName, fClasses);", "+\t\t} catch (InitializationError e) {", "+\t\t\t// TODO: (Dec 10, 2007 9:13:13 PM) untested", "+", "+\t\t\treturn Request.errorReport(null, e).getRunner();", "-\t\tCompositeRunner runner= new CompositeRunner(fName, runners);", "-\t\treturn runner;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c098a1c27d5b02fc1e4437c7824c004d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/RunnerBuilder.java", "commitBeforeChange": "3b7ab4a322c966602f202e455a8bc4612af56a18", "commitAfterChange": "f09cff79b941a525271f3f2838a9742b4c5c8d36", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tprivate List<Runner> runners(Class<?>[] children)", "signatureAfterChange": " \t \tpublic List<Runner> runners(Class<?> parent, List<Class<?>> children) \t\t\tthrows InitializationError", "diff": ["+\tpublic List<Runner> runners(Class<?> parent, List<Class<?>> children)", "+\t\t\tthrows InitializationError {", "+\t\treturn runners(parent, children.toArray(new Class<?>[0]));", "+\t}"]}]}