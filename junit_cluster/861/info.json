{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d020f244307604245797b7f3d14bbd7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ac93f7105ab37264b9fa20945bbd943", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/TestClass.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tprivate boolean isShadowed(Method method, List<Method> results)", "signatureAfterChange": "      private boolean isShadowed(Method method, List<Method> results)", "diff": ["-\t", "-\tprivate boolean isShadowed(Method method, List<Method> results) {", "-\t\tfor (Method each : results) {", "-\t\t\tif (isShadowed(method, each))", "-\t\t\t\treturn true;", "-\t\t}", "-\t\treturn false;", "-\t}", "+    private boolean isShadowed(Method method, List<Method> results) {", "+        for (Method each : results) {", "+            if (isShadowed(method, each)) {", "+                return true;", "+            }", "+        }", "+        return false;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b838ce5ff3aa978dbfa6016fda89084", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/MethodValidator.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic void assertValid() throws InitializationError", "signatureAfterChange": "      public void assertValid() throws InitializationError", "diff": ["-\t", "-\tpublic void assertValid() throws InitializationError {", "-\t\tif (!fErrors.isEmpty())", "-\t\t\tthrow new InitializationError(fErrors);", "-\t}", "+", "+    public void assertValid() throws InitializationError {", "+        if (!fErrors.isEmpty()) {", "+            throw new InitializationError(fErrors);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb33fc6aff032c9403ab7f350d0f71f6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/TestMethod.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic long getTimeout()", "signatureAfterChange": "      public long getTimeout()", "diff": ["-\tpublic long getTimeout() {", "-\t\tTest annotation= fMethod.getAnnotation(Test.class);", "-\t\tif (annotation == null)", "-\t\t\treturn 0;", "-\t\tlong timeout= annotation.timeout();", "-\t\treturn timeout;", "-\t}", "+    public long getTimeout() {", "+        Test annotation = fMethod.getAnnotation(Test.class);", "+        if (annotation == null) {", "+            return 0;", "+        }", "+        long timeout = annotation.timeout();", "+        return timeout;", "+    }"]}]}