{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac86077ed1d699cb7a9deab4cc6f9dce", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b21ee2df663b1f1a0f4e2a19be6c26a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/core/MainRunner.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \t\t@Override \t\tpublic void checkRead(String file, Object context)", "signatureAfterChange": "          @Override         public void checkRead(String file, Object context)", "diff": ["-\t\t@Override", "-\t\tpublic void checkRead(String file, Object context) {", "-\t\t\tif (originalSecurityManager != null)", "-\t\t\t\toriginalSecurityManager.checkRead(file, context);", "-\t\t}", "+        @Override", "+        public void checkRead(String file, Object context) {", "+            if (originalSecurityManager != null) {", "+                originalSecurityManager.checkRead(file, context);", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adb3e6b1599a26ace274811edbc4abac", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assume.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static <T> void assumeThat(T actual, Matcher<T> matcher)", "signatureAfterChange": "     public static <T> void assumeThat(T actual, Matcher<T> matcher)", "diff": ["-\t */", "-\tpublic static <T> void assumeThat(T actual, Matcher<T> matcher) {", "-\t\tif (!matcher.matches(actual))", "-\t\t\tthrow new AssumptionViolatedException(actual, matcher); ", "-\t}", "+     */", "+    public static <T> void assumeThat(T actual, Matcher<T> matcher) {", "+        if (!matcher.matches(actual)) {", "+            throw new AssumptionViolatedException(actual, matcher);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd4c1d34f7572c307bd239417976603b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tstatic public void fail(String message)", "signatureAfterChange": "     static public void fail(String message)", "diff": ["-\t */", "-\tstatic public void fail(String message) {", "-\t\tif (message == null)", "-\t\t\tthrow new AssertionError();", "-\t\tthrow new AssertionError(message);", "-\t}", "+     */", "+    static public void fail(String message) {", "+        if (message == null) {", "+            throw new AssertionError();", "+        }", "+        throw new AssertionError(message);", "+    }"]}]}