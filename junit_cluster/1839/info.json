{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e6ddbe9e34bd06a8ef72a20070268c6a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acde826f1e4148430a630d1492b44f9f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/rules/RuleFieldValidator.java", "commitBeforeChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "commitAfterChange": "759061a31775afd29ff99fd2a55969bd6aaa8c2f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private void validateStatic(FrameworkMember<?> member, List<Throwable> errors)", "signatureAfterChange": "         public void validate(FrameworkMember<?> member, Class<? extends Annotation> annotation, List<Throwable> errors)", "diff": ["-    private void validateStatic(FrameworkMember<?> member, List<Throwable> errors) {", "-        if (staticMembers && !member.isStatic()) {", "-            addError(errors, member, \"must be static.\");", "-        if (!staticMembers && member.isStatic()) {", "-            addError(errors, member, \"must not be static or it has to be annotated with @ClassRule.\");", "+    private static final class MemberMustBeStatic implements RuleValidator {", "+        public void validate(FrameworkMember<?> member, Class<? extends Annotation> annotation, List<Throwable> errors) {", "+            if (!member.isStatic()) {", "+                errors.add(new ValidationError(member, annotation,", "+                        \"must be static.\"));", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd1a68484da2c0ce42137bee9fb8bbdd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/rules/RuleFieldValidator.java", "commitBeforeChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "commitAfterChange": "759061a31775afd29ff99fd2a55969bd6aaa8c2f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private void addError(List<Throwable> errors, FrameworkMember<?> member,             String suffix)", "signatureAfterChange": "         public void validate(                 FrameworkMember<?> member, Class<? extends Annotation> annotation, List<Throwable> errors)", "diff": ["-    private void addError(List<Throwable> errors, FrameworkMember<?> member,", "-            String suffix) {", "-        String message = \"The @\" + annotation.getSimpleName() + \" '\"", "-                + member.getName() + \"' \" + suffix;", "-        errors.add(new Exception(message));", "+    private static final class MemberMustBeNonStatic implements RuleValidator {", "+        public void validate(", "+                FrameworkMember<?> member, Class<? extends Annotation> annotation, List<Throwable> errors) {", "+            if (member.isStatic()) {", "+                errors.add(new ValidationError(member, annotation,", "+                        \"must not be static or it must be annotated with @ClassRule.\"));", "+            }", "+        }"]}]}