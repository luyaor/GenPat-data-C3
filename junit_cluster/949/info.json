{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0aaf766056f79b4fc1d54c2058fbff51", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d71d9880e9710c2eafb0a80bc004a37", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/builders/IgnoredBuilder.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t@Override \tpublic Runner runnerForClass(Class<?> testClass)", "signatureAfterChange": "     @Override     public Runner runnerForClass(Class<?> testClass)", "diff": ["-\t@Override", "-\tpublic Runner runnerForClass(Class<?> testClass) {", "-\t\tif (testClass.getAnnotation(Ignore.class) != null)", "-\t\t\treturn new IgnoredClassRunner(testClass);", "-\t\treturn null;", "-\t}", "+    @Override", "+    public Runner runnerForClass(Class<?> testClass) {", "+        if (testClass.getAnnotation(Ignore.class) != null) {", "+            return new IgnoredClassRunner(testClass);", "+        }", "+        return null;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d735e9e5d5e12bd9b5a4937156a07d6b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tprivate List<T> getFilteredChildren()", "signatureAfterChange": "      private List<T> getFilteredChildren()", "diff": ["-\tprivate List<T> getFilteredChildren() {", "-\t\tif (fFilteredChildren == null)", "-\t\t\tfFilteredChildren = new ArrayList<T>(getChildren());", "-\t\treturn fFilteredChildren;", "-\t}", "+", "+    private List<T> getFilteredChildren() {", "+        if (fFilteredChildren == null) {", "+            fFilteredChildren = new ArrayList<T>(getChildren());", "+        }", "+        return fFilteredChildren;", "+    }"]}]}