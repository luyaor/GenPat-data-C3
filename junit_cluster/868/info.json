{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a273825b5ffa82a6f05180fbaf99f5d7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ea70f9e2f489e8bf345f8a0c31ce98e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/JUnitCommandLineParserTest.java", "commitBeforeChange": "b1cf4b5bc6ead8c3dfcbbb9ebe69be85f5e53cb8", "commitAfterChange": "56193048f411846a58c0e0377a5f1ccfecd3d2f9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r     @Test\r     public void shouldCreateFailureUponBaldFilterOptionNotFollowedByValue()", "signatureAfterChange": "\r \r     @Test\r     public void shouldCreateFailureUponBaldFilterOptionNotFollowedByValue()", "diff": ["-        List<Failure> failures = jUnitCommandLineParser.getFailures();\r", "-        Throwable exception = failures.get(0).getException();\r", "+        Runner runner = jUnitCommandLineParser.createRequest(new Computer()).getRunner();\r", "+        Description description = runner.getDescription().getChildren().get(0);\r", "-        assertThat(exception, instanceOf(JUnitCommandLineParser.CommandLineParserError.class));\r", "+        assertThat(description.toString(), allOf(\r", "+                containsString(\"initializationError: \"),\r", "+                containsString(JUnitCommandLineParser.CommandLineParserError.class.getName()),\r", "+                containsString(\"--filter value not specified\")));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d05bf5b60b63b8e6dbf67a15a4d2cb54", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/JUnitCommandLineParserTest.java", "commitBeforeChange": "b1cf4b5bc6ead8c3dfcbbb9ebe69be85f5e53cb8", "commitAfterChange": "56193048f411846a58c0e0377a5f1ccfecd3d2f9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r     @Test\r     public void shouldCreateFailureUponUncreatedFilter() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldCreateFailureUponUncreatedFilter() throws Exception", "diff": ["-        List<Failure> failures = jUnitCommandLineParser.getFailures();\r", "-        Throwable exception = failures.get(0).getException();\r", "+        Runner runner = jUnitCommandLineParser.createRequest(new Computer()).getRunner();\r", "+        Description description = runner.getDescription().getChildren().get(0);\r", "-        assertThat(exception, instanceOf(FilterFactory.FilterNotCreatedException.class));\r", "+        assertThat(description.toString(), allOf(\r", "+                containsString(\"initializationError: \"),\r", "+                containsString(FilterFactory.FilterNotCreatedException.class.getName()),\r", "+                containsString(\"stub\")));\r"]}]}