{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f03b340624ca94d249665f2c190a720a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "957e73d030ad318dd1487989e27591f5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "5af049cac0c976c586d955607fa459aacb778d3c", "commitAfterChange": "09fcafc04e07b3481ef60159de2d6ae3464b98ac", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate Parameterized(Class<?> klass, List<Object[]> parametersList) throws InitializationError", "signatureAfterChange": "  \tprivate Parameterized(Class<?> klass, List<Object[]> parametersList) \t\t\tthrows InitializationError", "diff": ["-\tprivate Parameterized(Class<?> klass, List<Object[]> parametersList) throws InitializationError {", "+", "+\tprivate Parameterized(Class<?> klass, List<Object[]> parametersList)", "+\t\t\tthrows InitializationError {", "+\t\tvalidate();", "+\t}", "-\t\tList<Throwable> errors= new ArrayList<Throwable>();", "-\t\tnew TestClass(klass).validateStaticMethods(errors);", "-\t\tnew TestClass(klass).validateInstanceMethods(errors);", "-\t\tassertValid(errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd90b819ec1e8724af4882260014610d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Suite.java", "commitBeforeChange": "e727dd6b1cb2caa1699da3b2df7625c9554adc36", "commitAfterChange": "95bd62b2ffd80394d1a17e9078a4d79478423030", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tprotected Suite(Class<?> klass, Class<?>[] annotatedClasses) throws InitializationError", "signatureAfterChange": " \t \tprotected Suite(Class<?> klass, Class<?>[] annotatedClasses) throws InitializationError", "diff": ["-\t\tsuper(klass, klass.getName(), builder.runners(klass, annotatedClasses));", "+\t\tthis(klass, builder.runners(klass, annotatedClasses));", "+\t}"]}]}