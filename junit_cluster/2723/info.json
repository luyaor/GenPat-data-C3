{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d23544448273e46fb4715a6139d925d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74938d5745e27c22f73ceb83138241f4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/Suite.java", "commitBeforeChange": "b333208ccfbef77c556a270bd4385586523dcafc", "commitAfterChange": "4d9c88e37dfed614a1bd1ae2ca2ecc86122aa9f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprotected Suite(Class<?> klass, Class<?>[] annotatedClasses) throws InitializationError", "signatureAfterChange": " \t \tprotected Suite(Class<?> klass, Class<?>[] annotatedClasses) throws InitializationError", "diff": ["-\t\tMethodValidator methodValidator= new MethodValidator(fTestClass);", "-\t\tmethodValidator.fTestClass.validateStaticMethods(methodValidator.fErrors);", "-\t\tmethodValidator.assertValid();", "+\t\tErrorList errors= new ErrorList();", "+\t\tfTestClass.validateStaticMethods(errors);", "+\t\terrors.assertEmpty();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9adb7be451304412df86eb0cef1f9e8b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/Parameterized.java", "commitBeforeChange": "b333208ccfbef77c556a270bd4385586523dcafc", "commitAfterChange": "4d9c88e37dfed614a1bd1ae2ca2ecc86122aa9f1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic Parameterized(Class<?> klass) throws Throwable", "signatureAfterChange": "  \tpublic Parameterized(Class<?> klass) throws Throwable", "diff": ["-\t\t// TODO: (Oct 9, 2007 2:18:54 PM) Destroy MethodValidator (I thought I already had)", "-", "-\t\tMethodValidator methodValidator= new MethodValidator(fTestClass);", "-\t\tmethodValidator.fTestClass.validateStaticMethods(methodValidator.fErrors);", "-\t\tmethodValidator.fTestClass.validateInstanceMethods(methodValidator.fErrors);", "-\t\tmethodValidator.assertValid();", "+\t\tErrorList errors = new ErrorList();", "+\t\tfTestClass.validateStaticMethods(errors);", "+\t\tfTestClass.validateInstanceMethods(errors);", "+\t\terrors.assertEmpty();"]}]}