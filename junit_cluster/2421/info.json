{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2565b5547d0ffb918a8c2d9865403d2b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1067f201c48e6e005d9df95e813dcd09", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "cbf46b88c2937aece7018fa50ba4dbb133e03d06", "commitAfterChange": "1fa373f01d126d437f08a57a7b5e7a7ec0a01b85", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t\t@Override \t\tpublic Object createTest() throws Exception", "signatureAfterChange": "  \t\t@Override \t\tpublic Object createTest() throws Exception", "diff": ["-\t\t\t\t\tthrow new Exception(\"Wrong number of parameters and @parameter fields. @parameter fields counted: \"+fields.size()+\", available parameters: \"+fParameters.length+\".\");", "+\t\t\t\t\tthrow new Exception(\"Wrong number of parameters and @parameter fields.\"+", "+\t\t\t\t\t\" @Parameter fields counted: \"+fields.size()+\", available parameters: \"+fParameters.length+\".\");", "-\t\t\t\t\t\tthrow new Exception(getTestClass().getName() + \": Trying to set \"+field.getName()+\" with the value \"+fParameters[index]+\" that is not the right type (\"+fParameters[index].getClass().getSimpleName()+\" instead of \"+field.getType().getSimpleName()+\").\", iare);", "+\t\t\t\t\t\tthrow new Exception(getTestClass().getName() + \": Trying to set \"+field.getName()+", "+\t\t\t\t\t\t\" with the value \"+fParameters[index]+", "+\t\t\t\t\t\t\" that is not the right type (\"+fParameters[index].getClass().getSimpleName()+\" instead of \"+", "+\t\t\t\t\t\tfield.getType().getSimpleName()+\").\", iare);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29b756a1be751257e57e9a9dea32e954", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/MatcherTest.java", "commitBeforeChange": "0cc40391bc3ed026b1c436375c31a2614c883cdf", "commitAfterChange": "cf870c0bebf6ca9631594845cd558e1f4fb78b29", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Theory     @SuppressWarnings(\"unchecked\")     public void differentMatchersHaveDifferentDescriptions(             Matcher matcher1, Matcher matcher2, Object value)", "signatureAfterChange": "      @Theory     @SuppressWarnings({ \"unchecked\", \"rawtypes\" })     public void differentMatchersHaveDifferentDescriptions(             Matcher matcher1, Matcher matcher2, Object value)", "diff": ["-    @SuppressWarnings(\"unchecked\")", "+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })"]}]}