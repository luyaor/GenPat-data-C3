{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf507c943d7533c60ae25e5a0342329d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f21948f9d3a873336c23fb159ea9ce8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "36beacd221a4837af2a6d684b3a4fb79775a5231", "commitAfterChange": "b9ce87013e5389857956d785d14fc4f3fc2490c3", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \t\tprivate Statement methodCompletesWithParameters( \t\t\t\tfinal Assignments complete, final Object freshInstance)", "signatureAfterChange": "  \t\tprivate Statement methodCompletesWithParameters( \t\t\t\tfinal FrameworkMethod method, final Assignments complete, final Object freshInstance)", "diff": ["-\t\t\t\tfinal Assignments complete, final Object freshInstance) {", "+\t\t\t\tfinal FrameworkMethod method, final Assignments complete, final Object freshInstance) {", "-\t\t\t\t\t\tinvokeWithActualParameters(freshInstance, complete);", "+\t\t\t\t\t\t// TODO: (Dec 1, 2007 11:23:18 PM) pass-through", "+\t\t\t\t\t\tinvokeWithActualParameters(method, freshInstance, complete);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69cdac3c4ee818baa02d2860e36f2dc2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "commitAfterChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t\tprotected void runWithCompleteAssignment(final Assignments complete) throws InstantiationException, \t\t\t\tIllegalAccessException, InvocationTargetException, \t\t\t\tNoSuchMethodException, Throwable", "signatureAfterChange": "  \t\tprotected void runWithCompleteAssignment(final Assignments complete) throws InstantiationException, \t\t\t\tIllegalAccessException, InvocationTargetException, \t\t\t\tNoSuchMethodException, Throwable", "diff": ["-\t\t\t\twithAfters(fTestMethod, freshInstance, withBefores(fTestMethod, freshInstance, methodCompletesWithParameters(complete, freshInstance))).run();", "+\t\t\t\twithAfters(fTestMethod, freshInstance, withBefores(fTestMethod, freshInstance, methodCompletesWithParameters(complete, freshInstance))).evaluate();"]}]}