{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c4bc720bfe27f998a0d6aefea67e31e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "678d1d5ea6c40f0115ed361ecd54c9d0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "dca4a949f93bb85cc8ee0eb8789979a18aa3ffc7", "commitAfterChange": "cb6abf6fc729f07c5d60b0756e91af444400b4b5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private Runner createRunnerWithNotNormalizedParameters(String pattern,             int index, Object parametersOrSingleParameter)             throws InitializationError", "signatureAfterChange": "      private TestWithParameters createTestWithNotNormalizedParameters(             String pattern, int index, Object parametersOrSingleParameter)", "diff": ["-    private Runner createRunnerWithNotNormalizedParameters(String pattern,", "-            int index, Object parametersOrSingleParameter)", "-            throws InitializationError {", "+    private TestWithParameters createTestWithNotNormalizedParameters(", "+            String pattern, int index, Object parametersOrSingleParameter) {", "-        TestWithParameters test = createTestWithParameters(getTestClass(),", "-                pattern, index, parameters);", "-        return createRunnerForTest(test);", "-    }", "+        return createTestWithParameters(getTestClass(), pattern, index,", "+                parameters);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb05e169cb5e9322e7483659aeb3a813", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "e1bf14b4d5b7aecf4611fd400417359424121544", "commitAfterChange": "f6a3d7405b72966d3714355804e1b3c14b1425cb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "      private List<Runner> createRunnersForParameters(Iterable<Object[]> allParameters, String namePattern) throws Exception", "signatureAfterChange": "      private List<Runner> createRunnersForParameters(Iterable<Object> allParameters, String namePattern) throws Exception", "diff": ["-    private List<Runner> createRunnersForParameters(Iterable<Object[]> allParameters, String namePattern) throws Exception {", "+    private List<Runner> createRunnersForParameters(Iterable<Object> allParameters, String namePattern) throws Exception {", "-            for (Object[] parametersOfSingleTest : allParameters) {", "-                children.add(createRunner(namePattern, i++, parametersOfSingleTest));", "+            for (Object parametersOfSingleTest : allParameters) {", "+                children.add(createRunnerWithNotNormalizedParameters(", "+                    namePattern, i++, parametersOfSingleTest));"]}]}