{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "04fe51e57bfbed34dfb4b66c6968f60d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "004334bf389decfbec501e89daa90812", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/Failure.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-        return getTestHeader() + \": \" + thrownException.getMessage();", "+        return getTestHeader() + \": \" + fThrownException.getMessage();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "004752a4a268b6a8cc461915e2b61622", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/Assert.java", "commitBeforeChange": "23ab51791a15063027d70ec2894927f14ac9868c", "commitAfterChange": "65d6b62dd60c434447544c5419ef4eeecb4c645d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tstatic public void assertNotSame(String message, Object expected, Object actual)", "signatureAfterChange": " \tstatic public void assertNotSame(String message, Object unexpected, Object actual)", "diff": ["-\tstatic public void assertNotSame(String message, Object expected, Object actual) {", "-\t\tif (expected == actual)", "+\tstatic public void assertNotSame(String message, Object unexpected, Object actual) {", "+\t\tif (unexpected == actual)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0090b440bb3a7bc59983429b83f8c1d8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java", "commitBeforeChange": "61994e0c0aa768b43fad1ac6e35b1e43ffc8b142", "commitAfterChange": "97654ff38f976733fa4c6ae9b28e3fe10328183f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void plansNamedCorrectly() throws Exception", "signatureAfterChange": "      @Test     public void plansNamedCorrectly() throws Exception", "diff": ["-        Runner runner = Request.aClass(FibonacciTest.class).getRunner();", "+        Runner runner = Request.aClass(AdditionTest.class).getRunner();", "-        assertEquals(\"[0: fib(0)=0]\", description.getChildren().get(0)", "+        assertEquals(\"[2: 3 + 2 = 5]\", description.getChildren().get(2)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "009d07dea1e9d7d02ae0fdab24b94234", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java", "commitBeforeChange": "695ae54ef17fc658734119b5378b19ff754a9951", "commitAfterChange": "52e61a55e8ffcaab2586ea8fec28e4b01336cd30", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tprivate Matcher<Iterable<Failure>> empty()", "signatureAfterChange": "  \tprivate Matcher<Iterable<Failure>> empty()", "diff": ["-\t\treturn each(nullValue);", "+\t\treturn everyItem(nullValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00d28a977551e6b4680629438b033239", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/runners/Enclosed.java", "commitBeforeChange": "0c458a8796cc5ffcda5286ee4a367c8e31ae7c88", "commitAfterChange": "ebb9d7f536a5b1be8364c6cb7367cac8c3849caa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprivate static Class<?>[] filterOutAbstractClasses(final Class<?>[] classes)", "signatureAfterChange": " \t \tprivate static Class<?>[] filterAbstractClasses(final Class<?>[] classes)", "diff": ["-\tprivate static Class<?>[] filterOutAbstractClasses(final Class<?>[] classes) {\t\t", "+\tprivate static Class<?>[] filterAbstractClasses(final Class<?>[] classes) {\t\t", "-\t\treturn filteredSet.toArray(new Class<?>[] { });", "+\t\treturn filteredSet.toArray(new Class<?>[filteredSet.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00f254b56aacb24fc4d0e1d635a54fc2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/CategoriesAndParameterizedTest.java", "commitBeforeChange": "b3831d600d2d893ec6250ee930188cc373d81ee5", "commitAfterChange": "403f761da11bdaf9a03538139e7ae51601c36b0e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\tpublic ParameterizedTestA(String a)", "signatureAfterChange": " \t\tpublic WellBehavedParameterizedTest(String a)", "diff": ["-\tpublic static class ParameterizedTestA {", "-\t\tpublic ParameterizedTestA(String a) {", "+\tpublic static class WellBehavedParameterizedTest {", "+\t\tpublic WellBehavedParameterizedTest(String a) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01142ed2bdbe5d39b253d1e39c1dedb4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void testFailure(Failure failure)", "signatureAfterChange": "      @Override     public void testFailure(Failure failure)", "diff": ["-        fWriter.append('E');", "+        writer.append('E');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "012eb09e033e655e33f4c7462eef2380", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void testIgnored(Description description)", "signatureAfterChange": "      @Override     public void testIgnored(Description description)", "diff": ["-        fWriter.append('I');", "+        writer.append('I');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "013a9d667b45eba2302c8ca2c923885a", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "1e752dcb0a967bcb47fae4b12fb8765e79571e69", "commitAfterChange": "bfc94ee739d62127c7477300b26127bd560765a1", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " \t \tsynchronized public void runSuite()", "signatureAfterChange": " \t \tsynchronized public void runSuite()", "diff": ["+\t\t\tif (!setUseLoadingRunner())", "+\t\t\t\treturn;", "-\t\t\t\tdoRunTest(testSuite, true);", "+\t\t\t\tdoRunTest(testSuite);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01583163e56bbe98b3807ba8a4d4cee9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "4b549360e08dac944ee34b7c7bf1a95b41f72f35", "commitAfterChange": "8e313a1e58a56694c0441b2fa60974fa8e1bfe31", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate MaxHistory(File storedResults)", "signatureAfterChange": "  \tprivate MaxHistory(File storedResults)", "diff": ["-\t\tfFolder= storedResults;", "+\t\tfHistoryStore= storedResults;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01606600824bfd859787b9ad5ff569e1", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/samples/money/MoneyBag.java", "commitBeforeChange": "ce0bb8f59ea7de1ac3bb4f678f7ddf84fe9388ed", "commitAfterChange": "0bb3dfe2939cc214ee5e77556a48d4aea9c6396a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate void appendMoney(Money aMoney)", "signatureAfterChange": " \tvoid appendMoney(Money aMoney)", "diff": ["-\tprivate void appendMoney(Money aMoney) {", "+\tvoid appendMoney(Money aMoney) {", "+\t\tif (aMoney.isZero()) return;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0182e3aad619d230bb538c801d5076b7", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/tests/AssertionTest.java", "commitBeforeChange": "e060609ca85c723422684450b46dade931b0948a", "commitAfterChange": "ee76b28e432a94c33160b3edc7cb60b6394ac0cc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \t@Test(expected=ComparisonFailure.class) public void arraysElementsDiffer()", "signatureAfterChange": " \t \t@Test(expected=ArrayComparisonFailure.class) public void arraysElementsDiffer()", "diff": ["-\t@Test(expected=ComparisonFailure.class) public void arraysElementsDiffer() {", "+\t@Test(expected=ArrayComparisonFailure.class) public void arraysElementsDiffer() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "019c3ad9ba524dea47983b93f39b1ced", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java", "commitBeforeChange": "d1b8c04e54f0b9e4807fa88a2ff36ad9ba177107", "commitAfterChange": "07447b5f98989e4456be8ee8acd01cfb3d20b8c0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "          @Override         protected void runWithIncompleteAssignment(Assignments incomplete)                 throws InstantiationException, IllegalAccessException,                 Throwable", "signatureAfterChange": "          @Override         protected void runWithIncompleteAssignment(Assignments incomplete)                 throws Throwable", "diff": ["-                throws InstantiationException, IllegalAccessException,", "-                Throwable {", "+                throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "023f9fe9a580d16a48d4765f2eb87e2e", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/awtui/TestRunner.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void addFailure(Test test, Throwable t)", "signatureAfterChange": "  \tpublic void addFailure(Test test, AssertionFailedError t)", "diff": ["-\tpublic void addFailure(Test test, Throwable t) {", "+\tpublic void addFailure(Test test, AssertionFailedError t) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "027b176ce566539c97652bf3a26169e5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public Request sortRequest(Request request)", "signatureAfterChange": "     public Request sortRequest(Request request)", "diff": ["-        Collections.sort(leaves, fHistory.testComparator());", "+        Collections.sort(leaves, history.testComparator());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0287fe0989809eff019a32a40f7c54a4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private int getConstructorParameterCount()", "signatureAfterChange": "      private int getConstructorParameterCount()", "diff": ["-                .signatures(fClass.getOnlyConstructor());", "+                .signatures(clazz.getOnlyConstructor());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0301be177a6519933114cd5eae442e7c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestElement.java", "commitBeforeChange": "4e1018a940699a38673b1861977110e6b558afb1", "commitAfterChange": "4cb9a65f450efa5f2a42128856c7b56e6d283386", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void runAfters(Object target) throws MultipleFailureException", "signatureAfterChange": "  \tpublic void runAfters(Object target) throws Throwable", "diff": ["-\tpublic void runAfters(Object target) throws MultipleFailureException {", "+\tpublic void runAfters(Object target) throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03304604d82849fde88f093ed276b1c2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java", "commitBeforeChange": "6664bd272c43bcdf00f9ef9ce6f2d73af82036b1", "commitAfterChange": "d6c79c0f626afd12506b6a5a672cdec84683c3ca", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \t@Test public void testsRunInParallel()", "signatureAfterChange": " \t \t@Test public void testsRunInParallel()", "diff": ["-\t@Test/*(timeout=1500)*/ public void testsRunInParallel() {", "+\t@Test public void testsRunInParallel() {", "-\t\tResult result= JUnitCore.runClasses(ParallelComputer.methods(), Example.class);", "+\t\tResult result= JUnitCore.runClasses(ParallelComputer.methods(),", "+\t\t\t\tExample.class);", "-\t\tassertThat(end - start, greaterThanOrEquals(1000));", "+\t\tassertThat(end - start, betweenInclusive(1000, 1500));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03319b5bbf6d25c590c9154df7637adf", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/StopwatchTest.java", "commitBeforeChange": "3c122b6a93499ee82d346c097141d2137b93c48c", "commitAfterChange": "9ec6a3fa39cb8aafe645a7f33e7da9a788679fe3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Before     public void init()", "signatureAfterChange": "      @Before     public void init()", "diff": ["-        record= new Record();", "-        finishedRecord= new Record();", "+        fRecord= new Record();", "+        fFinishedRecord= new Record();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03348a6043e833115aa51193eeeed780", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "commitAfterChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t\tprivate Link methodCompletesWithParameters(final Assignments complete, \t\t\t\tfinal Object freshInstance)", "signatureAfterChange": "  \t\tprivate Statement methodCompletesWithParameters(final Assignments complete, \t\t\t\tfinal Object freshInstance)", "diff": ["-\t\tprivate Link methodCompletesWithParameters(final Assignments complete,", "+\t\tprivate Statement methodCompletesWithParameters(final Assignments complete,", "-\t\t\treturn new Link() {", "+\t\t\treturn new Statement() {", "-\t\t\t\tpublic void run() throws Throwable {", "+\t\t\t\tpublic void evaluate() throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03b136a57ef728fa7b68545b074ae9e9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TimeWatcher.java", "commitBeforeChange": "0a2601045f101930d0ca7f31c53b416fafbbe7a7", "commitAfterChange": "c4e3854ae71d7dd8b624a977712bee3e29d5bcdd", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Override final protected void finished(Description description)", "signatureAfterChange": "      @Override final protected void finished(Description description)", "diff": ["+        finished(getNanos(), description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03c774c00b718512b293d131be404660", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/ResultPrinter.java", "commitBeforeChange": "f7e1007ff23c57400a6b81361def3da5906cfb77", "commitAfterChange": "dd541a7c7b8feaaf966e55e6c91685ea071fb3c7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tprotected void printFailures(TestResult result)", "signatureAfterChange": " \t \tprotected void printFailures(TestResult result)", "diff": ["-\t\tprintBooBoos(result.failures(), result.failureCount(), \"failure\");", "+\t\tprintDefects(result.failures(), result.failureCount(), \"failure\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "042187a38384615ffd018f63b48e1cec", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "ffd5f087e9b0ffaf146c91323adcf0ffdf469b0f", "commitAfterChange": "255f47231f5e49373d4b331e3a946e0005f1e0f4", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  \tprotected JFrame createUI(String suiteName)", "signatureAfterChange": "  \tprotected JFrame createUI(String suiteName)", "diff": ["-\t\tJScrollPane tracePane= new JScrollPane(fFailureView.getComponent(), JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);", "+\t\tJScrollPane tracePane= new JScrollPane(fFailureView.getComponent(), ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "043a4e69ae5f56487260c79c44c61ec7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TestWatcher.java", "commitBeforeChange": "2745d016f648e783360bd076f23b36908f8125b0", "commitAfterChange": "b064a274adb12c6e866cb08dedc70534237330b2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private void succeededQuietly(Description description,             List<Throwable> errors)", "signatureAfterChange": "      private void succeededQuietly(Description description,             List<Throwable> errors)", "diff": ["-        } catch (Throwable t) {", "-            errors.add(t);", "+        } catch (Throwable e) {", "+            errors.add(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "045097955b350024f6637285eb076f85", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/suppliers/TestedOnSupplier.java", "commitBeforeChange": "67e3edf20613b1278f4be05353b31b5129e21882", "commitAfterChange": "37a611801fbea6ecc9b6356d9616e761c8b59b91", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t@Override public List<PotentialAssignment> getValueSources(ParameterSignature sig)", "signatureAfterChange": " \t@Override public List<PotentialAssignment> getValueSources(ParameterSignature sig)", "diff": ["-\t\t\tlist.add(PotentialAssignment.forValue(i));", "+\t\t\tlist.add(PotentialAssignment.forValue(Arrays.asList(ints).toString(), i));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04566c132f737530fe8fd9cc5a2981e1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "         public void addError(Test test, Throwable e)", "signatureAfterChange": "         public void addError(Test test, Throwable e)", "diff": ["-            fNotifier.fireTestFailure(failure);", "+            notifier.fireTestFailure(failure);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04b454e235cec87b6402e52179b419ba", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "95a8c63cb0a7867d58ee4a0777fec65bab39a1ec", "commitAfterChange": "c7895eb8695d79b14ff2f903fbb2fab3e52e4c43", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate Value getClassRule(final FrameworkField field)", "signatureAfterChange": "  \tprivate BisectionRule getClassRule(final FrameworkField field)", "diff": ["-\tprivate Value getClassRule(final FrameworkField field) {", "+\tprivate BisectionRule getClassRule(final FrameworkField field) {", "-\t\t\treturn (Value) field.get(null);", "+\t\t\treturn (BisectionRule) field.get(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04cb61ba0a95debbc8cce53ac35f4cbe", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "1350d0562466adbea1a9f8408084acdd005bfc13", "commitAfterChange": "bd8a96dbbfe93f134f75c768e5c1254cff8a9e9f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic Assignments assignNext(PotentialAssignment source)", "signatureAfterChange": "  \tpublic Assignments assignNext(PotentialAssignment source)", "diff": ["-\t\treturn new Assignments(fContext, assigned, fUnassigned.subList(", "-\t\t\t\t1, fUnassigned.size()), fTarget);", "+\t\treturn new Assignments(assigned, fUnassigned.subList(1, fUnassigned", "+\t\t\t\t.size()), fClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04df31823b02973805533eb79e194e1a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/results/PrintableResult.java", "commitBeforeChange": "15815f55d2e9ae567ef8fe0a172f498b87a3a880", "commitAfterChange": "b0b1c80075abf53597839e6bb430804b17d5c24a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic PrintableResult(Class<?> type, Computer computer)", "signatureAfterChange": " \t \tprivate PrintableResult(Class<?> type)", "diff": ["-\tpublic PrintableResult(Class<?> type, Computer computer) {", "-\t\tthis(JUnitCore.runClasses(computer, type));", "+\tprivate PrintableResult(Class<?> type) {", "+\t\tthis(JUnitCore.runClasses(type));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04f31274bffc17013a334be28e9a9f87", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Computer.java", "commitBeforeChange": "b77d9de8e3e2894fc6120c95a8e7766c38912d49", "commitAfterChange": "796e723caa0a1f75bb7b48b2454bea633fbf8e4e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic Suite getSuite(final RunnerBuilder builder, \t\t\tClass<?>[] classes) throws InitializationError", "signatureAfterChange": "  \tpublic Runner getSuite(final RunnerBuilder builder, \t\t\tClass<?>[] classes) throws InitializationError", "diff": ["-\tpublic Suite getSuite(final RunnerBuilder builder,", "+\tpublic Runner getSuite(final RunnerBuilder builder,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04f859ebc80bafd44acef5513c06c27c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "34a0ecb4ffb3cb8d33b60c222c29145d017f02c9", "commitAfterChange": "7cd277620b4c888ae4101bb3f4768af83b85313a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprotected Statement withBeforeClasses(Statement statement)", "signatureAfterChange": " \tprotected Statement withBeforeClasses(Statement statement)", "diff": ["-\t\tList<FrameworkMethod> befores= fTestClass", "+\t\tList<FrameworkMethod> befores= getTestClass()", "-\t\treturn befores.isEmpty() ? statement :", "-\t\t\tnew RunBefores(statement, befores, null);", "+\t\treturn befores.isEmpty() ? statement : new RunBefores(statement,", "+\t\t\t\tbefores, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0504edd49591949d0dc1eb0d671e119f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "5261a76c3014edc93f568ac76e8012d59dc2c831", "commitAfterChange": "fb7e47081b37842a814e9f35013b9b12a33b3fc3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t@Override \tprotected void collectInitializationErrors(List<Throwable> errors)", "signatureAfterChange": "  \t@Override \tprotected void collectInitializationErrors(List<Throwable> errors)", "diff": ["+\t\tvalidateFields(errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "051273196e7c30859aacf8f5f9502c4e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "08719e9b61d07c17b6a4f599ecd2cd1a1519120a", "commitAfterChange": "2918286bf4a010c9ac8eadffb958ff10fb41ad62", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     protected Description describeChild(FrameworkMethod method)", "signatureAfterChange": "      @Override     protected Description describeChild(FrameworkMethod method)", "diff": ["-            fMethodDescriptions.put(method, description);", "+            fMethodDescriptions.putIfAbsent(method, description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "051b0de5d446cbccd0c63cd9f2cbfd9b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private boolean isAnyExceptionExpected()", "signatureAfterChange": "      private boolean isAnyExceptionExpected()", "diff": ["-        return fMatcherBuilder.expectsThrowable();", "+        return matcherBuilder.expectsThrowable();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05409ec0a7c373bb3d97f0cd2d785e3e", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/extensions/ActiveTestTest.java", "commitBeforeChange": "b6a023c447628100c104708666eddd0b2eaa41d3", "commitAfterChange": "86b71cb1b9784a9b87c86b4f3f12632ae6773d1f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\t \t\tpublic void success()", "signatureAfterChange": "\t\t \t\tpublic void runTest()", "diff": ["+\tpublic static class SuccessTest extends TestCase {\t\t", "+\t\tpublic void runTest() {", "-\t\tpublic void success() {", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0574c2aca991aa3fab3279582a3d9a83", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "          public ExpectedExceptionStatement(Statement base)", "signatureAfterChange": "          public ExpectedExceptionStatement(Statement base)", "diff": ["-            fNext = base;", "+            next = base;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "057cec62a99e98e2a7a83464f73da0be", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/TestWatcherTest.java", "commitBeforeChange": "8c1c0e7ee79860a603b68d8a9335ce0bce966160", "commitAfterChange": "2162def2d4eefae0c5668586b837af4ecd4aed91", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \t@Test \tpublic void testWatcherThrowsException()", "signatureAfterChange": " \t \t@Test \tpublic void testWatcherFailedThrowsException()", "diff": ["-\tpublic void testWatcherThrowsException() {", "-\t\tPrintableResult result= testResult(TestWatcherThrowsExceptionTest.class);", "+\tpublic void testWatcherFailedThrowsException() {", "+\t\tPrintableResult result= testResult(TestWatcherFailedThrowsExceptionTest.class);", "-\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05de5dd7fbbdda6b938a3727ad420be1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/extension/TestMethodInterfaceTest.java", "commitBeforeChange": "54af3dfcf6f61839cb2d531a28fc0395cdcdb790", "commitAfterChange": "6ff2381af213bf699e62244315debec66b373d81", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Test \tpublic void getBeforesIsPublic() throws SecurityException", "signatureAfterChange": "  \t@Test \tpublic void getBeforesIsPublic() throws SecurityException", "diff": ["-\t\tTestMethodElement testMethod= new TestMethodElement(new TestClass(", "+\t\tTestMethod testMethod= new TestMethod(new TestClass("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05e6070b8e54ca9fe4b4f513eb6f855a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/links/Notifying.java", "commitBeforeChange": "0e1c92693e70e52ad9af23ee6180500c74fc9c95", "commitAfterChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic Notifying(EachTestNotifier notifier, Link next)", "signatureAfterChange": "  \tpublic Notifying(Link next)", "diff": ["-", "-\tpublic Notifying(EachTestNotifier notifier, Link next) {", "-\t\tfNotifier= notifier;", "+\tpublic Notifying(Link next) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05ed10ea323788fce77072bba4145f2b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "7a0a6839fe3ae4076cc72a0586e2dbe4b1bc995f", "commitAfterChange": "734ab5187c068599352e5fdc7374c1334d484fef", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate void save() throws IOException", "signatureAfterChange": "  \tprivate void save() throws IOException", "diff": ["-\t\t\t\tfFolder));", "+\t\t\t\tfHistoryStore));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "064d7892aa505c58b88ea03976a692fa", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactories.java", "commitBeforeChange": "b5084eb51ffdb2a3bd9bed7294afc941a733a693", "commitAfterChange": "c85a267605d4484121afeccef972a7266481ee7c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r     static FilterFactory createFilterFactory(String filterFactoryFqcn) throws FilterFactoryNotCreatedException", "signatureAfterChange": "\r \r     static FilterFactory createFilterFactory(String filterFactoryFqcn) throws FilterNotCreatedException", "diff": ["-    static FilterFactory createFilterFactory(String filterFactoryFqcn) throws FilterFactoryNotCreatedException {\r", "+    static FilterFactory createFilterFactory(String filterFactoryFqcn) throws FilterNotCreatedException {\r", "-            throw new FilterFactoryNotCreatedException(e);\r", "+            throw new FilterNotCreatedException(e);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06590467e828d1247faf952c7bcd8ed3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/internal/SpecificDataPointsSupplierTest.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "          @Test     public void shouldReturnOnlyTheNamedSingleFieldDataPoints() throws Exception", "signatureAfterChange": "          @Test     public void shouldReturnOnlyTheNamedSingleFieldDataPoints() throws Throwable", "diff": ["-    public void shouldReturnOnlyTheNamedSingleFieldDataPoints() throws Exception {", "+    public void shouldReturnOnlyTheNamedSingleFieldDataPoints() throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06a697ad2bd9da7d19cc07c869950ac0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/interceptor/Interceptors.java", "commitBeforeChange": "796e723caa0a1f75bb7b48b2454bea633fbf8e4e", "commitAfterChange": "6aa1fb428b0b6de82ca6288863ce7571b0563017", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tprotected Statement withAfters(FrameworkMethod method, Object target, \t\t\tStatement statement)", "signatureAfterChange": "  \t@Override \tprotected Statement withBefores(FrameworkMethod method, Object target, \t\t\tStatement statement)", "diff": ["-\tprotected Statement withAfters(FrameworkMethod method, Object target,", "+\tprotected Statement withBefores(FrameworkMethod method, Object target,", "-\t\t// TODO Auto-generated method stub", "-\t\treturn super.withAfters(method, target, intercept(statement, target, method));", "+\t\treturn super.withBefores(method, target, intercept(statement, target, method));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06c16f8e84833d372411a32e8ca510c4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Suite.java", "commitBeforeChange": "6ff2381af213bf699e62244315debec66b373d81", "commitAfterChange": "67e3edf20613b1278f4be05353b31b5129e21882", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic Suite(Class<?> klass, SuiteBuilder builder) throws InitializationError", "signatureAfterChange": " \tpublic Suite(Class<?> klass, RunnerBuilder builder) throws InitializationError", "diff": ["-\tpublic Suite(Class<?> klass, SuiteBuilder builder) throws InitializationError {", "+\tpublic Suite(Class<?> klass, RunnerBuilder builder) throws InitializationError {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06d3f295134b61bcff7f780bbb0d7281", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/model/EachTestNotifier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void addFailure(Throwable targetException)", "signatureAfterChange": "      public void addFailure(Throwable targetException)", "diff": ["-            fNotifier", "-                    .fireTestFailure(new Failure(fDescription, targetException));", "+            notifier.fireTestFailure(new Failure(description, targetException));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06d73d00f59b8b97f516b3957c195219", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      public boolean isANonStaticInnerClass()", "signatureAfterChange": "      public boolean isANonStaticInnerClass()", "diff": ["-        return fClass.isMemberClass() && !isStatic(fClass.getModifiers());", "+        return clazz.isMemberClass() && !isStatic(clazz.getModifiers());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "080e74cdc4885514cffd7f9108e33161", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/TheoriesPerformanceTest.java", "commitBeforeChange": "752727de89a6bab731f49597c7ec3858ebb3e0a3", "commitAfterChange": "5042f695491027730cca2918616399d869de3973", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t@Test(timeout= 500) \tpublic void tryCombinationsQuickly()", "signatureAfterChange": " \t@Test \tpublic void tryCombinationsQuickly()", "diff": ["-\t@Test(timeout= 500)", "+\t// annotation parsing is again costly.", "+\t@Test"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0841f0e2996f743536dbb6c63d8113c0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "      public void filter(Filter filter) throws NoTestsRemainException", "signatureAfterChange": "      public void filter(Filter filter) throws NoTestsRemainException", "diff": ["-        synchronized (fChildrenLock) {", "-            List<T> filteredChildren = new ArrayList<T>(getFilteredChildren());", "-            for (Iterator<T> iter = filteredChildren.iterator(); iter.hasNext(); ) {", "+        synchronized (childrenLock) {", "+            List<T> children = new ArrayList<T>(getFilteredChildren());", "+            for (Iterator<T> iter = children.iterator(); iter.hasNext(); ) {", "-            fFilteredChildren = Collections.unmodifiableCollection(filteredChildren);", "-            if (fFilteredChildren.isEmpty()) {", "+            filteredChildren = Collections.unmodifiableCollection(children);", "+            if (filteredChildren.isEmpty()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0894fef2d6141f68848e7e1cad2e6464", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/runner/BaseTestRunner.java", "commitBeforeChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "commitAfterChange": "a8ec4efa178afdbc7844e94d08ab38b811c7409a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static String truncate(String s)", "signatureAfterChange": " \tpublic static String truncate(String s)", "diff": ["-\t\tif (fMaxMessageLength != -1 && s.length() > fMaxMessageLength)", "-\t\t\ts= s.substring(0, fMaxMessageLength)+\"...\";", "+\t\tif (fgMaxMessageLength != -1 && s.length() > fgMaxMessageLength)", "+\t\t\ts= s.substring(0, fgMaxMessageLength)+\"...\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08deb268ab004150ccfe7e011791818b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/MethodValidator.java", "commitBeforeChange": "1357ec0cc6f439e3e4a9d818138b36b9347f0a3d", "commitAfterChange": "141a144b3d4aca9a1f39f92c1d697a249e991317", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic List<Throwable> validateAllMethods()", "signatureAfterChange": " \t \tpublic List<Throwable> validateMethodsForDefaultRunner()", "diff": ["-\t// TODO Ugly API--one method should do both", "-\tpublic List<Throwable> validateAllMethods() {", "+\tpublic List<Throwable> validateMethodsForDefaultRunner() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08eec38dab17c696fb4abe6fde49b433", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "161229441b7365fa06f0d82e272e15f1f378b315", "commitAfterChange": "30a039854fd7f8cda135222054b247c158b91fa7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected void validatePublicVoidNoArgMethods(Class<? extends Annotation> annotation, \t\t\tboolean isStatic, List<Throwable> errors)", "signatureAfterChange": " \tprotected void validatePublicVoidNoArgMethods(Class<? extends Annotation> annotation, \t\t\tboolean isStatic, List<Throwable> errors)", "diff": ["-\t\t\teachTestMethod.validate(isStatic, errors);", "+\t\t\teachTestMethod.validatePublicVoidNoArg(isStatic, errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "091fdd67b71db3d3714bfda5198de8b5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/AssumptionViolatedException.java", "commitBeforeChange": "c2f2a8c11487523569bf30f75d16cb747947d8dc", "commitAfterChange": "d0b029f644e2f3217962f0de0cd4ffdfa641bd96", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public AssumptionViolatedException(String assumption)", "signatureAfterChange": "     public AssumptionViolatedException(String message)", "diff": ["-    public AssumptionViolatedException(String assumption) {", "-        super(assumption);", "+    public AssumptionViolatedException(String message) {", "+        super(message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0936fef0b8cb405713140e8fb1d53bae", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "86abf33f863fee1db3ba7dd8ee3e9910f105f57d", "commitAfterChange": "12b9b787a161d4b460d4d6a14da6ac53cac3713b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void addChild(Description description)", "signatureAfterChange": " \tpublic void addChild(Description description)", "diff": ["+\t\tdescription.setParent(this);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0997ba7e2d9d116dada56cf6480d6f0b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/methods/TimeoutTest.java", "commitBeforeChange": "35b428a24bdd2eddd9653189632896d4f5b1ce42", "commitAfterChange": "3e8e865039fe6531666afb860961d787065b589e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "         @Test(timeout=100)         public void failure() throws Exception", "signatureAfterChange": "          @Test         public void failure() throws Exception", "diff": ["-        @Test(timeout=100)", "+", "+        @Test"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09b6601d464997c7d07238c82890bae7", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/framework/TestResult.java", "commitBeforeChange": "a0f0ee1b3f72d9361eb09b3a25156c69a748aa47", "commitAfterChange": "478f7f9217cf5da219a7ba298e3a87f405378194", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic synchronized void addListener(TestListener listener)", "signatureAfterChange": " \tpublic synchronized void addListener(TestListener listener)", "diff": ["-\t\tfListeners.addElement(listener);", "+\t\tfListeners.add(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09d67e4ccda338832c2e80f3f0130d32", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "1350d0562466adbea1a9f8408084acdd005bfc13", "commitAfterChange": "bd8a96dbbfe93f134f75c768e5c1254cff8a9e9f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t\tprotected void runWithIncompleteAssignment(Assignments incomplete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tThrowable", "signatureAfterChange": "  \t\tprotected void runWithIncompleteAssignment(Assignments incomplete, EachTestNotifier notifier) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tThrowable", "diff": ["-\t\tprotected void runWithIncompleteAssignment(Assignments incomplete)", "+\t\tprotected void runWithIncompleteAssignment(Assignments incomplete, EachTestNotifier notifier)", "-\t\t\t\trunWithAssignment(incomplete.assignNext(source));", "+\t\t\t\trunWithAssignment(incomplete.assignNext(source), notifier);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09eddbc33fa909106dada6feac4d593c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/validator/AnnotationValidatorFactory.java", "commitBeforeChange": "15566c4b6633db5cc84cae78088b36346b7d42f4", "commitAfterChange": "9d3821f6411ad85a683b8d38e4d42411229f2eec", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public AnnotationValidator createAnnotationValidator(ValidateWith validateWithAnnotation)", "signatureAfterChange": "     public AnnotationValidator createAnnotationValidator(ValidateWith validateWithAnnotation)", "diff": ["-        AnnotationValidator validator = fAnnotationTypeToValidatorMap.get(validateWithAnnotation);", "+        AnnotationValidator validator = VALIDATORS_FOR_ANNOTATION_TYPES.get(validateWithAnnotation);", "-            fAnnotationTypeToValidatorMap.putIfAbsent(validateWithAnnotation, annotationValidator);", "-            return fAnnotationTypeToValidatorMap.get(validateWithAnnotation);", "+            VALIDATORS_FOR_ANNOTATION_TYPES.putIfAbsent(validateWithAnnotation, annotationValidator);", "+            return VALIDATORS_FOR_ANNOTATION_TYPES.get(validateWithAnnotation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a087360818bacd62dfebaf902026096", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private MaxCore(File storedResults)", "signatureAfterChange": "      private MaxCore(File storedResults)", "diff": ["-        fHistory = MaxHistory.forFolder(storedResults);", "+        history = MaxHistory.forFolder(storedResults);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a717afc6c02ae9a3ebb569094809d80", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "785a33b478d358e79a3b6592754ad9ec051e4278", "commitAfterChange": "5d9e0022d3f6db1367d530579de6332b9c8802e3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 6, "signatureBeforeChange": "         int c()", "signatureAfterChange": "         int gamma()", "diff": ["-        void b(int[][] x) {}", "-        int c() {return 0;}", "+        void beta(int[][] x) {}", "+        int gamma() {return 0;}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a98d31b09f5717eb990d018e42ce13c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "commitAfterChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tprotected Link withBefores(TestMethod method, Object target, Link link)", "signatureAfterChange": "  \tprotected Statement withBefores(TestMethod method, Object target, Statement link)", "diff": ["-\tprotected Link withBefores(TestMethod method, Object target, Link link) {", "-\t\treturn new WithBefores(link, method, target);", "+\tprotected Statement withBefores(TestMethod method, Object target, Statement link) {", "+\t\treturn new RunBefores(link, method, target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ae33f98dee7b255d5503e761a5712d4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/internal/SpecificDataPointsSupplierTest.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void shouldReturnOnlyTheNamedMethodDataPoints() throws Exception", "signatureAfterChange": "      @Test     public void shouldReturnOnlyTheNamedMethodDataPoints() throws Throwable", "diff": ["-    public void shouldReturnOnlyTheNamedMethodDataPoints() throws Exception {", "+    public void shouldReturnOnlyTheNamedMethodDataPoints() throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0afed9267b01f2924065f7533fd63e07", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/ParameterSignature.java", "commitBeforeChange": "278d76f285c4729700276e875ff8d69ea2ecfbc2", "commitAfterChange": "b1832b23b6260561467a277d492b0db16f5ecd25", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private boolean isAssignableViaTypeConversion(Class<?> targetType, Class<?> candidate)", "signatureAfterChange": "      private boolean isAssignableViaTypeConversion(Class<?> targetType, Class<?> candidate)", "diff": ["-        if (convertableTypesMap.containsKey(candidate)) {", "-            Class<?> wrapperClass = convertableTypesMap.get(candidate);", "+        if (CONVERTABLE_TYPES_MAP.containsKey(candidate)) {", "+            Class<?> wrapperClass = CONVERTABLE_TYPES_MAP.get(candidate);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b2ef7dcd638e236aea6780e378f46fb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/Failure.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public Throwable getException()", "signatureAfterChange": "      public Throwable getException()", "diff": ["-        return fThrownException;", "+        return thrownException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b443434b7fde520d9c68f81a51d7e09", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactories.java", "commitBeforeChange": "b5084eb51ffdb2a3bd9bed7294afc941a733a693", "commitAfterChange": "c85a267605d4484121afeccef972a7266481ee7c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r     static FilterFactory createFilterFactory(Class<? extends FilterFactory> filterFactoryClass)\r             throws FilterFactoryNotCreatedException", "signatureAfterChange": "\r \r     static FilterFactory createFilterFactory(Class<? extends FilterFactory> filterFactoryClass)\r             throws FilterNotCreatedException", "diff": ["-            throws FilterFactoryNotCreatedException {\r", "+            throws FilterNotCreatedException {\r", "-            throw new FilterFactoryNotCreatedException(e);\r", "-        }\r", "-    }\r", "+            throw new FilterNotCreatedException(e);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b583de958c53ed4fd34ba0f04c683bd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "36beacd221a4837af2a6d684b3a4fb79775a5231", "commitAfterChange": "b9ce87013e5389857956d785d14fc4f3fc2490c3", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \t\tprivate void invokeWithActualParameters(Object target, \t\t\t\tAssignments complete) throws Throwable", "signatureAfterChange": "  \t\tprivate void invokeWithActualParameters(FrameworkMethod method, Object target, \t\t\t\tAssignments complete) throws Throwable", "diff": ["-\t\tprivate void invokeWithActualParameters(Object target,", "+\t\tprivate void invokeWithActualParameters(FrameworkMethod method, Object target,", "-\t\t\tfTestMethod.invokeExplosively(target, values);", "+\t\t\tmethod.invokeExplosively(target, values);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b89b6f9953b14ee6ecd8f5d24f8ded2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/categories/CategoryValidatorTest.java", "commitBeforeChange": "f5e7e1ff180bb17e4f9df702a038e06a974f78f6", "commitAfterChange": "fe5d86eba71a1f59dbbed09de4add01cc20420c0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void errorIsNotAddedWhenCategoryIsNotCombinedWithIllegalCombination() throws NoSuchMethodException", "signatureAfterChange": "      @Test     public void errorIsNotAddedWhenCategoryIsNotCombinedWithIllegalCombination() throws NoSuchMethodException", "diff": ["-        List<Throwable> errors = new CategoryValidator().validateAnnotatedMethod(beforeClass);", "+        List<Exception> errors = new CategoryValidator().validateAnnotatedMethod(beforeClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b9062f743971bfdbfb8617ce01a4120", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/framework/JUnit4TestAdapterCache.java", "commitBeforeChange": "870289f3272917f312de6902b8b6bdc43552d4b7", "commitAfterChange": "6589127231db19458b696785bab3b839f9bde90f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic List<Test> asTestList(Description description)", "signatureAfterChange": "  \tpublic List<Test> asTestList(Plan plan)", "diff": ["-\tpublic List<Test> asTestList(Description description) {", "+\tpublic List<Test> asTestList(Plan plan) {", "+\t\tDescription description= plan.getDescription();", "-\t\t\treturn Arrays.asList(asTest(description));", "+\t\t\treturn Arrays.asList(asTestCase(description));", "-\t\t\tfor (Description child : description.getChildren()) {", "+\t\t\tfor (Plan child : plan.getChildren()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b906af1f0e56f2665c049ce2defa928", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/WhenNoParametersMatch.java", "commitBeforeChange": "647e9ff7881d796ea6b87472e3c1bd40e2e19c76", "commitAfterChange": "77ecd2119d3124b72935038effffadf7b98eccd9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Theory \tpublic void showFailedAssumptionsWhenNoParametersFound(int data, \t\t\tMatcher<Integer> matcher) throws Exception", "signatureAfterChange": "  \t@Theory \tpublic void showFailedAssumptionsWhenNoParametersFound(int data, \t\t\tMatcher<Integer> matcher) throws Exception", "diff": ["+", "+\t\t", "+\t\t// TODO: (Dec 7, 2007 11:15:45 AM) DUP", "+", "+\t\tassertThat(result, containsString(\"ignored test:\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bb15ce3534beae1c4e138b7c0ccb3f1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/junit3compatibility/JUnit38ClassRunnerTest.java", "commitBeforeChange": "9b9d86d7e11ba518a826ce35784857d2c1428f38", "commitAfterChange": "51f22b5c68e8da3f5b46a4c48a1d4a0451ad6fe3", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     @Test(expected = NoTestsRemainException.class)      public void filterNoTestsRemain() throws NoTestsRemainException", "signatureAfterChange": "     @Test(expected = NoTestsRemainException.class)      public void filterNoTestsRemain() throws NoTestsRemainException", "diff": ["-        runner.filter(new RejectAllFilter());  ", "+        runner.filter(new RejectAllTestsFilter());  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bcb05a0bb9bdfb3ac0daa069d7ee632", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "1cec456a2c5638818959856eb3cef98743cbe08b", "commitAfterChange": "e0cddcdfa8ec823da136af500cce0910a1dd2264", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t@SuppressWarnings(\"unchecked\") \tprivate Iterable<Object[]> getAllParameters() \t\t\tthrows Throwable", "signatureAfterChange": "  \t@SuppressWarnings(\"unchecked\") \tprivate Iterable<Object[]> allParameters() throws Throwable", "diff": ["-\tprivate Iterable<Object[]> getAllParameters()", "-\t\t\tthrows Throwable {", "+\tprivate Iterable<Object[]> allParameters() throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bd50485d93535453ebb3e1f9ca47b3d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/InvokeMethod.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void evaluate() throws Throwable", "signatureAfterChange": "      @Override     public void evaluate() throws Throwable", "diff": ["-        fTestMethod.invokeExplosively(fTarget);", "+        testMethod.invokeExplosively(target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bd9cad669f0a5b4a92013d9a3224313", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "161229441b7365fa06f0d82e272e15f1f378b315", "commitAfterChange": "30a039854fd7f8cda135222054b247c158b91fa7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t\t@Override \t\tpublic Object getValue() throws CouldNotGenerateValueException", "signatureAfterChange": "  \t\t@Override \t\tpublic Object getValue() throws CouldNotGenerateValueException", "diff": ["-\t\t\t\treturn fMethod.invoke(null);", "+\t\t\t\treturn fMethod.invokeExplosively(null);", "-\t\t\t} catch (InvocationTargetException e) {", "+\t\t\t} catch (Throwable e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0be4fa6f85174b7762128c97d18e6422", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/framework/TestResult.java", "commitBeforeChange": "2745d016f648e783360bd076f23b36908f8125b0", "commitAfterChange": "b064a274adb12c6e866cb08dedc70534237330b2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public synchronized void addError(Test test, Throwable t)", "signatureAfterChange": "     public synchronized void addError(Test test, Throwable e)", "diff": ["-    public synchronized void addError(Test test, Throwable t) {", "-        fErrors.add(new TestFailure(test, t));", "+    public synchronized void addError(Test test, Throwable e) {", "+        fErrors.add(new TestFailure(test, e));", "-            each.addError(test, t);", "+            each.addError(test, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0be7e59c0b26b76468443ce04027e85d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "e07e59eb9d24f6e4fa85dd99f311c1feca6ea983", "commitAfterChange": "5d957024be0d1b181879d48b7915b3b8aad8f5d5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprotected Object createTest() throws Exception", "signatureAfterChange": " \tprotected Object createTest() throws Exception", "diff": ["-\t\treturn getTestClass().getConstructor().newInstance();", "+\t\treturn getTestClass().getOnlyConstructor().newInstance();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c0f8f72bdb96a443ad4ad029fd0268e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int getFailureCount()", "signatureAfterChange": "     public int getFailureCount()", "diff": ["-        return fFailures.size();", "+        return failures.size();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c614c47a873cd744f8597e6517dfc35", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      @Override     public boolean equals(Object obj)", "signatureAfterChange": "      @Override     public boolean equals(Object obj)", "diff": ["-        return fClass == other.fClass;", "+        return clazz == other.clazz;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c674df57c3499e157de4e6416b65857", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          @Override         public String getDescription() throws CouldNotGenerateValueException", "signatureAfterChange": "          @Override         public String getDescription() throws CouldNotGenerateValueException", "diff": ["-            return fMethod.getName();", "+            return method.getName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c6d7ca99bd5978323fb84f15432f3bb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runner/JUnitCore.java", "commitBeforeChange": "db89759c22060a89f6750e2e92ce93072eace561", "commitAfterChange": "521fdb5aae536bd5055f6d0e4f09c5a7bdb5799f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic Result run(junit.framework.Test test)", "signatureAfterChange": " \tpublic Result run(junit.framework.Test test)", "diff": ["-\t\treturn run(new OldTestClassRunner(test));", "+\t\treturn run(new JUnit38ClassRunner(test));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c8b5b694d19f3ef7b17c577b402d7bf", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Suite.java", "commitBeforeChange": "a916d4133c7e394130d7953da427aae9917ab92c", "commitAfterChange": "d148bce8682505082a3cc634acbd36ac13a10c9a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected Suite(Class<?> klass, Class<?>[] annotatedClasses) throws InitializationError", "signatureAfterChange": "  \tprotected Suite(SuiteBuilder builder, Class<?> klass, Class<?>[] annotatedClasses) throws InitializationError", "diff": ["-\tprotected Suite(Class<?> klass, Class<?>[] annotatedClasses) throws InitializationError {", "+\tprotected Suite(SuiteBuilder builder, Class<?> klass, Class<?>[] annotatedClasses) throws InitializationError {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ca4ad589986f2301ed3b9c26fb17c08", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/FilterOptionIntegrationTest.java", "commitBeforeChange": "5edfb4447b609c178d63a3d991172861076d143b", "commitAfterChange": "34336085d5aba69c997f8e6b244531561afebcd4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private void assertNotStarted(Class<?> testClass)", "signatureAfterChange": "      private void assertWasNotRun(Class<?> testClass)", "diff": ["-    private void assertNotStarted(Class<?> testClass) {", "+    private void assertWasNotRun(Class<?> testClass) {", "-                testListener.testStarted(testClass));", "+                testListener.wasRun(testClass));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cca2ca72ea71009c1ea335118521aac", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/extension/CompositeRunnerTest.java", "commitBeforeChange": "f8a42db55bdb365a111ca0ab2175d804c55002af", "commitAfterChange": "804f76fdf00c9f9fcbef58f03bbeda1f80b3ad8e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\tpublic CompositeWithClass(Class<?> type)", "signatureAfterChange": " \t\tpublic CompositeWithClass(Class<?> type)", "diff": ["-\t\t\tsuper(type);", "+\t\t\tsuper(type, \"something\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cedbb592ee6de76e2a230e81763a178", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runner/Description.java", "commitBeforeChange": "3b75d00dafe4851195ddcd2f8810a18a55e43514", "commitAfterChange": "dabf9f919413ef7f86c95140502792bcaa2b842a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Description createSuiteDescription(Class<?> testClass)", "signatureAfterChange": " \tpublic static Description createSuiteDescription(Class<?> testClass)", "diff": ["-\t\treturn new Description(testClass.getName());", "+\t\treturn new Description(testClass.getName(), testClass.getAnnotations());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d249f1c0cfc3d587fe126cc03b0ee73", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public Object[] getAllArguments(boolean nullsOk)             throws CouldNotGenerateValueException", "signatureAfterChange": "      public Object[] getAllArguments() throws CouldNotGenerateValueException", "diff": ["-    public Object[] getAllArguments(boolean nullsOk)", "-            throws CouldNotGenerateValueException {", "-        return getActualValues(0, fAssigned.size(), nullsOk);", "+    public Object[] getAllArguments() throws CouldNotGenerateValueException {", "+        return getActualValues(0, fAssigned.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d583a9a646aef839df920bd8257d442", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/FilterFactoriesTest.java", "commitBeforeChange": "b5084eb51ffdb2a3bd9bed7294afc941a733a693", "commitAfterChange": "c85a267605d4484121afeccef972a7266481ee7c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r     @Test\r     public void shouldThrowExceptionIfNotFilterFactory() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldThrowExceptionIfNotFilterFactory() throws Exception", "diff": ["-        expectedException.expect(FilterFactories.FilterFactoryNotCreatedException.class);\r", "+        expectedException.expect(FilterFactory.FilterNotCreatedException.class);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d771facb3b7d1af158e6c09ac2a5a74", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TestWatcher.java", "commitBeforeChange": "2745d016f648e783360bd076f23b36908f8125b0", "commitAfterChange": "b064a274adb12c6e866cb08dedc70534237330b2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void startingQuietly(Description description,             List<Throwable> errors)", "signatureAfterChange": "      private void startingQuietly(Description description,             List<Throwable> errors)", "diff": ["-        } catch (Throwable t) {", "-            errors.add(t);", "+        } catch (Throwable e) {", "+            errors.add(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dcec23902da7d80cb266b913fda19db", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "5dd69355f371be15aee03875752f95e2b20e02c9", "commitAfterChange": "ad9972ba5d135d1c5673f0773cb7027f7823feb5", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private static List<Class<?>> getSuperClasses(Class<?> testClass)", "signatureAfterChange": "      private static List<Class<?>> getSuperClasses(Class<?> testClass)", "diff": ["-        ArrayList<Class<?>> results = new ArrayList<Class<?>>();", "+        List<Class<?>> results = new ArrayList<Class<?>>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dfde6afda5a846d998ab205460a5638", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "34a0ecb4ffb3cb8d33b60c222c29145d017f02c9", "commitAfterChange": "7cd277620b4c888ae4101bb3f4768af83b85313a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \t@Override \tpublic Description getDescription()", "signatureAfterChange": "  \t@Override \tpublic Description getDescription()", "diff": ["-\t", "+", "-\t\tfor (T child : getFilteredChildren())", "+\t\tfor (T child : getCachedChildren())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e0c847883685d73ff52464516eb2f76", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/experimental/categories/CategoryFilterFactoryTest.java", "commitBeforeChange": "56193048f411846a58c0e0377a5f1ccfecd3d2f9", "commitAfterChange": "826529633261161edd2d9dc0f866b2c3c0420514", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r     @Test\r     public void shouldThrowException() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldThrowException() throws Exception", "diff": ["-                Description.createSuiteDescription(testName.getMethodName()),\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e1b261a6a3635150ae57751bf91ccde", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/awtui/TestRunner.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \t \tpublic void rerun()", "signatureAfterChange": " \t \tpublic void rerun()", "diff": ["-\t\t\tClass reloadedTestClass= fTestLoader.reload(test.getClass());", "+\t\t\tClass reloadedTestClass= getLoader().reload(test.getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e41e33d4d1ce5396133cd12d63bb594", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCommandLineParser.java", "commitBeforeChange": "40b8761099da900ad219fe9b06060cda1e212f83", "commitAfterChange": "b01900fddca5ff54258e621025ccdbbc75f880f1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r     void parseParameters(String[] args)", "signatureAfterChange": "\r \r     void parseParameters(String[] args)", "diff": ["-                classes.add(ClassUtil.getClass(arg));\r", "+                classes.add(Classes.getClass(arg));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e54a57b1e64d8d4ee3c15da0721c831", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/PotentialAssignment.java", "commitBeforeChange": "2745d016f648e783360bd076f23b36908f8125b0", "commitAfterChange": "b064a274adb12c6e866cb08dedc70534237330b2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "                  public CouldNotGenerateValueException(Throwable t)", "signatureAfterChange": "                  public CouldNotGenerateValueException(Throwable e)", "diff": ["-        public CouldNotGenerateValueException(Throwable t) {", "-            super(t);", "+        public CouldNotGenerateValueException(Throwable e) {", "+            super(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ea0991c19655a5e2b48f1eb353b1095", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/model/EachTestNotifier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void fireTestStarted()", "signatureAfterChange": "      public void fireTestStarted()", "diff": ["-        fNotifier.fireTestStarted(fDescription);", "+        notifier.fireTestStarted(description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0eb712c306086f010ec20c3690e4544a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/assertion/BothTest.java", "commitBeforeChange": "e3f50a17c8c6fb7a33bd8a7afb36235b22422346", "commitAfterChange": "67c31453db464a17bd907a8b4ccfb9103ef946f0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \t@Test public void superclassesAreOkInSecondPositionOnly()", "signatureAfterChange": "  \t@Test \tpublic void superclassesAreOkInSecondPositionOnly()", "diff": ["-\t", "-\t@Test public void superclassesAreOkInSecondPositionOnly() {", "-\t\tassertThat(\"a\", both(containsString(\"a\")).and(matches(is(String.class))));", "+", "+\t@Test", "+\tpublic void superclassesAreOkInSecondPositionOnly() {", "+\t\tassertThat(\"a\", both(containsString(\"a\")).and(is(String.class)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ec09e09105bf2dac2e18f141f7c7d35", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCommandLineParser.java", "commitBeforeChange": "5edfb4447b609c178d63a3d991172861076d143b", "commitAfterChange": "34336085d5aba69c997f8e6b244531561afebcd4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      String[] parseOptions(String[] args)", "signatureAfterChange": "      String[] parseOptions(String[] args)", "diff": ["-                                new Failure(description, new Error(\"JUnit knows nothing about the \" + arg + \" option\"));", "+                                new Failure(description, new CommandLineParserError(\"JUnit knows nothing about the \" + arg + \" option\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "100e7c1824f470c942b97528678c8fbb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "d3de6079892fa89aa46386c0369a29b4ef9e9e3c", "commitAfterChange": "669bb577583f2edd8cd65008a7c9ac19ebc350ea", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  \tprivate boolean shouldRun(T each)", "signatureAfterChange": "  \tprivate boolean shouldRun(T each)", "diff": ["-\t\treturn fFilter == null || fFilter.shouldRun(describeChild(each));", "+\t\treturn fFilter.shouldRun(describeChild(each));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "101191f34e17fc6c5d4f2f3ea82b282c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public <T extends Annotation> T getAnnotation(Class<T> annotationType)", "signatureAfterChange": "     public <T extends Annotation> T getAnnotation(Class<T> annotationType)", "diff": ["-        return fMethod.getAnnotation(annotationType);", "+        return method.getAnnotation(annotationType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10362853102dfd4bf93efcb6d7f7e8c2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "beb1f4a80f7fa20523d40535fb81c1b8a7a9e638", "commitAfterChange": "83a25d440d118b7d10779a884d35f31045949e27", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private <T> List<T> getAnnotatedMembers(Map<Class<?>, List<T>> map,             Class<? extends Annotation> type)", "signatureAfterChange": "      private static <T> List<T> getAnnotatedMembers(Map<Class<?>, List<T>> map,             Class<? extends Annotation> type)", "diff": ["-    private <T> List<T> getAnnotatedMembers(Map<Class<?>, List<T>> map,", "+    private static <T> List<T> getAnnotatedMembers(Map<Class<?>, List<T>> map,", "-            map.put(type, new ArrayList<T>());", "+            map.put(type, new CopyOnWriteArrayList<T>());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "104caf1cad45f5177693cd6d5b020e12", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/RunNotifier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void pleaseStop()", "signatureAfterChange": "     public void pleaseStop()", "diff": ["-        fPleaseStop = true;", "+        pleaseStop = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "107ebd9db3ec65a81cecc24270d53db1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "b3831d600d2d893ec6250ee930188cc373d81ee5", "commitAfterChange": "403f761da11bdaf9a03538139e7ae51601c36b0e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \t\tprivate boolean isParameterizedClass(Description description)", "signatureAfterChange": "  \tprivate static boolean canHaveCategorizedChildren(Description description)", "diff": ["-", "-\t\tprivate boolean isParameterizedClass(Description description) {", "-\t\t\tRunWith annotation= description.getAnnotation(RunWith.class);", "-\t\t\tif (annotation == null)", "-\t\t\t\treturn false;", "-\t\t\treturn annotation.value().equals(Parameterized.class);", "+", "+\tprivate static boolean canHaveCategorizedChildren(Description description) {", "+\t\tRunWith annotation= description.getAnnotation(RunWith.class);", "+\t\tif (annotation == null)", "+\t\t\treturn true;", "+\t\t// TODO: something more general", "+\t\treturn !annotation.value().equals(Parameterized.class);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1116ddaa0fb558ef9f73166231c19c59", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/FailureRunView.java", "commitBeforeChange": "ffd5f087e9b0ffaf146c91323adcf0ffdf469b0f", "commitAfterChange": "255f47231f5e49373d4b331e3a946e0005f1e0f4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic void addTab(JTabbedPane pane)", "signatureAfterChange": " \t \tpublic void addTab(JTabbedPane pane)", "diff": ["-\t\tJScrollPane scrollPane= new JScrollPane(fFailureList, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);", "+\t\tJScrollPane scrollPane= new JScrollPane(fFailureList, ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11178cea3f8f1ab178e8fb3a88c4acf3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "4dcf3a499652b3c089d91e209c6f01313115ff76", "commitAfterChange": "a916d4133c7e394130d7953da427aae9917ab92c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate void printFailedAssumptions(Result result)", "signatureAfterChange": " \t \tprivate void printFailedAssumptions(Result result)", "diff": ["-\t\tprintExceptions(\"ignored test\", \"IGNORED TEST \", result.getFailedAssumptions());", "+\t\tprintEvents(\"invalid assumption\", \"INVALID ASSUMPTION \", result.getFailedAssumptions());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1117e92256fb0921f2056b20524cc6e7", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/TestListenerTest.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void addFailure(Test test, Throwable t)", "signatureAfterChange": " \tpublic void addFailure(Test test, AssertionFailedError t)", "diff": ["-\tpublic void addFailure(Test test, Throwable t) {", "+\tpublic void addFailure(Test test, AssertionFailedError t) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "115448eaf67f9f80fd29c914a3feb5b6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/methods/TestMethodTest.java", "commitBeforeChange": "37c590a7174da5b260d13b694898df4ecdb9ac6e", "commitAfterChange": "a20a0181362d470fbfcb1dff865dfb321fe3b8b1", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  \t@Test public void ignoreRunner()", "signatureAfterChange": "  \t@Test public void ignoreRunner()", "diff": ["+\t\tassertEquals(1, result.getRunCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11909e3311f41d450bb883a341bd4453", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "5dd69355f371be15aee03875752f95e2b20e02c9", "commitAfterChange": "ad9972ba5d135d1c5673f0773cb7027f7823feb5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private static <T extends FrameworkMember<T>> Map<Class<? extends Annotation>, List<T>>             makeDeeplyUnmodifiable(Map<Class<? extends Annotation>, List<T>> source)", "signatureAfterChange": "      private static <T extends FrameworkMember<T>> Map<Class<? extends Annotation>, List<T>>             makeDeeplyUnmodifiable(Map<Class<? extends Annotation>, List<T>> source)", "diff": ["-        LinkedHashMap<Class<? extends Annotation>, List<T>> copy =", "+        Map<Class<? extends Annotation>, List<T>> copy ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11ae5aaae9a209e65e776728c6fe7262", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public Runner getSuite(RunnerBuilder builder, java.lang.Class<?>[] classes)             throws InitializationError", "signatureAfterChange": "      @Override     public Runner getSuite(RunnerBuilder builder, java.lang.Class<?>[] classes)             throws InitializationError", "diff": ["-        return fClasses ? parallelize(suite) : suite;", "+        return this.classes ? parallelize(suite) : suite;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11dd4c36ff8f8dbef59ae035d33fe332", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit38ClassRunner.java", "commitBeforeChange": "0174b15e97908a4a68625cb029a07e8f7d593afc", "commitAfterChange": "9a192ede27ad2936b0c4a31fe5d0180dfd556d8b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate Description makeDescription(Test test)", "signatureAfterChange": "  \tprivate Description makeDescription(Test test)", "diff": ["-\t\t} else if (test instanceof JUnit4TestAdapter) {", "-\t\t\tJUnit4TestAdapter adapter= (JUnit4TestAdapter) test;", "+\t\t} else if (test instanceof Describable) {", "+\t\t\tDescribable adapter= (Describable) test;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11eb7162f1912e7eb71a8e936c4a1951", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public String getClassName()", "signatureAfterChange": "     public String getClassName()", "diff": ["-        return testClass != null ? testClass.getName() : methodAndClassNamePatternGroupOrDefault(2, toString());", "+        return fTestClass != null ? fTestClass.getName() : methodAndClassNamePatternGroupOrDefault(2, toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12165835bc9506823ee536ae1129eaa3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java", "commitBeforeChange": "fe5d86eba71a1f59dbbed09de4add01cc20420c0", "commitAfterChange": "d9054149988487750679e35a349df7e0e2df5870", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "          @Override         public List<Exception> validateAnnotatedField(Field field)", "signatureAfterChange": "          @Override         public List<Exception> validateAnnotatedField(FrameworkField field)", "diff": ["-        public List<Exception> validateAnnotatedField(Field field) {", "+        public List<Exception> validateAnnotatedField(FrameworkField field) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "122ac151fdb539fa95283d37e20a664b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/framework/AssertionFailedError.java", "commitBeforeChange": "2d13004b3fbba2fe6ed919bbc98f2e3f69bb4809", "commitAfterChange": "1b809a4a2e914da039841ff3d1c457e8e5122ac3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic AssertionFailedError(String message)", "signatureAfterChange": "  \tpublic AssertionFailedError(String message)", "diff": ["-\t\tsuper(message);", "+\t\tsuper(defaultString(message));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12eba16a57dac7503f96abdd0d4dc794", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/manipulation/FilterableTest.java", "commitBeforeChange": "fab8f0da7e35f0436b80bf5cfe799882b2cb4db5", "commitAfterChange": "d6662fcc06ec7b07c696eb703c47d3731e4e11c7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t@Test \tpublic void testFilterInRunnerConstructor()", "signatureAfterChange": "  \t@Test \tpublic void testFilterInRunnerConstructor()", "diff": ["-\t\tthrow new Error();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "133c66300d71c7bc33c9c4f0bfeb7ff5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "          @Override         public void testFailure(Failure failure) throws Exception", "signatureAfterChange": "          @Override         public void testFailure(Failure failure) throws Exception", "diff": ["-            fFailures.add(failure);", "+            failures.add(failure);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1375290d7a2169b8e92f8382681e6a07", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tpublic void sort(final Sorter sorter)", "signatureAfterChange": "  \tpublic void sort(final Sorter sorter)", "diff": ["-\t\tCollections.sort(fTestMethods, new Comparator<TestMethod>() {", "-\t\t\tpublic int compare(TestMethod o1, TestMethod o2) {", "+\t\tCollections.sort(fTestMethods, new Comparator<FrameworkMethod>() {", "+\t\t\tpublic int compare(FrameworkMethod o1, FrameworkMethod o2) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "137d48d56b7861527bcac59da3363b91", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f", "commitAfterChange": "c503e40d9ec79ba76b69dd31d7dd32648fa13cf2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tprivate List<Description> findLeaves(Request request)", "signatureAfterChange": " \t \tprivate List<Description> findLeaves(Request request)", "diff": ["-\t\tfindLeaves(null, request.getRunner().getDescription(), results);", "+\t\tfindLeaves(null, request.getRunner().getPlan(), results);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1381b9a99fde43fcc2ed1018fcff225e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "4081076e513e84bb2376f889d4108e64e9a18653", "commitAfterChange": "a58514aec7e843339be24980e92aeeb759327ffb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic Link timeout(Link next)", "signatureAfterChange": " \t \tpublic Anchor timeout(Anchor next)", "diff": ["-\tpublic Link timeout(Link next) {", "+\tpublic Anchor timeout(Anchor next) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "142b7c991a4dacc3668c27b5914a443c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/AllTests.java", "commitBeforeChange": "141a144b3d4aca9a1f39f92c1d697a249e991317", "commitAfterChange": "7f08797ece011ff765e98635323d59811363df5b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprivate static Test suite(Class<?> klass) throws Throwable", "signatureAfterChange": "  \tpublic static Test testFromSuiteMethod(Class<?> klass) throws Throwable", "diff": ["-\tprivate static Test suite(Class<?> klass) throws Throwable {", "+\tpublic static Test testFromSuiteMethod(Class<?> klass) throws Throwable {", "-\t\t} catch (InvocationTargetException e) { // TODO need coverage", "+\t\t} catch (InvocationTargetException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "146079c82fa04e71ec26f7d0d512cbf0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/TextListener.java", "commitBeforeChange": "a6368e40e787e7a23c9f1e58d6a47bf9fa2d0a2c", "commitAfterChange": "94ebd93396420bcd03ab99a352e38df822d59f67", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tpublic void testRunFinished(Result result)", "signatureAfterChange": "  \t@Override \tpublic void testRunFinished(Result result)", "diff": ["+\t\tprintIgnorances(result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1463fa93c3b9a183693d7e12b6a1d7be", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "          private TestClass getTestClass()", "signatureAfterChange": "          private TestClass getTestClass()", "diff": ["-            return fTestClass;", "+            return testClass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "153325e3317cc5ceaf00a66719b2eec5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCore.java", "commitBeforeChange": "496ee866a46f783d145b649a688df57cbf79490e", "commitAfterChange": "5f7fddf537e551109ffd6241a00c87a2b3521523", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic Result run(Runner runner)", "signatureAfterChange": " \tpublic Result run(Runner runner)", "diff": ["-\t\t\tfNotifier.fireTestRunStarted(runner.getPlan());", "+\t\t\tfNotifier.fireTestRunStarted(runner.getDescription());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1540b88762611419a9b4ac81807118ec", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "db9a456f1cff2de765b0dd979bca020636dc88d0", "commitAfterChange": "c610a49727858597d9a10289bed0a0174053a69f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test public void getDeclaredMethods() throws Exception", "signatureAfterChange": "      @Test public void getMethodsNullSorter() throws Exception", "diff": ["-", "-    @Test public void getDeclaredMethods() throws Exception {", "-        assertEquals(\"[void epsilon(), void beta(int[][]), java.lang.Object alpha(int,double,java.lang.Thread), void delta(), int gamma(), void gamma(boolean)]\", declaredMethods(Dummy.class));", "-        assertEquals(\"[void testOne()]\", declaredMethods(Super.class));", "-        assertEquals(\"[void testTwo()]\", declaredMethods(Sub.class));", "-    }", "+    @Test public void getMethodsNullSorter() throws Exception {", "+        assertEquals(\"[void epsilon(), void beta(int[][]), java.lang.Object alpha(int,double,java.lang.Thread), void delta(), int gamma(), void gamma(boolean)]\", declaredMethods(Dummy.class));", "+        assertEquals(\"[void testOne()]\", declaredMethods(Super.class));", "+        assertEquals(\"[void testTwo()]\", declaredMethods(Sub.class));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1560048a9dca69c76b132b770a6be62d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/assertion/BothTest.java", "commitBeforeChange": "96635b8788e3d089450c2791dd2f11100244d9e1", "commitAfterChange": "8a9c52df0ef4c0667a3a54bd4c6387c149577c2e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Test \tpublic void eitherPasses()", "signatureAfterChange": "  \t@Test \tpublic void eitherPasses()", "diff": ["-\t\tassertThat(3, either(is(3)).or(is(4)));", "+\t\tassertThat(3, either(is(3)).or(matches(is(4))));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15d1367a0a4293a82ce634fa0ba833a7", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/runner/BaseTestRunner.java", "commitBeforeChange": "a0f0ee1b3f72d9361eb09b3a25156c69a748aa47", "commitAfterChange": "478f7f9217cf5da219a7ba298e3a87f405378194", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic static void savePreferences() throws IOException", "signatureAfterChange": "  \tpublic static void savePreferences() throws IOException", "diff": ["-\t\t\t// calling of the deprecated save method to enable compiling under 1.1.7", "-\t\t\tgetPreferences().save(fos, \"\");", "+\t\t\tgetPreferences().store(fos, \"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15f118299c3ee42399a7951f7c22f76c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "af5722e040626f7c3aa14ccbfb4cb2375f43a561", "commitAfterChange": "568e29c871ea144e12f273dc7e12c949a5a507da", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprotected List<FrameworkField> ruleFields()", "signatureAfterChange": " \tprotected List<FrameworkField> classRuleFields()", "diff": ["-\tprotected List<FrameworkField> ruleFields() {", "-\t\treturn fTestClass.getAnnotatedFields(Rule.class);", "+\tprotected List<FrameworkField> classRuleFields() {", "+\t\treturn fTestClass.getAnnotatedFields(ClassRule.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16396c19564d783645f442ae61a023a9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public ArrayList<Description> getChildren()", "signatureAfterChange": "     public ArrayList<Description> getChildren()", "diff": ["-        return new ArrayList<Description>(children);", "+        return new ArrayList<Description>(fChildren);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "166e55f306ef253417a0444f3de598f2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/matchers/JUnitMatchers.java", "commitBeforeChange": "07045d97024b77023df481f808ea687e006fb338", "commitAfterChange": "e381886b42fb190e3ebb82503330e8ca2788a929", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic static Matcher<Throwable> causedBy(final Matcher<? super Throwable> causeMatcher)", "signatureAfterChange": " \tpublic static Matcher<Throwable> causedBy(final Matcher<? super Throwable> causeMatcher)", "diff": ["-\t\treturn new ThrowableMatcher(causeMatcher);", "+\t\treturn new CauseMatcher(causeMatcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16acd075a1136efc02d6fbccc6c53ace", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/builders/IgnoredClassRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public IgnoredClassRunner(Class<?> testClass)", "signatureAfterChange": "      public IgnoredClassRunner(Class<?> testClass)", "diff": ["-        fTestClass = testClass;", "+        clazz = testClass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16caa49cc73fad6c1158cb5b5756f545", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/framework/TestSuite.java", "commitBeforeChange": "b6a023c447628100c104708666eddd0b2eaa41d3", "commitAfterChange": "86b71cb1b9784a9b87c86b4f3f12632ae6773d1f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t public TestSuite(final Class theClass)", "signatureAfterChange": " \t public TestSuite(final Class theClass)", "diff": ["-\t\t\tgetConstructor(theClass); // Avoid generating multiple error messages", "+\t\t\tgetTestConstructor(theClass); // Avoid generating multiple error messages"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16e08df2b896a64078b3f00e1572d9b7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCommandLineParseResult.java", "commitBeforeChange": "d1b8c04e54f0b9e4807fa88a2ff36ad9ba177107", "commitAfterChange": "07447b5f98989e4456be8ee8acd01cfb3d20b8c0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r     public Request createRequest(Computer computer)", "signatureAfterChange": "\r     public Request createRequest(Computer computer)", "diff": ["-                    .classes(computer, classes.toArray(new Class<?>[0]))\r", "+                    .classes(computer, classes.toArray(new Class<?>[classes.size()]))\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "173cb20f6a727b853941d1067ad238cc", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/junit/tests/framework/SuiteTest.java", "commitBeforeChange": "7ffc23078cc11ce7502c375242b66d6a745ac9a1", "commitAfterChange": "d0534dae86dd511eb0575dbdf7e706a40f51e590", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void testOneTestCase()", "signatureAfterChange": " \tpublic void testOneTestCase()", "diff": ["-\t\tTest t= new TestSuite(OneTestCase.class);", "+\t\tTestSuite t= new TestSuite(OneTestCase.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1749ad4a11e160719fde6cbadebb55a4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "7b5641996d486bbcb33f13a9130821303e1e7d89", "commitAfterChange": "1ad3a59952f3528914d1225d51bbb04adb62c22f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic FailOnTimeout(Statement next, long timeout)", "signatureAfterChange": "  \tpublic FailOnTimeout(Statement originalStatement, long timeout)", "diff": ["-", "-\tpublic FailOnTimeout(Statement next, long timeout) {", "-\t\tfNext= next;", "+\tpublic FailOnTimeout(Statement originalStatement, long timeout) {", "+\t\tfOriginalStatement= originalStatement;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1750cc58be17973c8469839ff8c58ca9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TimeWatcher.java", "commitBeforeChange": "582d86c49eb8624b9db65e69ad0e404821505b3d", "commitAfterChange": "0a2601045f101930d0ca7f31c53b416fafbbe7a7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override final protected void succeeded(Description description)", "signatureAfterChange": "      @Override final protected void succeeded(Description description)", "diff": ["-        endTime = System.nanoTime();", "+        endNanos = System.nanoTime();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17579745ff00104c63ac2b2fb7323fc8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      Long getTestDuration(Description key)", "signatureAfterChange": "      Long getTestDuration(Description key)", "diff": ["-        return fDurations.get(key.toString());", "+        return durations.get(key.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "178df25f9c2b6bdb74fac5363c82e937", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "e727dd6b1cb2caa1699da3b2df7625c9554adc36", "commitAfterChange": "95bd62b2ffd80394d1a17e9078a4d79478423030", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t\t@Override \t\tpublic void testFinished(Description description) throws Exception", "signatureAfterChange": "  \t\t@Override \t\tpublic void testFinished(Description description) throws Exception", "diff": ["-\t\t\tif (!fTestIgnored)", "+\t\t\tif (!fAssumptionFailed)", "-\t\t\tfTestIgnored = false;", "+\t\t\tfAssumptionFailed = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17ad4d962fc9cfb056d3be462e640550", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/TemporaryFolderUsageTest.java", "commitBeforeChange": "59e5333b24d0e433de10d74c69e5de7700c6b744", "commitAfterChange": "2568203bdebd5a4a4ad9aa74b1d8369d22f668a3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t@Test \tpublic void newFolderWithGivenFolderThrowsIllegalArgumentExceptionIfFolderExists() throws IOException", "signatureAfterChange": "  \t@Test \tpublic void newFolderWithGivenFolderThrowsIllegalArgumentExceptionIfFolderExists() throws IOException", "diff": ["-\t\tthrown.expect(IllegalArgumentException.class);", "+\t\tthrown.expect(IOException.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17b8dcb4901f52e975bcf06ba611de0f", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/TextRunnerTest.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void testError() throws Exception", "signatureAfterChange": "  \tpublic void testError() throws Exception", "diff": ["-\t\texecTest(\"junit.tests.BogusDude\", -1);", "+\t\texecTest(\"junit.tests.BogusDude\", false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17ee62829b52b801f0eeb006cff2e932", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/ThrowableCauseMatcher.java", "commitBeforeChange": "533dbb7b97dc25529b96c512e638a778d9ee0530", "commitAfterChange": "56a63f1607fadd83df240b1676d8a053348d868f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     protected boolean matchesSafely(T item)", "signatureAfterChange": "      @Override     protected boolean matchesSafely(T item)", "diff": ["-        return matcher.matches(item.getCause());", "+        return causeMatcher.matches(item.getCause());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17f5b58a19d347e6b1d399af0fa2c7ab", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/internal/SpecificDataPointsSupplierTest.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void shouldReturnOnlyTheNamedSingleMethodDataPoints() throws Exception", "signatureAfterChange": "      @Test     public void shouldReturnOnlyTheNamedSingleMethodDataPoints() throws Throwable", "diff": ["-    public void shouldReturnOnlyTheNamedSingleMethodDataPoints() throws Exception {", "+    public void shouldReturnOnlyTheNamedSingleMethodDataPoints() throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "180dcadb45db6b3d87171609bbe6699a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/TestRuleTest.java", "commitBeforeChange": "751f75986b11336ac8310d73c89003b0b09ecb92", "commitAfterChange": "8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \t\t\t \t\tpublic Statement apply(final Statement base, final Description description)", "signatureAfterChange": " \t\t\t \t\t@Override \t\tprotected Statement apply(final Statement base, final Description description)", "diff": ["-\t\tpublic Statement apply(final Statement base, final Description description) {", "+\t\t@Override", "+\t\tprotected Statement apply(final Statement base, final Description description) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18209b9958a8ce4647f053684a8ad109", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "94aa692b0489d1fabd31c779c1a700a3b0890a24", "commitAfterChange": "5a65d17014d44850d4e19ac3cdd667985a00e1c5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public long getRunTime()", "signatureAfterChange": "     public long getRunTime()", "diff": ["-        return fRunTime;", "+        return fRunTime.get();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18a06b2e5ba94bc39ccc951134212113", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public Annotation[] getAnnotations()", "signatureAfterChange": "     public Annotation[] getAnnotations()", "diff": ["-        return fMethod.getAnnotations();", "+        return method.getAnnotations();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18a4fd849120366331403fc08cfc2997", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "commitAfterChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprotected Description methodDescription(Method method)", "signatureAfterChange": "  \tprotected Description methodDescription(TestMethod method)", "diff": ["-\tprotected Description methodDescription(Method method) {", "-\t\treturn Description.createTestDescription(getTestClass().getJavaClass(), testName(method), testAnnotations(method));", "-\t}", "+\tprotected Description methodDescription(TestMethod method) {", "+\t\treturn Description.createTestDescription(getTestClass().getJavaClass(),", "+\t\t\t\ttestName(method), method.getMethod().getAnnotations());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "193168c091e8fa66163467f0500e7a90", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private MaxHistory(File storedResults)", "signatureAfterChange": "      private MaxHistory(File storedResults)", "diff": ["-        fHistoryStore = storedResults;", "+        historyStore = storedResults;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "196ba0ab036b9203fd41e99cd46944dd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/matchers/StacktracePrintingMatcherTest.java", "commitBeforeChange": "872faeab15115635b3260001979ae036e64e29bf", "commitAfterChange": "a37fd9ac8b2afc54384fd32f470b54aa69dc620a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Test \tpublic void assertThatIncludesStacktrace()", "signatureAfterChange": "  \t@Test \tpublic void assertThatIncludesStacktrace()", "diff": ["-\t\t\tassertThat(actual, withStacktrace(is(expected)));", "+\t\t\tassertThat(actual, isThrowable(equalTo(expected)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a56fa0c8f577c859d40c387ea47b40f", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/runner/BaseTestRunner.java", "commitBeforeChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "commitAfterChange": "a8ec4efa178afdbc7844e94d08ab38b811c7409a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected String processArguments(String[] args)", "signatureAfterChange": " \tprotected String processArguments(String[] args)", "diff": ["+\t\t\t} else if (args[i].equals(\"-nofilterstack\")) {", "+\t\t\t\tfgFilterStack= false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a653079981a196df810242e6243b488", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/AssertionTest.java", "commitBeforeChange": "88f0fe3ced24506ddf9791f7a088163f4e7b1f20", "commitAfterChange": "3d7fee93ddc21a6e849c36d5ae58b37b3d189665", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \t@Test public void arraysExpectedNullMessage()", "signatureAfterChange": " \t \t@Test public void arraysExpectedNullMessage()", "diff": ["-\t\t\tassertEquals(\"not equal\", null, new Object[] {new Object()});", "+\t\t\tassertArrayEquals(\"not equal\", null, (new Object[] {new Object()}));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1abae187e0b23b6477b3c5cb4ba7c1a0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t@Override \tprotected Description describeChild(TestMethod method)", "signatureAfterChange": "  \t@Override \tprotected Description describeChild(FrameworkMethod method)", "diff": ["-\tprotected Description describeChild(TestMethod method) {", "+\tprotected Description describeChild(FrameworkMethod method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b04eb2776454e51183be179921a44cd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java", "commitBeforeChange": "1fa373f01d126d437f08a57a7b5e7a7ec0a01b85", "commitAfterChange": "8672a83f51b183c756649a423b908271c894b8df", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \t@Test \tpublic void failureOnInitialization()", "signatureAfterChange": " \t \t@Test \tpublic void failureOnInitialization()", "diff": ["-\t\tResult result = JUnitCore.runClasses(BadIndexForAnnotedFieldTest.class);", "+\t\tResult result = JUnitCore.runClasses(BadIndexForAnnotatedFieldTest.class);", "-\t\tassertEquals(\"Invalid @parameter value: 2. @parameter fields counted: 1. Please use an index between 0 and 0.\",", "+\t\tassertEquals(\"Invalid @Parameter value: 2. @Parameter fields counted: 1. Please use an index between 0 and 0.\",", "-\t\tassertEquals(\"The index 0 is never used.\", failures.get(1).getException().getMessage());", "+\t\tassertEquals(\"@Parameter(0) is never used.\", failures.get(1).getException().getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b9e8d50adb8212810637b4530a8bffe", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "68e59d6de3c48be43bfe2d6104fdb6e8280b1232", "commitAfterChange": "334bd9ce923cf0293cbca49be4ae5947abf51897", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Override     protected List<Runner> getChildren()", "signatureAfterChange": "      @Override     protected List<Runner> getChildren()", "diff": ["-        return runners;", "+        return fRunners;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c8c2401e49e75a1204f074206896cb0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "474df716f498aa2695c422cceb3e46cad999e972", "commitAfterChange": "9a2e993c544a2cd1a0b93c9f59340910f51366b4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static MaxCore forFolder(String storedResults)", "signatureAfterChange": " \tpublic static MaxCore forFolder(String storedResults)", "diff": ["+\tpublic static MaxCore forFolder(String storedResults) {", "+\t\treturn new MaxCore(new File(storedResults + \".ser\"));", "-\tpublic static MaxCore forFolder(String storedResults) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cc60139e246c4b70515e18ba6f460ef", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/links/RunTestNotifier.java", "commitBeforeChange": "37a611801fbea6ecc9b6356d9616e761c8b59b91", "commitAfterChange": "d9c908b9aab5f610e2f42aba1863ce25e36423f2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic void run(EachTestNotifier context)", "signatureAfterChange": "  \t@Override \tpublic void run(EachTestNotifier context)", "diff": ["-\t\t\tcontext.addFailedAssumption(e);", "+\t\t\tcontext.fireTestIgnored();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d70ed87aaf24cfe215367fa7f0bb6a1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "334bf585b5de1534d7c0ec519fa0df250d00f022", "commitAfterChange": "79ef5a7e1d7fa144cc81c9414f4791aaea8b3d75", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprotected Statement classBlock(final RunNotifier notifier)", "signatureAfterChange": " \tprotected Statement classBlock(final RunNotifier notifier)", "diff": ["+\t\tstatement= withClassRules(statement);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d984102923e8c4f401ec140d29ca6d7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Suite.java", "commitBeforeChange": "497ebf11c284bcc2b32eecc4a063589b4f17d250", "commitAfterChange": "c732aa178a822671d3de88e5ece05f9bf464172b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected Suite(SuiteBuilder builder, Class<?> klass, Class<?>[] annotatedClasses) throws InitializationError", "signatureAfterChange": " \tprotected Suite(SuiteBuilder builder, Class<?> klass, Class<?>[] suiteClasses) throws InitializationError", "diff": ["-", "-\tprotected Suite(SuiteBuilder builder, Class<?> klass, Class<?>[] annotatedClasses) throws InitializationError {", "-\t\tthis(klass, builder.runners(klass, annotatedClasses));", "+\t */", "+\tprotected Suite(SuiteBuilder builder, Class<?> klass, Class<?>[] suiteClasses) throws InitializationError {", "+\t\tthis(klass, builder.runners(klass, suiteClasses));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e65d4b9653c6002b21f4ecaa4ff491b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/internal/SpecificDataPointsSupplierTest.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void shouldReturnOnlyTheNamedDataPoints() throws Exception", "signatureAfterChange": "      @Test     public void shouldReturnOnlyTheNamedDataPoints() throws Throwable", "diff": ["-    public void shouldReturnOnlyTheNamedDataPoints() throws Exception {", "+    public void shouldReturnOnlyTheNamedDataPoints() throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ea12c36e4f502f9ff3f56470d51ea8f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/TestMethod.java", "commitBeforeChange": "149ecd4dcd99697710aa350e9cd3b3bcac877125", "commitAfterChange": "787ed4e5bc2b68e8b5cdb6190ff1fc053f1a5b13", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic long getTimeout()", "signatureAfterChange": "  \tpublic long getTimeout()", "diff": ["-\t\tTest annotation= fMethod.getAnnotation(Test.class);", "+\t\tTest annotation= getMethod().getAnnotation(Test.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ec9f9c8d1a61e6c89a0aefd4ae2ea58", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/suppliers/TestedOnSupplier.java", "commitBeforeChange": "34d2943cef583ecb34cc182b79dbb4af0c778b3f", "commitAfterChange": "1df71004338faf30b9287b03b726e1ce4f1246be", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t@Override public List<PotentialAssignment> getValueSources(ParameterSignature sig)", "signatureAfterChange": " \t@Override public List<PotentialAssignment> getValueSources(ParameterSignature sig)", "diff": ["-\t\t\tlist.add(PotentialAssignment.forValue(Arrays.asList(ints).toString(), i));", "+\t\t\tlist.add(PotentialAssignment.forValue(\"ints\", i));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f68993a91cbb825e04027a1f9a0dde5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "a58514aec7e843339be24980e92aeeb759327ffb", "commitAfterChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic Anchor timeout(Anchor next)", "signatureAfterChange": " \t \tpublic Link timeout(Link next)", "diff": ["-\tpublic Anchor timeout(Anchor next) {", "+\tpublic Link timeout(Link next) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f69601580548e0dbed4d47e3dea5b20", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/FilterFactoryFactoryTest.java", "commitBeforeChange": "74cab2dc9b8c32482d2c86a66a0dd9318930b4bc", "commitAfterChange": "5820172f30e56e9b0bc8feca6d7b3be58b7ee0ee", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r     @Test\r     public void shouldCreateFilterWithArguments() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldCreateFilterWithArguments() throws Exception", "diff": ["+                createSuiteDescription(testName.getMethodName()),\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fac1f634c165e5baf2612ced8808722", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/matchers/JUnitMatchers.java", "commitBeforeChange": "67c31453db464a17bd907a8b4ccfb9103ef946f0", "commitAfterChange": "9164fdee10603ebdb2b4a7d78ab00046fa3ad37f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t@Deprecated \tpublic static <T> Matcher<Iterable<T>> everyItem(final Matcher<T> elementMatcher)", "signatureAfterChange": " \t@Deprecated \tpublic static <T> Matcher<Iterable<T>> each(final Matcher<T> elementMatcher)", "diff": ["-\tpublic static <T> Matcher<Iterable<T>> everyItem(final Matcher<T> elementMatcher) {", "+\tpublic static <T> Matcher<Iterable<T>> each(final Matcher<T> elementMatcher) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fad85674d6369c7cea58c7a9b21a2f1", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t\t \tprotected void runFailed(String message)", "signatureAfterChange": " \t\t \tprotected void runFailed(String message)", "diff": ["-\t\tSystem.out.println(message);", "+\t\tSystem.err.println(message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fe9642a258cefdcdf32a119e5a5de5b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/parameterized/BlockJUnit4ClassRunnerWithParameters.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private Object createTestUsingConstructorInjection() throws Exception", "signatureAfterChange": "      private Object createTestUsingConstructorInjection() throws Exception", "diff": ["-        return getTestClass().getOnlyConstructor().newInstance(fParameters);", "+        return getTestClass().getOnlyConstructor().newInstance(parameters);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2006864af5b50675ff4a978a0614654d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "f98130957df08de9cae93169298e04bf84388cae", "commitAfterChange": "43b0fe352d5bced0c341640d0c630d23f2022a7e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tprotected void invokeTestMethod(Method method, RunNotifier notifier)", "signatureAfterChange": "  \tprotected void invokeTestMethod(Method method, RunNotifier notifier)", "diff": ["-\t\tTestMethod testMethod= wrapMethod(method);", "+\t\tJUnit4MethodRunner testMethod= wrapMethod(method);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "201644c8af6f98bfab76ecb912f4f951", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/TestMethodRunner.java", "commitBeforeChange": "40cc52cf5f5dc1dd1ee513410536bdc11422307d", "commitAfterChange": "2286815454cfdf9480f954adb31439b26d25710f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate void runWithTimeout(long timeout)", "signatureAfterChange": "  \tprivate void runWithTimeout(long timeout)", "diff": ["-\t\t\tresult.get(timeout, TimeUnit.MILLISECONDS); // throws the exception if one occurred during the invocation", "+\t\t\tresult.get(0, TimeUnit.MILLISECONDS); // throws the exception if one occurred during the invocation"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2042e51ccfa2233d1400d2cf24fb562d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/AssertionTest.java", "commitBeforeChange": "88f0fe3ced24506ddf9791f7a088163f4e7b1f20", "commitAfterChange": "3d7fee93ddc21a6e849c36d5ae58b37b3d189665", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test public void arraysDifferAtElement0nullMessage()", "signatureAfterChange": "      @Test public void arraysDifferAtElement0nullMessage()", "diff": ["-\t\t\tassertEquals(new Object[] { true }, new Object[] { false });", "+\t\t\tassertArrayEquals((new Object[] { true }), (new Object[] { false }));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "205a140689987a89301eccb223fda180", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "c732aa178a822671d3de88e5ece05f9bf464172b", "commitAfterChange": "af9634a3656bcd9c3988692c32381d0772077584", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic int getFailedAssumptionCount()", "signatureAfterChange": "  \tpublic int getInvalidAssumptionCount()", "diff": ["+\tpublic int getInvalidAssumptionCount() {", "+\t\treturn fInvalidAssumptions.size();", "+\t}", "-", "-\tpublic int getFailedAssumptionCount() {", "-\t\treturn fUnrunnables.size();", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "208569ba207121149ea246032af6b3c5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/Stopwatch.java", "commitBeforeChange": "3c122b6a93499ee82d346c097141d2137b93c48c", "commitAfterChange": "9ec6a3fa39cb8aafe645a7f33e7da9a788679fe3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void stopping()", "signatureAfterChange": "      private void stopping()", "diff": ["-        endNanos = System.nanoTime();", "+        fEndNanos= System.nanoTime();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20b9bd8877ffc05dc895e6650159015f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "          private String missingExceptionMessage()", "signatureAfterChange": "          private String missingExceptionMessage()", "diff": ["-        String expectation= StringDescription.toString(fMatcherBuilder.build());", "+        String expectation= StringDescription.toString(matcherBuilder.build());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20cf1d8586cffab3921ceef2b8b3e3e8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "d3e86b059db787af5c0d58ddf3f69af5b42865b8", "commitAfterChange": "7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprotected Statement withAfterClasses(Statement statement)", "signatureAfterChange": " \tprotected Statement withAfterClasses(Statement statement)", "diff": ["-\t\tList<FrameworkMethod> afters= fTestClass", "+\t\tList<FrameworkMethod> afters= getTestClass()", "-\t\treturn afters.isEmpty() ? statement : ", "-\t\t\tnew RunAfters(statement, afters, null);", "+\t\treturn afters.isEmpty() ? statement : new RunAfters(statement, afters,", "+\t\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "210859727cfa0aa4572658fcada568ca", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "8e3f361443ddf8bca21c3db661c75d374fe78dba", "commitAfterChange": "c96215c5d025336d8ab1d7d2ab57daee20869cea", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \t@Override \tprotected void runChild(FrameworkMethod method, RunNotifier notifier)", "signatureAfterChange": " \t \t@Override \tprotected void runChild(FrameworkMethod method, RunNotifier notifier)", "diff": ["-\t\t\teachNotifier.fireTestIgnored();", "+\t\t\t// do nothing: same as passing (for 4.5; may change in 4.6)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "212abd1718dcfedd84876a243f298644", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/runner/BaseTestRunner.java", "commitBeforeChange": "bfc94ee739d62127c7477300b26127bd560765a1", "commitAfterChange": "04f4f3197084ad9ad7c050ce1a40d6f4421662f4", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tprotected boolean useReoadingTestSuiteLoader()", "signatureAfterChange": " \t \tprotected boolean useReloadingTestSuiteLoader()", "diff": ["-\tprotected boolean useReoadingTestSuiteLoader() {", "+\tprotected boolean useReloadingTestSuiteLoader() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "215156de545526fb35c2fdbfa3021bdf", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "37a611801fbea6ecc9b6356d9616e761c8b59b91", "commitAfterChange": "d9c908b9aab5f610e2f42aba1863ce25e36423f2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tpublic void testRunFinished(Result result)", "signatureAfterChange": "  \t@Override \tpublic void testRunFinished(Result result)", "diff": ["-\t\tprintFailedAssumptions(result);", "-\t\tprintIgnorances(result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "215980ab3f230284a52439174be5c3c9", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/framework/AssertTest.java", "commitBeforeChange": "8c1784e4b026417ed381ac5f0a7e2dda9084d7b0", "commitAfterChange": "e7707e88ef3b20655d91513c6ed90c5e3db62cc8", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tpublic void testComparisonErrorWithNullArgument()", "signatureAfterChange": "  \tpublic void testComparisonErrorWithActualNull()", "diff": ["-\tpublic void testComparisonErrorWithNullArgument() {", "+\tpublic void testComparisonErrorWithActualNull() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2188facd724a9c9f849cb5391f5c33c3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f", "commitAfterChange": "c503e40d9ec79ba76b69dd31d7dd32648fa13cf2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \t@Test \tpublic void saffSqueezeExample() throws Exception", "signatureAfterChange": "  \t@Test \tpublic void filterSingleMethodFromOldTestClass() throws Exception", "diff": ["-\tpublic void saffSqueezeExample() throws Exception {", "+\tpublic void filterSingleMethodFromOldTestClass() throws Exception {", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21ea18844ce71d60fb3344dea43d3468", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/TestRuleTest.java", "commitBeforeChange": "61f06547599bb6b98bca99d5bc457eb20bc17cab", "commitAfterChange": "ada8735cda0fe94c9cfea9b8fb2012488a3a44e6", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \t@Test \tpublic void beforesAndAfters()", "signatureAfterChange": "  \t@Test \tpublic void beforesAndAfters()", "diff": ["-\t\tBeforesAndAfters.watchedLog= \"\";", "+\t\tBeforesAndAfters.watchedLog= new StringBuilder();", "-\t\tassertThat(BeforesAndAfters.watchedLog, is(\"starting before test after succeeded finished \"));", "+\t\tassertThat(BeforesAndAfters.watchedLog.toString(),", "+\t\t\t\tis(\"starting before test after succeeded finished \"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "221073cd99df445b7104936ecb725793", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Suite.java", "commitBeforeChange": "979e8abbe974e8847668f5887403da78a6165ebc", "commitAfterChange": "1fcd990f60518c941a44bae2596392021614a20b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t@Override \tprotected void runChild(Runner each, final RunNotifier notifier)", "signatureAfterChange": "  \t@Override \tprotected void runChild(Runner runner, final RunNotifier notifier)", "diff": ["-\tprotected void runChild(Runner each, final RunNotifier notifier) {", "-\t\teach.run(notifier);", "+\tprotected void runChild(Runner runner, final RunNotifier notifier) {", "+\t\trunner.run(notifier);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22224684b035774bbb00ce5fd7cb1182", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "54af3dfcf6f61839cb2d531a28fc0395cdcdb790", "commitAfterChange": "6ff2381af213bf699e62244315debec66b373d81", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprotected Statement withAfters(FrameworkMethod method, Object target, \t\t\tStatement link)", "signatureAfterChange": "  \tprotected Statement withAfters(FrameworkMethod method, Object target, \t\t\tStatement link)", "diff": ["-\t\treturn new RunAfters(link, new TestMethodElement(getTestClass()), target);", "+\t\treturn new RunAfters(link, new TestMethod(getTestClass()), target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "225a6a4f92e827e97f5d5704ae8c3dab", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/manipulation/Sorter.java", "commitBeforeChange": "8964b10541f840e559a3308a043b64a8c1f6af57", "commitAfterChange": "42beed3ad166a9cceefc59f6c79a16844cae0d02", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void apply(Runner runner)", "signatureAfterChange": " \tpublic void apply(Object object)", "diff": ["-\tpublic void apply(Runner runner) {", "-\t\tif (runner instanceof Sortable) {", "-\t\t\tSortable sortable = (Sortable) runner;", "+\tpublic void apply(Object object) {", "+\t\tif (object instanceof Sortable) {", "+\t\t\tSortable sortable = (Sortable) object;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22be601ce34c54cfaadb6e9c20b619b6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "161229441b7365fa06f0d82e272e15f1f378b315", "commitAfterChange": "30a039854fd7f8cda135222054b247c158b91fa7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprotected Statement possiblyExpectingExceptions(FrameworkMethod method, \t\t\tObject test, Statement next)", "signatureAfterChange": " \tprotected Statement possiblyExpectingExceptions(FrameworkMethod method, \t\t\tObject test, Statement next)", "diff": ["-\t\tTest annotation= getAnnotation(method);", "+\t\tTest annotation= method.getAnnotation(Test.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2302a4c6c6b0745f30096c31f69f3331", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      private void setTest(Test test)", "signatureAfterChange": "      private void setTest(Test test)", "diff": ["-        fTest = test;", "+        this.test = test;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "231e06916173f735cca55d5dae9897a1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/MethodSorters.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Comparator<Method> getComparator()", "signatureAfterChange": "      public Comparator<Method> getComparator()", "diff": ["-        return fComparator;", "+        return comparator;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2326465a54860dd94029e792cf0dd62e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      void putTestFailureTimestamp(Description key, long end)", "signatureAfterChange": "      void putTestFailureTimestamp(Description key, long end)", "diff": ["-        fFailureTimestamps.put(key.toString(), end);", "+        failureTimestamps.put(key.toString(), end);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2372eab3b2b002b2e035d490ae7d517e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/interceptor/InterceptorTest.java", "commitBeforeChange": "734ab5187c068599352e5fdc7374c1334d484fef", "commitAfterChange": "54917b88aab026dabb4541276ed875117c1e1faa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t\t\tpublic Statement intercept(final Statement base, \t\t\t\t\tFrameworkMethod method, Object target)", "signatureAfterChange": " \t\t\tpublic Statement apply(final Statement base, \t\t\t\t\tFrameworkMethod method, Object target)", "diff": ["-\t\tprivate static class Incrementor implements StatementInterceptor {", "-\t\t\tpublic Statement intercept(final Statement base,", "+\t\tprivate static class Increment implements MethodRule {", "+\t\t\tpublic Statement apply(final Statement base,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23bf1479784b44052823512e09e13329", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void validatePublicVoidNoArg(boolean isStatic, List<Throwable> errors)", "signatureAfterChange": "     public void validatePublicVoidNoArg(boolean isStatic, List<Throwable> errors)", "diff": ["-        if (fMethod.getParameterTypes().length != 0) {", "-            errors.add(new Exception(\"Method \" + fMethod.getName() + \" should have no parameters\"));", "+        if (method.getParameterTypes().length != 0) {", "+            errors.add(new Exception(\"Method \" + method.getName() + \" should have no parameters\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23c8cea3476a537e9968bac079f22219", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/runner/BaseTestRunner.java", "commitBeforeChange": "a0f0ee1b3f72d9361eb09b3a25156c69a748aa47", "commitAfterChange": "478f7f9217cf5da219a7ba298e3a87f405378194", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tprotected boolean useReloadingTestSuiteLoader()", "signatureAfterChange": "  \tprotected boolean useReloadingTestSuiteLoader()", "diff": ["-", "-\t\treturn getPreference(\"loading\").equals(\"true\") && !inVAJava() && fLoading;", "+\t\treturn getPreference(\"loading\").equals(\"true\") && fLoading;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23fe816583286f3d421432804556883f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java", "commitBeforeChange": "0e1c92693e70e52ad9af23ee6180500c74fc9c95", "commitAfterChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Test \tpublic void ignoreExceptionsFromDataPointMethods()", "signatureAfterChange": "  \t@Test \tpublic void ignoreExceptionsFromDataPointMethods()", "diff": ["-\t\tassertThat(failures(HasUglyDataPointMethod.class), empty());", "+\t\tassertThat(testResult(HasUglyDataPointMethod.class), isSuccessful());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24080f6e93a6b680bce6a6bbb4094670", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/ComparisonFailure.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public String getActual()", "signatureAfterChange": "     public String getActual()", "diff": ["-        return actual;", "+        return fActual;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "243af559c4da2e6d4f91629c42c84fec", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/Parameterized.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate TestMethod getParametersMethod() throws Exception", "signatureAfterChange": "  \tprivate FrameworkMethod getParametersMethod() throws Exception", "diff": ["-\tprivate TestMethod getParametersMethod() throws Exception {", "-\t\tList<TestMethod> methods= fTestClass", "+\tprivate FrameworkMethod getParametersMethod() throws Exception {", "+\t\tList<FrameworkMethod> methods= fTestClass", "-\t\tfor (TestMethod each : methods) {", "+\t\tfor (FrameworkMethod each : methods) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "244b7b826c3fc82d584733bc23d74ebb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactoryFactory.java", "commitBeforeChange": "5820172f30e56e9b0bc8feca6d7b3be58b7ee0ee", "commitAfterChange": "9d9899bce3506e7d87ebc6352a3cf3d25ea20f54", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r         public FilterFactoryNotCreatedException(String message)", "signatureAfterChange": "\r         public FilterFactoryNotCreatedException(Exception exception)", "diff": ["-        public FilterFactoryNotCreatedException(String message) {\r", "-            super(message);\r", "+        public FilterFactoryNotCreatedException(Exception exception) {\r", "+            super(exception.getMessage(), exception);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2469aba4d6854c7421ccb33f28b7141b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/AssignmentRequest.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t\t@Override \t\tpublic Object getValue() throws CouldNotGenerateValueException", "signatureAfterChange": "  \t\t@Override \t\tpublic Object getValue(Object test) throws CouldNotGenerateValueException", "diff": ["-\t\tpublic Object getValue() throws CouldNotGenerateValueException {", "+\t\tpublic Object getValue(Object test) throws CouldNotGenerateValueException {", "-\t\t\t\treturn fMethod.invoke(fTest);", "+\t\t\t\treturn fMethod.invoke(test);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24d6476749423e98b626c396dbc40e7c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "65f717ed35a698239d4a75960b4f6de2f7cce225", "commitAfterChange": "390d5e365ab47c770c36cbee45f282d5a0d62f26", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic String getClassName()", "signatureAfterChange": " \tpublic String getClassName()", "diff": ["-\t\treturn methodAndClassNamePatternGroupOrDefault(2, toString());", "+\t\treturn fTestClass != null ? fTestClass.getName() : methodAndClassNamePatternGroupOrDefault(2, toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "250d7a32a2eaa023f69bf0bfe2122a72", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/StacktracePrintingMatcher.java", "commitBeforeChange": "872faeab15115635b3260001979ae036e64e29bf", "commitAfterChange": "a37fd9ac8b2afc54384fd32f470b54aa69dc620a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Factory \tpublic static <T extends Throwable> Matcher<T> withStacktrace( \t\t\tMatcher<T> throwableMatcher)", "signatureAfterChange": "  \t@Factory \tpublic static <T extends Exception> Matcher<T> isException( \t\t\tMatcher<T> exceptionMatcher)", "diff": ["-\tpublic static <T extends Throwable> Matcher<T> withStacktrace(", "+", "+\t@Factory", "+\tpublic static <T extends Exception> Matcher<T> isException(", "+\t\t\tMatcher<T> exceptionMatcher) {", "+\t\treturn new StacktracePrintingMatcher<T>(exceptionMatcher);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2543854a9b0aeb6f69ed00bb27c895e1", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/samples/money/MoneyBag.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tMoneyBag(Money bag[])", "signatureAfterChange": " \tMoneyBag(Money bag[])", "diff": ["-\t\tfor (int i= 0; i < bag.length; i++)", "-\t\t\tappendMoney(bag[i]);", "+\t\tfor (int i= 0; i < bag.length; i++) {", "+\t\t\tif (!bag[i].isZero())", "+\t\t\t\tappendMoney(bag[i]);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2550aea552bafb9511e6cd314067ee53", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/TemporaryFolderUsageTest.java", "commitBeforeChange": "2d3090bf96357c0d9387a4e8f87525f776e52799", "commitAfterChange": "6f8a359dde5b1e317f0bab2da3ac2b5bce117884", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t@Test \tpublic void deleteRemovesRootFolder() throws IOException", "signatureAfterChange": "  \t@Test \tpublic void deleteRemovesRootFolder() throws IOException", "diff": ["-\t\tassertFileDoesNotExists(\"Root folder\", tempFolder.getRoot());", "-\t}", "+\t\tassertFileDoesNotExist(tempFolder.getRoot());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "255fdd281fa78d78ef41ee7c14386c8b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "063004dca462777a969ab1e0002dd3053014381c", "commitAfterChange": "9ac4cc842d70dc7ef266f4d677d90d9b177e4be6", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "     static public void assertEquals(String message, long expected, long actual)", "signatureAfterChange": "     static public void assertEquals(String message, long expected, long actual)", "diff": ["-            failNotEquals(message, expected, actual);", "+            failNotEquals(message, Long.valueOf(expected), Long.valueOf(actual));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "259814cdf370576a821c3ac8e945b8f9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "b58da5a388357ab124feefa5280e2116ac31de53", "commitAfterChange": "b0c9945e21e66efcc947b3859f947185a87c59a9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t\t@Override \t\tpublic void testIgnored(Description description) throws Exception", "signatureAfterChange": "  \t\t@Override \t\tpublic void testIgnored(Description description) throws Exception", "diff": ["-\t\t\tfIgnoredDuringExecution= true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25ffaa2a4044b3ca7201aea157b0c4b7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "6bea82df32f687d636f1b843a1918a3a1ff22a6e", "commitAfterChange": "872faeab15115635b3260001979ae036e64e29bf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void expectMessage(Matcher<String> matcher)", "signatureAfterChange": " \tpublic void expectMessage(Matcher<String> matcher)", "diff": ["-\t\tfMatcher.andHasMessage(matcher);", "+\t\tfMatcher.andAlsoHasMessage(matcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2624c49b4f720cc3ab7b0899d6a02a05", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/assertion/BothTest.java", "commitBeforeChange": "b1068dc55c95d1000e07b71d3a9d9a2fd26bfff9", "commitAfterChange": "d9cccce5034bb9876221d271914471b205220061", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \t@Test public void subclassesAreOkInSecondPositionOnly()", "signatureAfterChange": " \t \t@Test public void subclassesAreOkInSecondPositionOnly()", "diff": ["-\t\tassertThat(3, both(is(Integer.class)).and(is(3)));", "+\t\tassertThat(3, both(isA(Integer.class)).and(is(3)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26bfbf5e02788d04f9f7594e0bbda110", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java", "commitBeforeChange": "f5e7e1ff180bb17e4f9df702a038e06a974f78f6", "commitAfterChange": "fe5d86eba71a1f59dbbed09de4add01cc20420c0", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "          @Override         public List<Throwable> validateAnnotatedField(Field field)", "signatureAfterChange": "          @Override         public List<Exception> validateAnnotatedField(Field field)", "diff": ["-        public List<Throwable> validateAnnotatedField(Field field) {", "-            return Arrays.asList(new Throwable(ANNOTATED_FIELD_CALLED));", "+        public List<Exception> validateAnnotatedField(Field field) {", "+            return asList(new Exception(ANNOTATED_FIELD_CALLED));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26d45e47597f0a5df7d4e4ecc34502fb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TemporaryFolder.java", "commitBeforeChange": "59e5333b24d0e433de10d74c69e5de7700c6b744", "commitAfterChange": "2568203bdebd5a4a4ad9aa74b1d8369d22f668a3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic File newFolder(String... folderNames)", "signatureAfterChange": " \tpublic File newFolder(String... folderNames) throws IOException", "diff": ["-\tpublic File newFolder(String... folderNames) {", "+\tpublic File newFolder(String... folderNames) throws IOException {", "-\t\t\t\tthrow new IllegalArgumentException(", "+\t\t\t\tthrow new IOException("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26e882e54cada03f717c7a2546dec4d9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/framework/JUnit4TestAdapterCache.java", "commitBeforeChange": "6589127231db19458b696785bab3b839f9bde90f", "commitAfterChange": "f1f4fe290a3a35a9083d2e76e922b57350e05f34", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic Test asTest(Plan plan)", "signatureAfterChange": "  \tpublic Test asTest(Plan plan)", "diff": ["-\t", "+", "-\t\t\treturn createTestSuite(plan);", "+\t\t\treturn asTestSuite(plan);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26f71edae59cad60a0cde7f8d9727e5f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "ce280f0afd532351d5783cf93d08526181eee4c8", "commitAfterChange": "cec8e3ed1246c289ae156c4418d2e224bd793f4b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t\t@Override \t\tpublic String describe()", "signatureAfterChange": "  \t\t@Override \t\tpublic String describe()", "diff": ["-\t\t\treturn \"category \" + fCategoryClass;", "+\t\t\treturn \"category \" + fIncluded;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26fc86ad2f832932e57b482f7b010dd3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "commitAfterChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tprotected NotificationStrategy notifying(TestMethod method, Link link)", "signatureAfterChange": "  \tprotected Notifier notifying(TestMethod method, Statement link)", "diff": ["-\tprotected NotificationStrategy notifying(TestMethod method, Link link) {", "+\tprotected Notifier notifying(TestMethod method, Statement link) {", "-\t\t\t? new IgnoreTest()", "-\t\t\t: new Notifying(link);", "+\t\t\t? new IgnoreTestNotifier()", "+\t\t\t: new RunTestNotifier(link);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26fd42407d394dbcbb52466ced735625", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "54af3dfcf6f61839cb2d531a28fc0395cdcdb790", "commitAfterChange": "6ff2381af213bf699e62244315debec66b373d81", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tprotected Statement withBefores(FrameworkMethod method, Object target, \t\t\tStatement link)", "signatureAfterChange": "  \tprotected Statement withBefores(FrameworkMethod method, Object target, \t\t\tStatement link)", "diff": ["-\t\treturn new RunBefores(link, new TestMethodElement(getTestClass()), target);", "+\t\treturn new RunBefores(link, new TestMethod(getTestClass()), target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "274936586d6712d5d98705adfd1ae471", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/requests/ClassRequest.java", "commitBeforeChange": "db89759c22060a89f6750e2e92ce93072eace561", "commitAfterChange": "521fdb5aae536bd5055f6d0e4f09c5a7bdb5799f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tClass<? extends Runner> getRunnerClass(final Class<?> testClass)", "signatureAfterChange": "  \tClass<? extends Runner> getRunnerClass(final Class<?> testClass)", "diff": ["-\t\t\treturn OldTestClassRunner.class; ", "+\t\t\treturn JUnit38ClassRunner.class; ", "-\t\t\treturn TestClassRunner.class;", "+\t\t\treturn JUnit4ClassRunner.class;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "274abcbb5d86a75a831e70a4126a4852", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCore.java", "commitBeforeChange": "66cf6859fa74021320c9b0d5e0a6ffc5c86b770f", "commitAfterChange": "b33b4b090c224c14415d0ffb68a078a097aeaf71", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic Result run(Runner runner)", "signatureAfterChange": " \tpublic Result run(Runner runner)", "diff": ["-\t\t\tfNotifier.fireTestRunStarted(runner.getDescription());", "+\t\t\tfNotifier.fireTestRunStarted(runner.getPlan());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "274b718dcdec6548f9f9d4c31f17fa5e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "d6662fcc06ec7b07c696eb703c47d3731e4e11c7", "commitAfterChange": "85578d48f6459a05665329faa9b52a861e9142cb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \t@Test public void twoTestsNotRunComeBackInRandomOrder()", "signatureAfterChange": " \t \t@Test public void twoTestsNotRunComeBackInRandomOrder()", "diff": ["-\t\tList<Description> things= max.sort(request);", "+\t\tList<Description> things= max.sortedLeavesForTest(request);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "277508f603fa992f325b6abf008488ea", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "9c5a2f28935a2d816ac14894d6c7cfb3c32a98f6", "commitAfterChange": "26c25f3dbf524f4efd90e97f41c6df10345e78a9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private Exception createTimeoutException(Thread thread)", "signatureAfterChange": "      private Exception createTimeoutException(Thread thread)", "diff": ["-        Exception currThreadException = new TestFailedOnTimeoutException(fTimeout, fTimeUnit);", "+        Exception currThreadException = new TestTimedOutException(fTimeout, fTimeUnit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "279c66bab0313f054fe6a68ad727a818", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/Timeout.java", "commitBeforeChange": "751f75986b11336ac8310d73c89003b0b09ecb92", "commitAfterChange": "8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic Statement apply(Statement base, Description description)", "signatureAfterChange": "  \t@Override \tprotected Statement apply(Statement base, Description description)", "diff": ["-\tpublic Statement apply(Statement base, Description description) {", "+\t@Override", "+\tprotected Statement apply(Statement base, Description description) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27b0f9ef1b12d28daf09b3abc3ba6cbd", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/awtui/TestRunner.java", "commitBeforeChange": "1e752dcb0a967bcb47fae4b12fb8765e79571e69", "commitAfterChange": "bfc94ee739d62127c7477300b26127bd560765a1", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \t \tsynchronized public void runSuite()", "signatureAfterChange": " \t \tsynchronized public void runSuite()", "diff": ["+\t\t\tif (!setUseLoadingRunner())", "+\t\t\t\treturn;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27e13992f68f12b3dc093e0eaf75f8b6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestTimedOutException.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public TimeUnit getTimeUnit()", "signatureAfterChange": "     public TimeUnit getTimeUnit()", "diff": ["-        return fTimeUnit;", "+        return timeUnit;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27e51a6e7bc7483c6c3641df86fadbf1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/builders/AllDefaultPossibilitiesBuilder.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      protected RunnerBuilder suiteMethodBuilder()", "signatureAfterChange": "      protected RunnerBuilder suiteMethodBuilder()", "diff": ["-        if (fCanUseSuiteMethod) {", "+        if (canUseSuiteMethod) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27fafe7b691cf90f3060f7240449626a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Method getMethod()", "signatureAfterChange": "     public Method getMethod()", "diff": ["-        return fMethod;", "+        return method;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2813793b2a429724b1a601aa14255017", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/matchers/JUnitMatchers.java", "commitBeforeChange": "872faeab15115635b3260001979ae036e64e29bf", "commitAfterChange": "a37fd9ac8b2afc54384fd32f470b54aa69dc620a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic static <T extends Throwable> Matcher<T> withStacktrace(Matcher<T> throwableMatcher)", "signatureAfterChange": " \tpublic static <T extends Exception> Matcher<T> isException(Matcher<T> exceptionMatcher)", "diff": ["-\tpublic static <T extends Throwable> Matcher<T> withStacktrace(Matcher<T> throwableMatcher) {", "-\t\treturn StacktracePrintingMatcher.withStacktrace(throwableMatcher);", "+\t */", "+\tpublic static <T extends Exception> Matcher<T> isException(Matcher<T> exceptionMatcher) {", "+\t\treturn StacktracePrintingMatcher.isException(exceptionMatcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2827c48f38f3f5d24a71de6b793c7f83", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public Class<?> getJavaClass()", "signatureAfterChange": "     public Class<?> getJavaClass()", "diff": ["-        return fClass;", "+        return clazz;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "287cd27ae6fbd71fd10fb17dcffc401c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public Object[] getMethodArguments(boolean nullsOk)             throws CouldNotGenerateValueException", "signatureAfterChange": "      public Object[] getMethodArguments() throws CouldNotGenerateValueException", "diff": ["-    public Object[] getMethodArguments(boolean nullsOk)", "-            throws CouldNotGenerateValueException {", "-        return getActualValues(getConstructorParameterCount(),", "-                fAssigned.size(), nullsOk);", "+    public Object[] getMethodArguments() throws CouldNotGenerateValueException {", "+        return getActualValues(getConstructorParameterCount(), fAssigned.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "287f31ff1009e29fa83057000bd1b304", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/Failure.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public String getTestHeader()", "signatureAfterChange": "     public String getTestHeader()", "diff": ["-        return fDescription.getDisplayName();", "+        return description.getDisplayName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28b219c10ff2bb6ee98eea6ed0ed695a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "015c02e04d940a4bffc6a8e687751c4610db19b8", "commitAfterChange": "8b507d7908603bf6e36ea9e60921b76eb5923d0f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t\t \t\t@Override \t\tpublic void run(RunNotifier notifier)", "signatureAfterChange": " \t\t \t\t@Override \t\tpublic void run(RunNotifier notifier)", "diff": ["-\t\t\tfor (Future<Object> each : collator.results)", "+\t\t\tfor (Future<Object> each : fCollator.results)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28fd1f184f7485882181dd3702cd4c1e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public List<PotentialAssignment> potentialsForNextUnassigned()             throws Exception", "signatureAfterChange": "      public List<PotentialAssignment> potentialsForNextUnassigned()             throws Throwable", "diff": ["-            throws Exception {", "+            throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "295d960543f7be9c8eb3df5a3855ecb1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java", "commitBeforeChange": "f5e7e1ff180bb17e4f9df702a038e06a974f78f6", "commitAfterChange": "fe5d86eba71a1f59dbbed09de4add01cc20420c0", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "          @Override         public List<Throwable> validateAnnotatedMethod(Method method)", "signatureAfterChange": "          @Override         public List<Exception> validateAnnotatedMethod(Method method)", "diff": ["-        public List<Throwable> validateAnnotatedMethod(Method method) {", "-            return Arrays.asList(new Throwable(ANNOTATED_METHOD_CALLED));", "+        public List<Exception> validateAnnotatedMethod(Method method) {", "+            return asList(new Exception(ANNOTATED_METHOD_CALLED));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "297051bd2d6b56b3cc079e09b8e11ea3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/Stopwatch.java", "commitBeforeChange": "3c122b6a93499ee82d346c097141d2137b93c48c", "commitAfterChange": "9ec6a3fa39cb8aafe645a7f33e7da9a788679fe3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void starting()", "signatureAfterChange": "      private void starting()", "diff": ["-        startNanos = System.nanoTime();", "+        fStartNanos= System.nanoTime();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29792521e8f45ff5ef45e38d9241e76f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/MethodValidator.java", "commitBeforeChange": "db89759c22060a89f6750e2e92ce93072eace561", "commitAfterChange": "521fdb5aae536bd5055f6d0e4f09c5a7bdb5799f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprivate void validateTestMethods(Class<? extends Annotation> annotation, \t\t\tboolean isStatic)", "signatureAfterChange": "  \tprivate void validateTestMethods(Class<? extends Annotation> annotation, \t\t\tboolean isStatic)", "diff": ["-\t\tList<Method> methods= fIntrospector.getTestMethods(annotation);", "+\t\tList<Method> methods= fTestClass.getAnnotatedMethods(annotation);", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "298ba734a9b65df912ea50186e91a710", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/TempFolderRuleTest.java", "commitBeforeChange": "e8b91fa9f797dfe16aff66ed6ad5d6104e5133fe", "commitAfterChange": "67e43ab827da24baa6477e33e4e883a36dfcf645", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t\t@Test \t\tpublic void testUsingTempFolder() throws IOException", "signatureAfterChange": "  \t\t@Test \t\tpublic void testUsingTempFolderString() throws IOException", "diff": ["-\t\tpublic void testUsingTempFolder() throws IOException {", "+", "+\t\t@Test", "+\t\tpublic void testUsingTempFolderString() throws IOException {", "+\t\t\tString subfolder = \"subfolder\";", "+\t\t\tString filename = \"a.txt\";", "+\t\t\t// this uses newFolder(String), ensure that a single String works", "-\t\t\t", "+", "-\t\t\t", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29d831154381478ef12555c98d06b23d", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/runner/BaseTestRunner.java", "commitBeforeChange": "bfc94ee739d62127c7477300b26127bd560765a1", "commitAfterChange": "04f4f3197084ad9ad7c050ce1a40d6f4421662f4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic TestSuiteLoader getLoader()", "signatureAfterChange": " \tpublic TestSuiteLoader getLoader()", "diff": ["-\t\tif (useReoadingTestSuiteLoader())", "+\t\tif (useReloadingTestSuiteLoader())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29eec125181aad3bf840d7289d84c047", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TestWatcher.java", "commitBeforeChange": "2745d016f648e783360bd076f23b36908f8125b0", "commitAfterChange": "b064a274adb12c6e866cb08dedc70534237330b2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void skippedQuietly(AssumptionViolatedException e, Description description,             List<Throwable> errors)", "signatureAfterChange": "      private void skippedQuietly(AssumptionViolatedException e, Description description,             List<Throwable> errors)", "diff": ["-        } catch (Throwable t) {", "-            errors.add(t);", "+        } catch (Throwable e1) {", "+            errors.add(e1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a0c6223959222beaa97b95805868414", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected List<TestRule> classRules()", "signatureAfterChange": "     protected List<TestRule> classRules()", "diff": ["-        List<TestRule> result = fTestClass.getAnnotatedMethodValues(null, ClassRule.class, TestRule.class);", "-        result.addAll(fTestClass.getAnnotatedFieldValues(null, ClassRule.class, TestRule.class));", "+        List<TestRule> result = testClass.getAnnotatedMethodValues(null, ClassRule.class, TestRule.class);", "+        result.addAll(testClass.getAnnotatedFieldValues(null, ClassRule.class, TestRule.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a41cd4056759a34da87071afeb54dda", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java", "commitBeforeChange": "f98130957df08de9cae93169298e04bf84388cae", "commitAfterChange": "43b0fe352d5bced0c341640d0c630d23f2022a7e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tprotected TestMethod wrapMethod(Method method)", "signatureAfterChange": "  \t@Override \tprotected JUnit4MethodRunner wrapMethod(Method method)", "diff": ["-\tprotected TestMethod wrapMethod(Method method) {", "+\tprotected JUnit4MethodRunner wrapMethod(Method method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a4998499acaea9d007b8eab1b288307", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "063004dca462777a969ab1e0002dd3053014381c", "commitAfterChange": "9ac4cc842d70dc7ef266f4d677d90d9b177e4be6", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "     static public void assertEquals(String message, float expected,             float actual, float delta)", "signatureAfterChange": "     static public void assertEquals(String message, float expected,             float actual, float delta)", "diff": ["-            failNotEquals(message, expected, actual);", "+            failNotEquals(message, Float.valueOf(expected), Float.valueOf(actual));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b2a24b4aca859cf8666fc287ce11bb5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public List<FrameworkField> getAnnotatedFields()", "signatureAfterChange": "     public List<FrameworkField> getAnnotatedFields()", "diff": ["-        return collectValues(fFieldsForAnnotations);", "+        return collectValues(fieldsForAnnotations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b77710467d5ecfc7aacb90a61f04908", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "49d62f902ba7dba44b0b2b3b71e45004c667b2d5", "commitAfterChange": "faba199e389e3c977fc5573315790a5cde5f7611", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t@Override \tprotected void collectInitializationErrors(List<Throwable> errors)", "signatureAfterChange": "  \t@Override \tprotected void collectInitializationErrors(List<Throwable> errors)", "diff": ["+\t\tvalidateMethods(errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b94ea2754456623aa4eecc61a811d34", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "248bdb8248d80ac57d8b485ef73e758103a0c312", "commitAfterChange": "18299dc8f8aaae0e64345795b2884eb7f42ad460", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate static ArrayList<Runner> runners(Class<?> klass) throws Throwable", "signatureAfterChange": "  \tprivate static ArrayList<Runner> runners(Class<?> klass) throws Throwable", "diff": ["-\t\tList<Object[]> parametersList = getParametersList(new TestClass(klass));", "+\t\tList<Object[]> parametersList = getParametersList(klass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c3cf770f2f2b361d314fafd53978f24", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/AssumptionTest.java", "commitBeforeChange": "c732aa178a822671d3de88e5ece05f9bf464172b", "commitAfterChange": "af9634a3656bcd9c3988692c32381d0772077584", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Test \tpublic void failedAssumptionsMeanIgnored()", "signatureAfterChange": "  \t@Test \tpublic void failedAssumptionsMeanIgnored()", "diff": ["-\t\tassertThat(result.getFailedAssumptionCount(), is(1));", "+\t\tassertThat(result.getInvalidAssumptionCount(), is(1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c5749bb5c3fad68791b3eeb1c3f19a0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public <T extends Annotation> T getAnnotation(Class<T> annotationType)", "signatureAfterChange": "     public <T extends Annotation> T getAnnotation(Class<T> annotationType)", "diff": ["-        for (Annotation each : fAnnotations) {", "+        for (Annotation each : annotations) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cca6c28d2d0b2c7c11429c735010e4c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/MultipleFailureException.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public List<Throwable> getFailures()", "signatureAfterChange": "      public List<Throwable> getFailures()", "diff": ["-        return Collections.unmodifiableList(errors);", "+        return Collections.unmodifiableList(fErrors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d0f396b01f7b4bded84ffd5a4622f15", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "62c0364775d3c7d3c0b9f7532f0b16b1537cf6fa", "commitAfterChange": "45524a9ddcd387fde3a20740e9c9c90ed71fec3a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private ParameterSupplier buildParameterSupplierFromClass(Class<? extends ParameterSupplier> cls)             throws ReflectiveOperationException", "signatureAfterChange": "      private ParameterSupplier buildParameterSupplierFromClass(             Class<? extends ParameterSupplier> cls) throws Exception", "diff": ["-    private ParameterSupplier buildParameterSupplierFromClass(Class<? extends ParameterSupplier> cls)", "-            throws ReflectiveOperationException {", "+    private ParameterSupplier buildParameterSupplierFromClass(", "+            Class<? extends ParameterSupplier> cls) throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d851a0a2faf235303ba84ba58e0cf93", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/tests/InitializationErrorForwardCompatibilityTest.java", "commitBeforeChange": "be2fbfe3e2fb20a1ab11e9759f000fe6c143e544", "commitAfterChange": "5cfc92d9ee355a316619563c6cb6e2834d130b01", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t\t@Override \t\tpublic Description getDescription()", "signatureAfterChange": "  \t\t@Override \t\tpublic Description getDescription()", "diff": ["-\t\t\treturn null;", "+\t\t\treturn new EmptyDescription();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d9b4109af1107a8f5b49a02e2b85bce", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/manipulation/Sorter.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Sorter(Comparator<Description> comparator)", "signatureAfterChange": "     public Sorter(Comparator<Description> comparator)", "diff": ["-        fComparator = comparator;", "+        this.comparator = comparator;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e3f6144bfa59744470e06e9d4db7d19", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TimeWatcher.java", "commitBeforeChange": "582d86c49eb8624b9db65e69ad0e404821505b3d", "commitAfterChange": "0a2601045f101930d0ca7f31c53b416fafbbe7a7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private long getNanos()", "signatureAfterChange": "      private long getNanos()", "diff": ["-        return endTime - startTime;", "+        return endNanos - startNanos;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e493d6acbd50b81787be1ca774b4c08", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "04f4f3197084ad9ad7c050ce1a40d6f4421662f4", "commitAfterChange": "538187aac8c4858e9e366c4e4ee4e50cf40331c6", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 61, "signatureBeforeChange": " \t \tprivate void rerunTest(Test test)", "signatureAfterChange": " \t \tprivate void rerunTest(Test test)", "diff": ["-\t\t\tObject[] args= new Object[]{((TestCase)test).name()};", "+\t\t\tObject[] args= new Object[]{((TestCase)test).getName()};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e537d65969978145c7c14b31e7789e0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/matchers/JUnitMatchers.java", "commitBeforeChange": "89c38cee73bdcc7505da15d7e5de60cdf45a6c0e", "commitAfterChange": "0b57f033a94caca38ab1369b117baa1589d7d6d3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic static <T> Matcher<T> isOneOf(T... objects)", "signatureAfterChange": " \tpublic static <T> Matcher<T> isOneOf(T... objects)", "diff": ["-\t\t\tmatchers.add(is(each));", "+\t\t\tmatchers.add(equalTo(each));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ec198408ad9d6cd8fcda4ba82fed57e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TestName.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     protected void starting(Description d)", "signatureAfterChange": "      @Override     protected void starting(Description d)", "diff": ["-        fName = d.getMethodName();", "+        name = d.getMethodName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ee6d66a7df20306611f557006fb959e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkField.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     protected int getModifiers()", "signatureAfterChange": "      @Override     protected int getModifiers()", "diff": ["-        return fField.getModifiers();", "+        return field.getModifiers();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f1193cbbfcca8309d7356b15d469482", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "e727dd6b1cb2caa1699da3b2df7625c9554adc36", "commitAfterChange": "95bd62b2ffd80394d1a17e9078a4d79478423030", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t\t@Override \t\tpublic Object createTest() throws Exception", "signatureAfterChange": "  \t\t@Override \t\tpublic Object createTest() throws Exception", "diff": ["-\t\t\treturn fConstructor.newInstance(computeParams());", "+\t\t\treturn getTestClass().getOnlyConstructor().newInstance(computeParams());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f2ab1e7ea7ce2a51b31f9dc2c5c57ef", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/internal/SpecificDataPointsSupplierTest.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "          @Test     public void shouldReturnOnlyTheNamedFieldDataPoints() throws Exception", "signatureAfterChange": "          @Test     public void shouldReturnOnlyTheNamedFieldDataPoints() throws Throwable", "diff": ["-    public void shouldReturnOnlyTheNamedFieldDataPoints() throws Exception {", "+    public void shouldReturnOnlyTheNamedFieldDataPoints() throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f7a40704541b871484c73cace05ce52", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public Collection<Annotation> getAnnotations()", "signatureAfterChange": "     public Collection<Annotation> getAnnotations()", "diff": ["-        return Arrays.asList(annotations);", "+        return Arrays.asList(fAnnotations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fb6410f4478bd28553984f79ae0542d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/interceptor/Verifier.java", "commitBeforeChange": "734ab5187c068599352e5fdc7374c1334d484fef", "commitAfterChange": "54917b88aab026dabb4541276ed875117c1e1faa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic Statement intercept(final Statement base, FrameworkMethod method, Object target)", "signatureAfterChange": " \tpublic Statement apply(final Statement base, FrameworkMethod method, \t\t\tObject target)", "diff": ["-public class Verifier implements StatementInterceptor {", "-\tpublic Statement intercept(final Statement base, FrameworkMethod method, Object target) {", "+public class Verifier implements MethodRule {", "+\tpublic Statement apply(final Statement base, FrameworkMethod method,", "+\t\t\tObject target) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ff58e9ce33747bf38df45a3003607e8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/builders/IgnoredClassRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public Description getDescription()", "signatureAfterChange": "      @Override     public Description getDescription()", "diff": ["-        return Description.createSuiteDescription(fTestClass);", "+        return Description.createSuiteDescription(clazz);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ffda9ca89183c36d7a85212873840d1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tprotected Link invoke(TestMethod method)", "signatureAfterChange": " \t \tprotected Link invoke(TestMethod method, Object test)", "diff": ["-\tprotected Link invoke(TestMethod method) {", "-\t\treturn new Invoke(method);", "+\tprotected Link invoke(TestMethod method, Object test) {", "+\t\treturn new Invoke(method, test);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3070320a5eb1100e5f3952d135d7c5c3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/requests/FilterRequest.java", "commitBeforeChange": "127f1bb2a137d611e98277a0d1e9184efc47bc05", "commitAfterChange": "ef7b30f2a31e02690c32abb1c412e097726cb8f5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public FilterRequest(Request request, Filter filter)", "signatureAfterChange": "     public FilterRequest(Request request, Filter filter)", "diff": ["-        this.filter = filter;", "+        this.fFilter = filter;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30db9336e42fd6420f64b18f4163ee6b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "77ecd2119d3124b72935038effffadf7b98eccd9", "commitAfterChange": "3a791ec79fff66aebc332fe4e4cbf626e39bd3d3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprotected List<FrameworkMethod> computeTestMethods()", "signatureAfterChange": "  \tprotected List<FrameworkMethod> computeTestMethods()", "diff": ["-\t\treturn fTestClass.getTestMethods();", "+\t\treturn getTestClass().getTestMethods();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3132ccde976f64163a75046ab744d294", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/runner/Version.java", "commitBeforeChange": "6f71f80a3f81d45a79fa646da0865990837d2ab5", "commitAfterChange": "535ad1c6a96d338518ad5a9fd4142640cda1b931", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static String id()", "signatureAfterChange": "  \tpublic static String id()", "diff": ["-\t\treturn VERSION;", "+\t\treturn \"4.12-SNAPSHOT\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31893c8898a8cc9750b88ef34bd2a208", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCore.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void removeListener(RunListener listener)", "signatureAfterChange": "     public void removeListener(RunListener listener)", "diff": ["-        fNotifier.removeListener(listener);", "+        notifier.removeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31a86d12909eaf700756dc3c9bc217ea", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/TestMethod.java", "commitBeforeChange": "1fe4f2534d39f819eae3ae1a6e6169c651b0a8a8", "commitAfterChange": "f98130957df08de9cae93169298e04bf84388cae", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprotected void invoke(Roadie context) throws IllegalArgumentException, \t\t\tIllegalAccessException, InvocationTargetException", "signatureAfterChange": "  \tprotected void invoke(Roadie context) throws Throwable", "diff": ["-\tprotected void invoke(Roadie context) throws IllegalArgumentException,", "-\t\t\tIllegalAccessException, InvocationTargetException {", "+\tprotected void invoke(Roadie context) throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31f8676e0f874983577143d460df15a4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "bbcb8f416628bc168a2ed8353a30b4e9647abf6f", "commitAfterChange": "85d42f2ef0ce94448700c90ed99372def66dc2a2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic List<FrameworkMethod> getAnnotatedMethods( \t\t\tClass<? extends Annotation> annotationClass)", "signatureAfterChange": " \tpublic List<FrameworkMethod> getAnnotatedMethods( \t\t\tClass<? extends Annotation> annotationClass)", "diff": ["-\t\tensureKey(annotationClass);", "+\t\t// TODO (May 25, 2009 10:02:46 PM): DUP", "+\t\tensureKey(fMethodsForAnnotations, annotationClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "321cfc043199002e041b3ad93b4a0d4d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/manipulation/SingleMethodTest.java", "commitBeforeChange": "c503e40d9ec79ba76b69dd31d7dd32648fa13cf2", "commitAfterChange": "66cf6859fa74021320c9b0d5e0a6ffc5c86b770f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \t@Test public void eliminateUnnecessaryTreeBranches() throws Exception", "signatureAfterChange": "  \t@Test public void eliminateUnnecessaryTreeBranches() throws Exception", "diff": ["-\t\tDescription description = runner.getDescription();", "-\t\tassertEquals(1, description.getChildren().size());", "+\t\tPlan plan = runner.getPlan();", "+\t\tassertEquals(1, plan.getChildren().size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "321fcade4f354a4591102989b3b761a5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/TimeoutRuleTest.java", "commitBeforeChange": "ec534ffac48977be6b7011e4e531b83a0a767704", "commitAfterChange": "1c50b6cab85baea467aae117c6bd30225b314774", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "          @Test         public void run5() throws IOException", "signatureAfterChange": "          @Test         public void run5() throws IOException", "diff": ["-            File tmp = File.createTempFile(\"dummy\", \".tmp\");", "+            File tmp = tmpFile.newFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32293487686aea9b3040b5b2a81c4d7e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/junit/tests/framework/ComparisonCompactorTest.java", "commitBeforeChange": "b2d26ecd55eb952ad4dcd281ac3c4db77fbf9ba0", "commitAfterChange": "cfe6afadc81b72449c8b0cb96d51aa57f7a593b7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testComparisonErrorOverlapingMatches2Context()", "signatureAfterChange": "      public void testComparisonErrorOverlappingMatches2Context()", "diff": ["-    public void testComparisonErrorOverlapingMatches2Context() {", "+    public void testComparisonErrorOverlappingMatches2Context() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "322a8d758c57ac4379217e17295878c9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public Object[] getArgumentStrings(boolean nullsOk)             throws CouldNotGenerateValueException", "signatureAfterChange": "      public Object[] getArgumentStrings(boolean nullsOk)             throws CouldNotGenerateValueException", "diff": ["-        Object[] values = new Object[fAssigned.size()];", "+        Object[] values = new Object[assigned.size()];", "-            values[i] = fAssigned.get(i).getDescription();", "+            values[i] = assigned.get(i).getDescription();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "329eeb2e077fe8898982ad95dc23330f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/extension/TestMethodInterfaceTest.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Test \tpublic void getBeforesIsPublic() throws SecurityException, \t\t\tNoSuchMethodException", "signatureAfterChange": "  \t@Test \tpublic void getBeforesIsPublic() throws SecurityException", "diff": ["-\tpublic void getBeforesIsPublic() throws SecurityException,", "-\t\t\tNoSuchMethodException {", "-\t\tTestMethod testMethod= new TestMethod(BeforesAndAfters.class", "-\t\t\t\t.getMethod(\"test\"), new TestClass(BeforesAndAfters.class));", "+\tpublic void getBeforesIsPublic() throws SecurityException {", "+\t\tTestMethodElement testMethod= new TestMethodElement(new TestClass(", "+\t\t\t\tBeforesAndAfters.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32bbe7b2772f0a9a9aabdf98fafddc9b", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/runner/BaseTestRunner.java", "commitBeforeChange": "9af2e559040ea3bc3db5c5d39b2c4a27098d5a76", "commitAfterChange": "a1fef439624fe411d0bea8651324e28b134e8b4a", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic static String getFilteredTrace(Throwable t)", "signatureAfterChange": " \tpublic static String getFilteredTrace(Throwable t)", "diff": ["-\t\treturn BaseTestRunner.filterStack(trace);", "+\t\treturn BaseTestRunner.getFilteredTrace(trace);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32ccf1772436c195d1970b3c2b76bda0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/AssumptionViolatedException.java", "commitBeforeChange": "2e53904ae22336000cdf8e12166436e18e538b87", "commitAfterChange": "3bb48f0a58eb44f36b6e03538a7db05b6c6da335", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic AssumptionViolatedException(String assumption)", "signatureAfterChange": " \tpublic AssumptionViolatedException(String assumption)", "diff": ["+\t */", "-\t\tthis(assumption, null);", "+\t\tthis(assumption, false, null, null);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32fbb97a3ab2e0a82c9b725ba5d446ad", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "74941e1e1482016ffe705830cefb27cd376fb5ef", "commitAfterChange": "fb812b11c575fcf7bbe411a876903acd21ad04ea", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void getMethodsNullSorterSelf()", "signatureAfterChange": "      @Test     public void testMethodsNullSorterSelf()", "diff": ["-    public void getMethodsNullSorterSelf() {", "+    public void testMethodsNullSorterSelf() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "333228a9116465a320927d80239aa649", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "0e1c92693e70e52ad9af23ee6180500c74fc9c95", "commitAfterChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t\tprotected void runWithAssignment(Assignments parameterAssignment, FailureListener listener) \t\t\t\tthrows Throwable", "signatureAfterChange": "  \t\tprotected void runWithAssignment(Assignments parameterAssignment) throws Throwable", "diff": ["-\t\tprotected void runWithAssignment(Assignments parameterAssignment, FailureListener listener)", "-\t\t\t\tthrows Throwable {", "-\t\t\t// TODO: (Oct 9, 2007 8:56:54 PM) Should this be moved to Assignments?", "-", "+\t\tprotected void runWithAssignment(Assignments parameterAssignment) throws Throwable {", "-\t\t\t\trunWithIncompleteAssignment(parameterAssignment, listener);", "+\t\t\t\trunWithIncompleteAssignment(parameterAssignment);", "-\t\t\t\trunWithCompleteAssignment(parameterAssignment, listener);", "+\t\t\t\trunWithCompleteAssignment(parameterAssignment);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "337cffd0524e8949adab783c52de9e80", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/manipulation/Filter.java", "commitBeforeChange": "95da39292ea777ec3ff99be2bb23d46f704f683a", "commitAfterChange": "8e20f520565dc52f5599eafd54b603043bfecbaf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Filter matchDescription(final Description desiredDescription)", "signatureAfterChange": " \tpublic static Filter matchMethodDescription(final Description desiredDescription)", "diff": ["-\t//TODO javadoc", "-\tpublic static Filter matchDescription(final Description desiredDescription) {", "+\t */", "+\tpublic static Filter matchMethodDescription(final Description desiredDescription) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33aa5bb585bfa9fa0462a329528cbed6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/TestClassTest.java", "commitBeforeChange": "15566c4b6633db5cc84cae78088b36346b7d42f4", "commitAfterChange": "9d3821f6411ad85a683b8d38e4d42411229f2eec", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "     \t@Ignore     \t@Test     \tpublic String methodToBeMatched()", "signatureAfterChange": "          @Ignore         @Test         public String methodA()", "diff": ["-    \t@Ignore", "-    \t@Test", "-    \tpublic String methodToBeMatched() { ", "-    \t\treturn \"jupiter\";", "-    \t}", "+", "+        @Ignore", "+        @Test", "+        public String methodA() {", "+            return \"jupiter\";", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33b765d4411d94b1bc81d134c22d33f0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java", "commitBeforeChange": "90b53f3683af074aa7aa982821219338053b0345", "commitAfterChange": "810536929044271a608e019255e87c756235bb97", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private static Annotation[] getAnnotations(TestCase test)", "signatureAfterChange": "     private static Annotation[] getAnnotations(TestCase test)", "diff": ["-            Method m = test.getClass().getDeclaredMethod(test.getName());", "+            Method m = test.getClass().getMethod(test.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33ebff61cc8439750cf0da1644143055", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/extension/TestMethodInterfaceTest.java", "commitBeforeChange": "f98130957df08de9cae93169298e04bf84388cae", "commitAfterChange": "43b0fe352d5bced0c341640d0c630d23f2022a7e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Test \tpublic void getBeforesIsPublic() throws SecurityException, \t\t\tNoSuchMethodException", "signatureAfterChange": "  \t@Test \tpublic void getBeforesIsPublic() throws SecurityException, \t\t\tNoSuchMethodException", "diff": ["-\t\tTestMethod testMethod= new TestMethod(BeforesAndAfters.class", "+\t\tJUnit4MethodRunner testMethod= new JUnit4MethodRunner(BeforesAndAfters.class"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "348b1368ca95636ef1dbf6cd8ab62e2a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/framework/JUnit4TestAdapterCache.java", "commitBeforeChange": "d3e86b059db787af5c0d58ddf3f69af5b42865b8", "commitAfterChange": "7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tTest createTest(Description description)", "signatureAfterChange": "  \tTest createTest(Plan plan)", "diff": ["-\tTest createTest(Description description) {", "-\t\tif (description.isTest())", "-\t\t\treturn new JUnit4TestCaseFacade(description);", "+", "+\tTest createTest(Plan plan) {", "+\t\tDescription description= plan.getDescription();", "+\t\tif (plan.isTest())", "+\t\t\treturn createSingleTest(description);", "-\t\t\tfor (Description child : description.getChildren())", "+\t\t\tfor (Plan child : plan.getChildren())", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "349081f5b5b438b47119e482f8cb5e96", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "a58514aec7e843339be24980e92aeeb759327ffb", "commitAfterChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t\tpublic Notifier(Link link)", "signatureAfterChange": "  \t\tpublic Notifier(Link next)", "diff": ["-\t\tpublic Notifier(Link link) {", "-\t\t\tfNext= link;", "+\t\tpublic Notifier(Link next) {", "+\t\t\tfNext= next;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34a117fa5670b37b52d17dec5abac48b", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/framework/TestCase.java", "commitBeforeChange": "69a8dad63d43eb1071c5823f345f290edd5a3050", "commitAfterChange": "0807a8cd01b6d63d54f9a3580540fa35b7fb292e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprotected void runTest() throws Throwable", "signatureAfterChange": " \tprotected void runTest() throws Throwable", "diff": ["+\t\tassertNotNull(fName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "351a44e3046437d42fe97b03c0f6cb72", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/Failure.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-        return getTestHeader() + \": \" + fThrownException.getMessage();", "+        return getTestHeader() + \": \" + thrownException.getMessage();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "356d24eebf22ce5af15684270996e19b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "62c0364775d3c7d3c0b9f7532f0b16b1537cf6fa", "commitAfterChange": "45524a9ddcd387fde3a20740e9c9c90ed71fec3a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private ParameterSupplier getSupplier(ParameterSignature unassigned)             throws ReflectiveOperationException", "signatureAfterChange": "      private ParameterSupplier getSupplier(ParameterSignature unassigned)             throws Exception", "diff": ["-            throws ReflectiveOperationException {", "+            throws Exception {", "-        ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35b696d0b7d26b9c433d1b13ceb20e98", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public Object[] getActualValues(int start, int stop)              throws CouldNotGenerateValueException", "signatureAfterChange": "      public Object[] getActualValues(int start, int stop)              throws CouldNotGenerateValueException", "diff": ["-            values[i - start] = fAssigned.get(i).getValue();", "+            values[i - start] = assigned.get(i).getValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35c5981474b2bfa7867c9e4bceab0a3b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java", "commitBeforeChange": "6384edfffe7f8a2850d2bcde9a16a8e780734ebe", "commitAfterChange": "aace70a912417166d5646c284d0bde5b81f504fb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Parameters     public static Collection<Object[]> testsWithEventMatcher()", "signatureAfterChange": "      @Parameters     public static Collection<Object[]> testsWithEventMatcher()", "diff": ["-                {DontThrowAssertionErrorButExpectOne.class, hasSingleFailureWithMessage(", "-                        endsWith(\"Expected test to throw an instance of java.lang.AssertionError\"))},", "+                {", "+                    DontThrowAssertionErrorButExpectOne.class,", "+                    hasSingleFailureWithMessage(\"Expected test to throw an instance of java.lang.AssertionError\")},"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35cffcdcc44b0e866b8ebeccc91d241f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private ParameterSupplier buildParameterSupplierFromClass(             Class<? extends ParameterSupplier> cls) throws Exception", "signatureAfterChange": "      private ParameterSupplier buildParameterSupplierFromClass(             Class<? extends ParameterSupplier> cls) throws Exception", "diff": ["-                return (ParameterSupplier) constructor.newInstance(fClass);", "+                return (ParameterSupplier) constructor.newInstance(clazz);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "366f36d8caea00abf5be8ff82b2e98d1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "c228881359e2a4ccd0d5972c646f043ec42d62e0", "commitAfterChange": "14f9868962aee5bcba8a7595287be1d5fed54b7d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate Description(String displayName, Serializable uniqueId, Annotation... annotations)", "signatureAfterChange": "  \tprivate Description(String displayName, Object uniqueId, Annotation... annotations)", "diff": ["-\tprivate Description(String displayName, Serializable uniqueId, Annotation... annotations) {", "+\tprivate Description(String displayName, Object uniqueId, Annotation... annotations) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "367eb8aaefda1e3098724b151b2aaa9b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/manipulation/SingleMethodTest.java", "commitBeforeChange": "496ee866a46f783d145b649a688df57cbf79490e", "commitAfterChange": "5f7fddf537e551109ffd6241a00c87a2b3521523", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \t@Test public void eliminateUnnecessaryTreeBranches() throws Exception", "signatureAfterChange": "  \t@Test public void eliminateUnnecessaryTreeBranches() throws Exception", "diff": ["-\t\tPlan plan = runner.getPlan();", "-\t\tassertEquals(1, plan.getChildren().size());", "+\t\tDescription description = runner.getDescription();", "+\t\tassertEquals(1, description.getChildren().size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36a566472d8eb5fc461d597a66801a12", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCore.java", "commitBeforeChange": "143c96470aec3221f76f9dcc8042fb36cc88b852", "commitAfterChange": "a72b0dbef4b01e8ad0b832d9a579dd7fabd5a071", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic Result run(Executioner asdfasdf, Class<?>... classes)", "signatureAfterChange": " \tpublic Result run(Computer computer, Class<?>... classes)", "diff": ["-\tpublic Result run(Executioner asdfasdf, Class<?>... classes) {", "-\t\treturn run(Request.classes(asdfasdf, classes));", "+\tpublic Result run(Computer computer, Class<?>... classes) {", "+\t\treturn run(Request.classes(computer, classes));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36a7a5256f8c27270390f4971fdf553a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "commitAfterChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprotected String testName(Method method)", "signatureAfterChange": "  \tprotected String testName(TestMethod method)", "diff": ["-", "-\tprotected String testName(Method method) {", "+\tprotected String testName(TestMethod method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36e9e65aae66e428cff6df841bf146ba", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "734ab5187c068599352e5fdc7374c1334d484fef", "commitAfterChange": "54917b88aab026dabb4541276ed875117c1e1faa", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tprivate List<FrameworkField> interceptorFields()", "signatureAfterChange": "  \tprivate List<FrameworkField> ruleFields()", "diff": ["-\tprivate List<FrameworkField> interceptorFields() {", "-\t\treturn getTestClass().getAnnotatedFields(Interceptor.class);", "+\tprivate List<FrameworkField> ruleFields() {", "+\t\treturn getTestClass().getAnnotatedFields(Rule.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36f880017f29abb832dcb9f94ede7f3c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "a58514aec7e843339be24980e92aeeb759327ffb", "commitAfterChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t\tpublic NoExpectedException(Anchor next)", "signatureAfterChange": " \t\tpublic NoExpectedException(Link next)", "diff": ["-\t\tAnchor fNext;", "-\t\tpublic NoExpectedException(Anchor next) {", "+\t\tLink fNext;", "+\t\tpublic NoExpectedException(Link next) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "371987a5897e36463ec7c0b68cf61767", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "c15ba99f8f498b20a10df6a92f04d22182c2c964", "commitAfterChange": "2a57cc62edbc06b83c68d81dea87bbe43c46e20f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic void testStarted(String testName)", "signatureAfterChange": " \t \tpublic void testStarted(String testName)", "diff": ["-\t\tfPrinter.testStarted(testName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "371bf2ab61cc7da1a89acb02b06619da", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/results/PrintableResult.java", "commitBeforeChange": "8e313a1e58a56694c0441b2fa60974fa8e1bfe31", "commitAfterChange": "409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic PrintableResult(Class<?> type)", "signatureAfterChange": " \t \tpublic PrintableResult(Class<?> type, Computer computer)", "diff": ["-\tpublic PrintableResult(Class<?> type) {", "-\t\tthis(JUnitCore.runClasses(type));", "+\tpublic PrintableResult(Class<?> type, Computer computer) {", "+\t\tthis(JUnitCore.runClasses(computer, type));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "374ddc788ef82a36c29d045a38fdf32f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/Parameterized.java", "commitBeforeChange": "07b834616b9c3ce07af47165c55fe64f93f165f4", "commitAfterChange": "0c5906ab0068de4852dc593ebe93356aeea639ca", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t\t@Override \t\tpublic Object createTest() throws Exception", "signatureAfterChange": "  \t\t@Override \t\tpublic Object createTest() throws Exception", "diff": ["-\t\t\treturn fConstructor.newInstance(fParameters);", "+\t\t\treturn fConstructor.newInstance(fParameters.get(fParameterSetNumber));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37529e3cc5cf1dfe40e367ba3da40b06", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/InitializationError.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public List<Throwable> getCauses()", "signatureAfterChange": "      public List<Throwable> getCauses()", "diff": ["-        return errors;", "+        return fErrors;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3762462e3ebb468109cec27e8d02967b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public String getName()", "signatureAfterChange": "     public String getName()", "diff": ["-        if (fClass == null) {", "+        if (clazz == null) {", "-        return fClass.getName();", "+        return clazz.getName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37c798008a329cf67b6b06627e767abd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java", "commitBeforeChange": "3aca014a2c39723febbe7def2fd132da80c3f4a9", "commitAfterChange": "2c6c142aa801cef3520ca668e75a670a32b4859a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void theoryClassMethodsShowUp() throws Exception", "signatureAfterChange": "      @Test     public void theoryClassMethodsShowUp() throws Exception", "diff": ["-        assertThat(new Theories(HasATheory.class).getDescription()", "+        assertThat(new Theories(HasAFailingTheory.class).getDescription()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37dbeacfc922c086876c7050947635c2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactoryParams.java", "commitBeforeChange": "826529633261161edd2d9dc0f866b2c3c0420514", "commitAfterChange": "b0c0aafae2f3008c27ba06babd2b2dec15af53e8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r     public FilterFactoryParams()", "signatureAfterChange": "\r     public FilterFactoryParams()", "diff": ["-        this(null);\r", "+        this(\"\");\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "380f762248ec94b2738a9a90157169fc", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/EventCollector.java", "commitBeforeChange": "df70c1087de9d3827656ede187371bbe29d2a974", "commitAfterChange": "a538d25ae50887dc9395f2f59ad5040752c0ec4f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \t@Override \tpublic void testStarted(Description description) throws Exception", "signatureAfterChange": "  \t@Override \tpublic void testStarted(Description description) throws Exception", "diff": ["-", "-\t@Override", "-\tpublic void testStarted(Description description) throws Exception {", "-\t\ttestsStarted.add(description);", "-\t}", "+", "+\t@Override", "+\tpublic void testStarted(Description description) throws Exception {", "+\t\tfTestsStarted.add(description);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "381288cd733db2d58837d86121153a12", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public Object[] getConstructorArguments(boolean nullsOk)             throws CouldNotGenerateValueException", "signatureAfterChange": "      public Object[] getConstructorArguments()             throws CouldNotGenerateValueException", "diff": ["-    public Object[] getConstructorArguments(boolean nullsOk)", "+    public Object[] getConstructorArguments()", "-        return getActualValues(0, getConstructorParameterCount(), nullsOk);", "+        return getActualValues(0, getConstructorParameterCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38591ce1ef63b082e4007ea45af81df7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "e07e59eb9d24f6e4fa85dd99f311c1feca6ea983", "commitAfterChange": "5d957024be0d1b181879d48b7915b3b8aad8f5d5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected void collectInitializationErrors(List<Throwable> errors)", "signatureAfterChange": " \tprotected void collectInitializationErrors(List<Throwable> errors)", "diff": ["+\t\tvalidateStaticMethods(errors);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3884899e23f4e9c43f37ea6f1dea910d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public TextListener(PrintStream writer)", "signatureAfterChange": "      public TextListener(PrintStream writer)", "diff": ["-        this.fWriter = writer;", "+        this.writer = writer;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38cb526fbc5a77165cc4722b142e88b8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/RunAfters.java", "commitBeforeChange": "561a736d4400c32a608a6ee97424c20ca70bf8ae", "commitAfterChange": "39545426e07dcb3bb3d71c930451514ba54c5999", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic void evaluate() throws Throwable", "signatureAfterChange": "  \t@Override \tpublic void evaluate() throws Throwable", "diff": ["-\t\terrors.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38ef3e41811807dabb72b49e18fb9dda", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Enclosed.java", "commitBeforeChange": "a916d4133c7e394130d7953da427aae9917ab92c", "commitAfterChange": "d148bce8682505082a3cc634acbd36ac13a10c9a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic Enclosed(Class<?> klass) throws InitializationError", "signatureAfterChange": " \tpublic Enclosed(Class<?> klass, SuiteBuilder builder) throws InitializationError", "diff": ["-\tpublic Enclosed(Class<?> klass) throws InitializationError {", "-\t\tsuper(klass, klass.getClasses());", "+\tpublic Enclosed(Class<?> klass, SuiteBuilder builder) throws InitializationError {", "+\t\tsuper(builder, klass, klass.getClasses());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "392ea4b4674e78a9a5382aebedaebac4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/requests/FilterRequest.java", "commitBeforeChange": "127f1bb2a137d611e98277a0d1e9184efc47bc05", "commitAfterChange": "ef7b30f2a31e02690c32abb1c412e097726cb8f5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public Runner getRunner()", "signatureAfterChange": "      @Override     public Runner getRunner()", "diff": ["-            filter.apply(runner);", "+            fFilter.apply(runner);", "-                    .format(\"No tests found matching %s from %s\", filter", "+                    .format(\"No tests found matching %s from %s\", fFilter"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39e0d8a22b0cb73f6b3599f2d9f0b9c5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "5dd69355f371be15aee03875752f95e2b20e02c9", "commitAfterChange": "ad9972ba5d135d1c5673f0773cb7027f7823feb5", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "          private static Set<Class<?>> copyAndRefine(Set<Class<?>> classes)", "signatureAfterChange": "          private static Set<Class<?>> copyAndRefine(Set<Class<?>> classes)", "diff": ["-            HashSet<Class<?>> c= new HashSet<Class<?>>();", "+            Set<Class<?>> c= new HashSet<Class<?>>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39f6b2de5d2fa6d1a8e3deb0c27b0b97", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "751f75986b11336ac8310d73c89003b0b09ecb92", "commitAfterChange": "8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic Statement apply(Statement base, \t\t\torg.junit.runner.Description description)", "signatureAfterChange": " \t \t@Override \tprotected Statement apply(Statement base, \t\t\torg.junit.runner.Description description)", "diff": ["-\tpublic Statement apply(Statement base,", "+\t@Override", "+\tprotected Statement apply(Statement base,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b04980115456344d5447721552484d8", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic TestRunner()", "signatureAfterChange": " \tpublic TestRunner()", "diff": ["-\t\tfTestLoader= new StandardTestSuiteLoader(); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b3253cc1ad1d24786c37d6e4c901aa8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "a1813f62876a6c7227ec5c866b621e01cda79664", "commitAfterChange": "97afc5e205e1c6ac0f5a9aefabed92d58d88ab81", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tprotected void validateFields(List<Throwable> errors)", "signatureAfterChange": " \t \tprotected void validateFields(List<Throwable> errors)", "diff": ["-\t\t\tvalidateInterceptorField(each.getField(), errors);", "+\t\t\tvalidateRuleField(each.getField(), errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b486e92fc387cda322ce67c8ee8276c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/CategoriesAndParameterizedTest.java", "commitBeforeChange": "b3831d600d2d893ec6250ee930188cc373d81ee5", "commitAfterChange": "403f761da11bdaf9a03538139e7ae51601c36b0e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\tpublic ParameterizedTestC(String a)", "signatureAfterChange": " \t\tpublic ParameterizedTestWithAttemptedMethodCategory(String a)", "diff": ["-\tpublic static class ParameterizedTestC {", "-\t\tpublic ParameterizedTestC(String a) {", "+\tpublic static class ParameterizedTestWithAttemptedMethodCategory {", "+\t\tpublic ParameterizedTestWithAttemptedMethodCategory(String a) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b53c8f434a7c78f73dbcaa1781b9a23", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkField.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "          @Override     public Class<?> getDeclaringClass()", "signatureAfterChange": "          @Override     public Class<?> getDeclaringClass()", "diff": ["-        return fField.getDeclaringClass();", "+        return field.getDeclaringClass();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b92a633463bf21f93025f064a1d0da1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "9423b224d0bafeeabe485e51a7f3080cfac0a368", "commitAfterChange": "a3e0b1c6cbd770405cb7fdd4291090afc8e49df7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic Object[] getAllArguments(boolean nullsOk) throws CouldNotGenerateValueException", "signatureAfterChange": "  \tpublic Object[] getAllArguments() throws CouldNotGenerateValueException", "diff": ["-\tpublic Object[] getAllArguments(boolean nullsOk) throws CouldNotGenerateValueException {", "-\t\treturn getActualValues(nullsOk, 0, fAssigned.size());", "+\tpublic Object[] getAllArguments() throws CouldNotGenerateValueException {", "+\t\treturn getActualValues(0, fAssigned.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bc72e53c41e912cdd04b1bf6923d8e9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/validation/ValidationTest.java", "commitBeforeChange": "1c1a6f8020c615c9d723f79a8405e57f1c66ea1e", "commitAfterChange": "5a7824ae153484cb898c3850aa71b2cadf6f3fcc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t@Test \tpublic void something()", "signatureAfterChange": "  \t@Test \tpublic void nonStaticBeforeClass()", "diff": ["-\tpublic void something() {", "-\t\tResult result= JUnitCore.runClasses(Malformed.class);", "+\tpublic void nonStaticBeforeClass() {", "+\t\tResult result= JUnitCore.runClasses(NonStaticBeforeClass.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bcdfaf796cfb5ba50e42b4cc291d3ad", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/listening/ResultTest.java", "commitBeforeChange": "e727dd6b1cb2caa1699da3b2df7625c9554adc36", "commitAfterChange": "95bd62b2ffd80394d1a17e9078a4d79478423030", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t@Test public void ignoringInMiddleDoesntCountAsRun() throws Exception", "signatureAfterChange": " \t@Test public void failedAssumptionDoesntCountAsRun() throws Exception", "diff": ["-\t@Test public void ignoringInMiddleDoesntCountAsRun() throws Exception {", "+\t@Test public void failedAssumptionDoesntCountAsRun() throws Exception {", "-\t\tlistener.testIgnored(someTest);", "+\t\tlistener.testAssumptionFailed(someTest, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bf6ab8747187aa4eea952bc6e3f79a5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "6bea82df32f687d636f1b843a1918a3a1ff22a6e", "commitAfterChange": "872faeab15115635b3260001979ae036e64e29bf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void expect(Matcher<?> matcher)", "signatureAfterChange": " \tpublic void expect(Matcher<?> matcher)", "diff": ["-\t\tfMatcher.and(matcher);", "+\t\tfMatcher.andAlso(matcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c53c8de269546a1ea8a62a0d8c8dee1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/Timeout.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public Statement apply(Statement base, Description description)", "signatureAfterChange": "      public Statement apply(Statement base, Description description)", "diff": ["-        return new FailOnTimeout(base, fTimeout, fTimeUnit, fLookForStuckThread);", "+        return new FailOnTimeout(base, timeout, timeUnit, lookForStuckThread);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c5605f981cbd9231bb0da4f2fd875b5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "d1b8c04e54f0b9e4807fa88a2ff36ad9ba177107", "commitAfterChange": "07447b5f98989e4456be8ee8acd01cfb3d20b8c0", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "          protected void runWithCompleteAssignment(final Assignments complete)                 throws InstantiationException, IllegalAccessException,                 InvocationTargetException, NoSuchMethodException, Throwable", "signatureAfterChange": "          protected void runWithCompleteAssignment(final Assignments complete)                 throws Throwable", "diff": ["-                throws InstantiationException, IllegalAccessException,", "-                InvocationTargetException, NoSuchMethodException, Throwable {", "+                throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cc9bcd9c4e86719d8f7e091e78cc9c1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactoryParams.java", "commitBeforeChange": "56193048f411846a58c0e0377a5f1ccfecd3d2f9", "commitAfterChange": "826529633261161edd2d9dc0f866b2c3c0420514", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r     public FilterFactoryParams(Description description, String args)", "signatureAfterChange": "\r     public FilterFactoryParams(String args)", "diff": ["-    public FilterFactoryParams(Description description, String args) {\r", "-        this.description = description;\r", "+    public FilterFactoryParams(String args) {\r", "-    }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cea3c342cb3ce55cda2187bbca6ebb7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/JUnitCoreTest.java", "commitBeforeChange": "56193048f411846a58c0e0377a5f1ccfecd3d2f9", "commitAfterChange": "826529633261161edd2d9dc0f866b2c3c0420514", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void shouldAddFailuresToResult()", "signatureAfterChange": "     @Test     public void shouldAddFailuresToResult()", "diff": ["-        assertThat(result.getFailures().get(0).getException(), instanceOf(ClassNotFoundException.class));", "+        assertThat(result.getFailures().get(0).getException(), instanceOf(IllegalArgumentException.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cf95a0d1ab1c2f21c028041fd50a6ca", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "956f86fa4c406a923d5366b5906e3431e9d0717d", "commitAfterChange": "7b94e3de5c8eab7e25c8b3be0e822ae6d4175bf0", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected Statement withBefores(FrameworkMethod method, Object target, \t\t\tStatement statement)", "signatureAfterChange": " \tprotected Statement withBefores(FrameworkMethod method, Object target, \t\t\tStatement statement)", "diff": ["-\t\treturn new RunBefores(statement, befores, target);", "+\t\treturn befores.isEmpty() ? statement : ", "+\t\t\tnew RunBefores(statement, befores, target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d5aa28ca9a20ac17b355cf79207b10f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "7cec75a6e01cdf9a5320626f4ba9812b0aa8e725", "commitAfterChange": "99ffe0144444c0727248dad94f153b1fc91bf847", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testMethodsNullSorterSelf()", "signatureAfterChange": "      @Test     public void testMethodsNullSorterSelf()", "diff": ["-        List<String> actual = getDeclaredFilteredMethods(ClassWithoutSorterAnnotation.class, expected);", "+        List<String> actual = getDeclaredFilteredMethods(DummySortWithoutAnnotation.class, expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d6ef4e813a3809412498326574aa9e3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TemporaryFolder.java", "commitBeforeChange": "59e5333b24d0e433de10d74c69e5de7700c6b744", "commitAfterChange": "2568203bdebd5a4a4ad9aa74b1d8369d22f668a3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic File newFile(String fileName) throws IOException", "signatureAfterChange": " \tpublic File newFile(String fileName) throws IOException", "diff": ["-\t\t\tthrow new IllegalArgumentException(", "+\t\t\tthrow new IOException("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d80d1f327077e40572caf1eb89505b0", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/runner/JUnitCore.java", "commitBeforeChange": "168fe0844e104a224a5899b02dfd3e0fb07a32e3", "commitAfterChange": "d30d725d2ee4c6da018283a39b44e9096ea8a243", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic Result run(Runner runner)", "signatureAfterChange": " \tpublic Result run(Runner runner)", "diff": ["-\t\taddListener(listener);", "+\t\taddFirstListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dba4219eddbf4992eb4abd3a0b8cfd1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     @Deprecated     public boolean producesType(Type type)", "signatureAfterChange": "     @Deprecated     public boolean producesType(Type type)", "diff": ["-                && ((Class<?>) type).isAssignableFrom(fMethod.getReturnType());", "+                && ((Class<?>) type).isAssignableFrom(method.getReturnType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e0e54da7f4c4b2dc0407fb758d655b7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "commitAfterChange": "44e7458b19d5cd1900a765a440c96e85b81d25fc", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprotected void invokeTestMethod(TestMethod method, RunNotifier notifier)", "signatureAfterChange": "  \tprotected void runMethod(TestMethod method, RunNotifier notifier)", "diff": ["-", "-\tprotected void invokeTestMethod(TestMethod method, RunNotifier notifier) {", "+\tprotected void runMethod(TestMethod method, RunNotifier notifier) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e3217165dbae6d1bee6b084adb76b99", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprotected void runChild(TestMethod method, RunNotifier notifier)", "signatureAfterChange": "  \tprotected void runChild(FrameworkMethod method, RunNotifier notifier)", "diff": ["-\tprotected void runChild(TestMethod method, RunNotifier notifier) {", "+\tprotected void runChild(FrameworkMethod method, RunNotifier notifier) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e4a88ae01bc88a951b17c811a7afb67", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/junit/tests/framework/ComparisonCompactorTest.java", "commitBeforeChange": "b2d26ecd55eb952ad4dcd281ac3c4db77fbf9ba0", "commitAfterChange": "cfe6afadc81b72449c8b0cb96d51aa57f7a593b7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testComparisonErrorOverlapingMatches()", "signatureAfterChange": "      public void testComparisonErrorOverlappingMatches()", "diff": ["-    public void testComparisonErrorOverlapingMatches() {", "+    public void testComparisonErrorOverlappingMatches() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e4cddc7776872c151e41c33b0923a82", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExternalResource.java", "commitBeforeChange": "751f75986b11336ac8310d73c89003b0b09ecb92", "commitAfterChange": "8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic Statement apply(Statement base, Description description)", "signatureAfterChange": " \t@Override \tprotected Statement apply(Statement base, Description description)", "diff": ["-public abstract class ExternalResource implements TestRule {", "-\tpublic Statement apply(Statement base, Description description) {", "+public abstract class ExternalResource extends TestRule {", "+\t@Override", "+\tprotected Statement apply(Statement base, Description description) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e5e06ec7dd96442449a6a49cccef9f6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "d1b8c04e54f0b9e4807fa88a2ff36ad9ba177107", "commitAfterChange": "07447b5f98989e4456be8ee8acd01cfb3d20b8c0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "          protected void runWithIncompleteAssignment(Assignments incomplete)                 throws InstantiationException, IllegalAccessException,                 Throwable", "signatureAfterChange": "          protected void runWithIncompleteAssignment(Assignments incomplete)                 throws Throwable", "diff": ["-                throws InstantiationException, IllegalAccessException,", "-                Throwable {", "+                throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e661cbd23bd468b8e5a13df204dc8bf", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TestName.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public String getMethodName()", "signatureAfterChange": "     public String getMethodName()", "diff": ["-        return fName;", "+        return name;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e7a2a7de22a601a035d52a538f68878", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/ErrorReportingRunner.java", "commitBeforeChange": "979e8abbe974e8847668f5887403da78a6165ebc", "commitAfterChange": "1fcd990f60518c941a44bae2596392021614a20b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \t@Override \tprotected Statement classBlock(RunNotifier notifier)", "signatureAfterChange": " \t \t@Override \tprotected Statement classBlock(RunNotifier notifier)", "diff": ["-\t\treturn runChildren(notifier);", "+\t\treturn childrenInvoker(notifier);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e982b8a8562825b561b5c223b9b64e4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/Fail.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public Fail(Throwable e)", "signatureAfterChange": "      public Fail(Throwable e)", "diff": ["-        fError = e;", "+        error = e;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e9ca52abd8295b3e22c6708665d590b", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "69a8dad63d43eb1071c5823f345f290edd5a3050", "commitAfterChange": "0807a8cd01b6d63d54f9a3580540fa35b7fb292e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void testFailed(int status, Test test, Throwable t)", "signatureAfterChange": "  \tpublic void testFailed(int status, Test test, Throwable t)", "diff": ["-\t\t\tcase TestRunListener.STATUS_ERROR: writer().print(\"E\"); break;", "-\t\t\tcase TestRunListener.STATUS_FAILURE: writer().print(\"F\"); break;", "+\t\t\tcase TestRunListener.STATUS_ERROR: getWriter().print(\"E\"); break;", "+\t\t\tcase TestRunListener.STATUS_FAILURE: getWriter().print(\"F\"); break;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ec5aa8a6de477b3c42ac2225783f18b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "161229441b7365fa06f0d82e272e15f1f378b315", "commitAfterChange": "30a039854fd7f8cda135222054b247c158b91fa7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void validate(boolean isStatic, List<Throwable> errors)", "signatureAfterChange": " \tpublic void validatePublicVoidNoArg(boolean isStatic, List<Throwable> errors)", "diff": ["-", "-\tpublic void validate(boolean isStatic, List<Throwable> errors) {", "+\t */", "+\tpublic void validatePublicVoidNoArg(boolean isStatic, List<Throwable> errors) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ee6352d5e14d07ecd3bcc71926efcc9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/AssumptionTest.java", "commitBeforeChange": "2745d016f648e783360bd076f23b36908f8125b0", "commitAfterChange": "b064a274adb12c6e866cb08dedc70534237330b2", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "         @Test         public void testMethod()", "signatureAfterChange": "         @Test         public void testMethod()", "diff": ["-            assumeNoException(message, t);", "+            assumeNoException(message, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f06a232a54ff0b757c5e59deb4d52cd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/NoGenericTypeParametersValidator.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      void validate(List<Throwable> errors)", "signatureAfterChange": "      void validate(List<Throwable> errors)", "diff": ["-        for (Type each : fMethod.getGenericParameterTypes()) {", "+        for (Type each : method.getGenericParameterTypes()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f23ac030621b5e6c07b91d4040b893a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCore.java", "commitBeforeChange": "143c96470aec3221f76f9dcc8042fb36cc88b852", "commitAfterChange": "a72b0dbef4b01e8ad0b832d9a579dd7fabd5a071", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic Result runMain(JUnitSystem system, String... args)", "signatureAfterChange": " \tpublic Result runMain(JUnitSystem system, String... args)", "diff": ["-\t\tResult result= run(new Executioner(), classes.toArray(new Class[0]));", "+\t\tResult result= run(classes.toArray(new Class[0]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f7492161cd58e47af4a0a29316fc55c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      void putTestFailureTimestamp(Description key, long end)", "signatureAfterChange": "      void putTestFailureTimestamp(Description key, long end)", "diff": ["-        failureTimestamps.put(key.toString(), end);", "+        fFailureTimestamps.put(key.toString(), end);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fafab35d51467fada8dfae793a4212c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "78b4a8975523d0288a6f20f0ae7862b45cb55038", "commitAfterChange": "f5c7fe43447b008b4db13e031b7c0c3551ae9ddd", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     static public void assertNotEquals(double expected, double actual, double delta)", "signatureAfterChange": "     static public void assertNotEquals(double unexpected, double actual, double delta)", "diff": ["-    static public void assertNotEquals(double expected, double actual, double delta) {", "-        assertNotEquals(null, expected, actual, delta);", "+    static public void assertNotEquals(double unexpected, double actual, double delta) {", "+        assertNotEquals(null, unexpected, actual, delta);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fb6715433dbc435c6d53a5e139aaeed", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/RunNotifier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "          SafeNotifier(List<RunListener> currentListeners)", "signatureAfterChange": "          SafeNotifier(List<RunListener> currentListeners)", "diff": ["-            fCurrentListeners = currentListeners;", "+            this.currentListeners = currentListeners;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fd57c03b085f87c38fca16943ea7f6d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Enclosed.java", "commitBeforeChange": "6ff2381af213bf699e62244315debec66b373d81", "commitAfterChange": "67e3edf20613b1278f4be05353b31b5129e21882", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic Enclosed(Class<?> klass, SuiteBuilder builder) throws InitializationError", "signatureAfterChange": " \tpublic Enclosed(Class<?> klass, RunnerBuilder builder) throws Throwable", "diff": ["-\tpublic Enclosed(Class<?> klass, SuiteBuilder builder) throws InitializationError {", "+\tpublic Enclosed(Class<?> klass, RunnerBuilder builder) throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "405f6603454152b46fe79882e7a38293", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/categories/CategoryTest.java", "commitBeforeChange": "d0c70cac5b28861803d97d59ab93dfcb10d2c4d3", "commitAfterChange": "7d8f2b7f6e190e8e59efacc10bc617b6646d131b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \t@Test \tpublic void testCountWithExplicitFilter() throws Throwable", "signatureAfterChange": "  \t@Test \tpublic void testCountWithExplicitFilter() throws Throwable", "diff": ["+\t\tassertEquals(2, result.getRunCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4077a2b7a7ca63b2f3dba00b61e27596", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     protected Statement withBeforeClasses(Statement statement)", "signatureAfterChange": "     protected Statement withBeforeClasses(Statement statement)", "diff": ["-        List<FrameworkMethod> befores = fTestClass", "+        List<FrameworkMethod> befores = testClass"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "407c8155416c53c2a16fc033b4737a02", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactory.java", "commitBeforeChange": "196c4ed79cbaca37709643b54913b361b677ae04", "commitAfterChange": "0a9a389570a171b67c3155d312f2e90bdab5aaaf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Filter createFilter(final String args) throws FilterNotFoundException", "signatureAfterChange": "      public Filter createFilter(String args) throws FilterNotCreatedException", "diff": ["-    public Filter createFilter(final String args) throws FilterNotFoundException {", "+    public Filter createFilter(String args) throws FilterNotCreatedException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40981ce9fc2d5d41668059ac8a283176", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/links/InvokeMethod.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic InvokeMethod(TestMethod testMethod, Object target)", "signatureAfterChange": " \t \tpublic InvokeMethod(FrameworkMethod testMethod, Object target)", "diff": ["-\tpublic InvokeMethod(TestMethod testMethod, Object target) {", "+\tpublic InvokeMethod(FrameworkMethod testMethod, Object target) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40c1b92655347f26d3904111b6658ede", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "4dcf3a499652b3c089d91e209c6f01313115ff76", "commitAfterChange": "a916d4133c7e394130d7953da427aae9917ab92c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprotected void printFailures(Result result)", "signatureAfterChange": "  \tprotected void printFailures(Result result)", "diff": ["-\t\tprintExceptions(\"failure\", \"\", result.getFailures());", "+\t\tprintEvents(\"failure\", \"\", result.getFailures());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40d50bf40def3f86569619a8e73775f3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     protected Runner getRunner(RunnerBuilder builder, Class<?> testClass)             throws Throwable", "signatureAfterChange": "      @Override     protected Runner getRunner(RunnerBuilder builder, Class<?> testClass)             throws Throwable", "diff": ["-        return fMethods ? parallelize(runner) : runner;", "+        return methods ? parallelize(runner) : runner;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40e6384db8da587ac79ea8bbc6d3bc2a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/OldTestClassRunnerTest.java", "commitBeforeChange": "db89759c22060a89f6750e2e92ce93072eace561", "commitAfterChange": "521fdb5aae536bd5055f6d0e4f09c5a7bdb5799f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \t@Test public void canUnadaptAnAdapter()", "signatureAfterChange": " \t \t@Test public void canUnadaptAnAdapter()", "diff": ["-\t\tOldTestClassRunner runner= new OldTestClassRunner(new JUnit4TestAdapter(AnnotatedTest.class));", "+\t\tJUnit38ClassRunner runner= new JUnit38ClassRunner(new JUnit4TestAdapter(AnnotatedTest.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4108f28ea56ab84fbffbe0437bb59256", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Suite.java", "commitBeforeChange": "a916d4133c7e394130d7953da427aae9917ab92c", "commitAfterChange": "d148bce8682505082a3cc634acbd36ac13a10c9a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic Suite(Class<?>[] classes)", "signatureAfterChange": "  \tpublic Suite(SuiteBuilder requestor, Class<?>[] classes)", "diff": ["-\tpublic Suite(Class<?>[] classes) {", "-\t\tthis(null, builder.runners(classes));", "+\tpublic Suite(SuiteBuilder requestor, Class<?>[] classes) {", "+\t\tthis(null, requestor.runners(classes));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "411d11437e6feb32d3162f120da15f2c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedExceptionMatcher.java", "commitBeforeChange": "872faeab15115635b3260001979ae036e64e29bf", "commitAfterChange": "a37fd9ac8b2afc54384fd32f470b54aa69dc620a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate Matcher<Throwable> createCompositeMatcher()", "signatureAfterChange": "  \tprivate Matcher<Throwable> createCompositeMatcher()", "diff": ["-\t\treturn withStacktrace(allOfTheMatchers());", "+\t\treturn isThrowable(allOfTheMatchers());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "417994b65c4575ddd1112ede11cecabe", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "5ea3196f1cdbc32bc3a91b96bedc1964d3bb76d1", "commitAfterChange": "8ea7e775addfcc44f0bd7145100cca3cb301d8e1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "          @Test     public void testMethodsNullSorterSub()", "signatureAfterChange": "          @Test     public void testMethodsNullSorterSub()", "diff": ["-        List<String> actual = getDeclaredFilteredMethods(Sub.class, expected);", "+        List<String> actual = getDeclaredMethodNames(Sub.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "418156c02cdbac310375bbaa635bf4d8", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/DefaultFailureDetailView.java", "commitBeforeChange": "9af2e559040ea3bc3db5c5d39b2c4a27098d5a76", "commitAfterChange": "a1fef439624fe411d0bea8651324e28b134e8b4a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void showFailure(TestFailure failure)", "signatureAfterChange": " \tpublic void showFailure(TestFailure failure)", "diff": ["-\t\tfTextArea.setText(BaseTestRunner.getFilteredTrace(failure.thrownException()));", "+\t\tfTextArea.setText(BaseTestRunner.getFilteredTrace(failure.trace()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41dc961fe7ecbac66f915093870febb4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/validator/AnnotationValidator.java", "commitBeforeChange": "fe5d86eba71a1f59dbbed09de4add01cc20420c0", "commitAfterChange": "d9054149988487750679e35a349df7e0e2df5870", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public List<Exception> validateAnnotatedField(Field field)", "signatureAfterChange": "     public List<Exception> validateAnnotatedField(FrameworkField field)", "diff": ["-    public List<Exception> validateAnnotatedField(Field field) {", "+    public List<Exception> validateAnnotatedField(FrameworkField field) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41f0f6225b6849a9f5ec74eb6025e209", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java", "commitBeforeChange": "9c5a2f28935a2d816ac14894d6c7cfb3c32a98f6", "commitAfterChange": "26c25f3dbf524f4efd90e97f41c6df10345e78a9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void throwsTestFailedWithTimeoutException()             throws Throwable", "signatureAfterChange": "      @Test     public void throwsTestTimedOutException()             throws Throwable", "diff": ["-    public void throwsTestFailedWithTimeoutException()", "+    public void throwsTestTimedOutException()", "-        thrown.expect(TestFailedOnTimeoutException.class);", "+        thrown.expect(TestTimedOutException.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42470549e63fe428c3fbf7568d69d937", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/model/EachTestNotifier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void fireTestIgnored()", "signatureAfterChange": "      public void fireTestIgnored()", "diff": ["-        fNotifier.fireTestIgnored(fDescription);", "+        notifier.fireTestIgnored(description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "426b85892685723140f0fe56dc508663", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/manipulation/SingleMethodTest.java", "commitBeforeChange": "07b834616b9c3ce07af47165c55fe64f93f165f4", "commitAfterChange": "0c5906ab0068de4852dc593ebe93356aeea639ca", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t\t@Parameters \t\tpublic static Collection<Object[]> params()", "signatureAfterChange": " \t\t@Parameters \t\tpublic static List<Object[]> params()", "diff": ["-\t\tpublic static Collection<Object[]> params() {", "+\t\tpublic static List<Object[]> params() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42bcefb3983b48d4eb3a7476e71c74ef", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "04f4f3197084ad9ad7c050ce1a40d6f4421662f4", "commitAfterChange": "538187aac8c4858e9e366c4e4ee4e50cf40331c6", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 30, "signatureBeforeChange": " \t\t \tprotected JCheckBox createUseLoaderCheckBox()", "signatureAfterChange": " \t\t \tprotected JCheckBox createUseLoaderCheckBox()", "diff": ["+\t\tif (inVAJava())", "+\t\t\tbox.setVisible(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42c8dc7a56e3b7d41e99b7311d0470d3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExternalResource.java", "commitBeforeChange": "95a8c63cb0a7867d58ee4a0777fec65bab39a1ec", "commitAfterChange": "c7895eb8695d79b14ff2f903fbb2fab3e52e4c43", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic Statement apply(Statement base, TestClass testClass)", "signatureAfterChange": " \t \tpublic Statement apply(Statement base, Description description)", "diff": ["-\tpublic Statement apply(Statement base, TestClass testClass) {", "+\tpublic Statement apply(Statement base, Description description) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43263e95561cfc9e87f2019ecc870980", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "a1813f62876a6c7227ec5c866b621e01cda79664", "commitAfterChange": "97afc5e205e1c6ac0f5a9aefabed92d58d88ab81", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate void validateInterceptorField(Field field, List<Throwable> errors)", "signatureAfterChange": "  \tprivate void validateRuleField(Field field, List<Throwable> errors)", "diff": ["-\tprivate void validateInterceptorField(Field field, List<Throwable> errors) {", "+\tprivate void validateRuleField(Field field, List<Throwable> errors) {", "-\t\t\t\t\t+ \" must implement StatementInterceptor\"));", "+\t\t\t\t\t+ \" must implement MethodRule\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "441f35005e7d0ee848977cbc11ca391a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/ErrorReportingRunner.java", "commitBeforeChange": "c7300033b5622aa02a58d4570e598697e58b0b4d", "commitAfterChange": "0804ef4cd09b0e94783a9882c60914e22fca5108", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private Description describeCause(Throwable child)", "signatureAfterChange": "      private Description describeCause(Throwable child)", "diff": ["-        return Description.createTestDescription(testClass,", "-                \"initializationError\");", "+        return Description.createTestDescription(classNames, \"initializationError\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "446bface09e7f1f3880f2f08692dead0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "e07e59eb9d24f6e4fa85dd99f311c1feca6ea983", "commitAfterChange": "5d957024be0d1b181879d48b7915b3b8aad8f5d5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate static ArrayList<Runner> runners(Class<?> klass) throws Throwable", "signatureAfterChange": "  \tprivate static ArrayList<Runner> runners(TestClass klass) throws Throwable", "diff": ["-", "-\tprivate static ArrayList<Runner> runners(Class<?> klass) throws Throwable {", "+\tprivate static ArrayList<Runner> runners(TestClass klass) throws Throwable {", "-\t\t\trunners.add(new TestClassRunnerForParameters(klass, parametersList,", "+\t\t\trunners.add(new TestClassRunnerForParameters(klass.getJavaClass(), parametersList,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44bdce4c52347fab1063bbc94f68d81c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/SynchronizedRunListener.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void testRunFinished(Result result) throws Exception", "signatureAfterChange": "      @Override     public void testRunFinished(Result result) throws Exception", "diff": ["-        synchronized (fMonitor) {", "-            fListener.testRunFinished(result);", "+        synchronized (monitor) {", "+            listener.testRunFinished(result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44c2109393c7c65d1094d44bc40074eb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/Parameterized.java", "commitBeforeChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "commitAfterChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tprivate Collection<?> getParametersList() throws IllegalAccessException, InvocationTargetException, Exception", "signatureAfterChange": " \t \tprivate Collection<?> getParametersList() throws Throwable", "diff": ["-\tprivate Collection<?> getParametersList() throws IllegalAccessException, InvocationTargetException, Exception {", "-\t\treturn (Collection<?>) getParametersMethod().invoke(null);", "+\tprivate Collection<?> getParametersList() throws Throwable {", "+\t\treturn (Collection<?>) getParametersMethod().invokeExplosively(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44cafbb502fa56c6068e2b30ff04ab8c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "3e08f69912d69189e895c279b1bece0c7c0840f4", "commitAfterChange": "dca4a949f93bb85cc8ee0eb8789979a18aa3ffc7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 3, "signatureBeforeChange": "      protected Runner createRunnerForTest(TestWithParameters test)             throws InitializationError", "signatureAfterChange": "      protected Runner createRunnerForTest(TestWithParameters test)             throws InitializationError", "diff": ["-        return new TestClassRunnerForParameters(test);", "+        return new BlockJUnit4ClassRunnerWithParameters(test);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44cb5f8bb1a3e47c134605ea523114d5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/TemporaryFolderUsageTest.java", "commitBeforeChange": "59e5333b24d0e433de10d74c69e5de7700c6b744", "commitAfterChange": "2568203bdebd5a4a4ad9aa74b1d8369d22f668a3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t@Test \tpublic void newFolderWithGivenPathThrowsIllegalArgumentExceptionIfPathExists() throws IOException", "signatureAfterChange": "  \t@Test \tpublic void newFolderWithGivenPathThrowsIllegalArgumentExceptionIfPathExists() throws IOException", "diff": ["-\t\tthrown.expect(IllegalArgumentException.class);", "+\t\tthrown.expect(IOException.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44f3d30a3271c0e59a83e16a008b8831", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java", "commitBeforeChange": "2745d016f648e783360bd076f23b36908f8125b0", "commitAfterChange": "b064a274adb12c6e866cb08dedc70534237330b2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "         public void addError(Test test, Throwable t)", "signatureAfterChange": "         public void addError(Test test, Throwable e)", "diff": ["-        public void addError(Test test, Throwable t) {", "-            Failure failure = new Failure(asDescription(test), t);", "+        public void addError(Test test, Throwable e) {", "+            Failure failure = new Failure(asDescription(test), e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "453a582d939e93ac3426dbe5909ff275", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "commitAfterChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Override \tprotected NotificationStrategy chain(final TestMethod method, Object test)", "signatureAfterChange": "  \t@Override \tprotected Notifier chain(final TestMethod method, Object test)", "diff": ["-\tprotected NotificationStrategy chain(final TestMethod method, Object test) {", "-\t\tLink next= invoke(method, test);", "+\tprotected Notifier chain(final TestMethod method, Object test) {", "+\t\tStatement next= invoke(method, test);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "455d949e2777608bb506d29db75a5b52", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "1d982e5310d57fe0ea4b63e05f20215ee3add1fe", "commitAfterChange": "24a5aad1f49b4decf946f1df701e354a18544132", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprotected Description methodDescription(TestMethod method)", "signatureAfterChange": "  \t@Override \tprotected Description describeChild(TestMethod method)", "diff": ["-\tprotected Description methodDescription(TestMethod method) {", "+\t@Override", "+\tprotected Description describeChild(TestMethod method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45c823db670821b334501136e88b1ae8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "34a0ecb4ffb3cb8d33b60c222c29145d017f02c9", "commitAfterChange": "7cd277620b4c888ae4101bb3f4768af83b85313a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tprivate Comparator<? super T> comparator()", "signatureAfterChange": "  \tprivate Comparator<? super T> comparator(final Sorter sorter)", "diff": ["-", "-\tprivate Comparator<? super T> comparator() {", "+\tprivate Comparator<? super T> comparator(final Sorter sorter) {", "-\t\t\t\treturn fSorter.compare(describeChild(o1), describeChild(o2));", "+\t\t\t\treturn sorter.compare(describeChild(o1), describeChild(o2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45e27a03fe627711db92796b95f58ae2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/ArrayComparisonFailure.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ArrayComparisonFailure(String message, AssertionError cause, int index)", "signatureAfterChange": "     public ArrayComparisonFailure(String message, AssertionError cause, int index)", "diff": ["-        this.message = message;", "+        this.fMessage = message;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4618796623811d6dfe2d031105e84a4a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "5e71994e865d0e2ac23885a11444cda91b3bba76", "commitAfterChange": "1273a35689bdcb3304f6634cdc3889c61f9b1b1f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void invokeValidatorsOnMethods(List<Throwable> errors)", "signatureAfterChange": "      private void invokeValidatorsOnMethods(List<Throwable> errors)", "diff": ["-                annotationValidator.validateAnnotatedMethod(frameworkMethod.getMethod(), errors);", "+                errors.addAll(annotationValidator.validateAnnotatedMethod(frameworkMethod.getMethod()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46502418dfb87c3ec93487420750cee0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "956f86fa4c406a923d5366b5906e3431e9d0717d", "commitAfterChange": "7b94e3de5c8eab7e25c8b3be0e822ae6d4175bf0", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprotected Statement withAfters(FrameworkMethod method, Object target, \t\t\tStatement statement)", "signatureAfterChange": " \tprotected Statement withAfters(FrameworkMethod method, Object target, \t\t\tStatement statement)", "diff": ["+\t\t// TODO (May 11, 2009 11:28:21 PM):", "+\t\t// withBefores/withAfters/withBeforeClass/withAfterClass is a lot of", "+\t\t// duplication.", "-\t\treturn new RunAfters(statement, afters, target);", "+\t\treturn afters.isEmpty() ? statement :", "+\t\t\tnew RunAfters(statement, afters, target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4665520796c34386df44029501fd9900", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "a7c4d033c831765b5e651f2c7c4ce69c2b60ce4a", "commitAfterChange": "ec1a5c3ffcc4b9b0dda6e9a683ea51103f55853e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void expect(Matcher<?> matcher)", "signatureAfterChange": " \tpublic void expect(Matcher<?> matcher)", "diff": ["-\t\tfMatcher.andAlso(matcher);", "+\t\tfMatcherBuilder.add(matcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "466a6e13b862a11f9f78b709f9a009a5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/framework/TestSuite.java", "commitBeforeChange": "2745d016f648e783360bd076f23b36908f8125b0", "commitAfterChange": "b064a274adb12c6e866cb08dedc70534237330b2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static String exceptionToString(Throwable t)", "signatureAfterChange": "     private static String exceptionToString(Throwable e)", "diff": ["-    private static String exceptionToString(Throwable t) {", "+    private static String exceptionToString(Throwable e) {", "-        t.printStackTrace(writer);", "+        e.printStackTrace(writer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4673a0d2631286926de90b3b94ccc0e4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/SynchronizedRunListener.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public void testIgnored(Description description) throws Exception", "signatureAfterChange": "      @Override     public void testIgnored(Description description) throws Exception", "diff": ["-        synchronized (fMonitor) {", "-            fListener.testIgnored(description);", "+        synchronized (monitor) {", "+            listener.testIgnored(description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "468481197df8bd8e79169802e8bc61e2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "commitAfterChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tprotected JUnit4MethodRunner getMethodRunner(Method method)", "signatureAfterChange": " \t \tprotected Link anchor(TestMethod method)", "diff": ["-", "-\tprotected JUnit4MethodRunner getMethodRunner(Method method) {", "-\t\treturn new JUnit4MethodRunner(method, fTestClass);", "-\t}", "+\t", "+\tprotected Link anchor(TestMethod method) {", "+\t\treturn new InvokeMethod(method);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4694aa816d9e92ab7a5118018d19baa1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/RuleFieldValidator.java", "commitBeforeChange": "58609e42697cf1ced355527f23553fb3c336734c", "commitAfterChange": "eef732f8e686d719c109a1ca66aed0dc8bba8808", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void validate(TestClass target, List<Throwable> errors)", "signatureAfterChange": " \tpublic void validate(TestClass target, List<Throwable> errors)", "diff": ["-\t\tfor (FrameworkField eachField : fields)", "-\t\t\tvalidateField(eachField, errors);", "+\t\tfor (FrameworkField each : fields)", "+\t\t\tvalidateField(each, errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46a0de8733dd5d797a32f90f298b4492", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/junit3compatibility/JUnit38ClassRunnerTest.java", "commitBeforeChange": "3f2d6f8f974560f970bc0f021c13224122d9ab2d", "commitAfterChange": "73f85f59ea686adb8f05a294ffc114b9ec20f2ba", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     @Test(expected = NoTestsRemainException.class)      public void filter_noTestsRemain() throws NoTestsRemainException", "signatureAfterChange": "     @Test(expected = NoTestsRemainException.class)      public void filterNoTestsRemain() throws NoTestsRemainException", "diff": ["-    public void filter_noTestsRemain() throws NoTestsRemainException {", "+    public void filterNoTestsRemain() throws NoTestsRemainException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46a349684bc47fec80ecb1bc07de6f67", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/ParameterSignatureTest.java", "commitBeforeChange": "8d63a24ea7165fa941e82c3b042b6a38caddc9b1", "commitAfterChange": "f4df6d58cee244fa668195fc1cb3d187a4681282", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Test \tpublic void getAnnotations() throws SecurityException, \t\t\tNoSuchMethodException", "signatureAfterChange": "  \t@Test \tpublic void getAnnotations() throws SecurityException, \t\t\tNoSuchMethodException", "diff": ["-\t\t\t\thasItem(annotationOfClass(TestedOn.class)));", "-\t}", "+\t\t\t\thasItem(isA(TestedOn.class)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46a5a29190145a0319f92247c2e0d6b0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/TimeWatcherTest.java", "commitBeforeChange": "582d86c49eb8624b9db65e69ad0e404821505b3d", "commitAfterChange": "0a2601045f101930d0ca7f31c53b416fafbbe7a7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          private static void logInfo()", "signatureAfterChange": "          private static void logInfo()", "diff": ["-                    testName, status, TimeWatcher.micros(timeSpent)));", "+                    testName, status, TimeWatcher.toMicros(timeSpent)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46ad95cedc236bd026f493efc8a239af", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/listening/ResultTest.java", "commitBeforeChange": "d148bce8682505082a3cc634acbd36ac13a10c9a", "commitAfterChange": "497ebf11c284bcc2b32eecc4a063589b4f17d250", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t@Test public void failedAssumptionDoesntCountAsRun() throws Exception", "signatureAfterChange": " \t@Test public void failedAssumptionDoesntCountAsRun() throws Exception", "diff": ["-\t\tlistener.testAssumptionFailed(someTest, null);", "+\t\tlistener.testAssumptionInvalid(someTest, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46f40231cbc5382fef6ba4740575c0dd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "56b1d5d4342c13151ae2d4b3f9aca146732cfb42", "commitAfterChange": "0815c4d619b177431e64a2485baa0f746f3e2886", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate Statement withClassRules(Statement statement)", "signatureAfterChange": " \tprivate Statement withClassRules(Statement statement)", "diff": ["-\t\tfinal List<BisectionRule> classRules= classRules();", "+\t\tfinal List<TestRule> classRules= classRules();", "-\t\tfor (final BisectionRule classRule : classRules) {", "+\t\tfor (final TestRule classRule : classRules) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46f43633b01698ab2a6a83eaa66ef876", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "69a8dad63d43eb1071c5823f345f290edd5a3050", "commitAfterChange": "0807a8cd01b6d63d54f9a3580540fa35b7fb292e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprotected void pause(boolean wait)", "signatureAfterChange": "  \tprotected void pause(boolean wait)", "diff": ["-\t\t\twriter().println(\"<RETURN> to continue\");", "+\t\t\tgetWriter().println(\"<RETURN> to continue\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47573bdab1c6b4649cf5c817a975914d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "d6662fcc06ec7b07c696eb703c47d3731e4e11c7", "commitAfterChange": "85578d48f6459a05665329faa9b52a861e9142cb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \t@Test public void remember() throws CouldNotReadCoreException", "signatureAfterChange": " \t \t@Test public void remember() throws CouldNotReadCoreException", "diff": ["-\t\tDescription thing= reincarnation.sort(request).get(1);", "-\t\tassertEquals(Description.createTestDescription(TwoUnEqualTests.class, \"slow\"), thing);\t\t", "-\t}", "+\t\tDescription thing= reincarnation.sortedLeavesForTest(request).get(1);", "+\t\tassertEquals(Description.createTestDescription(TwoUnEqualTests.class, \"slow\"), thing);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "476cc278783bbf5ecad42bb01619a214", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/Parameterized.java", "commitBeforeChange": "07b834616b9c3ce07af47165c55fe64f93f165f4", "commitAfterChange": "0c5906ab0068de4852dc593ebe93356aeea639ca", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic Parameterized(Class<?> klass) throws Throwable", "signatureAfterChange": "  \tpublic Parameterized(Class<?> klass) throws Throwable", "diff": ["+\t\t", "+\t\t// TODO: (Nov 5, 2007 9:52:50 AM) Can I get rid of this?", "+", "+\t\t", "+\t\tfConstructor= getOnlyConstructor();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "479bac6e174e77febc4ea09f49d6adb9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestClass.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic List<TestMethod> getAnnotatedMethods( \t\t\tClass<? extends Annotation> annotationClass)", "signatureAfterChange": "  \tpublic List<FrameworkMethod> getAnnotatedMethods( \t\t\tClass<? extends Annotation> annotationClass)", "diff": ["-\tpublic List<TestMethod> getAnnotatedMethods(", "+\tpublic List<FrameworkMethod> getAnnotatedMethods(", "-\t\tList<TestMethod> results= new ArrayList<TestMethod>();", "+\t\tList<FrameworkMethod> results= new ArrayList<FrameworkMethod>();", "-\t\t\t\tTestMethod testMethod= new TestMethod(eachMethod, this);", "+\t\t\t\tFrameworkMethod testMethod= new FrameworkMethod(eachMethod);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47c0587aaaa0f2f5d8e346833e6482de", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java", "commitBeforeChange": "61994e0c0aa768b43fad1ac6e35b1e43ffc8b142", "commitAfterChange": "97654ff38f976733fa4c6ae9b28e3fe10328183f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void failuresNamedCorrectly()", "signatureAfterChange": "      @Test     public void failuresNamedCorrectly()", "diff": ["-", "-    @Test", "-    public void failuresNamedCorrectly() {", "-        Result result = JUnitCore.runClasses(FibonacciTest.class);", "-        assertEquals(", "-                \"test[1: fib(1)=1](\" + FibonacciTest.class.getName() + \")\",", "-                result.getFailures().get(0).getTestHeader());", "+", "+    @Test", "+    public void failuresNamedCorrectly() {", "+        Result result = JUnitCore.runClasses(ThreeFailures.class);", "+        assertEquals(", "+                \"testSomething[0: x=1](\" + ThreeFailures.class.getName() + \")\",", "+                result.getFailures().get(0).getTestHeader());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48bfcfb592ee918f634ab2b230b543f1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestClass.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Override \tpublic List<TestMethod> getAfters()", "signatureAfterChange": "  \t@Override \tpublic List<FrameworkMethod> getAfters()", "diff": ["-\tpublic List<TestMethod> getAfters() {", "+\tpublic List<FrameworkMethod> getAfters() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48ea3d85a0237bd05e28e3ef7e3cfc86", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/ArrayComparisonFailure.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void addDimension(int index)", "signatureAfterChange": "      public void addDimension(int index)", "diff": ["-        indices.add(0, index);", "+        fIndices.add(0, index);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48ea7cd9dffd7e10a28da6ec507d82c6", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/tests/SortableTest.java", "commitBeforeChange": "be2fbfe3e2fb20a1ab11e9759f000fe6c143e544", "commitAfterChange": "5cfc92d9ee355a316619563c6cb6e2834d130b01", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t\t\t \t\t\t@Override \t\t\tpublic Description getDescription()", "signatureAfterChange": " \t\t\t \t\t\t@Override \t\t\tpublic Description getDescription()", "diff": ["-\t\t\t\treturn null;", "+\t\t\t\treturn new EmptyDescription();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48f6299ffe57ac2fb49025c47d4bef9c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/parameterized/TestWithParameters.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-        return fTestClass.getName() + \" '\" + fName + \"' with parameters \"", "-                + fParameters;", "+        return testClass.getName() + \" '\" + name + \"' with parameters \"", "+                + parameters;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4920c63f2fcd4c9fa18c71e4aecd6b58", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java", "commitBeforeChange": "679e5dd3e4af3115492fabed45ea8c48bfa9d9bf", "commitAfterChange": "4081076e513e84bb2376f889d4108e64e9a18653", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tprotected JUnit4MethodRunner wrapMethod(Method method)", "signatureAfterChange": "  \t@Override \tprotected JUnit4MethodRunner wrapMethod(Method method)", "diff": ["-\t\treturn new StubbedTheoryMethod(method, getTestClass());", "+\t\treturn new StubbedTheoryMethodRunner(method, getTestClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49441e18bd3ca9ac697c800bbe8eae83", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/framework/Assert.java", "commitBeforeChange": "7ab8d5e4fc2a796e0e4f4fd337fa5d15d07b0993", "commitAfterChange": "a76e7c3915e821ed92e143f52e9a040123c986d3", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  \tstatic private void failNotEquals(String message, Object expected, Object actual)", "signatureAfterChange": "  \tstatic private void failNotEquals(String message, Object expected, Object actual)", "diff": ["-\t\tthrow new ComparisonFailure(message, expected.toString(), actual.toString());", "+\t    throw new ComparisonFailure(message, expected == null ? \"null\" : expected.toString(), actual == null ? \"null\" : actual.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49687d9f0630172c679927aa38f8813c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/experimental/categories/CategoryFilterFactoryTest.java", "commitBeforeChange": "4eecfb1eff9aa5304f6b30874a26734124ac902d", "commitAfterChange": "a75370887a71a09b3e5a12dec252513e80228e6b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r     @Test\r     public void shouldThrowException() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldThrowException() throws Exception", "diff": ["+                createSuiteDescription(testName.getMethodName()),\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "497dbdc86610979a36d57e4e4660b219", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/WithParameterSupplier.java", "commitBeforeChange": "0030e51f286ed52ad4c2c44857c4a28525c83f93", "commitAfterChange": "3375d1c3f489fc5d2b5c6629c55867bbfe2a033f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void shouldPickUpDataPointsFromParameterSupplier() throws Exception", "signatureAfterChange": "      @Test     public void shouldPickUpDataPointsFromParameterSupplier() throws Exception", "diff": ["-        List<PotentialAssignment> assignments = potentialValues(TestClassUsingParameterSupplier.class", "+        List<PotentialAssignment> assignments = potentialAssignments(TestClassUsingParameterSupplier.class"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4990c236b0135d3e6b2025382023933c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "a8629da96207e1ce71ead9ba9f85bc324f09bcab", "commitAfterChange": "28d398d01c7a294ca9db34b90e2b1e3c874a8bc0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic int getRunCount()", "signatureAfterChange": " \tpublic int getRunCount()", "diff": ["-\t\treturn fCount;", "+\t\treturn fCount.get();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49dcb8fc37badf10625076b4c0180b76", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "68e59d6de3c48be43bfe2d6104fdb6e8280b1232", "commitAfterChange": "334bd9ce923cf0293cbca49be4ae5947abf51897", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      public void sort(Sorter sorter)", "signatureAfterChange": "      public void sort(Sorter sorter)", "diff": ["-        synchronized (fLock) {", "+        synchronized (fChildrenLock) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49fa2daa52c3c9ab2b4568449fadd58f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java", "commitBeforeChange": "6eb76c8b08c738823546fe5b935b653951fc773e", "commitAfterChange": "474df716f498aa2695c422cceb3e46cad999e972", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \t@Test public void testsRunInParallel()", "signatureAfterChange": " \t \t@Test public void testsRunInParallel()", "diff": ["-\t@Test/*(timeout=1500)*/ public void testsRunInParallel() {", "+\t@Test public void testsRunInParallel() {", "-\t\tResult result= JUnitCore.runClasses(ParallelComputer.methods(), Example.class);", "+\t\tResult result= JUnitCore.runClasses(ParallelComputer.methods(),", "+\t\t\t\tExample.class);", "-\t\tassertThat(end - start, greaterThanOrEquals(1000));", "+\t\tassertThat(end - start, betweenInclusive(1000, 1500));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a18285f5c80f61909b7d146dba6d4ce", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java", "commitBeforeChange": "24cbcbc12fdd2afb7d52ff354e08213db8a62edd", "commitAfterChange": "7602636601a8e024f27157cdbabee6de7e269d80", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t\t@Test public void one()", "signatureAfterChange": " \t\t@Test public void one() throws InterruptedException", "diff": ["-\t\t@Test public void one() {", "+\t\t}", "+\t\t@Test public void one() throws InterruptedException {", "+\t\t\tfSynchronizer.countDown();", "+\t\t\tfSynchronizer.await();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a463c13fba43e9721d66abb4eb5c135", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "d3e86b059db787af5c0d58ddf3f69af5b42865b8", "commitAfterChange": "7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprotected Statement withBeforeClasses(Statement statement)", "signatureAfterChange": " \tprotected Statement withBeforeClasses(Statement statement)", "diff": ["-\t\tList<FrameworkMethod> befores= fTestClass", "+\t\tList<FrameworkMethod> befores= getTestClass()", "-\t\treturn befores.isEmpty() ? statement :", "-\t\t\tnew RunBefores(statement, befores, null);", "+\t\treturn befores.isEmpty() ? statement : new RunBefores(statement,", "+\t\t\t\tbefores, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a5f499ebc11f2b5b5935d6a05b647b2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/AssertionTest.java", "commitBeforeChange": "88f0fe3ced24506ddf9791f7a088163f4e7b1f20", "commitAfterChange": "3d7fee93ddc21a6e849c36d5ae58b37b3d189665", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \t@Test(expected=ArrayComparisonFailure.class) public void arraysElementsDiffer()", "signatureAfterChange": " \t \t@Test(expected=ArrayComparisonFailure.class) public void arraysElementsDiffer()", "diff": ["-\t\tassertEquals(\"not equal\", new Object[] {\"this is a very long string in the middle of an array\"} , new Object[] {\"this is another very long string in the middle of an array\"});", "+\t\tassertArrayEquals(\"not equal\", (new Object[] {\"this is a very long string in the middle of an array\"}), (new Object[] {\"this is another very long string in the middle of an array\"}));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b427018a9ff9f2e84d9ee9bea463e18", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/TextRunnerTest.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void testSuccess() throws Exception", "signatureAfterChange": "  \tpublic void testSuccess() throws Exception", "diff": ["-\t\texecTest(\"junit.tests.Success\", 0);", "+\t\texecTest(\"junit.tests.Success\", true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b537bad85d353840fa1d84dfc5c53a8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "f1f4fe290a3a35a9083d2e76e922b57350e05f34", "commitAfterChange": "c3873cf7b17abba564374522af2bdc02abcc509d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tprivate void findLeaves(Description parent, Description description, List<Description> results)", "signatureAfterChange": " \t \tprivate void findLeaves(Description parent, Plan plan, List<Description> results)", "diff": ["-\tprivate void findLeaves(Description parent, Description description, List<Description> results) {", "-\t\tif (description.getChildren().isEmpty())", "+\tprivate void findLeaves(Description parent, Plan plan, List<Description> results) {", "+\t\tDescription description = plan.getDescription();", "+\t\tif (plan.getChildren().isEmpty())", "-\t\t\tfor (Description each : description.getChildren())", "+\t\t\tfor (Plan each : plan.getChildren())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bca334975fb589a96dd3f2ce24002f7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void addChild(Description description)", "signatureAfterChange": "     public void addChild(Description description)", "diff": ["-        fChildren.add(description);", "+        children.add(description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c68f0614193e48bf1fb610eac672f69", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "b0b34427e9e644868f2b63d40d0556c35e818a63", "commitAfterChange": "dd9ee989f3f322c7c6793f95a73b28f3cc11c11e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void validateNoArgConstructor(List<Throwable> errors)", "signatureAfterChange": " \tprotected void validateConstructor(List<Throwable> errors)", "diff": ["-\tprotected void validateNoArgConstructor(List<Throwable> errors) {", "+\tprotected void validateConstructor(List<Throwable> errors) {", "-\t\tif (constructors.length != 1 || ", "-\t\t\t\tconstructors[0].getParameterTypes().length > 0) {", "+\t\tif (!(constructors.length == 1 && ", "+\t\t\t\tconstructors[0].getParameterTypes().length == 0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cbb470de9e25bf7714e0353a132fa27", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     protected Annotation[] getRunnerAnnotations()", "signatureAfterChange": "     protected Annotation[] getRunnerAnnotations()", "diff": ["-        return fTestClass.getAnnotations();", "+        return testClass.getAnnotations();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cfedef97fb7ef049e4090816d41d6d7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public int testCount()", "signatureAfterChange": "     public int testCount()", "diff": ["-        for (Description child : fChildren) {", "+        for (Description child : children) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d0895370103262bb09f603199ba4dd1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkField.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public Annotation[] getAnnotations()", "signatureAfterChange": "      public Annotation[] getAnnotations()", "diff": ["-        return fField.getAnnotations();", "+        return field.getAnnotations();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d1b4a5c0ddc41822da785230e27e7f6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "9a2e993c544a2cd1a0b93c9f59340910f51366b4", "commitAfterChange": "f3c211455b9e09be36e4bf7ccc499fbdd35a527a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \t@Test \tpublic void rememberOldRuns()", "signatureAfterChange": "  \t@Test \tpublic void rememberOldRuns()", "diff": ["-\t\t// TODO (Mar 9, 2009 10:40:03 PM): Direct access to fHistory", "-\t\tMaxCore reincarnation= MaxCore.forFolder(fMaxFile);", "+\t\tMaxCore reincarnation= MaxCore.storedLocally(fMaxFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4de2e56b3f4ab8a21c7ba197ff1801e3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/ErrorReportingRunner.java", "commitBeforeChange": "979e8abbe974e8847668f5887403da78a6165ebc", "commitAfterChange": "1fcd990f60518c941a44bae2596392021614a20b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic ErrorReportingRunner(Class<?> type, Throwable cause)", "signatureAfterChange": "  \tpublic ErrorReportingRunner(Class<?> type, Throwable cause)", "diff": ["-\t\tsuper(type);", "+\t\tsuper(type, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4df1beb409398381a58fee19c7aa1fc5", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/framework/Assert.java", "commitBeforeChange": "819de4cce0eac9adeb2b1797a1716addbde9a99a", "commitAfterChange": "395e144b73b2cad89fdab8f7cc9ce12b24f9ec3b", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  \tstatic private void failSame(String message, Object expected, Object actual)", "signatureAfterChange": "  \tstatic private void failSame(String message)", "diff": ["-\tstatic private void failSame(String message, Object expected, Object actual) {", "+\tstatic private void failSame(String message) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e0a43f93c24e66d75ebeff851997fcd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "d148bce8682505082a3cc634acbd36ac13a10c9a", "commitAfterChange": "497ebf11c284bcc2b32eecc4a063589b4f17d250", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t\t \t\t@Override \t\tpublic void testAssumptionFailed(Description description, \t\t\t\tAssumptionViolatedException e)", "signatureAfterChange": " \t\t \t\t@Override \t\tpublic void testAssumptionInvalid(Description description, \t\t\t\tAssumptionViolatedException e)", "diff": ["-\t\tpublic void testAssumptionFailed(Description description,", "+\t\tpublic void testAssumptionInvalid(Description description,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e285de9a25520ac9c886984be84093e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public List<FrameworkField> getAnnotatedFields(             Class<? extends Annotation> annotationClass)", "signatureAfterChange": "     public List<FrameworkField> getAnnotatedFields(             Class<? extends Annotation> annotationClass)", "diff": ["-        return Collections.unmodifiableList(getAnnotatedMembers(fFieldsForAnnotations, annotationClass, false));", "+        return Collections.unmodifiableList(getAnnotatedMembers(fieldsForAnnotations, annotationClass, false));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e46d7b6b34858762da3294c99d8e788", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/assertion/BothTest.java", "commitBeforeChange": "b1068dc55c95d1000e07b71d3a9d9a2fd26bfff9", "commitAfterChange": "d9cccce5034bb9876221d271914471b205220061", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \t@Test \tpublic void bothPasses()", "signatureAfterChange": "  \t@Test \tpublic void bothPasses()", "diff": ["-\t\tassertThat(3, both(is(Integer.class)).and(is(3)));", "+\t\tassertThat(3, both(isA(Integer.class)).and(is(3)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e66daf1dc2ab91bf991e42b8707455e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/requests/ClassRequest.java", "commitBeforeChange": "127f1bb2a137d611e98277a0d1e9184efc47bc05", "commitAfterChange": "ef7b30f2a31e02690c32abb1c412e097726cb8f5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public Runner getRunner()", "signatureAfterChange": "      @Override     public Runner getRunner()", "diff": ["-                    runner = new AllDefaultPossibilitiesBuilder(canUseSuiteMethod).safeRunnerForClass(testClass);", "+                    runner = new AllDefaultPossibilitiesBuilder(canUseSuiteMethod).safeRunnerForClass(fTestClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ec78d360dfea59828c93903835be76b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "beb1f4a80f7fa20523d40535fb81c1b8a7a9e638", "commitAfterChange": "83a25d440d118b7d10779a884d35f31045949e27", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public <T> List<T> getAnnotatedFieldValues(Object test,             Class<? extends Annotation> annotationClass, Class<T> valueClass)", "signatureAfterChange": "      public <T> List<T> getAnnotatedFieldValues(Object test,             Class<? extends Annotation> annotationClass, Class<T> valueClass)", "diff": ["-        List<T> results = new ArrayList<T>();", "+        List<T> results = new CopyOnWriteArrayList<T>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ed423a7c7e830b59d6aca8da98e8334", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "0215c66179ed2c04da2e53f67aefc97b6db5782a", "commitAfterChange": "56b5463c6adf89a03f489f3525a9a343bc43d960", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t\t@Override \t\tprotected void validateFields(List<Throwable> errors)", "signatureAfterChange": "  \t\t@Override \t\tprotected void validateFields(List<Throwable> errors)", "diff": ["-\t\t\t\tfor (FrameworkField f : annotatedFieldsByParameter) {", "-\t\t\t\t\tint index = f.getField().getAnnotation(Parameter.class).value();", "+\t\t\t\tfor (FrameworkField each : annotatedFieldsByParameter) {", "+\t\t\t\t\tint index = each.getField().getAnnotation(Parameter.class).value();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ef44fcff26c71af636d859bde8f2d55", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "          protected void runWithCompleteAssignment(final Assignments complete)                 throws Throwable", "signatureAfterChange": "          protected void runWithCompleteAssignment(final Assignments complete)                 throws Throwable", "diff": ["-            }.methodBlock(fTestMethod).evaluate();", "+            }.methodBlock(testMethod).evaluate();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f13566165858bc37ea97975233ca561", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/links/RunAfters.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic void evaluate() throws Throwable", "signatureAfterChange": "  \t@Override \tpublic void evaluate() throws Throwable", "diff": ["-\t\t\tList<TestMethod> afters= fElement.getAfters();", "-\t\t\tfor (TestMethod each : afters)", "+\t\t\tList<FrameworkMethod> afters= fElement.getAfters();", "+\t\t\tfor (FrameworkMethod each : afters)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f23ff1cda6dcd7e904505512ca818c3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/Failure.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Description getDescription()", "signatureAfterChange": "     public Description getDescription()", "diff": ["-        return description;", "+        return fDescription;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f242fd66373926bc28b3d0b0182132b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/assertion/BothTest.java", "commitBeforeChange": "fd925dc6b23c4fa68de2eab06dc162c4f06ff224", "commitAfterChange": "7dd6711cb9e552cee8091893d4085fdc3f9996b0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \t@Test public void subclassesAreOkInSecondPositionOnly()", "signatureAfterChange": " \t \t@Test public void subclassesAreOkInSecondPositionOnly()", "diff": ["-\t\tassertThat(3, both(is(Integer.class)).and(is(3)));", "+\t\tassertThat(3, both(is(Integer.class)).and(matches(is(3))));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f745c8a368f34e2197d846941a81c8b", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/runners/Parameterized.java", "commitBeforeChange": "478f7f9217cf5da219a7ba298e3a87f405378194", "commitAfterChange": "168fe0844e104a224a5899b02dfd3e0fb07a32e3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static Collection<Object[]> eachOne(Object... params)", "signatureAfterChange": "  \tpublic static Collection<Object[]> eachOne(Object... params)", "diff": ["-\t\tArrayList<Object[]> returnThis= new ArrayList<Object[]>();", "-\t\tfor (Object param : params) {", "-\t\t\treturnThis.add(new Object[] { param });", "-\t\t}", "-\t\treturn returnThis;", "+\t\tList<Object[]> results= new ArrayList<Object[]>();", "+\t\tfor (Object param : params)", "+\t\t\tresults.add(new Object[] { param });", "+\t\treturn results;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f7ed15d1c688094897822238aa53204", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "1350d0562466adbea1a9f8408084acdd005bfc13", "commitAfterChange": "bd8a96dbbfe93f134f75c768e5c1254cff8a9e9f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \t\tprivate void invokeWithActualParameters(Object target, Assignments complete) \t\t\t\tthrows Throwable", "signatureAfterChange": "  \t\tprivate void invokeWithActualParameters(Object target, Assignments complete) \t\t\t\tthrows Throwable", "diff": ["-\t\t\tfinal Object[] values= complete.getActualValues(nullsOk());", "+\t\t\tfinal Object[] values= complete.getActualValues(nullsOk(), target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f8255e283afff2164c6f6cb0e0618af", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/methods/TestMethodTest.java", "commitBeforeChange": "f49fb25b6fbffcc7a68b28824ed3856ffa9d6fdd", "commitAfterChange": "078e45bd31a9920e00633ad6ce658e22529304f2", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tprivate List<Throwable> validateAllMethods(Class<?> clazz)", "signatureAfterChange": "  \tprivate List<Throwable> validateAllMethods(Class<?> clazz)", "diff": ["-\t\t\tnew JUnit4ClassRunner(clazz);", "+\t\t\tnew BlockJUnit4ClassRunner(clazz);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f87da6828f259dc368a690fdcb8b6bc", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java", "commitBeforeChange": "3aca014a2c39723febbe7def2fd132da80c3f4a9", "commitAfterChange": "2c6c142aa801cef3520ca668e75a670a32b4859a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void canRunTheories() throws Exception", "signatureAfterChange": "      @Test     public void canRunTheories() throws Exception", "diff": ["-        assertThat(testResult(HasATheory.class),", "+        assertThat(testResult(HasAFailingTheory.class),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f8d27e76e8b069ebb7bdac08856820e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/runner/BaseTestRunner.java", "commitBeforeChange": "2745d016f648e783360bd076f23b36908f8125b0", "commitAfterChange": "b064a274adb12c6e866cb08dedc70534237330b2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public synchronized void addError(final Test test, final Throwable t)", "signatureAfterChange": "      public synchronized void addError(final Test test, final Throwable e)", "diff": ["-    public synchronized void addError(final Test test, final Throwable t) {", "-        testFailed(TestRunListener.STATUS_ERROR, test, t);", "+    public synchronized void addError(final Test test, final Throwable e) {", "+        testFailed(TestRunListener.STATUS_ERROR, test, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f9303f1fa71128de88219d0f8a3d1ac", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/TestMethod.java", "commitBeforeChange": "149ecd4dcd99697710aa350e9cd3b3bcac877125", "commitAfterChange": "787ed4e5bc2b68e8b5cdb6190ff1fc053f1a5b13", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprotected void invoke(Object target) throws IllegalAccessException, \t\t\tInvocationTargetException", "signatureAfterChange": "  \tprotected void invoke(Object target) throws IllegalAccessException, \t\t\tInvocationTargetException", "diff": ["-\t\tfMethod.invoke(target);", "+\t\tgetMethod().invoke(target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fa7d567eb5c3f60496d29ee00b2671e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "9423b224d0bafeeabe485e51a7f3080cfac0a368", "commitAfterChange": "a3e0b1c6cbd770405cb7fdd4291090afc8e49df7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic Object[] getActualValues(boolean nullsOk, int start, int stop) throws CouldNotGenerateValueException", "signatureAfterChange": "  \tpublic Object[] getActualValues(int start, int stop) throws CouldNotGenerateValueException", "diff": ["-\tpublic Object[] getActualValues(boolean nullsOk, int start, int stop) throws CouldNotGenerateValueException {", "+\tpublic Object[] getActualValues(int start, int stop) throws CouldNotGenerateValueException {", "-\t\t\tif (value == null && !nullsOk)", "+\t\t\tif (value == null && !fNullsOk)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "503223fac4d16f3ed9fa9ab9626a9399", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public String getDisplayName()", "signatureAfterChange": "     public String getDisplayName()", "diff": ["-        return displayName;", "+        return fDisplayName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "506f5f7ff0c4e69ef65c7aa6f7566bf1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/categories/CategoryTest.java", "commitBeforeChange": "fa9b88f335a338f65de8ded6f4b59d0123c3e6a2", "commitAfterChange": "de7f4fb2d4fedf3cfaba877b54d60ac3f3e5944a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 22, "signatureBeforeChange": "      @Test     public void ifNoTestsToRunUseErrorRunner()", "signatureAfterChange": "      @Test     public void ifNoTestsToRunUseErrorRunner()", "diff": ["+        assertFalse(result.wasSuccessful());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "509c200e60e9f157231f0aca2de6fb56", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java", "commitBeforeChange": "3aca014a2c39723febbe7def2fd132da80c3f4a9", "commitAfterChange": "2c6c142aa801cef3520ca668e75a670a32b4859a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void theoryAnnotationsAreRetained() throws Exception", "signatureAfterChange": "      @Test     public void theoryAnnotationsAreRetained() throws Exception", "diff": ["-        assertThat(new TestClass(HasATheory.class).getAnnotatedMethods(", "+        assertThat(new TestClass(HasAFailingTheory.class).getAnnotatedMethods("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5105b71258b6cf0d7fd11760f1c0351a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestElement.java", "commitBeforeChange": "a4c68872a91681139d404825c2bb04bd5ba804dd", "commitAfterChange": "f0ef837a40922ac08c608661385abf71732975d3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void runProtected(EachTestNotifier roadie, Runnable runnable, Object target)", "signatureAfterChange": "  \tpublic void runProtected(FailureListener roadie, Runnable runnable, Object target)", "diff": ["-\tpublic void runProtected(EachTestNotifier roadie, Runnable runnable, Object target) {", "+\tpublic void runProtected(FailureListener roadie, Runnable runnable, Object target) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5146409eac1749dfcdf31c9b15f00063", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/ComparisonFailure.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public String getExpected()", "signatureAfterChange": "     public String getExpected()", "diff": ["-        return expected;", "+        return fExpected;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51b0171b244c6571cb6b5b8ab498c00a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/SynchronizedRunListener.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void testFinished(Description description) throws Exception", "signatureAfterChange": "      @Override     public void testFinished(Description description) throws Exception", "diff": ["-        synchronized (fMonitor) {", "-            fListener.testFinished(description);", "+        synchronized (monitor) {", "+            listener.testFinished(description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51ea805cde3ac2e65b016cc6f862b864", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "commitAfterChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tprotected Link withAfters(TestMethod method, Object target, Link link)", "signatureAfterChange": "  \tprotected Statement withAfters(TestMethod method, Object target, Statement link)", "diff": ["-\tprotected Link withAfters(TestMethod method, Object target, Link link) {", "+\tprotected Statement withAfters(TestMethod method, Object target, Statement link) {", "-\t\treturn new WithAfters(link, method, target);", "+\t\treturn new RunAfters(link, method, target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "521401920f768d81a71ae4e362e1053b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TemporaryFolder.java", "commitBeforeChange": "fea0643ecd075f3c231c77774fe7e8494f696867", "commitAfterChange": "70fe94d031c7066899fc464cd4171db0884f1356", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic File newFile(String fileName) throws IOException", "signatureAfterChange": " \tpublic File newFile(String fileName) throws IOException", "diff": ["-\t\tFile file= new File(folder, fileName);", "+\t\tFile file= new File(getRoot(), fileName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52384328b8373d314268f9bb86239a31", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "f521f9003ac3629373e3dee5112b50e098db4a36", "commitAfterChange": "5cdd702717c5ca7dd3002e95847232681c445127", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "          private Collection<T> getFilteredChildrenWithoutIgnored(             final RunNotifier notifier)", "signatureAfterChange": "          private Collection<T> getFilteredChildrenWithoutIgnored(             final RunNotifier notifier)", "diff": ["-            if (isIgnoredMethod(child)) {", "+            if (isIgnored(child)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "529acf7bf89c2e7b80cdc05a491cae77", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/framework/AssertTest.java", "commitBeforeChange": "4e8768dd8ffe28efea98454338f79ee40d8d3ebe", "commitAfterChange": "a19a2d6c0c454c83d368a561252bf7f4b202f8ea", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t\t \tpublic void testAssertStringNotEqualsNull()", "signatureAfterChange": " \t\t \tpublic void testAssertNullNotEqualsString()", "diff": ["-\tpublic void testAssertStringNotEqualsNull() {", "+\tpublic void testAssertNullNotEqualsString() {", "+\t\t} catch (ComparisonFailure e) {", "+\t\t\treturn;", "+\t\t}", "+\t\tfail();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53525b67030af090b4ec14a439e19e1e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/NoGenericTypeParametersValidator.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      NoGenericTypeParametersValidator(Method method)", "signatureAfterChange": "      NoGenericTypeParametersValidator(Method method)", "diff": ["-        this.fMethod = method;", "+        this.method = method;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "536a57c8987883bf267ac6a2f956db69", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestElement.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void runBefores(Object target) throws Throwable", "signatureAfterChange": "  \tpublic void runBefores(Object target) throws Throwable", "diff": ["-\t\t\tList<TestMethod> befores= getBefores();", "-\t\t\tfor (TestMethod before : befores)", "+\t\t\tList<FrameworkMethod> befores= getBefores();", "+\t\t\tfor (FrameworkMethod before : befores)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "539b719c80d44fe37b6e62a638e7ca4d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedExceptionMatcherBuilder.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      void add(Matcher<?> matcher)", "signatureAfterChange": "      void add(Matcher<?> matcher)", "diff": ["-        fMatchers.add(matcher);", "+        matchers.add(matcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53c0bb42b520f39a50fa5510c65981e2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestElement.java", "commitBeforeChange": "a4c68872a91681139d404825c2bb04bd5ba804dd", "commitAfterChange": "f0ef837a40922ac08c608661385abf71732975d3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void runAfters(EachTestNotifier roadie, Object target)", "signatureAfterChange": "  \tpublic void runAfters(FailureListener roadie, Object target)", "diff": ["-\tpublic void runAfters(EachTestNotifier roadie, Object target) {", "+\tpublic void runAfters(FailureListener roadie, Object target) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53db737a81993da7278dfa5c2ca5693c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "74b11e0c206faf9ca78ec14c0c16ec44152d6268", "commitAfterChange": "f17e06715488e2814b6f9b3b4e329961ce224f07", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "         public Throwable call() throws Exception", "signatureAfterChange": "          public Throwable call() throws Exception", "diff": ["+", "+                startLatch.countDown();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53e7eae0c42ac86dbc1ec7d256c37038", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "223b34b516467bcd9cb7ebc7f49549f2e7362dca", "commitAfterChange": "5501ad5d546427b228b208da15cec997e0b13cc8", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic RememberingListener listener()", "signatureAfterChange": " \tpublic RunListener listener()", "diff": ["-\tpublic RememberingListener listener() {", "+\t */", "+\tpublic RunListener listener() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53efe83380d859fe4db5b0c7d744d608", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "a1813f62876a6c7227ec5c866b621e01cda79664", "commitAfterChange": "97afc5e205e1c6ac0f5a9aefabed92d58d88ab81", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  \tpublic void setRunnerInterceptor(RunnerInterceptor runnerInterceptor)", "signatureAfterChange": " \tpublic void setScheduler(RunnerScheduler scheduler)", "diff": ["-\tpublic void setRunnerInterceptor(RunnerInterceptor runnerInterceptor) {", "-\t\tthis.fRunnerInterceptor = runnerInterceptor;", "+\t */", "+\tpublic void setScheduler(RunnerScheduler scheduler) {", "+\t\tthis.fScheduler = scheduler;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "540e2e4f4d79d176352383c616d09e76", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "6bea82df32f687d636f1b843a1918a3a1ff22a6e", "commitAfterChange": "872faeab15115635b3260001979ae036e64e29bf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void expectCause(Matcher<? extends Throwable> expectedCause)", "signatureAfterChange": " \tpublic void expectCause(Matcher<? extends Throwable> expectedCause)", "diff": ["-\t\tfMatcher.andHasCause(expectedCause);", "+\t\tfMatcher.andAlsoHasCause(expectedCause);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5433cbe7bc35569c9fd147d167dadb08", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java", "commitBeforeChange": "496ee866a46f783d145b649a688df57cbf79490e", "commitAfterChange": "5f7fddf537e551109ffd6241a00c87a2b3521523", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Test \tpublic void theoryClassMethodsShowUp() throws Exception", "signatureAfterChange": "  \t@Test \tpublic void theoryClassMethodsShowUp() throws Exception", "diff": ["-\t\tassertThat(new Theories(HasATheory.class).getPlan().getChildren()", "-\t\t\t\t.size(), is(1));", "+\t\tassertThat(new Theories(HasATheory.class).getDescription()", "+\t\t\t\t.getChildren().size(), is(1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5472011698fb2ad626eae5f5334847a0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/WhenNoParametersMatch.java", "commitBeforeChange": "ef32d036d0ff96328f622942514ca73b5f69556d", "commitAfterChange": "6b182284c1a0452cf175852f2c808b08167c2f72", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t@Ignore  \t@Theory \tpublic void showFailedAssumptionsWhenNoParametersFound(int data, \t\t\tMatcher<Integer> matcher) throws Exception", "signatureAfterChange": "  \t@Theory \tpublic void showFailedAssumptionsWhenNoParametersFound(int data, \t\t\tMatcher<Integer> matcher) throws Exception", "diff": ["-\t// TODO: fix this test", "-\t@Ignore ", "-\t\tassertThat(result, containsString(\"invalid assumption:\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5481c8c78c8e13e8e607605b6dccae58", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/MultipleFailureException.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public String getMessage()", "signatureAfterChange": "      @Override     public String getMessage()", "diff": ["-                String.format(\"There were %d errors:\", errors.size()));", "-        for (Throwable e : errors) {", "+                String.format(\"There were %d errors:\", fErrors.size()));", "+        for (Throwable e : fErrors) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5483538b7caa026623fc3909cbbda074", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/categories/CategoryTest.java", "commitBeforeChange": "a8a05d5b490aff69efc6be29fa28a7b14674ab48", "commitAfterChange": "9eab1418bf073556414f8654a8b66d65d784ed71", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t@Test \tpublic void categoryFilterRejectsIncompatibleCategory() \t\t\tthrows InitializationError, NoTestsRemainException", "signatureAfterChange": "  \t@Test \tpublic void categoryFilterRejectsIncompatibleCategory() \t\t\tthrows InitializationError, NoTestsRemainException", "diff": ["-", "-\t\t\t\tAllFastTests.class);", "+\t\t\t\tOneFastOneSlow.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54b21c2059ab5eed68a81aadc4db0d38", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/ThrowableCauseMatcher.java", "commitBeforeChange": "533dbb7b97dc25529b96c512e638a778d9ee0530", "commitAfterChange": "56a63f1607fadd83df240b1676d8a053348d868f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     protected void describeMismatchSafely(T item, Description description)", "signatureAfterChange": "      @Override     protected void describeMismatchSafely(T item, Description description)", "diff": ["-        matcher.describeMismatch(item.getCause(), description);", "+        causeMatcher.describeMismatch(item.getCause(), description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54b53fdda446914f0b7a88754d89ee29", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/links/WithTimeout.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic void run(final Roadie context) throws Throwable", "signatureAfterChange": "  \t@Override \tpublic void run(final EachTestNotifier context) throws Throwable", "diff": ["-\tpublic void run(final Roadie context) throws Throwable {", "+\tpublic void run(final EachTestNotifier context) throws Throwable {", "-\t\t\t\t\t// TODO: (Oct 5, 2007 11:27:11 AM) Now what?", "+\t\t\t\t\t// TODO: (Oct 5, 2007 11:27:11 AM) Now what?  Is there a useful thing to do with this?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54c7e1872e5a3de808079fc3da0cbbb5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/AssertionTest.java", "commitBeforeChange": "88f0fe3ced24506ddf9791f7a088163f4e7b1f20", "commitAfterChange": "3d7fee93ddc21a6e849c36d5ae58b37b3d189665", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t@Test public void arraysDifferAtElement1nullMessage()", "signatureAfterChange": "  \t@Test public void arraysDifferAtElement1nullMessage()", "diff": ["-\t\t\tassertEquals(new Object[] { true, true }, new Object[] { true,", "-\t\t\t\t\tfalse });", "+\t\t\tassertArrayEquals((new Object[] { true, true }), (new Object[] { true,", "+\t\t\tfalse }));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54d6411f9f77a18f4732512dafa6a9ad", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "a4c68872a91681139d404825c2bb04bd5ba804dd", "commitAfterChange": "f0ef837a40922ac08c608661385abf71732975d3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t\tprotected void runWithAssignment(Assignments parameterAssignment, EachTestNotifier notifier) \t\t\t\tthrows Throwable", "signatureAfterChange": "  \t\tprotected void runWithAssignment(Assignments parameterAssignment, FailureListener listener) \t\t\t\tthrows Throwable", "diff": ["-\t\tprotected void runWithAssignment(Assignments parameterAssignment, EachTestNotifier notifier)", "+\t\tprotected void runWithAssignment(Assignments parameterAssignment, FailureListener listener)", "-\t\t\t\trunWithIncompleteAssignment(parameterAssignment, notifier);", "+\t\t\t\trunWithIncompleteAssignment(parameterAssignment, listener);", "-\t\t\t\trunWithCompleteAssignment(parameterAssignment, notifier);", "+\t\t\t\trunWithCompleteAssignment(parameterAssignment, listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54dc83defd1b5b3356a55df11b247883", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionRuleTest.java", "commitBeforeChange": "3b8708636ffc1a9fc970b66db73c09095dabc2e2", "commitAfterChange": "6b943e564adcc9a7106e54c24eb5d022bed1462f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          @Test         public void throwsIllegalArgumentExceptionWithCause()", "signatureAfterChange": "          @Test         public void throwsIllegalArgumentExceptionWithCause()", "diff": ["-            thrown.expectCause(expectedCause);", "+            thrown.expectCause(is(expectedCause));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "556516649d8197e0315bd222a7dee9b5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "ede492496de0f3c0872216ac9c9b88a00fdef09e", "commitAfterChange": "68b4e393388627201265eb3924f3628b1c27e6ff", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      private List<Runner> createRunnersForParameters(Iterable<Object[]> allParameters, String namePattern) throws Exception", "signatureAfterChange": "      private List<Runner> createRunnersForParameters(Iterable<Object[]> allParameters, String namePattern) throws Exception", "diff": ["-            List<Runner> runners = new ArrayList<Runner>();", "+            List<Runner> children = new ArrayList<Runner>();", "-                runners.add(createRunner(namePattern, i++, parametersOfSingleTest));", "+                children.add(createRunner(namePattern, i++, parametersOfSingleTest));", "-            return runners;", "+            return children;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5568e1a82dc4eef5edb8417b139395eb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/Timeout.java", "commitBeforeChange": "5da2d76bcf619ac0bd8c6ff5f6fc6b807978da8a", "commitAfterChange": "11039f25897fe4daba274292a49a078afa87991b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Deprecated     public Timeout(int millis)", "signatureAfterChange": "     @Deprecated     public Timeout(int millis)", "diff": ["-        this((long) millis);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "556cb9c73f8754a414d5e32fd2528b1b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "734ab5187c068599352e5fdc7374c1334d484fef", "commitAfterChange": "54917b88aab026dabb4541276ed875117c1e1faa", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate void validateInterceptorField(Field field, List<Throwable> errors)", "signatureAfterChange": "  \tprivate void validateInterceptorField(Field field, List<Throwable> errors)", "diff": ["-\t\tif (!StatementInterceptor.class.isAssignableFrom(field.getType()))", "+\t\tif (!MethodRule.class.isAssignableFrom(field.getType()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "558bb6f2e736964bf84405ede6373c18", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactories.java", "commitBeforeChange": "56193048f411846a58c0e0377a5f1ccfecd3d2f9", "commitAfterChange": "826529633261161edd2d9dc0f866b2c3c0420514", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r     public static Filter createFilterFromFilterSpec(Description description, String filterSpec)\r             throws FilterFactoryNotCreatedException", "signatureAfterChange": "\r     public static Filter createFilterFromFilterSpec(Description description, String filterSpec)\r             throws FilterNotCreatedException", "diff": ["-            throws FilterFactoryNotCreatedException {\r", "+            throws FilterNotCreatedException {\r", "-            return createFilter(tuple[0], new FilterFactoryParams(description, tuple[1]));\r", "+            return createFilter(tuple[0], new FilterFactoryParams(tuple[1]));\r", "-            return createFilter(filterSpec, new FilterFactoryParams(description));\r", "+            return createFilter(filterSpec, new FilterFactoryParams());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55a6125be3d958a4991836800ab535b4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      boolean isNewTest(Description key)", "signatureAfterChange": "      boolean isNewTest(Description key)", "diff": ["-        return !fDurations.containsKey(key.toString());", "+        return !durations.containsKey(key.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55c6a8a9839f221b79aaef0c7395bb3f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/running/core/CommandLineTest.java", "commitBeforeChange": "59b1e2926cdebfd257c6c091ee2bd478d8aa04d2", "commitAfterChange": "4e1018a940699a38673b1861977110e6b558afb1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Test public void runATest()", "signatureAfterChange": "  \t@Test public void runATest()", "diff": ["-\t\ttestWasRun= false;", "-\t\tnew JUnitCore().runMain(new String[]{\"org.junit.tests.running.core.CommandLineTest$Example\"});", "+\t\ttestWasRun= false; // todo create a TestSystem instead", "+\t\tnew JUnitCore().runMain(new RealSystem(), new String[]{\"org.junit.tests.running.core.CommandLineTest$Example\"});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55cbe3ed6915379fd6fcea46005f9ba5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/WithParameterSupplier.java", "commitBeforeChange": "0030e51f286ed52ad4c2c44857c4a28525c83f93", "commitAfterChange": "3375d1c3f489fc5d2b5c6629c55867bbfe2a033f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "          @Theory         public void theoryMethod(@ParametersSuppliedBy(Supplier.class)         String parameter)", "signatureAfterChange": "          @Theory         public void theoryMethod(@ParametersSuppliedBy(SimpleSupplier.class) String param)", "diff": ["-        public void theoryMethod(@ParametersSuppliedBy(Supplier.class)", "-        String parameter) {", "+        public void theoryMethod(@ParametersSuppliedBy(SimpleSupplier.class) String param) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55f13419c0a35008a734f3b85b963f9c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Suite.java", "commitBeforeChange": "6ff2381af213bf699e62244315debec66b373d81", "commitAfterChange": "67e3edf20613b1278f4be05353b31b5129e21882", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprotected Suite(SuiteBuilder builder, Class<?> klass, Class<?>[] suiteClasses) throws InitializationError", "signatureAfterChange": " \tprotected Suite(RunnerBuilder builder, Class<?> klass, Class<?>[] suiteClasses) throws InitializationError", "diff": ["-\tprotected Suite(SuiteBuilder builder, Class<?> klass, Class<?>[] suiteClasses) throws InitializationError {", "+\tprotected Suite(RunnerBuilder builder, Class<?> klass, Class<?>[] suiteClasses) throws InitializationError {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "562e40cc4363fd3f33e75cafdbbd1da2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "e07e59eb9d24f6e4fa85dd99f311c1feca6ea983", "commitAfterChange": "5d957024be0d1b181879d48b7915b3b8aad8f5d5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static Assignments allUnassigned(Method testMethod, \t\t\tTestClass testClass) throws Exception", "signatureAfterChange": "  \tpublic static Assignments allUnassigned(Method testMethod, \t\t\tTestClass testClass) throws Exception", "diff": ["-\t\tsignatures= ParameterSignature.signatures(testClass.getConstructor());", "+\t\tsignatures= ParameterSignature.signatures(testClass.getOnlyConstructor());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56538d9b804e7b4b116a802cad2c4098", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/InitializationError.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public List<Throwable> getCauses()", "signatureAfterChange": "     public List<Throwable> getCauses()", "diff": ["-        return fErrors;", "+        return errors;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56c84392286c9ecf1e334f36ebce657a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/TimeoutInterceptorTest.java", "commitBeforeChange": "6aa1fb428b0b6de82ca6288863ce7571b0563017", "commitAfterChange": "b94a710a62228a54b13309c634047ae3ce77d58e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\t \t\t@Test public void testInfiniteLoop()", "signatureAfterChange": " \t\t \t\t@Test public void testInfiniteLoop1()", "diff": ["-\t\t@Test public void testInfiniteLoop() {", "-\t\t\tlog+= \"ran\";", "+\t\t@Test public void testInfiniteLoop1() {", "+\t\t\tlog+= \"ran1\";", "+\t\t\tfor(;;) {}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56d1faa83689b7f92e1c9aecc3c861d8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public String getClassName()", "signatureAfterChange": "     public String getClassName()", "diff": ["-        return fTestClass != null ? fTestClass.getName() : methodAndClassNamePatternGroupOrDefault(2, toString());", "+        return testClass != null ? testClass.getName() : methodAndClassNamePatternGroupOrDefault(2, toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56e73b853121294537a32bca6c508ba7", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/TextRunnerTest.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic void testFailure() throws Exception", "signatureAfterChange": " \t \tpublic void testFailure() throws Exception", "diff": ["-\t\texecTest(\"junit.tests.Failure\", -1);", "+\t\texecTest(\"junit.tests.Failure\", false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57fb87b0ac40de57464638922de00313", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/manipulation/FilterableTest.java", "commitBeforeChange": "df48b66e73c740acb15f065eb7a4bad433930891", "commitAfterChange": "fab8f0da7e35f0436b80bf5cfe799882b2cb4db5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t@Test \tpublic void testFilterInRunnerConstructor()", "signatureAfterChange": "  \t@Test \tpublic void testFilterInRunnerConstructor()", "diff": ["+\t\tthrow new Error();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57fc1505f7b37f5bd3d7dd134946edd5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Override     public boolean equals(Object obj)", "signatureAfterChange": "      @Override     public boolean equals(Object obj)", "diff": ["-        return ((FrameworkMethod) obj).fMethod.equals(fMethod);", "+        return ((FrameworkMethod) obj).method.equals(method);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5832ae0decdbbf11eaaa29a8f9305cfe", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/CompositeRunner.java", "commitBeforeChange": "07b834616b9c3ce07af47165c55fe64f93f165f4", "commitAfterChange": "0c5906ab0068de4852dc593ebe93356aeea639ca", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic CompositeRunner(String name)", "signatureAfterChange": " \t \tpublic CompositeRunner(String name)", "diff": ["+\t\tsuper(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58432bb74a2f99540970079c4541d10f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "387e8518435df62b557a59001b18109af88fb0dc", "commitAfterChange": "82118e728701b7b0f81a2dd4a69b2290de056b28", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public Assignments assignNext(PotentialAssignment source)", "signatureAfterChange": "      public Assignments assignNext(PotentialAssignment source)", "diff": ["-        List<PotentialAssignment> assigned = new ArrayList<PotentialAssignment>(", "-                this.assigned);", "-        assigned.add(source);", "+        List<PotentialAssignment> potentialAssignments = new ArrayList<PotentialAssignment>(assigned);", "+        potentialAssignments.add(source);", "-        return new Assignments(assigned, unassigned.subList(1,", "+        return new Assignments(potentialAssignments, unassigned.subList(1,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "585315438a017b61137a5b1b492d7a95", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "a4c68872a91681139d404825c2bb04bd5ba804dd", "commitAfterChange": "f0ef837a40922ac08c608661385abf71732975d3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprotected Link chain(TestMethod method, Object test)", "signatureAfterChange": " \t \tprotected Link chain(TestMethod method, Object test, EachTestNotifier notifier)", "diff": ["-", "-\tprotected Link chain(TestMethod method, Object test) {", "+\tprotected Link chain(TestMethod method, Object test, EachTestNotifier notifier) {", "-\t\treturn notifying(method, link);", "+\t\treturn notifying(method, link, notifier);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "585c8d1f15e21490d0de28989e29295b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public int getRunCount()", "signatureAfterChange": "     public int getRunCount()", "diff": ["-        return fCount.get();", "+        return count.get();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58aa0fefb0f4ee234a17b3ef72ef9ceb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "6a8215ab69317916807f246daef80a9d4cf5dc8e", "commitAfterChange": "48aabe1b16bd288f74ac4ff92e3a38792533be39", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t@Override \tpublic List<PotentialAssignment> getValueSources(ParameterSignature sig)", "signatureAfterChange": "  \t@Override \tpublic List<PotentialAssignment> getValueSources(ParameterSignature sig)", "diff": ["-\t\tList<PotentialAssignment> list= new ArrayList<PotentialAssignment>();", "+\t\tList<PotentialAssignment> list = new ArrayList<PotentialAssignment>();", "-\t\taddMultiPointMethods(list);", "+\t\taddMultiPointMethods(sig, list);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58cf928e889baaa399b573973ffb87c9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/ArrayComparisonFailure.java", "commitBeforeChange": "1360f9b696f2fb1bc32b16b070ffb3363a88864f", "commitAfterChange": "3189af007b26d74ca459f823d57ef77b9c1697b8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public String getMessage()", "signatureAfterChange": "      @Override     public String getMessage()", "diff": ["-        sb.append(fCause.getMessage());", "+        sb.append(getCause().getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58dcd90ac473e2df13cc3ca80f35f6fb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public String getDisplayName()", "signatureAfterChange": "     public String getDisplayName()", "diff": ["-        return fDisplayName;", "+        return displayName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59143ef7126b1567766764b217f08e48", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedExceptionMatcher.java", "commitBeforeChange": "2d886e29734f9f55b75db91095880c5d109ff678", "commitAfterChange": "6bea82df32f687d636f1b843a1918a3a1ff22a6e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void describeTo(Description description)", "signatureAfterChange": "  \tpublic void describeTo(Description description)", "diff": ["-\t\tfCompositeMatcher.describeTo(description);", "+\t\tgetCompositeMatcher().describeTo(description);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "591a48414f8893859c15fe9a3cf70c2e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "01b427b3b89ce04d01f0ddbd746d13a175feec5b", "commitAfterChange": "5eee07b3e21f196b8cb937fb88eb8cf4be694f76", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 29, "signatureBeforeChange": "  \tprivate boolean shouldRun(T each)", "signatureAfterChange": "  \tprivate boolean shouldRun(Filter filter, T each)", "diff": ["-", "-\tprivate boolean shouldRun(T each) {", "-\t\treturn fFilter.shouldRun(describeChild(each));", "+\tprivate boolean shouldRun(Filter filter, T each) {", "+\t\treturn filter.shouldRun(describeChild(each));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5955652aa4042aa7803dee183db7a67f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/parameterized/TestWithParameters.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public List<Object> getParameters()", "signatureAfterChange": "      public List<Object> getParameters()", "diff": ["-        return fParameters;", "+        return parameters;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "595b5d1eb6c2b5e1a0c2c8761cb80639", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/RunnerBuilder.java", "commitBeforeChange": "5dd69355f371be15aee03875752f95e2b20e02c9", "commitAfterChange": "ad9972ba5d135d1c5673f0773cb7027f7823feb5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private List<Runner> runners(Class<?>[] children)", "signatureAfterChange": "      private List<Runner> runners(Class<?>[] children)", "diff": ["-        ArrayList<Runner> runners = new ArrayList<Runner>();", "+        List<Runner> runners = new ArrayList<Runner>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5999500b80aabf2f8d986b38929df227", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java", "commitBeforeChange": "9c5a2f28935a2d816ac14894d6c7cfb3c32a98f6", "commitAfterChange": "26c25f3dbf524f4efd90e97f41c6df10345e78a9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void throwExceptionIfTheSecondCallToEvaluateNeedsTooMuchTime()             throws Throwable", "signatureAfterChange": "      @Test     public void throwExceptionIfTheSecondCallToEvaluateNeedsTooMuchTime()             throws Throwable", "diff": ["-        thrown.expect(TestFailedOnTimeoutException.class);", "+        thrown.expect(TestTimedOutException.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59cd1acaaaa2351daa05a4def21c7301", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Request.java", "commitBeforeChange": "b77d9de8e3e2894fc6120c95a8e7766c38912d49", "commitAfterChange": "796e723caa0a1f75bb7b48b2454bea633fbf8e4e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic static Request classes(Computer computer, Class<?>... classes)", "signatureAfterChange": " \tpublic static Request classes(Computer computer, Class<?>... classes)", "diff": ["-\t\t\tSuite suite= computer.getSuite(builder, classes);", "+\t\t\tRunner suite= computer.getSuite(builder, classes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a5abfc11e715a457972eab2c920a2e1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/ParameterSignature.java", "commitBeforeChange": "2ade5fd3aad123d6507b59ed5d48c8f030314f00", "commitAfterChange": "cc8497f28e1d5a46d7940a0b36556154c83d6f7a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public boolean canAcceptType(Class<?> candidate)", "signatureAfterChange": "      public boolean canAcceptType(Class<?> candidate)", "diff": ["-        return type.isAssignableFrom(candidate);", "+        return type.isAssignableFrom(candidate) ||", "+                canAcceptBoxed(candidate) ||", "+                canAcceptUnboxed(candidate);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ab1d09b56daaff33a4f3b34b013e029", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/framework/TestCase.java", "commitBeforeChange": "04f4f3197084ad9ad7c050ce1a40d6f4421662f4", "commitAfterChange": "538187aac8c4858e9e366c4e4ee4e50cf40331c6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic TestCase(String name)", "signatureAfterChange": " \tTestCase()", "diff": ["+\t */", "+\tTestCase() {", "+\t\tfName= null;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ac20c0f5b145ec1c11ddd69ded694d1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/ParameterizedAssertionError.java", "commitBeforeChange": "eb8b5ee18ac02eb345ac54cc5bb15d4d3afc4fd4", "commitAfterChange": "2859b41ad921d7f525c8dff5a3a9a5a0eb8d68b9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public static String join(String delimiter,             Collection<Object> values)", "signatureAfterChange": "      public static String join(String delimiter, Collection<Object> values)", "diff": ["-    public static String join(String delimiter,", "-            Collection<Object> values) {", "-        StringBuffer buffer = new StringBuffer();", "+    public static String join(String delimiter, Collection<Object> values) {", "+        StringBuilder sb = new StringBuilder();", "-            buffer.append(stringValueOf(next));", "+            sb.append(stringValueOf(next));", "-                buffer.append(delimiter);", "+                sb.append(delimiter);", "-        return buffer.toString();", "+        return sb.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ad837dbdba5f1b5a988cdcfb93ea6ce", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestClass.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void validateMethods(Class<? extends Annotation> annotation, \t\t\tboolean isStatic, List<Throwable> errors)", "signatureAfterChange": "  \tpublic void validateMethods(Class<? extends Annotation> annotation, \t\t\tboolean isStatic, List<Throwable> errors)", "diff": ["-\t\tList<TestMethod> methods= getAnnotatedMethods(annotation);", "+\t\tList<FrameworkMethod> methods= getAnnotatedMethods(annotation);", "-\t\tfor (TestMethod eachTestMethod : methods) {", "+\t\tfor (FrameworkMethod eachTestMethod : methods) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ae0697659a2ec73e19c6417cda77f7a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/AssumptionTest.java", "commitBeforeChange": "37a611801fbea6ecc9b6356d9616e761c8b59b91", "commitAfterChange": "d9c908b9aab5f610e2f42aba1863ce25e36423f2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Test \tpublic void failedAssumptionsMeanIgnored()", "signatureAfterChange": "  \t@Test \tpublic void failedAssumptionsMeanIgnored()", "diff": ["-\t\tassertThat(result.getInvalidAssumptionCount(), is(1));", "+\t\tassertThat(result.getIgnoreCount(), is(1));", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b07391f8ab336ef1430ff0e579c6ae6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "734ab5187c068599352e5fdc7374c1334d484fef", "commitAfterChange": "54917b88aab026dabb4541276ed875117c1e1faa", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \tprivate StatementInterceptor createInterceptor(Object test, \t\t\tFrameworkField each)", "signatureAfterChange": "  \tprivate MethodRule createRule(Object test, \t\t\tFrameworkField each)", "diff": ["-\tprivate StatementInterceptor createInterceptor(Object test,", "+\tprivate MethodRule createRule(Object test,", "-\t\t\treturn (StatementInterceptor) each.get(test);", "+\t\t\treturn (MethodRule) each.get(test);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b6ceb556682cf2f29dbfc0226db770b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java", "commitBeforeChange": "785a33b478d358e79a3b6592754ad9ec051e4278", "commitAfterChange": "5d9e0022d3f6db1367d530579de6332b9c8802e3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t\t@Test \t\tpublic void banana()", "signatureAfterChange": "  \t\t@Test \t\tpublic voidBanana()", "diff": ["-\t\tpublic void banana() {", "+\t\tpublic void /* must hash-sort after \"apple\" */Banana() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b97ffb8824fb3f448535f5a6811b402", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assume.java", "commitBeforeChange": "2745d016f648e783360bd076f23b36908f8125b0", "commitAfterChange": "b064a274adb12c6e866cb08dedc70534237330b2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static void assumeNoException(Throwable t)", "signatureAfterChange": "     public static void assumeNoException(Throwable e)", "diff": ["-    public static void assumeNoException(Throwable t) {", "-        assumeThat(t, nullValue());", "+    public static void assumeNoException(Throwable e) {", "+        assumeThat(e, nullValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bb035bf95c20ab166ed07f06c9bef06", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactoryFactory.java", "commitBeforeChange": "0a9a389570a171b67c3155d312f2e90bdab5aaaf", "commitAfterChange": "318adee43493447e22bbea89e0f17260e0186a14", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Filter createFilter(Class<? extends FilterFactory> filterFactoryClass, FilterFactoryParams args)             throws FilterFactory.FilterNotCreatedException, FilterFactoryNotFoundException", "signatureAfterChange": "     public Filter createFilter(Class<? extends FilterFactory> filterFactoryClass, FilterFactoryParams args)             throws FilterFactory.FilterNotCreatedException, FilterFactoryNotCreatedException", "diff": ["+     */", "-            throws FilterFactory.FilterNotCreatedException, FilterFactoryNotFoundException {", "+            throws FilterFactory.FilterNotCreatedException, FilterFactoryNotCreatedException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c135d7c5b29977fd3a51401eb1b4356", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public void endTest(Test test)", "signatureAfterChange": "          public void endTest(Test test)", "diff": ["-            fNotifier.fireTestFinished(asDescription(test));", "+            notifier.fireTestFinished(asDescription(test));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c2ba06c2eb6c38f1782f740de17a8e7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "e07e59eb9d24f6e4fa85dd99f311c1feca6ea983", "commitAfterChange": "5d957024be0d1b181879d48b7915b3b8aad8f5d5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected List<FrameworkMethod> computeTestMethods()", "signatureAfterChange": " \tprotected List<FrameworkMethod> computeTestMethods()", "diff": ["-\t\treturn getTestClass().getTestMethods();", "+\t\treturn getTestClass().getAnnotatedMethods(Test.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cb99bd12d87f209d749cf1027b54195", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/assertion/BothTest.java", "commitBeforeChange": "505f7705d932002881b530829f4750e9438a963e", "commitAfterChange": "a5aa7cf7d61162947504060c9d3b6d4db6c073cf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \t@Test public void superclassesAreOkInSecondPositionOnly()", "signatureAfterChange": "  \t@Test \tpublic void superclassesAreOkInSecondPositionOnly()", "diff": ["-\t", "-\t@Test public void superclassesAreOkInSecondPositionOnly() {", "-\t\tassertThat(\"a\", both(containsString(\"a\")).and(matches(is(String.class))));", "+", "+\t@Test", "+\tpublic void superclassesAreOkInSecondPositionOnly() {", "+\t\tassertThat(\"a\", both(containsString(\"a\")).and(is(String.class)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cccdad1c2fc94e2e3cb3078bdce3e9a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TimeWatcher.java", "commitBeforeChange": "582d86c49eb8624b9db65e69ad0e404821505b3d", "commitAfterChange": "0a2601045f101930d0ca7f31c53b416fafbbe7a7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Override final protected void starting(Description description)", "signatureAfterChange": "      @Override final protected void starting(Description description)", "diff": ["-        startTime = System.nanoTime();", "+        startNanos = System.nanoTime();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cd754a59a1a349c8bcfee95fdc74259", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/links/ExpectingException.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \t@Override \tpublic void run(Roadie context)", "signatureAfterChange": " \t \t@Override \tpublic void run(EachTestNotifier context)", "diff": ["-\tpublic void run(Roadie context) {", "+\tpublic void run(EachTestNotifier context) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cf58379a64eee505f9cc386c4070090", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      void putTestDuration(Description description, long duration)", "signatureAfterChange": "      void putTestDuration(Description description, long duration)", "diff": ["-        durations.put(description.toString(), duration);", "+        fDurations.put(description.toString(), duration);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d25ae83d22ffa25da30adf733a69562", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "8e313a1e58a56694c0441b2fa60974fa8e1bfe31", "commitAfterChange": "409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate void validateInterceptorField(Field field, List<Throwable> errors)", "signatureAfterChange": "  \tprivate void validateInterceptorField(Field field, List<Throwable> errors)", "diff": ["-\t\tif (!StatementInterceptor.class.isAssignableFrom(field.getType()))", "+\t\tif (!MethodRule.class.isAssignableFrom(field.getType()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d4931c1a0129b5cc9bc86c509668c4f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "9a789a40295a91844e4e16afee93d5ff7218951a", "commitAfterChange": "979e8abbe974e8847668f5887403da78a6165ebc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic BlockJUnit4ClassRunner(Class<?> klass) throws InitializationError", "signatureAfterChange": " \tpublic BlockJUnit4ClassRunner(Class<?> klass) throws InitializationError", "diff": ["-\t\tsuper(new TestClass(klass));", "+\t\tsuper(klass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d4c6a85798ac62aacb91a446a8f67d7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "e727dd6b1cb2caa1699da3b2df7625c9554adc36", "commitAfterChange": "95bd62b2ffd80394d1a17e9078a4d79478423030", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tpublic void testRunFinished(Result result)", "signatureAfterChange": "  \t@Override \tpublic void testRunFinished(Result result)", "diff": ["+\t\tprintFailedAssumptions(result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d6da2870e37f8587ba0c09749431e14", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "1d982e5310d57fe0ea4b63e05f20215ee3add1fe", "commitAfterChange": "24a5aad1f49b4decf946f1df701e354a18544132", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprotected void runMethod(TestMethod method, RunNotifier notifier)", "signatureAfterChange": "  \tprotected void runChild(TestMethod method, RunNotifier notifier)", "diff": ["-", "-\tprotected void runMethod(TestMethod method, RunNotifier notifier) {", "-\t\tDescription description= methodDescription(method);", "-\t\tEachTestNotifier eachNotifier= new EachTestNotifier(notifier, description);", "-\t\tnotifying(method, chain(method)).run(eachNotifier);", "+\tprotected void runChild(TestMethod method, RunNotifier notifier) {", "+\t\tDescription description= describeChild(method);", "+\t\tEachTestNotifier eachNotifier= new EachTestNotifier(notifier,", "+\t\t\t\tdescription);", "+\t\tnotifying(method, childBlock(method)).run(eachNotifier);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d832e458b8e75a2c0d433c3a302a8e3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "d0f619bfbdf4595db3e30fa7a27d7a6fdd08723a", "commitAfterChange": "0dc3de7fbcf997ca8465ed9e7793a0b4f730121b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic static void assertArrayEquals(String message, double[] expecteds, \t\t\tdouble[] actuals, double delta) throws ArrayComparisonFailure", "signatureAfterChange": " \tpublic static void assertArrayEquals(String message, double[] expecteds, \t\t\tdouble[] actuals, double delta) throws ArrayComparisonFailure", "diff": ["-\t\tnew InexactComparisonCriteria(delta).internalArrayEquals(message, expecteds, actuals);", "+\t\tnew InexactComparisonCriteria(delta).arrayEquals(message, expecteds, actuals);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dc1f434dbf2d98a2a43e533d40579da", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/framework/TestSuite.java", "commitBeforeChange": "b6a023c447628100c104708666eddd0b2eaa41d3", "commitAfterChange": "86b71cb1b9784a9b87c86b4f3f12632ae6773d1f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic Test createTest(Class theClass, String name) throws IllegalArgumentException", "signatureAfterChange": "  \tstatic public Test createTest(Class theClass, String name)", "diff": ["-\tpublic Test createTest(Class theClass, String name) throws IllegalArgumentException {", "-\t\tConstructor c;", "+\tstatic public Test createTest(Class theClass, String name) {", "+\t\tConstructor constructor;", "-\t\t\tc= getConstructor(theClass);", "+\t\t\tconstructor= getTestConstructor(theClass);", "-\t\t\tif (c.getParameterTypes().length == 0) {", "-\t\t\t\ttest= c.newInstance(new Object[0]);", "+\t\t\tif (constructor.getParameterTypes().length == 0) {", "+\t\t\t\ttest= constructor.newInstance(new Object[0]);", "-\t\t\t\ttest= c.newInstance(new Object[]{name});", "+\t\t\t\ttest= constructor.newInstance(new Object[]{name});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ddd5c87bccaa429247055d946f883f0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java", "commitBeforeChange": "979e8abbe974e8847668f5887403da78a6165ebc", "commitAfterChange": "1fcd990f60518c941a44bae2596392021614a20b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic Statement childBlock(FrameworkMethod method)", "signatureAfterChange": "  \t@Override \tpublic Statement methodBlock(FrameworkMethod method)", "diff": ["-\tpublic Statement childBlock(FrameworkMethod method) {", "+\tpublic Statement methodBlock(FrameworkMethod method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5df4af161028bd7738410409e7fe16fb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TestWatcher.java", "commitBeforeChange": "751f75986b11336ac8310d73c89003b0b09ecb92", "commitAfterChange": "8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic Statement apply(final Statement base, final Description description)", "signatureAfterChange": " \t@Override \tprotected Statement apply(final Statement base, final Description description)", "diff": ["-public class TestWatcher implements TestRule {", "-\tpublic Statement apply(final Statement base, final Description description) {", "+public class TestWatcher extends TestRule {", "+\t@Override", "+\tprotected Statement apply(final Statement base, final Description description) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e59d3a11b0226e6b9c54cb106847fc5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "dfaf332b4df0d98293ac135e5abf9de6a2623b14", "commitAfterChange": "74941e1e1482016ffe705830cefb27cd376fb5ef", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "         void testTwo()", "signatureAfterChange": "         void subBowser()", "diff": ["-        void testTwo() {", "+        void subBowser() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e62c0c429a327da419e252d66f8232a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/ThrowableCauseMatcher.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public ThrowableCauseMatcher(Matcher<T> matcher)", "signatureAfterChange": "      public ThrowableCauseMatcher(Matcher<T> matcher)", "diff": ["-        fMatcher = matcher;", "+        this.matcher = matcher;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ecd48952f1b6f4016b2cf2be50d4a5e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t\tprotected void runWithCompleteAssignment(final Assignments complete) throws InstantiationException, \t\t\t\tIllegalAccessException, InvocationTargetException, \t\t\t\tNoSuchMethodException, Throwable", "signatureAfterChange": "  \t\tprotected void runWithCompleteAssignment(final Assignments complete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tInvocationTargetException, NoSuchMethodException, Throwable", "diff": ["-\t\tprotected void runWithCompleteAssignment(final Assignments complete) throws InstantiationException,", "-\t\t\t\tIllegalAccessException, InvocationTargetException,", "-\t\t\t\tNoSuchMethodException, Throwable {", "+\t\tprotected void runWithCompleteAssignment(final Assignments complete)", "+\t\t\t\tthrows InstantiationException, IllegalAccessException,", "+\t\t\t\tInvocationTargetException, NoSuchMethodException, Throwable {", "-\t\t\t\t\t", "+", "-\t\t\t\t\tpublic Statement childBlock(TestMethod method) {", "+\t\t\t\t\tpublic Statement childBlock(FrameworkMethod method) {", "-\t\t\t\t\t\t", "+", "-\t\t\t\t\t\t\t\t\t// TODO: (Oct 12, 2007 2:07:01 PM) DUP? even correct?", "+\t\t\t\t\t\t\t\t\t// TODO: (Oct 12, 2007 2:07:01 PM) DUP? even", "+\t\t\t\t\t\t\t\t\t// correct?", "-\t\t\t\t\t\t\t\t\t // TODO: (Oct 12, 2007 2:04:01 PM) nullsOk as argument to Assignments constructor", "+\t\t\t\t\t\t\t\t\t// TODO: (Oct 12, 2007 2:04:01 PM) nullsOk", "+\t\t\t\t\t\t\t\t\t// as argument to Assignments constructor", "-\t\t\t\t\t\t\t\t\t\treportParameterizedError(e, complete.getAllArguments(nullsOk()));", "-\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\treportParameterizedError(e, complete", "+\t\t\t\t\t\t\t\t\t\t\t.getAllArguments(nullsOk()));", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t", "+", "-\t\t\t\t\t", "+", "-\t\t\t\t\tprotected Statement invoke(TestMethod method, Object test) {", "+\t\t\t\t\tprotected Statement invoke(FrameworkMethod method, Object test) {", "-\t\t\t\t\t", "+", "-\t\t\t\t\tprotected Statement ignoreViolatedAssumptions(final Statement next) {", "+\t\t\t\t\tprotected Statement ignoreViolatedAssumptions(", "+\t\t\t\t\t\t\tfinal Statement next) {", "-\t\t\t\t\t\t", "+", "-\t\t\t\t\t\t\t\t\tnext.evaluate();\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\tnext.evaluate();", "-\t\t\t\t\t\t\t\t\t// TODO: (Oct 12, 2007 2:19:52 PM) This feels hacky", "+\t\t\t\t\t\t\t\t\t// TODO: (Oct 12, 2007 2:19:52 PM) This", "+\t\t\t\t\t\t\t\t\t// feels hacky", "-\t\t\t\t\t\t\t\t\t// TODO: (Oct 12, 2007 2:15:44 PM) Can I remove other calls?", "+\t\t\t\t\t\t\t\t\t// TODO: (Oct 12, 2007 2:15:44 PM) Can I", "+\t\t\t\t\t\t\t\t\t// remove other calls?", "-\t\t\t\t\t", "+", "-\t\t\t\t\t\t// TODO: (Oct 12, 2007 12:40:33 PM) honor assumption violations in JUnit4ClassRunner constructor invocations", "+\t\t\t\t\t\t// TODO: (Oct 12, 2007 12:40:33 PM) honor assumption", "+\t\t\t\t\t\t// violations in JUnit4ClassRunner constructor", "+\t\t\t\t\t\t// invocations", "-\t\t\t\t\t\treturn getTestClass().getJavaClass().getConstructors()[0].newInstance(complete.getConstructorArguments(nullsOk()));", "+\t\t\t\t\t\treturn getTestClass().getJavaClass().getConstructors()[0]", "+\t\t\t\t\t\t\t\t.newInstance(complete", "+\t\t\t\t\t\t\t\t\t\t.getConstructorArguments(nullsOk()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ecd62b006ee1d9e11f4b92d2a08c35c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "734ab5187c068599352e5fdc7374c1334d484fef", "commitAfterChange": "54917b88aab026dabb4541276ed875117c1e1faa", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprotected Statement methodBlock(FrameworkMethod method)", "signatureAfterChange": " \tprotected Statement methodBlock(FrameworkMethod method)", "diff": ["-\t\tstatement= withInterceptors(method, test, statement);", "+\t\tstatement= withRules(method, test, statement);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f1e0895b0b16b4c7b681dc2c335d827", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "43b0fe352d5bced0c341640d0c630d23f2022a7e", "commitAfterChange": "679e5dd3e4af3115492fabed45ea8c48bfa9d9bf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprotected void run(Roadie context)", "signatureAfterChange": " \t\tpublic abstract void run(Roadie context);", "diff": ["-\tprotected void run(Roadie context) {", "-\t\trunWithNotification(context);", "+\tpublic abstract class Link {", "+\t\tpublic abstract void run(Roadie context);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f218b050038929a6e0d1c6879200cd1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/ArrayComparisonFailure.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public String getMessage()", "signatureAfterChange": "      @Override     public String getMessage()", "diff": ["-        if (fMessage != null) {", "-            sb.append(fMessage);", "+        if (message != null) {", "+            sb.append(message);", "-        for (int each : fIndices) {", "+        for (int each : indices) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f21948f9d3a873336c23fb159ea9ce8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "36beacd221a4837af2a6d684b3a4fb79775a5231", "commitAfterChange": "b9ce87013e5389857956d785d14fc4f3fc2490c3", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \t\tprivate Statement methodCompletesWithParameters( \t\t\t\tfinal Assignments complete, final Object freshInstance)", "signatureAfterChange": "  \t\tprivate Statement methodCompletesWithParameters( \t\t\t\tfinal FrameworkMethod method, final Assignments complete, final Object freshInstance)", "diff": ["-\t\t\t\tfinal Assignments complete, final Object freshInstance) {", "+\t\t\t\tfinal FrameworkMethod method, final Assignments complete, final Object freshInstance) {", "-\t\t\t\t\t\tinvokeWithActualParameters(freshInstance, complete);", "+\t\t\t\t\t\t// TODO: (Dec 1, 2007 11:23:18 PM) pass-through", "+\t\t\t\t\t\tinvokeWithActualParameters(method, freshInstance, complete);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f46846a5b973b63e04d62770fea05da", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/RunNotifier.java", "commitBeforeChange": "5dd69355f371be15aee03875752f95e2b20e02c9", "commitAfterChange": "ad9972ba5d135d1c5673f0773cb7027f7823feb5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "          void run()", "signatureAfterChange": "          void run()", "diff": ["-            ArrayList<RunListener> safeListeners = new ArrayList<RunListener>(capacity);", "-            ArrayList<Failure> failures = new ArrayList<Failure>(capacity);", "+            List<RunListener> safeListeners = new ArrayList<RunListener>(capacity);", "+            List<Failure> failures = new ArrayList<Failure>(capacity);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f475617bd3b44f1a010403e66300d0f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Suite.java", "commitBeforeChange": "161229441b7365fa06f0d82e272e15f1f378b315", "commitAfterChange": "30a039854fd7f8cda135222054b247c158b91fa7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic Suite(RunnerBuilder builder, Class<?>[] classes) throws InitializationError", "signatureAfterChange": " \tpublic Suite(RunnerBuilder builder, Class<?>[] classes) throws InitializationError", "diff": ["-\t\tthis(null, builder.runners(classes));", "+\t\tthis(null, builder.runners(null, classes));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f920c4099c70ebbe52fdbf1593c0851", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/links/IgnoreViolatedAssumptions.java", "commitBeforeChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "commitAfterChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \t@Override \tpublic void run() throws Throwable", "signatureAfterChange": " \t \t@Override \tpublic void evaluate() throws Throwable", "diff": ["-\tpublic void run() throws Throwable {", "+\tpublic void evaluate() throws Throwable {", "-\t\t\tfNext.run();", "+\t\t\tfNext.evaluate();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fadab9514dbccaec115f11e8076add6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/AssertionTest.java", "commitBeforeChange": "88f0fe3ced24506ddf9791f7a088163f4e7b1f20", "commitAfterChange": "3d7fee93ddc21a6e849c36d5ae58b37b3d189665", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \t@Test public void multiDimensionalArraysAreNotEqual()", "signatureAfterChange": " \t \t@Test public void multiDimensionalArraysAreNotEqual()", "diff": ["-\t\t\tassertEquals(\"message\", new Object[][]{{true, true}, {false, false}}, new Object[][]{{true, true}, {true, false}});", "+\t\t\tassertArrayEquals(\"message\", (new Object[][]{{true, true}, {false, false}}), (new Object[][]{{true, true}, {true, false}}));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fb3262276e255f4b53d797b53e6d80f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/SynchronizedRunListener.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void testAssumptionFailure(Failure failure)", "signatureAfterChange": "      @Override     public void testAssumptionFailure(Failure failure)", "diff": ["-        synchronized (fMonitor) {", "-            fListener.testAssumptionFailure(failure);", "+        synchronized (monitor) {", "+            listener.testAssumptionFailure(failure);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fb5c4c125f7ed49fa5bce848eca499a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/Parameterized.java", "commitBeforeChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "commitAfterChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tprivate Method getParametersMethod() throws Exception", "signatureAfterChange": " \t \tprivate TestMethod getParametersMethod() throws Exception", "diff": ["-\tprivate Method getParametersMethod() throws Exception {", "-\t\tList<Method> methods= fTestClass.getAnnotatedMethods(Parameters.class);", "-\t\tfor (Method each : methods) {", "-\t\t\tint modifiers= each.getModifiers();", "+\tprivate TestMethod getParametersMethod() throws Exception {", "+\t\tList<TestMethod> methods= fTestClass.getAnnotatedMethods(Parameters.class);", "+\t\tfor (TestMethod each : methods) {", "+\t\t\tint modifiers= each.getMethod().getModifiers();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60313a9b4923ec038895d070f0b4241b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/builders/AnnotatedBuilder.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public Runner buildRunner(Class<? extends Runner> runnerClass,             Class<?> testClass) throws Exception", "signatureAfterChange": "      public Runner buildRunner(Class<? extends Runner> runnerClass,             Class<?> testClass) throws Exception", "diff": ["-                        RunnerBuilder.class).newInstance(testClass, fSuiteBuilder);", "+                        RunnerBuilder.class).newInstance(testClass, suiteBuilder);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "606271eb92e6dfe04b6a3527127d0673", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tprotected TheoryAnchor invoke(TestMethod method)", "signatureAfterChange": "  \t@Override \tprotected TheoryAnchor invoke(TestMethod method, Object test)", "diff": ["-\tprotected TheoryAnchor invoke(TestMethod method) {", "+\tprotected TheoryAnchor invoke(TestMethod method, Object test) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6095e6e89c33388205029b8b6baccaca", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/matchers/JUnitMatchers.java", "commitBeforeChange": "ee037247a9a03d8ac2e584d52a544b9733f2c016", "commitAfterChange": "40375ef1fc08b1f666b21d299d8b52b10a53e6fb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t@Deprecated \tpublic static <T> CombinableMatcher<T> both(Matcher<? super T> matcher)", "signatureAfterChange": " \t@Deprecated \tpublic static <T> CombinableBothMatcher<T> both(Matcher<? super T> matcher)", "diff": ["-\tpublic static <T> CombinableMatcher<T> both(Matcher<? super T> matcher) {", "+\tpublic static <T> CombinableBothMatcher<T> both(Matcher<? super T> matcher) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6099e33d42b2350ada8f610e650c3910", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "4081076e513e84bb2376f889d4108e64e9a18653", "commitAfterChange": "a58514aec7e843339be24980e92aeeb759327ffb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t\tpublic BeforeAndAfter(Link next)", "signatureAfterChange": " \t\t \t\tpublic BeforeAndAfter(Anchor next)", "diff": ["-", "-\t\tpublic BeforeAndAfter(Link next) {", "+\t\t", "+\t\tpublic BeforeAndAfter(Anchor next) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "609cf4fe68b8c50055fc84ca13436f0a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/FilterOptionIntegrationTest.java", "commitBeforeChange": "196c4ed79cbaca37709643b54913b361b677ae04", "commitAfterChange": "0a9a389570a171b67c3155d312f2e90bdab5aaaf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private Result runJUnit(final String... args)", "signatureAfterChange": "      private Result runJUnit(final String... args)", "diff": ["-        return jUnitCore.runMain(new RealSystem(), args);", "+        return jUnitCore.runMain(new TestSystem(), args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60a9e0539ca40cab1cd43c303b196831", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public final TestClass getTestClass()", "signatureAfterChange": "     public final TestClass getTestClass()", "diff": ["-        return fTestClass;", "+        return testClass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60f70ce844faedb12101bdc6d46b3ac0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/MethodSorters.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      private MethodSorters(Comparator<Method> comparator)", "signatureAfterChange": "      private MethodSorters(Comparator<Method> comparator)", "diff": ["-        this.fComparator = comparator;", "+        this.comparator = comparator;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6136d8cb66ea3c9cec021a5182ba9799", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "bbbb8571f1a3cdcb9af977867c7a16de3a1f5a76", "commitAfterChange": "d96a05f8d33ed781c701c58dd285bf6464112719", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public FailOnTimeout(Statement originalStatement, long millis)", "signatureAfterChange": "     @Deprecated     public FailOnTimeout(Statement statement, long timeoutMillis)", "diff": ["-    public FailOnTimeout(Statement originalStatement, long millis) {", "-        this(originalStatement, millis, TimeUnit.MILLISECONDS);", "+     */", "+    @Deprecated", "+    public FailOnTimeout(Statement statement, long timeoutMillis) {", "+        this(builder().withTimeout(timeoutMillis, TimeUnit.MILLISECONDS), statement);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6162dff698a1cc85bb7153614f951889", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic static void main(String args[])", "signatureAfterChange": " \t \tpublic static void main(String args[])", "diff": ["-\t\t\tSystem.out.println(e.getMessage());", "+\t\t\tSystem.err.println(e.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6166cb1b5df36f8d88ebf28ca2243587", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "commitAfterChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tprotected Link ignoreViolatedAssumptions(Link next)", "signatureAfterChange": " \t \tprotected Statement ignoreViolatedAssumptions(Statement next)", "diff": ["-\tprotected Link ignoreViolatedAssumptions(Link next) {", "+\tprotected Statement ignoreViolatedAssumptions(Statement next) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "618824305cf344487c164c8ab3f8782b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/categories/CategoriesMark2Test.java", "commitBeforeChange": "04189a834a01ae7ff3189bfa869e90d1a7f83acf", "commitAfterChange": "1bbab715de4c64943948ecc3739c8d5569378672", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \t@Test \tpublic void matchingRunnersOnCategories() throws InitializationError", "signatureAfterChange": "  \t@Test \tpublic void matchingRunnersOnCategories() throws InitializationError", "diff": ["-\t\tassertEquals(1, CategoryFilter2.include(Yes.class).matchingRunners(", "+\t\tassertEquals(1, CategoryFilter.include(Yes.class).matchingRunners("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6189e50751ff9ce62d0e2290cf0951d7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/methods/ParameterizedTestMethodTest.java", "commitBeforeChange": "f49fb25b6fbffcc7a68b28824ed3856ffa9d6fdd", "commitAfterChange": "078e45bd31a9920e00633ad6ce658e22529304f2", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \t \tprivate List<Throwable> validateAllMethods(Class<?> clazz)", "signatureAfterChange": " \t \tprivate List<Throwable> validateAllMethods(Class<?> clazz)", "diff": ["-\t\t\tnew JUnit4ClassRunner(clazz);", "+\t\t\tnew BlockJUnit4ClassRunner(clazz);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "619b2e2c742f81d60ff051002dec6061", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-        return fMethod.toString();", "+        return method.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61b7aaa8abcce1fbcf45d636860ea8b3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \t@Override \tprotected List<TestMethod> getChildren()", "signatureAfterChange": "  \t@Override \tprotected List<FrameworkMethod> getChildren()", "diff": ["-\tprotected List<TestMethod> getChildren() {", "+\tprotected List<FrameworkMethod> getChildren() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61f6f6cca40035450178a346f1409b87", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/builders/AnnotatedBuilder.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public AnnotatedBuilder(RunnerBuilder suiteBuilder)", "signatureAfterChange": "      public AnnotatedBuilder(RunnerBuilder suiteBuilder)", "diff": ["-        fSuiteBuilder = suiteBuilder;", "+        this.suiteBuilder = suiteBuilder;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6201a28765eba733f8526c9a646609bc", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/awtui/TestRunner.java", "commitBeforeChange": "04f4f3197084ad9ad7c050ce1a40d6f4421662f4", "commitAfterChange": "538187aac8c4858e9e366c4e4ee4e50cf40331c6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tprotected Frame createUI(String suiteName)", "signatureAfterChange": " \t \tprotected Frame createUI(String suiteName)", "diff": ["-\t\t", "+\t\tif (inVAJava())", "+\t\t\tfUseLoadingRunner.setVisible(false);", "+\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "624e448e5eed6aa5d5edccbd9c90478d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java", "commitBeforeChange": "e48f6d40bf755dba2da4c29a4b7e763637b61738", "commitAfterChange": "623bd92d37786cdc869b219569740f96869f5b9d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\t@Test public void one()", "signatureAfterChange": " \t\t@Test public void one() throws InterruptedException", "diff": ["-\t\t@Test public void one() {", "+\t\t@Test public void one() throws InterruptedException {", "+\t\t\tfSynchronizer.countDown();", "+\t\t\tfSynchronizer.await();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "626754c64b084d83172f7a73a8ccedb7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "37a611801fbea6ecc9b6356d9616e761c8b59b91", "commitAfterChange": "d9c908b9aab5f610e2f42aba1863ce25e36423f2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t\t@Override \t\tpublic void testFinished(Description description) throws Exception", "signatureAfterChange": "  \t\t@Override \t\tpublic void testFinished(Description description) throws Exception", "diff": ["-\t\t\tif (!fAssumptionFailed)", "+\t\t\tif (!fIgnoredDuringExecution)", "-\t\t\tfAssumptionFailed = false;", "+\t\t\tfIgnoredDuringExecution= false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6292972aaee74177ddacc75a3e122e04", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "0d6cd750d53486f01f12ddfee8657d94b5940574", "commitAfterChange": "a7c07de664a4562c3ff171102729f06a5f572d9b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprotected void printFailureHeader(Failure failure, int count)", "signatureAfterChange": "  \tprotected void printFailure(Failure failure, String prefix)", "diff": ["-", "-\tprotected void printFailureHeader(Failure failure, int count) {", "-\t\t// TODO: (Dec 7, 2007 10:22:47 AM) indicate if this is an ignorance, somehow", "-", "-\t\tgetWriter().println(count + \") \" + failure.getTestHeader());", "-\t}", "+\tprotected void printFailure(Failure failure, String prefix) {", "+\t\tgetWriter().println(prefix + \") \" + failure.getTestHeader());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62de462d811fe97704cda5757302d0f9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "68e59d6de3c48be43bfe2d6104fdb6e8280b1232", "commitAfterChange": "334bd9ce923cf0293cbca49be4ae5947abf51897", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public Parameterized(Class<?> klass) throws Throwable", "signatureAfterChange": "     public Parameterized(Class<?> klass) throws Throwable", "diff": ["-        runners = Collections.unmodifiableList(createRunnersForParameters(allParameters(), parameters.name()));", "+        fRunners = Collections.unmodifiableList(createRunnersForParameters(allParameters(), parameters.name()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62e0387db995683538c5355bb1391c4d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "a8629da96207e1ce71ead9ba9f85bc324f09bcab", "commitAfterChange": "28d398d01c7a294ca9db34b90e2b1e3c874a8bc0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic int getIgnoreCount()", "signatureAfterChange": " \tpublic int getIgnoreCount()", "diff": ["-\t\treturn fIgnoreCount;", "+\t\treturn fIgnoreCount.get();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6324c845fe015d35e45b88d4d2c2a330", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/interceptor/Verifier.java", "commitBeforeChange": "8e313a1e58a56694c0441b2fa60974fa8e1bfe31", "commitAfterChange": "409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic Statement intercept(final Statement base, FrameworkMethod method, Object target)", "signatureAfterChange": " \tpublic Statement apply(final Statement base, FrameworkMethod method, \t\t\tObject target)", "diff": ["-public class Verifier implements StatementInterceptor {", "-\tpublic Statement intercept(final Statement base, FrameworkMethod method, Object target) {", "+public class Verifier implements MethodRule {", "+\tpublic Statement apply(final Statement base, FrameworkMethod method,", "+\t\t\tObject target) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "634eeab6befaaa806e392d7ec4e4de1b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/AssumptionViolatedExceptionTest.java", "commitBeforeChange": "5408162765635af9b42a47ea865b06865284a2ab", "commitAfterChange": "daa46e409f29cd21f9b3a9036fd858c3c21e564f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void AssumptionViolatedExceptionDescribesItself()", "signatureAfterChange": "      @Test     public void assumptionViolatedExceptionWithMatcherDescribesItself()", "diff": ["-    public void AssumptionViolatedExceptionDescribesItself() {", "+    public void assumptionViolatedExceptionWithMatcherDescribesItself() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6375d10b2ced5e6a1ab7b25ad5f83903", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "4081076e513e84bb2376f889d4108e64e9a18653", "commitAfterChange": "a58514aec7e843339be24980e92aeeb759327ffb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t\tpublic Notifier(Link next)", "signatureAfterChange": "  \t\tpublic Notifier(Link link)", "diff": ["-\t\tpublic Notifier(Link next) {", "-\t\t\tfNext= next;", "+\t\tpublic Notifier(Link link) {", "+\t\t\tfNext= link;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63ea1fc1fb037fea9ce4bda94b689be1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/validation/classes/HasAfterClassButTestIsIgnored.java", "commitBeforeChange": "fd1ef3ca8069bd149ca63c9660587918aa28c7cd", "commitAfterChange": "7566c1da93069c00c961e37979db44ce6aa00830", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @AfterClass     public static void setUpClass()", "signatureAfterChange": "      @AfterClass     public static void afterClass()", "diff": ["-    public static void setUpClass() {", "-        fail(ClassLevelMethodsOnlyRunWhenNecessaryTest.OUR_FAILURE_MSG);", "+    public static void afterClass() {", "+        fail(OUR_FAILURE_MSG);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63eae104cbdd84b9d77d4b2df9dd74fa", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void evaluate() throws Throwable", "signatureAfterChange": "      @Override     public void evaluate() throws Throwable", "diff": ["-        fThreadGroup = new ThreadGroup(\"FailOnTimeoutGroup\");", "-        Thread thread = new Thread(fThreadGroup, task, \"Time-limited test\");", "+        threadGroup = new ThreadGroup(\"FailOnTimeoutGroup\");", "+        Thread thread = new Thread(threadGroup, task, \"Time-limited test\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63f364859b90ba582b43fc62c39b9ec8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "beb1f4a80f7fa20523d40535fb81c1b8a7a9e638", "commitAfterChange": "83a25d440d118b7d10779a884d35f31045949e27", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "      private Comparator<? super T> comparator()", "signatureAfterChange": "      private Comparator<? super T> comparator(final Sorter sorter)", "diff": ["-    private Comparator<? super T> comparator() {", "+    private Comparator<? super T> comparator(final Sorter sorter) {", "-                return fSorter.compare(describeChild(o1), describeChild(o2));", "+                return sorter.compare(describeChild(o1), describeChild(o2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63f7461a8ba0b46b0e8b1acf50d975ea", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMember.java", "commitBeforeChange": "52e93b4fe3c4133118f33635ea8517a13ff05321", "commitAfterChange": "fbb1efed56f2b495d68a598d5345cbc95b118d35", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public abstract boolean isStatic();", "signatureAfterChange": "     public boolean isStatic()", "diff": ["-    public abstract boolean isStatic();", "+     */", "+    public boolean isStatic() {", "+        return Modifier.isStatic(getModifiers());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63f7e1122710b9e2b9a9aaa222f39f21", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/builders/AllDefaultPossibilitiesBuilder.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public AllDefaultPossibilitiesBuilder(boolean canUseSuiteMethod)", "signatureAfterChange": "      public AllDefaultPossibilitiesBuilder(boolean canUseSuiteMethod)", "diff": ["-        fCanUseSuiteMethod = canUseSuiteMethod;", "+        this.canUseSuiteMethod = canUseSuiteMethod;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63f89f6b642ab43f5767a8f59ba0d24a", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/framework/AssertTest.java", "commitBeforeChange": "c62a58a526b01761c0b905961b87d1a762fc1df9", "commitAfterChange": "8c1784e4b026417ed381ac5f0a7e2dda9084d7b0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tpublic void testAssertNullNotEqualsNull()", "signatureAfterChange": "  \tpublic void testAssertNullNotEqualsNull()", "diff": ["-\t", "+", "- \t\ttry {", "+\t\ttry {", "+\t\t\te.getMessage();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "640f406027f197d914a0b7d4b125f83f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "beb1f4a80f7fa20523d40535fb81c1b8a7a9e638", "commitAfterChange": "83a25d440d118b7d10779a884d35f31045949e27", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "      private List<T> getFilteredChildren()", "signatureAfterChange": "      private Collection<T> getFilteredChildren()", "diff": ["-    private List<T> getFilteredChildren() {", "+    private Collection<T> getFilteredChildren() {", "-            fFilteredChildren = new ArrayList<T>(getChildren());", "+            fFilteredChildren = new ConcurrentLinkedQueue<T>(getChildren());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "646253084954a226585795d6fed28025", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     public void ignoreDataPointMethodsWithWrongTypes() throws Exception", "signatureAfterChange": "      @Test     public void ignoreDataPointMethodsWithWrongTypes() throws Throwable", "diff": ["-    public void ignoreDataPointMethodsWithWrongTypes() throws Exception {", "+    public void ignoreDataPointMethodsWithWrongTypes() throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6477efeeae5ea593a549be281ef80799", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "dfaf332b4df0d98293ac135e5abf9de6a2623b14", "commitAfterChange": "74941e1e1482016ffe705830cefb27cd376fb5ef", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void getMethodsNullSorterSubset()", "signatureAfterChange": "      @Test     public void getMethodsNullSorterSelf()", "diff": ["-    public void getMethodsNullSorterSubset() {", "+    public void getMethodsNullSorterSelf() {", "+        assertEquals(expected, actual);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "651f3123c26b7c49f57f9e9d4dbb613e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "979e8abbe974e8847668f5887403da78a6165ebc", "commitAfterChange": "1fcd990f60518c941a44bae2596392021614a20b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprotected Statement invoke(FrameworkMethod method, Object test)", "signatureAfterChange": " \tprotected Statement methodInvoker(FrameworkMethod method, Object test)", "diff": ["-\tprotected Statement invoke(FrameworkMethod method, Object test) {", "+\tprotected Statement methodInvoker(FrameworkMethod method, Object test) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6523d0c8b1d29ebad9a65be1243cf341", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public List<FrameworkMethod> getAnnotatedMethods()", "signatureAfterChange": "     public List<FrameworkMethod> getAnnotatedMethods()", "diff": ["-        List<FrameworkMethod> methods = collectValues(fMethodsForAnnotations);", "+        List<FrameworkMethod> methods = collectValues(methodsForAnnotations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65266f75fea87453610479d2ffd325c6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java", "commitBeforeChange": "61994e0c0aa768b43fad1ac6e35b1e43ffc8b142", "commitAfterChange": "97654ff38f976733fa4c6ae9b28e3fe10328183f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void countBeforeRun() throws Exception", "signatureAfterChange": "      @Test     public void countBeforeRun() throws Exception", "diff": ["-        Runner runner = Request.aClass(FibonacciTest.class).getRunner();", "-        assertEquals(7, runner.testCount());", "+        Runner runner = Request.aClass(AdditionTest.class).getRunner();", "+        assertEquals(4, runner.testCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "652e77d5846c1a4fce2ce5ba98947dfc", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/framework/JUnit4TestAdapterCache.java", "commitBeforeChange": "870289f3272917f312de6902b8b6bdc43552d4b7", "commitAfterChange": "6589127231db19458b696785bab3b839f9bde90f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tTest createTest(Description description)", "signatureAfterChange": "  \tTest createTestSuite(Plan plan)", "diff": ["-\tTest createTest(Description description) {", "+", "+\tTest createTestSuite(Plan plan) {", "+\t\t// TODO: shouldn't have to test for suite", "+\t\tDescription description= plan.getDescription();", "-\t\t\tfor (Description child : description.getChildren())", "+\t\t\tfor (Plan child : plan.getChildren())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "653b40e2d4c202049a7823b90d8489e7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "          protected Collection<FrameworkMethod> getSingleDataPointMethods(ParameterSignature sig)", "signatureAfterChange": "          protected Collection<FrameworkMethod> getSingleDataPointMethods(ParameterSignature sig)", "diff": ["-        return fClass.getAnnotatedMethods(DataPoint.class);", "+        return clazz.getAnnotatedMethods(DataPoint.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6545fd8c7bd17f4eda62333b7db73a0d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/interceptor/ExternalResource.java", "commitBeforeChange": "8e313a1e58a56694c0441b2fa60974fa8e1bfe31", "commitAfterChange": "409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic final Statement intercept(final Statement base, \t\t\tFrameworkMethod method, Object target)", "signatureAfterChange": " \tpublic final Statement apply(final Statement base, \t\t\tFrameworkMethod method, Object target)", "diff": ["-public abstract class ExternalResource implements StatementInterceptor {", "-\tpublic final Statement intercept(final Statement base,", "+public abstract class ExternalResource implements MethodRule {", "+\tpublic final Statement apply(final Statement base,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "654f2cd7b2d30e7f29800e4e66e19d88", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/CategoryValidator.java", "commitBeforeChange": "fe5d86eba71a1f59dbbed09de4add01cc20420c0", "commitAfterChange": "d9054149988487750679e35a349df7e0e2df5870", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Override     public List<Exception> validateAnnotatedMethod(Method method)", "signatureAfterChange": "     @Override     public List<Exception> validateAnnotatedMethod(FrameworkMethod method)", "diff": ["-    public List<Exception> validateAnnotatedMethod(Method method) {", "+    public List<Exception> validateAnnotatedMethod(FrameworkMethod method) {", "-        Annotation[] declaredAnnotations = method.getDeclaredAnnotations();", "-        for (Annotation annotation : declaredAnnotations) {", "+        Annotation[] annotations = method.getAnnotations();", "+        for (Annotation annotation : annotations) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6583c7d53f89392ba78feaa5a835b717", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/EventCollector.java", "commitBeforeChange": "df70c1087de9d3827656ede187371bbe29d2a974", "commitAfterChange": "a538d25ae50887dc9395f2f59ad5040752c0ec4f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \t@Override \tpublic void testRunFinished(Result result) throws Exception", "signatureAfterChange": "  \t@Override \tpublic void testRunFinished(Result result) throws Exception", "diff": ["-", "-\t@Override", "-\tpublic void testRunFinished(Result result) throws Exception {", "-\t\ttestRunsFinished.add(result);", "-\t}", "+", "+\t@Override", "+\tpublic void testRunFinished(Result result) throws Exception {", "+\t\tfTestRunsFinished.add(result);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65b275bda9ed89d09aea50a38ccd8b6f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/results/ResultMatchers.java", "commitBeforeChange": "052fc095d5b4a8af643d0e4402a504716ad8eb03", "commitAfterChange": "231241782c199d39943f742d0abe57057b0b785c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic static Matcher<Result> failureIs(final Matcher<? super Throwable> failureMatcher)", "signatureAfterChange": " \tpublic static Matcher<PrintableResult> failureIs(final Matcher<? super Throwable> exceptionMatcher)", "diff": ["-\tpublic static Matcher<Result> failureIs(final Matcher<? super Throwable> failureMatcher) {", "-\t\treturn new TypeSafeMatcher<Result>() {", "+\tpublic static Matcher<PrintableResult> failureIs(final Matcher<? super Throwable> exceptionMatcher) {", "+\t\treturn new TypeSafeMatcher<PrintableResult>() {", "-\t\t\t\tfailureMatcher.describeTo(description);", "+\t\t\t\texceptionMatcher.describeTo(description);", "-\t\t\tpublic boolean matchesSafely(Result item) {", "+\t\t\tpublic boolean matchesSafely(PrintableResult item) {", "-\t\t\t\t\treturn failureMatcher.matches(f.getException());", "+\t\t\t\t\treturn exceptionMatcher.matches(f.getException());", "-\t\t\t}", "-\t\t};", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65ce0d9591e20dd271baf1d7873b5ff8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/requests/ClassRequest.java", "commitBeforeChange": "0174b15e97908a4a68625cb029a07e8f7d593afc", "commitAfterChange": "9a192ede27ad2936b0c4a31fe5d0180dfd556d8b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tClass<? extends Runner> getRunnerClass(final Class<?> testClass)", "signatureAfterChange": "  \tClass<? extends Runner> getRunnerClass(final Class<?> testClass)", "diff": ["-\t\t\treturn AllTests.class;", "+\t\t\treturn SuiteMethod.class;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "669078529eca5d777865d75d2196551e", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \t \tprivate File getSettingsFile()", "signatureAfterChange": " \t \tprivate File getSettingsFile()", "diff": ["-\t \tAssert.assertNotNull(home); // spec says, this must exist"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66cfd17d61062171c163e4841d011910", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/OldTestClassAdaptingListenerTest.java", "commitBeforeChange": "db89759c22060a89f6750e2e92ce93072eace561", "commitAfterChange": "521fdb5aae536bd5055f6d0e4f09c5a7bdb5799f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t@Test \tpublic void addFailureDelegatesToNotifier()", "signatureAfterChange": " \t@Test \tpublic void addFailureDelegatesToNotifier()", "diff": ["-\t\tTestListener adaptingListener= OldTestClassRunner", "+\t\tTestListener adaptingListener= JUnit38ClassRunner"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66e20f17494d836aa1a7b55a8258a5b4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "568e29c871ea144e12f273dc7e12c949a5a507da", "commitAfterChange": "b3831d600d2d893ec6250ee930188cc373d81ee5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t\t@Override \t\tpublic boolean shouldRun(Description description)", "signatureAfterChange": "  \t\t@Override \t\tpublic boolean shouldRun(Description description)", "diff": ["+\t\t\tif (isParameterizedClass(description))", "+\t\t\t\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67a6529d5763a945729c760de0056e3e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "d3e86b059db787af5c0d58ddf3f69af5b42865b8", "commitAfterChange": "7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \t@Override \tpublic Description getDescription()", "signatureAfterChange": "  \t@Override \tpublic Description getDescription()", "diff": ["-\t", "+", "-\t\tfor (T child : getFilteredChildren())", "+\t\tfor (T child : getCachedChildren())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67a72ea3e57f6b12e377edcd15bc6371", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/interceptor/ExpectedException.java", "commitBeforeChange": "734ab5187c068599352e5fdc7374c1334d484fef", "commitAfterChange": "54917b88aab026dabb4541276ed875117c1e1faa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic Statement intercept(Statement base, FrameworkMethod method, Object target)", "signatureAfterChange": " \t \tpublic Statement apply(Statement base, FrameworkMethod method, Object target)", "diff": ["-\tpublic Statement intercept(Statement base, FrameworkMethod method, Object target) {", "+\t", "+\tpublic Statement apply(Statement base, FrameworkMethod method, Object target) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67ab25b21bc6b4ed8fcfdf1b18a51265", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/PotentialAssignment.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\t\t \t\t\t@Override \t\t\tpublic Object getValue() throws CouldNotGenerateValueException", "signatureAfterChange": "\t\t \t\t\t@Override \t\t\tpublic Object getValue(Object test) throws CouldNotGenerateValueException", "diff": ["-\t\t\tpublic Object getValue() throws CouldNotGenerateValueException {", "+\t\t\tpublic Object getValue(Object test) throws CouldNotGenerateValueException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67c14e7e1789fdd56566d1ec726b0f6e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Request.java", "commitBeforeChange": "143c96470aec3221f76f9dcc8042fb36cc88b852", "commitAfterChange": "a72b0dbef4b01e8ad0b832d9a579dd7fabd5a071", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic static Request classes(Executioner asdfasdf, Class<?>... classes)", "signatureAfterChange": " \tpublic static Request classes(Computer computer, Class<?>... classes)", "diff": ["-\tpublic static Request classes(Executioner asdfasdf, Class<?>... classes) {", "+\tpublic static Request classes(Computer computer, Class<?>... classes) {", "-\t\t\tSuite suite= asdfasdf.getSuite(builder, classes);", "+\t\t\tSuite suite= computer.getSuite(builder, classes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67d3ab75541dbddb671b5044943f9373", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "9c366d887c625b04ce7efbafa4ff42091bb343e5", "commitAfterChange": "cb0c4e9f7c9be8be7c11e4934f6bd71a312102ec", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     protected void validateTestMethods(List<Throwable> errors)", "signatureAfterChange": "      @Override     protected void validateTestMethods(List<Throwable> errors)", "diff": ["-            for (ParameterSignature signature : each.getParameterSignatures()) {", "+            for (ParameterSignature signature : ParameterSignature.signatures(each.getMethod())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68062e63242f2bfb31830d1ac9b6bef8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/experimental/categories/CategoryFilterFactoryTest.java", "commitBeforeChange": "5edfb4447b609c178d63a3d991172861076d143b", "commitAfterChange": "34336085d5aba69c997f8e6b244531561afebcd4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "         @Override         protected Filter createFilter(Class<?>[] categories)", "signatureAfterChange": "         @Override         protected Filter createFilter(Class<?>[] categories)", "diff": ["+            return new DummyFilter();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "686d250efd22aab93237b87b98baf0c2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/TestClassTest.java", "commitBeforeChange": "734ab5187c068599352e5fdc7374c1334d484fef", "commitAfterChange": "54917b88aab026dabb4541276ed875117c1e1faa", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \t@Test \tpublic void fieldsOnSubclassesShadowSuperclasses()", "signatureAfterChange": "  \t@Test \tpublic void fieldsOnSubclassesShadowSuperclasses()", "diff": ["-\t\t\t\tInterceptor.class).size(), is(1));", "+\t\t\t\tRule.class).size(), is(1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "688e30cac4d915269066c2712d2dd5b9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/interceptor/Interceptors.java", "commitBeforeChange": "3d08ecc6a661f09520559637794c9a161db90f3d", "commitAfterChange": "e5a301651a359ed4ce2c1dd81a4a73868b4dddcc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tprotected Statement withAfters(FrameworkMethod method, Object target, \t\t\tStatement statement)", "signatureAfterChange": "  \t@Override \tprotected Statement withBefores(FrameworkMethod method, Object target, \t\t\tStatement statement)", "diff": ["-\tprotected Statement withAfters(FrameworkMethod method, Object target,", "+\tprotected Statement withBefores(FrameworkMethod method, Object target,", "-\t\t// TODO Auto-generated method stub", "-\t\treturn super.withAfters(method, target, intercept(statement, target, method));", "+\t\treturn super.withBefores(method, target, intercept(statement, target, method));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68a3518a49f4858f0f7dfc58bed969f9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/Failure.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public String getTestHeader()", "signatureAfterChange": "     public String getTestHeader()", "diff": ["-        return description.getDisplayName();", "+        return fDescription.getDisplayName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68dc06489aeb3a19161f019a21192bd3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tprotected Notifier notifying(TestMethod method, Statement link)", "signatureAfterChange": "  \tprotected Notifier notifying(FrameworkMethod method, Statement link)", "diff": ["-\tprotected Notifier notifying(TestMethod method, Statement link) {", "+\tprotected Notifier notifying(FrameworkMethod method, Statement link) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68de562dced4712d69b6cb3bc0bc7f19", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java", "commitBeforeChange": "62c0364775d3c7d3c0b9f7532f0b16b1537cf6fa", "commitAfterChange": "45524a9ddcd387fde3a20740e9c9c90ed71fec3a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "          private GuesserQueue createGuesserQueue(Assignments incomplete)                 throws ReflectiveOperationException", "signatureAfterChange": "          private GuesserQueue createGuesserQueue(Assignments incomplete)                 throws Exception", "diff": ["-                throws ReflectiveOperationException {", "+                throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68ef02a870c7a58c8223e9a2b93beaf2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void expect(Matcher<?> matcher)", "signatureAfterChange": "     public void expect(Matcher<?> matcher)", "diff": ["-        fMatcherBuilder.add(matcher);", "+        matcherBuilder.add(matcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69232cdcf938a27b702587d96509aef3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/AssertionTest.java", "commitBeforeChange": "88f0fe3ced24506ddf9791f7a088163f4e7b1f20", "commitAfterChange": "3d7fee93ddc21a6e849c36d5ae58b37b3d189665", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \t@Test(expected= AssertionError.class) public void arraysNotEqualWithMessage()", "signatureAfterChange": " \t \t@Test(expected= AssertionError.class) public void arraysNotEqualWithMessage()", "diff": ["-\t\tassertEquals(\"not equal\", new Object[] {new Object()}, new Object[] {new Object()});", "+\t\tassertArrayEquals(\"not equal\", (new Object[] {new Object()}), (new Object[] {new Object()}));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69857157ec01dc7cbf9e10b0dc2a4ab6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic void filter(Filter filter) throws NoTestsRemainException", "signatureAfterChange": "  \tpublic void filter(Filter filter) throws NoTestsRemainException", "diff": ["-\t\tfor (Iterator<TestMethod> iter= fTestMethods.iterator(); iter.hasNext();) {", "-\t\t\tTestMethod method= iter.next();", "+\t\tfor (Iterator<FrameworkMethod> iter= fTestMethods.iterator(); iter.hasNext();) {", "+\t\t\tFrameworkMethod method= iter.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "698f1a1992c9230e5384a8871da5ebd0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCore.java", "commitBeforeChange": "8c91ac2cb9da29edf75ae22dba1e1aaa60275176", "commitAfterChange": "432e3e27df0b072f3bab066cd33214913f4c7f32", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic static Result runClasses(Class<?>... classes)", "signatureAfterChange": " \tpublic static Result runClasses(Class<?>... classes)", "diff": ["-\t\treturn new JUnitCore().run(classes);", "+\t\treturn new JUnitCore().run(new Executioner(), classes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69a3b10668374b8f6c0b2141411aac06", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/links/RunTestNotifier.java", "commitBeforeChange": "e727dd6b1cb2caa1699da3b2df7625c9554adc36", "commitAfterChange": "95bd62b2ffd80394d1a17e9078a4d79478423030", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic void run(EachTestNotifier context)", "signatureAfterChange": "  \t@Override \tpublic void run(EachTestNotifier context)", "diff": ["-\t\t\tcontext.addIgnorance(e);", "+\t\t\tcontext.addFailedAssumption(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69a6649bb97ccc8b34d8c75504cee8ed", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/ComparisonFailure.java", "commitBeforeChange": "95f56b32ef3950e83273335e1ba6c2b6cf1a5540", "commitAfterChange": "674bb8f296b0bc7bbfbd8a1126cff2d98333bbf2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Override     public String getMessage()", "signatureAfterChange": "     @Override     public String getMessage()", "diff": ["-        return new ComparisonCompactor(MAX_CONTEXT_LENGTH, fExpected, fActual).compact(super.getMessage());", "+        return new ComparisonCompactor(MAX_CONTEXT_LENGTH, expected, actual).compact(super.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69bb78dea9b139872bcd98c10a0885eb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Override     public int hashCode()", "signatureAfterChange": "      @Override     public int hashCode()", "diff": ["-        return fMethod.hashCode();", "+        return method.hashCode();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69cdac3c4ee818baa02d2860e36f2dc2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "commitAfterChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t\tprotected void runWithCompleteAssignment(final Assignments complete) throws InstantiationException, \t\t\t\tIllegalAccessException, InvocationTargetException, \t\t\t\tNoSuchMethodException, Throwable", "signatureAfterChange": "  \t\tprotected void runWithCompleteAssignment(final Assignments complete) throws InstantiationException, \t\t\t\tIllegalAccessException, InvocationTargetException, \t\t\t\tNoSuchMethodException, Throwable", "diff": ["-\t\t\t\twithAfters(fTestMethod, freshInstance, withBefores(fTestMethod, freshInstance, methodCompletesWithParameters(complete, freshInstance))).run();", "+\t\t\t\twithAfters(fTestMethod, freshInstance, withBefores(fTestMethod, freshInstance, methodCompletesWithParameters(complete, freshInstance))).evaluate();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a075111c801fae892574c4f9f77f051", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "30a17cfdc3e58d7b0bc9723f86098c2a06a77c23", "commitAfterChange": "fdc9cd5ea91f5ae1d7e5991abadd1b3f989626f7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \t\t@Override \t\tprotected void runChild(final FrameworkMethod method, final RunNotifier notifier)", "signatureAfterChange": " \t \t\t@Override \t\tprotected void runChild(final FrameworkMethod method, final RunNotifier notifier)", "diff": ["-\t\t\tcollator.process(callable);", "+\t\t\tfCollator.process(callable);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a170ea4f2aca1cc65a9928fb2277c03", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TestName.java", "commitBeforeChange": "4041354a3a7629b74970e0624b7564736c20e1e3", "commitAfterChange": "d21d4edb6a5c55a3d8930dd26762a26cad67d827", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \t@Override \tpublic void starting(FrameworkMethod method)", "signatureAfterChange": "  \t@Override \tpublic void starting(Description d)", "diff": ["-\tpublic void starting(FrameworkMethod method) {", "-\t\tfName= method.getName();", "+\tpublic void starting(Description d) {", "+\t\tfName= d.getMethodName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a988ef78000d9088a4078d2ae71fe86", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "2adef6f30c64c5e5e14e9261637d113f7adda884", "commitAfterChange": "37a8aaba8a817b4bebbeebcd645d304601a0c8f0", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public Categories(Class<?> klass, RunnerBuilder builder) throws InitializationError", "signatureAfterChange": "      public Categories(Class<?> klass, RunnerBuilder builder) throws InitializationError", "diff": ["-        assertNoCategorizedDescendentsOfUncategorizeableParents(getDescription());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ad5926a41a031158070919dcdd9f567", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "979e8abbe974e8847668f5887403da78a6165ebc", "commitAfterChange": "1fcd990f60518c941a44bae2596392021614a20b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprotected Statement withAfters(FrameworkMethod method, Object target, \t\t\tStatement link)", "signatureAfterChange": " \tprotected Statement withAfters(FrameworkMethod method, Object target, \t\t\tStatement statement)", "diff": ["-\t\t\tStatement link) {", "+\t\t\tStatement statement) {", "-\t\treturn new RunAfters(link, afters, target);", "+\t\treturn new RunAfters(statement, afters, target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ae73b5809735381908bb7b6a141f90d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/internal/AllMembersSupplierTest.java", "commitBeforeChange": "3209ce6e2d1b84ae2493a7906eecd76dfff1a8af", "commitAfterChange": "ccf0c0af551df541e40edb07d19a57072a8b14b1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "          @Theory         public void theory(Integer param)", "signatureAfterChange": "          @Theory         public void theory(Object param)", "diff": ["-", "-        @Theory", "-        public void theory(Integer param) {", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6aee1071f09805670c47313ddbb88311", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic synchronized void addFailure(Test test, Throwable t)", "signatureAfterChange": " \t \tpublic synchronized void addFailure(Test test, AssertionFailedError t)", "diff": ["-\tpublic synchronized void addFailure(Test test, Throwable t) {", "+\tpublic synchronized void addFailure(Test test, AssertionFailedError t) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b3f06766bea3560bf84b76bea1f513f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java", "commitBeforeChange": "1d982e5310d57fe0ea4b63e05f20215ee3add1fe", "commitAfterChange": "24a5aad1f49b4decf946f1df701e354a18544132", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic Statement chain(TestMethod method)", "signatureAfterChange": "  \t@Override \tpublic Statement childBlock(TestMethod method)", "diff": ["-\tpublic Statement chain(TestMethod method) {", "+\tpublic Statement childBlock(TestMethod method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b567a14f694fc800de58a15380108ad", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/ComparisonCriteria.java", "commitBeforeChange": "fdc9cd5ea91f5ae1d7e5991abadd1b3f989626f7", "commitAfterChange": "31cbeb4f3c141295d0b0703ccff2b2ffbee780f4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic void internalArrayEquals(String message, Object expecteds, \t\t\tObject actuals) throws ArrayComparisonFailure", "signatureAfterChange": " \tpublic void arrayEquals(String message, Object expecteds, \t\t\tObject actuals) throws ArrayComparisonFailure", "diff": ["-\tpublic void internalArrayEquals(String message, Object expecteds,", "+\tpublic void arrayEquals(String message, Object expecteds,", "-\t\t\t\t\tinternalArrayEquals(message, expected, actual);", "+\t\t\t\t\tarrayEquals(message, expected, actual);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b6f94cb0e227d00a210edf184115bf7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "commitAfterChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprotected NotificationStrategy chain(TestMethod method, Object test)", "signatureAfterChange": "  \tprotected Notifier chain(TestMethod method, Object test)", "diff": ["-\tprotected NotificationStrategy chain(TestMethod method, Object test) {", "+\tprotected Notifier chain(TestMethod method, Object test) {", "-\t\tLink link= invoke(method, test);", "+\t\tStatement link= invoke(method, test);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6baccbacd135399e9eda5a6d367c6000", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/ErrorReportingRunner.java", "commitBeforeChange": "c7300033b5622aa02a58d4570e598697e58b0b4d", "commitAfterChange": "0804ef4cd09b0e94783a9882c60914e22fca5108", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public Description getDescription()", "signatureAfterChange": "          @Override     public Description getDescription()", "diff": ["-", "+    ", "-        Description description = Description.createSuiteDescription(testClass);", "+        Description description = Description.createSuiteDescription(classNames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bc85197b98d3cd8616044cfdd229d69", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TemporaryFolder.java", "commitBeforeChange": "982a75011a074ab25f2c96a1c2639c5b1ebb3b18", "commitAfterChange": "2d3090bf96357c0d9387a4e8f87525f776e52799", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic File newFile() throws IOException", "signatureAfterChange": " \tpublic File newFile() throws IOException", "diff": ["-\t\treturn File.createTempFile(\"junit\", null, folder);", "+\t\treturn File.createTempFile(\"junit\", null, getRoot());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bcf65b84a10e7bb359d3766dc50172c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkField.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     @Override     public Class<?> getType()", "signatureAfterChange": "     @Override     public Class<?> getType()", "diff": ["-        return fField.getType();", "+        return field.getType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c2d3b4127588d0d8ac940ea702ae573", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java", "commitBeforeChange": "24cbcbc12fdd2afb7d52ff354e08213db8a62edd", "commitAfterChange": "7602636601a8e024f27157cdbabee6de7e269d80", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t\t@Test public void two()", "signatureAfterChange": " \t\t@Test public void two() throws InterruptedException", "diff": ["-\t\t@Test public void two() {", "+\t\t@Test public void two() throws InterruptedException {", "+\t\t\tfSynchronizer.countDown();", "+\t\t\tfSynchronizer.await();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c3429deb6f8de644c0cc252e70f467a", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "29416b4ee89314119fb0f2d8011d63ac36531388", "commitAfterChange": "8817825612894d11856312a777281b6c7cf81672", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t\t \tprotected void runFailed(String message)", "signatureAfterChange": " \t\t \tprotected void runFailed(String message)", "diff": ["-\t\tSystem.exit(-1);", "+\t\tSystem.exit(FAILURE_EXIT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c5cff75f5182bfb9f1ac3692dfd6695", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/ThrowableCauseMatcher.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void describeTo(Description description)", "signatureAfterChange": "      public void describeTo(Description description)", "diff": ["-        description.appendDescriptionOf(fMatcher);", "+        description.appendDescriptionOf(matcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c6c15454b05007eb2e4802b00753d0c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/RuleFieldValidator.java", "commitBeforeChange": "eef732f8e686d719c109a1ca66aed0dc8bba8808", "commitAfterChange": "db8c72be9df8e7d605600cc5f370dffa35112362", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate void validateField(FrameworkField field, List<Throwable> errors)", "signatureAfterChange": "  \tprivate void validateField(FrameworkField field, List<Throwable> errors)", "diff": ["-\t\tvalidateNotNull(field, errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c7dfba9a782f4896cc8187e4a6390c1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "          protected void reportParameterizedError(Throwable e, Object... params)                 throws Throwable", "signatureAfterChange": "          protected void reportParameterizedError(Throwable e, Object... params)                 throws Throwable", "diff": ["-            throw new ParameterizedAssertionError(e, fTestMethod.getName(),", "+            throw new ParameterizedAssertionError(e, testMethod.getName(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c86b4c569855c5f9ac57c892a61aedd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCore.java", "commitBeforeChange": "971c9a52281458375af79e303449fe22bf91feab", "commitAfterChange": "97402a3401c6cc2d45d395c0d9d636f483b5571c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic Result run(Runner runner)", "signatureAfterChange": " \tpublic Result run(Runner runner)", "diff": ["-\t\t\tfNotifier.fireTestRunStarted(runner.getPlan());", "+\t\t\tfNotifier.fireTestRunStarted(runner.getDescription());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c9d46235f76864283428d5dc592168d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "785a33b478d358e79a3b6592754ad9ec051e4278", "commitAfterChange": "5d9e0022d3f6db1367d530579de6332b9c8802e3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "         void b(int[][] x)", "signatureAfterChange": "         void beta(int[][] x)", "diff": ["-        Object a(int i, double d, Thread t) {return null;}", "-        void b(int[][] x) {}", "+        Object alpha(int i, double d, Thread t) {return null;}", "+        void beta(int[][] x) {}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6caf650e0ac8f3ddbe37c5ab5ef17381", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/ComparisonFailure.java", "commitBeforeChange": "95f56b32ef3950e83273335e1ba6c2b6cf1a5540", "commitAfterChange": "674bb8f296b0bc7bbfbd8a1126cff2d98333bbf2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "          private boolean areStringsEqual()", "signatureAfterChange": "          private boolean areStringsEqual()", "diff": ["-            return fExpected.equals(fActual);", "+            return expected.equals(actual);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d670a79341372d15ab9cf10a487419c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public AllMembersSupplier(TestClass type)", "signatureAfterChange": "     public AllMembersSupplier(TestClass type)", "diff": ["-        fClass = type;", "+        clazz = type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d7da1f17b90a7942e5aa5b1c17dc8f4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "bcf2c17851197328bb7bc008f916a6648de193aa", "commitAfterChange": "3791a960b08c0f14e2d6cb1c72b243f97d0a28e6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public ExpectedException reportMissingExceptionWithMessage(String providedMessage)", "signatureAfterChange": "     public ExpectedException reportMissingExceptionWithMessage(String message)", "diff": ["-    public ExpectedException reportMissingExceptionWithMessage(String providedMessage) {", "-        missingExceptionMessage = providedMessage;", "+    public ExpectedException reportMissingExceptionWithMessage(String message) {", "+        missingExceptionMessage = message;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d838090313b3b215275e2004f4a207a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/OldTestClassRunnerTest.java", "commitBeforeChange": "db89759c22060a89f6750e2e92ce93072eace561", "commitAfterChange": "521fdb5aae536bd5055f6d0e4f09c5a7bdb5799f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \t@Test public void plansDecoratorCorrectly()", "signatureAfterChange": " \t \t@Test public void plansDecoratorCorrectly()", "diff": ["-\t\tOldTestClassRunner runner= new OldTestClassRunner(new TestDecorator(new TestSuite(MyTest.class)));", "+\t\tJUnit38ClassRunner runner= new JUnit38ClassRunner(new TestDecorator(new TestSuite(MyTest.class)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6da981d8e722093d56a82676862f0555", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public int getIgnoreCount()", "signatureAfterChange": "     public int getIgnoreCount()", "diff": ["-        return fIgnoreCount.get();", "+        return ignoreCount.get();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6db3933a8ab3761f42e4608e222de3da", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "69a8dad63d43eb1071c5823f345f290edd5a3050", "commitAfterChange": "0807a8cd01b6d63d54f9a3580540fa35b7fb292e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic void testStarted(String testName)", "signatureAfterChange": " \t \tpublic void testStarted(String testName)", "diff": ["-\t\twriter().print(\".\");", "+\t\tgetWriter().print(\".\");", "-\t\t\twriter().println();", "+\t\t\tgetWriter().println();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e0ab8d47d109495c308a619a82e07b4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java", "commitBeforeChange": "f5e7e1ff180bb17e4f9df702a038e06a974f78f6", "commitAfterChange": "fe5d86eba71a1f59dbbed09de4add01cc20420c0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "          @Override         public List<Throwable> validateAnnotatedClass(Class<?> type)", "signatureAfterChange": "          @Override         public List<Exception> validateAnnotatedClass(Class<?> type)", "diff": ["-        public List<Throwable> validateAnnotatedClass(Class<?> type) {", "-            return Arrays.asList(new Throwable(ANNOTATED_CLASS_CALLED));", "+        public List<Exception> validateAnnotatedClass(Class<?> type) {", "+            return asList(new Exception(ANNOTATED_CLASS_CALLED));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e19f5d3f111e6b7049cf01b7dffc7c9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "e2033a1894451c2b90ab4c43ff1eed0aad3f14ce", "commitAfterChange": "29f117914afa33c2538479c785f349daa787bf60", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t\tprotected void runWithCompleteAssignment(final Assignments complete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tInvocationTargetException, NoSuchMethodException, Throwable", "signatureAfterChange": "  \t\tprotected void runWithCompleteAssignment(final Assignments complete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tInvocationTargetException, NoSuchMethodException, Throwable", "diff": ["-\t\t\tnew BlockJUnit4ClassRunner(getTestClass()) {", "+\t\t\tnew BlockJUnit4ClassRunner(getTestClass().getJavaClass()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e1ea7c7e9d32e89a5c0b93c99dddd86", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "d3e86b059db787af5c0d58ddf3f69af5b42865b8", "commitAfterChange": "7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate void runChildren(final RunNotifier notifier)", "signatureAfterChange": " \tpublic void runChildren(final RunNotifier notifier)", "diff": ["-\tprivate void runChildren(final RunNotifier notifier) {", "-\t\tfor (final T each : getFilteredChildren())", "-\t\t\tfScheduler.schedule(new Runnable() {\t\t\t", "+\t// TODO: public?", "+\tpublic void runChildren(final RunNotifier notifier) {", "+\t\tfor (final T each : getCachedChildren())", "+\t\t\tfScheduler.schedule(new Runnable() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e5069df3b59c02fe34a007e2942b698", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java", "commitBeforeChange": "e48f6d40bf755dba2da4c29a4b7e763637b61738", "commitAfterChange": "623bd92d37786cdc869b219569740f96869f5b9d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t\t@Test public void two()", "signatureAfterChange": " \t\t@Test public void two() throws InterruptedException", "diff": ["-\t\t@Test public void two() {", "+\t\t@Test public void two() throws InterruptedException {", "+\t\t\tfSynchronizer.countDown();", "+\t\t\tfSynchronizer.await();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e6c1dcfab2389d4de305f68f8e722c6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/assertion/ComparisonFailureTest.java", "commitBeforeChange": "a19cd9db1a4280037f0d2264e45af06eaa9f8023", "commitAfterChange": "f4327736c972fedab912ea5508095e312f1f79e1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Test     public void testEndSame()", "signatureAfterChange": "  \t@Test \tpublic void compactFailureMessage()", "diff": ["-", "-\t@Test", "-    public void testEndSame() {", "-        ComparisonFailure failure = new ComparisonFailure(\"\", \"ab\", \"cb\");", "-        assertEquals(\"expected:<[a]b> but was:<[c]b>\", failure.getMessage());", "-    }", "+\tpublic void compactFailureMessage() {", "+\t\tComparisonFailure failure = new ComparisonFailure(\"\", expected, actual);", "+\t\tassertEquals(message, failure.getMessage());", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e759559a1b95e59cf7233903554dfd0", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "9af2e559040ea3bc3db5c5d39b2c4a27098d5a76", "commitAfterChange": "a1fef439624fe411d0bea8651324e28b134e8b4a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void printErrors(TestResult result)", "signatureAfterChange": " \tpublic void printErrors(TestResult result)", "diff": ["-\t\t\t\twriter().print(getFilteredTrace(failure.thrownException()));", "+\t\t\t\twriter().print(getFilteredTrace(failure.trace()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e7fce1cc5d66081e4a3936b91e37b6f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java", "commitBeforeChange": "24cbcbc12fdd2afb7d52ff354e08213db8a62edd", "commitAfterChange": "7602636601a8e024f27157cdbabee6de7e269d80", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \t@Before public void cleanupReferences()", "signatureAfterChange": " \t \t@Before public void init()", "diff": ["-\t@Before public void cleanupReferences() {", "+\t@Before public void init() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6eb577ed6cfa59de81621d9bcdaf2cb4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "d3de6079892fa89aa46386c0369a29b4ef9e9e3c", "commitAfterChange": "669bb577583f2edd8cd65008a7c9ac19ebc350ea", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  \tprivate void filterChild(T child) throws NoTestsRemainException", "signatureAfterChange": "  \tprivate void filterChild(T child) throws NoTestsRemainException", "diff": ["-\t\tif (fFilter != null)", "-\t\t\tfFilter.apply(child);", "+\t\tfFilter.apply(child);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ec4e502bae965a1b33994d5ce44fff6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Override     public boolean equals(Object obj)", "signatureAfterChange": "      @Override     public boolean equals(Object obj)", "diff": ["-        return fUniqueId.equals(d.fUniqueId);", "+        return uniqueId.equals(d.uniqueId);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ed034ccc2c850dacc6110e1e804ed1e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java", "commitBeforeChange": "9c5a2f28935a2d816ac14894d6c7cfb3c32a98f6", "commitAfterChange": "26c25f3dbf524f4efd90e97f41c6df10345e78a9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void throwsExceptionWithTimeoutValueAndTimeUnitSet()             throws Throwable", "signatureAfterChange": "      @Test     public void throwsExceptionWithTimeoutValueAndTimeUnitSet()             throws Throwable", "diff": ["-        } catch (TestFailedOnTimeoutException e) {", "+        } catch (TestTimedOutException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ee2cdb6400c3097229e94f1fd49f38e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Override \tprotected Link chain(final TestMethod method)", "signatureAfterChange": "  \t@Override \tprotected Link chain(final TestMethod method, Object test)", "diff": ["-\tprotected Link chain(final TestMethod method) {", "-\t\tLink next= invoke(method);", "+\tprotected Link chain(final TestMethod method, Object test) {", "+\t\tLink next= invoke(method, test);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f1cf99682ac75b5ace2ee3d22279218", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "ff7c54f564eac489de1aef062ff0048c128e1c4f", "commitAfterChange": "b23ffd790b06f561290239ef3b7a5239ba755f10", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void collectInitializationErrors(List<Throwable> errors)", "signatureAfterChange": " \tprotected void collectInitializationErrors(List<Throwable> errors)", "diff": ["+\t\tvalidateClassRules(errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f544a3585650d3112ed87bf2f0d13ba", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "95da39292ea777ec3ff99be2bb23d46f704f683a", "commitAfterChange": "8e20f520565dc52f5599eafd54b603043bfecbaf", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \t@Test \tpublic void saffSqueezeExample() throws Exception", "signatureAfterChange": "  \t@Test \tpublic void saffSqueezeExample() throws Exception", "diff": ["-\t\tFilter filter= Filter.matchDescription(method);", "+\t\tFilter filter= Filter.matchMethodDescription(method);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fbb3013b19051d8788e04b4c1abb400", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "a1813f62876a6c7227ec5c866b621e01cda79664", "commitAfterChange": "97afc5e205e1c6ac0f5a9aefabed92d58d88ab81", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate void runChildren(final RunNotifier notifier)", "signatureAfterChange": "  \tprivate void runChildren(final RunNotifier notifier)", "diff": ["-\t\t\tfRunnerInterceptor.runChild(new Runnable() {\t\t\t", "+\t\t\tfScheduler.schedule(new Runnable() {\t\t\t", "-\t\tfRunnerInterceptor.finished();", "+\t\tfScheduler.finished();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fca8e1dc3e557807ab6601a01c2f99e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "161229441b7365fa06f0d82e272e15f1f378b315", "commitAfterChange": "30a039854fd7f8cda135222054b247c158b91fa7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \t\tprivate MethodParameterValue(Method method)", "signatureAfterChange": "  \t\tprivate MethodParameterValue(FrameworkMethod dataPointMethod)", "diff": ["-\t\tprivate MethodParameterValue(Method method) {", "-\t\t\tfMethod= method;", "+\t\tprivate MethodParameterValue(FrameworkMethod dataPointMethod) {", "+\t\t\tfMethod= dataPointMethod;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fd1f1d0c0940851dd511c9f01e8ff0b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactory.java", "commitBeforeChange": "5edfb4447b609c178d63a3d991172861076d143b", "commitAfterChange": "34336085d5aba69c997f8e6b244531561afebcd4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Filter createFilter(String args) throws FilterNotCreatedException", "signatureAfterChange": "     public FilterFactoryParams parseArgs(String args) throws FilterNotCreatedException", "diff": ["+    public FilterFactoryParams parseArgs(String args) throws FilterNotCreatedException {", "+        throw new UnsupportedOperationException();", "-    public Filter createFilter(String args) throws FilterNotCreatedException {", "-        throw new NotImplementedException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fea37e45bf70de6e8a172c069f73cd3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "015c02e04d940a4bffc6a8e687751c4610db19b8", "commitAfterChange": "8b507d7908603bf6e36ea9e60921b76eb5923d0f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \t\t@Override \t\tprotected void runChild(final Runner runner, final RunNotifier notifier)", "signatureAfterChange": " \t \t\t@Override \t\tprotected void runChild(final Runner runner, final RunNotifier notifier)", "diff": ["-\t\t\tcollator.process(callable);", "+\t\t\tfCollator.process(callable);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "700539f788c48743174b613f25f6ecc5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/AssumptionTest.java", "commitBeforeChange": "7a2a3811a762d7988dc153d59c4222a6ab96bf82", "commitAfterChange": "1299fcddc57ce7956d87022c3e32c09b447690a3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Test \tpublic void failedAssumptionsMeanIgnore()", "signatureAfterChange": "  \t@Test \tpublic void failedAssumptionsMeanPassing()", "diff": ["-\tpublic void failedAssumptionsMeanIgnore() {", "+\tpublic void failedAssumptionsMeanPassing() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "703bed115417c516f30a2f1f62b758cc", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/validation/classes/BeforeClassAndTestFailButClassIsIgnored.java", "commitBeforeChange": "fd1ef3ca8069bd149ca63c9660587918aa28c7cd", "commitAfterChange": "7566c1da93069c00c961e37979db44ce6aa00830", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setUpClass()", "signatureAfterChange": "      @BeforeClass     public static void beforeClass()", "diff": ["-    public static void setUpClass() {", "-        fail(ClassLevelMethodsOnlyRunWhenNecessaryTest.OUR_FAILURE_MSG);", "+    public static void beforeClass() {", "+        fail(OUR_FAILURE_MSG);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "706bec21b8282255272f4b032711f573", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/results/PrintableResult.java", "commitBeforeChange": "734ab5187c068599352e5fdc7374c1334d484fef", "commitAfterChange": "54917b88aab026dabb4541276ed875117c1e1faa", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic PrintableResult(Class<?> type)", "signatureAfterChange": " \t \tpublic PrintableResult(Class<?> type, Computer computer)", "diff": ["-\tpublic PrintableResult(Class<?> type) {", "-\t\tthis(JUnitCore.runClasses(type));", "+\tpublic PrintableResult(Class<?> type, Computer computer) {", "+\t\tthis(JUnitCore.runClasses(computer, type));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "709d9e31250e8ef00835003c6acab06b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "956f86fa4c406a923d5366b5906e3431e9d0717d", "commitAfterChange": "198df01b7b288e57e222a33c74f8ff98bf518d93", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprotected Statement withAfters(FrameworkMethod method, Object target, \t\t\tStatement statement)", "signatureAfterChange": " \tprotected Statement withAfters(FrameworkMethod method, Object target, \t\t\tStatement statement)", "diff": ["+\t\t// TODO (May 11, 2009 11:28:21 PM):", "+\t\t// withBefores/withAfters/withBeforeClass/withAfterClass is a lot of", "+\t\t// duplication.", "-\t\treturn new RunAfters(statement, afters, target);", "+\t\treturn afters.isEmpty() ? statement :", "+\t\t\tnew RunAfters(statement, afters, target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70a816b68dd76793320d8a355ad6f7d1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "67e3edf20613b1278f4be05353b31b5129e21882", "commitAfterChange": "37a611801fbea6ecc9b6356d9616e761c8b59b91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate void addMultiPointMethods(List<PotentialAssignment> list)", "signatureAfterChange": "  \tprivate void addMultiPointMethods(List<PotentialAssignment> list)", "diff": ["-\t\t\t\taddArrayValues(list, dataPointsMethod.invokeExplosively(null));", "+\t\t\t\taddArrayValues(dataPointsMethod.getName(), list, dataPointsMethod.invokeExplosively(null));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70aae4b690968f64bb1c3cc6edc55e88", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "69a8dad63d43eb1071c5823f345f290edd5a3050", "commitAfterChange": "0807a8cd01b6d63d54f9a3580540fa35b7fb292e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t\t \tprotected PrintStream writer()", "signatureAfterChange": " \t\t \tprotected PrintStream getWriter()", "diff": ["-\tprotected PrintStream writer() {", "+\tprotected PrintStream getWriter() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70b7cad90e6880e01239435678b62595", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "fb812b11c575fcf7bbe411a876903acd21ad04ea", "commitAfterChange": "3b00445ad1ad59323cbc1082180d84ffb8d27be4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testMethodsNullSorterSelf()", "signatureAfterChange": "      @Test     public void testMethodsNullSorterSelf()", "diff": ["-        List<String> actual = getDeclaredFilteredMethods(Dummy.class, expected);", "+        List<String> actual = getDeclaredFilteredMethods(ClassWithoutSorterAnnotation.class, expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70b8e722efcb1ecae2372c0ca298506b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/model/EachTestNotifier.java", "commitBeforeChange": "e727dd6b1cb2caa1699da3b2df7625c9554adc36", "commitAfterChange": "95bd62b2ffd80394d1a17e9078a4d79478423030", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void fireTestIgnored()", "signatureAfterChange": "  \tpublic void fireTestIgnored()", "diff": ["-\t\tfNotifier.fireTestIgnoredReason(fDescription, makeIgnoredException(fDescription));", "+\t\tfNotifier.fireTestAssumptionFailed(fDescription, makeIgnoredException(fDescription));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "710ce36c60cc3be38fad4390819b5eda", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/Verifier.java", "commitBeforeChange": "751f75986b11336ac8310d73c89003b0b09ecb92", "commitAfterChange": "8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic Statement apply(final Statement base, Description description)", "signatureAfterChange": " \t@Override \tprotected Statement apply(final Statement base, Description description)", "diff": ["-public class Verifier implements TestRule {", "-\tpublic Statement apply(final Statement base, Description description) {", "+public class Verifier extends TestRule {", "+\t@Override", "+\tprotected Statement apply(final Statement base, Description description) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71cccd3d78e93d5a7acd9dd621381102", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Computer.java", "commitBeforeChange": "4d6f0702dae590809b808230f027a60aa0a4a345", "commitAfterChange": "ad5971c88fb501f007cf1a75200349fb7cbb4b25", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprotected Runner getRunner(RunnerBuilder builder, Class<?> testClass) throws Throwable", "signatureAfterChange": "  \tprotected Runner getRunner(RunnerBuilder builder, Class<?> testClass) throws Throwable", "diff": ["-\t\treturn builder.runnerForClass(testClass);", "+\t\treturn modify(builder.runnerForClass(testClass));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71d97d600cc5386bcbbc2bb94844192f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "commitAfterChange": "59b1e2926cdebfd257c6c091ee2bd478d8aa04d2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t\t@Override \t\tpublic Object getValue(Object test) throws CouldNotGenerateValueException", "signatureAfterChange": "   \t\t@Override \t\tpublic Object getValue() throws CouldNotGenerateValueException", "diff": ["-\t\tpublic Object getValue(Object test) throws CouldNotGenerateValueException {", "+\t\tpublic Object getValue() throws CouldNotGenerateValueException {", "-\t\t\t\treturn fMethod.invoke(test);", "+\t\t\t\treturn fMethod.invoke(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72087c3cb7d60fbdf9542ff1ce193bf0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "d3e86b059db787af5c0d58ddf3f69af5b42865b8", "commitAfterChange": "7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tprivate Comparator<? super T> comparator()", "signatureAfterChange": "  \tprivate Comparator<? super T> comparator(final Sorter sorter)", "diff": ["-", "-\tprivate Comparator<? super T> comparator() {", "+\tprivate Comparator<? super T> comparator(final Sorter sorter) {", "-\t\t\t\treturn fSorter.compare(describeChild(o1), describeChild(o2));", "+\t\t\t\treturn sorter.compare(describeChild(o1), describeChild(o2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72a572d219c194fd15052064a6b7ca19", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "5ea3196f1cdbc32bc3a91b96bedc1964d3bb76d1", "commitAfterChange": "8ea7e775addfcc44f0bd7145100cca3cb301d8e1", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      @Test     public void testJvmMethodSorter()", "signatureAfterChange": "      @Test     public void testJvmMethodSorter()", "diff": ["-        Method[] fromJvm = DummySortJvm.class.getDeclaredMethods();", "+        Method[] fromJvmWithSynthetics = DummySortJvm.class.getDeclaredMethods();", "-        assertArrayEquals(fromJvm, sorted);", "+        assertArrayEquals(fromJvmWithSynthetics, sorted);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72b0ae2dcd38c597b7e192a1cbe1fb95", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Request.java", "commitBeforeChange": "9a2e993c544a2cd1a0b93c9f59340910f51366b4", "commitAfterChange": "f3c211455b9e09be36e4bf7ccc499fbdd35a527a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic Request filterWith(final Description desiredDescription)", "signatureAfterChange": " \tpublic Request filterWith(final Description desiredDescription)", "diff": ["-\t\treturn filterWith(Filter.matchDescription(desiredDescription));", "+\t\treturn filterWith(Filter.matchMethodDescription(desiredDescription));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "730f66c33d96edd4ef9c855a826307ff", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/TimeoutInterceptorTest.java", "commitBeforeChange": "e5a301651a359ed4ce2c1dd81a4a73868b4dddcc", "commitAfterChange": "219beb35ca3cfe068b45a8e4ee28989a526387dd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\t \t\t@Test public void testInfiniteLoop()", "signatureAfterChange": " \t\t \t\t@Test public void testInfiniteLoop1()", "diff": ["-\t\t@Test public void testInfiniteLoop() {", "-\t\t\tlog+= \"ran\";", "+\t\t@Test public void testInfiniteLoop1() {", "+\t\t\tlog+= \"ran1\";", "+\t\t\tfor(;;) {}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73ce3d41f74098eaafa62f4074696aa0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/requests/ClassRequest.java", "commitBeforeChange": "a916d4133c7e394130d7953da427aae9917ab92c", "commitAfterChange": "d148bce8682505082a3cc634acbd36ac13a10c9a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t \tpublic ClassRequest(Class<?> testClass)", "signatureAfterChange": "  \tpublic ClassRequest(Class<?> testClass, SuiteBuilder builder)", "diff": ["-\t", "-\tpublic ClassRequest(Class<?> testClass) {", "-\t\tthis(testClass, true);", "+\tpublic ClassRequest(Class<?> testClass, SuiteBuilder builder) {", "+\t\tthis(testClass, builder, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73f1bc303026a3ed24487a1080fd8e6f", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/framework/TestCase.java", "commitBeforeChange": "8817825612894d11856312a777281b6c7cf81672", "commitAfterChange": "2bcc656e58b1736090e26215267117170a99f4e8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic String toString()", "signatureAfterChange": " \tpublic String toString()", "diff": ["-\t    return name()+\"(\"+getClass().getName()+\")\";", "+\t    return getName()+\"(\"+getClass().getName()+\")\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "741d112a949576cfa67fa07428c8a7ce", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t@Override \tprotected TheoryAnchor invoke(TestMethod method)", "signatureAfterChange": "  \t@Override \tprotected TheoryAnchor invoke(TestMethod method, Object test)", "diff": ["-\tprotected TheoryAnchor invoke(TestMethod method) {", "+\tprotected TheoryAnchor invoke(TestMethod method, Object test) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7421b802f5ec8e20abe69f360899ebfe", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/NoGenericTypeParametersValidator.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private void validateNoTypeParameterOnType(Type type, List<Throwable> errors)", "signatureAfterChange": "      private void validateNoTypeParameterOnType(Type type, List<Throwable> errors)", "diff": ["-            errors.add(new Exception(\"Method \" + fMethod.getName()", "+            errors.add(new Exception(\"Method \" + method.getName()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "743b7fb8f15f1db384da9346dd30c63a", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/runner/ClassPathTestCollector.java", "commitBeforeChange": "1e752dcb0a967bcb47fae4b12fb8765e79571e69", "commitAfterChange": "bfc94ee739d62127c7477300b26127bd560765a1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic Enumeration collectTests()", "signatureAfterChange": " \t \tpublic Enumeration collectTests()", "diff": ["-\t\tVector result= new Vector(100);", "+\t\tHashtable result= new Hashtable(100);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "743c66f8e8b9dc21517c7848595d9f1d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Parameterized(Class<?> klass) throws Throwable", "signatureAfterChange": "     public Parameterized(Class<?> klass) throws Throwable", "diff": ["-        fRunners = Collections.unmodifiableList(createRunnersForParameters(", "+        runners = Collections.unmodifiableList(createRunnersForParameters("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7440b310cae08005c9330c5bb86830d7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/Parameterized.java", "commitBeforeChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "commitAfterChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\t \t\t@Override \t\tprotected String testName(final Method method)", "signatureAfterChange": " \t\t \t\t@Override \t\tprotected String testName(final TestMethod method)", "diff": ["-\t\tprotected String testName(final Method method) {", "+\t\tprotected String testName(final TestMethod method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7447bf055f8b1794dd541406f2ef4a03", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java", "commitBeforeChange": "9917b9fe95fd237b824b0bb6a3f9ef9efedd2b3b", "commitAfterChange": "48af7e797dbefa1fc47e80394c7f74ef87c3c7ab", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Test     public void failWithHelpfulMessageForProtectedClassRule()", "signatureAfterChange": "      @Test     public void failWithHelpfulMessageForProtectedClassRule()", "diff": ["-        assertClassHasFailureMessage(TestWithProtectedClassRule.class,", "+        assertClassHasFailureMessage(TestWithProtectedClassRule.class, 2,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74b9a588566f113876fb53d459049ff1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Suite.java", "commitBeforeChange": "497ebf11c284bcc2b32eecc4a063589b4f17d250", "commitAfterChange": "c732aa178a822671d3de88e5ece05f9bf464172b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic Suite(SuiteBuilder requestor, Class<?>[] classes)", "signatureAfterChange": " \tpublic Suite(SuiteBuilder builder, Class<?>[] classes)", "diff": ["-\tpublic Suite(SuiteBuilder requestor, Class<?>[] classes) {", "-\t\tthis(null, requestor.runners(classes));", "-\t}", "+\t */", "+\tpublic Suite(SuiteBuilder builder, Class<?>[] classes) {", "+\t\tthis(null, builder.runners(classes));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74ffbdf8c38bfcfe397b40f06fa1de9a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java", "commitBeforeChange": "41cbbf7e228b8f7908e672a79863ff970316b120", "commitAfterChange": "421ab330509a53302f56b209595f55b23bfdfc0e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t@Override \tpublic void run(RunNotifier notifier)", "signatureAfterChange": "  \t@Override \tpublic void run(RunNotifier notifier)", "diff": ["-\t\tfTest.run(result);", "+\t\tgetTest().run(result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7509acd6823b4e6ca93cd05771ea0118", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/manipulation/SingleMethodTest.java", "commitBeforeChange": "1d982e5310d57fe0ea4b63e05f20215ee3add1fe", "commitAfterChange": "24a5aad1f49b4decf946f1df701e354a18544132", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t@Test public void parameterizedOneTimeSetup() throws Exception", "signatureAfterChange": "  \t@Test public void parameterizedFilterToSingleMethod() throws Exception", "diff": ["-\t@Test public void parameterizedOneTimeSetup() throws Exception {", "+", "+\t@Test public void parameterizedFilterToSingleMethod() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75621ae7229ce55e43495f0c5c3a41bb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TemporaryFolder.java", "commitBeforeChange": "7c6c36d0de0caf3b44ea80f93c7c4efe6644e1fc", "commitAfterChange": "3b544f571c2ec23a31e15ecc031a313ffa6ebcee", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public File newFolder(String... folderNames) throws IOException", "signatureAfterChange": "     public File newFolder(String... folderNames) throws IOException", "diff": ["+            validateFolderName(folderName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "760461289c9ea72442e3ef06adc36785", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java", "commitBeforeChange": "b4b1b31cdbab780ba3021a296f95356b0636ff1c", "commitAfterChange": "0fa3f12d9b69cb8c97021507bce367be386be338", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private static Description makeDescription(Test test)", "signatureAfterChange": "      private static Description makeDescription(Test test)", "diff": ["-            return Description.createTestDescription(tc.getClass(), tc.getName());", "+            return Description.createTestDescription(tc.getClass(), tc.getName(),", "+\t\t\t\t\tgetAnnotations(tc));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7626a60a8cf8f6313011fc4cd48407ef", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Request.java", "commitBeforeChange": "6aea93112f3508c955b1ccf8f8909fc375caab3d", "commitAfterChange": "123432f737b8d6e54937cf9f2e939b1e8f882e76", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Request classWithoutSuiteMethod(Class<?> newTestClass)", "signatureAfterChange": " \tpublic static Request classWithoutSuiteMethod(Class<?> clazz)", "diff": ["-\tpublic static Request classWithoutSuiteMethod(Class<?> newTestClass) {", "-\t\treturn new ClassRequest(newTestClass, false);", "+\tpublic static Request classWithoutSuiteMethod(Class<?> clazz) {", "+\t\treturn new ClassRequest(clazz, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76a7656c5f01844f518f658f748184bf", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Computer.java", "commitBeforeChange": "0dc3de7fbcf997ca8465ed9e7793a0b4f730121b", "commitAfterChange": "3d08ecc6a661f09520559637794c9a161db90f3d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic Suite getSuite(final RunnerBuilder builder, \t\t\tClass<?>[] classes) throws InitializationError", "signatureAfterChange": "  \tpublic Runner getSuite(final RunnerBuilder builder, \t\t\tClass<?>[] classes) throws InitializationError", "diff": ["-\tpublic Suite getSuite(final RunnerBuilder builder,", "+\tpublic Runner getSuite(final RunnerBuilder builder,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76dc87cbf48e9dc9cb3ac4f5714ec946", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "49d62f902ba7dba44b0b2b3b71e45004c667b2d5", "commitAfterChange": "faba199e389e3c977fc5573315790a5cde5f7611", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tprivate Statement withTestRules(FrameworkMethod method, Object target, \t\t\tStatement statement)", "signatureAfterChange": " \tprivate Statement withTestRules(FrameworkMethod method, List<TestRule> testRules, \t\t\tStatement statement)", "diff": ["-\tprivate Statement withTestRules(FrameworkMethod method, Object target,", "+\tprivate Statement withTestRules(FrameworkMethod method, List<TestRule> testRules,", "-\t\tList<TestRule> testRules= getTestRules(target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76f16a3a66f4f7bd26c8b219081b876e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/EnclosedTest.java", "commitBeforeChange": "e8b91fa9f797dfe16aff66ed6ad5d6104e5133fe", "commitAfterChange": "0c458a8796cc5ffcda5286ee4a367c8e31ae7c88", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \t@Test public void enclosedRunnerPlansEnclosedClasses() throws Exception", "signatureAfterChange": " \t \t@Test public void enclosedRunnerPlansConcreteEnclosedClasses() throws Exception", "diff": ["-\t@Test public void enclosedRunnerPlansEnclosedClasses() throws Exception {", "+\t@Test public void enclosedRunnerPlansConcreteEnclosedClasses() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7709043cfa33aeb404b6d4a0f0943a22", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "ea96d2e30b23dbcdb5959f5732f4930eb2536f37", "commitAfterChange": "b28fe09d1a54955bed2e4db5352c14fae195a418", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "          public StatementThread(Statement statement)", "signatureAfterChange": "          public StatementThread(Statement statement)", "diff": ["+            fFinished = false;", "+            fExceptionThrownByOriginalStatement = null;", "+            fRecordedStackTrace = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "773066b65500b3e16b42011faf8fe835", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "1029290bc93463782a8642006b61f78a6c35c225", "commitAfterChange": "dcc298cf98108fde395495e78ac4f28a9cdc496e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private Exception createTimeoutException(Thread thread)", "signatureAfterChange": "      private Exception createTimeoutException(Thread thread)", "diff": ["-        Exception currThreadException = new Exception(String.format(", "+        Exception currThreadException = new TestFailedOnTimeoutException(String.format("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77346d8780bb44510d8a554165717c8c", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/framework/TestResult.java", "commitBeforeChange": "a0f0ee1b3f72d9361eb09b3a25156c69a748aa47", "commitAfterChange": "478f7f9217cf5da219a7ba298e3a87f405378194", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic synchronized void removeListener(TestListener listener)", "signatureAfterChange": " \tpublic synchronized void removeListener(TestListener listener)", "diff": ["-\t\tfListeners.removeElement(listener);", "+\t\tfListeners.remove(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "776b323496604b4101a92f812ebce0ab", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionRuleTest.java", "commitBeforeChange": "3b8708636ffc1a9fc970b66db73c09095dabc2e2", "commitAfterChange": "6b943e564adcc9a7106e54c24eb5d022bed1462f", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "          @Test \t\tpublic void throwWithCause()", "signatureAfterChange": "          @Test \t\tpublic void throwWithCause()", "diff": ["-            thrown.expectCause(EXPECTED_CAUSE);", "+            thrown.expectCause(is(EXPECTED_CAUSE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77818244a3adeab804f7bc7c841e11b0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactoryFactory.java", "commitBeforeChange": "0a9a389570a171b67c3155d312f2e90bdab5aaaf", "commitAfterChange": "318adee43493447e22bbea89e0f17260e0186a14", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "         public FilterFactoryNotFoundException(String message)", "signatureAfterChange": "         public FilterFactoryNotCreatedException(String message)", "diff": ["-    public static class FilterFactoryNotFoundException extends ClassNotFoundException {", "-        public FilterFactoryNotFoundException(String message) {", "+    public static class FilterFactoryNotCreatedException extends ClassNotFoundException {", "+        public FilterFactoryNotCreatedException(String message) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7785049d4e33cea8eed45ab9aa305781", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/TimeWatcherTest.java", "commitBeforeChange": "0a2601045f101930d0ca7f31c53b416fafbbe7a7", "commitAfterChange": "c4e3854ae71d7dd8b624a977712bee3e29d5bcdd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Before     public void init()", "signatureAfterChange": "      @Before     public void init()", "diff": ["+        AbstractTimeWatcherTest.testNameIfFinished = null;", "+        AbstractTimeWatcherTest.timeSpentIfFinished = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77937d16d936581299c1df0b4c2f9387", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/CategoryFilterFactory.java", "commitBeforeChange": "40b8761099da900ad219fe9b06060cda1e212f83", "commitAfterChange": "b01900fddca5ff54258e621025ccdbbc75f880f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r     private Class<?>[] parseCategories(String categories) throws ClassNotFoundException", "signatureAfterChange": "\r \r     private Class<?>[] parseCategories(String categories) throws ClassNotFoundException", "diff": ["-            Class<?> categoryClass = ClassUtil.getClass(category);\r", "+            Class<?> categoryClass = Classes.getClass(category);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "779a378671f5a7740c7a739848149c2f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/TemporaryFolderUsageTest.java", "commitBeforeChange": "59e5333b24d0e433de10d74c69e5de7700c6b744", "commitAfterChange": "2568203bdebd5a4a4ad9aa74b1d8369d22f668a3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t@Test \tpublic void newFileWithGivenFilenameThrowsIllegalArgumentExceptionIfFileExists() throws IOException", "signatureAfterChange": "  \t@Test \tpublic void newFileWithGivenFilenameThrowsIllegalArgumentExceptionIfFileExists() throws IOException", "diff": ["-\t\tthrown.expect(IllegalArgumentException.class);", "+\t\tthrown.expect(IOException.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77afa45911042afd8daeb792366432b0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/TestMethod.java", "commitBeforeChange": "149ecd4dcd99697710aa350e9cd3b3bcac877125", "commitAfterChange": "787ed4e5bc2b68e8b5cdb6190ff1fc053f1a5b13", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected Class<? extends Throwable> getExpectedException()", "signatureAfterChange": "  \tprotected Class<? extends Throwable> getExpectedException()", "diff": ["-\t\tTest annotation= fMethod.getAnnotation(Test.class);", "+\t\tTest annotation= getMethod().getAnnotation(Test.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77f7e43334cbf3f005587e5d38fc6052", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCore.java", "commitBeforeChange": "196c4ed79cbaca37709643b54913b361b677ae04", "commitAfterChange": "0a9a389570a171b67c3155d312f2e90bdab5aaaf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public Result runMain(JUnitSystem system, String... args)", "signatureAfterChange": "     Result runMain(JUnitSystem system, String... args)", "diff": ["-    public Result runMain(JUnitSystem system, String... args) {", "+    Result runMain(JUnitSystem system, String... args) {", "-                        Filter filter = filterFactoryFactory.apply(filterSpec);", "+                        Filter filter = filterFactoryFactory.createFilterFromFilterSpec(filterSpec);", "-            } catch (FilterFactory.FilterNotFoundException e) {", "+            } catch (FilterFactory.FilterNotCreatedException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7801caebce23b7980d8493fe0c9b0fb7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/TestRuleTest.java", "commitBeforeChange": "751f75986b11336ac8310d73c89003b0b09ecb92", "commitAfterChange": "8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t\t\tpublic Statement apply(final Statement base, Description description)", "signatureAfterChange": " \t\t\t@Override \t\t\tprotected Statement apply(final Statement base, Description description)", "diff": ["-\t\tprivate static class Increment implements TestRule {", "-\t\t\tpublic Statement apply(final Statement base, Description description) {", "+\t\tprivate static class Increment extends TestRule {", "+\t\t\t@Override", "+\t\t\tprotected Statement apply(final Statement base, Description description) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "782d5a90c3c9a2b61d01acc78d8edfe2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java", "commitBeforeChange": "41cbbf7e228b8f7908e672a79863ff970316b120", "commitAfterChange": "421ab330509a53302f56b209595f55b23bfdfc0e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate static Description makeDescription(Test test)", "signatureAfterChange": "  \tprivate static Description makeDescription(Test test)", "diff": ["-\t\t\tString name= ts.getName() == null ? \"\" : ts.getName();", "+\t\t\tString name= ts.getName() == null ? createSuiteDescription(ts) : ts.getName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7835688a3694ce4d0ae486c55d4ada11", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "commitAfterChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprotected List<Method> getTestMethods()", "signatureAfterChange": "  \tprotected List<TestMethod> getTestMethods()", "diff": ["-\t", "-\tprotected List<Method> getTestMethods() {", "+", "+\tprotected List<TestMethod> getTestMethods() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7902b5ed9e32453d71a8601bbad3a9a5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "          protected Collection<Field> getSingleDataPointFields(ParameterSignature sig)", "signatureAfterChange": "          protected Collection<Field> getSingleDataPointFields(ParameterSignature sig)", "diff": ["-        List<FrameworkField> fields = fClass.getAnnotatedFields(DataPoint.class);", "+        List<FrameworkField> fields = clazz.getAnnotatedFields(DataPoint.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79082a17982136a1911d501005d1c8df", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestElement.java", "commitBeforeChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "commitAfterChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void runAfters(Object target) throws MultipleFailureException", "signatureAfterChange": "  \tpublic void runAfters(Object target) throws MultipleFailureException", "diff": ["-\t\terrors.throwUnlessEmpty();", "+\t\terrors.assertEmpty();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79bf7b1d6b973f69749e795ab4a4b6e8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedExceptionMatcher.java", "commitBeforeChange": "2d886e29734f9f55b75db91095880c5d109ff678", "commitAfterChange": "6bea82df32f687d636f1b843a1918a3a1ff22a6e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \t@Override \tprotected void describeMismatchSafely(Throwable item, \t\t\tDescription mismatchDescription)", "signatureAfterChange": "  \t@Override \tprotected void describeMismatchSafely(Throwable item, \t\t\tDescription mismatchDescription)", "diff": ["-\t", "+", "-\t\tfCompositeMatcher.describeMismatch(item, mismatchDescription);", "+\t\tgetCompositeMatcher().describeMismatch(item, mismatchDescription);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79c0da7ffa3bf8df0f47bcb59461983f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/AssumptionViolatedException.java", "commitBeforeChange": "2745d016f648e783360bd076f23b36908f8125b0", "commitAfterChange": "b064a274adb12c6e866cb08dedc70534237330b2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public AssumptionViolatedException(String assumption, Throwable t)", "signatureAfterChange": "     public AssumptionViolatedException(String assumption, Throwable e)", "diff": ["-    public AssumptionViolatedException(String assumption, Throwable t) {", "-        this(assumption, false, t, null);", "+    public AssumptionViolatedException(String assumption, Throwable e) {", "+        this(assumption, false, e, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79cbea0bbffa12f98c16c4b474376fb0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionRuleTest.java", "commitBeforeChange": "c618504adee4bc91b3bd7e0ff06be6e1fa9d88cc", "commitAfterChange": "15815f55d2e9ae567ef8fe0a172f498b87a3a880", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t@Test \tpublic void wrongMessageFails()", "signatureAfterChange": "  \t@Test \tpublic void wrongMessageFails()", "diff": ["-\t\t\t\ttestResult(HasWrongMessage.class),", "-\t\t\t\thasSingleFailureContaining(\"\\\"expectedMessage\\\"\\n     but: getMessage() was \\\"actualMessage\\\"\"));", "+\t\t\t\ttestResult(HasWrongMessage.class), both(", "+\t\t\t\thasSingleFailureContaining(\"expectedMessage\")).and(", "+\t\t\t\thasSingleFailureContaining(\"actualMessage\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a17028bae3569a5b3a91cd8b9b56856", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public Constructor<?> getOnlyConstructor()", "signatureAfterChange": "      public Constructor<?> getOnlyConstructor()", "diff": ["-        Constructor<?>[] constructors = fClass.getConstructors();", "+        Constructor<?>[] constructors = clazz.getConstructors();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a5c6755385cfe362dea353edcd773d2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/RunAfters.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void evaluate() throws Throwable", "signatureAfterChange": "      @Override     public void evaluate() throws Throwable", "diff": ["-            fNext.evaluate();", "+            next.evaluate();", "-            for (FrameworkMethod each : fAfters) {", "+            for (FrameworkMethod each : afters) {", "-                    each.invokeExplosively(fTarget);", "+                    each.invokeExplosively(target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7add57ca5c106e8cd5bc6525b3dacefc", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "commitAfterChange": "44e7458b19d5cd1900a765a440c96e85b81d25fc", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tprotected Link anchor(TestMethod method)", "signatureAfterChange": " \t \tprotected Link invoke(TestMethod method)", "diff": ["+\t", "+\tprotected Link invoke(TestMethod method) {", "+\t\treturn new Invoke(method);", "+\t}", "-\t", "-\tprotected Link anchor(TestMethod method) {", "-\t\treturn new InvokeMethod(method);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ae63257d3c5f06373ba4144115090c5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/ParameterizedTestMethodTest.java", "commitBeforeChange": "db89759c22060a89f6750e2e92ce93072eace561", "commitAfterChange": "521fdb5aae536bd5055f6d0e4f09c5a7bdb5799f", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \t \tprivate List<Throwable> validateAllMethods(Class<?> clazz)", "signatureAfterChange": " \t \tprivate List<Throwable> validateAllMethods(Class<?> clazz)", "diff": ["-\t\t\tnew TestClassRunner(clazz);", "+\t\t\tnew JUnit4ClassRunner(clazz);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7af4fcdb95b19c9f7f77eeb2a4b402f2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TemporaryFolder.java", "commitBeforeChange": "6012fa3b4fe4e924311d42e05e216092e425cbf9", "commitAfterChange": "6b822aa3037d731669ace4a4bb6b859bf9986def", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic File newFile(String fileName) throws IOException", "signatureAfterChange": " \tpublic File newFile(String fileName) throws IOException", "diff": ["-\t\t\tthrow new IllegalStateException(", "+\t\t\tthrow new IllegalArgumentException("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b7e522f987ac1ba7679111a44b11076", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "e07e59eb9d24f6e4fa85dd99f311c1feca6ea983", "commitAfterChange": "5d957024be0d1b181879d48b7915b3b8aad8f5d5", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate int getConstructorParameterCount()", "signatureAfterChange": "  \tprivate int getConstructorParameterCount()", "diff": ["-\t\t\t\t.signatures(fClass.getConstructor());", "+\t\t\t\t.signatures(fClass.getOnlyConstructor());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bb255a0872863926ad6948b1690a8b4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "1d982e5310d57fe0ea4b63e05f20215ee3add1fe", "commitAfterChange": "24a5aad1f49b4decf946f1df701e354a18544132", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tprotected List<TestMethod> getTestMethods()", "signatureAfterChange": "  \t@Override \tprotected List<TestMethod> computeTestMethods()", "diff": ["-\tprotected List<TestMethod> getTestMethods() {", "+\tprotected List<TestMethod> computeTestMethods() {", "-\t\tList<TestMethod> testMethods= super.getTestMethods();", "+\t\tList<TestMethod> testMethods= super.computeTestMethods();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bf1da026514a3f66ca13b11c06dba29", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/TheoryMethodRunner.java", "commitBeforeChange": "a58514aec7e843339be24980e92aeeb759327ffb", "commitAfterChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t\tprotected void runWithCompleteAssignment(Assignments complete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tInvocationTargetException, NoSuchMethodException, Throwable", "signatureAfterChange": "  \t\tprotected void runWithCompleteAssignment(Assignments complete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tInvocationTargetException, NoSuchMethodException, Throwable", "diff": ["-\t\t\t\tnew BeforeAndAfter(new Anchor() {", "+\t\t\t\tnew BeforeAndAfter(new Link() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bff893f48025f7846111785de73e3a3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private Exception createTimeoutException(Thread thread)", "signatureAfterChange": "      private Exception createTimeoutException(Thread thread)", "diff": ["-        final Thread stuckThread = fLookForStuckThread ? getStuckThread(thread) : null;", "-        Exception currThreadException = new TestTimedOutException(fTimeout, fTimeUnit);", "+        final Thread stuckThread = lookForStuckThread ? getStuckThread(thread) : null;", "+        Exception currThreadException = new TestTimedOutException(timeout, timeUnit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c1fd4e4d894f259ad3ec432d39c1e5c", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/StatusLine.java", "commitBeforeChange": "1e752dcb0a967bcb47fae4b12fb8765e79571e69", "commitAfterChange": "bfc94ee739d62127c7477300b26127bd560765a1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic void clear()", "signatureAfterChange": " \t \tpublic void clear()", "diff": ["+\t\tsetToolTipText(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c2cbae9aa1c3dfd89eb3950734f9a70", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/RunNotifier.java", "commitBeforeChange": "66cf6859fa74021320c9b0d5e0a6ffc5c86b770f", "commitAfterChange": "b33b4b090c224c14415d0ffb68a078a097aeaf71", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void fireTestRunStarted(final Description description)", "signatureAfterChange": " \tpublic void fireTestRunStarted(final Plan plan)", "diff": ["+\tpublic void fireTestRunStarted(final Plan plan) {", "+\t\tnew SafeNotifier() {", "+\t\t\t@SuppressWarnings(\"deprecation\")", "+\t\t\t@Override", "+\t\t\tprotected void notifyListener(RunListener each) throws Exception {", "+\t\t\t\teach.testRunStarted(plan);", "+\t\t\t\teach.testRunStarted(plan.getDescription());", "+\t\t\t};", "+\t\t}.run();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c83ea603997b63e8ab9e07dcb609859", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMember.java", "commitBeforeChange": "52e93b4fe3c4133118f33635ea8517a13ff05321", "commitAfterChange": "fbb1efed56f2b495d68a598d5345cbc95b118d35", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public abstract boolean isPublic();", "signatureAfterChange": "     public boolean isPublic()", "diff": ["-    public abstract boolean isPublic();", "+     */", "+    public boolean isPublic() {", "+        return Modifier.isPublic(getModifiers());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c85d447bfeba09efa2b8045e1732d44", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/ThrowableMessageMatcher.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     protected void describeMismatchSafely(T item, Description description)", "signatureAfterChange": "      @Override     protected void describeMismatchSafely(T item, Description description)", "diff": ["-        fMatcher.describeMismatch(item.getMessage(), description);", "+        matcher.describeMismatch(item.getMessage(), description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cdec7481b248b2f87e3e42c32ea41cd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/interceptor/Timeout.java", "commitBeforeChange": "734ab5187c068599352e5fdc7374c1334d484fef", "commitAfterChange": "54917b88aab026dabb4541276ed875117c1e1faa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic Statement intercept(Statement base, FrameworkMethod method, Object target)", "signatureAfterChange": "  \tpublic Statement apply(Statement base, FrameworkMethod method, Object target)", "diff": ["-\tpublic Statement intercept(Statement base, FrameworkMethod method, Object target) {", "+\tpublic Statement apply(Statement base, FrameworkMethod method, Object target) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ce28666c8c154532f29ba1fb1abb91c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "88c28a42a6fb7dc462c4bc504189a76a815fc265", "commitAfterChange": "4e8b0282c72c5da53b68d012e57ac41f36c73a68", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void addMultiPointArrayValues(ParameterSignature sig, String name, List<PotentialAssignment> list,             Object array) throws Throwable", "signatureAfterChange": "      private void addMultiPointArrayValues(ParameterSignature sig, String name, List<PotentialAssignment> list,             Object array) throws Throwable", "diff": ["-            if (!isCorrectlyTyped(sig, Array.get(array, i).getClass())) {", "+            if (!sig.canAcceptValue(Array.get(array, i))) {", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d5fe287ab98c1e14b7a164302559597", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/AssertionTest.java", "commitBeforeChange": "88f0fe3ced24506ddf9791f7a088163f4e7b1f20", "commitAfterChange": "3d7fee93ddc21a6e849c36d5ae58b37b3d189665", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t\t\t \t@Test public void multiDimensionalArraysAreNotEqualNoMessage()", "signatureAfterChange": " \t\t\t \t@Test public void multiDimensionalArraysAreNotEqualNoMessage()", "diff": ["-\t\t\tassertEquals(new Object[][]{{true, true}, {false, false}}, new Object[][]{{true, true}, {true, false}});", "+\t\t\tassertArrayEquals((new Object[][]{{true, true}, {false, false}}), (new Object[][]{{true, true}, {true, false}}));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e1c9887b87b47df5add3a82afc72666", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "81821e83c425202b86c27d6be9c9ebe453e6d507", "commitAfterChange": "4abb65c56382cdd4ff453ddceb70b5944e6e0b38", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprotected Statement classBlock(final RunNotifier notifier)", "signatureAfterChange": " \tprotected Statement classBlock(final RunNotifier notifier)", "diff": ["+\t\tstatement= withClassRules(statement);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e68ff7089c8076134c7d2d4c2c17528", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/ComparisonFailure.java", "commitBeforeChange": "95f56b32ef3950e83273335e1ba6c2b6cf1a5540", "commitAfterChange": "674bb8f296b0bc7bbfbd8a1126cff2d98333bbf2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public String getExpected()", "signatureAfterChange": "     public String getExpected()", "diff": ["-        return fExpected;", "+        return expected;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e8266e5322cf436c4b1f31ea8d9b6be", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/SuiteMethodTest.java", "commitBeforeChange": "7a2a3811a762d7988dc153d59c4222a6ab96bf82", "commitAfterChange": "1299fcddc57ce7956d87022c3e32c09b447690a3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \t@Test public void makeSureSuiteNotUsedWithJUnit4Classes()", "signatureAfterChange": " \t \t@Test public void suiteIsUsedWithJUnit4Classes()", "diff": ["-\t@Test public void makeSureSuiteNotUsedWithJUnit4Classes() {", "+\t@Test public void suiteIsUsedWithJUnit4Classes() {", "-\t\tResult res= JUnitCore.runClasses(NewTestSuiteFails.class);", "-\t\tassertEquals(1, res.getFailureCount());", "+\t\tResult result= JUnitCore.runClasses(NewTestSuiteFails.class);", "+\t\tassertEquals(1, result.getFailureCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f7fb933c15bd85112f64f88f4fc1910", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "1273a35689bdcb3304f6634cdc3889c61f9b1b1f", "commitAfterChange": "d3ee5d06c0b797ce812cbfe35addc6146d5f07cb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public TestClass(Class<?> klass)", "signatureAfterChange": "     public TestClass(Class<?> klass)", "diff": ["+", "+        convertListValuesToBeUnmodifiable(methodsForAnnotations);", "+        convertListValuesToBeUnmodifiable(fieldsForAnnotations);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80178819dfc979ca3d9f3ab0fa1eb60b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public ArrayList<Description> getChildren()", "signatureAfterChange": "     public ArrayList<Description> getChildren()", "diff": ["-        return new ArrayList<Description>(fChildren);", "+        return new ArrayList<Description>(children);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80490c71d83d37c5af7932d29303246d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "8f2a561045b432f9755e5226b8148fd70c20c984", "commitAfterChange": "c7300033b5622aa02a58d4570e598697e58b0b4d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public BlockJUnit4ClassRunner(Class<?> klass) throws InitializationError", "signatureAfterChange": "     public BlockJUnit4ClassRunner(Class<?> testClass) throws InitializationError", "diff": ["-    public BlockJUnit4ClassRunner(Class<?> klass) throws InitializationError {", "-        super(klass);", "+    public BlockJUnit4ClassRunner(Class<?> testClass) throws InitializationError {", "+        super(testClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80ca0e47c1599456353a82097871535d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/methods/TimeoutTest.java", "commitBeforeChange": "7eef2314cb78d41def996cdd80c5a56c94a993f3", "commitAfterChange": "35b428a24bdd2eddd9653189632896d4f5b1ce42", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "              public threadTest (boolean stall)", "signatureAfterChange": "              public ThreadTest(boolean stall)", "diff": ["-            public threadTest (boolean stall) {", "+            public ThreadTest(boolean stall) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80fa868ec0e9fbbc05676f1402d021e3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "7a0a6839fe3ae4076cc72a0586e2dbe4b1bc995f", "commitAfterChange": "734ab5187c068599352e5fdc7374c1334d484fef", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate MaxHistory(File storedResults)", "signatureAfterChange": "  \tprivate MaxHistory(File storedResults)", "diff": ["-\t\tfFolder= storedResults;", "+\t\tfHistoryStore= storedResults;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "810048f8f147bbeb6d77af406a849e33", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/matchers/JUnitMatchers.java", "commitBeforeChange": "a5aa7cf7d61162947504060c9d3b6d4db6c073cf", "commitAfterChange": "79b7c3e8f1d725460212c659524b9bbf5d8a1461", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t@Deprecated \tpublic static <T> Matcher<Iterable<T>> everyItem(final Matcher<T> elementMatcher)", "signatureAfterChange": " \t@Deprecated \tpublic static <T> Matcher<Iterable<T>> each(final Matcher<T> elementMatcher)", "diff": ["-\tpublic static <T> Matcher<Iterable<T>> everyItem(final Matcher<T> elementMatcher) {", "+\tpublic static <T> Matcher<Iterable<T>> each(final Matcher<T> elementMatcher) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8131cf1cd5595ab1ede429ba712d5377", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/listening/ResultTest.java", "commitBeforeChange": "37a611801fbea6ecc9b6356d9616e761c8b59b91", "commitAfterChange": "d9c908b9aab5f610e2f42aba1863ce25e36423f2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t@Test public void failedAssumptionDoesntCountAsRun() throws Exception", "signatureAfterChange": " \t@Test public void failedAssumptionDoesntCountAsRun() throws Exception", "diff": ["-\t\tlistener.testAssumptionInvalid(someTest, null);", "+\t\tlistener.testIgnored(someTest);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "814e11c6041c98531670fbcf19a7e56b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/OldTestClassRunner.java", "commitBeforeChange": "141a144b3d4aca9a1f39f92c1d697a249e991317", "commitAfterChange": "7f08797ece011ff765e98635323d59811363df5b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t@Override \tpublic void run(RunNotifier notifier)", "signatureAfterChange": "  \t@Override \tpublic void run(RunNotifier notifier)", "diff": ["-\t\tresult.addListener(getListener(notifier));", "+\t\tresult.addListener(createAdaptingListener(notifier));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "819741d50af789f4f8ffe59e20d1698f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/RunListener.java", "commitBeforeChange": "d148bce8682505082a3cc634acbd36ac13a10c9a", "commitAfterChange": "497ebf11c284bcc2b32eecc4a063589b4f17d250", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void testAssumptionFailed(Description description, \t\t\tAssumptionViolatedException e)", "signatureAfterChange": " \tpublic void testAssumptionInvalid(Description description, \t\t\tAssumptionViolatedException e)", "diff": ["-", "-\tpublic void testAssumptionFailed(Description description,", "+\t */", "+\tpublic void testAssumptionInvalid(Description description,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81b3be986a2545c03733e12b0613fdfc", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/manipulation/SingleMethodTest.java", "commitBeforeChange": "a6368e40e787e7a23c9f1e58d6a47bf9fa2d0a2c", "commitAfterChange": "94ebd93396420bcd03ab99a352e38df822d59f67", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t@Test public void parameterizedFilterToSingleMethod() throws Exception", "signatureAfterChange": "  \t@Test public void parameterizedFilterToSingleMethod() throws Exception", "diff": ["+", "+\t@Test public void parameterizedFilterToSingleMethod() throws Exception {", "+\t\tcount = 0;", "+\t\tRunner runner = Request.method(ParameterizedOneTimeSetup.class,", "+\t\t\t\t\"one[0]\").getRunner();", "+\t\tResult result = new JUnitCore().run(runner);", "+", "+\t\tassertEquals(1, result.getRunCount());", "+\t}", "-", "-\t@Test public void parameterizedFilterToSingleMethod() throws Exception {", "-\t\tRunner runner = Request.method(ParameterizedOneTimeSetup.class,", "-\t\t\t\t\"one[0]\").getRunner();", "-\t\tResult result = new JUnitCore().run(runner);", "-", "-\t\tassertEquals(1, result.getRunCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81ce1c9ee88cce7133a80a24f2ad5743", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/AssertionTest.java", "commitBeforeChange": "88f0fe3ced24506ddf9791f7a088163f4e7b1f20", "commitAfterChange": "3d7fee93ddc21a6e849c36d5ae58b37b3d189665", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \t@Test public void arraysEqual()", "signatureAfterChange": " \t \t@Test public void arraysEqual()", "diff": ["-\t\tassertEquals(objects1, objects2);", "+\t\tassertArrayEquals(objects1, objects2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81fef80b78fc976e48f8572ae03a9e59", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "5af049cac0c976c586d955607fa459aacb778d3c", "commitAfterChange": "09fcafc04e07b3481ef60159de2d6ae3464b98ac", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t\tprivate Object[] computeParams() throws Exception", "signatureAfterChange": "  \t\tprivate Object[] computeParams() throws Exception", "diff": ["-\t\t\t\t\t\tgetTestClass().getName(), getParametersMethod(fTestClass).getName()));", "-\t\t\t\t// TODO: (Dec 10, 2007 9:22:07 PM) Should fTestClass be protected?", "-", "+\t\t\t\t\t\tgetTestClass().getName(), getParametersMethod(", "+\t\t\t\t\t\t\t\tgetTestClass()).getName()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "823cf0f7ea6dc685f349d35a8ec04cbb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/categories/CategoriesMark2Test.java", "commitBeforeChange": "04189a834a01ae7ff3189bfa869e90d1a7f83acf", "commitAfterChange": "1bbab715de4c64943948ecc3739c8d5569378672", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \t\tpublic CategoryFilter2(Class<?> included)", "signatureAfterChange": "  \t\tpublic CategoryFilter(Class<?> included)", "diff": ["-\t\tpublic CategoryFilter2(Class<?> included) {", "+\t\tpublic CategoryFilter(Class<?> included) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "824657496a6d5a306d69c5b7c0bc94d2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "979e8abbe974e8847668f5887403da78a6165ebc", "commitAfterChange": "1fcd990f60518c941a44bae2596392021614a20b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t\t@Override \t\tprotected Statement classBlock(RunNotifier notifier)", "signatureAfterChange": "  \t\t@Override \t\tprotected Statement classBlock(RunNotifier notifier)", "diff": ["-\t\t\treturn runChildren(notifier);", "+\t\t\treturn childrenInvoker(notifier);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8249f127790baa4e5c0dcce2e39abf7c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/validation/classes/HasBeforeClassButTestIsIgnored.java", "commitBeforeChange": "fd1ef3ca8069bd149ca63c9660587918aa28c7cd", "commitAfterChange": "7566c1da93069c00c961e37979db44ce6aa00830", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setUpClass()", "signatureAfterChange": "      @BeforeClass     public static void beforeClass()", "diff": ["-    public static void setUpClass() {", "+    public static void beforeClass() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "827672b31a11ebb67fc0576eb9f629ed", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/FilterFactoriesTest.java", "commitBeforeChange": "56193048f411846a58c0e0377a5f1ccfecd3d2f9", "commitAfterChange": "826529633261161edd2d9dc0f866b2c3c0420514", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r     @Test\r     public void shouldCreateFilter() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldCreateFilter() throws Exception", "diff": ["-                FilterFactoryStub.class, new FilterFactoryParams(createSuiteDescription(testName.getMethodName())));\r", "+                FilterFactoryStub.class, new FilterFactoryParams());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8296b031695ec5c8f127b1ab260f1031", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/tests/JUnitCoreTest.java", "commitBeforeChange": "398bf2652efda067329f9fdedd13cd8e466c3be4", "commitAfterChange": "0495321897d3aeffb0a5e63660b2b2d842d6e5df", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate void runClass(String className, int returnCode) throws IOException, InterruptedException", "signatureAfterChange": "  \tprivate void runClass(String className, int returnCode) throws IOException, InterruptedException", "diff": ["-\t\tString classPath= getClass().getClassLoader().getResource(\".\").getFile() + \";\" + System.getProperty(\"java.class.path\");", "+\t\tString classPath= getClass().getClassLoader().getResource(\".\").getFile() + File.pathSeparator + System.getProperty(\"java.class.path\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "829c9763394c01b92f17a83108f19996", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/framework/TestSuite.java", "commitBeforeChange": "a0f0ee1b3f72d9361eb09b3a25156c69a748aa47", "commitAfterChange": "478f7f9217cf5da219a7ba298e3a87f405378194", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void addTest(Test test)", "signatureAfterChange": " \tpublic void addTest(Test test)", "diff": ["-\t\tfTests.addElement(test);", "+\t\tfTests.add(test);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "830c844c62c048eebbf7a864a7bb4d9f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/assertion/MultipleFailureExceptionTest.java", "commitBeforeChange": "91a7ff28a3879d4a409176e092887924700d08b6", "commitAfterChange": "cb818f191ea2b9fe563aa20c581b16f3f23b7c4c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void assertEmptyDoesNotThrowForEmptyList() throws Throwable", "signatureAfterChange": "      @Test     public void assertEmptyDoesNotThrowForEmptyList() throws Exception", "diff": ["-    public void assertEmptyDoesNotThrowForEmptyList() throws Throwable {", "+    public void assertEmptyDoesNotThrowForEmptyList() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "836d30fc2ad2f84a3819163fd0488bf9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "4dcf3a499652b3c089d91e209c6f01313115ff76", "commitAfterChange": "a916d4133c7e394130d7953da427aae9917ab92c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic int getUnrunnableCount()", "signatureAfterChange": "  \tpublic int getFailedAssumptionCount()", "diff": ["-\tpublic int getUnrunnableCount() {", "+\tpublic int getFailedAssumptionCount() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83d16abeb71482e74e006a075696522e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/TheoriesPerformanceTest.java", "commitBeforeChange": "5042f695491027730cca2918616399d869de3973", "commitAfterChange": "47114275293f28be0f1cb9606a43ef1fe3173cb3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t@Test \tpublic void tryCombinationsQuickly()", "signatureAfterChange": " \t@Test \tpublic void tryCombinationsQuickly()", "diff": ["+\t\tassumeTrue(TESTING_PERFORMANCE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84027f76ed4e1141a934b9b60dc82015", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "commitAfterChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprotected void runMethods(final RunNotifier notifier)", "signatureAfterChange": "  \tprotected void runMethods(final RunNotifier notifier)", "diff": ["-\t\tfor (Method method : fTestMethods)", "+\t\tfor (TestMethod method : fTestMethods)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "845d16f0dba05b4ebf5de3d83d7f231a", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprotected TestResult start(String args[]) throws Exception", "signatureAfterChange": " \tprotected TestResult start(String args[]) throws Exception", "diff": ["-\t\t\t\tSystem.out.println(\"JUnit \"+Version.id()+\" by Kent Beck and Erich Gamma\");", "+\t\t\t\tSystem.err.println(\"JUnit \"+Version.id()+\" by Kent Beck and Erich Gamma\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8460ffd0d5b831e8815329f23f39f055", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TemporaryFolder.java", "commitBeforeChange": "fea0643ecd075f3c231c77774fe7e8494f696867", "commitAfterChange": "70fe94d031c7066899fc464cd4171db0884f1356", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic File newFolder(String folderName)", "signatureAfterChange": " \tpublic File newFolder(String folderName)", "diff": ["-\t\tFile file= new File(folder, folderName);", "+\t\tFile file= new File(getRoot(), folderName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84b9d8c42fa523a03338b00f0a2ba02b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "ea96d2e30b23dbcdb5959f5732f4930eb2536f37", "commitAfterChange": "b28fe09d1a54955bed2e4db5352c14fae195a418", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private StatementThread evaluateStatement() throws InterruptedException", "signatureAfterChange": "      private StatementThread evaluateStatement() throws InterruptedException", "diff": ["+        thread.setDaemon(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84bf0d56aa7d0c5b5d9478881c82e897", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/EventCollector.java", "commitBeforeChange": "df70c1087de9d3827656ede187371bbe29d2a974", "commitAfterChange": "a538d25ae50887dc9395f2f59ad5040752c0ec4f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \t@Override \tpublic void testAssumptionFailure(Failure failure)", "signatureAfterChange": "  \t@Override \tpublic void testAssumptionFailure(Failure failure)", "diff": ["-", "-\t@Override", "-\tpublic void testAssumptionFailure(Failure failure) {", "-\t\tassumptionFailures.add(failure);", "-\t}", "+", "+\t@Override", "+\tpublic void testAssumptionFailure(Failure failure) {", "+\t\tfAssumptionFailures.add(failure);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84d04607df6dd18521cba6a620438d62", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/manipulation/FilterableTest.java", "commitBeforeChange": "0b1337a4536d95480ef94b27310cde48a552d634", "commitAfterChange": "d8b6eb74e0e3466d66c9ff75e55f087c09a959b1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t\tpublic FilteredTest(int x)", "signatureAfterChange": "  \t\tpublic FilteredTest(int x)", "diff": ["-", "-\t\t\tthis.x= x;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "850eb559eb4d111910cdbd4ce4456b38", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/WithParameterSupplier.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void shouldPickUpDataPointsFromParameterSupplier() throws Exception", "signatureAfterChange": "      @Test     public void shouldPickUpDataPointsFromParameterSupplier() throws Throwable", "diff": ["-    public void shouldPickUpDataPointsFromParameterSupplier() throws Exception {", "+    public void shouldPickUpDataPointsFromParameterSupplier() throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8517cecaf09ec2a94ed64c5911462854", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/TestRuleTest.java", "commitBeforeChange": "751f75986b11336ac8310d73c89003b0b09ecb92", "commitAfterChange": "8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t\tpublic Statement apply(Statement base, Description description)", "signatureAfterChange": "  \t\t@Override \t\tprotected Statement apply(Statement base, Description description)", "diff": ["-\t\tpublic Statement apply(Statement base, Description description) {", "+\t\t@Override", "+\t\tprotected Statement apply(Statement base, Description description) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8524c54279c35cee6d785c3ff34c32d7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "2d13004b3fbba2fe6ed919bbc98f2e3f69bb4809", "commitAfterChange": "1014436692b0829a7287fbab81ef8720309d7945", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t@Override \tprotected void collectInitializationErrors(List<Throwable> errors)", "signatureAfterChange": "  \t@Override \tprotected void collectInitializationErrors(List<Throwable> errors)", "diff": ["+\t\tvalidateNoNonStaticInnerClass(errors);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8571f52a4dfa15b4ab436e580d264af2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactory.java", "commitBeforeChange": "56193048f411846a58c0e0377a5f1ccfecd3d2f9", "commitAfterChange": "826529633261161edd2d9dc0f866b2c3c0420514", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r         public FilterNotCreatedException(Exception exception)", "signatureAfterChange": "\r         public FilterNotCreatedException(Exception exception)", "diff": ["-    static class FilterNotCreatedException extends FilterFactories.FilterFactoryNotCreatedException {\r", "+    public static class FilterNotCreatedException extends ClassNotFoundException {\r", "-            super(exception);\r", "+            super(exception.getMessage(), exception);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "857f2af926937ffe510fc4834475d97a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/interceptor/TestWatchman.java", "commitBeforeChange": "734ab5187c068599352e5fdc7374c1334d484fef", "commitAfterChange": "54917b88aab026dabb4541276ed875117c1e1faa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic Statement intercept(final Statement base, \t\t\tfinal FrameworkMethod method, Object target)", "signatureAfterChange": " \tpublic Statement apply(final Statement base, final FrameworkMethod method, \t\t\tObject target)", "diff": ["-public class TestWatchman implements StatementInterceptor {", "-\tpublic Statement intercept(final Statement base,", "-\t\t\tfinal FrameworkMethod method, Object target) {", "+public class TestWatchman implements MethodRule {", "+\tpublic Statement apply(final Statement base, final FrameworkMethod method,", "+\t\t\tObject target) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85b4c34fdee28d7ecb14842f0840fb74", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestClass.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tpublic List<TestMethod> getBefores()", "signatureAfterChange": "  \t@Override \tpublic List<FrameworkMethod> getBefores()", "diff": ["-\tpublic List<TestMethod> getBefores() {", "+\tpublic List<FrameworkMethod> getBefores() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85dc395585400b9d650687be3f815f6a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/InaccessibleBaseClassTest.java", "commitBeforeChange": "1357ec0cc6f439e3e4a9d818138b36b9347f0a3d", "commitAfterChange": "141a144b3d4aca9a1f39f92c1d697a249e991317", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\t \t@Test(expected=InitializationError.class) \tpublic void inaccessibleBaseClassIsCaughtAtValidation() throws InitializationError", "signatureAfterChange": "\t \t@Test(expected=InitializationError.class) \tpublic void inaccessibleBaseClassIsCaughtAtValidation() throws InitializationError", "diff": ["-\t\tmethodValidator.validateAllMethods();", "+\t\tmethodValidator.validateMethodsForDefaultRunner();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85ef8955b8f0d3e3a1c9eae6f6310ff3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/requests/ClassRequest.java", "commitBeforeChange": "6ff2381af213bf699e62244315debec66b373d81", "commitAfterChange": "67e3edf20613b1278f4be05353b31b5129e21882", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic ClassRequest(Class<?> testClass, SuiteBuilder builder, boolean canUseSuiteMethod)", "signatureAfterChange": "  \tpublic ClassRequest(Class<?> testClass, boolean canUseSuiteMethod)", "diff": ["-", "-\tpublic ClassRequest(Class<?> testClass, SuiteBuilder builder, boolean canUseSuiteMethod) {", "+\tpublic ClassRequest(Class<?> testClass, boolean canUseSuiteMethod) {", "-\t\tfSuiteBuilder= builder;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85f65f48a8e264a3ba84438d6016994e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/assertion/BothTest.java", "commitBeforeChange": "fd925dc6b23c4fa68de2eab06dc162c4f06ff224", "commitAfterChange": "7dd6711cb9e552cee8091893d4085fdc3f9996b0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Test \tpublic void eitherPasses()", "signatureAfterChange": "  \t@Test \tpublic void eitherPasses()", "diff": ["-\t\tassertThat(3, either(is(3)).or(is(4)));", "+\t\tassertThat(3, either(is(3)).or(matches(is(4))));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8607dc772c5c88e3810dedeed8ac6a3b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tprotected List<TestMethod> computeTestMethods()", "signatureAfterChange": "  \t@Override \tprotected List<FrameworkMethod> computeTestMethods()", "diff": ["-\tprotected List<TestMethod> computeTestMethods() {", "+\tprotected List<FrameworkMethod> computeTestMethods() {", "-\t\tList<TestMethod> testMethods= super.computeTestMethods();", "+\t\tList<FrameworkMethod> testMethods= super.computeTestMethods();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "863a0e8474d9bdabb053912ef8910155", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/ErrorReportingRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public Description getDescription()", "signatureAfterChange": "      @Override     public Description getDescription()", "diff": ["-        Description description = Description.createSuiteDescription(fTestClass);", "-        for (Throwable each : fCauses) {", "+        Description description = Description.createSuiteDescription(testClass);", "+        for (Throwable each : causes) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8687f33c95e39aa1928bc22710f915a7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/ExpectException.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void evaluate() throws Exception", "signatureAfterChange": "      @Override     public void evaluate() throws Exception", "diff": ["-            fNext.evaluate();", "+            next.evaluate();", "-            if (!fExpected.isAssignableFrom(e.getClass())) {", "+            if (!expected.isAssignableFrom(e.getClass())) {", "-                        + fExpected.getName() + \"> but was<\"", "+                        + expected.getName() + \"> but was<\"", "-                    + fExpected.getName());", "+                    + expected.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86a81df4c7f144acc6b4b784c86e2a4d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java", "commitBeforeChange": "e48f6d40bf755dba2da4c29a4b7e763637b61738", "commitAfterChange": "623bd92d37786cdc869b219569740f96869f5b9d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\t@Test public void two()", "signatureAfterChange": " \t\t@Test public void two() throws InterruptedException", "diff": ["-\t\t@Test public void two() {", "+\t\t@Test public void two() throws InterruptedException {", "+\t\t\tfSynchronizer.countDown();", "+\t\t\tfSynchronizer.await();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86c6e47ebcdc12893a5631e91299d938", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/interceptor/TestWatchman.java", "commitBeforeChange": "8e313a1e58a56694c0441b2fa60974fa8e1bfe31", "commitAfterChange": "409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic Statement intercept(final Statement base, \t\t\tfinal FrameworkMethod method, Object target)", "signatureAfterChange": " \tpublic Statement apply(final Statement base, final FrameworkMethod method, \t\t\tObject target)", "diff": ["-public class TestWatchman implements StatementInterceptor {", "-\tpublic Statement intercept(final Statement base,", "-\t\t\tfinal FrameworkMethod method, Object target) {", "+public class TestWatchman implements MethodRule {", "+\tpublic Statement apply(final Statement base, final FrameworkMethod method,", "+\t\t\tObject target) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86ef1fa9f478b8222174348415289447", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "cc8497f28e1d5a46d7940a0b36556154c83d6f7a", "commitAfterChange": "e9d4de8e15255b03b60e935390e517d4de90a73b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void addSinglePointMethods(ParameterSignature sig, List<PotentialAssignment> list)", "signatureAfterChange": "      private void addSinglePointMethods(ParameterSignature sig, List<PotentialAssignment> list)", "diff": ["-            Object value;", "-            ", "-            try {", "-                value = dataPointMethod.invokeExplosively(null);", "-            } catch (Throwable e) {", "-                // ignore and move on", "-                continue;", "-            }", "+            if (sig.canPotentiallyAcceptType(dataPointMethod.getReturnType())) {", "+                Object value;", "-            if (sig.canAcceptValue(value)) {", "-                list.add(PotentialAssignment.forValue(dataPointMethod.getName(), value));", "+                try {", "+                    value = dataPointMethod.invokeExplosively(null);", "+                } catch (Throwable e) {", "+                    // ignore and move on", "+                    continue;", "+                }", "+                    ", "+                if (sig.canAcceptValue(value)) {", "+                    list.add(PotentialAssignment.forValue(dataPointMethod.getName(), value));", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86f5ac80e905dd50cfb51f7a88b747ea", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/MethodRulesTest.java", "commitBeforeChange": "751f75986b11336ac8310d73c89003b0b09ecb92", "commitAfterChange": "8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \t\t\t \t\tpublic Statement apply(final Statement base, final Description description)", "signatureAfterChange": " \t\t\t \t\t@Override \t\tprotected Statement apply(final Statement base, final Description description)", "diff": ["-\t\tpublic Statement apply(final Statement base, final Description description) {", "+\t\t@Override", "+\t\tprotected Statement apply(final Statement base, final Description description) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8705529031deedcbb1268a62b5db9b43", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "1e54b68d2fe7c4238993b360c7be6fbb05d30528", "commitAfterChange": "e6769d4009db8030661815965e2e22829a4619ff", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t@Override \tprotected void collectInitializationErrors(List<Throwable> errors)", "signatureAfterChange": "  \t@Override \tprotected void collectInitializationErrors(List<Throwable> errors)", "diff": ["+\t\tvalidateFields(errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87709afd16a0178c7a7880f380829fd4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestElement.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic abstract List<TestMethod> getAfters();", "signatureAfterChange": " \tpublic abstract List<FrameworkMethod> getAfters();", "diff": ["-\tpublic abstract List<TestMethod> getAfters();", "+\tpublic abstract List<FrameworkMethod> getAfters();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87ae5029a71097e39fb76d18ba6634a4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/JUnitCommandLineParserTest.java", "commitBeforeChange": "56193048f411846a58c0e0377a5f1ccfecd3d2f9", "commitAfterChange": "826529633261161edd2d9dc0f866b2c3c0420514", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \r     @Test\r     public void shouldCreateFailureUponUnknownTestClass() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldCreateFailureUponUnknownTestClass() throws Exception", "diff": ["-                containsString(\"initializationError: \"),\r", "-                containsString(ClassNotFoundException.class.getName()),\r", "+                containsString(\"initializationError:\"),\r", "+                containsString(IllegalArgumentException.class.getName()),\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87dcd82344696f6285eb443d4952c511", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "67e3edf20613b1278f4be05353b31b5129e21882", "commitAfterChange": "37a611801fbea6ecc9b6356d9616e761c8b59b91", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate void addFields(ParameterSignature sig, \t\t\tList<PotentialAssignment> list)", "signatureAfterChange": "  \tprivate void addFields(ParameterSignature sig, \t\t\tList<PotentialAssignment> list)", "diff": ["-\t\t\t\t\taddArrayValues(list, getStaticFieldValue(field));", "+\t\t\t\t\taddArrayValues(field.getName(), list, getStaticFieldValue(field));", "-\t\t\t\t\t\t\t.forValue(getStaticFieldValue(field)));", "+\t\t\t\t\t\t\t.forValue(field.getName(), getStaticFieldValue(field)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87e448942fa9678b6a67ca5bdfaee25c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCore.java", "commitBeforeChange": "8c91ac2cb9da29edf75ae22dba1e1aaa60275176", "commitAfterChange": "432e3e27df0b072f3bab066cd33214913f4c7f32", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic Result run(Class<?>... classes)", "signatureAfterChange": " \tpublic Result run(Class<?>... classes)", "diff": ["-\t\treturn run(Request.classes(classes));", "+\t\treturn run(Request.classes(new Executioner(), classes));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87e9f3b5d47ee02342208e22b1b899c2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "9a2e993c544a2cd1a0b93c9f59340910f51366b4", "commitAfterChange": "f3c211455b9e09be36e4bf7ccc499fbdd35a527a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \t@Test \tpublic void saffSqueezeExample() throws Exception", "signatureAfterChange": "  \t@Test \tpublic void saffSqueezeExample() throws Exception", "diff": ["-\t\tFilter filter= Filter.matchDescription(method);", "+\t\tFilter filter= Filter.matchMethodDescription(method);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87f07d718276c915400b3a53911777a5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void testStarted(Description description)", "signatureAfterChange": "      @Override     public void testStarted(Description description)", "diff": ["-        fWriter.append('.');", "+        writer.append('.');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87f63ffa0c8eb6aa30833574e98c820f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private PrintStream getWriter()", "signatureAfterChange": "      private PrintStream getWriter()", "diff": ["-        return fWriter;", "+        return writer;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "880f0c3c6295c0ee4120c1bf465f2d92", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "34a0ecb4ffb3cb8d33b60c222c29145d017f02c9", "commitAfterChange": "7cd277620b4c888ae4101bb3f4768af83b85313a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprotected Statement withAfterClasses(Statement statement)", "signatureAfterChange": " \tprotected Statement withAfterClasses(Statement statement)", "diff": ["-\t\tList<FrameworkMethod> afters= fTestClass", "+\t\tList<FrameworkMethod> afters= getTestClass()", "-\t\treturn afters.isEmpty() ? statement : ", "-\t\t\tnew RunAfters(statement, afters, null);", "+\t\treturn afters.isEmpty() ? statement : new RunAfters(statement, afters,", "+\t\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8815fc2575bfc73c425643c2548b11f7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "96bb03c2aecc818b7a77f9bb7d8684a16d8a80a7", "commitAfterChange": "f634102cf058ed5761b2e4ef66761e2f397b6160", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate StatementThread evaluateStatement() throws InterruptedException", "signatureAfterChange": "  \tprivate StatementThread evaluateStatement() throws InterruptedException", "diff": ["+\t\tif (!thread.fFinished) {", "+\t\t\tthread.recordStackTrace();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "884e16d2004b9455f8809317e7ca9e8f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/WithNamedDataPoints.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "          @Test     public void onlyUseSpecificDataPointsIfSpecified() throws Exception", "signatureAfterChange": "          @Test     public void onlyUseSpecificDataPointsIfSpecified() throws Throwable", "diff": ["-    public void onlyUseSpecificDataPointsIfSpecified() throws Exception {", "+    public void onlyUseSpecificDataPointsIfSpecified() throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8851fdf1efde9c86e9275bc2ec734914", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "4081076e513e84bb2376f889d4108e64e9a18653", "commitAfterChange": "a58514aec7e843339be24980e92aeeb759327ffb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t\tTimeout(Link next)", "signatureAfterChange": "  \t\tTimeout(Anchor next)", "diff": ["-\t\tTimeout(Link next) {", "+\t\tTimeout(Anchor next) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "885cdc7cdf0efc96e7a9c579f110c08a", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "1e752dcb0a967bcb47fae4b12fb8765e79571e69", "commitAfterChange": "bfc94ee739d62127c7477300b26127bd560765a1", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "  \tTestCollector createTestCollector()", "signatureAfterChange": "  \tTestCollector createTestCollector()", "diff": ["-\t\treturn new SimpleClassPathTestCollector();", "+\t\treturn new SimpleTestCollector();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88e0c5213c60d6e27798a507ef5beb5b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "commitAfterChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tprotected List<Method> getTestMethods()", "signatureAfterChange": "  \t@Override \tprotected List<TestMethod> getTestMethods()", "diff": ["-\tprotected List<Method> getTestMethods() {", "+", "+\t@Override", "+\tprotected List<TestMethod> getTestMethods() {", "-\t\tList<Method> testMethods= super.getTestMethods();", "+\t\tList<TestMethod> testMethods= super.getTestMethods();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88f0bc3b75196630c3fd64c7dc3ac2d5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "7ceaea00ee1af6168d737b785460a803d6f3c50c", "commitAfterChange": "b067fc9b47471e5b3561b545cb63ea1ec892922d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic Parameterized(Class<?> klass) throws Throwable", "signatureAfterChange": "  \tpublic Parameterized(Class<?> klass) throws Throwable", "diff": ["-\t\tsuper(klass, runners(klass, getParametersList(new TestClass(klass))));", "+\t\tsuper(klass, runners(klass));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "890321c5976027a83149239890e47a06", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Suite.java", "commitBeforeChange": "a916d4133c7e394130d7953da427aae9917ab92c", "commitAfterChange": "d148bce8682505082a3cc634acbd36ac13a10c9a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic Suite(Class<?> klass) throws InitializationError", "signatureAfterChange": "  \tpublic Suite(Class<?> klass, SuiteBuilder builder) throws InitializationError", "diff": ["-\tpublic Suite(Class<?> klass) throws InitializationError {", "+\tpublic Suite(Class<?> klass, SuiteBuilder builder) throws InitializationError {", "-\t\tthis(klass, getAnnotatedClasses(klass));", "+\t\tthis(builder, klass, getAnnotatedClasses(klass));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ac73df7eba1ab920e24911ec0d28929", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "8dd7600e8634709c2e673e825e3f8cea58ff3c65", "commitAfterChange": "4de916220b9e70d08eccf7e7e292fe9e54157e92", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void addChild(Description description)", "signatureAfterChange": " \tpublic void addChild(Description description)", "diff": ["-\t\tdescription.setParent(this);", "+\t\t// description.setParent(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8add520d0f0e713e085ea2ce2c509a79", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestElement.java", "commitBeforeChange": "a4c68872a91681139d404825c2bb04bd5ba804dd", "commitAfterChange": "f0ef837a40922ac08c608661385abf71732975d3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic boolean runBefores(EachTestNotifier roadie, Object target)", "signatureAfterChange": "  \tpublic boolean runBefores(FailureListener listener, Object target)", "diff": ["-\tpublic boolean runBefores(EachTestNotifier roadie, Object target) {", "-\t\t// TODO: (Oct 5, 2007 11:29:38 AM) just throw the exception!  Should work the same way", "-\t", "+\tpublic boolean runBefores(FailureListener listener, Object target) {", "-\t\t\troadie.addFailure(e);", "+\t\t\tlistener.addFailure(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8aeb9ff687dc5290841d0331a2cb5e30", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java", "commitBeforeChange": "017ce048adbc360fed2e8d7ae55dfbb3dbdc76dc", "commitAfterChange": "4e2455b1f142bdf8f07383082638718695e51224", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tprivate Matcher<Iterable<Failure>> empty()", "signatureAfterChange": "  \tprivate Matcher<Iterable<Failure>> empty()", "diff": ["-\t\treturn everyItem(nullValue);", "+\t\treturn each(nullValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b17a8a47ca2802ef2edc4452e5eed30", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/SynchronizedRunListener.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void testFailure(Failure failure) throws Exception", "signatureAfterChange": "      @Override     public void testFailure(Failure failure) throws Exception", "diff": ["-        synchronized (fMonitor) {", "-            fListener.testFailure(failure);", "+        synchronized (monitor) {", "+            listener.testFailure(failure);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b8dc6ecd9d2225520f25cfa2696f792", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/ComparisonFailure.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Override     public String getMessage()", "signatureAfterChange": "     @Override     public String getMessage()", "diff": ["-        return new ComparisonCompactor(MAX_CONTEXT_LENGTH, expected, actual).compact(super.getMessage());", "+        return new ComparisonCompactor(MAX_CONTEXT_LENGTH, fExpected, fActual).compact(super.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c0d95fac80945a1d4973e578ca08e58", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/TestClassRunner.java", "commitBeforeChange": "1357ec0cc6f439e3e4a9d818138b36b9347f0a3d", "commitAfterChange": "141a144b3d4aca9a1f39f92c1d697a249e991317", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected void validate(MethodValidator methodValidator)", "signatureAfterChange": " \tprotected void validate(MethodValidator methodValidator)", "diff": ["-\t\tmethodValidator.validateAllMethods();", "+\t\tmethodValidator.validateMethodsForDefaultRunner();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c1350d78e90cd88bcc92fbcb28d9542", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/interceptor/ExpectedExceptionInterceptorTest.java", "commitBeforeChange": "a423117429dc71bf3068eeae38c6443672beda7f", "commitAfterChange": "7c6809f47fde700f345ded8faaff468dc2d53c08", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \t@Test \tpublic void failsWithMatcher()", "signatureAfterChange": "  \t@Test \tpublic void failsWithMatcher()", "diff": ["-\t\tassertThat(testResult(ExpectsMatcherFails.class),", "+\t\tassertThat(testResult(ExpectedMessageMatcherFails.class),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c24989b184bbf23ce00e5a5d1a9092e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "commitAfterChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tprotected Link possiblyExpectingExceptions(TestMethod method, Link next)", "signatureAfterChange": "  \tprotected Statement possiblyExpectingExceptions(TestMethod method, Statement next)", "diff": ["-\tprotected Link possiblyExpectingExceptions(TestMethod method, Link next) {", "+\tprotected Statement possiblyExpectingExceptions(TestMethod method, Statement next) {", "-\t\t\t? new ExpectingException(next, method.getExpectedException())", "+\t\t\t? new ExpectException(next, method.getExpectedException())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c6c3a8ef57b1743e31747a13948a7be", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestTimedOutException.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public long getTimeout()", "signatureAfterChange": "     public long getTimeout()", "diff": ["-        return fTimeout;", "+        return timeout;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cc6e519f933cd9a4b26eab8ebd13f5e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "a1813f62876a6c7227ec5c866b621e01cda79664", "commitAfterChange": "97afc5e205e1c6ac0f5a9aefabed92d58d88ab81", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate static <T> Runner parallelize(Runner runner)", "signatureAfterChange": "  \tprivate static <T> Runner parallelize(Runner runner)", "diff": ["-\t\t\t((ParentRunner<?>) runner).setRunnerInterceptor(new RunnerInterceptor() {", "+\t\t\t((ParentRunner<?>) runner).setScheduler(new RunnerScheduler() {", "-\t\t\t\tpublic void runChild(final Runnable childStatement) {", "+\t\t\t\tpublic void schedule(final Runnable childStatement) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cc7d1c7dba90e65ee2e97a276f66558", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/ComparisonCriteria.java", "commitBeforeChange": "d0f619bfbdf4595db3e30fa7a27d7a6fdd08723a", "commitAfterChange": "0dc3de7fbcf997ca8465ed9e7793a0b4f730121b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic void internalArrayEquals(String message, Object expecteds, \t\t\tObject actuals) throws ArrayComparisonFailure", "signatureAfterChange": " \tpublic void arrayEquals(String message, Object expecteds, \t\t\tObject actuals) throws ArrayComparisonFailure", "diff": ["-\tpublic void internalArrayEquals(String message, Object expecteds,", "+\tpublic void arrayEquals(String message, Object expecteds,", "-\t\t\t\t\tinternalArrayEquals(message, expected, actual);", "+\t\t\t\t\tarrayEquals(message, expected, actual);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d14a33543af040790b0dd92cdcba9d0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/Failure.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Description getDescription()", "signatureAfterChange": "     public Description getDescription()", "diff": ["-        return fDescription;", "+        return description;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d52df529068c2fbd903afb5b3d60939", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/TestIntrospector.java", "commitBeforeChange": "88f0fe3ced24506ddf9791f7a088163f4e7b1f20", "commitAfterChange": "3d7fee93ddc21a6e849c36d5ae58b37b3d189665", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic boolean isIgnored(Method method)", "signatureAfterChange": "  \tpublic boolean isIgnored(Method eachMethod)", "diff": ["-\tpublic boolean isIgnored(Method method) {", "-\t\treturn method.getAnnotation(Ignore.class) != null;", "+\tpublic boolean isIgnored(Method eachMethod) {", "+\t\treturn eachMethod.getAnnotation(Ignore.class) != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d55050d9ccb8ea6098ee983b48f1368", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/interceptor/Timeout.java", "commitBeforeChange": "8e313a1e58a56694c0441b2fa60974fa8e1bfe31", "commitAfterChange": "409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic Statement intercept(Statement base, FrameworkMethod method, Object target)", "signatureAfterChange": "  \tpublic Statement apply(Statement base, FrameworkMethod method, Object target)", "diff": ["-\tpublic Statement intercept(Statement base, FrameworkMethod method, Object target) {", "+\tpublic Statement apply(Statement base, FrameworkMethod method, Object target) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d595318b192aef34a9f0ca4a7afe20f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/junit/tests/framework/ComparisonCompactorTest.java", "commitBeforeChange": "b2d26ecd55eb952ad4dcd281ac3c4db77fbf9ba0", "commitAfterChange": "cfe6afadc81b72449c8b0cb96d51aa57f7a593b7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void testComparisonErrorOverlapingMatches2()", "signatureAfterChange": "      public void testComparisonErrorOverlappingMatches2()", "diff": ["-    public void testComparisonErrorOverlapingMatches2() {", "+    public void testComparisonErrorOverlappingMatches2() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dd99e508f4c7b16bce999206c566efb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/AssertionTest.java", "commitBeforeChange": "88f0fe3ced24506ddf9791f7a088163f4e7b1f20", "commitAfterChange": "3d7fee93ddc21a6e849c36d5ae58b37b3d189665", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \t@Test public void arraysActualNullMessage()", "signatureAfterChange": " \t \t@Test public void arraysActualNullMessage()", "diff": ["-\t\t\tassertEquals(\"not equal\", new Object[] {new Object()}, null);", "+\t\t\tassertArrayEquals(\"not equal\", (new Object[] {new Object()}), null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ecc26aaa5ca6875255698ca40db8cb1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/CategoryValidator.java", "commitBeforeChange": "f5e7e1ff180bb17e4f9df702a038e06a974f78f6", "commitAfterChange": "fe5d86eba71a1f59dbbed09de4add01cc20420c0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private void addErrorMessage(List<Throwable> errors, Class clazz)", "signatureAfterChange": "      private void addErrorMessage(List<Exception> errors, Class clazz)", "diff": ["-", "-    private void addErrorMessage(List<Throwable> errors, Class clazz) {", "+    private void addErrorMessage(List<Exception> errors, Class clazz) {", "-        errors.add(new Throwable(message));", "+        errors.add(new Exception(message));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ecfe4a27c275610571f1c6735b46453", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "734ab5187c068599352e5fdc7374c1334d484fef", "commitAfterChange": "54917b88aab026dabb4541276ed875117c1e1faa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate MaxCore(File storedResults)", "signatureAfterChange": "  \tprivate MaxCore(File storedResults)", "diff": ["-\t\tfHistory = MaxHistory.locallyStored(storedResults);", "+\t\tfHistory = MaxHistory.forFolder(storedResults);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f70f9a3381b340fe7a3110c3bb4aeb6", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 84, "signatureBeforeChange": " \t \tprotected void clearStatus()", "signatureAfterChange": " \t \tprotected void clearStatus()", "diff": ["-\t\tfStatusLine.setText(\"\");", "+\t\tfStatusLine.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f7bb4f3c6793c1b960a6c9fa4c3e580", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      private Test getTest()", "signatureAfterChange": "      private Test getTest()", "diff": ["-        return fTest;", "+        return test;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f922f4ba9c23e3ca75b6051792b412d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      protected Collection<FrameworkMethod> getDataPointsMethods(ParameterSignature sig)", "signatureAfterChange": "      protected Collection<FrameworkMethod> getDataPointsMethods(ParameterSignature sig)", "diff": ["-        return fClass.getAnnotatedMethods(DataPoints.class);        ", "+        return clazz.getAnnotatedMethods(DataPoints.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9019856c170ffc575d126b4edfca5819", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/JUnitCommandLineParserTest.java", "commitBeforeChange": "40b8761099da900ad219fe9b06060cda1e212f83", "commitAfterChange": "b01900fddca5ff54258e621025ccdbbc75f880f1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r     @Test\r     public void shouldCreateFailureUponUnfoundFilterFactory() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldCreateFailureUponUnfoundFilterFactory() throws Exception", "diff": ["-        assertThat(exception, instanceOf(FilterFactoryFactory.FilterFactoryNotCreatedException.class));\r", "+        assertThat(exception, instanceOf(FilterFactories.FilterFactoryNotCreatedException.class));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "906479e126eb9094657a33596d7500b7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "8e313a1e58a56694c0441b2fa60974fa8e1bfe31", "commitAfterChange": "409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate MaxCore(File storedResults)", "signatureAfterChange": "  \tprivate MaxCore(File storedResults)", "diff": ["-\t\tfHistory = MaxHistory.locallyStored(storedResults);", "+\t\tfHistory = MaxHistory.forFolder(storedResults);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "906c865fa0fc6d4e35a3b72790190f5f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/ParentRunner.java", "commitBeforeChange": "95bd62b2ffd80394d1a17e9078a4d79478423030", "commitAfterChange": "9c8d59d9869280a698c3f3a119eb69f0e897c94b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \t@Override \tpublic void run(final RunNotifier notifier)", "signatureAfterChange": " \t \t@Override \tpublic void run(final RunNotifier notifier)", "diff": ["-\t\t\ttestNotifier.addIgnorance(e);", "+\t\t\ttestNotifier.addFailedAssumption(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "909896c4743357c59fd3a335b72d166d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "74941e1e1482016ffe705830cefb27cd376fb5ef", "commitAfterChange": "fb812b11c575fcf7bbe411a876903acd21ad04ea", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "          @Test     public void getMethodsNullSorterSuper()", "signatureAfterChange": "          @Test     public void testMethodsNullSorterSuper()", "diff": ["-    public void getMethodsNullSorterSuper() {", "+    public void testMethodsNullSorterSuper() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90a5dd535aa4ece6edeb5482c1a38387", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "979e8abbe974e8847668f5887403da78a6165ebc", "commitAfterChange": "1fcd990f60518c941a44bae2596392021614a20b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tprotected void runChild(FrameworkMethod method, RunNotifier notifier)", "signatureAfterChange": "  \t@Override \tprotected void runChild(FrameworkMethod method, RunNotifier notifier)", "diff": ["-\t\t\tchildBlock(method).evaluate();", "+\t\t\tmethodBlock(method).evaluate();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9101db46a0e07a719bc2850a0cb7aa77", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "      public void sort(Sorter sorter)", "signatureAfterChange": "      public void sort(Sorter sorter)", "diff": ["-        synchronized (fChildrenLock) {", "+        synchronized (childrenLock) {", "-            fFilteredChildren = Collections.unmodifiableCollection(sortedChildren);", "+            filteredChildren = Collections.unmodifiableCollection(sortedChildren);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9115d2d5a170136b05f51f510ac04fd2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "50e3d1bc87b4b16f0617b6212252363f499397ab", "commitAfterChange": "38d91308c302eb4f0b5ed24e064ee56395f9fc01", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          @Override         public Object getValue() throws CouldNotGenerateValueException", "signatureAfterChange": "          @Override         public Object getValue() throws CouldNotGenerateValueException", "diff": ["-            } catch (Throwable e) {", "+            } catch (Throwable t) {", "-                        Assume.assumeThat(e, not(instanceOf(ignorable)));", "+                        Assume.assumeThat(t, not(instanceOf(ignorable)));", "-                throw new CouldNotGenerateValueException();", "+                throw new CouldNotGenerateValueException(t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "914bd47cf7894c37dbce63d84c4ac81d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxCore.java", "commitBeforeChange": "451ca12156d5704809a1feff78a10a9451cd2023", "commitAfterChange": "ce7bda3346278aab6ccebedcd5b8c8d4ab27ba02", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \t\tprivate Long getFailure(Description o1)", "signatureAfterChange": " \t \t\tprivate Long getFailure(Description key)", "diff": ["-\t", "-\t\tprivate Long getFailure(Description o1) {", "-\t\t\tLong result= fFailures.get(o1);", "+\t\tprivate Long getFailure(Description key) {", "+\t\t\tLong result= getFailureTimestamp(key);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91740327f54caad873cd8619c0cec7b0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "3aca014a2c39723febbe7def2fd132da80c3f4a9", "commitAfterChange": "2c6c142aa801cef3520ca668e75a670a32b4859a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected void collectInitializationErrors(List<Throwable> errors)", "signatureAfterChange": "      @Override     protected void collectInitializationErrors(List<Throwable> errors)", "diff": ["+        validateDataPointMethods(errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91c05fc7b7b4a2bb20841650229e8d6e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/ParameterSupplier.java", "commitBeforeChange": "149ecd4dcd99697710aa350e9cd3b3bcac877125", "commitAfterChange": "787ed4e5bc2b68e8b5cdb6190ff1fc053f1a5b13", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic abstract List<PotentialParameterValue> getValueSources(Object test, ParameterSignature sig);", "signatureAfterChange": " \tpublic abstract List<PotentialAssignment> getValueSources(Object test, \t\t\tParameterSignature sig);", "diff": ["-\tpublic abstract List<PotentialParameterValue> getValueSources(Object test, ParameterSignature sig);", "+\tpublic abstract List<PotentialAssignment> getValueSources(Object test,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91fc7e43ef22a513929e70ae7564c879", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      protected void scanAnnotatedMembers(Map<Class<? extends Annotation>, List<FrameworkMethod>> methodsForAnnotations, Map<Class<? extends Annotation>, List<FrameworkField>> fieldsForAnnotations)", "signatureAfterChange": "      protected void scanAnnotatedMembers(Map<Class<? extends Annotation>, List<FrameworkMethod>> methodsForAnnotations, Map<Class<? extends Annotation>, List<FrameworkField>> fieldsForAnnotations)", "diff": ["-        for (Class<?> eachClass : getSuperClasses(fClass)) {", "+        for (Class<?> eachClass : getSuperClasses(clazz)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9226a8b41ba3ccbc927672fc7f5c9b29", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/TheoryMethod.java", "commitBeforeChange": "149ecd4dcd99697710aa350e9cd3b3bcac877125", "commitAfterChange": "787ed4e5bc2b68e8b5cdb6190ff1fc053f1a5b13", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic boolean nullsOk()", "signatureAfterChange": "  \tprivate boolean nullsOk()", "diff": ["-\tpublic boolean nullsOk() {", "-\t\tTheory annotation= fMethod.getAnnotation(Theory.class);", "+", "+\tprivate boolean nullsOk() {", "+\t\tTheory annotation= getMethod().getAnnotation(Theory.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92e779838d24ce971bb0beaba4c6aa46", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/extendingwithstubs/GuesserQueue.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \t\t@Override \t\tpublic Object getValue() throws CouldNotGenerateValueException", "signatureAfterChange": " \t \t\t@Override \t\tpublic Object getValue(Object test) throws CouldNotGenerateValueException", "diff": ["-\t\tpublic Object getValue() throws CouldNotGenerateValueException {", "-\t\t\treturn delegate.getValue();", "+\t\tpublic Object getValue(Object test) throws CouldNotGenerateValueException {", "+\t\t\treturn delegate.getValue(test);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92ede3da4b21a07da49b83370b9bd4e9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public Object[] getAllArguments() throws CouldNotGenerateValueException", "signatureAfterChange": "      public Object[] getAllArguments() throws CouldNotGenerateValueException", "diff": ["-        return getActualValues(0, fAssigned.size());", "+        return getActualValues(0, assigned.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "934cff1c3a555a026e4a940dc79ab13e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java", "commitBeforeChange": "b8adef37033aa4177453362d24b3f2ecb7031c59", "commitAfterChange": "043e82844ef2c3c0961d98a34771c84f7a950d1a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 23, "signatureBeforeChange": "      private List<PotentialAssignment> potentialValues(Method method)             throws Exception", "signatureAfterChange": "      private List<PotentialAssignment> potentialValues(Method method)             throws Exception", "diff": ["-                new TestClass(HasDateMethod.class))", "+                new TestClass(method.getDeclaringClass()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9365456b8c5d0fbc5b47df224a7fe3bc", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "cf507ab8446f6e8ea0191da998d7607c3e85c787", "commitAfterChange": "686240ea6cc89187c1fa190f077ea6dc73bdb258", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "      @Override     public void run(final RunNotifier notifier)", "signatureAfterChange": "      @Override     public void run(final RunNotifier notifier)", "diff": ["-            testNotifier.fireTestIgnored();", "+            testNotifier.addFailedAssumption(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9368795236025889703d5089a1487fc3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/junit/tests/framework/SuiteTest.java", "commitBeforeChange": "1d86784cd452e8d9e30d812255cadb75ef8dae15", "commitAfterChange": "2de4d6f2bcf699b94614f9208f620f4c56bc9876", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void testOneTestCase()", "signatureAfterChange": " \tpublic void testOneTestCase()", "diff": ["-\t\tTest t= new TestSuite(OneTestCase.class);", "+\t\tTestSuite t= new TestSuite(OneTestCase.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "937f2c1459a72a45696c560b0371363b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "34a0ecb4ffb3cb8d33b60c222c29145d017f02c9", "commitAfterChange": "7cd277620b4c888ae4101bb3f4768af83b85313a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate void runChildren(final RunNotifier notifier)", "signatureAfterChange": "  \tprivate void runChildren(final RunNotifier notifier)", "diff": ["-\t\tfor (final T each : getFilteredChildren())", "-\t\t\tfScheduler.schedule(new Runnable() {\t\t\t", "+\t\tfor (final T each : getCachedChildren())", "+\t\t\tfScheduler.schedule(new Runnable() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93eaf61a4740cc17757e8f636a319e5a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/TestIntrospector.java", "commitBeforeChange": "88f0fe3ced24506ddf9791f7a088163f4e7b1f20", "commitAfterChange": "3d7fee93ddc21a6e849c36d5ae58b37b3d189665", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tClass<? extends Throwable> expectedException(Method method)", "signatureAfterChange": "  \tClass<? extends Throwable> expectedException(Method method)", "diff": ["-\t\tif (annotation == null)", "-\t\t\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "940698144c98ea2b3270e321f72d11bf", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/SynchronizedRunListener.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     public boolean equals(Object other)", "signatureAfterChange": "      @Override     public boolean equals(Object other)", "diff": ["-        return fListener.equals(that.fListener);", "+        return listener.equals(that.listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94d803066bd14863a88027eac9e1c609", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "85f9d8397bfd96261c3214284672180c522e2d38", "commitAfterChange": "9cf5b64d8dbbb064fed3d4ee88eced2b6a7d50fe", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void invokeValidatorsOnClass(List<Throwable> errors)", "signatureAfterChange": "      private void invokeValidatorsOnClass(List<Throwable> errors)", "diff": ["-            if (hasValidatorAnnotation(annotation)) {", "+            if (hasValidatorAnnotation(annotation.annotationType())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94e8cb55bb4314d6700d5ae66dfae5c0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactory.java", "commitBeforeChange": "196c4ed79cbaca37709643b54913b361b677ae04", "commitAfterChange": "0a9a389570a171b67c3155d312f2e90bdab5aaaf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Filter createFilter() throws FilterNotFoundException", "signatureAfterChange": "     public Filter createFilter() throws FilterNotCreatedException", "diff": ["-public class FilterFactory {", "-    public Filter createFilter() throws FilterNotFoundException {", "+public abstract class FilterFactory {", "+    public Filter createFilter() throws FilterNotCreatedException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94ebb823e37da76762634f087671f70b", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/runner/StackFilterTest.java", "commitBeforeChange": "9af2e559040ea3bc3db5c5d39b2c4a27098d5a76", "commitAfterChange": "a1fef439624fe411d0bea8651324e28b134e8b4a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t\t \tpublic void testFilter()", "signatureAfterChange": " \t\t \tpublic void testFilter()", "diff": ["-\t\tassertEquals(fFiltered, BaseTestRunner.filterStack(fUnfiltered));", "+\t\tassertEquals(fFiltered, BaseTestRunner.getFilteredTrace(fUnfiltered));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94f023947c87eaa6fa2906d17d6cdab1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "          @Override         public void testRunFinished(Result result) throws Exception", "signatureAfterChange": "          @Override         public void testRunFinished(Result result) throws Exception", "diff": ["-            fRunTime.addAndGet(endTime - fStartTime.get());", "+            runTime.addAndGet(endTime - startTime.get());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9503da08063419ba183fb0de02fa2977", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/MethodSorter.java", "commitBeforeChange": "35916619de9d9c3e7ec3d793ab3072c9e78db258", "commitAfterChange": "7924760d2d64f5f7651e9e57d1ca01e1bcce74e0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private static Comparator<Method> getSorter(SortMethodsWith sortMethodsWith)", "signatureAfterChange": "      private static Comparator<Method> getSorter(FixMethodOrder fixMethodOrder)", "diff": ["-    private static Comparator<Method> getSorter(SortMethodsWith sortMethodsWith) {", "-        if (sortMethodsWith == null) {", "+    private static Comparator<Method> getSorter(FixMethodOrder fixMethodOrder) {", "+        if (fixMethodOrder == null) {", "-        return sortMethodsWith.value().getComparator();", "+        return fixMethodOrder.value().getComparator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9513a01bad92adb75c5a439ede71c72b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "96ca415d66bb37d6d3c54505cf34ce5dce3fecf5", "commitAfterChange": "bd5b90f75908b7a3ed074a7be29823170f008fb4", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected Statement methodBlock(FrameworkMethod method)", "signatureAfterChange": "     protected Statement methodBlock(final FrameworkMethod method)", "diff": ["-    protected Statement methodBlock(FrameworkMethod method) {", "+    protected Statement methodBlock(final FrameworkMethod method) {", "-                    return createTest();", "+                    return createTest(method);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9525aacbfcd1e4121aa192c81d9b79e8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/core/MainRunner.java", "commitBeforeChange": "d70ca7f71cad6282d389e1703e47b6b0639cde9e", "commitAfterChange": "2745d016f648e783360bd076f23b36908f8125b0", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     public Integer runWithCheckForSystemExit(Runnable runnable)", "signatureAfterChange": "     public Integer runWithCheckForSystemExit(Runnable runnable)", "diff": ["-        PrintStream oldPrintStream = System.out;", "+        PrintStream oldOut = System.out;", "-            System.setOut(oldPrintStream);", "+            System.setOut(oldOut);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "955edf4f9a4b4765af859a8eab4898d9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/experimental/categories/CategoryFilterFactoryTest.java", "commitBeforeChange": "56193048f411846a58c0e0377a5f1ccfecd3d2f9", "commitAfterChange": "826529633261161edd2d9dc0f866b2c3c0420514", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r     @Test\r     public void shouldCreateFilter() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldCreateFilter() throws Exception", "diff": ["-                Description.createSuiteDescription(testName.getMethodName()),\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "956acbf9049f270ba491988e4365c545", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/Stopwatch.java", "commitBeforeChange": "3c122b6a93499ee82d346c097141d2137b93c48c", "commitAfterChange": "9ec6a3fa39cb8aafe645a7f33e7da9a788679fe3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private long getNanos()", "signatureAfterChange": "      private long getNanos()", "diff": ["-        return endNanos - startNanos;", "+        return fEndNanos - fStartNanos;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95bed4ec5a00b99c66c390336a2d9265", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/AssumptionTest.java", "commitBeforeChange": "e727dd6b1cb2caa1699da3b2df7625c9554adc36", "commitAfterChange": "95bd62b2ffd80394d1a17e9078a4d79478423030", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Test \tpublic void failedAssumptionsMeanIgnored()", "signatureAfterChange": "  \t@Test \tpublic void failedAssumptionsMeanIgnored()", "diff": ["-\t\tassertThat(result.getIgnoreCount(), is(1));", "+\t\tassertThat(result.getUnrunnableCount(), is(1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95c91c903731d30ff102cfe45cee1d0c", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "fbb9b839e7c602f6ce30d3582452eda397b31518", "commitAfterChange": "4cf0c7d9db0f7b29f65d9dab047fef9805dae671", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 68, "signatureBeforeChange": " \t \tprivate void doRunTest(final Test testSuite, final boolean reload)", "signatureAfterChange": " \t \tprivate void doRunTest(final Test testSuite, final boolean reload)", "diff": ["-\t\tfRunner= new Thread() {", "+\t\tfRunner= new Thread(\"TestRunner-Thread\") {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95eeb352f65a16725bb3cff2bf9a6cf2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestClass.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void runProtected(RunNotifier notifier, Description description, Runnable runnable)", "signatureAfterChange": "  \tpublic void runProtected(RunNotifier notifier, Description description, Runnable runnable)", "diff": ["-\t\t// TODO: (Oct 8, 2007 1:02:02 PM) passthrough", "-\t\trunProtected(new Roadie(notifier, description, null), runnable);", "+\t\t// TODO: (Oct 8, 2007 1:02:02 PM) instead of this, have a runChildren overridable method in JUnit4ClassRunner", "+\t\trunProtected(new EachTestNotifier(notifier, description), runnable, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95fe15788039dbecb37a8474a1f5a54c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/categories/CategoriesMark2Test.java", "commitBeforeChange": "04189a834a01ae7ff3189bfa869e90d1a7f83acf", "commitAfterChange": "1bbab715de4c64943948ecc3739c8d5569378672", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t\tpublic static CategoryFilter2 include(Class<?> included)", "signatureAfterChange": "  \t\tpublic static CategoryFilter include(Class<?> included)", "diff": ["-\t\tpublic static CategoryFilter2 include(Class<?> included) {", "-\t\t\treturn new CategoryFilter2(included);", "+\t\tpublic static CategoryFilter include(Class<?> included) {", "+\t\t\treturn new CategoryFilter(included);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96635c59a42dc6c9bf25fb45858757b4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "         public Throwable call() throws Exception", "signatureAfterChange": "         public Throwable call() throws Exception", "diff": ["-                fOriginalStatement.evaluate();", "+                originalStatement.evaluate();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96c1cdaba67b75f64caa7a8fabc0c898", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/EventCollector.java", "commitBeforeChange": "df70c1087de9d3827656ede187371bbe29d2a974", "commitAfterChange": "a538d25ae50887dc9395f2f59ad5040752c0ec4f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \t@Override \tpublic void testRunStarted(Description description) throws Exception", "signatureAfterChange": "  \t@Override \tpublic void testRunStarted(Description description) throws Exception", "diff": ["-", "-\t@Override", "-\tpublic void testRunStarted(Description description) throws Exception {", "-\t\ttestRunsStarted.add(description);", "-\t}", "+", "+\t@Override", "+\tpublic void testRunStarted(Description description) throws Exception {", "+\t\tfTestRunsStarted.add(description);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96dbd2cf9c942a0ad23f4959347cd07d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public FrameworkMethod(Method method)", "signatureAfterChange": "     public FrameworkMethod(Method method)", "diff": ["-        fMethod = method;", "+        this.method = method;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97573acbc3961f7a5e4b59d195afed6d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "979e8abbe974e8847668f5887403da78a6165ebc", "commitAfterChange": "1fcd990f60518c941a44bae2596392021614a20b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Override \tpublic Statement childBlock(final FrameworkMethod method)", "signatureAfterChange": "  \t@Override \tpublic Statement methodBlock(final FrameworkMethod method)", "diff": ["-\tpublic Statement childBlock(final FrameworkMethod method) {", "+\tpublic Statement methodBlock(final FrameworkMethod method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97cddd91ccf8b17d9ea826ac8397bcd6", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "9a629cbfbc732e6b3feb382bd10e872f84ddc510", "commitAfterChange": "d26e4d7876b5a4fa2100596d7e1cffe6ffdb21e3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic TestRunner()", "signatureAfterChange": " \tpublic TestRunner()", "diff": ["+\t\tthis(System.out);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97d09d7de428b23fa32329adace27ffb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TestWatcher.java", "commitBeforeChange": "2745d016f648e783360bd076f23b36908f8125b0", "commitAfterChange": "b064a274adb12c6e866cb08dedc70534237330b2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void failedQuietly(Throwable t, Description description,             List<Throwable> errors)", "signatureAfterChange": "      private void failedQuietly(Throwable e, Description description,             List<Throwable> errors)", "diff": ["-    private void failedQuietly(Throwable t, Description description,", "+    private void failedQuietly(Throwable e, Description description,", "-            failed(t, description);", "-        } catch (Throwable t1) {", "-            errors.add(t1);", "+            failed(e, description);", "+        } catch (Throwable e1) {", "+            errors.add(e1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97e23c42fae15ffe7c05abf38816ea07", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java", "commitBeforeChange": "c503e40d9ec79ba76b69dd31d7dd32648fa13cf2", "commitAfterChange": "66cf6859fa74021320c9b0d5e0a6ffc5c86b770f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Test \tpublic void theoryClassMethodsShowUp() throws Exception", "signatureAfterChange": "  \t@Test \tpublic void theoryClassMethodsShowUp() throws Exception", "diff": ["-\t\tassertThat(new Theories(HasATheory.class).getDescription()", "-\t\t\t\t.getChildren().size(), is(1));", "+\t\tassertThat(new Theories(HasATheory.class).getPlan().getChildren()", "+\t\t\t\t.size(), is(1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97eed4e185f520d4dfb8c3fc52bd7f5b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "e727dd6b1cb2caa1699da3b2df7625c9554adc36", "commitAfterChange": "95bd62b2ffd80394d1a17e9078a4d79478423030", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t\tprivate Object[] computeParams() throws Exception", "signatureAfterChange": "  \t\tprivate Object[] computeParams() throws Exception", "diff": ["-\t\t\t\treturn fParameters.get(fParameterSetNumber);", "+\t\t\t\treturn fParameterList.get(fParameterSetNumber);", "-\t\t\t\t\t\tgetTestClass().getName(), getParametersMethod().getName()));\t\t\t\t", "+\t\t\t\t\t\tgetTestClass().getName(), getParametersMethod(fTestClass).getName()));", "+\t\t\t\t// TODO: (Dec 10, 2007 9:22:07 PM) Should fTestClass be protected?", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97f0701d434fcabfabc536e3efd1db77", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java", "commitBeforeChange": "90bf3119a6326671cc467386036302cc6040f752", "commitAfterChange": "34dd9f4e2bebbcf694dcb855a29edff9243a10d3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \t@Test public void testsRunInParallel()", "signatureAfterChange": " \t \t@Test public void testsRunInParallel()", "diff": ["-\t\tassertThat(end - start, greaterThan(1000));", "+\t\tassertThat(end - start, greaterThanOrEquals(1000));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97f51d584b004971af3982f20e8baf8f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "78b4a8975523d0288a6f20f0ae7862b45cb55038", "commitAfterChange": "f5c7fe43447b008b4db13e031b7c0c3551ae9ddd", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     static public void assertNotEquals(float expected, float actual, float delta)", "signatureAfterChange": "     static public void assertNotEquals(float unexpected, float actual, float delta)", "diff": ["-    static public void assertNotEquals(float expected, float actual, float delta) {", "-        assertNotEquals(null, expected, actual, delta);", "+    static public void assertNotEquals(float unexpected, float actual, float delta) {", "+        assertNotEquals(null, unexpected, actual, delta);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9803a2437e5ce7eea879d157a2d6bc25", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java", "commitBeforeChange": "a4c68872a91681139d404825c2bb04bd5ba804dd", "commitAfterChange": "f0ef837a40922ac08c608661385abf71732975d3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t\t@Override \t\tprotected void runWithIncompleteAssignment(Assignments incomplete, EachTestNotifier notifier) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tThrowable", "signatureAfterChange": "  \t\t@Override \t\tprotected void runWithIncompleteAssignment(Assignments incomplete, FailureListener listener) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tThrowable", "diff": ["-\t\tprotected void runWithIncompleteAssignment(Assignments incomplete, EachTestNotifier notifier)", "+\t\tprotected void runWithIncompleteAssignment(Assignments incomplete, FailureListener listener)", "-\t\t\t\trunWithAssignment(incomplete.assignNext(guessers.remove(0)), notifier);", "+\t\t\t\trunWithAssignment(incomplete.assignNext(guessers.remove(0)), listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9804fb48f1b76a8aeb5eb0c0cac04b73", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/manipulation/Filter.java", "commitBeforeChange": "8964b10541f840e559a3308a043b64a8c1f6af57", "commitAfterChange": "42beed3ad166a9cceefc59f6c79a16844cae0d02", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void apply(Runner runner) throws NoTestsRemainException", "signatureAfterChange": " \tpublic void apply(Object child) throws NoTestsRemainException", "diff": ["-\tpublic void apply(Runner runner) throws NoTestsRemainException {", "-\t\tif (runner instanceof Filterable) {", "-\t\t\tFilterable filterable= (Filterable)runner;", "-\t\t\tfilterable.filter(this);", "-\t\t}", "+\tpublic void apply(Object child) throws NoTestsRemainException {", "+\t\tif (!(child instanceof Filterable))", "+\t\t\treturn;", "+\t\tFilterable filterable= (Filterable) child;", "+\t\tfilterable.filter(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9841b4f407df6a66a12cf965285bdb6d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/Stopwatch.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public long runtime(TimeUnit unit)", "signatureAfterChange": "     public long runtime(TimeUnit unit)", "diff": ["-        return unit.convert(currentNanoTime() - fStartNanos, TimeUnit.NANOSECONDS);", "+        return unit.convert(currentNanoTime() - startNanos, TimeUnit.NANOSECONDS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98782f366266e908311ab7d6925349ae", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java", "commitBeforeChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "commitAfterChange": "59b1e2926cdebfd257c6c091ee2bd478d8aa04d2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t@Test \tpublic void pickUpDataPointMethods()", "signatureAfterChange": "  \t@Test \tpublic void pickUpDataPointMethods()", "diff": ["-\t\tassertThat(failures(HasDataPointMethod.class), empty());", "+\t\tassertThat(testResult(HasDataPointMethod.class), isSuccessful());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98a66b1f6884b5245707262095c1c17c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "8e313a1e58a56694c0441b2fa60974fa8e1bfe31", "commitAfterChange": "409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \tprivate StatementInterceptor createInterceptor(Object test, \t\t\tFrameworkField each)", "signatureAfterChange": "  \tprivate MethodRule createRule(Object test, \t\t\tFrameworkField each)", "diff": ["-\tprivate StatementInterceptor createInterceptor(Object test,", "+\tprivate MethodRule createRule(Object test,", "-\t\t\treturn (StatementInterceptor) each.get(test);", "+\t\t\treturn (MethodRule) each.get(test);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98eccecf170fc84a5b69dc840769b159", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Computer.java", "commitBeforeChange": "8435a2a04e66546490344a028052f648b5f9f213", "commitAfterChange": "13bda470bfa1fe989ce80d616fb096af1b937146", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprotected Runner getRunner(RunnerBuilder builder, Class<?> testClass) throws Throwable", "signatureAfterChange": "  \tprotected Runner getRunner(RunnerBuilder builder, Class<?> testClass) throws Throwable", "diff": ["-\t\treturn builder.runnerForClass(testClass);", "+\t\treturn modify(builder.runnerForClass(testClass));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "990738c6514d992cda9e367bfaf4fae7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/Parameterized.java", "commitBeforeChange": "07b834616b9c3ce07af47165c55fe64f93f165f4", "commitAfterChange": "0c5906ab0068de4852dc593ebe93356aeea639ca", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprotected void runChild(Integer i, RunNotifier notifier)", "signatureAfterChange": "  \tprotected void runChild(Integer i, RunNotifier notifier)", "diff": ["-\t\t\t\t.getJavaClass(), fParameters.get(i), i++).run(notifier);", "+\t\t\t\t.getJavaClass(), i++).run(notifier);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "991e271cbc72b3f7b4e14081a87e1dc0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/ThrowableMessageMatcher.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void describeTo(Description description)", "signatureAfterChange": "      public void describeTo(Description description)", "diff": ["-        description.appendDescriptionOf(fMatcher);", "+        description.appendDescriptionOf(matcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9933046eb28129b16235b1ad297aa90a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public Description childlessCopy()", "signatureAfterChange": "     public Description childlessCopy()", "diff": ["-        return new Description(fTestClass, fDisplayName, fAnnotations);", "+        return new Description(testClass, displayName, annotations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9982d1342360aa15992569c2790c4f0a", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/framework/Failure.java", "commitBeforeChange": "b6a023c447628100c104708666eddd0b2eaa41d3", "commitAfterChange": "86b71cb1b9784a9b87c86b4f3f12632ae6773d1f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic void test()", "signatureAfterChange": " \tpublic void runTest()", "diff": ["-\t}", "-\tpublic void test() {", "+\tpublic void runTest() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a1a5e1244afb3355af831e952be075d", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/awtui/TestRunner.java", "commitBeforeChange": "4a28bf95b3c84e93aa7fbd7c3c0b4df91557a582", "commitAfterChange": "4999b51527fa32f2c17d3488ddc4095b19fa732a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tprotected Frame createUI(String suiteName)", "signatureAfterChange": " \t \tprotected Frame createUI(String suiteName)", "diff": ["-\t\taddGrid(panel, fUseLoadingRunner, 0, 2, 2, GridBagConstraints.HORIZONTAL, \t1.0, GridBagConstraints.WEST);", "+\t\taddGrid(panel, fUseLoadingRunner, 0, 2, 2, GridBagConstraints.NONE, \t1.0, GridBagConstraints.WEST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a3928a5514ddfb60aa73f51c21d8363", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkField.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-        return fField.toString();", "+        return field.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a4e4fa78c89ede97314ee24c61ef51a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/InitializationError.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public InitializationError(List<Throwable> errors)", "signatureAfterChange": "     public InitializationError(List<Throwable> errors)", "diff": ["-        fErrors = errors;", "+        this.errors = errors;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a526ec463be53b6971a48bd73ebf650", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "785a33b478d358e79a3b6592754ad9ec051e4278", "commitAfterChange": "5d9e0022d3f6db1367d530579de6332b9c8802e3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": "         Object a(int i, double d, Thread t)", "signatureAfterChange": "         Object alpha(int i, double d, Thread t)", "diff": ["-        Object a(int i, double d, Thread t) {return null;}", "+        Object alpha(int i, double d, Thread t) {return null;}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a783bdd71a5d67eae5012c0bf3c358f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/ClassRulesTest.java", "commitBeforeChange": "751f75986b11336ac8310d73c89003b0b09ecb92", "commitAfterChange": "8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t\t \t\tpublic Statement apply(final Statement base, Description description)", "signatureAfterChange": " \t\t \t\t@Override \t\tprotected Statement apply(final Statement base, Description description)", "diff": ["-\t\tpublic Statement apply(final Statement base, Description description) {", "+\t\t@Override", "+\t\tprotected Statement apply(final Statement base, Description description) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a8328264b56894ad0ed87d1d004ca76", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "commitAfterChange": "44e7458b19d5cd1900a765a440c96e85b81d25fc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t\tprotected void runWithCompleteAssignment(final Assignments complete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tInvocationTargetException, NoSuchMethodException, Throwable", "signatureAfterChange": "  \t\tprotected void runWithCompleteAssignment(final Assignments complete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tInvocationTargetException, NoSuchMethodException, Throwable", "diff": ["-\t\t\t\t// TODO: (Oct 8, 2007 10:42:56 AM) MethodRunner should not be a JavaElement", "-", "-\t\t\t\tnew BeforeAndAfter(new Link() {", "+\t\t\t\tnew WithBeforeAndAfter(new Link() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a9a9cd7de8b274450dd0d6bd0c0d3cc", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/InterceptorTest.java", "commitBeforeChange": "19869a298da02326cba2951dcc7c1a84fae91b89", "commitAfterChange": "e13f8cdc5c3394962fc6eddde235980181b3bb8c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Test \tpublic void interceptorIsIntroducedAnEvaluated()", "signatureAfterChange": "  \t@Test \tpublic void interceptorIsIntroducedAndEvaluated()", "diff": ["-\tpublic void interceptorIsIntroducedAnEvaluated() {", "+\tpublic void interceptorIsIntroducedAndEvaluated() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ac3f5a2ce2e889ec688d40677e25250", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "a68b42cafad9f55f8296a2540f7aa93378ec1c40", "commitAfterChange": "23793cd92c4c0f8449e2edaec745437c5ebbd619", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate void handleException(Throwable e) throws Throwable", "signatureAfterChange": "  \tprivate void handleException(Throwable e) throws Throwable", "diff": ["-\t\tif (fMatcher == null)", "+\t\tif (fMatcher.expectsThrowable())", "+\t\t\tassertThat(e, fMatcher);", "+\t\telse", "-\t\tassertThat(e, fMatcher);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9aef65ebd1c66f73c0dd3cd7a1cbcadf", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/framework/Success.java", "commitBeforeChange": "b6a023c447628100c104708666eddd0b2eaa41d3", "commitAfterChange": "86b71cb1b9784a9b87c86b4f3f12632ae6773d1f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic void test()", "signatureAfterChange": " \t \tpublic void runTest()", "diff": ["+\tpublic void runTest() {", "-\tpublic void test() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b4ada7bc051f8f1bc39bc07feed9eb1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "8e313a1e58a56694c0441b2fa60974fa8e1bfe31", "commitAfterChange": "409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tprivate List<FrameworkField> interceptorFields()", "signatureAfterChange": "  \tprivate List<FrameworkField> ruleFields()", "diff": ["-\tprivate List<FrameworkField> interceptorFields() {", "-\t\treturn getTestClass().getAnnotatedFields(Interceptor.class);", "+\tprivate List<FrameworkField> ruleFields() {", "+\t\treturn getTestClass().getAnnotatedFields(Rule.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c09277251b455a3cd72bf8a62fab878", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic Roadie getContext()", "signatureAfterChange": "  \tpublic EachTestNotifier getContext()", "diff": ["-\tpublic Roadie getContext() {", "+\tpublic EachTestNotifier getContext() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c35311fb7fbec322b70bd6c4cea623c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/Stopwatch.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private void stopping()", "signatureAfterChange": "      private void stopping()", "diff": ["-        fEndNanos= currentNanoTime();", "+        endNanos = currentNanoTime();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c46291dad37cdd2233f4b3bfd953a67", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/AllTests.java", "commitBeforeChange": "141a144b3d4aca9a1f39f92c1d697a249e991317", "commitAfterChange": "7f08797ece011ff765e98635323d59811363df5b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t@SuppressWarnings(\"unchecked\") \tpublic AllTests(Class<?> klass) throws Throwable", "signatureAfterChange": " \t@SuppressWarnings(\"unchecked\") \tpublic AllTests(Class<?> klass) throws Throwable", "diff": ["-\t\tsuper(suite(klass));", "+\t\tsuper(testFromSuiteMethod(klass));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c91f7085030ce4fedc7e104e8c38638", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/Timeout.java", "commitBeforeChange": "94aa692b0489d1fabd31c779c1a700a3b0890a24", "commitAfterChange": "544e5ba3a3034932879604b72fb6f8526d27eb50", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public Statement apply(Statement base, Description description)", "signatureAfterChange": "      public Statement apply(Statement base, Description description)", "diff": ["-        return new FailOnTimeout(base, fMillis);", "+        return new FailOnTimeout(base, fTimeout, fTimeUnit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d5d3152d8a5a498d1a0ca68ae34cba1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestElement.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void runAfters(Object target) throws Throwable", "signatureAfterChange": "  \tpublic void runAfters(Object target) throws Throwable", "diff": ["-\t\tList<TestMethod> afters= getAfters();", "-\t\tfor (TestMethod after : afters)", "+\t\tList<FrameworkMethod> afters= getAfters();", "+\t\tfor (FrameworkMethod after : afters)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d5dbe2fcb74553ef1b3f4bd35294534", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/StacktracePrintingMatcher.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     protected void describeMismatchSafely(T item, Description description)", "signatureAfterChange": "      @Override     protected void describeMismatchSafely(T item, Description description)", "diff": ["-        fThrowableMatcher.describeMismatch(item, description);", "+        throwableMatcher.describeMismatch(item, description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9df90f2389a02fecc4294c043b82b31c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t\tpublic TheoryAnchor(TestMethod method)", "signatureAfterChange": "  \t\tpublic TheoryAnchor(FrameworkMethod method)", "diff": ["-\t\tpublic TheoryAnchor(TestMethod method) {", "+\t\tpublic TheoryAnchor(FrameworkMethod method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e0a81bb4addbca12902d77ce34cb889", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private ParameterSupplier getSupplier(ParameterSignature unassigned)             throws Exception", "signatureAfterChange": "      private ParameterSupplier getSupplier(ParameterSignature unassigned)             throws Exception", "diff": ["-            return new AllMembersSupplier(fClass);", "+            return new AllMembersSupplier(clazz);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e304205d3c8ba8c2ef2d8eee6a82be0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "d0f619bfbdf4595db3e30fa7a27d7a6fdd08723a", "commitAfterChange": "0dc3de7fbcf997ca8465ed9e7793a0b4f730121b", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tprivate static void internalArrayEquals(String message, Object expecteds, \t\t\tObject actuals) throws ArrayComparisonFailure", "signatureAfterChange": " \tprivate static void internalArrayEquals(String message, Object expecteds, \t\t\tObject actuals) throws ArrayComparisonFailure", "diff": ["-\t\tnew ExactComparisonCriteria().internalArrayEquals(message, expecteds, actuals);", "+\t\tnew ExactComparisonCriteria().arrayEquals(message, expecteds, actuals);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e3b4c25ba43800649cec8ef4e2481ec", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/Parameterized.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic Parameterized(Class<?> klass) throws Throwable", "signatureAfterChange": "  \tpublic Parameterized(Class<?> klass) throws Throwable", "diff": ["+\t\t// TODO: (Oct 9, 2007 2:18:54 PM) Destroy MethodValidator (I thought I already had)", "+", "-\t\t\t\tadd(new TestClassRunnerForParameters(fTestClass, (Object[])each, i++));", "+\t\t\t\tadd(new TestClassRunnerForParameters(klass, (Object[])each, i++));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e8a1fd8bab69ae51433fe9f3e284076", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "24f9b5223c2801a5cba0611e447e66677069b837", "commitAfterChange": "3637f328439c9c8ab2d165cbf328fb131f8716a2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Description createSuiteDescription(String name, Object uniqueId, Annotation... annotations)", "signatureAfterChange": " \tpublic static Description createSuiteDescription(String name, Serializable uniqueId, Annotation... annotations)", "diff": ["-\tpublic static Description createSuiteDescription(String name, Object uniqueId, Annotation... annotations) {", "+\tpublic static Description createSuiteDescription(String name, Serializable uniqueId, Annotation... annotations) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e9fc14ec3410e668e5fd7380f94ba5d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java", "commitBeforeChange": "a134a8623b68ef06517196af1b8ffa744e4c3935", "commitAfterChange": "60d24dd036af00488f14713b97b47a2a72e5db3b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t@Test \tpublic void stackTraceContainsRealCauseOfTimeout() throws Throwable", "signatureAfterChange": "  \t@Test \tpublic void stackTraceContainsRealCauseOfTimeout() throws Throwable", "diff": ["-\t\t\tboolean stackTraceContainsNotTheRealCauseOfTheTimeout= false;", "+\t\t\tboolean stackTraceContainsOtherThanTheRealCauseOfTheTimeout= false;", "-\t\t\t\t\tstackTraceContainsNotTheRealCauseOfTheTimeout= true;", "+\t\t\t\t\tstackTraceContainsOtherThanTheRealCauseOfTheTimeout= true;", "-\t\t\t\t\t\"Stack trace does not contain the real cause of the timeout, which can be very misleading\",", "-\t\t\t\t\tstackTraceContainsNotTheRealCauseOfTheTimeout);", "+\t\t\t\t\t\"Stack trace contains other than the real cause of the timeout, which can be very misleading\",", "+\t\t\t\t\tstackTraceContainsOtherThanTheRealCauseOfTheTimeout);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9eb7b029f96c7efafa8c0b900ede919e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/links/IgnoreViolatedAssumptions.java", "commitBeforeChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "commitAfterChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic IgnoreViolatedAssumptions(Link next)", "signatureAfterChange": " \tpublic IgnoreViolatedAssumptions(Statement next)", "diff": ["-\tLink fNext;", "-\tpublic IgnoreViolatedAssumptions(Link next) {", "+\tStatement fNext;", "+\tpublic IgnoreViolatedAssumptions(Statement next) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9edac683d00e3aa065a4d013d608af41", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java", "commitBeforeChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "commitAfterChange": "44e7458b19d5cd1900a765a440c96e85b81d25fc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tprotected TheoryAnchor anchor(TestMethod method)", "signatureAfterChange": "  \t@Override \tprotected TheoryAnchor invoke(TestMethod method)", "diff": ["-\tprotected TheoryAnchor anchor(TestMethod method) {", "+\tprotected TheoryAnchor invoke(TestMethod method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ee0ed39d22958b1f827ef57e784dd14", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/TestMethodTest.java", "commitBeforeChange": "1357ec0cc6f439e3e4a9d818138b36b9347f0a3d", "commitAfterChange": "141a144b3d4aca9a1f39f92c1d697a249e991317", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \t \t@Test public void overloaded()", "signatureAfterChange": " \t \t@Test public void overloaded()", "diff": ["-\t\tList<Throwable> errors= validator.validateAllMethods();", "+\t\tList<Throwable> errors= validator.validateMethodsForDefaultRunner();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9eec2c39f8b441f0dd67425e694f5420", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private MaxHistory(File storedResults)", "signatureAfterChange": "      private MaxHistory(File storedResults)", "diff": ["-        historyStore = storedResults;", "+        fHistoryStore = storedResults;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f3cdde9588d63cd5d9f35b0411c1f8d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedExceptionMatcher.java", "commitBeforeChange": "6bea82df32f687d636f1b843a1918a3a1ff22a6e", "commitAfterChange": "872faeab15115635b3260001979ae036e64e29bf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tvoid andHasMessage(Matcher<String> matcher)", "signatureAfterChange": "  \tvoid andAlsoHasMessage(Matcher<String> matcher)", "diff": ["-\tvoid andHasMessage(Matcher<String> matcher) {", "-\t\tand(hasMessage(matcher));", "+\tvoid andAlsoHasMessage(Matcher<String> matcher) {", "+\t\tandAlso(hasMessage(matcher));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f9ad000b839dec741f82a85e8adb199", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "77ecd2119d3124b72935038effffadf7b98eccd9", "commitAfterChange": "3a791ec79fff66aebc332fe4e4cbf626e39bd3d3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t\tprivate Object[] computeParams() throws Exception", "signatureAfterChange": "  \t\tprivate Object[] computeParams() throws Exception", "diff": ["-\t\t\t\t\t\tfTestClass.getName(), getParametersMethod().getName()));\t\t\t\t", "+\t\t\t\t\t\tgetTestClass().getName(), getParametersMethod().getName()));\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f9df994d501d2c5a2fc1d51291f033d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/RunNotifier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          SafeNotifier()", "signatureAfterChange": "          SafeNotifier()", "diff": ["-            this(fListeners);", "+            this(listeners);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fc2ca07c15fd6411acf2b33916653d5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java", "commitBeforeChange": "fe5d86eba71a1f59dbbed09de4add01cc20420c0", "commitAfterChange": "d9054149988487750679e35a349df7e0e2df5870", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "          @Override         public List<Exception> validateAnnotatedMethod(Method method)", "signatureAfterChange": "          @Override         public List<Exception> validateAnnotatedMethod(FrameworkMethod method)", "diff": ["-        public List<Exception> validateAnnotatedMethod(Method method) {", "+        public List<Exception> validateAnnotatedMethod(FrameworkMethod method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0131b2d4711fd7cddd7d848ec1cd278", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/FilterFactoriesTest.java", "commitBeforeChange": "4eecfb1eff9aa5304f6b30874a26734124ac902d", "commitAfterChange": "a75370887a71a09b3e5a12dec252513e80228e6b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r         public Filter createFilter(FilterFactoryParams unused)", "signatureAfterChange": "\r         public Filter createFilter(FilterFactoryParams params)", "diff": ["-        public Filter createFilter(FilterFactoryParams unused) {\r", "-            return new DummyFilter();\r", "+        public Filter createFilter(FilterFactoryParams params) {\r", "+            return new DummyFilter(params.getTopLevelDescription());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a02a21eb8946039593cbfa228db69687", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/RunNotifier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void addListener(RunListener listener)", "signatureAfterChange": "     public void addListener(RunListener listener)", "diff": ["-        fListeners.add(wrapIfNotThreadSafe(listener));", "+        listeners.add(wrapIfNotThreadSafe(listener));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a046ea8e40757ab37343effcdb91883b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "95da39292ea777ec3ff99be2bb23d46f704f683a", "commitAfterChange": "8e20f520565dc52f5599eafd54b603043bfecbaf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static MaxCore forFolder(File storedResults)", "signatureAfterChange": " \tpublic static MaxCore storedLocally(File storedResults)", "diff": ["-", "-\tpublic static MaxCore forFolder(File storedResults) {", "+\tpublic static MaxCore storedLocally(File storedResults) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0596c079c4f4d3b835f92e7895d20cb", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/runner/BaseTestRunner.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprotected Class loadSuiteClass(String suiteClassName) throws ClassNotFoundException", "signatureAfterChange": " \tprotected Class loadSuiteClass(String suiteClassName) throws ClassNotFoundException", "diff": ["-\t\treturn fTestLoader.load(suiteClassName);", "+\t\treturn getLoader().load(suiteClassName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0898d3529ff3e74ace2b3f9c435106e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     protected Description describeChild(FrameworkMethod method)", "signatureAfterChange": "      @Override     protected Description describeChild(FrameworkMethod method)", "diff": ["-        Description description = fMethodDescriptions.get(method);", "+        Description description = methodDescriptions.get(method);", "-            fMethodDescriptions.putIfAbsent(method, description);", "+            methodDescriptions.putIfAbsent(method, description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0e1813fa17d02d905491d4216a9fd56", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "7566c1da93069c00c961e37979db44ce6aa00830", "commitAfterChange": "e70ed85b5732a42791fd5f8df0acd411f223abab", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "      private Collection<T> getFilteredChildrenWithoutIgnores(             final RunNotifier notifier)", "signatureAfterChange": "            private Collection<T> getFilteredChildrenWithoutIgnored(             final RunNotifier notifier)", "diff": ["-    private Collection<T> getFilteredChildrenWithoutIgnores(", "+", "+    private Collection<T> getFilteredChildrenWithoutIgnored("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a12f429a2993269df48aafdfcbe5d2a1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/Parameterized.java", "commitBeforeChange": "07b834616b9c3ce07af47165c55fe64f93f165f4", "commitAfterChange": "0c5906ab0068de4852dc593ebe93356aeea639ca", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic static Collection<Object[]> eachOne(Object... params)", "signatureAfterChange": "  \tpublic static List<Object[]> eachOne(Object... params)", "diff": ["-\tpublic static Collection<Object[]> eachOne(Object... params) {", "+\tpublic static List<Object[]> eachOne(Object... params) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a18bf4cebb758d5d30abd4abdf4afecf", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/runner/ClassPathTestCollector.java", "commitBeforeChange": "1e752dcb0a967bcb47fae4b12fb8765e79571e69", "commitAfterChange": "bfc94ee739d62127c7477300b26127bd560765a1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tvoid collectFilesInRoots(Vector roots, Vector result)", "signatureAfterChange": " \t \tvoid collectFilesInRoots(Vector roots, Hashtable result)", "diff": ["-\tvoid collectFilesInRoots(Vector roots, Vector result) {", "+\tvoid collectFilesInRoots(Vector roots, Hashtable result) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1ebce373ca830f5470c8da785364bce", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "fc7acc64dbbf5c28ef4bd3b142e35922d6294428", "commitAfterChange": "223b34b516467bcd9cb7ebc7f49549f2e7362dca", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tprivate List<Description> findLeaves(Request request)", "signatureAfterChange": " \t \tprivate List<Description> findLeaves(Request request)", "diff": ["-\t\tfindLeaves(request.getRunner().getDescription(), results);", "+\t\tfindLeaves(null, request.getRunner().getDescription(), results);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a217023b9e5d7c5198d0c06da622aa3c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/JUnitCommandLineParserTest.java", "commitBeforeChange": "5edfb4447b609c178d63a3d991172861076d143b", "commitAfterChange": "34336085d5aba69c997f8e6b244531561afebcd4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void shouldCreateFailureUponUnknownOption() throws Exception", "signatureAfterChange": "      @Test     public void shouldCreateFailureUponUnknownOption() throws Exception", "diff": ["-        assertThat(exception, instanceOf(JUnitCommandLineParser.Error.class));", "+        assertThat(exception, instanceOf(JUnitCommandLineParser.CommandLineParserError.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a217110177dc4da7e563c7efe9d204cf", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Suite.java", "commitBeforeChange": "979e8abbe974e8847668f5887403da78a6165ebc", "commitAfterChange": "1fcd990f60518c941a44bae2596392021614a20b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic Suite(Class<?> klass, RunnerBuilder builder) throws InitializationError", "signatureAfterChange": " \tpublic Suite(Class<?> klass, RunnerBuilder builder) throws InitializationError", "diff": ["-\t\tvalidate();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a21c14178ecfabf5e4859023887f5f08", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/interceptor/ExpectedExceptionInterceptorTest.java", "commitBeforeChange": "d5af0e46c1cd912ef0932ce868517b1e8335531e", "commitAfterChange": "a01928138beb41a189dc1fa43f92942b39393cbb", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \t@Test \tpublic void failsWithMatcher()", "signatureAfterChange": "  \t@Test \tpublic void failsWithMatcher()", "diff": ["-\t\tassertThat(testResult(ExpectsMatcherFails.class),", "+\t\tassertThat(testResult(ExpectedMessageMatcherFails.class),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a22d4268f2c72f104dcd4a45525b6748", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TimeWatcher.java", "commitBeforeChange": "582d86c49eb8624b9db65e69ad0e404821505b3d", "commitAfterChange": "0a2601045f101930d0ca7f31c53b416fafbbe7a7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override final protected void skipped(AssumptionViolatedException e, Description description)", "signatureAfterChange": "      @Override final protected void skipped(AssumptionViolatedException e, Description description)", "diff": ["-        endTime = System.nanoTime();", "+        endNanos = System.nanoTime();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a238d90ee7214548551b1b3bebb7c7cd", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/framework/TestSuite.java", "commitBeforeChange": "bfc94ee739d62127c7477300b26127bd560765a1", "commitAfterChange": "04f4f3197084ad9ad7c050ce1a40d6f4421662f4", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic String toString()", "signatureAfterChange": " \tpublic String toString()", "diff": ["-\t\tif (fName != null)", "-\t\t\treturn fName;", "+\t\tif (getName() != null)", "+\t\t\treturn getName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a23cd17544a31ce8f57fd85ef8f8e16e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/ThrowableCauseMatcher.java", "commitBeforeChange": "533dbb7b97dc25529b96c512e638a778d9ee0530", "commitAfterChange": "56a63f1607fadd83df240b1676d8a053348d868f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void describeTo(Description description)", "signatureAfterChange": "      public void describeTo(Description description)", "diff": ["-        description.appendDescriptionOf(matcher);", "+        description.appendDescriptionOf(causeMatcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a28eed2552568a4dabece89978604264", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/MultipleFailureException.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public List<Throwable> getFailures()", "signatureAfterChange": "      public List<Throwable> getFailures()", "diff": ["-        return Collections.unmodifiableList(fErrors);", "+        return Collections.unmodifiableList(errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a298594d2c5103900d7363e86d0151bd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/RunBefores.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void evaluate() throws Throwable", "signatureAfterChange": "      @Override     public void evaluate() throws Throwable", "diff": ["-        for (FrameworkMethod before : fBefores) {", "-            before.invokeExplosively(fTarget);", "+        for (FrameworkMethod before : befores) {", "+            before.invokeExplosively(target);", "-        fNext.evaluate();", "+        next.evaluate();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a29c0bf2bc89d5b19ea1ebb23eafab92", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/ArrayComparisonFailure.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void addDimension(int index)", "signatureAfterChange": "      public void addDimension(int index)", "diff": ["-        fIndices.add(0, index);", "+        indices.add(0, index);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2a331db55c40bc7a169c627ad74004f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "68e59d6de3c48be43bfe2d6104fdb6e8280b1232", "commitAfterChange": "334bd9ce923cf0293cbca49be4ae5947abf51897", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "      private Collection<T> getFilteredChildren()", "signatureAfterChange": "      private Collection<T> getFilteredChildren()", "diff": ["-            synchronized (fLock) {", "+            synchronized (fChildrenLock) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2c1b4a0749a8b1359668f2de89803f5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/requests/ClassesRequest.java", "commitBeforeChange": "478900d7d7af563a3b75b6ca9d7d44e37e2aff5b", "commitAfterChange": "163b0fe01b06f9993a03049c4aecad4ea5d04814", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t@Override  \tpublic Runner getRunner()", "signatureAfterChange": " \t@Override  \tpublic Runner getRunner()", "diff": ["-\t\t\tif (childRunner != null) // TODO when can this happen?", "-\t\t\t\trunners.add(childRunner);", "+\t\t\trunners.add(childRunner);  // TODO David, I took out the null check after examining all the implementors of getRunner()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2df6ed87c1b7d49454f73ef72935bb2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assume.java", "commitBeforeChange": "2745d016f648e783360bd076f23b36908f8125b0", "commitAfterChange": "b064a274adb12c6e866cb08dedc70534237330b2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static void assumeNoException(String message, Throwable t)", "signatureAfterChange": "     public static void assumeNoException(String message, Throwable e)", "diff": ["-    public static void assumeNoException(String message, Throwable t) {", "-        assumeThat(message, t, nullValue());", "+    public static void assumeNoException(String message, Throwable e) {", "+        assumeThat(message, e, nullValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a30b1e47a473e3f3a483ff2ca2d49e09", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "163f503af57d91f60c6b57d4c9afa768b7c04df0", "commitAfterChange": "ede492496de0f3c0872216ac9c9b88a00fdef09e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private static <T extends FrameworkMember<T>> void addToAnnotationLists(T member,             Map<Class<?>, List<T>> map)", "signatureAfterChange": "      private static <T extends FrameworkMember<T>> void addToAnnotationLists(T member,             Map<Class<?>, List<T>> map)", "diff": ["-            List<T> members = getAnnotatedMembers(map, type);", "+            List<T> members = getAnnotatedMembers(map, type, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a364af4fca6707f2f6e420272764e275", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/AssumptionTest.java", "commitBeforeChange": "a6368e40e787e7a23c9f1e58d6a47bf9fa2d0a2c", "commitAfterChange": "94ebd93396420bcd03ab99a352e38df822d59f67", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t \t@Test public void failingAssumptionInBeforeClassPreventsTestRun()", "signatureAfterChange": " \t \t@Test public void failingAssumptionInBeforeClassIgnoresClass()", "diff": ["-\t@Test public void failingAssumptionInBeforeClassPreventsTestRun() {", "+\t@Test public void failingAssumptionInBeforeClassIgnoresClass() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3b0a74fe5d1c59c154d149a2529eb65", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Suite.java", "commitBeforeChange": "09fcafc04e07b3481ef60159de2d6ae3464b98ac", "commitAfterChange": "b8008562db24f9189b90dd0e3864a381681d527f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic Suite(String name, Class<?>[] classes) throws InitializationError", "signatureAfterChange": "  \tpublic Suite(Class<?>[] classes)", "diff": ["+", "+\tpublic Suite(Class<?>[] classes) {", "+\t\tthis(null, builder.runners(classes));", "+\t}", "-", "-\tpublic Suite(String name, Class<?>[] classes) throws InitializationError {", "-\t\tthis(null, name, builder.runners(null, classes));", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3dc569bc6ecccd409261df3020cb2e2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "d6662fcc06ec7b07c696eb703c47d3731e4e11c7", "commitAfterChange": "85578d48f6459a05665329faa9b52a861e9142cb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \t@Test public void preferRecentlyFailed()", "signatureAfterChange": " \t \t@Test public void preferRecentlyFailed()", "diff": ["-\t\tList<Description> tests= max.sort(request);", "+\t\tList<Description> tests= max.sortedLeavesForTest(request);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4046aee9ebb38e3d560ffb8e9bfe74c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/junit/tests/framework/SuiteTest.java", "commitBeforeChange": "1d86784cd452e8d9e30d812255cadb75ef8dae15", "commitAfterChange": "70adacdc1a7f963c081a9752ba62200f8b798d56", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void testOneTestCase()", "signatureAfterChange": " \tpublic void testOneTestCase()", "diff": ["-\t\tTest t= new TestSuite(OneTestCase.class);", "+\t\tTestSuite t= new TestSuite(OneTestCase.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a440df8ef867724499799729baf8d56d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCommandLineParser.java", "commitBeforeChange": "5edfb4447b609c178d63a3d991172861076d143b", "commitAfterChange": "34336085d5aba69c997f8e6b244531561afebcd4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "         public Error(String message)", "signatureAfterChange": "         public CommandLineParserError(String message)", "diff": ["-    public static class Error extends Exception {", "-        public Error(String message) {", "+    public static class CommandLineParserError extends Exception {", "+        public CommandLineParserError(String message) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4467a8c4cd97ef83aea087d91db8aba", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public Description childlessCopy()", "signatureAfterChange": "     public Description childlessCopy()", "diff": ["-        return new Description(testClass, displayName, annotations);", "+        return new Description(fTestClass, fDisplayName, fAnnotations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a46293df3f79739604e208fde7649bff", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/model/EachTestNotifier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void addFailedAssumption(AssumptionViolatedException e)", "signatureAfterChange": "      public void addFailedAssumption(AssumptionViolatedException e)", "diff": ["-        fNotifier.fireTestAssumptionFailed(new Failure(fDescription, e));", "+        notifier.fireTestAssumptionFailed(new Failure(description, e));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4aa29a4e8fd301d1dbcb413c8f3278a", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/framework/AssertTest.java", "commitBeforeChange": "c62a58a526b01761c0b905961b87d1a762fc1df9", "commitAfterChange": "8c1784e4b026417ed381ac5f0a7e2dda9084d7b0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tpublic void testAssertStringNotEqualsNull()", "signatureAfterChange": "  \tpublic void testAssertStringNotEqualsNull()", "diff": ["-\t", "+", "- \t\ttry {", "+\t\ttry {", "+\t\t\te.getMessage();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a50b352a0c74ced26ad094315c7b352d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "a6368e40e787e7a23c9f1e58d6a47bf9fa2d0a2c", "commitAfterChange": "94ebd93396420bcd03ab99a352e38df822d59f67", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Statement childBlock(FrameworkMethod method)", "signatureAfterChange": "  \tpublic Statement childBlock(FrameworkMethod method)", "diff": ["-\t\tlink= ignoreViolatedAssumptions(link);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a52ab080f3266367acef0c265e36939a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/results/ResultMatchersTest.java", "commitBeforeChange": "052fc095d5b4a8af643d0e4402a504716ad8eb03", "commitAfterChange": "231241782c199d39943f742d0abe57057b0b785c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \t@Test(expected=AssertionError.class) \tpublic void failureIsFailing() throws Exception", "signatureAfterChange": " \t \t@Test(expected=AssertionError.class) \tpublic void failureIsFailing() throws Exception", "diff": ["-\t\tassertThat(createResult(), failureIs(instanceOf(IllegalStateException.class)));", "+\t\tassertThat(createPrintableResult(), failureIs(instanceOf(IllegalStateException.class)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a55ba60b7cf20d93622d704e169aa590", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Suite.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected Suite(Class<?> klass, List<Runner> runners) throws InitializationError", "signatureAfterChange": "     protected Suite(Class<?> klass, List<Runner> runners) throws InitializationError", "diff": ["-        fRunners = Collections.unmodifiableList(runners);", "+        this.runners = Collections.unmodifiableList(runners);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5bf920d0cb3ece4a70fe2cdb87ffa1f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java", "commitBeforeChange": "0030e51f286ed52ad4c2c44857c4a28525c83f93", "commitAfterChange": "3375d1c3f489fc5d2b5c6629c55867bbfe2a033f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void ignoreDataPointMethodsWithoutAnnotation() throws Throwable", "signatureAfterChange": "      @Test     public void ignoreDataPointMethodsWithoutAnnotation() throws Throwable", "diff": ["-        assertThat(potentialValues(", "+        assertThat(potentialAssignments(", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5f2222243907b2044e88e4f52cfae42", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedExceptionMatcher.java", "commitBeforeChange": "6e6a6e47f15e3de1fac90ecb9e3dbdb180f3a88b", "commitAfterChange": "f1be7f250156ecc0e6b6c9d7005abb53359fe2fe", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tvoid and(Matcher<?> matcher)", "signatureAfterChange": " \t \tvoid and(Matcher<?> matcher)", "diff": ["-\t\tfCompositeMatcher= createCompositeMatcher();", "+\t\tfCompositeMatcher= withStacktrace(createCompositeMatcher());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6554362a4590deefe8d821f8c02cf47", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "544e5ba3a3034932879604b72fb6f8526d27eb50", "commitAfterChange": "5da2d76bcf619ac0bd8c6ff5f6fc6b807978da8a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public FailOnTimeout(Statement originalStatement, long timeout)", "signatureAfterChange": "      public FailOnTimeout(Statement originalStatement, long millis)", "diff": ["-    public FailOnTimeout(Statement originalStatement, long timeout) {", "-        this(originalStatement, timeout, TimeUnit.MILLISECONDS);", "+    public FailOnTimeout(Statement originalStatement, long millis) {", "+        this(originalStatement, millis, TimeUnit.MILLISECONDS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6a14e97d475c876c2ec59f354224305", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "c15ba99f8f498b20a10df6a92f04d22182c2c964", "commitAfterChange": "2a57cc62edbc06b83c68d81dea87bbe43c46e20f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tpublic TestResult doRun(Test suite, boolean wait)", "signatureAfterChange": " \t \tpublic TestResult doRun(Test suite, boolean wait)", "diff": ["-\t\tresult.addListener(this);", "+\t\tresult.addListener(fPrinter);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6b6780e8c0c770a7b1a0c5b1f521489", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCore.java", "commitBeforeChange": "45eaab756edc8913b1c74e87ef3b519da6afa5fc", "commitAfterChange": "917a88fad06ce108a596a8fdb4607b1a2fbb3f3e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static void runMainAndExit(JUnitSystem system, String... args)", "signatureAfterChange": " \tprivate static void runMainAndExit(JUnitSystem system, String... args)", "diff": ["-\tpublic static void runMainAndExit(JUnitSystem system, String... args) {", "+\tprivate static void runMainAndExit(JUnitSystem system, String... args) {", "-\t\tsystem.exit(result.wasSuccessful() ? 0 : 1);", "+\t\tSystem.exit(result.wasSuccessful() ? 0 : 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a74c403910716bdc78e57e1f3ce51e55", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/Parameterized.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t\t@Override \t\tprotected String testName(final TestMethod method)", "signatureAfterChange": "  \t\t@Override \t\tprotected String testName(final FrameworkMethod method)", "diff": ["-\t\tprotected String testName(final TestMethod method) {", "+\t\tprotected String testName(final FrameworkMethod method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a794287181cc7f1b4f635f67e153f677", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/categories/CategoryTest.java", "commitBeforeChange": "d0c70cac5b28861803d97d59ab93dfcb10d2c4d3", "commitAfterChange": "7d8f2b7f6e190e8e59efacc10bc617b6646d131b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \t@Test \tpublic void testsThatAreBothIncludedAndExcludedAreIncluded()", "signatureAfterChange": " \t \t@Test \tpublic void testsThatAreBothIncludedAndExcludedAreExcluded()", "diff": ["-\tpublic void testsThatAreBothIncludedAndExcludedAreIncluded() {", "+\tpublic void testsThatAreBothIncludedAndExcludedAreExcluded() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7b6b4dd39ddd51243c51f5c311590a6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "4b549360e08dac944ee34b7c7bf1a95b41f72f35", "commitAfterChange": "8e313a1e58a56694c0441b2fa60974fa8e1bfe31", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate void save() throws IOException", "signatureAfterChange": "  \tprivate void save() throws IOException", "diff": ["-\t\t\t\tfFolder));", "+\t\t\t\tfHistoryStore));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7d88226e8334d772082953e7b3121c3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/MultipleFailureException.java", "commitBeforeChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "commitAfterChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic void throwUnlessEmpty() throws MultipleFailureException", "signatureAfterChange": " \t \tpublic void assertEmpty() throws MultipleFailureException", "diff": ["-\tpublic void throwUnlessEmpty() throws MultipleFailureException {", "+\tpublic void assertEmpty() throws MultipleFailureException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7f335430853b9273e96414a5bf99854", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/results/PrintableResult.java", "commitBeforeChange": "1e2c9d6451e587981d7be7a1a01dd5f3a722ca4d", "commitAfterChange": "b52e4af4eb7b26619e1d80537952aed7276766cb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t@Override \tpublic String toString()", "signatureAfterChange": "  \t@Override \tpublic String toString()", "diff": ["-\t\tif (result.getFailureCount() == 0)", "-\t\t\treturn \"PASSED!\";", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8279496e744e027af383ea55c95c2d1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/requests/IgnoredClassRunner.java", "commitBeforeChange": "e727dd6b1cb2caa1699da3b2df7625c9554adc36", "commitAfterChange": "95bd62b2ffd80394d1a17e9078a4d79478423030", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic void run(RunNotifier notifier)", "signatureAfterChange": "  \t@Override \tpublic void run(RunNotifier notifier)", "diff": ["-\t\tnotifier.fireTestIgnoredReason(getDescription(),", "+\t\tnotifier.fireTestAssumptionFailed(getDescription(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8285a8ed3281dd6465664c126abf0de", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "734ab5187c068599352e5fdc7374c1334d484fef", "commitAfterChange": "54917b88aab026dabb4541276ed875117c1e1faa", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tprotected void validateFields(List<Throwable> errors)", "signatureAfterChange": " \t \tprotected void validateFields(List<Throwable> errors)", "diff": ["-\t\tfor (FrameworkField each : interceptorFields())", "+\t\tfor (FrameworkField each : ruleFields())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a82f79e6951ac5899db9d735449c908c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java", "commitBeforeChange": "0030e51f286ed52ad4c2c44857c4a28525c83f93", "commitAfterChange": "3375d1c3f489fc5d2b5c6629c55867bbfe2a033f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Test     public void ignoreDataPointMethodsWithWrongTypes() throws Exception", "signatureAfterChange": "      @Test     public void ignoreDataPointMethodsWithWrongTypes() throws Exception", "diff": ["-        assertThat(potentialValues(", "+        assertThat(potentialAssignments("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8486019171e631a36299c4f4152750b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/requests/SortingRequest.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public Runner getRunner()", "signatureAfterChange": "      @Override     public Runner getRunner()", "diff": ["-        Runner runner = fRequest.getRunner();", "-        new Sorter(fComparator).apply(runner);", "+        Runner runner = request.getRunner();", "+        new Sorter(comparator).apply(runner);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a88af2b6628f5fadedf38a06c5db25ba", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/categories/CategoryTest.java", "commitBeforeChange": "9ddffd19ff126e411539940fc54d3e47e2161452", "commitAfterChange": "ce810b763e5021629248702993f226e3bf969db8", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t@Test \tpublic void categoryFilterRejectsIncompatibleCategory() \t\t\tthrows InitializationError, NoTestsRemainException", "signatureAfterChange": "  \t@Test \tpublic void categoryFilterRejectsIncompatibleCategory() \t\t\tthrows InitializationError, NoTestsRemainException", "diff": ["-", "-\t\t\t\tAllFastTests.class);", "+\t\t\t\tOneFastOneSlow.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a89ce14270b82e9304601456fff9297a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TestWatcher.java", "commitBeforeChange": "c63e0913154a8f01e9f78fef9de23fffd7a1a717", "commitAfterChange": "6fb53a7e272a6ecc232840c96b4cfe5235a8f823", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate void skippedQuietly(AssumptionViolatedException t, Description description, \t\t\tList<Throwable> errors)", "signatureAfterChange": "  \tprivate void skippedQuietly(AssumptionViolatedException e, Description description, \t\t\tList<Throwable> errors)", "diff": ["-\tprivate void skippedQuietly(AssumptionViolatedException t, Description description,", "+\tprivate void skippedQuietly(AssumptionViolatedException e, Description description,", "-\t\t\tskipped(t, description);", "-\t\t} catch (Throwable t1) {", "-\t\t\terrors.add(t1);", "+\t\t\tskipped(e, description);", "+\t\t} catch (Throwable t) {", "+\t\t\terrors.add(t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8f15910369f29247ba8a491bc642327", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "5e71994e865d0e2ac23885a11444cda91b3bba76", "commitAfterChange": "1273a35689bdcb3304f6634cdc3889c61f9b1b1f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private void invokeValidatorsOnFields(List<Throwable> errors)", "signatureAfterChange": "      private void invokeValidatorsOnFields(List<Throwable> errors)", "diff": ["-                annotationValidator.validateAnnotatedField(frameworkField.getField(), errors);", "+                errors.addAll(annotationValidator.validateAnnotatedField(frameworkField.getField()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a912d6924eb13be829e2df3feba4e35e", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/framework/TestImplementorTest.java", "commitBeforeChange": "b6a023c447628100c104708666eddd0b2eaa41d3", "commitAfterChange": "86b71cb1b9784a9b87c86b4f3f12632ae6773d1f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic TestImplementorTest(String name)", "signatureAfterChange": " \t \tpublic TestImplementorTest()", "diff": ["-\tpublic TestImplementorTest(String name) {", "-\t\tsuper(name);", "-\t\tTestCase testCase= new TestCase(\"noop\") {", "+\tpublic TestImplementorTest() {", "+\t\tTestCase testCase= new TestCase() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a918fd9dcc8eaefe54f85dedb89164c8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "d0f619bfbdf4595db3e30fa7a27d7a6fdd08723a", "commitAfterChange": "0dc3de7fbcf997ca8465ed9e7793a0b4f730121b", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic static void assertArrayEquals(String message, float[] expecteds, \t\t\tfloat[] actuals, float delta) throws ArrayComparisonFailure", "signatureAfterChange": " \tpublic static void assertArrayEquals(String message, float[] expecteds, \t\t\tfloat[] actuals, float delta) throws ArrayComparisonFailure", "diff": ["-\t\tnew InexactComparisonCriteria(delta).internalArrayEquals(message, expecteds, actuals);", "+\t\tnew InexactComparisonCriteria(delta).arrayEquals(message, expecteds, actuals);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a939b4dc5893afb23d116b140ad7947d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/ArrayComparisonFailure.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ArrayComparisonFailure(String message, AssertionError cause, int index)", "signatureAfterChange": "     public ArrayComparisonFailure(String message, AssertionError cause, int index)", "diff": ["-        fMessage = message;", "+        this.message = message;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a95d81b044e165a835eba7e88ed3220f", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/framework/Success.java", "commitBeforeChange": "b6a023c447628100c104708666eddd0b2eaa41d3", "commitAfterChange": "86b71cb1b9784a9b87c86b4f3f12632ae6773d1f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic Success(String name)", "signatureAfterChange": " \t \tpublic void testSuccess()", "diff": ["-\tpublic Success(String name) {", "-\t\tsuper(name);", "+\t", "+\tpublic void testSuccess() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a96f4dd45943b8f45e6ae2b59374d4ab", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/InitializationError.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public List<Throwable> getCauses()", "signatureAfterChange": "      public List<Throwable> getCauses()", "diff": ["-        return fErrors;", "+        return errors;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa39f33fcc8aa1198bd4f718a7dec742", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "1d982e5310d57fe0ea4b63e05f20215ee3add1fe", "commitAfterChange": "24a5aad1f49b4decf946f1df701e354a18544132", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Override \tpublic Statement chain(final TestMethod method)", "signatureAfterChange": "  \t@Override \tpublic Statement childBlock(final TestMethod method)", "diff": ["-\tpublic Statement chain(final TestMethod method) {", "+\tpublic Statement childBlock(final TestMethod method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa7a76ccce4cdeb7f355bda13d3191ef", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/framework/TestResult.java", "commitBeforeChange": "2745d016f648e783360bd076f23b36908f8125b0", "commitAfterChange": "b064a274adb12c6e866cb08dedc70534237330b2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public synchronized void addFailure(Test test, AssertionFailedError t)", "signatureAfterChange": "     public synchronized void addFailure(Test test, AssertionFailedError e)", "diff": ["-    public synchronized void addFailure(Test test, AssertionFailedError t) {", "-        fFailures.add(new TestFailure(test, t));", "+    public synchronized void addFailure(Test test, AssertionFailedError e) {", "+        fFailures.add(new TestFailure(test, e));", "-            each.addFailure(test, t);", "+            each.addFailure(test, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa85f0dae112a88c93af08f5eca392e0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/runner/BaseTestRunner.java", "commitBeforeChange": "2745d016f648e783360bd076f23b36908f8125b0", "commitAfterChange": "b064a274adb12c6e866cb08dedc70534237330b2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public synchronized void addFailure(final Test test, final AssertionFailedError t)", "signatureAfterChange": "      public synchronized void addFailure(final Test test, final AssertionFailedError e)", "diff": ["-    public synchronized void addFailure(final Test test, final AssertionFailedError t) {", "-        testFailed(TestRunListener.STATUS_FAILURE, test, t);", "+    public synchronized void addFailure(final Test test, final AssertionFailedError e) {", "+        testFailed(TestRunListener.STATUS_FAILURE, test, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa8d11acdf4bd1c57680fb6d7db9e60c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/framework/JUnit4TestAdapterCache.java", "commitBeforeChange": "d3e86b059db787af5c0d58ddf3f69af5b42865b8", "commitAfterChange": "7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic List<Test> asTestList(Description description)", "signatureAfterChange": "  \tpublic List<Test> asTestList(Plan plan)", "diff": ["-\tpublic List<Test> asTestList(Description description) {", "-\t\tif (description.isTest())", "-\t\t\treturn Arrays.asList(asTest(description));", "+\tpublic List<Test> asTestList(Plan plan) {", "+\t\tif (plan.isTest())", "+\t\t\treturn Arrays.asList(asTest(plan));", "-\t\t\tfor (Description child : description.getChildren()) {", "+\t\t\tfor (Plan child : plan.getChildren()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa9739d5be25ca1a742bd4f93fd6caea", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "248bdb8248d80ac57d8b485ef73e758103a0c312", "commitAfterChange": "18299dc8f8aaae0e64345795b2884eb7f42ad460", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t\tprivate Object[] computeParams() throws Exception", "signatureAfterChange": "  \t\tprivate Object[] computeParams() throws Exception", "diff": ["-\t\t\t\t\t\t\t\tgetTestClass()).getName()));", "+\t\t\t\t\t\t\t\tgetTestClass().getJavaClass()).getName()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab0b827354b6245dba22979c5f516907", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/assertion/AssertionTest.java", "commitBeforeChange": "751f75986b11336ac8310d73c89003b0b09ecb92", "commitAfterChange": "766343797294634c86186664c519d65d7d984c96", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 53, "signatureBeforeChange": " \t \t@Test public void nullMessage()", "signatureAfterChange": " \t \t@Test public void nullMessage()", "diff": ["-\t\t\tassertEquals(\"\", exception.getMessage());", "+\t\t\t// we used to expect getMessage() to return \"\"; see failWithNoMessageToString()", "+\t\t\tassertNull(exception.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab1024b4fc689b29669e0b89f380fd27", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/tests/ForwardCompatibilityTest.java", "commitBeforeChange": "be2fbfe3e2fb20a1ab11e9759f000fe6c143e544", "commitAfterChange": "5cfc92d9ee355a316619563c6cb6e2834d130b01", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  \t\t@Override \t\tpublic Description getDescription()", "signatureAfterChange": "  \t\t@Override \t\tpublic Description getDescription()", "diff": ["-\t\t\treturn null;", "+\t\t\treturn new EmptyDescription();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab1cf9372316f02e88c9ee896fbd05bf", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "f98130957df08de9cae93169298e04bf84388cae", "commitAfterChange": "43b0fe352d5bced0c341640d0c630d23f2022a7e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Override \tprotected TestMethod wrapMethod(final Method method)", "signatureAfterChange": "  \t@Override \tprotected JUnit4MethodRunner wrapMethod(final Method method)", "diff": ["-\tprotected TestMethod wrapMethod(final Method method) {", "-\t\treturn new TheoryMethod(method, getTestClass());", "+\tprotected JUnit4MethodRunner wrapMethod(final Method method) {", "+\t\treturn new TheoryMethodRunner(method, getTestClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac201a6ffc1f3f720f3a8674a849e920", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tprotected Statement withPotentialTimeout(TestMethod method, Statement next)", "signatureAfterChange": "  \tprotected Statement withPotentialTimeout(TestAnnotation annotation, \t\t\tStatement next)", "diff": ["-\tprotected Statement withPotentialTimeout(TestMethod method, Statement next) {", "-\t\tlong timeout= method.getTimeout();", "+\tprotected Statement withPotentialTimeout(TestAnnotation annotation,", "+\t\t\tStatement next) {", "+\t\tlong timeout= annotation.getTimeout();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac2b1b8a7321ee75a45a4597bfa3c72f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactoryParams.java", "commitBeforeChange": "56193048f411846a58c0e0377a5f1ccfecd3d2f9", "commitAfterChange": "826529633261161edd2d9dc0f866b2c3c0420514", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r     public FilterFactoryParams(Description description)", "signatureAfterChange": "\r     public FilterFactoryParams()", "diff": ["-    public FilterFactoryParams(Description description) {\r", "-        this(description, null);\r", "+    public FilterFactoryParams() {\r", "+        this(null);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aceaefda73e5ef4d0c9bf576395c79d0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/ComparisonFailure.java", "commitBeforeChange": "95f56b32ef3950e83273335e1ba6c2b6cf1a5540", "commitAfterChange": "674bb8f296b0bc7bbfbd8a1126cff2d98333bbf2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public String getActual()", "signatureAfterChange": "     public String getActual()", "diff": ["-        return fActual;", "+        return actual;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad56d3bc8ae0eadc973e74fec7180192", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/junit/samples/money/MoneyBag.java", "commitBeforeChange": "eb8b5ee18ac02eb345ac54cc5bb15d4d3afc4fd4", "commitAfterChange": "2859b41ad921d7f525c8dff5a3a9a5a0eb8d68b9", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-        StringBuffer buffer = new StringBuffer();", "-        buffer.append(\"{\");", "+        StringBuilder sb = new StringBuilder();", "+        sb.append(\"{\");", "-            buffer.append(each);", "+            sb.append(each);", "-        buffer.append(\"}\");", "-        return buffer.toString();", "+        sb.append(\"}\");", "+        return sb.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adab8057a2b54b4cdc0ed473e7183525", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/CategoriesAndParameterizedTest.java", "commitBeforeChange": "b3831d600d2d893ec6250ee930188cc373d81ee5", "commitAfterChange": "403f761da11bdaf9a03538139e7ae51601c36b0e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t@Test \tpublic void shouldSucceedWithAParameterizedClassSomewhere()", "signatureAfterChange": "     \t@Test \tpublic void shouldSucceedWithAParameterizedClassSomewhere()", "diff": ["+   ", "-\t\tResult result= new JUnitCore().run(ParameterTokenSuite.class);", "+\t\tResult result= new JUnitCore().run(ParameterTokenSuiteWellFormed.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae29a31c1e7c2bf2b4690bc16111a57b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/interceptor/ExternalResource.java", "commitBeforeChange": "734ab5187c068599352e5fdc7374c1334d484fef", "commitAfterChange": "54917b88aab026dabb4541276ed875117c1e1faa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic final Statement intercept(final Statement base, \t\t\tFrameworkMethod method, Object target)", "signatureAfterChange": " \tpublic final Statement apply(final Statement base, \t\t\tFrameworkMethod method, Object target)", "diff": ["-public abstract class ExternalResource implements StatementInterceptor {", "-\tpublic final Statement intercept(final Statement base,", "+public abstract class ExternalResource implements MethodRule {", "+\tpublic final Statement apply(final Statement base,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae6f1b3d2254c3be86201504f93601f7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/AssumptionTest.java", "commitBeforeChange": "4dcf3a499652b3c089d91e209c6f01313115ff76", "commitAfterChange": "a916d4133c7e394130d7953da427aae9917ab92c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Test \tpublic void failedAssumptionsMeanIgnored()", "signatureAfterChange": "  \t@Test \tpublic void failedAssumptionsMeanIgnored()", "diff": ["-\t\tassertThat(result.getUnrunnableCount(), is(1));", "+\t\tassertThat(result.getFailedAssumptionCount(), is(1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae9ece3f96001696b61f7bf9c6095638", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCore.java", "commitBeforeChange": "143c96470aec3221f76f9dcc8042fb36cc88b852", "commitAfterChange": "a72b0dbef4b01e8ad0b832d9a579dd7fabd5a071", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic static Result runClasses(Executioner asdfasdf, Class<?>... classes)", "signatureAfterChange": " \tpublic static Result runClasses(Computer computer, Class<?>... classes)", "diff": ["-\tpublic static Result runClasses(Executioner asdfasdf, Class<?>... classes) {", "-\t\treturn new JUnitCore().run(asdfasdf, classes);", "+\tpublic static Result runClasses(Computer computer, Class<?>... classes) {", "+\t\treturn new JUnitCore().run(computer, classes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aeb56ef49fe5335187b17cf04a173e2e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactory.java", "commitBeforeChange": "5edfb4447b609c178d63a3d991172861076d143b", "commitAfterChange": "34336085d5aba69c997f8e6b244531561afebcd4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "         public FilterNotCreatedException(String message, Exception exception)", "signatureAfterChange": "         public FilterNotCreatedException(String message)", "diff": ["-    public static class FilterNotCreatedException extends ClassNotFoundException {", "-        public FilterNotCreatedException(String message, Exception exception) {", "-            super(message, exception);", "+    public static class FilterNotCreatedException extends FilterFactoryFactory.FilterFactoryNotCreatedException {", "+        public FilterNotCreatedException(String message) {", "+            super(message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aebbe6148cf99ae1b6deafb04b46bd22", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/junit/framework/JUnit4TestAdapter.java", "commitBeforeChange": "10b674dbba2a8ceadb65dfc8e8033072f41fc2aa", "commitAfterChange": "6a83bc0f1e5f9839a36910c3a21108bc38367afb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic JUnit4TestAdapter(final Class<?> newTestClass, \t\t\tJUnit4TestAdapterCache cache)", "signatureAfterChange": "  \tpublic JUnit4TestAdapter(final Class<?> newTestClass, \t\t\tJUnit4TestAdapterCache cache)", "diff": ["-\t\tfRunner = Request.aClass(newTestClass).getRunner();", "+\t\tfRunner = Request.classWithoutSuiteMethod(newTestClass).getRunner();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aed0485f928f8b5dc39e0fb28c140db7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Suite.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     protected List<Runner> getChildren()", "signatureAfterChange": "      @Override     protected List<Runner> getChildren()", "diff": ["-        return fRunners;", "+        return runners;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af05a533e60aa13cc4ecb5d9b76ec92c", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "4a28bf95b3c84e93aa7fbd7c3c0b4df91557a582", "commitAfterChange": "4999b51527fa32f2c17d3488ddc4095b19fa732a", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " \t \tprotected JFrame createUI(String suiteName)", "signatureAfterChange": " \t \tprotected JFrame createUI(String suiteName)", "diff": ["-\t\taddGrid(panel, fUseLoadingRunner,  \t0, 2, 3, GridBagConstraints.HORIZONTAL, 1.0, GridBagConstraints.WEST);", "+\t\taddGrid(panel, fUseLoadingRunner,  \t0, 2, 3, GridBagConstraints.NONE, 1.0, GridBagConstraints.WEST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af0c7ea850c8eecb64266cc65f9c8b45", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/SynchronizedRunListener.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void testStarted(Description description) throws Exception", "signatureAfterChange": "      @Override     public void testStarted(Description description) throws Exception", "diff": ["-        synchronized (fMonitor) {", "-            fListener.testStarted(description);", "+        synchronized (monitor) {", "+            listener.testStarted(description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af3ea53566696a9aaa4ef749569a2261", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprotected List<TestMethod> computeTestMethods()", "signatureAfterChange": "  \tprotected List<FrameworkMethod> computeTestMethods()", "diff": ["-\tprotected List<TestMethod> computeTestMethods() {", "+\tprotected List<FrameworkMethod> computeTestMethods() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af63bd0054e16000ba7d34219190be49", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "a68b42cafad9f55f8296a2540f7aa93378ec1c40", "commitAfterChange": "23793cd92c4c0f8449e2edaec745437c5ebbd619", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \t\t@Override \t\tpublic void evaluate() throws Throwable", "signatureAfterChange": "  \t\t@Override \t\tpublic void evaluate() throws Throwable", "diff": ["-\t\t\tif (fMatcher != null)", "+\t\t\tif (fMatcher.expectsThrowable())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af8768534426182030cfc566f4cf6748", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/ThrowableCauseMatcher.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     protected boolean matchesSafely(T item)", "signatureAfterChange": "      @Override     protected boolean matchesSafely(T item)", "diff": ["-        return fMatcher.matches(item.getCause());", "+        return matcher.matches(item.getCause());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af89e990d15f6346cee862637cc6eb5d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java", "commitBeforeChange": "9917b9fe95fd237b824b0bb6a3f9ef9efedd2b3b", "commitAfterChange": "48af7e797dbefa1fc47e80394c7f74ef87c3c7ab", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void failWithHelpfulMessageForNonStaticClassRule()", "signatureAfterChange": "      @Test     public void failWithHelpfulMessageForNonStaticClassRule()", "diff": ["-        assertClassHasFailureMessage(TestWithNonStaticClassRule.class,", "+        assertClassHasFailureMessage(TestWithNonStaticClassRule.class, 2,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afa7c03f229120e117d3adb904405415", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "c732aa178a822671d3de88e5ece05f9bf464172b", "commitAfterChange": "af9634a3656bcd9c3988692c32381d0772077584", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate void printFailedAssumptions(Result result)", "signatureAfterChange": " \t \tprivate void printFailedAssumptions(Result result)", "diff": ["-\t\tprintEvents(\"invalid assumption\", \"INVALID ASSUMPTION \", result.getFailedAssumptions());", "+\t\tprintEvents(\"invalid assumption\", \"INVALID ASSUMPTION \", result.getInvalidAssumptions());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afe8379c569e5151016c950378dea0df", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "496ee866a46f783d145b649a688df57cbf79490e", "commitAfterChange": "5f7fddf537e551109ffd6241a00c87a2b3521523", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tprivate List<Description> findLeaves(Request request)", "signatureAfterChange": " \t \tprivate List<Description> findLeaves(Request request)", "diff": ["-\t\tfindLeaves(null, request.getRunner().getPlan(), results);", "+\t\tfindLeaves(null, request.getRunner().getDescription(), results);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b00ca7a077259ce3a06ed62a2922a2df", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "77ecd2119d3124b72935038effffadf7b98eccd9", "commitAfterChange": "3a791ec79fff66aebc332fe4e4cbf626e39bd3d3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic Object createTest() throws Exception", "signatureAfterChange": "  \tpublic Object createTest() throws Exception", "diff": ["-\t\treturn fTestClass.getConstructor().newInstance();", "+\t\treturn getTestClass().getConstructor().newInstance();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b02c6a1fb1084d30cb3bac149cf70ba3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public int testCount()", "signatureAfterChange": "     public int testCount()", "diff": ["-        for (Description child : children) {", "+        for (Description child : fChildren) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b073abef2f3cd114121294d64194df55", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/assertion/BothTest.java", "commitBeforeChange": "96635b8788e3d089450c2791dd2f11100244d9e1", "commitAfterChange": "8a9c52df0ef4c0667a3a54bd4c6387c149577c2e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \t@Test public void subclassesAreOkInSecondPositionOnly()", "signatureAfterChange": " \t \t@Test public void subclassesAreOkInSecondPositionOnly()", "diff": ["-\t\tassertThat(3, both(is(Integer.class)).and(is(3)));", "+\t\tassertThat(3, both(is(Integer.class)).and(matches(is(3))));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0909626bd5b10e2fbecd9d28364f371", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java", "commitBeforeChange": "5077a8c714a3693e26e15932feeb3861175ac849", "commitAfterChange": "1d86784cd452e8d9e30d812255cadb75ef8dae15", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t\tpublic StubbedTheoryAnchor(FrameworkMethod method)", "signatureAfterChange": " \t\tpublic StubbedTheoryAnchor(FrameworkMethod method, TestClass testClass)", "diff": ["-\tpublic class StubbedTheoryAnchor extends TheoryAnchor {", "-\t\tpublic StubbedTheoryAnchor(FrameworkMethod method) {", "-\t\t\tsuper(method);", "+\tpublic static class StubbedTheoryAnchor extends TheoryAnchor {", "+\t\tpublic StubbedTheoryAnchor(FrameworkMethod method, TestClass testClass) {", "+\t\t\tsuper(method, testClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b093ce0685e7b17d5bf303c954707d4d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Override     public int hashCode()", "signatureAfterChange": "      @Override     public int hashCode()", "diff": ["-        return fUniqueId.hashCode();", "+        return uniqueId.hashCode();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0e90016fb327d61fd08431a80492375", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "ba28bf0f0384ba8b2fc377ef612545f411a56ec4", "commitAfterChange": "a0fcd02fd011ac868de148484d3ae506867e6b91", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  \tprotected JTabbedPane createTestRunViews()", "signatureAfterChange": "  \tprotected JTabbedPane createTestRunViews()", "diff": ["-\t\tJTabbedPane pane= new JTabbedPane(JTabbedPane.BOTTOM);", "+\t\tJTabbedPane pane= new JTabbedPane(SwingConstants.BOTTOM);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0f94d59952bdb279155b277d89e5c72", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java", "commitBeforeChange": "1fa373f01d126d437f08a57a7b5e7a7ec0a01b85", "commitAfterChange": "8672a83f51b183c756649a423b908271c894b8df", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \t@Test \tpublic void numberOfFieldsAndParametersShouldMatch()", "signatureAfterChange": "  \t@Test \tpublic void numberOfFieldsAndParametersShouldMatch()", "diff": ["-\t\tResult result = JUnitCore.runClasses(BadNumberOfAnnotedFieldTest.class);", "+\t\tResult result = JUnitCore.runClasses(BadNumberOfAnnotatedFieldTest.class);", "-\t\tassertTrue(failures.get(0).getException().getMessage().contains(\"Wrong number of parameters and @parameter fields. @parameter fields counted: 1, available parameters: 2.\"));", "+\t\tassertTrue(failures.get(0).getException().getMessage().contains(\"Wrong number of parameters and @Parameter fields. @Parameter fields counted: 1, available parameters: 2.\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b11108e161eae6986f60f88b7a0146e0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java", "commitBeforeChange": "c236a9e019a814b3542dcfe3a3a61b036c14d252", "commitAfterChange": "24cbcbc12fdd2afb7d52ff354e08213db8a62edd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \t@Test public void testsRunInParallel()", "signatureAfterChange": " \t \t@Test public void testsRunInParallel()", "diff": ["+\t", "-\t\tfOne= null;", "-\t\tfTwo= null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b155ea46db88937e7d8a292fbb4bf398", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public Class<?> getReturnType()", "signatureAfterChange": "     public Class<?> getReturnType()", "diff": ["-        return fMethod.getReturnType();", "+        return method.getReturnType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1683db1b092d92e20cd26c7a2997e77", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/StatusLine.java", "commitBeforeChange": "1e752dcb0a967bcb47fae4b12fb8765e79571e69", "commitAfterChange": "bfc94ee739d62127c7477300b26127bd560765a1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void showError(String status)", "signatureAfterChange": " \t \tpublic void showError(String status)", "diff": ["+\t\tsetToolTipText(status);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1b170e46b2e82d274d699c0e243300b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "commitAfterChange": "59b1e2926cdebfd257c6c091ee2bd478d8aa04d2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \t\tprivate void invokeWithActualParameters(Object target, \t\t\t\tAssignments complete) throws Throwable", "signatureAfterChange": "  \t\tprivate void invokeWithActualParameters(Object target, \t\t\t\tAssignments complete) throws Throwable", "diff": ["-\t\t\tfinal Object[] values= complete.getActualValues(nullsOk(), target);", "+\t\t\tfinal Object[] values= complete.getMethodArguments(nullsOk(), target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1f3053aca5dd4071b5c5daeb1e883a1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "c732aa178a822671d3de88e5ece05f9bf464172b", "commitAfterChange": "af9634a3656bcd9c3988692c32381d0772077584", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t\t \t\t@Override \t\tpublic void testAssumptionInvalid(Description description, \t\t\t\tAssumptionViolatedException e)", "signatureAfterChange": " \t\t \t\t@Override \t\tpublic void testAssumptionInvalid(Description description, \t\t\t\tAssumptionViolatedException e)", "diff": ["-\t\t\t// TODO: (Dec 12, 2007 2:39:00 PM) text should be unrunnable, not IGNORED TEST", "-", "-\t\t\tfUnrunnables.add(new FailedAssumption(description, e));", "+\t\t\tfInvalidAssumptions.add(new InvalidAssumption(description, e));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2667213e633011b8cc7f4c59e9bf29b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java", "commitBeforeChange": "143c96470aec3221f76f9dcc8042fb36cc88b852", "commitAfterChange": "a72b0dbef4b01e8ad0b832d9a579dd7fabd5a071", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \t@Test public void testsRunInParallel()", "signatureAfterChange": " \t \t@Test public void testsRunInParallel()", "diff": ["-\t\tResult result= JUnitCore.runClasses(ParallelExecutioner.methods(), Example.class);", "+\t\tResult result= JUnitCore.runClasses(ParallelComputer.methods(), Example.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b268f60026a6934c6b0d38a5c3e5c5a4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/validator/AnnotationValidator.java", "commitBeforeChange": "fe5d86eba71a1f59dbbed09de4add01cc20420c0", "commitAfterChange": "d9054149988487750679e35a349df7e0e2df5870", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public List<Exception> validateAnnotatedMethod(Method method)", "signatureAfterChange": "     public List<Exception> validateAnnotatedMethod(FrameworkMethod method)", "diff": ["-    public List<Exception> validateAnnotatedMethod(Method method) {", "+    public List<Exception> validateAnnotatedMethod(FrameworkMethod method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b27e83140d218190c365a69f8ad14b2f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java", "commitBeforeChange": "a37fd9ac8b2afc54384fd32f470b54aa69dc620a", "commitAfterChange": "5e9467c59b235ce84e7c7753c43609dea069e932", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \t@Parameters \tpublic static Collection<Object[]> testsWithEventMatcher()", "signatureAfterChange": "  \t@Parameters \tpublic static Collection<Object[]> testsWithEventMatcher()", "diff": ["-\t\t\t\t\t\t\t\t+ \"     but: was <java.lang.IllegalArgumentException: actualMessage>\")) },", "+\t\t\t\t\t\t\t\t+ \"     but: message was \\\"actualMessage\\\"\")) },", "+\t\t\t\t\t\t\t\tcontainsString(\"cause was <java.lang.NullPointerException: an unexpected cause>\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2eb106c246e0c08486159a662dba4b5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/FilterFactoriesTest.java", "commitBeforeChange": "ae1fc256c8a56f0bd4ad88acd1190503002726f7", "commitAfterChange": "cfaceb6d34390d999ff238d53fcb73898b32f98f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r     @Test\r     public void shouldCreateFilter() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldCreateFilter() throws Exception", "diff": ["-                FilterFactoryStub.class, new FilterFactoryParams());\r", "+                FilterFactoryStub.class, new FilterFactoryParams(\"\"));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b34d59e9ede5d9320d729c6f572c7806", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public List<FrameworkMethod> getAnnotatedMethods(             Class<? extends Annotation> annotationClass)", "signatureAfterChange": "     public List<FrameworkMethod> getAnnotatedMethods(             Class<? extends Annotation> annotationClass)", "diff": ["-        return Collections.unmodifiableList(getAnnotatedMembers(fMethodsForAnnotations, annotationClass, false));", "+        return Collections.unmodifiableList(getAnnotatedMembers(methodsForAnnotations, annotationClass, false));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3f0847de17da50c784927f75e70946c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TemporaryFolder.java", "commitBeforeChange": "3f0adeaf0a812cf88e76527b95c499e3ba99404e", "commitAfterChange": "de9269563b6af4ccf9e3d3750864158a27eee6d3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public TemporaryFolder(File parentFolder)", "signatureAfterChange": "     public TemporaryFolder(File parentFolder)", "diff": ["+     */", "+        this.assureDeletion = false;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b416ed4a7d6863d691c11d9724001c01", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      void putTestDuration(Description description, long duration)", "signatureAfterChange": "      void putTestDuration(Description description, long duration)", "diff": ["-        fDurations.put(description.toString(), duration);", "+        durations.put(description.toString(), duration);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b425e32ea157157e213613e5a2d9e992", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "a4c68872a91681139d404825c2bb04bd5ba804dd", "commitAfterChange": "f0ef837a40922ac08c608661385abf71732975d3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Override \tprotected Link chain(final TestMethod method, Object test)", "signatureAfterChange": "  \t@Override \tprotected Link chain(final TestMethod method, Object test, EachTestNotifier notifier)", "diff": ["-\tprotected Link chain(final TestMethod method, Object test) {", "+\tprotected Link chain(final TestMethod method, Object test, EachTestNotifier notifier) {", "-\t\treturn notifying(method, next);", "+\t\treturn notifying(method, next, notifier);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b440c197dc7db26b65b366249513c65e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedExceptionMatcher.java", "commitBeforeChange": "2d886e29734f9f55b75db91095880c5d109ff678", "commitAfterChange": "6bea82df32f687d636f1b843a1918a3a1ff22a6e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tvoid and(Matcher<?> matcher)", "signatureAfterChange": "  \tvoid and(Matcher<?> matcher)", "diff": ["-\t", "+", "-\t\tfCompositeMatcher= withStacktrace(createCompositeMatcher());", "+\t\tfCompositeMatcher= null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4502118ce22a4b5c66c8aeb50d161ca", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/matchers/JUnitMatchers.java", "commitBeforeChange": "ee037247a9a03d8ac2e584d52a544b9733f2c016", "commitAfterChange": "40375ef1fc08b1f666b21d299d8b52b10a53e6fb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t@Deprecated \tpublic static <T> CombinableMatcher<T> either(Matcher<? super T> matcher)", "signatureAfterChange": " \t@Deprecated \tpublic static <T> CombinableEitherMatcher<T> either(Matcher<? super T> matcher)", "diff": ["-\tpublic static <T> CombinableMatcher<T> either(Matcher<? super T> matcher) {", "+\tpublic static <T> CombinableEitherMatcher<T> either(Matcher<? super T> matcher) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4a9c6ab04ebb028ac5a42ac9339187b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "979e8abbe974e8847668f5887403da78a6165ebc", "commitAfterChange": "1fcd990f60518c941a44bae2596392021614a20b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic BlockJUnit4ClassRunner(Class<?> klass) throws InitializationError", "signatureAfterChange": " \tpublic BlockJUnit4ClassRunner(Class<?> klass) throws InitializationError", "diff": ["-\t\tfTestMethods= computeTestMethods();", "-\t\tvalidate();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4ae53f81ece822e87a425012af39c95", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/framework/AssertTest.java", "commitBeforeChange": "8c1784e4b026417ed381ac5f0a7e2dda9084d7b0", "commitAfterChange": "e7707e88ef3b20655d91513c6ed90c5e3db62cc8", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \t \tpublic void testComparisonErrorWithNullArgument2()", "signatureAfterChange": " \t \tpublic void testComparisonErrorWithExpectedNull()", "diff": ["-\tpublic void testComparisonErrorWithNullArgument2() {", "+\tpublic void testComparisonErrorWithExpectedNull() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b53587078cccbfddefa753986e05d51d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "7cec75a6e01cdf9a5320626f4ba9812b0aa8e725", "commitAfterChange": "99ffe0144444c0727248dad94f153b1fc91bf847", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "           @Test     public void getMethodsNullSorter() throws Exception", "signatureAfterChange": "           @Test     public void getMethodsNullSorter() throws Exception", "diff": ["-        assertEquals(Arrays.asList(expected).toString(), declaredMethods(ClassWithoutSorterAnnotation.class));", "+        assertEquals(Arrays.asList(expected).toString(), declaredMethods(DummySortWithoutAnnotation.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b571278917c747e7cd94437edc918327", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected ParentRunner(Class<?> testClass) throws InitializationError", "signatureAfterChange": "     protected ParentRunner(Class<?> testClass) throws InitializationError", "diff": ["-        fTestClass = createTestClass(testClass);", "+        this.testClass = createTestClass(testClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5cd550c7b554b00d6939a086d41cd39", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/Parameterized.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t\t@Override \t\tpublic void run(RunNotifier notifier)", "signatureAfterChange": "  \t\t@Override \t\tpublic void run(RunNotifier notifier)", "diff": ["-\t\t\tfor (TestMethod method : fTestMethods)", "+\t\t\tfor (FrameworkMethod method : fTestMethods)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5d8a05a59522a2b6041ea913f37e48f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedExceptionMatcherBuilder.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      boolean expectsThrowable()", "signatureAfterChange": "      boolean expectsThrowable()", "diff": ["-        return !fMatchers.isEmpty();", "+        return !matchers.isEmpty();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6064a1a909a2fbbb48b01a377270dc7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "a681b760978751ca4c4ccc6de616b0643d6c2b0e", "commitAfterChange": "7944e8f8afbeaff17d337304df52dac227034423", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic String getMethodName()", "signatureAfterChange": " \tpublic String getMethodName()", "diff": ["-\t\treturn parseMethod();", "+\t\treturn methodAndClassNamePatternGroupOrDefault(1, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b62454edf585ef53e7718330ffc07039", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "3efad73fc5f34d7d860a8653e91d93c8539ac7bd", "commitAfterChange": "a2ca18438f84e16d5dc1e456dcd9ec6be0cd4b7a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public ExpectedException setMissingExceptionMessage(String providedMessage)", "signatureAfterChange": "     public ExpectedException reportMissingExceptionWithMessage(String providedMessage)", "diff": ["-    public ExpectedException setMissingExceptionMessage(String providedMessage) {", "+    public ExpectedException reportMissingExceptionWithMessage(String providedMessage) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b63400aa1ba9b1a3c20bec8c658020fb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/StacktracePrintingMatcher.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void describeTo(Description description)", "signatureAfterChange": "      public void describeTo(Description description)", "diff": ["-        fThrowableMatcher.describeTo(description);", "+        throwableMatcher.describeTo(description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b666febe6c6c4119743b1428d854c1c1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "a07f1be1bc7eb7f7d757da48d0a3110452cca4d4", "commitAfterChange": "095d3f8df0708f98d41f5894a892388b6985c44f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \t@Override \tprotected void validateConstructor(List<Throwable> errors)", "signatureAfterChange": " \t \t@Override \tprotected void validateZeroArgConstructor(List<Throwable> errors)", "diff": ["-\tprotected void validateConstructor(List<Throwable> errors) {", "+\tprotected void validateZeroArgConstructor(List<Throwable> errors) {", "-\t\t// TODO: should still be public"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b68a919a9f31beab613aa2bce9cab4f1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/manipulation/Filter.java", "commitBeforeChange": "9a2e993c544a2cd1a0b93c9f59340910f51366b4", "commitAfterChange": "f3c211455b9e09be36e4bf7ccc499fbdd35a527a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Filter matchDescription(final Description desiredDescription)", "signatureAfterChange": " \tpublic static Filter matchMethodDescription(final Description desiredDescription)", "diff": ["-\t//TODO javadoc", "-\tpublic static Filter matchDescription(final Description desiredDescription) {", "+\t */", "+\tpublic static Filter matchMethodDescription(final Description desiredDescription) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6ba39729d0bf864b084206dfcee1358", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "accece2b35f804f86f47ff7d6a76cdb296b76e34", "commitAfterChange": "2e699926f4e8c79407338e5973ec198bd3844212", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic static Description createTestDescription(String className, String name, Object uniqueId)", "signatureAfterChange": " \tpublic static Description createTestDescription(String className, String name, Serializable uniqueId)", "diff": ["-\tpublic static Description createTestDescription(String className, String name, Object uniqueId) {", "+\tpublic static Description createTestDescription(String className, String name, Serializable uniqueId) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6fca799f876f4cf5c346db8633e1a2f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/interceptor/InterceptorTest.java", "commitBeforeChange": "8e313a1e58a56694c0441b2fa60974fa8e1bfe31", "commitAfterChange": "409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t\t\tpublic Statement intercept(final Statement base, \t\t\t\t\tFrameworkMethod method, Object target)", "signatureAfterChange": " \t\t\tpublic Statement apply(final Statement base, \t\t\t\t\tFrameworkMethod method, Object target)", "diff": ["-\t\tprivate static class Incrementor implements StatementInterceptor {", "-\t\t\tpublic Statement intercept(final Statement base,", "+\t\tprivate static class Increment implements MethodRule {", "+\t\t\tpublic Statement apply(final Statement base,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b724507ba9a87b32d71b0d497acd9b8b", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/awtui/TestRunner.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \t \tprivate void showErrorTrace()", "signatureAfterChange": " \t \tprivate void showErrorTrace()", "diff": ["-\t\tfTraceArea.setText(getTrace(t));", "+\t\tfTraceArea.setText(filterStack(getTrace(t)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7706a164e9b64a538447612a614180d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "94aa692b0489d1fabd31c779c1a700a3b0890a24", "commitAfterChange": "544e5ba3a3034932879604b72fb6f8526d27eb50", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void throwTimeoutException(StatementThread thread) throws Exception", "signatureAfterChange": "      private void throwTimeoutException(StatementThread thread) throws Exception", "diff": ["-                \"test timed out after %d milliseconds\", fTimeout));", "+                \"test timed out after %d milliseconds\", TimeUnit.MILLISECONDS.convert(fTimeout, fTimeUnit)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b784106d978999ef3885405508ffb517", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "commitAfterChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic void sort(final Sorter sorter)", "signatureAfterChange": "  \tpublic void sort(final Sorter sorter)", "diff": ["-\t\tCollections.sort(fTestMethods, new Comparator<Method>() {", "-\t\t\tpublic int compare(Method o1, Method o2) {", "-\t\t\t\treturn sorter.compare(methodDescription(o1), methodDescription(o2));", "+\t\tCollections.sort(fTestMethods, new Comparator<TestMethod>() {", "+\t\t\tpublic int compare(TestMethod o1, TestMethod o2) {", "+\t\t\t\treturn sorter.compare(methodDescription(o1),", "+\t\t\t\t\t\tmethodDescription(o2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7d5723a2c56681ebefb55d8e6725248", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/AssertionTest.java", "commitBeforeChange": "88f0fe3ced24506ddf9791f7a088163f4e7b1f20", "commitAfterChange": "3d7fee93ddc21a6e849c36d5ae58b37b3d189665", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \t@Test(expected= AssertionError.class) public void arraysNotEqual()", "signatureAfterChange": " \t \t@Test(expected= AssertionError.class) public void arraysNotEqual()", "diff": ["-\t\tassertEquals(new Object[] {new Object()}, new Object[] {new Object()});", "+\t\tassertArrayEquals((new Object[] {new Object()}), (new Object[] {new Object()}));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7e83f699bb39bf1544ce6bf26413c7f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprotected Statement invoke(TestMethod method, Object test)", "signatureAfterChange": "  \tprotected Statement invoke(FrameworkMethod method, Object test)", "diff": ["-\tprotected Statement invoke(TestMethod method, Object test) {", "+\tprotected Statement invoke(FrameworkMethod method, Object test) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b803b3577a50a54e3863dda8f9e4d07a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCore.java", "commitBeforeChange": "8c91ac2cb9da29edf75ae22dba1e1aaa60275176", "commitAfterChange": "432e3e27df0b072f3bab066cd33214913f4c7f32", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic Result runMain(JUnitSystem system, String... args)", "signatureAfterChange": " \tpublic Result runMain(JUnitSystem system, String... args)", "diff": ["-\t\tResult result= run(classes.toArray(new Class[0]));", "+\t\t// TODO too many Executioner creations", "+\t\tResult result= run(new Executioner(), classes.toArray(new Class[0]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b870c30de270d4ec5eb01eb80bdf676a", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/internal/runners/TestClassMethodsRunner.java", "commitBeforeChange": "b0c0b79ae5e0dcfc1670cf950d31a14f1c9c630c", "commitAfterChange": "c73e37759ed5119900f1ddf3f50dac5bb3ae19be", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \t@Override \tpublic void run(RunNotifier notifier)", "signatureAfterChange": " \t \t@Override \tpublic void run(RunNotifier notifier)", "diff": ["-\t\t\ttestAborted(notifier, getDescription());", "+\t\t\ttestAborted(notifier, getDescription(), new Exception(\"No runnable methods\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8f39e34e4eff77be547de438d65f1cf", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "95a8c63cb0a7867d58ee4a0777fec65bab39a1ec", "commitAfterChange": "c7895eb8695d79b14ff2f903fbb2fab3e52e4c43", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate Statement withClassRules(Statement statement)", "signatureAfterChange": " \tprivate Statement withClassRules(Statement statement)", "diff": ["-\t\tfinal List<Value> classRules= classRules();", "+\t\tfinal List<BisectionRule> classRules= classRules();", "-\t\tfor (final Value classRule : classRules) {", "-\t\t\tnext = classRule.apply(next, fTestClass);", "+\t\tfor (final BisectionRule classRule : classRules) {", "+\t\t\tnext = classRule.apply(next, getDescription());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b90d0cc12b9316bed343aeb0160a4ad6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprotected Statement possiblyExpectingExceptions(TestMethod method, \t\t\tStatement next)", "signatureAfterChange": "  \tprivate Statement possiblyExpectingExceptions(TestAnnotation annotation, \t\t\tStatement next)", "diff": ["-\tprotected Statement possiblyExpectingExceptions(TestMethod method,", "+\tprivate Statement possiblyExpectingExceptions(TestAnnotation annotation,", "-\t\treturn method.expectsException() ? new ExpectException(next, method", "+\t\treturn annotation.expectsException() ? new ExpectException(next, annotation"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9604b892e49b2e605856a5321794b71", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java", "commitBeforeChange": "3aca014a2c39723febbe7def2fd132da80c3f4a9", "commitAfterChange": "2c6c142aa801cef3520ca668e75a670a32b4859a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void dataPointsMustBeStatic()", "signatureAfterChange": "      @Test     public void dataPointFieldsMustBeStatic()", "diff": ["-", "-    @Test", "-    public void dataPointsMustBeStatic() {", "-        assertThat(", "-                testResult(DataPointsMustBeStatic.class),", "-                CoreMatchers.<PrintableResult>both(failureCountIs(2))", "-                        .and(", "-                                hasFailureContaining(\"DataPoint field THREE must be static\"))", "-                        .and(", "-                                hasFailureContaining(\"DataPoint field FOUR must be static\")));", "-    }", "+    public void dataPointFieldsMustBeStatic() {", "+                testResult(DataPointFieldsMustBeStatic.class),", "+                CoreMatchers.<PrintableResult>both(failureCountIs(2))", "+                        .and(", "+                                hasFailureContaining(\"DataPoint field THREE must be static\"))", "+                        .and(", "+                                hasFailureContaining(\"DataPoint field FOURS must be static\")));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b98c092fbff2bb2562ef9e1c5d4e61de", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "8134371705a43fa2b2a8913678d4336d867f6647", "commitAfterChange": "785c7859cd87dc5cb3872fef476ce2f86c9259dd", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic Class<?> getTestClass()", "signatureAfterChange": " \tpublic Class<?> getTestClass()", "diff": ["-        if (fClazz != null) {", "-            return fClazz;", "-        }", "+\t\tif (fTestClass != null)", "+\t\t\treturn fTestClass;", "-\t\t\treturn Class.forName(name, false, getClass().getClassLoader());", "+\t\t\treturn fTestClass= Class.forName(name, false, getClass().getClassLoader());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9a9439d193a6d0bb5f677714741d5f3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Suite.java", "commitBeforeChange": "6ff2381af213bf699e62244315debec66b373d81", "commitAfterChange": "67e3edf20613b1278f4be05353b31b5129e21882", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic Suite(SuiteBuilder builder, Class<?>[] classes)", "signatureAfterChange": " \tpublic Suite(RunnerBuilder builder, Class<?>[] classes)", "diff": ["-\tpublic Suite(SuiteBuilder builder, Class<?>[] classes) {", "+\tpublic Suite(RunnerBuilder builder, Class<?>[] classes) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba522f08e2456c24dc4cd68e7d2db266", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "49d62f902ba7dba44b0b2b3b71e45004c667b2d5", "commitAfterChange": "faba199e389e3c977fc5573315790a5cde5f7611", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \t@SuppressWarnings(\"deprecation\") \tprivate Statement withMethodRules(FrameworkMethod method, Object target, \t\t\tStatement result)", "signatureAfterChange": "  \t@SuppressWarnings(\"deprecation\") \tprivate Statement withMethodRules(FrameworkMethod method, List<TestRule> testRules, \t\t\tObject target, Statement result)", "diff": ["-\tprivate Statement withMethodRules(FrameworkMethod method, Object target,", "-\t\t\tStatement result) {", "-\t\tList<TestRule> testRules= getTestRules(target);", "+\tprivate Statement withMethodRules(FrameworkMethod method, List<TestRule> testRules,", "+\t\t\tObject target, Statement result) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba545cc5c9aa330c8784dbf4c8eb76b8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/InitializationError.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public InitializationError(List<Throwable> errors)", "signatureAfterChange": "      public InitializationError(List<Throwable> errors)", "diff": ["-        this.errors = errors;", "+        this.fErrors = errors;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb24ee5e3adeea1908d10dbade10e243", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/MultipleFailureException.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public String getMessage()", "signatureAfterChange": "      @Override     public String getMessage()", "diff": ["-                String.format(\"There were %d errors:\", fErrors.size()));", "-        for (Throwable e : fErrors) {", "+                String.format(\"There were %d errors:\", errors.size()));", "+        for (Throwable e : errors) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb9508399627515b9ad77791e86195eb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/ThrowableMessageMatcher.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     protected boolean matchesSafely(T item)", "signatureAfterChange": "      @Override     protected boolean matchesSafely(T item)", "diff": ["-        return fMatcher.matches(item.getMessage());", "+        return matcher.matches(item.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbe3834800fa63f913b9a508426a7844", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/requests/ClassRequest.java", "commitBeforeChange": "10b674dbba2a8ceadb65dfc8e8033072f41fc2aa", "commitAfterChange": "6a83bc0f1e5f9839a36910c3a21108bc38367afb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tClass<? extends Runner> getRunnerClass(Class<?> testClass)", "signatureAfterChange": "  \tClass<? extends Runner> getRunnerClass(Class<?> testClass)", "diff": ["+\t\t} else if (hasSuiteMethod() && fCanUseSuiteMethod) {", "+\t\t\treturn AllTests.class;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc23826545fe8b7fbed56de3440e8135", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          @DataPoint         public static int oneUglyHundred()", "signatureAfterChange": "          @DataPoint         public static int failingDataPoint()", "diff": ["-", "-        @DataPoint", "-        public static int oneUglyHundred() {", "-            throw new RuntimeException();", "-        }", "+", "+        @DataPoint", "+        public static int failingDataPoint() {", "+            throw new RuntimeException();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc276904a1cafe74eb775cd5a752c9fc", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactories.java", "commitBeforeChange": "56193048f411846a58c0e0377a5f1ccfecd3d2f9", "commitAfterChange": "826529633261161edd2d9dc0f866b2c3c0420514", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r     public static Filter createFilter(Class<? extends FilterFactory> filterFactoryClass, FilterFactoryParams params)\r             throws FilterFactoryNotCreatedException", "signatureAfterChange": "\r     public static Filter createFilter(Class<? extends FilterFactory> filterFactoryClass, FilterFactoryParams params)\r             throws FilterNotCreatedException", "diff": ["-            throws FilterFactoryNotCreatedException {\r", "+            throws FilterNotCreatedException {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc4138974b720346e1f09cc6d8756ca5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedExceptionMatcherBuilder.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @SuppressWarnings({\"unchecked\", \"rawtypes\"})     private List<Matcher<? super Throwable>> castedMatchers()", "signatureAfterChange": "      @SuppressWarnings({\"unchecked\", \"rawtypes\"})     private List<Matcher<? super Throwable>> castedMatchers()", "diff": ["-        return new ArrayList<Matcher<? super Throwable>>((List) fMatchers);", "+        return new ArrayList<Matcher<? super Throwable>>((List) matchers);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc50b8f215cd948687ad43c6f6c628c6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "b3831d600d2d893ec6250ee930188cc373d81ee5", "commitAfterChange": "403f761da11bdaf9a03538139e7ae51601c36b0e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Categories(Class<?> klass, RunnerBuilder builder) \t\t\tthrows InitializationError", "signatureAfterChange": "  \tpublic Categories(Class<?> klass, RunnerBuilder builder) \t\t\tthrows InitializationError", "diff": ["+\t\t\t// TODO: too much work in constructors", "+\t\tassertNoCategorizedDescendentsOfUncategorizeableParents(getDescription());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc9f244c58cb0f7fa092447461970799", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "d6662fcc06ec7b07c696eb703c47d3731e4e11c7", "commitAfterChange": "85578d48f6459a05665329faa9b52a861e9142cb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \t@Test public void preferFast()", "signatureAfterChange": " \t \t@Test public void preferFast()", "diff": ["-\t\tDescription thing= max.sort(request).get(1);", "+\t\tDescription thing= max.sortedLeavesForTest(request).get(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bca064749b08a11434fec306ec9ea523", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "beb1f4a80f7fa20523d40535fb81c1b8a7a9e638", "commitAfterChange": "83a25d440d118b7d10779a884d35f31045949e27", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "      private void sortChild(T child)", "signatureAfterChange": "      private void sortChild(T child, Sorter sorter)", "diff": ["-    private void sortChild(T child) {", "-        fSorter.apply(child);", "+    private void sortChild(T child, Sorter sorter) {", "+        sorter.apply(child);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bca64d0f6aee875d59a3fd19b8033459", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "commitAfterChange": "44e7458b19d5cd1900a765a440c96e85b81d25fc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t@Override \tprotected TheoryAnchor anchor(TestMethod method)", "signatureAfterChange": "  \t@Override \tprotected TheoryAnchor invoke(TestMethod method)", "diff": ["-\tprotected TheoryAnchor anchor(TestMethod method) {", "+\tprotected TheoryAnchor invoke(TestMethod method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd1da2732cfe89323189c2e817b5175d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/model/TestClass.java", "commitBeforeChange": "8e3f361443ddf8bca21c3db661c75d374fe78dba", "commitAfterChange": "c96215c5d025336d8ab1d7d2ab57daee20869cea", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic List<FrameworkMethod> getAnnotatedMethods( \t\t\tClass<? extends Annotation> annotationClass)", "signatureAfterChange": "  \tpublic List<FrameworkMethod> getAnnotatedMethods( \t\t\tClass<? extends Annotation> annotationClass)", "diff": ["-\t\treturn methodsForAnnotations.get(annotationClass);", "+\t\treturn fMethodsForAnnotations.get(annotationClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd3adfb3b4bdfad4cca09a55709e14d8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "474df716f498aa2695c422cceb3e46cad999e972", "commitAfterChange": "9a2e993c544a2cd1a0b93c9f59340910f51366b4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t  \tpublic String getFolder()", "signatureAfterChange": "  \tpublic File getFile()", "diff": ["-\tpublic String getFolder() {", "+\tpublic File getFile() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd7d51383c1a42966a1a673be7a682b1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/runners/Enclosed.java", "commitBeforeChange": "0c458a8796cc5ffcda5286ee4a367c8e31ae7c88", "commitAfterChange": "ebb9d7f536a5b1be8364c6cb7367cac8c3849caa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic Enclosed(Class<?> klass, RunnerBuilder builder) throws Throwable", "signatureAfterChange": " \tpublic Enclosed(Class<?> klass, RunnerBuilder builder) throws Throwable", "diff": ["-\t\tsuper(builder, klass, filterOutAbstractClasses(klass.getClasses()));", "+\t\tsuper(builder, klass, filterAbstractClasses(klass.getClasses()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be2543e305e7745092a84e9c728bb0ef", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/parameterized/TestWithParameters.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public String getName()", "signatureAfterChange": "      public String getName()", "diff": ["-        return fName;", "+        return name;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be4c95794c59e915c1cfff9097446730", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TestWatcher.java", "commitBeforeChange": "2745d016f648e783360bd076f23b36908f8125b0", "commitAfterChange": "b064a274adb12c6e866cb08dedc70534237330b2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void finishedQuietly(Description description,             List<Throwable> errors)", "signatureAfterChange": "      private void finishedQuietly(Description description,             List<Throwable> errors)", "diff": ["-        } catch (Throwable t) {", "-            errors.add(t);", "+        } catch (Throwable e) {", "+            errors.add(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be67a7e38626841d57de8e4946f69eec", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "971c9a52281458375af79e303449fe22bf91feab", "commitAfterChange": "97402a3401c6cc2d45d395c0d9d636f483b5571c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void addChild(Description description)", "signatureAfterChange": " \tpublic void addChild(Description description)", "diff": ["-\t\t// TODO: deprecate this, too", "-\t\tfChildren.add(description);", "-\t\t// description.setParent(this);", "-\t}", "+\t\tgetChildren().add(description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bed1d55bcfeb033952fc3a69a03d6908", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t\tpublic StubbedTheoryAnchor(TestMethod method)", "signatureAfterChange": " \t\tpublic StubbedTheoryAnchor(FrameworkMethod method)", "diff": ["-\t\tpublic StubbedTheoryAnchor(TestMethod method) {", "+\t\tpublic StubbedTheoryAnchor(FrameworkMethod method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf3f7bd00b27e771a9c9c4951e3ed53a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/Stopwatch.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private long getNanos()", "signatureAfterChange": "      private long getNanos()", "diff": ["-        return fEndNanos - fStartNanos;", "+        return endNanos - startNanos;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf52c9617b59323fbe6377ee44f716f1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "378e17964a4188bad9b3d966207a2f682072148e", "commitAfterChange": "451ca12156d5704809a1feff78a10a9451cd2023", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \t@Test public void testsNotYetRunHavePriority()", "signatureAfterChange": " \t \t@Test public void preferNewTests()", "diff": ["-\t@Test public void testsNotYetRunHavePriority() {", "+\t@Test public void preferNewTests() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfaa0b3a24a592e5133430e29d9827ce", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/EventCollector.java", "commitBeforeChange": "df70c1087de9d3827656ede187371bbe29d2a974", "commitAfterChange": "a538d25ae50887dc9395f2f59ad5040752c0ec4f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \t@Override \tpublic void testFinished(Description description) throws Exception", "signatureAfterChange": "  \t@Override \tpublic void testFinished(Description description) throws Exception", "diff": ["-", "-\t@Override", "-\tpublic void testFinished(Description description) throws Exception {", "-\t\ttestsFinished.add(description);", "-\t}", "+", "+\t@Override", "+\tpublic void testFinished(Description description) throws Exception {", "+\t\tfTestsFinished.add(description);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0153aebbcfce5750730b1542428452d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/FilterFactoriesTest.java", "commitBeforeChange": "4eecfb1eff9aa5304f6b30874a26734124ac902d", "commitAfterChange": "a75370887a71a09b3e5a12dec252513e80228e6b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r     @Test\r     public void shouldCreateFilter() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldCreateFilter() throws Exception", "diff": ["+\r", "+    @Test\r", "-                FilterFactoryStub.class, new FilterFactoryParams(\"\"));\r", "+                FilterFactoryStub.class,\r", "+                new FilterFactoryParams(\r", "+                        Description.createSuiteDescription(testName.getMethodName()),\r", "+                        \"\"));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c053b19dd8d8b04e9008b18c3d4e0e5f", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "1e752dcb0a967bcb47fae4b12fb8765e79571e69", "commitAfterChange": "bfc94ee739d62127c7477300b26127bd560765a1", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 69, "signatureBeforeChange": " \t \tprivate void doRunTest(final Test testSuite, final boolean reload)", "signatureAfterChange": " \t \tprivate void doRunTest(final Test testSuite)", "diff": ["-\tprivate void doRunTest(final Test testSuite, final boolean reload) {", "+\tprivate void doRunTest(final Test testSuite) {", "-\t\t\t\tfTestResult= createTestResult();", "-\t\t\t\tfTestResult.addListener(TestRunner.this);", "-\t\t\t\taboutToStart(testSuite);", "+\t\t// make sure that the test result is created before we start the", "+\t\t// test runner thread so that listeners can register for it.", "+\t\tfTestResult= createTestResult();", "+\t\tfTestResult.addListener(TestRunner.this);", "+\t\taboutToStart(testSuite);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0833322857954e45bdf624206f05df3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/runners/Enclosed.java", "commitBeforeChange": "ebb9d7f536a5b1be8364c6cb7367cac8c3849caa", "commitAfterChange": "229490bbf8731ec07fd7ce6d68f0e22b502b9caf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprivate static Class<?>[] filterAbstractClasses(final Class<?>[] classes)", "signatureAfterChange": " \t \tprivate static Class<?>[] filterAbstractClasses(final Class<?>[] classes)", "diff": ["-\t\tfinal Set<Class<?>> filteredSet = new HashSet<Class<?>>();", "+\t\tfinal List<Class<?>> filteredList = new ArrayList<Class<?>>();", "-\t\t\t\tfilteredSet.add(clazz);", "+\t\t\t\tfilteredList.add(clazz);", "-\t\treturn filteredSet.toArray(new Class<?>[filteredSet.size()]);", "+\t\treturn filteredList.toArray(new Class<?>[filteredList.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c141a9a14239b16fb625e96139ac37f4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "496ee866a46f783d145b649a688df57cbf79490e", "commitAfterChange": "5f7fddf537e551109ffd6241a00c87a2b3521523", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void addChild(Description description)", "signatureAfterChange": " \tpublic void addChild(Description description)", "diff": ["-\t\t// TODO: deprecate this, too", "-\t\tfChildren.add(description);", "-\t\t// description.setParent(this);", "-\t}", "+\t\tgetChildren().add(description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c15a53bffe7afc7d54905addfd625f22", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "474df716f498aa2695c422cceb3e46cad999e972", "commitAfterChange": "9a2e993c544a2cd1a0b93c9f59340910f51366b4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic MaxHistory(String folder)", "signatureAfterChange": "  \tpublic MaxHistory(File storedResults)", "diff": ["-\tpublic MaxHistory(String folder) {", "-\t\tfFolder= folder;", "-\t\t// TODO Auto-generated constructor stub", "+\tpublic MaxHistory(File storedResults) {", "+\t\tfFolder= storedResults;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c16ac8f6880012f8f1445eaf89387e0e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/TheoryMethod.java", "commitBeforeChange": "149ecd4dcd99697710aa350e9cd3b3bcac877125", "commitAfterChange": "787ed4e5bc2b68e8b5cdb6190ff1fc053f1a5b13", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic TheoryMethod(Method method, TestClass testClass)", "signatureAfterChange": "  \tpublic TheoryMethod(Method method, TestClass testClass)", "diff": ["-\t\tfMethod= method;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c16c08c4a5bc42120e25b56b778ddd23", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "161229441b7365fa06f0d82e272e15f1f378b315", "commitAfterChange": "30a039854fd7f8cda135222054b247c158b91fa7", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tprotected Statement withPotentialTimeout(FrameworkMethod method, \t\t\tObject test, Statement next)", "signatureAfterChange": " \tprotected Statement withPotentialTimeout(FrameworkMethod method, \t\t\tObject test, Statement next)", "diff": ["-\t\tlong timeout= getTimeout(getAnnotation(method));", "+\t\tlong timeout= getTimeout(method.getAnnotation(Test.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c18f1e9627bfb071ef8ca14a72948e7b", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "fbb9b839e7c602f6ce30d3582452eda397b31518", "commitAfterChange": "4cf0c7d9db0f7b29f65d9dab047fef9805dae671", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 52, "signatureBeforeChange": "  \tTestCollector createTestCollector()", "signatureAfterChange": "  \tTestCollector createTestCollector()", "diff": ["-\t\treturn new LoadingClassPathTestCollector();", "+\t\treturn new SimpleClassPathTestCollector();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1b0218c8a5a0b87a7b0ab6fe0eaf9d6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/AssertionTest.java", "commitBeforeChange": "88f0fe3ced24506ddf9791f7a088163f4e7b1f20", "commitAfterChange": "3d7fee93ddc21a6e849c36d5ae58b37b3d189665", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t     @Test public void arraysDifferAtElement0withMessage()", "signatureAfterChange": " \t     @Test public void arraysDifferAtElement0withMessage()", "diff": ["-\t\t\tassertEquals(\"message\", new Object[] { true }, new Object[] { false });", "+\t\t\tassertArrayEquals(\"message\", (new Object[] { true }), (new Object[] { false }));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1bdb82789ff08f9eb6e6f10acfb72a2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "          private GuesserQueue createGuesserQueue(Assignments incomplete)                 throws Exception", "signatureAfterChange": "          private GuesserQueue createGuesserQueue(Assignments incomplete)                 throws Throwable", "diff": ["-                throws Exception {", "+                throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1e35fa5e3d13c0da776216ae5ce3e74", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/FilterFactoryFactoryTest.java", "commitBeforeChange": "74cab2dc9b8c32482d2c86a66a0dd9318930b4bc", "commitAfterChange": "5820172f30e56e9b0bc8feca6d7b3be58b7ee0ee", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r     @Test\r     public void shouldCreateFilterWithNoArguments() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldCreateFilterWithNoArguments() throws Exception", "diff": ["-        Filter filter = filterFactoryFactory.createFilterFromFilterSpec(FilterFactoryStub.class.getName());\r", "+        Filter filter = filterFactoryFactory.createFilterFromFilterSpec(\r", "+                createSuiteDescription(testName.getMethodName()), FilterFactoryStub.class.getName());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1e9a04a43cca8d37c63dddc45724175", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "f49fb25b6fbffcc7a68b28824ed3856ffa9d6fdd", "commitAfterChange": "078e45bd31a9920e00633ad6ce658e22529304f2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t\tprotected void runWithCompleteAssignment(final Assignments complete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tInvocationTargetException, NoSuchMethodException, Throwable", "signatureAfterChange": "  \t\tprotected void runWithCompleteAssignment(final Assignments complete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tInvocationTargetException, NoSuchMethodException, Throwable", "diff": ["-\t\t\tnew JUnit4ClassRunner(getTestClass()) {", "+\t\t\tnew BlockJUnit4ClassRunner(getTestClass()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c270b967b304103412450e2ac1583ba5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java", "commitBeforeChange": "b403288c9bf67e4989b7f3af5b8360828dcb8e94", "commitAfterChange": "61994e0c0aa768b43fad1ac6e35b1e43ffc8b142", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      @Test     public void countWithParameterizedField()", "signatureAfterChange": "      @Test     public void providesDataByAnnotatedFields()", "diff": ["-    public void countWithParameterizedField() {", "+    public void providesDataByAnnotatedFields() {", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c35ce55a434a7d0980619daaf49c9c87", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "4081076e513e84bb2376f889d4108e64e9a18653", "commitAfterChange": "a58514aec7e843339be24980e92aeeb759327ffb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic Link handleExceptions(Anchor next)", "signatureAfterChange": "  \tpublic Anchor handleExceptions(Anchor next)", "diff": ["-\tpublic Link handleExceptions(Anchor next) {", "+\tpublic Anchor handleExceptions(Anchor next) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3cbce3d95e1bfbe4bc47ce68ac0754e", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/awtui/TestRunner.java", "commitBeforeChange": "04f4f3197084ad9ad7c050ce1a40d6f4421662f4", "commitAfterChange": "538187aac8c4858e9e366c4e4ee4e50cf40331c6", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \t \tpublic void rerun()", "signatureAfterChange": " \t \tpublic void rerun()", "diff": ["-\t\t\tObject[] args= new Object[]{((TestCase)test).name()};", "+\t\t\tObject[] args= new Object[]{((TestCase)test).getName()};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c40eff5f860b3d7f7c1ebefebc64838a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/SynchronizedRunListener.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void testRunStarted(Description description) throws Exception", "signatureAfterChange": "      @Override     public void testRunStarted(Description description) throws Exception", "diff": ["-        synchronized (fMonitor) {", "-            fListener.testRunStarted(description);", "+        synchronized (monitor) {", "+            listener.testRunStarted(description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c422686f9621cc78d544e77ed4f8c7a7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public boolean isComplete()", "signatureAfterChange": "      public boolean isComplete()", "diff": ["-        return fUnassigned.size() == 0;", "+        return unassigned.size() == 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c45bbe63c98e2327f4a5d00c20460379", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/parameterized/BlockJUnit4ClassRunnerWithParameters.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     protected String getName()", "signatureAfterChange": "      @Override     protected String getName()", "diff": ["-        return fName;", "+        return name;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c45d1c22f224f39e67da4856ab4160cd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "af5722e040626f7c3aa14ccbfb4cb2375f43a561", "commitAfterChange": "568e29c871ea144e12f273dc7e12c949a5a507da", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate Statement withClassRules(Statement statement)", "signatureAfterChange": " \tprivate Statement withClassRules(Statement statement)", "diff": ["-\t\tfinal List<ClassRule> classRules= classRules();", "+\t\tfinal List<Value> classRules= classRules();", "-\t\tfor (final ClassRule classRule : classRules) {", "+\t\tfor (final Value classRule : classRules) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c464aa4f706c60325fa7e91e5f8c8503", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/parameterized/TestWithParameters.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public TestClass getTestClass()", "signatureAfterChange": "      public TestClass getTestClass()", "diff": ["-        return fTestClass;", "+        return testClass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c467fbfe944398afbff83df457ba8c81", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/TestClassTest.java", "commitBeforeChange": "15566c4b6633db5cc84cae78088b36346b7d42f4", "commitAfterChange": "9d3821f6411ad85a683b8d38e4d42411229f2eec", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "     \t     \t@Ignore     \t@Test     \tpublic int methodOfWrongType()", "signatureAfterChange": "     \t         @Ignore         @Test         public int methodB()", "diff": ["-    \t@Ignore", "-    \t@Test", "-    \tpublic int methodOfWrongType() {", "-    \t\treturn 0;", "+        @Ignore", "+        @Test", "+        public int methodB() {", "+            return 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c49711c81b6fb055649a10db948004b4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/ErrorReportingRunner.java", "commitBeforeChange": "b8008562db24f9189b90dd0e3864a381681d527f", "commitAfterChange": "7ceaea00ee1af6168d737b785460a803d6f3c50c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tprotected Description describeChild(Throwable child)", "signatureAfterChange": "  \t@Override \tprotected Description describeChild(Throwable child)", "diff": ["-\t\treturn Description.createTestDescription(fClass, \"initializationError\");", "+\t\treturn Description.createTestDescription(getTestClass().getJavaClass(), \"initializationError\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4d91319d1b8244ecb48571b243a816a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java", "commitBeforeChange": "1350d0562466adbea1a9f8408084acdd005bfc13", "commitAfterChange": "bd8a96dbbfe93f134f75c768e5c1254cff8a9e9f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t\t@Override \t\tprotected void runWithIncompleteAssignment(Assignments incomplete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tThrowable", "signatureAfterChange": "  \t\t@Override \t\tprotected void runWithIncompleteAssignment(Assignments incomplete, EachTestNotifier notifier) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tThrowable", "diff": ["-\t\tprotected void runWithIncompleteAssignment(Assignments incomplete)", "+\t\tprotected void runWithIncompleteAssignment(Assignments incomplete, EachTestNotifier notifier)", "-\t\t\t\trunWithAssignment(incomplete.assignNext(guessers.remove(0)));", "+\t\t\t\trunWithAssignment(incomplete.assignNext(guessers.remove(0)), notifier);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5080720d026af08e8ee22d181a1deb9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/TestMethodTest.java", "commitBeforeChange": "db89759c22060a89f6750e2e92ce93072eace561", "commitAfterChange": "521fdb5aae536bd5055f6d0e4f09c5a7bdb5799f", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tprivate List<Throwable> validateAllMethods(Class<?> clazz)", "signatureAfterChange": "  \tprivate List<Throwable> validateAllMethods(Class<?> clazz)", "diff": ["-\t\t\tnew TestClassRunner(clazz);", "+\t\t\tnew JUnit4ClassRunner(clazz);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c556d357023733447fcb5b44a84da7ee", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "24f9b5223c2801a5cba0611e447e66677069b837", "commitAfterChange": "3637f328439c9c8ab2d165cbf328fb131f8716a2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprivate Description(String displayName, Object uniqueId, Annotation... annotations)", "signatureAfterChange": "  \tprivate Description(String displayName, Serializable uniqueId, Annotation... annotations)", "diff": ["-\tprivate Description(String displayName, Object uniqueId, Annotation... annotations) {", "+\tprivate Description(String displayName, Serializable uniqueId, Annotation... annotations) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5692527fea128ce6e0c7fa0040e05f3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/ErrorReportingRunner.java", "commitBeforeChange": "1fcd990f60518c941a44bae2596392021614a20b", "commitAfterChange": "e07e59eb9d24f6e4fa85dd99f311c1feca6ea983", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t@Override \tprotected void runChild(Throwable child, RunNotifier notifier)", "signatureAfterChange": "  \tprivate void runCause(Throwable child, RunNotifier notifier)", "diff": ["-\t@Override", "-\tprotected void runChild(Throwable child, RunNotifier notifier) {", "-\t\tDescription description= describeChild(child);", "-\t\tnotifier.fireTestStarted(description);", "-\t\tnotifier.fireTestFailure(new Failure(description, child));", "-\t\tnotifier.fireTestFinished(description);", "-\t}", "+", "+\tprivate void runCause(Throwable child, RunNotifier notifier) {", "+\t\tDescription description= describeCause(child);", "+\t\tnotifier.fireTestStarted(description);", "+\t\tnotifier.fireTestFailure(new Failure(description, child));", "+\t\tnotifier.fireTestFinished(description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c56ce55cb9145b51421d956968a05d44", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/AssertionTest.java", "commitBeforeChange": "88f0fe3ced24506ddf9791f7a088163f4e7b1f20", "commitAfterChange": "3d7fee93ddc21a6e849c36d5ae58b37b3d189665", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \t@Test public void arraysDifferentLengthMessage()", "signatureAfterChange": " \t \t@Test public void arraysDifferentLengthMessage()", "diff": ["-\t\t\tassertEquals(\"not equal\", new Object[0] , new Object[1]);", "+\t\t\tassertArrayEquals(\"not equal\", (new Object[0]), (new Object[1]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c596ea784ad3bc29348a4270ee818ba6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/ParentRunner.java", "commitBeforeChange": "8964b10541f840e559a3308a043b64a8c1f6af57", "commitAfterChange": "42beed3ad166a9cceefc59f6c79a16844cae0d02", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tprivate List<T> computeFilteredChildren()", "signatureAfterChange": "  \tprivate List<T> computeFilteredChildren()", "diff": ["-\t\t\t\t\tfiltered.add(sortChild(filterChild(each, fFilter), fSorter));", "+\t\t\t\t\tfiltered.add(sortChild(filterChild(each)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c59eb5836245c24af597282730c4ed13", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "647e9ff7881d796ea6b87472e3c1bd40e2e19c76", "commitAfterChange": "77ecd2119d3124b72935038effffadf7b98eccd9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t\t \t\t@Override \t\tpublic void testIgnoredReason(Description description, \t\t\t\tAssumptionViolatedException e)", "signatureAfterChange": " \t\t \t\t@Override \t\tpublic void testIgnoredReason(Description description, \t\t\t\tAssumptionViolatedException e)", "diff": ["-\t\t\t// TODO: (Nov 26, 2007 2:35:49 PM) best way to do this?", "-", "-\t\t\tfCount--;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5d90a06e643df181ade16a96804073c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "         @Override         public void testRunStarted(Description description) throws Exception", "signatureAfterChange": "         @Override         public void testRunStarted(Description description) throws Exception", "diff": ["-            fStartTime.set(System.currentTimeMillis());", "+            startTime.set(System.currentTimeMillis());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5dd4dc615301b37521eaf4378627519", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "commitAfterChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tprotected Link invoke(TestMethod method, Object test)", "signatureAfterChange": " \t \tprotected Statement invoke(TestMethod method, Object test)", "diff": ["-\tprotected Link invoke(TestMethod method, Object test) {", "-\t\treturn new Invoke(method, test);", "+\tprotected Statement invoke(TestMethod method, Object test) {", "+\t\treturn new InvokeMethod(method, test);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5dd9bf6ff120172ee77bc506ddb1e17", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "785a33b478d358e79a3b6592754ad9ec051e4278", "commitAfterChange": "5d9e0022d3f6db1367d530579de6332b9c8802e3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "         void c(boolean b)", "signatureAfterChange": "         void epsilon()", "diff": ["-        int c() {return 0;}", "-        void c(boolean b) {}", "+        void delta() {}", "+        void epsilon() {}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c61a4d5e1829b724d78209d4e1c052e9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit38ClassRunner.java", "commitBeforeChange": "0174b15e97908a4a68625cb029a07e8f7d593afc", "commitAfterChange": "9a192ede27ad2936b0c4a31fe5d0180dfd556d8b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic void sort(Sorter sorter)", "signatureAfterChange": "  \tpublic void sort(Sorter sorter)", "diff": ["-\t\tif (fTest instanceof JUnit4TestAdapter) {", "-\t\t\tJUnit4TestAdapter adapter= (JUnit4TestAdapter) fTest;", "+\t\tif (fTest instanceof Sortable) {", "+\t\t\tSortable adapter= (Sortable) fTest;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6471366f92a7ebc434a8b984c75126a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "a4c68872a91681139d404825c2bb04bd5ba804dd", "commitAfterChange": "f0ef837a40922ac08c608661385abf71732975d3", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tprotected Link ignoreViolatedAssumptions(Link next)", "signatureAfterChange": " \t \tprotected Link ignoreViolatedAssumptions(Link next)", "diff": ["-\t\treturn new IgnoreViolatedAssumptions(next);", "+\t\treturn new IgnoringViolatedAssumptions(next);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c66e59a5a3669e2be748bca8daab706f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/methods/TestMethodTest.java", "commitBeforeChange": "b58da5a388357ab124feefa5280e2116ac31de53", "commitAfterChange": "b0c9945e21e66efcc947b3859f947185a87c59a9", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  \t@Test public void ignoreRunner()", "signatureAfterChange": "  \t@Test public void ignoreRunner()", "diff": ["+\t\tassertEquals(1, result.getRunCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c67c04b464b52243d235ca27acf83708", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/methods/TimeoutTest.java", "commitBeforeChange": "35b428a24bdd2eddd9653189632896d4f5b1ce42", "commitAfterChange": "3e8e865039fe6531666afb860961d787065b589e", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "         @Test(timeout=100)         public void failure() throws Exception", "signatureAfterChange": "          @Test         public void failure() throws Exception", "diff": ["-        @Test(timeout=100)", "+", "+        @Test"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c67ce644f704a2adf8c3f1fbe5f26577", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runner/Description.java", "commitBeforeChange": "7ce9e33e556cf1817d94f769e09c9d22b8d2764d", "commitAfterChange": "c43c3c5d4dc53c8477d492ed5e13d7f7c8e3d2ad", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Description createTestDescription(Class<?> clazz, String name, Annotation... annotations)", "signatureAfterChange": " \tpublic static Description createTestDescription(Class<?> clazz, String name, Annotation... annotations)", "diff": ["-\t\treturn new Description(String.format(\"%s(%s)\", name, clazz.getName()), annotations);", "+\t\treturn new Description(String.format(\"%s(%s)\", name, clazz.getName()), clazz.getAnnotations(), annotations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6cf1d8b20cd7d5f29986323e12763af", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "95a8c63cb0a7867d58ee4a0777fec65bab39a1ec", "commitAfterChange": "c7895eb8695d79b14ff2f903fbb2fab3e52e4c43", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprotected List<Value> classRules()", "signatureAfterChange": " \tprotected List<BisectionRule> classRules()", "diff": ["-\tprotected List<Value> classRules() {", "-\t\tList<Value> results= new ArrayList<Value>();", "+\tprotected List<BisectionRule> classRules() {", "+\t\tList<BisectionRule> results= new ArrayList<BisectionRule>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6d6574056d5a08dc0ffa6d5c000ecfb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "9917b9fe95fd237b824b0bb6a3f9ef9efedd2b3b", "commitAfterChange": "063004dca462777a969ab1e0002dd3053014381c", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "     static public void assertNotEquals(String message, float unexpected,             float actual, float delta)", "signatureAfterChange": "     static public void assertNotEquals(String message, float unexpected,             float actual, float delta)", "diff": ["-            failEquals(message, new Float(actual));", "+            failEquals(message, actual);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6d7b1dc85ee66c3f796faf3e40ee94b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestClass.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic void validateInstanceMethods(List<Throwable> errors)", "signatureAfterChange": "  \tpublic void validateInstanceMethods(List<Throwable> errors)", "diff": ["-\t\tList<TestMethod> methods= getAnnotatedMethods(Test.class);", "+\t\tList<FrameworkMethod> methods= getAnnotatedMethods(Test.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7236d41d9a14127b7e31885edd1fd13", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/TestClassMethodsRunner.java", "commitBeforeChange": "67e270ef6be1e50b2e86f39d27750340c8482198", "commitAfterChange": "5751178d6c4485afb11f4b14b9804dc954faa5ee", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprotected void invokeTestMethod(Method method, RunNotifier notifier)", "signatureAfterChange": "  \tprotected void invokeTestMethod(Method method, RunNotifier notifier)", "diff": ["-\t\t\ttestAborted(notifier, methodDescription(method), e.getCause());", "+\t\t\tnotifier.testAborted(methodDescription(method), e.getCause());", "-\t\t\ttestAborted(notifier, methodDescription(method), e);", "+\t\t\tnotifier.testAborted(methodDescription(method), e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c73a6772e5251735cb35c888d0f25ca6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/assertion/AssertionTest.java", "commitBeforeChange": "c618504adee4bc91b3bd7e0ff06be6e1fa9d88cc", "commitAfterChange": "15815f55d2e9ae567ef8fe0a172f498b87a3a880", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "          @Test public void assertThatIncludesAdvancedMismatch()", "signatureAfterChange": "          @Test public void assertThatIncludesAdvancedMismatch()", "diff": ["-        String expectedMessage = \"identifier\\nExpected: is an instance of java.lang.Integer\\n     but: \\\"actual\\\" is a java.lang.String\";", "+        String expectedMessage = \"identifier\\nExpected: is an instance of java.lang.Integer\\n     got: \\\"actual\\\"\\n\";", "-            assertThat(\"identifier\", \"actual\", matches(is(Integer.class)));", "+            assertThat(\"identifier\", \"actual\", is(Integer.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c73f14fb32aeda824e59628dcef8ce23", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      private Class<?>[] getParameterTypes()", "signatureAfterChange": "      private Class<?>[] getParameterTypes()", "diff": ["-        return fMethod.getParameterTypes();", "+        return method.getParameterTypes();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c74afb026d0056dc651bb263175ab5b5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/TestMethod.java", "commitBeforeChange": "149ecd4dcd99697710aa350e9cd3b3bcac877125", "commitAfterChange": "787ed4e5bc2b68e8b5cdb6190ff1fc053f1a5b13", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic boolean isIgnored()", "signatureAfterChange": "  \tpublic boolean isIgnored()", "diff": ["-\t\treturn fMethod.getAnnotation(Ignore.class) != null;", "+\t\treturn getMethod().getAnnotation(Ignore.class) != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c767f2b5b46ff88d6b91ea7ea397d52c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/links/IgnoreTest.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t@Override \tpublic void run(Roadie context) throws Throwable", "signatureAfterChange": " \t@Override \tpublic void run(EachTestNotifier context) throws Throwable", "diff": ["-\tpublic void run(Roadie context) throws Throwable {", "+\tpublic void run(EachTestNotifier context) throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c771f93cd54e4ca3de94be68fd31ae71", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      Long getFailureTimestamp(Description key)", "signatureAfterChange": "      Long getFailureTimestamp(Description key)", "diff": ["-        return failureTimestamps.get(key.toString());", "+        return fFailureTimestamps.get(key.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7aeac76c6b1647952b158ebcc3898fe", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/samples/AllTests.java", "commitBeforeChange": "a0f0ee1b3f72d9361eb09b3a25156c69a748aa47", "commitAfterChange": "478f7f9217cf5da219a7ba298e3a87f405378194", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Test suite ( )", "signatureAfterChange": " \tpublic static Test suite ( )", "diff": ["-\t\tsuite.addTest(VectorTest.suite());", "+\t\tsuite.addTest(ListTest.suite());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7fd124f1b2dd8127f0569ecf019d32d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/categories/CategoryValidatorTest.java", "commitBeforeChange": "f5e7e1ff180bb17e4f9df702a038e06a974f78f6", "commitAfterChange": "fe5d86eba71a1f59dbbed09de4add01cc20420c0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void testAndAssertErrrorMessage(Method method, String expectedErrorMessage) throws NoSuchMethodException", "signatureAfterChange": "      private void testAndAssertErrrorMessage(Method method, String expectedErrorMessage) throws NoSuchMethodException", "diff": ["-        List<Throwable> errors = new CategoryValidator().validateAnnotatedMethod(method);", "+        List<Exception> errors = new CategoryValidator().validateAnnotatedMethod(method);", "-        Throwable throwable = errors.get(0);", "-        assertThat(throwable.getMessage(), is(expectedErrorMessage));", "+        Exception exception = errors.get(0);", "+        assertThat(exception.getMessage(), is(expectedErrorMessage));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8170bc006dd4bddf727d707725612d5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/MethodSorter.java", "commitBeforeChange": "35916619de9d9c3e7ec3d793ab3072c9e78db258", "commitAfterChange": "7924760d2d64f5f7651e9e57d1ca01e1bcce74e0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static Method[] getDeclaredMethods(Class<?> clazz)", "signatureAfterChange": "     public static Method[] getDeclaredMethods(Class<?> clazz)", "diff": ["-        Comparator<Method> comparator= getSorter(clazz.getAnnotation(SortMethodsWith.class));", "+        Comparator<Method> comparator= getSorter(clazz.getAnnotation(FixMethodOrder.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c817716b5a727fe1f662fced1a7fa685", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "96bb03c2aecc818b7a77f9bb7d8684a16d8a80a7", "commitAfterChange": "f634102cf058ed5761b2e4ef66761e2f397b6160", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate void throwTimeoutException(StatementThread thread) throws Exception", "signatureAfterChange": "  \tprivate void throwTimeoutException(StatementThread thread) throws Exception", "diff": ["-\t\texception.setStackTrace(thread.getStackTrace());", "+\t\texception.setStackTrace(thread.getRecordedStackTrace());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c82ce019030dc3233076ab33b52649f3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/links/Link.java", "commitBeforeChange": "0e1c92693e70e52ad9af23ee6180500c74fc9c95", "commitAfterChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic abstract void run(FailureListener listener);", "signatureAfterChange": " \tpublic abstract void run() throws Throwable;", "diff": ["-\tpublic abstract void run(FailureListener listener);", "+\tpublic abstract void run() throws Throwable;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8396e27eee30cf01f5c70c6cc857a61", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "58609e42697cf1ced355527f23553fb3c336734c", "commitAfterChange": "eef732f8e686d719c109a1ca66aed0dc8bba8808", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic <T> List<T> getAnnotatedFieldValues(Object test, \t\t\tClass<? extends Annotation> annotationClass, Class<T> valueClass)", "signatureAfterChange": "  \tpublic <T> List<T> getAnnotatedFieldValues(Object test, \t\t\tClass<? extends Annotation> annotationClass, Class<T> valueClass)", "diff": ["-\t\tfor (FrameworkField eachField : getAnnotatedFields(annotationClass)) {", "+\t\tfor (FrameworkField each : getAnnotatedFields(annotationClass)) {", "-\t\t\t\tObject fieldValue= eachField.get(test);", "+\t\t\t\tObject fieldValue= each.get(test);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c890372cef773d1a6d4eae24844d543d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactories.java", "commitBeforeChange": "56193048f411846a58c0e0377a5f1ccfecd3d2f9", "commitAfterChange": "826529633261161edd2d9dc0f866b2c3c0420514", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r     public static Filter createFilter(String filterFactoryFqcn, FilterFactoryParams params)\r             throws FilterFactoryNotCreatedException", "signatureAfterChange": "\r     public static Filter createFilter(String filterFactoryFqcn, FilterFactoryParams params)\r             throws FilterNotCreatedException", "diff": ["-            throws FilterFactoryNotCreatedException {\r", "+            throws FilterNotCreatedException {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8d974f14016b59085a7880c6fb8517f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/runners/Enclosed.java", "commitBeforeChange": "e8b91fa9f797dfe16aff66ed6ad5d6104e5133fe", "commitAfterChange": "0c458a8796cc5ffcda5286ee4a367c8e31ae7c88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic Enclosed(Class<?> klass, RunnerBuilder builder) throws Throwable", "signatureAfterChange": " \tpublic Enclosed(Class<?> klass, RunnerBuilder builder) throws Throwable", "diff": ["-\t\tsuper(builder, klass, klass.getClasses());", "+\t\tsuper(builder, klass, filterOutAbstractClasses(klass.getClasses()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8f49263cf30c4ccc6492d2fc9b7e54b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "4dcf3a499652b3c089d91e209c6f01313115ff76", "commitAfterChange": "a916d4133c7e394130d7953da427aae9917ab92c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate void printExceptions(String exceptionTypeName, String listPrefix, \t\t\tList<? extends Failure> exceptions)", "signatureAfterChange": "  \tprivate void printEvents(String exceptionTypeName, String listPrefix, \t\t\tList<? extends TestRunEvent> exceptions)", "diff": ["-\tprivate void printExceptions(String exceptionTypeName, String listPrefix,", "-\t\t\tList<? extends Failure> exceptions) {", "+\tprivate void printEvents(String exceptionTypeName, String listPrefix,", "+\t\t\tList<? extends TestRunEvent> exceptions) {", "-\t\tfor (Failure each : exceptions)", "+\t\tfor (TestRunEvent each : exceptions)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8fb9d64e512b7ae800046534df1d97d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java", "commitBeforeChange": "8f0902e5503f4b2fd5a7317ae954a136aa8af94b", "commitAfterChange": "3efad73fc5f34d7d860a8653e91d93c8539ac7bd", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "          @Test         public void throwWithCause()", "signatureAfterChange": "          @Test         public void noThrow()", "diff": ["-        public void throwWithCause() {", "+        public void noThrow() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c900f15e730676e14e1bd0703f54a33b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/interceptor/InterceptorTest.java", "commitBeforeChange": "734ab5187c068599352e5fdc7374c1334d484fef", "commitAfterChange": "54917b88aab026dabb4541276ed875117c1e1faa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\t\tpublic Statement intercept(final Statement base, \t\t\t\t\tFrameworkMethod method, Object target)", "signatureAfterChange": " \t\t\tpublic Statement apply(final Statement base, \t\t\t\t\tFrameworkMethod method, Object target)", "diff": ["-\t\tpublic StatementInterceptor example= new StatementInterceptor() {", "-\t\t\tpublic Statement intercept(final Statement base,", "+\t\tpublic MethodRule example= new MethodRule() {", "+\t\t\tpublic Statement apply(final Statement base,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c97504f5347560ece258cc5543e4fe27", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public Annotation[] getAnnotations()", "signatureAfterChange": "     public Annotation[] getAnnotations()", "diff": ["-        if (fClass == null) {", "+        if (clazz == null) {", "-        return fClass.getAnnotations();", "+        return clazz.getAnnotations();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9d34239ef8c4da11ccf897e5c10e7b6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          private MethodParameterValue(FrameworkMethod dataPointMethod)", "signatureAfterChange": "          private MethodParameterValue(FrameworkMethod dataPointMethod)", "diff": ["-            fMethod = dataPointMethod;", "+            method = dataPointMethod;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9e3283991ba08a2f95b615239741438", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java", "commitBeforeChange": "61994e0c0aa768b43fad1ac6e35b1e43ffc8b142", "commitAfterChange": "97654ff38f976733fa4c6ae9b28e3fe10328183f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void countsRuns()", "signatureAfterChange": "      @Test     public void countsRuns()", "diff": ["-        Result result = JUnitCore.runClasses(FibonacciTest.class);", "-        assertEquals(7, result.getRunCount());", "-    }", "+        Result result = JUnitCore.runClasses(AdditionTest.class);", "+        assertEquals(4, result.getRunCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca29a99310e28333d6fe9b88d545409b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Request.java", "commitBeforeChange": "95da39292ea777ec3ff99be2bb23d46f704f683a", "commitAfterChange": "8e20f520565dc52f5599eafd54b603043bfecbaf", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic Request filterWith(final Description desiredDescription)", "signatureAfterChange": " \tpublic Request filterWith(final Description desiredDescription)", "diff": ["-\t\treturn filterWith(Filter.matchDescription(desiredDescription));", "+\t\treturn filterWith(Filter.matchMethodDescription(desiredDescription));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca40ff73a666974c9ff2401bb690da37", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java", "commitBeforeChange": "01ecc0d5bc9f8b49ed36881cc258573a43bef69f", "commitAfterChange": "7ffc23078cc11ce7502c375242b66d6a745ac9a1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t\tpublic StubbedTheoryAnchor(FrameworkMethod method)", "signatureAfterChange": " \t\tpublic StubbedTheoryAnchor(FrameworkMethod method, TestClass testClass)", "diff": ["-\tpublic class StubbedTheoryAnchor extends TheoryAnchor {", "-\t\tpublic StubbedTheoryAnchor(FrameworkMethod method) {", "-\t\t\tsuper(method);", "+\tpublic static class StubbedTheoryAnchor extends TheoryAnchor {", "+\t\tpublic StubbedTheoryAnchor(FrameworkMethod method, TestClass testClass) {", "+\t\t\tsuper(method, testClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca89248262495abce9613399f89a55a4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "     public void setScheduler(RunnerScheduler scheduler)", "signatureAfterChange": "     public void setScheduler(RunnerScheduler scheduler)", "diff": ["-        this.fScheduler = scheduler;", "+        this.scheduler = scheduler;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cac7e9caef8df91f49585428abbcdbd9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "979e8abbe974e8847668f5887403da78a6165ebc", "commitAfterChange": "1fcd990f60518c941a44bae2596392021614a20b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic Parameterized(Class<?> klass) throws Throwable", "signatureAfterChange": " \tpublic Parameterized(Class<?> klass) throws Throwable", "diff": ["-\t\tvalidate();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cadfb84bc7ae1e01364d11d82511c953", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "0e1c92693e70e52ad9af23ee6180500c74fc9c95", "commitAfterChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tprotected Link ignoreViolatedAssumptions(Link next)", "signatureAfterChange": " \t \tprotected Link ignoreViolatedAssumptions(Link next)", "diff": ["-\t\treturn new IgnoringViolatedAssumptions(next);", "+\t\treturn new IgnoreViolatedAssumptions(next);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cafa3fae62a929d638ab539cec8635b4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/FilterFactoriesTest.java", "commitBeforeChange": "b5084eb51ffdb2a3bd9bed7294afc941a733a693", "commitAfterChange": "c85a267605d4484121afeccef972a7266481ee7c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r     @Test\r     public void shouldThrowExceptionIfNotInstantiable() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldThrowExceptionIfNotInstantiable() throws Exception", "diff": ["-        expectedException.expect(FilterFactories.FilterFactoryNotCreatedException.class);\r", "+        expectedException.expect(FilterFactory.FilterNotCreatedException.class);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb21771cd841630c8346ebfb5c7cd346", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/RunNotifier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void removeListener(RunListener listener)", "signatureAfterChange": "     public void removeListener(RunListener listener)", "diff": ["-        fListeners.remove(wrapIfNotThreadSafe(listener));", "+        listeners.remove(wrapIfNotThreadSafe(listener));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb33259e0d0a987a0b87100ab3e2334c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "d6c79c0f626afd12506b6a5a672cdec84683c3ca", "commitAfterChange": "95da39292ea777ec3ff99be2bb23d46f704f683a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic MaxHistory(String folder)", "signatureAfterChange": "  \tpublic MaxHistory(File storedResults)", "diff": ["-\tpublic MaxHistory(String folder) {", "-\t\tfFolder= folder;", "-\t\t// TODO Auto-generated constructor stub", "+\tpublic MaxHistory(File storedResults) {", "+\t\tfFolder= storedResults;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbd54130b97853776591d64a7108c835", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "          @Override         public void testIgnored(Description description) throws Exception", "signatureAfterChange": "          @Override         public void testIgnored(Description description) throws Exception", "diff": ["-            fIgnoreCount.getAndIncrement();", "+            ignoreCount.getAndIncrement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbe8f8495c84c176abac39e8fffef506", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic Statement childBlock(TestMethod method)", "signatureAfterChange": "  \t@Override \tpublic Statement childBlock(FrameworkMethod method)", "diff": ["-\tpublic Statement childBlock(TestMethod method) {", "+\tpublic Statement childBlock(FrameworkMethod method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc3407eef9ff826f779a6bae5b02bf3c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TemporaryFolder.java", "commitBeforeChange": "982a75011a074ab25f2c96a1c2639c5b1ebb3b18", "commitAfterChange": "2d3090bf96357c0d9387a4e8f87525f776e52799", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void create() throws IOException", "signatureAfterChange": " \tpublic void create() throws IOException", "diff": ["-\t\tfolder= newFolder();", "+\t\tfolder= createTemporaryFolderIn(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc4d76af69694b7788f1f83f4ebf7fb4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/experimental/categories/CategoryFilterFactoryTest.java", "commitBeforeChange": "4eecfb1eff9aa5304f6b30874a26734124ac902d", "commitAfterChange": "a75370887a71a09b3e5a12dec252513e80228e6b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r     @Test\r     public void shouldCreateFilter() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldCreateFilter() throws Exception", "diff": ["+                createSuiteDescription(testName.getMethodName()),\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccb48ccffd2d859f9897a69df9201f3e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/links/IgnoreViolatedAssumptions.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \t@Override \tpublic void run(Roadie context) throws Throwable", "signatureAfterChange": " \t \t@Override \tpublic void run(EachTestNotifier context) throws Throwable", "diff": ["-\tpublic void run(Roadie context) throws Throwable {", "+\tpublic void run(EachTestNotifier context) throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccd0135fd98106dd7d44dd1994920e18", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/Fail.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void evaluate() throws Throwable", "signatureAfterChange": "      @Override     public void evaluate() throws Throwable", "diff": ["-        throw fError;", "+        throw error;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccfdf492a3c36edcc032f84f6ef568e4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "f0319c2af61edbf587b958e9aa2f0f75eed2b375", "commitAfterChange": "3920f3fe11dffc904e1ab41a9ff4fc9d36b1c25b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test public void getDeclaredMethods() throws Exception", "signatureAfterChange": "      @Test public void getDeclaredMethods() throws Exception", "diff": ["-        class Super {", "-            void testOne() {}", "-        }", "-        class Sub extends Super {", "-            void testTwo() {}", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd05c0b46d2819367ff896281abeacc3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/TestRuleTest.java", "commitBeforeChange": "751f75986b11336ac8310d73c89003b0b09ecb92", "commitAfterChange": "8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\t\tpublic Statement apply(final Statement base, Description description)", "signatureAfterChange": " \t\t\t@Override \t\t\tprotected Statement apply(final Statement base, Description description)", "diff": ["-\t\t\tpublic Statement apply(final Statement base, Description description) {", "+\t\t\t@Override", "+\t\t\tprotected Statement apply(final Statement base, Description description) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd739865a369b434be77c560f4cde2fb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCore.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Result run(Runner runner)", "signatureAfterChange": "     public Result run(Runner runner)", "diff": ["-        fNotifier.addFirstListener(listener);", "+        notifier.addFirstListener(listener);", "-            fNotifier.fireTestRunStarted(runner.getDescription());", "-            runner.run(fNotifier);", "-            fNotifier.fireTestRunFinished(result);", "+            notifier.fireTestRunStarted(runner.getDescription());", "+            runner.run(notifier);", "+            notifier.fireTestRunFinished(result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd9f78c49d63d16f2182dee36cdadab0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "003f66a2e928691100fbe719d7253b5213e99698", "commitAfterChange": "d8da2f699a89857292e5e5b92945b2fe3c0a039a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tprivate List<Description> findLeaves(Request request)", "signatureAfterChange": " \t \tprivate List<Description> findLeaves(Request request)", "diff": ["-\t\tfindLeaves(request.getRunner().getDescription(), results);", "+\t\tfindLeaves(null, request.getRunner().getDescription(), results);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cde53f2217e20e0345989361b6ae4ee6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/InitializationError.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public InitializationError(List<Throwable> errors)", "signatureAfterChange": "      public InitializationError(List<Throwable> errors)", "diff": ["-        fErrors = errors;", "+        this.errors = errors;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce198d4f40d09dd327dad1efdded3a96", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/ParentRunner.java", "commitBeforeChange": "37a611801fbea6ecc9b6356d9616e761c8b59b91", "commitAfterChange": "d9c908b9aab5f610e2f42aba1863ce25e36423f2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \t@Override \tpublic void run(final RunNotifier notifier)", "signatureAfterChange": "  \t@Override \tpublic void run(final RunNotifier notifier)", "diff": ["-\t", "+", "-\t\t\ttestNotifier.addFailedAssumption(e);", "+\t\t\ttestNotifier.fireTestIgnored();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce39194148231a468c3c817d05805991", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "fdc9cd5ea91f5ae1d7e5991abadd1b3f989626f7", "commitAfterChange": "31cbeb4f3c141295d0b0703ccff2b2ffbee780f4", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic static void assertArrayEquals(String message, double[] expecteds, \t\t\tdouble[] actuals, double delta) throws ArrayComparisonFailure", "signatureAfterChange": " \tpublic static void assertArrayEquals(String message, double[] expecteds, \t\t\tdouble[] actuals, double delta) throws ArrayComparisonFailure", "diff": ["-\t\tnew InexactComparisonCriteria(delta).internalArrayEquals(message, expecteds, actuals);", "+\t\tnew InexactComparisonCriteria(delta).arrayEquals(message, expecteds, actuals);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce3fa61ef1c8a78d03908a33dcc0ef8b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "8134371705a43fa2b2a8913678d4336d867f6647", "commitAfterChange": "785c7859cd87dc5cb3872fef476ce2f86c9259dd", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate Description(String displayName, Class<?> clazz, Serializable uniqueId, Annotation... annotations)", "signatureAfterChange": "  \tprivate Description(Class<?> clazz, String displayName, Serializable uniqueId, Annotation... annotations)", "diff": ["-\tprivate Description(String displayName, Class<?> clazz, Serializable uniqueId, Annotation... annotations) {", "+\tprivate Description(Class<?> clazz, String displayName, Serializable uniqueId, Annotation... annotations) {", "-        fClazz = clazz;", "+\t\tfTestClass= clazz;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce4160a8225c6516f1244c8a6490774b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java", "commitBeforeChange": "3a5772dab5ce8f3b2879a19009357d425e84400e", "commitAfterChange": "b403288c9bf67e4989b7f3af5b8360828dcb8e94", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void count()", "signatureAfterChange": "      @Test     public void countsRuns()", "diff": ["-    public void count() {", "+    public void countsRuns() {", "-        assertEquals(6, result.getFailureCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce588d3f34943f0850b540dd88808602", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "979e8abbe974e8847668f5887403da78a6165ebc", "commitAfterChange": "1fcd990f60518c941a44bae2596392021614a20b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tprotected Statement withBefores(FrameworkMethod method, Object target, \t\t\tStatement link)", "signatureAfterChange": " \tprotected Statement withBefores(FrameworkMethod method, Object target, \t\t\tStatement statement)", "diff": ["-\t\t\tStatement link) {", "+\t\t\tStatement statement) {", "-\t\treturn new RunBefores(link, befores, target);", "+\t\treturn new RunBefores(statement, befores, target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cec5e316741bb8a702f83564e3811099", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "          private boolean nullsOk()", "signatureAfterChange": "          private boolean nullsOk()", "diff": ["-            Theory annotation = fTestMethod.getMethod().getAnnotation(", "+            Theory annotation = testMethod.getMethod().getAnnotation("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ceca0f43f4ab986c772178636e57839a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/rules/RuleFieldValidator.java", "commitBeforeChange": "849a16f44256cd7c6514ed7c289c993d633a53fe", "commitAfterChange": "b4f0afa639b42fa551fdcb26d9c1855ae4d778cf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate void validateMember(FrameworkMember<?> member, List<Throwable> errors)", "signatureAfterChange": "  \tprivate void validateMember(FrameworkMember<?> member, List<Throwable> errors)", "diff": ["-\t\toptionallyValidateStatic(member, errors);", "+\t\tvalidateStatic(member, errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf1377ed5f08b966d11aa09267144d47", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Override     public int hashCode()", "signatureAfterChange": "      @Override     public int hashCode()", "diff": ["-        return uniqueId.hashCode();", "+        return fUniqueId.hashCode();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf2bb30d0ca748e4a1557821adbb2b4b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private Thread getStuckThread (Thread mainThread)", "signatureAfterChange": "     private Thread getStuckThread (Thread mainThread)", "diff": ["-        if (fThreadGroup == null) ", "+        if (threadGroup == null){", "-        Thread[] threadsInGroup = getThreadArray(fThreadGroup);", "-        if (threadsInGroup == null) ", "+        }", "+        Thread[] threadsInGroup = getThreadArray(threadGroup);", "+        if (threadsInGroup == null){", "-        ", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf31fe9ea217b181d2ea9aebe2646b5a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/experimental/validator/AnnotationValidatorFactoryTest.java", "commitBeforeChange": "1273a35689bdcb3304f6634cdc3889c61f9b1b1f", "commitAfterChange": "d3ee5d06c0b797ce812cbfe35addc6146d5f07cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void exceptionWhenValidatorIsNotAnAnnotationValidator()", "signatureAfterChange": "      @Test     public void exceptionWhenAnnotationValidatorCantBeCreated()", "diff": ["-", "-    @Test", "-    public void exceptionWhenValidatorIsNotAnAnnotationValidator() {", "-        exception.expect(RuntimeException.class);", "-        exception.expectMessage(\"Error when creating AnnotationValidator class \" +", "-                \"org.junit.experimental.validator.AnnotationValidatorFactoryTest$ValidatorThatThrowsException\");", "-", "-        ValidateWith validateWith = SampleTestWithValidatorThatThrowsException.class.getAnnotation(ValidateWith.class);", "-        new AnnotationValidatorFactory().createAnnotationValidator(validateWith);", "-    }", "+", "+    @Test", "+    public void exceptionWhenAnnotationValidatorCantBeCreated() {", "+        exception.expect(RuntimeException.class);", "+        exception.expectMessage(\"Exception received when creating AnnotationValidator class \" +", "+                \"org.junit.experimental.validator.AnnotationValidatorFactoryTest$ValidatorThatThrowsException\");", "+", "+        ValidateWith validateWith = SampleTestWithValidatorThatThrowsException.class.getAnnotation(ValidateWith.class);", "+        new AnnotationValidatorFactory().createAnnotationValidator(validateWith);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf35ab39177c2849a2a86bc9a2133d54", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCommandLineParseResult.java", "commitBeforeChange": "d1b8c04e54f0b9e4807fa88a2ff36ad9ba177107", "commitAfterChange": "07447b5f98989e4456be8ee8acd01cfb3d20b8c0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r     private String[] copyArray(String[] args, int from, int to)", "signatureAfterChange": "\r \r     private String[] copyArray(String[] args, int from, int to)", "diff": ["-        return result.toArray(new String[]{});\r", "+        return result.toArray(new String[result.size()]);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf3e2064769168c364f3df283e40edd7", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/TestCaseClassLoaderTest.java", "commitBeforeChange": "2bcc656e58b1736090e26215267117170a99f4e8", "commitAfterChange": "0be4c31f80dc38ddf8decbc8d6d13bd23d3ae8b1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void testJarClassLoading() throws Exception", "signatureAfterChange": "  \tpublic void testJarClassLoading() throws Exception", "diff": ["+\t\tassertNotNull(\"Cannot find test.jar\", url);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf851bd12da73c73787c6ee8c8332223", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "2bb6d5de002052680d443065e1c26f59be212e4b", "commitAfterChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tprotected Link possiblyExpectingExceptions(TestMethod method, Link next)", "signatureAfterChange": "  \tprotected Link possiblyExpectingExceptions(TestMethod method, Link next)", "diff": ["-\t\t\t: new ExpectingNoException(next);", "+\t\t\t: next;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfd2b280f4e450361ef0535b284653a6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java", "commitBeforeChange": "61994e0c0aa768b43fad1ac6e35b1e43ffc8b142", "commitAfterChange": "97654ff38f976733fa4c6ae9b28e3fe10328183f", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 49, "signatureBeforeChange": "      @Test     public void runsEveryTestOfArray()", "signatureAfterChange": "      @Test     public void runsEveryTestOfArray()", "diff": ["-        Result result= JUnitCore.runClasses(FibonacciTestWithArray.class);", "-        assertEquals(7, result.getRunCount());", "+        Result result= JUnitCore.runClasses(AdditionTestWithArray.class);", "+        assertEquals(4, result.getRunCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d00d6d6e0cf5c156c943bc64bf50a000", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "d8a643fbaf74011eeb64695e5ec11b448960dbd5", "commitAfterChange": "9a866f6c679298e64194fbfa5ef82262a792824d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tstatic public TestResult run(Test suite)", "signatureAfterChange": " \tstatic public TestResult run(Test test)", "diff": ["-\tstatic public TestResult run(Test suite) {", "-\t\tTestRunner aTestRunner= new TestRunner();", "-\t\treturn aTestRunner.doRun(suite, false);", "+\tstatic public TestResult run(Test test) {", "+\t\tTestRunner runner= new TestRunner();", "+\t\treturn runner.doRun(test);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d03c8df5649c7de5d12c7ccc0adafe9c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "e727dd6b1cb2caa1699da3b2df7625c9554adc36", "commitAfterChange": "95bd62b2ffd80394d1a17e9078a4d79478423030", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t@SuppressWarnings(\"unchecked\") \tprivate List<Object[]> getParametersList() throws Throwable", "signatureAfterChange": "  \t@SuppressWarnings(\"unchecked\") \tprivate static List<Object[]> getParametersList(TestClass testClass) throws Throwable", "diff": ["-\tprivate List<Object[]> getParametersList() throws Throwable {", "-\t\treturn (List<Object[]>) getParametersMethod().invokeExplosively(", "+\tprivate static List<Object[]> getParametersList(TestClass testClass) throws Throwable {", "+\t\treturn (List<Object[]>) getParametersMethod(testClass).invokeExplosively("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0663c14ec607c79da21e6f0b81202dc", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/categories/CategoryValidatorTest.java", "commitBeforeChange": "fe5d86eba71a1f59dbbed09de4add01cc20420c0", "commitAfterChange": "d9054149988487750679e35a349df7e0e2df5870", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void testAndAssertErrrorMessage(Method method, String expectedErrorMessage) throws NoSuchMethodException", "signatureAfterChange": "      private void testAndAssertErrorMessage(FrameworkMethod method, String expectedErrorMessage)", "diff": ["-    private void testAndAssertErrrorMessage(Method method, String expectedErrorMessage) throws NoSuchMethodException {", "+    private void testAndAssertErrorMessage(FrameworkMethod method, String expectedErrorMessage) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d08b2ae47fcccf066612863c6201add9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkField.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public Object get(Object target) throws IllegalArgumentException, IllegalAccessException", "signatureAfterChange": "     public Object get(Object target) throws IllegalArgumentException, IllegalAccessException", "diff": ["-        return fField.get(target);", "+        return field.get(target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0948c1e822d286eba35b32c67e1921d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/EventCollector.java", "commitBeforeChange": "df70c1087de9d3827656ede187371bbe29d2a974", "commitAfterChange": "a538d25ae50887dc9395f2f59ad5040752c0ec4f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \t@Override \tpublic void testFailure(Failure failure) throws Exception", "signatureAfterChange": "  \t@Override \tpublic void testFailure(Failure failure) throws Exception", "diff": ["-", "-\t@Override", "-\tpublic void testFailure(Failure failure) throws Exception {", "-\t\tfailures.add(failure);", "-\t}", "+", "+\t@Override", "+\tpublic void testFailure(Failure failure) throws Exception {", "+\t\tfFailures.add(failure);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0b4f773c39832446a7c9e17c8c954e0", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/Assert.java", "commitBeforeChange": "23ab51791a15063027d70ec2894927f14ac9868c", "commitAfterChange": "65d6b62dd60c434447544c5419ef4eeecb4c645d", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tstatic public void assertNotSame(Object expected, Object actual)", "signatureAfterChange": " \tstatic public void assertNotSame(Object unexpected, Object actual)", "diff": ["-\tstatic public void assertNotSame(Object expected, Object actual) {", "-\t\tassertNotSame(null, expected, actual);", "+\tstatic public void assertNotSame(Object unexpected, Object actual) {", "+\t\tassertNotSame(null, unexpected, actual);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d12a7f8c7e24f98cc9cf9368a4ac405c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public <T extends Annotation> T getAnnotation(Class<T> annotationType)", "signatureAfterChange": "     public <T extends Annotation> T getAnnotation(Class<T> annotationType)", "diff": ["-        for (Annotation each : annotations) {", "+        for (Annotation each : fAnnotations) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d12d128700cb64d6e7d92fa0137b1f99", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/InitializationError.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public List<Throwable> getCauses()", "signatureAfterChange": "     public List<Throwable> getCauses()", "diff": ["-        return errors;", "+        return fErrors;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d152c49e313ceba5e706b6d0d41a8d9e", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/framework/Assert.java", "commitBeforeChange": "819de4cce0eac9adeb2b1797a1716addbde9a99a", "commitAfterChange": "395e144b73b2cad89fdab8f7cc9ce12b24f9ec3b", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tstatic public void assertNotSame(String message, Object expected, Object actual)", "signatureAfterChange": " \tstatic public void assertNotSame(String message, Object expected, Object actual)", "diff": ["-\t\t\tfailSame(message, expected, actual);", "+\t\t\tfailSame(message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d17bcc67539f9610a0c84ea1995527cd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/extendingwithstubs/GuesserQueue.java", "commitBeforeChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "commitAfterChange": "59b1e2926cdebfd257c6c091ee2bd478d8aa04d2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \t\t@Override \t\tpublic Object getValue(Object test) throws CouldNotGenerateValueException", "signatureAfterChange": " \t \t\t@Override \t\tpublic Object getValue() throws CouldNotGenerateValueException", "diff": ["-\t\tpublic Object getValue(Object test) throws CouldNotGenerateValueException {", "-\t\t\treturn delegate.getValue(test);", "+\t\tpublic Object getValue() throws CouldNotGenerateValueException {", "+\t\t\treturn delegate.getValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d19d8562fd78c214128736c36e8c860c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "62c0364775d3c7d3c0b9f7532f0b16b1537cf6fa", "commitAfterChange": "45524a9ddcd387fde3a20740e9c9c90ed71fec3a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public List<PotentialAssignment> potentialsForNextUnassigned()             throws ReflectiveOperationException", "signatureAfterChange": "      public List<PotentialAssignment> potentialsForNextUnassigned()             throws Exception", "diff": ["-            throws ReflectiveOperationException {", "+            throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d19e403f153aab520952418d0777749c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "971c9a52281458375af79e303449fe22bf91feab", "commitAfterChange": "97402a3401c6cc2d45d395c0d9d636f483b5571c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate void runChildren(final RunNotifier notifier)", "signatureAfterChange": "  \tprivate void runChildren(final RunNotifier notifier)", "diff": ["-\t\tfor (final T each : getCachedChildren())", "-\t\t\tfScheduler.schedule(new Runnable() {", "+\t\tfor (final T each : getFilteredChildren())", "+\t\t\tfScheduler.schedule(new Runnable() {\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1bc6346cbec2df224a70c9316aaa702", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "196c4ed79cbaca37709643b54913b361b677ae04", "commitAfterChange": "0a9a389570a171b67c3155d312f2e90bdab5aaaf", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 23, "signatureBeforeChange": "             @Override             public Filter createFilter(String categories) throws FilterNotFoundException", "signatureAfterChange": "             @Override             public Filter createFilter(String categories) throws FilterNotCreatedException", "diff": ["-        private static abstract class CategoriesFilterFactory extends FilterFactory {", "+        static abstract class CategoriesFilterFactory extends FilterFactory {", "-            public Filter createFilter(String categories) throws FilterNotFoundException {", "+            public Filter createFilter(String categories) throws FilterNotCreatedException {", "-                    throw new FilterNotFoundException(\"Could not create IncludesAny filter.\", e);", "+                    throw new FilterNotCreatedException(\"Could not create IncludesAny filter.\", e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d224f64cacf500a060c2d3076bac17e0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/matchers/StacktracePrintingMatcherTest.java", "commitBeforeChange": "e77e1c45e873aa9bc1e15db632180eb81d62d5e2", "commitAfterChange": "fe10c8a264e6585d9d8a92e5d5fa9a6e10aa298f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \t@Test \tpublic void succeedsWhenInnerMatcherSuceeds() throws Exception", "signatureAfterChange": " \t \t@Test \tpublic void succeedsWhenInnerMatcherSucceeds() throws Exception", "diff": ["-\tpublic void succeedsWhenInnerMatcherSuceeds() throws Exception {", "+\tpublic void succeedsWhenInnerMatcherSucceeds() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d24ac9d40c00afac8cce24c3237fea56", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprotected Link chain(TestMethod method)", "signatureAfterChange": "  \tprotected Link chain(TestMethod method, Object test)", "diff": ["-\tprotected Link chain(TestMethod method) {", "-\t\t// TODO: (Oct 5, 2007 11:09:00 AM) Rename Link", "+\tprotected Link chain(TestMethod method, Object test) {", "+\t\t// TODO: (Oct 5, 2007 11:09:00 AM) Rename Link?", "-\t\tLink link= invoke(method);", "+\t\t// TODO: (Oct 9, 2007 2:12:24 PM) method + test is parameter object?", "+", "+\t\tLink link= invoke(method, test);", "-\t\tlink= withBeforeAndAfter(method, link);", "+\t\tlink= withBeforeAndAfter(method, link, test);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d292406c7352a07d7aaa424a8755367a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/AssignmentRequest.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \t\tprivate MethodParameterValue(Method method, Object test)", "signatureAfterChange": "  \t\tprivate MethodParameterValue(Method method)", "diff": ["-", "-\t\tprivate MethodParameterValue(Method method, Object test) {", "+\t\tprivate MethodParameterValue(Method method) {", "-\t\t\tfTest= test;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2a59bbe1b1ffb89426418f13c572e30", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      @Override     public int hashCode()", "signatureAfterChange": "      @Override     public int hashCode()", "diff": ["-        return (fClass == null) ? 0 : fClass.hashCode();", "+        return (clazz == null) ? 0 : clazz.hashCode();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2b98ba709f69c7585ad703c10e3733f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkField.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      FrameworkField(Field field)", "signatureAfterChange": "      FrameworkField(Field field)", "diff": ["-        fField = field;", "+        this.field = field;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2f6225e57a960ee18bd2e071962cf6b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "accece2b35f804f86f47ff7d6a76cdb296b76e34", "commitAfterChange": "2e699926f4e8c79407338e5973ec198bd3844212", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate Description(String displayName, Object uniqueId, Annotation... annotations)", "signatureAfterChange": "  \tprivate Description(String displayName, Serializable uniqueId, Annotation... annotations)", "diff": ["-\tprivate Description(String displayName, Object uniqueId, Annotation... annotations) {", "+\tprivate Description(String displayName, Serializable uniqueId, Annotation... annotations) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d32e6156c3e39bbd97d80112778d9332", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/awtui/TestRunner.java", "commitBeforeChange": "bfc94ee739d62127c7477300b26127bd560765a1", "commitAfterChange": "04f4f3197084ad9ad7c050ce1a40d6f4421662f4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tprotected Frame createUI(String suiteName)", "signatureAfterChange": " \t \tprotected Frame createUI(String suiteName)", "diff": ["-\t\tLabel suiteLabel= new Label(\"Enter the name of the Test class:\");", "+\t\tLabel suiteLabel= new Label(\"Test class name:\");", "-\t\tboolean useLoader= useReoadingTestSuiteLoader();", "-\t\tfUseLoadingRunner= new Checkbox(\"Use custom class loader for loading tests\", useLoader);", "+\t\tboolean useLoader= useReloadingTestSuiteLoader();", "+\t\tfUseLoadingRunner= new Checkbox(\"Reload classes every run\", useLoader);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d369cb7f6adcab6ff5853786ec4d98a4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/internal/SpecificDataPointsSupplierTest.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "              @Test     public void shouldReturnNothingIfTheNamedDataPointsAreMissing() throws Exception", "signatureAfterChange": "              @Test     public void shouldReturnNothingIfTheNamedDataPointsAreMissing() throws Throwable", "diff": ["-    public void shouldReturnNothingIfTheNamedDataPointsAreMissing() throws Exception {", "+    public void shouldReturnNothingIfTheNamedDataPointsAreMissing() throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d396231ab4710b3dbc95e4c326c1f79b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Request.java", "commitBeforeChange": "0dc3de7fbcf997ca8465ed9e7793a0b4f730121b", "commitAfterChange": "3d08ecc6a661f09520559637794c9a161db90f3d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic static Request classes(Computer computer, Class<?>... classes)", "signatureAfterChange": " \tpublic static Request classes(Computer computer, Class<?>... classes)", "diff": ["-\t\t\tSuite suite= computer.getSuite(builder, classes);", "+\t\t\tRunner suite= computer.getSuite(builder, classes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d42741c7f3405c9504482103c4ffd339", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/runner/BaseTestRunner.java", "commitBeforeChange": "2745d016f648e783360bd076f23b36908f8125b0", "commitAfterChange": "b064a274adb12c6e866cb08dedc70534237330b2", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public static String getFilteredTrace(Throwable t)", "signatureAfterChange": "     public static String getFilteredTrace(Throwable e)", "diff": ["-    public static String getFilteredTrace(Throwable t) {", "+    public static String getFilteredTrace(Throwable e) {", "-        t.printStackTrace(writer);", "+        e.printStackTrace(writer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d44746d882fbc9f13fe7d8ba31cd3831", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "commitAfterChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t@Override \tpublic Description getDescription()", "signatureAfterChange": "  \t@Override \tpublic Description getDescription()", "diff": ["-\t\tDescription spec= Description.createSuiteDescription(getName(), classAnnotations());", "-\t\tList<Method> testMethods= fTestMethods;", "-\t\tfor (Method method : testMethods)", "+\t\tDescription spec= Description.createSuiteDescription(getName(),", "+\t\t\t\tclassAnnotations());", "+\t\tList<TestMethod> testMethods= fTestMethods;", "+\t\t// TODO: (Oct 8, 2007 10:32:57 AM) Why doesn't Eclipse quickfix types in", "+\t\t// new-style for loops?", "+", "+\t\tfor (TestMethod method : testMethods)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4b69abf75b6bf3b3aa578aaa52bcf7d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/StacktracePrintingMatcher.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     protected boolean matchesSafely(T item)", "signatureAfterChange": "      @Override     protected boolean matchesSafely(T item)", "diff": ["-        return fThrowableMatcher.matches(item);", "+        return throwableMatcher.matches(item);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4c0a15c369fca036e2f0276b7899f7a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          private OldTestClassAdaptingListener(RunNotifier notifier)", "signatureAfterChange": "          private OldTestClassAdaptingListener(RunNotifier notifier)", "diff": ["-            fNotifier = notifier;", "+            this.notifier = notifier;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4c52dc7df97ac4860caebd920f2e1f3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "b0b34427e9e644868f2b63d40d0556c35e818a63", "commitAfterChange": "dd9ee989f3f322c7c6793f95a73b28f3cc11c11e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \t@Override \tprotected void validateNoArgConstructor(List<Throwable> errors)", "signatureAfterChange": " \t \t@Override \tprotected void validateConstructor(List<Throwable> errors)", "diff": ["-\tprotected void validateNoArgConstructor(List<Throwable> errors) {", "+\tprotected void validateConstructor(List<Throwable> errors) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5244668557f845c0fc7930a4a4b207d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/core/MainRunner.java", "commitBeforeChange": "917a88fad06ce108a596a8fdb4607b1a2fbb3f3e", "commitAfterChange": "4596630d76860059088be0fe4376679452fc3b35", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t\t@Override \t\tpublic void checkExit(int status)", "signatureAfterChange": "  \t\t@Override \t\tpublic void checkExit(int status)", "diff": ["-\t\t\tsuper.checkExit(status);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d57c0f7300b31768a0ff49afa3c6bb00", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "d6662fcc06ec7b07c696eb703c47d3731e4e11c7", "commitAfterChange": "85578d48f6459a05665329faa9b52a861e9142cb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \t@Test public void preferNewTests()", "signatureAfterChange": " \t \t@Test public void preferNewTests()", "diff": ["-\t\tList<Description> things= max.sort(two);", "+\t\tList<Description> things= max.sortedLeavesForTest(two);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5f505bf919352798427fdba80d45591", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "74941e1e1482016ffe705830cefb27cd376fb5ef", "commitAfterChange": "fb812b11c575fcf7bbe411a876903acd21ad04ea", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "          @Test     public void getMethodsNullSorterSub()", "signatureAfterChange": "          @Test     public void testMethodsNullSorterSub()", "diff": ["-    public void getMethodsNullSorterSub() {", "+    public void testMethodsNullSorterSub() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d624dcb36afce97046bde8e9b50c3282", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "f1f4fe290a3a35a9083d2e76e922b57350e05f34", "commitAfterChange": "c3873cf7b17abba564374522af2bdc02abcc509d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tprivate List<Description> findLeaves(Request request)", "signatureAfterChange": " \t \tprivate List<Description> findLeaves(Request request)", "diff": ["-\t\tfindLeaves(null, request.getRunner().getDescription(), results);", "+\t\tfindLeaves(null, request.getRunner().getPlan(), results);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d64c398714102cc875c79bdc2f434c37", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Override \tpublic Statement childBlock(final TestMethod method)", "signatureAfterChange": "  \t@Override \tpublic Statement childBlock(final FrameworkMethod method)", "diff": ["-\tpublic Statement childBlock(final TestMethod method) {", "+\tpublic Statement childBlock(final FrameworkMethod method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6ce34fb38cf9c64fd00558bbce896d6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java", "commitBeforeChange": "0e1c92693e70e52ad9af23ee6180500c74fc9c95", "commitAfterChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t\t@Override \t\tprotected void runWithIncompleteAssignment(Assignments incomplete, FailureListener listener) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tThrowable", "signatureAfterChange": "  \t\t@Override \t\tprotected void runWithIncompleteAssignment(Assignments incomplete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tThrowable", "diff": ["-\t\tprotected void runWithIncompleteAssignment(Assignments incomplete, FailureListener listener)", "+\t\tprotected void runWithIncompleteAssignment(Assignments incomplete)", "-\t\t\t\trunWithAssignment(incomplete.assignNext(guessers.remove(0)), listener);", "+\t\t\t\trunWithAssignment(incomplete.assignNext(guessers.remove(0)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6e376787dfbfc6a4fc94575cb5839d4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "beb1f4a80f7fa20523d40535fb81c1b8a7a9e638", "commitAfterChange": "83a25d440d118b7d10779a884d35f31045949e27", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public <T> List<T> getAnnotatedMethodValues(Object test,             Class<? extends Annotation> annotationClass, Class<T> valueClass)", "signatureAfterChange": "      public <T> List<T> getAnnotatedMethodValues(Object test,             Class<? extends Annotation> annotationClass, Class<T> valueClass)", "diff": ["-        List<T> results = new ArrayList<T>();", "+        List<T> results = new CopyOnWriteArrayList<T>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d73c11da82b31b8db0ebc9a4683188f6", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/ResultPrinter.java", "commitBeforeChange": "f7e1007ff23c57400a6b81361def3da5906cfb77", "commitAfterChange": "dd541a7c7b8feaaf966e55e6c91685ea071fb3c7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tprotected void printErrors(TestResult result)", "signatureAfterChange": " \t \tprotected void printErrors(TestResult result)", "diff": ["-\t\tprintBooBoos(result.errors(), result.errorCount(), \"error\");", "+\t\tprintDefects(result.errors(), result.errorCount(), \"error\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d795547348e18641946d93d4fe90dec8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/PotentialAssignment.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic abstract Object getValue() throws CouldNotGenerateValueException;", "signatureAfterChange": " \t \tpublic abstract Object getValue(Object test) throws CouldNotGenerateValueException;", "diff": ["-\tpublic abstract Object getValue() throws CouldNotGenerateValueException;", "+\tpublic abstract Object getValue(Object test) throws CouldNotGenerateValueException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7a777e5422c6803d8cc1651abcbc929", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/RunNotifier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "          void run()", "signatureAfterChange": "          void run()", "diff": ["-            int capacity = fCurrentListeners.size();", "+            int capacity = currentListeners.size();", "-            for (RunListener listener : fCurrentListeners) {", "+            for (RunListener listener : currentListeners) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7aa741c2a0a375d8675df7b480abcf2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/assertion/AssertionTest.java", "commitBeforeChange": "b1068dc55c95d1000e07b71d3a9d9a2fd26bfff9", "commitAfterChange": "d9cccce5034bb9876221d271914471b205220061", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "          @Test public void assertThatIncludesAdvancedMismatch()", "signatureAfterChange": "          @Test public void assertThatIncludesAdvancedMismatch()", "diff": ["-            assertThat(\"identifier\", \"actual\", is(Integer.class));", "+            assertThat(\"identifier\", \"actual\", is(instanceOf(Integer.class)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7e5ae4635bbfcb10f136868e03cdb69", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/SuccessfulWithDataPointFields.java", "commitBeforeChange": "90bf3119a6326671cc467386036302cc6040f752", "commitAfterChange": "34dd9f4e2bebbcf694dcb855a29edff9243a10d3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \t\t@Theory \t\tpublic void everythingIsZero(int x, int y)", "signatureAfterChange": "  \t\t@Theory \t\tpublic void allIntsAreEqual(int x, int y)", "diff": ["-\t\tpublic void everythingIsZero(int x, int y) {", "+\t\tpublic void allIntsAreEqual(int x, int y) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7f0f0388d1aa95069ccc13763b27faa", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "b0b34427e9e644868f2b63d40d0556c35e818a63", "commitAfterChange": "dd9ee989f3f322c7c6793f95a73b28f3cc11c11e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t@Override \tprotected void collectInitializationErrors(List<Throwable> errors)", "signatureAfterChange": "  \t@Override \tprotected void collectInitializationErrors(List<Throwable> errors)", "diff": ["-\t\tvalidateNoArgConstructor(errors);", "+\t\tvalidateConstructor(errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d84b4decd46706e40598ac1c6afbe016", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "8e313a1e58a56694c0441b2fa60974fa8e1bfe31", "commitAfterChange": "409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tprotected void validateFields(List<Throwable> errors)", "signatureAfterChange": " \t \tprotected void validateFields(List<Throwable> errors)", "diff": ["-\t\tfor (FrameworkField each : interceptorFields())", "+\t\tfor (FrameworkField each : ruleFields())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d856ca5bd791e784ca41f5aaab14d2cd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/ArrayComparisonFailure.java", "commitBeforeChange": "2859b41ad921d7f525c8dff5a3a9a5a0eb8d68b9", "commitAfterChange": "8a6ada28b1b763d1eecb009716e8c75660271565", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public String getMessage()", "signatureAfterChange": "      @Override     public String getMessage()", "diff": ["-        StringBuilder builder = new StringBuilder();", "+        StringBuilder sb = new StringBuilder();", "-            builder.append(fMessage);", "+            sb.append(fMessage);", "-        builder.append(\"arrays first differed at element \");", "+        sb.append(\"arrays first differed at element \");", "-            builder.append(\"[\");", "-            builder.append(each);", "-            builder.append(\"]\");", "+            sb.append(\"[\");", "+            sb.append(each);", "+            sb.append(\"]\");", "-        builder.append(\"; \");", "-        builder.append(fCause.getMessage());", "-        return builder.toString();", "+        sb.append(\"; \");", "+        sb.append(fCause.getMessage());", "+        return sb.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d85ca92d7139f4ce7c12e263ceaaaf21", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/listening/TextListenerTest.java", "commitBeforeChange": "da9a91f77d9e3045b2692afb4fe9fc12eeb8a93f", "commitAfterChange": "8a8008c96936d468a2f579bcea9a71e965558d57", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic void testIgnore()", "signatureAfterChange": " \t \tpublic void testIgnore()", "diff": ["-\t\tassertThat(results.toString(), both(containsString(\"Antimilos\")).and(containsString(\"ignored test:\")));", "+\t\tassertThat(results.toString(), both(containsString(\"Antimilos\")).and(containsString(\"ignored test:\")).and(containsString(\"IGNORED TEST 1)\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8f1c4f5a9a8f0ba305ecf0d15a63a38", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "dfaf332b4df0d98293ac135e5abf9de6a2623b14", "commitAfterChange": "74941e1e1482016ffe705830cefb27cd376fb5ef", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "         void testOne()", "signatureAfterChange": "         void superMario()", "diff": ["-        void testOne() {", "+        void superMario() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d977544d4b4b605b3ebaeb96f6ca4463", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "fb812b11c575fcf7bbe411a876903acd21ad04ea", "commitAfterChange": "3b00445ad1ad59323cbc1082180d84ffb8d27be4", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "           @Test     public void getMethodsNullSorter() throws Exception", "signatureAfterChange": "           @Test     public void getMethodsNullSorter() throws Exception", "diff": ["-        assertEquals(Arrays.asList(expected).toString(), declaredMethods(Dummy.class));", "+        assertEquals(Arrays.asList(expected).toString(), declaredMethods(ClassWithoutSorterAnnotation.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9a263675adf870d960bdc1c614fd3b5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/parameterized/TestWithParameters.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public int hashCode()", "signatureAfterChange": "      @Override     public int hashCode()", "diff": ["-        int result = prime + fName.hashCode();", "-        result = prime * result + fTestClass.hashCode();", "-        return prime * result + fParameters.hashCode();", "+        int result = prime + name.hashCode();", "+        result = prime * result + testClass.hashCode();", "+        return prime * result + parameters.hashCode();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9a41a2c909a7ab5b5f161d40a925850", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "9917b9fe95fd237b824b0bb6a3f9ef9efedd2b3b", "commitAfterChange": "48af7e797dbefa1fc47e80394c7f74ef87c3c7ab", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected void collectInitializationErrors(List<Throwable> errors)", "signatureAfterChange": "     protected void collectInitializationErrors(List<Throwable> errors)", "diff": ["+        invokeValidators(errors);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9b2ae27ffc59bbf14dce9aa0bd88c28", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/runner/ClassPathTestCollector.java", "commitBeforeChange": "0bb3dfe2939cc214ee5e77556a48d4aea9c6396a", "commitAfterChange": "80bf23846bfe96f84e7e44436709781262cc1e14", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tVector splitClassPath(String classPath, String separator)", "signatureAfterChange": " \t \tVector splitClassPath(String classPath)", "diff": ["-\tVector splitClassPath(String classPath, String separator) {", "+\tVector splitClassPath(String classPath) {", "+\t\tString separator= System.getProperty(\"path.separator\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9e5aaf8d11478a87fd312a1429fc8fa", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/ErrorReportingRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private Description describeCause(Throwable child)", "signatureAfterChange": "      private Description describeCause(Throwable child)", "diff": ["-        return Description.createTestDescription(fTestClass,", "+        return Description.createTestDescription(testClass,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da35d332fefddd19b7be02887d9f55c2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     protected List<Runner> getChildren()", "signatureAfterChange": "      @Override     protected List<Runner> getChildren()", "diff": ["-        return fRunners;", "+        return runners;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da409165094d7efe23c73803d175f341", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/requests/ClassesRequest.java", "commitBeforeChange": "9c8d59d9869280a698c3f3a119eb69f0e897c94b", "commitAfterChange": "5e4f8e7fb82919d992887fca1741bb04ef1c8f4a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic ClassesRequest(String name, Class<?>... classes)", "signatureAfterChange": " \t \tpublic ClassesRequest(Class<?>... classes)", "diff": ["-\tpublic ClassesRequest(String name, Class<?>... classes) {", "+\tpublic ClassesRequest(Class<?>... classes) {", "-\t\tfName= name;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da4a31ce1366775c87d9c2681431086e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "063004dca462777a969ab1e0002dd3053014381c", "commitAfterChange": "9ac4cc842d70dc7ef266f4d677d90d9b177e4be6", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "     static public void assertEquals(String message, double expected,             double actual, double delta)", "signatureAfterChange": "     static public void assertEquals(String message, double expected,             double actual, double delta)", "diff": ["-            failNotEquals(message, expected, actual);", "+            failNotEquals(message, Double.valueOf(expected), Double.valueOf(actual));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da744eeb65374a69318615b18e065792", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/assertion/MultipleFailureExceptionTest.java", "commitBeforeChange": "91a7ff28a3879d4a409176e092887924700d08b6", "commitAfterChange": "cb818f191ea2b9fe563aa20c581b16f3f23b7c4c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void assertEmptyThrowsMutipleFailureExceptionForManyThrowables() throws Throwable", "signatureAfterChange": "      @Test     public void assertEmptyThrowsMutipleFailureExceptionForManyThrowables() throws Exception", "diff": ["-    public void assertEmptyThrowsMutipleFailureExceptionForManyThrowables() throws Throwable {", "+    public void assertEmptyThrowsMutipleFailureExceptionForManyThrowables() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db139df0f8a112e6e4bc6edf7addb0a9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "9a2e993c544a2cd1a0b93c9f59340910f51366b4", "commitAfterChange": "f3c211455b9e09be36e4bf7ccc499fbdd35a527a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static MaxCore forFolder(File storedResults)", "signatureAfterChange": " \tpublic static MaxCore storedLocally(File storedResults)", "diff": ["-", "-\tpublic static MaxCore forFolder(File storedResults) {", "+\tpublic static MaxCore storedLocally(File storedResults) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db85f353f1da7b7301886e04b9b2d156", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/runner/BaseTestRunner.java", "commitBeforeChange": "22faf2f277960760eb373563891dcd129ece8cb6", "commitAfterChange": "ece77fa477a6d322bb5b37c7e2367f4c4dfbf9f3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic static void savePreferences() throws IOException", "signatureAfterChange": "  \tpublic static void savePreferences() throws IOException", "diff": ["-\t\t\tgetPreferences().store(fos, \"\");", "+\t\t\t// calling of the deprecated save method to enable compiling under 1.1.7", "+\t\t\tgetPreferences().save(fos, \"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbdc5b8ff0c7a4e65d46f0e3a41c10de", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public long getRunTime()", "signatureAfterChange": "     public long getRunTime()", "diff": ["-        return fRunTime.get();", "+        return runTime.get();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbed607eba77dffe70b174bb082bf9b7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "971c9a52281458375af79e303449fe22bf91feab", "commitAfterChange": "97402a3401c6cc2d45d395c0d9d636f483b5571c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tprivate List<Description> findLeaves(Request request)", "signatureAfterChange": " \t \tprivate List<Description> findLeaves(Request request)", "diff": ["-\t\tfindLeaves(null, request.getRunner().getPlan(), results);", "+\t\tfindLeaves(null, request.getRunner().getDescription(), results);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc6244a0db9dd46cae41fc7aa3a71f95", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "7dc6ac514b7ad0a13d1a765c85ac82d78ab6dea8", "commitAfterChange": "22c88b4af17fa8965df4dc75ac500197e33f82cc", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic TestResult start(String args[]) throws Exception", "signatureAfterChange": " \tpublic TestResult start(String args[]) throws Exception", "diff": ["-\t\t\tif (method != null) ", "+\t\t\tif (!method.equals(\"\")) "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd23399d20ec9aa99b6a167baa6c8b26", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     protected String getName()", "signatureAfterChange": "     protected String getName()", "diff": ["-        return fTestClass.getName();", "+        return testClass.getName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd364111018ae0a1e355738f0bb8ed10", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/listening/TextListenerTest.java", "commitBeforeChange": "e727dd6b1cb2caa1699da3b2df7625c9554adc36", "commitAfterChange": "95bd62b2ffd80394d1a17e9078a4d79478423030", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tpublic void testAssumptionFailureIsIgnore()", "signatureAfterChange": " \t \tpublic void testAssumptionFailureIsReflected()", "diff": ["-\tpublic void testAssumptionFailureIsIgnore() {", "+\tpublic void testAssumptionFailureIsReflected() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd494226c78f4dd485bcdc38210b1dd1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void save() throws IOException", "signatureAfterChange": "      private void save() throws IOException", "diff": ["-                fHistoryStore));", "+                historyStore));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dde6bcbeb7546d9d20a7019fa74731f4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void save() throws IOException", "signatureAfterChange": "      private void save() throws IOException", "diff": ["-                historyStore));", "+                fHistoryStore));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddf7b9b9a9645289ff6ded55f82d7595", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public boolean isTest()", "signatureAfterChange": "     public boolean isTest()", "diff": ["-        return fChildren.isEmpty();", "+        return children.isEmpty();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de10ccfcb02784c75632e50975744caa", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     protected int getModifiers()", "signatureAfterChange": "      @Override     protected int getModifiers()", "diff": ["-        return fMethod.getModifiers();", "+        return method.getModifiers();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de5db4a5ef8c5026a5633687fd50ab4c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java", "commitBeforeChange": "e48f6d40bf755dba2da4c29a4b7e763637b61738", "commitAfterChange": "623bd92d37786cdc869b219569740f96869f5b9d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t\t@Test public void one()", "signatureAfterChange": " \t\t@Test public void one() throws InterruptedException", "diff": ["-\t\t@Test public void one() {", "+\t\t@Test public void one() throws InterruptedException {", "+\t\t\tfSynchronizer.countDown();", "+\t\t\tfSynchronizer.await();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de60e6092687aa784b418fe6a8ad87b9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public boolean isTest()", "signatureAfterChange": "     public boolean isTest()", "diff": ["-        return children.isEmpty();", "+        return fChildren.isEmpty();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de69b8e13c2cfa0899b79d38548acacd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "35b428a24bdd2eddd9653189632896d4f5b1ce42", "commitAfterChange": "3e8e865039fe6531666afb860961d787065b589e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private Exception createTimeoutException(Thread thread)", "signatureAfterChange": "      private Exception createTimeoutException(Thread thread)", "diff": ["-        final Thread stuckThread = getStuckThread(thread);", "+        final Thread stuckThread = fLookForStuckThread ? getStuckThread(thread) : null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de6b9b1b9b14e9bbb7baef7c4014b9f9", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/runner/TextRunnerSingleMethodTest.java", "commitBeforeChange": "ca34af5cdd23e98a2d3899a87427e036c55964da", "commitAfterChange": "0c47f4ce9d355bf48734394707eb96f3d68faecf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic void testSingle() throws Exception", "signatureAfterChange": "  \tpublic void testSingle() throws Exception", "diff": ["-\t\tTestRunner t= new TestRunner();", "+\t\tTestRunner t= new TestRunner(new NullResultPrinter(null));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de6e3724a4045c1eaffdfe988f17a926", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/EnclosedTest.java", "commitBeforeChange": "e8b91fa9f797dfe16aff66ed6ad5d6104e5133fe", "commitAfterChange": "0c458a8796cc5ffcda5286ee4a367c8e31ae7c88", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \t@Test public void enclosedRunnerRunsEnclosedClasses() throws Exception", "signatureAfterChange": " \t \t@Test public void enclosedRunnerRunsConcreteEnclosedClasses() throws Exception", "diff": ["-\t@Test public void enclosedRunnerRunsEnclosedClasses() throws Exception {", "+\t@Test public void enclosedRunnerRunsConcreteEnclosedClasses() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de7048153241f9a405f29541c4ba035a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "248bdb8248d80ac57d8b485ef73e758103a0c312", "commitAfterChange": "18299dc8f8aaae0e64345795b2884eb7f42ad460", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic ParameterSupplier getSupplier(ParameterSignature unassigned) \t\t\tthrows InstantiationException, IllegalAccessException", "signatureAfterChange": "  \tpublic ParameterSupplier getSupplier(ParameterSignature unassigned) \t\t\tthrows InstantiationException, IllegalAccessException", "diff": ["-\t\treturn new AllMembersSupplier(fClass);", "+\t\treturn new AllMembersSupplier(fClass.getJavaClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de7248300ff43a14722695b14bd35066", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/runner/WithDataPointFields.java", "commitBeforeChange": "1fe4f2534d39f819eae3ae1a6e6169c651b0a8a8", "commitAfterChange": "f98130957df08de9cae93169298e04bf84388cae", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \t@Test \tpublic void honorTimeout() throws Exception", "signatureAfterChange": "  \t@Test \tpublic void beforeIsCalledOnSameInstance()", "diff": ["-", "-\t@Test", "-\tpublic void honorTimeout() throws Exception {", "-\t\tassertThat(testResult(HonorTimeout.class), failureCountIs(1));", "-\t}", "+", "+\t@Test", "+\tpublic void beforeIsCalledOnSameInstance() {", "+\t\tassertThat(testResult(BeforeAndAfterOnSameInstance.class),", "+\t\t\t\tisSuccessful());", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de81e605c367280bdac678e142816fe1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java", "commitBeforeChange": "7ca2c7d2e052b99526415113b8d5dcc513e7de07", "commitAfterChange": "e35fb32e07a4cfe69dd86024a79d9cb3b9132e55", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tprivate Matcher<Iterable<Failure>> empty()", "signatureAfterChange": "  \tprivate Matcher<Iterable<Failure>> empty()", "diff": ["-\t\treturn each(nullValue);", "+\t\treturn everyItem(nullValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "deacfe2c50e3dd75eec7ac252690590d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/parameterized/BlockJUnit4ClassRunnerWithParameters.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public BlockJUnit4ClassRunnerWithParameters(TestWithParameters test)             throws InitializationError", "signatureAfterChange": "      public BlockJUnit4ClassRunnerWithParameters(TestWithParameters test)             throws InitializationError", "diff": ["-        fParameters = test.getParameters().toArray(", "+        parameters = test.getParameters().toArray(", "-        fName = test.getName();", "+        name = test.getName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "deb2b3b395ccd27f503b7dd60e7786ec", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void validateNoTypeParametersOnArgs(List<Throwable> errors)", "signatureAfterChange": "      public void validateNoTypeParametersOnArgs(List<Throwable> errors)", "diff": ["-        new NoGenericTypeParametersValidator(fMethod).validate(errors);", "+        new NoGenericTypeParametersValidator(method).validate(errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "deb41ffe8941ea0f0d26019f83d60163", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/SynchronizedRunListener.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-        return fListener.toString() + \" (with synchronization wrapper)\";", "+        return listener.toString() + \" (with synchronization wrapper)\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dec5317a79b70f88b22a8071905cb5b2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "1d982e5310d57fe0ea4b63e05f20215ee3add1fe", "commitAfterChange": "24a5aad1f49b4decf946f1df701e354a18544132", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic Statement chain(TestMethod method)", "signatureAfterChange": "  \tpublic Statement childBlock(TestMethod method)", "diff": ["-\t", "-\tpublic Statement chain(TestMethod method) {", "+", "+\tpublic Statement childBlock(TestMethod method) {", "-\t\t", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dee54f51bf4688c7e51005217635c7d4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/MultipleFailureException.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public MultipleFailureException(List<Throwable> errors)", "signatureAfterChange": "      public MultipleFailureException(List<Throwable> errors)", "diff": ["-        fErrors = new ArrayList<Throwable>(errors);", "+        this.errors = new ArrayList<Throwable>(errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "def797ae4c827ff8c95f765bc6f2d67b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "cc6e2c090f1b5c294b7aca4ee8252c6db2347eca", "commitAfterChange": "d0cd805df54673c2d1376c58bcee23b6e32fb4ee", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private static <T> List<T> getAnnotatedMembers(Map<Class<?>, List<T>> map,             Class<? extends Annotation> type, boolean canFill)", "signatureAfterChange": "      private static <T> List<T> getAnnotatedMembers(Map<Class<?>, List<T>> map,             Class<? extends Annotation> type, boolean fillIfAbsent)", "diff": ["-            Class<? extends Annotation> type, boolean canFill) {", "-        if (!map.containsKey(type) && canFill) {", "+            Class<? extends Annotation> type, boolean fillIfAbsent) {", "+        if (!map.containsKey(type) && fillIfAbsent) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df6156eb7a7486610e7fba4f63cde240", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "015c02e04d940a4bffc6a8e687751c4610db19b8", "commitAfterChange": "8b507d7908603bf6e36ea9e60921b76eb5923d0f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t\t \t\t@Override \t\tpublic void run(RunNotifier notifier)", "signatureAfterChange": " \t\t \t\t@Override \t\tpublic void run(RunNotifier notifier)", "diff": ["-\t\t\tfor (Future<Object> each : collator.results)", "+\t\t\tfor (Future<Object> each : fCollator.results)", "-\t\t\t\t\teach.get(); // TODO(parallel) what should this really be?", "+\t\t\t\t\teach.get();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df794a5ae708996bdd3da2c805b9963d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "223b34b516467bcd9cb7ebc7f49549f2e7362dca", "commitAfterChange": "5501ad5d546427b228b208da15cec997e0b13cc8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic MaxCore(File storedResults)", "signatureAfterChange": "  \tprivate MaxCore(File storedResults)", "diff": ["-\tpublic MaxCore(File storedResults) {", "-\t\tfHistory = MaxHistory.forFolder(storedResults);", "+\tprivate MaxCore(File storedResults) {", "+\t\tfHistory = MaxHistory.locallyStored(storedResults);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfa24964a96a1f8ea1b0bfe2c191e4d8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "956f86fa4c406a923d5366b5906e3431e9d0717d", "commitAfterChange": "198df01b7b288e57e222a33c74f8ff98bf518d93", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected Statement withBefores(FrameworkMethod method, Object target, \t\t\tStatement statement)", "signatureAfterChange": " \tprotected Statement withBefores(FrameworkMethod method, Object target, \t\t\tStatement statement)", "diff": ["-\t\treturn new RunBefores(statement, befores, target);", "+\t\treturn befores.isEmpty() ? statement : ", "+\t\t\tnew RunBefores(statement, befores, target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0049cc48ecd5e2da6b91aceff8e9e84", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkField.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public Field getField()", "signatureAfterChange": "     public Field getField()", "diff": ["-        return fField;", "+        return field;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0652b2519ef5b6db05f620ed11e2a16", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "29416b4ee89314119fb0f2d8011d63ac36531388", "commitAfterChange": "8817825612894d11856312a777281b6c7cf81672", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic static void main(String args[])", "signatureAfterChange": " \t \tpublic static void main(String args[])", "diff": ["-\t", "-\t\t\t\tSystem.exit(-1);", "-\t\t\tSystem.exit(0);", "+\t\t\t\tSystem.exit(FAILURE_EXIT);", "+\t\t\tSystem.exit(SUCCESS_EXIT);", "-\t\t\tSystem.exit(-2);", "+\t\t\tSystem.exit(EXCEPTION_EXIT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e07222e6268c3bbe329def1bf5637760", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/TypeMatchingBetweenMultiDataPointsMethod.java", "commitBeforeChange": "48aabe1b16bd288f74ac4ff92e3a38792533be39", "commitAfterChange": "61326c93276d31e249e57815edf93b695df5669d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t\t@DataPoints \t\tpublic static String[][] wrongfullyTyped()", "signatureAfterChange": "  \t\t@DataPoints \t\tpublic static String[][] anotherCorrectlyTyped()", "diff": ["-\t\tpublic static String[][] wrongfullyTyped() {", "+\t\tpublic static String[][] anotherCorrectlyTyped() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e07ca0a37e0ae5648e6b1d22e232a23b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/ArrayComparisonFailure.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public String getMessage()", "signatureAfterChange": "      @Override     public String getMessage()", "diff": ["-        if (message != null) {", "-            sb.append(message);", "+        if (fMessage != null) {", "+            sb.append(fMessage);", "-        for (int each : indices) {", "+        for (int each : fIndices) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e07daa70d9ec1d2c3e4bed3aca87bc7c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedExceptionMatcherBuilder.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private Matcher<Throwable> allOfTheMatchers()", "signatureAfterChange": "      private Matcher<Throwable> allOfTheMatchers()", "diff": ["-        if (fMatchers.size() == 1) {", "-            return cast(fMatchers.get(0));", "+        if (matchers.size() == 1) {", "+            return cast(matchers.get(0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e08bfd991d488f8160a5a6e4594e8466", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "fdc9cd5ea91f5ae1d7e5991abadd1b3f989626f7", "commitAfterChange": "31cbeb4f3c141295d0b0703ccff2b2ffbee780f4", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic static void assertArrayEquals(String message, float[] expecteds, \t\t\tfloat[] actuals, float delta) throws ArrayComparisonFailure", "signatureAfterChange": " \tpublic static void assertArrayEquals(String message, float[] expecteds, \t\t\tfloat[] actuals, float delta) throws ArrayComparisonFailure", "diff": ["-\t\tnew InexactComparisonCriteria(delta).internalArrayEquals(message, expecteds, actuals);", "+\t\tnew InexactComparisonCriteria(delta).arrayEquals(message, expecteds, actuals);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e090d94a887f50a544779ff5559c9aae", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Suite.java", "commitBeforeChange": "9ba0d7a6ada9742d3f7a721cfab09c29e80ca39d", "commitAfterChange": "1796fa2ddd8ab6e2551d40b1b1a63cd954837b19", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprotected Suite(Class<?> klass, Class<?>[] annotatedClasses) throws InitializationError", "signatureAfterChange": " \t \tprotected Suite(Class<?> klass, Class<?>[] annotatedClasses) throws InitializationError", "diff": ["-\t\tsuper(klass);", "+\t\tsuper(klass, klass.getName());", "-", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e09627ecfd98850e47711a775c5c2c93", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      Long getFailureTimestamp(Description key)", "signatureAfterChange": "      Long getFailureTimestamp(Description key)", "diff": ["-        return fFailureTimestamps.get(key.toString());", "+        return failureTimestamps.get(key.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e09b3ddcc7ce16e8785736cb1d11eca9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "          @Override         public void testFinished(Description description) throws Exception", "signatureAfterChange": "          @Override         public void testFinished(Description description) throws Exception", "diff": ["-            fCount.getAndIncrement();", "+            count.getAndIncrement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0a1a17aefd78ea7ba3a34c03c9e6646", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/interceptor/ExpectedException.java", "commitBeforeChange": "8e313a1e58a56694c0441b2fa60974fa8e1bfe31", "commitAfterChange": "409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic Statement intercept(Statement base, FrameworkMethod method, Object target)", "signatureAfterChange": " \t \tpublic Statement apply(Statement base, FrameworkMethod method, Object target)", "diff": ["-\tpublic Statement intercept(Statement base, FrameworkMethod method, Object target) {", "+\t", "+\tpublic Statement apply(Statement base, FrameworkMethod method, Object target) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0d90870185362caa777cdaa88dc7ed0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void addChild(Description description)", "signatureAfterChange": "     public void addChild(Description description)", "diff": ["-        children.add(description);", "+        fChildren.add(description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e12a52bca98a6a2c545c4178e99a84d0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/TestClass.java", "commitBeforeChange": "5dd69355f371be15aee03875752f95e2b20e02c9", "commitAfterChange": "ad9972ba5d135d1c5673f0773cb7027f7823feb5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private List<Class<?>> getSuperClasses(Class<?> testClass)", "signatureAfterChange": "      private List<Class<?>> getSuperClasses(Class<?> testClass)", "diff": ["-        ArrayList<Class<?>> results = new ArrayList<Class<?>>();", "+        List<Class<?>> results = new ArrayList<Class<?>>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e144530dc86930993ac57aa7c0d2a65b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected Statement withAfterClasses(Statement statement)", "signatureAfterChange": "     protected Statement withAfterClasses(Statement statement)", "diff": ["-        List<FrameworkMethod> afters = fTestClass", "+        List<FrameworkMethod> afters = testClass"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e16828e1ab93d289935fd2657c760dc8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/listening/TextListenerTest.java", "commitBeforeChange": "6ff2381af213bf699e62244315debec66b373d81", "commitAfterChange": "67e3edf20613b1278f4be05353b31b5129e21882", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tpublic void testAssumptionFailureIsReflected()", "signatureAfterChange": " \t \tpublic void testAssumptionFailureIsReflected()", "diff": ["-\t\tassertThat(results.toString(), containsString(\"Spain\"));", "+\t\tassertThat(results.toString(), both(containsString(\"Spain\")).and(containsString(\"INVALID ASSUMPTION 1)\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1a395c32a51536a0d848fb3e788f2c4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "          @Override         public void evaluate() throws Throwable", "signatureAfterChange": "          @Override         public void evaluate() throws Throwable", "diff": ["-                fNext.evaluate();", "+                next.evaluate();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1c0ac3f8920301fa49d254ecca4b00b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Override     public String getName()", "signatureAfterChange": "     @Override     public String getName()", "diff": ["-        return fMethod.getName();", "+        return method.getName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1c3515f06c81b801aa12dc5574969e8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestClass.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic List<TestMethod> getTestMethods()", "signatureAfterChange": "  \tpublic List<FrameworkMethod> getTestMethods()", "diff": ["-\tpublic List<TestMethod> getTestMethods() {", "+\tpublic List<FrameworkMethod> getTestMethods() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1ca766b39db2ff79db9fe0bae940351", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public Object[] getMethodArguments() throws CouldNotGenerateValueException", "signatureAfterChange": "      public Object[] getMethodArguments() throws CouldNotGenerateValueException", "diff": ["-        return getActualValues(getConstructorParameterCount(), fAssigned.size());", "+        return getActualValues(getConstructorParameterCount(), assigned.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1dc4e1ca99ced78e75e4f5d9b0e3c97", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "f49fb25b6fbffcc7a68b28824ed3856ffa9d6fdd", "commitAfterChange": "078e45bd31a9920e00633ad6ce658e22529304f2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprotected String testName(FrameworkMethod method)", "signatureAfterChange": "  \tprotected String testName(Method method)", "diff": ["-\tprotected String testName(FrameworkMethod method) {", "-\t\treturn method.getName();", "-\t}", "+\tprotected String testName(Method method) {", "+\t\treturn method.getName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e218c117cbf56f4fd555136c908445ab", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/ParameterSignature.java", "commitBeforeChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "commitAfterChange": "59b1e2926cdebfd257c6c091ee2bd478d8aa04d2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic <T extends Annotation> T findDeepAnnotation( \t\t\tClass<T> annotationType)", "signatureAfterChange": "  \tpublic <T extends Annotation> T findDeepAnnotation( \t\t\tClass<T> annotationType)", "diff": ["-\t\treturn findDeepAnnotation(annotations2, annotationType);", "+\t\treturn findDeepAnnotation(annotations2, annotationType, 3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e21daebe1bef27c1688201538ce3b451", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactory.java", "commitBeforeChange": "5820172f30e56e9b0bc8feca6d7b3be58b7ee0ee", "commitAfterChange": "9d9899bce3506e7d87ebc6352a3cf3d25ea20f54", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r         public FilterNotCreatedException(String message)", "signatureAfterChange": "\r         public FilterNotCreatedException(Exception exception)", "diff": ["-        public FilterNotCreatedException(String message) {\r", "-            super(message);\r", "+        public FilterNotCreatedException(Exception exception) {\r", "+            super(exception);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e23b29b444ac725ca1cd5f837f80b47c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/ErrorReportingRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public ErrorReportingRunner(Class<?> testClass, Throwable cause)", "signatureAfterChange": "      public ErrorReportingRunner(Class<?> testClass, Throwable cause)", "diff": ["-        fTestClass = testClass;", "-        fCauses = getCauses(cause);", "+        this.testClass = testClass;", "+        causes = getCauses(cause);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e24b434c7f874cf0c5a9b00ba2fcbaba", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/InitializationError.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public InitializationError(List<Throwable> errors)", "signatureAfterChange": "     public InitializationError(List<Throwable> errors)", "diff": ["-        this.errors = errors;", "+        this.fErrors = errors;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e283f5ee1d50f10304e84b176fa07ec7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "77ecd2119d3124b72935038effffadf7b98eccd9", "commitAfterChange": "3a791ec79fff66aebc332fe4e4cbf626e39bd3d3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Override \tprotected Description describeChild(FrameworkMethod method)", "signatureAfterChange": "  \t@Override \tprotected Description describeChild(FrameworkMethod method)", "diff": ["-\t\treturn Description.createTestDescription(fTestClass.getJavaClass(),", "+\t\treturn Description.createTestDescription(getTestClass().getJavaClass(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e28668c628d140cee764f29095144ada", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/Stopwatch.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void starting()", "signatureAfterChange": "      private void starting()", "diff": ["-        fStartNanos= currentNanoTime();", "+        startNanos = currentNanoTime();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e29ca6353db52589412e96720798790b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "30a17cfdc3e58d7b0bc9723f86098c2a06a77c23", "commitAfterChange": "fdc9cd5ea91f5ae1d7e5991abadd1b3f989626f7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t\t \t\t@Override \t\tpublic void run(RunNotifier notifier)", "signatureAfterChange": " \t\t \t\t@Override \t\tpublic void run(RunNotifier notifier)", "diff": ["-\t\t\tfor (Future<Object> each : collator.results)", "+\t\t\tfor (Future<Object> each : fCollator.results)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e29cb8932f236063a5ef9f91a616e266", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/links/Notifying.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic void run(Roadie context)", "signatureAfterChange": "  \t@Override \tpublic void run(EachTestNotifier context)", "diff": ["-\tpublic void run(Roadie context) {", "+\tpublic void run(EachTestNotifier context) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2da0b8cb88957a767720f27079f7409", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "9917b9fe95fd237b824b0bb6a3f9ef9efedd2b3b", "commitAfterChange": "063004dca462777a969ab1e0002dd3053014381c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     static public void assertNotEquals(String message, double unexpected,             double actual, double delta)", "signatureAfterChange": "     static public void assertNotEquals(String message, double unexpected,             double actual, double delta)", "diff": ["-            failEquals(message, new Double(actual));", "+            failEquals(message, actual);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e317978014d6712c25dd6f51c8e6221d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/runner/Version.java", "commitBeforeChange": "d48bf9735b916e7f2c06575970f90dff6f512822", "commitAfterChange": "32b5270071e08297f167a1785fd71b92ab6d7c1b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static String id()", "signatureAfterChange": "  \tpublic static String id()", "diff": ["-\t\treturn \"4.11-SNAPSHOT\";", "+\t\treturn VERSION;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3671918e92c97016c45dd4845b0a687", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/FailureRunView.java", "commitBeforeChange": "b6a023c447628100c104708666eddd0b2eaa41d3", "commitAfterChange": "86b71cb1b9784a9b87c86b4f3f12632ae6773d1f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t\t\t\t\t\t \t\tpublic Component getListCellRendererComponent( \t\t\tJList list, Object value, int modelIndex,  \t\t\tboolean isSelected, boolean cellHasFocus)", "signatureAfterChange": " \t\t\t\t\t\t \t\tpublic Component getListCellRendererComponent( \t\t\tJList list, Object value, int modelIndex,  \t\t\tboolean isSelected, boolean cellHasFocus)", "diff": ["+\t\t    Component c= super.getListCellRendererComponent(list, value, modelIndex, isSelected, cellHasFocus);", "-\t\t    \t\t\tsetIcon(fFailureIcon);", "+\t\t    \t\tsetIcon(fFailureIcon);", "-\t\t    \t\tif (fErrorIcon != null)", "-\t\t    \t\t\tsetIcon(fErrorIcon);", "-\t\t    \t}", "-\t\t    \tComponent c= super.getListCellRendererComponent(list, text, modelIndex, isSelected, cellHasFocus);", "+\t\t    \tif (fErrorIcon != null)", "+\t\t    \t\tsetIcon(fErrorIcon);", "+\t\t    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3aec6ce26da83591dbaff739115895f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/EventCollector.java", "commitBeforeChange": "df70c1087de9d3827656ede187371bbe29d2a974", "commitAfterChange": "a538d25ae50887dc9395f2f59ad5040752c0ec4f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \t@Override \tpublic void testIgnored(Description description) throws Exception", "signatureAfterChange": "  \t@Override \tpublic void testIgnored(Description description) throws Exception", "diff": ["-", "-\t@Override", "-\tpublic void testIgnored(Description description) throws Exception {", "-\t\ttestIgnored.add(description);", "-\t}", "+", "+\t@Override", "+\tpublic void testIgnored(Description description) throws Exception {", "+\t\tfTestsIgnored.add(description);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3d816fe2f3f0efd49217f2506cf712e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/TheoryTestUtils.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public static List<PotentialAssignment> potentialAssignments(Method method)             throws Exception", "signatureAfterChange": "          public static List<PotentialAssignment> potentialAssignments(Method method)             throws Throwable", "diff": ["-            throws Exception {", "+            throws Throwable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3e076e90d9807f0c7a6a7cb16ae14ea", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     @Override     public Class<?> getDeclaringClass()", "signatureAfterChange": "     @Override     public Class<?> getDeclaringClass()", "diff": ["-        return fMethod.getDeclaringClass();", "+        return method.getDeclaringClass();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3edf2f0ec18372c4febe6f69a8514da", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactory.java", "commitBeforeChange": "196c4ed79cbaca37709643b54913b361b677ae04", "commitAfterChange": "0a9a389570a171b67c3155d312f2e90bdab5aaaf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "         public FilterNotFoundException(final String message, final Exception exception)", "signatureAfterChange": "         public FilterNotCreatedException(String message, Exception exception)", "diff": ["-    public static class FilterNotFoundException extends ClassNotFoundException {", "-        public FilterNotFoundException(final String message, final Exception exception) {", "+    public static class FilterNotCreatedException extends ClassNotFoundException {", "+        public FilterNotCreatedException(String message, Exception exception) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4180e2a77d37c6d6f5454c8b4abd6a1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "78b4a8975523d0288a6f20f0ae7862b45cb55038", "commitAfterChange": "f5c7fe43447b008b4db13e031b7c0c3551ae9ddd", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "     static public void assertNotEquals(String message, float expected,             float actual, float delta)", "signatureAfterChange": "     static public void assertNotEquals(String message, float unexpected,             float actual, float delta)", "diff": ["-    static public void assertNotEquals(String message, float expected,", "+    static public void assertNotEquals(String message, float unexpected,", "-        if (!floatIsDifferent(expected, actual, delta)) {", "-            failEquals(message, new Float(expected));", "+        if (!floatIsDifferent(unexpected, actual, delta)) {", "+            failEquals(message, new Float(actual));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e418affba393a1270bded2409e7e55d7", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 37, "signatureBeforeChange": " \t \tprotected JComboBox createSuiteCombo()", "signatureAfterChange": " \t \tprotected JComboBox createSuiteCombo()", "diff": ["+\t\tcombo.setLightWeightPopupEnabled(false);", "+\t\t", "-", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4743588190c9b90b675c11bcae03b69", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "248bdb8248d80ac57d8b485ef73e758103a0c312", "commitAfterChange": "18299dc8f8aaae0e64345795b2884eb7f42ad460", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate int getConstructorParameterCount()", "signatureAfterChange": "  \tprivate int getConstructorParameterCount()", "diff": ["-\t\tList<ParameterSignature> signatures= ParameterSignature.signatures(new TestClass(fClass)", "+\t\tList<ParameterSignature> signatures= ParameterSignature.signatures(fClass"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4824a0c74e80c4c0449a885502ae2e5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "d8da2f699a89857292e5e5b92945b2fe3c0a039a", "commitAfterChange": "303f74183714223503216efa037373bfb04bfe1a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic MaxCore(File storedResults)", "signatureAfterChange": "  \tprivate MaxCore(File storedResults)", "diff": ["-\tpublic MaxCore(File storedResults) {", "-\t\tfHistory = MaxHistory.forFolder(storedResults);", "+\tprivate MaxCore(File storedResults) {", "+\t\tfHistory = MaxHistory.locallyStored(storedResults);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4a8362c70c9995060bd3478bec6df8b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/SynchronizedRunListener.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Override     public int hashCode()", "signatureAfterChange": "      @Override     public int hashCode()", "diff": ["-        return fListener.hashCode();", "+        return listener.hashCode();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5355fcb503d892ac65f9b82e7346275", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "b3831d600d2d893ec6250ee930188cc373d81ee5", "commitAfterChange": "403f761da11bdaf9a03538139e7ae51601c36b0e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t\t@Override \t\tpublic boolean shouldRun(Description description)", "signatureAfterChange": " \t\t@Override \t\tpublic boolean shouldRun(Description description)", "diff": ["+\t\t// TODO: why do we have two CategoryFilters?", "-\t\t\tif (isParameterizedClass(description))", "-\t\t\t\treturn false;", "+//\t\t\tif (!canHaveCategorizedChildren(description))", "+//\t\t\t\treturn false;", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5c31ea1496f2ad6cf5fc72092fd9919", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/RunNotifier.java", "commitBeforeChange": "c8a70525d05df7238c55fb662d41a6535cc8a664", "commitAfterChange": "f8ee06baeb1ffa935c14c80aef5c5e6d28faefbd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t\tvoid run()", "signatureAfterChange": " \t\tvoid run()", "diff": ["-            synchronized ( fListenersLock) {", "-                for (Iterator<RunListener> all= fListeners.iterator(); all.hasNext();)", "-                    try {", "-                        notifyListener(all.next());", "-                    } catch (Exception e) {", "-                        all.remove(); // Remove the offending listener first to avoid an infinite loop", "-                        fireTestFailure(new Failure(Description.TEST_MECHANISM, e));", "-                    }", "-                }", "+\t\t\tsynchronized (fListeners) {", "+\t\t\t\tfor (Iterator<RunListener> all= fListeners.iterator(); all.hasNext();)", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tnotifyListener(all.next());", "+\t\t\t\t\t} catch (Exception e) {", "+\t\t\t\t\t\tall.remove(); // Remove the offending listener first to avoid an infinite loop", "+\t\t\t\t\t\tfireTestFailure(new Failure(Description.TEST_MECHANISM, e));", "+\t\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5d1c4c502a3a288d7b9f96e153d9cef", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCore.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void addListener(RunListener listener)", "signatureAfterChange": "     public void addListener(RunListener listener)", "diff": ["-        fNotifier.addListener(listener);", "+        notifier.addListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5d440a7ee159841843f932f561536d0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/results/ResultMatchersTest.java", "commitBeforeChange": "052fc095d5b4a8af643d0e4402a504716ad8eb03", "commitAfterChange": "231241782c199d39943f742d0abe57057b0b785c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Test \tpublic void failureIsCorrect() throws Exception", "signatureAfterChange": "  \t@Test \tpublic void failureIsCorrect() throws Exception", "diff": ["-\t\tassertThat(createResult(), failureIs(instanceOf(IllegalArgumentException.class)));", "+\t\tassertThat(createPrintableResult(), failureIs(instanceOf(IllegalArgumentException.class)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5e07f037b9b62f5f1c39c5cf97c64fd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java", "commitBeforeChange": "41cbbf7e228b8f7908e672a79863ff970316b120", "commitAfterChange": "421ab330509a53302f56b209595f55b23bfdfc0e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic void sort(Sorter sorter)", "signatureAfterChange": "  \tpublic void sort(Sorter sorter)", "diff": ["-\t\tif (fTest instanceof Sortable) {", "-\t\t\tSortable adapter= (Sortable) fTest;", "+\t\tif (getTest() instanceof Sortable) {", "+\t\t\tSortable adapter= (Sortable) getTest();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5e3eb2eeb45d6095d546e8c50adc0f9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java", "commitBeforeChange": "41cbbf7e228b8f7908e672a79863ff970316b120", "commitAfterChange": "421ab330509a53302f56b209595f55b23bfdfc0e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \t@Override \tpublic Description getDescription()", "signatureAfterChange": " \t \t@Override \tpublic Description getDescription()", "diff": ["-\t\treturn makeDescription(fTest);", "+\t\treturn makeDescription(getTest());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e61b062cd960ce42f2165909e4b7dbe4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/Suite.java", "commitBeforeChange": "7ae578fb953b5e4ea969cb435f702d2c5478e43c", "commitAfterChange": "a6368e40e787e7a23c9f1e58d6a47bf9fa2d0a2c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate void runChild(Runner each, \t\t\tfinal RunNotifier notifier)", "signatureAfterChange": "  \t@Override \tprotected void runChild(Runner each, final RunNotifier notifier)", "diff": ["-\tprivate void runChild(Runner each,", "-\t\t\tfinal RunNotifier notifier) {", "+\t@Override", "+\tprotected void runChild(Runner each, final RunNotifier notifier) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6db2b0b408f9153eea38fc10c7734d4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/manipulation/SingleMethodTest.java", "commitBeforeChange": "971c9a52281458375af79e303449fe22bf91feab", "commitAfterChange": "97402a3401c6cc2d45d395c0d9d636f483b5571c", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \t@Test public void eliminateUnnecessaryTreeBranches() throws Exception", "signatureAfterChange": "  \t@Test public void eliminateUnnecessaryTreeBranches() throws Exception", "diff": ["-\t\tPlan plan = runner.getPlan();", "-\t\tassertEquals(1, plan.getChildren().size());", "+\t\tDescription description = runner.getDescription();", "+\t\tassertEquals(1, description.getChildren().size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e700a87af220fe24f992da82f7d7ceb7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      private Collection<T> getFilteredChildren()", "signatureAfterChange": "      private Collection<T> getFilteredChildren()", "diff": ["-        if (fFilteredChildren == null) {", "-            synchronized (fChildrenLock) {", "-                if (fFilteredChildren == null) {", "-                    fFilteredChildren = Collections.unmodifiableCollection(getChildren());", "+        if (filteredChildren == null) {", "+            synchronized (childrenLock) {", "+                if (filteredChildren == null) {", "+                    filteredChildren = Collections.unmodifiableCollection(getChildren());", "-        return fFilteredChildren;", "+        return filteredChildren;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e73ee011e0a449ad21db36a00956cf47", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedExceptionMatcher.java", "commitBeforeChange": "2d886e29734f9f55b75db91095880c5d109ff678", "commitAfterChange": "6bea82df32f687d636f1b843a1918a3a1ff22a6e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t@Override \tprotected boolean matchesSafely(Throwable item)", "signatureAfterChange": "  \t@Override \tprotected boolean matchesSafely(Throwable item)", "diff": ["-\t\treturn fCompositeMatcher.matches(item);", "+\t\treturn getCompositeMatcher().matches(item);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e76b2523a8d1cf909636b0df47925339", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "30a17cfdc3e58d7b0bc9723f86098c2a06a77c23", "commitAfterChange": "fdc9cd5ea91f5ae1d7e5991abadd1b3f989626f7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t\t \t\t@Override \t\tpublic void run(RunNotifier notifier)", "signatureAfterChange": " \t\t \t\t@Override \t\tpublic void run(RunNotifier notifier)", "diff": ["-\t\t\tfor (Future<Object> each : collator.results)", "+\t\t\tfor (Future<Object> each : fCollator.results)", "-\t\t\t\t\teach.get(); // TODO(parallel) what should this really be?", "+\t\t\t\t\teach.get();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e776e4c4ca0ca8dca379584b231aee2b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "d6c79c0f626afd12506b6a5a672cdec84683c3ca", "commitAfterChange": "95da39292ea777ec3ff99be2bb23d46f704f683a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t  \tpublic String getFolder()", "signatureAfterChange": "  \tpublic File getFile()", "diff": ["-\tpublic String getFolder() {", "+\tpublic File getFile() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e78e1e5250edd2870b6b5801297fea44", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "commitAfterChange": "44e7458b19d5cd1900a765a440c96e85b81d25fc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprotected void runMethods(final RunNotifier notifier)", "signatureAfterChange": "  \tprotected void runMethods(final RunNotifier notifier)", "diff": ["-\t\t\tinvokeTestMethod(method, notifier);", "+\t\t\trunMethod(method, notifier);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e790156cb6d9e0c13a3ac2e27c20e0bf", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/runners/Enclosed.java", "commitBeforeChange": "229490bbf8731ec07fd7ce6d68f0e22b502b9caf", "commitAfterChange": "45aed05bb9e75bc8228af8ffbb44d39626d02dd5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprivate static Class<?>[] filterAbstractClasses(final Class<?>[] classes)", "signatureAfterChange": " \t \tprivate static Class<?>[] filterAbstractClasses(final Class<?>[] classes)", "diff": ["-\t\tfinal List<Class<?>> filteredList = new ArrayList<Class<?>>();", "+\t\tfinal List<Class<?>> filteredList= new ArrayList<Class<?>>(classes.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7d53e1bf547b6d289e442f2952d5a80", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "37c590a7174da5b260d13b694898df4ecdb9ac6e", "commitAfterChange": "a20a0181362d470fbfcb1dff865dfb321fe3b8b1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t\t@Override \t\tpublic void testIgnored(Description description) throws Exception", "signatureAfterChange": "  \t\t@Override \t\tpublic void testIgnored(Description description) throws Exception", "diff": ["-\t\t\tfIgnoredDuringExecution= true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8026747bbf8e6f14fd05e2a12a20b58", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "8e313a1e58a56694c0441b2fa60974fa8e1bfe31", "commitAfterChange": "409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprotected Statement methodBlock(FrameworkMethod method)", "signatureAfterChange": " \tprotected Statement methodBlock(FrameworkMethod method)", "diff": ["-\t\tstatement= withInterceptors(method, test, statement);", "+\t\tstatement= withRules(method, test, statement);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e84620f15b182c771c66eed5f3cebaee", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "ce280f0afd532351d5783cf93d08526181eee4c8", "commitAfterChange": "cec8e3ed1246c289ae156c4418d2e224bd793f4b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic Categories(Class<?> klass, RunnerBuilder builder) \t\t\tthrows InitializationError", "signatureAfterChange": "  \tpublic Categories(Class<?> klass, RunnerBuilder builder) \t\t\tthrows InitializationError", "diff": ["-\t\t\tfilter(new CategoryFilter(getCategory(klass)));", "+\t\t\tfilter(new CategoryFilter(getIncludedCategory(klass),", "+\t\t\t\t\tgetExcludedCategory(klass)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e87fc60c25ac4eb76d59af43ac789ec2", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/framework/TestListener.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void addFailure(Test test, Throwable t);", "signatureAfterChange": "  \tpublic void addFailure(Test test, AssertionFailedError t);", "diff": ["- \t*/", "- \tpublic void addFailure(Test test, Throwable t);  ", "+ \t */", "+ \tpublic void addFailure(Test test, AssertionFailedError t);  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8b47270aefcbf1d93ec2265655b72c6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "4e2455b1f142bdf8f07383082638718695e51224", "commitAfterChange": "c618504adee4bc91b3bd7e0ff06be6e1fa9d88cc", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t\t@Override \t\tpublic void evaluate() throws Throwable", "signatureAfterChange": "  \t\t@Override \t\tpublic void evaluate() throws Throwable", "diff": ["-\t\t\t\tAssert.assertThat(e, matches(fMatcher));", "+\t\t\t\tAssert.assertThat(e, fMatcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8bb0f70f69d422afcd0fc9bdecab58c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "0956a4e6a236e9414c0d19a349206f3350501c60", "commitAfterChange": "f925a047a6e8e6c6f6996dc19a4ab9b3fc35a3ba", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected Statement childrenInvoker(final RunNotifier notifier)", "signatureAfterChange": "     protected Statement childrenInvoker(final RunNotifier notifier)", "diff": ["-        return new ChildrenAwareStatement(getFilteredChildren()) {", "-            ", "+        return new Statement() {", "-                runChildren(notifier, getChildren());", "+                runChildren(notifier);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8f2bca8f43db2ba2150ce649af40238", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/links/Link.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic abstract void run(Roadie context) throws Throwable;", "signatureAfterChange": " \tpublic abstract void run(EachTestNotifier context) throws Throwable;", "diff": ["-\tpublic abstract void run(Roadie context) throws Throwable;", "+\tpublic abstract void run(EachTestNotifier context) throws Throwable;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e94f89e690723dfccd560e6b522eadf8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java", "commitBeforeChange": "3efad73fc5f34d7d860a8653e91d93c8539ac7bd", "commitAfterChange": "a2ca18438f84e16d5dc1e456dcd9ec6be0cd4b7a", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "          @Test         public void noThrow()", "signatureAfterChange": "          @Test         public void noThrow()", "diff": ["-            thrown.setMissingExceptionMessage(ARBITRARY_MESSAGE);", "+            thrown.reportMissingExceptionWithMessage(ARBITRARY_MESSAGE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9f7a6c2f627801ae39c6ada17145064", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/runner/BaseTestRunner.java", "commitBeforeChange": "22faf2f277960760eb373563891dcd129ece8cb6", "commitAfterChange": "ece77fa477a6d322bb5b37c7e2367f4c4dfbf9f3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic static void setPreference(String key, String value)", "signatureAfterChange": "  \tpublic static void setPreference(String key, String value)", "diff": ["-\t\tgetPreferences().setProperty(key, value);", "+\t\tgetPreferences().put(key, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea3515b38bf95f27cd8a68c257806229", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "commitAfterChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Assignments allUnassigned(Roadie context, \t\t\tMethod method)", "signatureAfterChange": "  \tpublic static Assignments allUnassigned(Roadie context, \t\t\tMethod testMethod)", "diff": ["-\t\t\tMethod method) {", "+\t\t\tMethod testMethod) {", "-\t\t\t\t.signatures(method));", "+\t\t\t\t.signatures(testMethod));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea55680f275cbb118828a98b9e050f8e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/extendingwithstubs/Guesser.java", "commitBeforeChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "commitAfterChange": "b333208ccfbef77c556a270bd4385586523dcafc", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \t@Override public Object getValue() throws CouldNotGenerateValueException", "signatureAfterChange": "  \t@Override public Object getValue(Object test) throws CouldNotGenerateValueException", "diff": ["-\t@Override public Object getValue() throws CouldNotGenerateValueException {", "+\t@Override public Object getValue(Object test) throws CouldNotGenerateValueException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea5940e05a25596900e493058e1b03fa", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit38ClassRunner.java", "commitBeforeChange": "0174b15e97908a4a68625cb029a07e8f7d593afc", "commitAfterChange": "9a192ede27ad2936b0c4a31fe5d0180dfd556d8b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic void filter(Filter filter) throws NoTestsRemainException", "signatureAfterChange": "  \tpublic void filter(Filter filter) throws NoTestsRemainException", "diff": ["-\t\tif (fTest instanceof JUnit4TestAdapter) {", "-\t\t\tJUnit4TestAdapter adapter= (JUnit4TestAdapter) fTest;", "+\t\tif (fTest instanceof Filterable) {", "+\t\t\tFilterable adapter= (Filterable) fTest;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea812c615de9047ad24c768d4cbf3c64", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/runner/TextFeedbackTest.java", "commitBeforeChange": "858fe281c8412ea60f24b6862b0bd5f75058624a", "commitAfterChange": "7ab8d5e4fc2a796e0e4f4fd337fa5d15d07b0993", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tpublic void testError()", "signatureAfterChange": " \t \tpublic void testError()", "diff": ["-\t\tResultPrinter printer= new ResultPrinter(new PrintStream(output)) {", "+\t\tResultPrinter printer= new TestResultPrinter(new PrintStream(output)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb1cf5464aba4e73dd06018354560f2f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/ParentRunner.java", "commitBeforeChange": "833a511d59e2cc5314283d5ce27ff6fd6514b459", "commitAfterChange": "897fa2227e26f221e5efa4f95a805f7ff1ccac5f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t@Override \tpublic Description getDescription()", "signatureAfterChange": "  \t@Override \tpublic Description getDescription()", "diff": ["-\t\tfor (T child : getChildren())", "+\t\tfor (T child : getFilteredChildren())", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb32263e057619c82fb04baf146e34da", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TemporaryFolder.java", "commitBeforeChange": "07de07397d0960bf0c0e8c5ca79afb10aa0f144c", "commitAfterChange": "347c60e3dc0120029e2a3ad566b1ad2b0aac411f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void create() throws IOException", "signatureAfterChange": " \tpublic void create() throws IOException", "diff": ["-\t\tfolder= createTemporaryFolderIn(null);", "+\t\tfolder = createTemporaryFolderIn(parentFolder);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebe3aae29dcc11b5161f24f7e7801833", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private Throwable getResult(FutureTask<Throwable> task, Thread thread)", "signatureAfterChange": "     private Throwable getResult(FutureTask<Throwable> task, Thread thread)", "diff": ["-            if (fTimeout > 0) {", "-                return task.get(fTimeout, fTimeUnit);", "+            if (timeout > 0) {", "+                return task.get(timeout, timeUnit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebfc491eccbda90e9a7c6a78efb7dc67", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "d8da2f699a89857292e5e5b92945b2fe3c0a039a", "commitAfterChange": "303f74183714223503216efa037373bfb04bfe1a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic RememberingListener listener()", "signatureAfterChange": " \tpublic RunListener listener()", "diff": ["-\tpublic RememberingListener listener() {", "+\t */", "+\tpublic RunListener listener() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec2ce43353b33475deb7b0ff70d8fbaa", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedExceptionMatcher.java", "commitBeforeChange": "6bea82df32f687d636f1b843a1918a3a1ff22a6e", "commitAfterChange": "872faeab15115635b3260001979ae036e64e29bf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tvoid and(Matcher<?> matcher)", "signatureAfterChange": "  \tvoid andAlso(Matcher<?> matcher)", "diff": ["-\tvoid and(Matcher<?> matcher) {", "+\tvoid andAlso(Matcher<?> matcher) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec330fe35be20aa2d654ecb93db64ce5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/internal/runners/statements/FailOnTimeoutTest.java", "commitBeforeChange": "b645d2b5055f8eb96cf8511e15c3eb5edf5e4dc9", "commitAfterChange": "bf2f922c9445e6ee24891f64a5a7ca0e68f7f786", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void throwExceptionIfTheSecondCallToEvaluateNeedsTooMuchTime()             throws Throwable", "signatureAfterChange": "      @Test     public void throwExceptionIfTheSecondCallToEvaluateNeedsTooMuchTime()             throws Throwable", "diff": ["-        thrown.expect(Exception.class);", "+        thrown.expect(TestFailedOnTimeoutException.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec67e7af5523d45d60342cca52607930", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "496ee866a46f783d145b649a688df57cbf79490e", "commitAfterChange": "5f7fddf537e551109ffd6241a00c87a2b3521523", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate void runChildren(final RunNotifier notifier)", "signatureAfterChange": "  \tprivate void runChildren(final RunNotifier notifier)", "diff": ["-\t\tfor (final T each : getCachedChildren())", "-\t\t\tfScheduler.schedule(new Runnable() {", "+\t\tfor (final T each : getFilteredChildren())", "+\t\t\tfScheduler.schedule(new Runnable() {\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec87867629eef8acf652b07757154373", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "e07e59eb9d24f6e4fa85dd99f311c1feca6ea983", "commitAfterChange": "5d957024be0d1b181879d48b7915b3b8aad8f5d5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate void addFields(ParameterSignature sig, \t\t\tList<PotentialAssignment> list)", "signatureAfterChange": "  \tprivate void addFields(ParameterSignature sig, \t\t\tList<PotentialAssignment> list)", "diff": ["-\t\tfor (final Field field : fClass.getFields()) {", "+\t\tfor (final Field field : fClass.getJavaClass().getFields()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec902959e1009853d686f5cf5b74dde0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/interceptor/InterceptorTest.java", "commitBeforeChange": "8e313a1e58a56694c0441b2fa60974fa8e1bfe31", "commitAfterChange": "409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\t\tpublic Statement intercept(final Statement base, \t\t\t\t\tFrameworkMethod method, Object target)", "signatureAfterChange": " \t\t\tpublic Statement apply(final Statement base, \t\t\t\t\tFrameworkMethod method, Object target)", "diff": ["-\t\tpublic StatementInterceptor example= new StatementInterceptor() {", "-\t\t\tpublic Statement intercept(final Statement base,", "+\t\tpublic MethodRule example= new MethodRule() {", "+\t\t\tpublic Statement apply(final Statement base,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecb5a1f4f17bd44901e6833c78825bd7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestElement.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic abstract List<TestMethod> getBefores();", "signatureAfterChange": "  \tpublic abstract List<FrameworkMethod> getBefores();", "diff": ["-\tpublic abstract List<TestMethod> getBefores();", "+\tpublic abstract List<FrameworkMethod> getBefores();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed4cd0889019bbf8d18f4b676376b3b5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/ErrorReportingRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void run(RunNotifier notifier)", "signatureAfterChange": "      @Override     public void run(RunNotifier notifier)", "diff": ["-        for (Throwable each : fCauses) {", "+        for (Throwable each : causes) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed82aaf64d508253241617998c7786a0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/MultipleFailureException.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public MultipleFailureException(List<Throwable> errors)", "signatureAfterChange": "      public MultipleFailureException(List<Throwable> errors)", "diff": ["-        this.errors = new ArrayList<Throwable>(errors);", "+        this.fErrors = new ArrayList<Throwable>(errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edb24c2b2f83189d8406bfac04236b0c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "78b4a8975523d0288a6f20f0ae7862b45cb55038", "commitAfterChange": "f5c7fe43447b008b4db13e031b7c0c3551ae9ddd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     static public void assertNotEquals(String message, double expected,             double actual, double delta)", "signatureAfterChange": "     static public void assertNotEquals(String message, double unexpected,             double actual, double delta)", "diff": ["-    static public void assertNotEquals(String message, double expected,", "+    static public void assertNotEquals(String message, double unexpected,", "-        if (!doubleIsDifferent(expected, actual, delta)) {", "-            failEquals(message, new Double(expected));", "+        if (!doubleIsDifferent(unexpected, actual, delta)) {", "+            failEquals(message, new Double(actual));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edd30ff89f4741fb1df2e448b01b8489", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java", "commitBeforeChange": "ff7c54f564eac489de1aef062ff0048c128e1c4f", "commitAfterChange": "b23ffd790b06f561290239ef3b7a5239ba755f10", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \t\t@Test \t\tpublic void test()", "signatureAfterChange": "  \t@Test \tpublic void failWithHelpfulMessageForNonStaticClassRule()", "diff": ["+\tpublic void failWithHelpfulMessageForNonStaticClassRule() {", "+\t\tassertClassHasFailureMessage(TestWithNonStaticClassRule.class,", "+\t\t\t\t\"The TestRule 'temporaryFolder' must be static.\");", "-\t\t@Test", "-\t\tpublic void test() {", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee1483f72ff8f36eda86c303e587ccde", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "a58514aec7e843339be24980e92aeeb759327ffb", "commitAfterChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t\t \t\tpublic BeforeAndAfter(Anchor next)", "signatureAfterChange": " \t\t \t\tpublic BeforeAndAfter(Link next)", "diff": ["-\t\tpublic BeforeAndAfter(Anchor next) {", "+\t\tpublic BeforeAndAfter(Link next) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee98a88730ffe63b85052017a1f70f4c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/RunNotifier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void fireTestFailure(Failure failure)", "signatureAfterChange": "     public void fireTestFailure(Failure failure)", "diff": ["-        fireTestFailures(fListeners, asList(failure));", "+        fireTestFailures(listeners, asList(failure));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eedb21b859ff350b93c3f55e50006ea7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "610b38e6c9753ab01b8aef093d2fcaeabe3a7a32", "commitAfterChange": "5ccb8e7c1189ac4a248dc2aa2852d1a760937466", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic List<FrameworkMethod> getAnnotatedMethods( \t\t\tClass<? extends Annotation> annotationClass)", "signatureAfterChange": " \tpublic List<FrameworkMethod> getAnnotatedMethods( \t\t\tClass<? extends Annotation> annotationClass)", "diff": ["-\t\tensureKey(annotationClass);", "+\t\t// TODO (May 25, 2009 10:02:46 PM): DUP", "+\t\tensureKey(fMethodsForAnnotations, annotationClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef10dc05b69bb5a1a472e2163926171a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/model/EachTestNotifier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void fireTestFinished()", "signatureAfterChange": "      public void fireTestFinished()", "diff": ["-        fNotifier.fireTestFinished(fDescription);", "+        notifier.fireTestFinished(description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef2c25b0f9f8a43b962d08309998f408", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactoryFactory.java", "commitBeforeChange": "0a9a389570a171b67c3155d312f2e90bdab5aaaf", "commitAfterChange": "318adee43493447e22bbea89e0f17260e0186a14", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public Filter createFilter(String filterFactoryFqcn, FilterFactoryParams args)             throws FilterFactory.FilterNotCreatedException, FilterFactoryNotFoundException", "signatureAfterChange": "     public Filter createFilter(String filterFactoryFqcn, FilterFactoryParams args)             throws FilterFactory.FilterNotCreatedException, FilterFactoryNotCreatedException", "diff": ["+     */", "-            throws FilterFactory.FilterNotCreatedException, FilterFactoryNotFoundException {", "+            throws FilterFactory.FilterNotCreatedException, FilterFactoryNotCreatedException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef9bc3947d676fac35c4c1c22b2e19f4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/RunNotifier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public void addFirstListener(RunListener listener)", "signatureAfterChange": "     public void addFirstListener(RunListener listener)", "diff": ["-        fListeners.add(0, wrapIfNotThreadSafe(listener));", "+        listeners.add(0, wrapIfNotThreadSafe(listener));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efcd2eb6053b139af0bf7e41cb00f42e", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/runner/BaseTestRunner.java", "commitBeforeChange": "69a8dad63d43eb1071c5823f345f290edd5a3050", "commitAfterChange": "0807a8cd01b6d63d54f9a3580540fa35b7fb292e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \t  \tpublic static String getPreference(String key)", "signatureAfterChange": "  \t  \tpublic static String getPreference(String key)", "diff": ["- \t\treturn fPreferences.getProperty(key);", "+ \t\treturn getPreferences().getProperty(key);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f001dfaa725c4f9335f0e9e8397ce204", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public boolean isPublic()", "signatureAfterChange": "      public boolean isPublic()", "diff": ["-        return Modifier.isPublic(fClass.getModifiers());", "+        return Modifier.isPublic(clazz.getModifiers());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0475f6815e71fd30cd0f8fe558f6074", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/FilterOptionIntegrationTest.java", "commitBeforeChange": "5edfb4447b609c178d63a3d991172861076d143b", "commitAfterChange": "34336085d5aba69c997f8e6b244531561afebcd4", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void assertFinished(Class<?> testClass)", "signatureAfterChange": "      private void assertWasRun(Class<?> testClass)", "diff": ["-    private void assertFinished(Class<?> testClass) {", "-        assertTrue(testClass.getName() + \" expected to finish but did not\", testListener.testFinished(testClass));", "+    private void assertWasRun(Class<?> testClass) {", "+        assertTrue(testClass.getName() + \" expected to finish but did not\", testListener.wasRun(testClass));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0791f8b919adaeffa388c9079cc4190", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "a58514aec7e843339be24980e92aeeb759327ffb", "commitAfterChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t\tTimeout(Anchor next)", "signatureAfterChange": "  \t\tTimeout(Link next)", "diff": ["-\t\tTimeout(Anchor next) {", "+\t\tTimeout(Link next) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f098efdd3b07251ebc53991611214f5e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionTest.java", "commitBeforeChange": "41f96743522db61b14ef2c8ca7d719a226b9f153", "commitAfterChange": "bb13b318cd79a68470e93c79635090c7bb565475", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 18, "signatureBeforeChange": "          @Test         public void violatedAssumption()", "signatureAfterChange": "          @Test         public void failedAssumption()", "diff": ["-", "-        @Test", "-        public void violatedAssumption() {", "-            // expect an exception, which is not an AssumptionViolatedException", "-            thrown.expect(NullPointerException.class);", "+        public void failedAssumption() {", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0df33e800da61a99011a58681002137", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "56b1d5d4342c13151ae2d4b3f9aca146732cfb42", "commitAfterChange": "0815c4d619b177431e64a2485baa0f746f3e2886", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate BisectionRule getClassRule(final FrameworkField field)", "signatureAfterChange": "  \tprivate TestRule getClassRule(final FrameworkField field)", "diff": ["-\tprivate BisectionRule getClassRule(final FrameworkField field) {", "+\tprivate TestRule getClassRule(final FrameworkField field) {", "-\t\t\treturn (BisectionRule) field.get(null);", "+\t\t\treturn (TestRule) field.get(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1064245d7dc96143af48cc283957360", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/AssumptionTest.java", "commitBeforeChange": "2745d016f648e783360bd076f23b36908f8125b0", "commitAfterChange": "b064a274adb12c6e866cb08dedc70534237330b2", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "      @Test     public void assumptionsWithMessageAndCause()", "signatureAfterChange": "      @Test     public void assumptionsWithMessageAndCause()", "diff": ["-        assertSame(failures.get(0).getException().getCause(), t);", "+        assertSame(failures.get(0).getException().getCause(), e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f11ea12de9a68671240509834e479490", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactoryFactory.java", "commitBeforeChange": "0a9a389570a171b67c3155d312f2e90bdab5aaaf", "commitAfterChange": "318adee43493447e22bbea89e0f17260e0186a14", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Filter createFilterFromFilterSpec(String filterSpec)             throws FilterFactoryNotFoundException, FilterFactory.FilterNotCreatedException", "signatureAfterChange": "     public Filter createFilterFromFilterSpec(String filterSpec)             throws FilterFactoryNotCreatedException, FilterFactory.FilterNotCreatedException", "diff": ["+     */", "-            throws FilterFactoryNotFoundException, FilterFactory.FilterNotCreatedException {", "+            throws FilterFactoryNotCreatedException, FilterFactory.FilterNotCreatedException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f158824ced758439825b3f906afca5cf", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/FilterFactoryFactoryTest.java", "commitBeforeChange": "74cab2dc9b8c32482d2c86a66a0dd9318930b4bc", "commitAfterChange": "5820172f30e56e9b0bc8feca6d7b3be58b7ee0ee", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r     @Test\r     public void shouldCreateFilter() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldCreateFilter() throws Exception", "diff": ["-        Filter filter = filterFactoryFactory.createFilter(FilterFactoryStub.class, new NoFilterFactoryParams());\r", "+        Filter filter = filterFactoryFactory.createFilter(\r", "+                FilterFactoryStub.class, new FilterFactoryParams(createSuiteDescription(testName.getMethodName())));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1614cf70f8919333521013c3f06f674", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void validatePublicVoid(boolean isStatic, List<Throwable> errors)", "signatureAfterChange": "     public void validatePublicVoid(boolean isStatic, List<Throwable> errors)", "diff": ["-            errors.add(new Exception(\"Method \" + fMethod.getName() + \"() \" + state + \" be static\"));", "+            errors.add(new Exception(\"Method \" + method.getName() + \"() \" + state + \" be static\"));", "-            errors.add(new Exception(\"Method \" + fMethod.getName() + \"() should be public\"));", "+            errors.add(new Exception(\"Method \" + method.getName() + \"() should be public\"));", "-        if (fMethod.getReturnType() != Void.TYPE) {", "-            errors.add(new Exception(\"Method \" + fMethod.getName() + \"() should be void\"));", "+        if (method.getReturnType() != Void.TYPE) {", "+            errors.add(new Exception(\"Method \" + method.getName() + \"() should be void\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f16a70f1e34394000871f34837e35090", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java", "commitBeforeChange": "61994e0c0aa768b43fad1ac6e35b1e43ffc8b142", "commitAfterChange": "97654ff38f976733fa4c6ae9b28e3fe10328183f", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void providesDataByAnnotatedFields()", "signatureAfterChange": "      @Test     public void providesDataByAnnotatedFields()", "diff": ["-        Result result = JUnitCore.runClasses(FibonacciWithParameterizedFieldTest.class);", "-        assertEquals(7, result.getRunCount());", "-        assertEquals(6, result.getFailureCount());", "+        Result result = JUnitCore.runClasses(AdditionTestWithAnnotatedFields.class);", "+        assertEquals(4, result.getRunCount());", "+        assertEquals(0, result.getFailureCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f16cfa6fdcbf03d4f3f501139101ad54", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public ParameterSignature nextUnassigned()", "signatureAfterChange": "      public ParameterSignature nextUnassigned()", "diff": ["-        return fUnassigned.get(0);", "+        return unassigned.get(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1eec3b3a6f67908375ebcb39759565d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      private void runChildren(final RunNotifier notifier)", "signatureAfterChange": "      private void runChildren(final RunNotifier notifier)", "diff": ["-        final RunnerScheduler scheduler = fScheduler;", "+        final RunnerScheduler currentScheduler = scheduler;", "-                scheduler.schedule(new Runnable() {", "+                currentScheduler.schedule(new Runnable() {", "-            scheduler.finished();", "+            currentScheduler.finished();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1f60df5b8c296341cd091356b2bc851", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "c12af8eb53b2464efff959b633f4c189caf2f1e7", "commitAfterChange": "90bf3119a6326671cc467386036302cc6040f752", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  \t@Test \tpublic void parseMethod_whenCantParse()", "signatureAfterChange": "  \t@Test \tpublic void parseMethod_whenCantParse()", "diff": ["-\t\tassertNull(Description.TEST_MECHANISM.parseMethod());", "+\t\tassertNull(Description.TEST_MECHANISM.getMethodName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1f915f875bcc5aab0c9f951e1a217cd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "2bb6d5de002052680d443065e1c26f59be212e4b", "commitAfterChange": "6887479f1b64c5a18f5708ea6905bb59804a9a0f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprotected Link chain(TestMethod method)", "signatureAfterChange": "  \tprotected Link chain(TestMethod method)", "diff": ["+\t\tlink= ignoreViolatedAssumptions(link);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2e03ccf5c24716d6e6d8d6a96443297", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          @Override         public Object getValue() throws CouldNotGenerateValueException", "signatureAfterChange": "          @Override         public Object getValue() throws CouldNotGenerateValueException", "diff": ["-                return fMethod.invokeExplosively(null);", "+                return method.invokeExplosively(null);", "-                DataPoint annotation = fMethod.getAnnotation(DataPoint.class);", "+                DataPoint annotation = method.getAnnotation(DataPoint.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2e2e6062d063401d10010b49dd85f81", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/parallel/ParallelClassTest.java", "commitBeforeChange": "143c96470aec3221f76f9dcc8042fb36cc88b852", "commitAfterChange": "a72b0dbef4b01e8ad0b832d9a579dd7fabd5a071", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t@Test(timeout=1500) public void testsRunInParallel()", "signatureAfterChange": " \t@Test(timeout=1500) public void testsRunInParallel()", "diff": ["-\t\tResult result= JUnitCore.runClasses(ParallelExecutioner.classes(), Example1.class, Example2.class);", "+\t\tResult result= JUnitCore.runClasses(ParallelComputer.classes(), Example1.class, Example2.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2f033a3d6412d258b9f1dbbaa26e946", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/model/TestClass.java", "commitBeforeChange": "8e3f361443ddf8bca21c3db661c75d374fe78dba", "commitAfterChange": "c96215c5d025336d8ab1d7d2ab57daee20869cea", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate void ensureKey(Class<? extends Annotation> annotation)", "signatureAfterChange": "  \tprivate void ensureKey(Class<? extends Annotation> annotation)", "diff": ["-\t\tif (!methodsForAnnotations.containsKey(annotation))", "-\t\t\tmethodsForAnnotations.put(annotation,", "+\t\tif (!fMethodsForAnnotations.containsKey(annotation))", "+\t\t\tfMethodsForAnnotations.put(annotation,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3a4e1954b1b39d4b743a10e4a8a3979", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/CounterPanel.java", "commitBeforeChange": "ffd5f087e9b0ffaf146c91323adcf0ffdf469b0f", "commitAfterChange": "255f47231f5e49373d4b331e3a946e0005f1e0f4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprivate JTextField createOutputField(int width)", "signatureAfterChange": "  \tprivate JTextField createOutputField(int width)", "diff": ["-\t\tfield.setHorizontalAlignment(JTextField.LEFT);", "+\t\tfield.setHorizontalAlignment(SwingConstants.LEFT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3fd016feec179333b4e8ef454ce4db3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/StacktracePrintingMatcher.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public StacktracePrintingMatcher(Matcher<T> throwableMatcher)", "signatureAfterChange": "      public StacktracePrintingMatcher(Matcher<T> throwableMatcher)", "diff": ["-        fThrowableMatcher = throwableMatcher;", "+        this.throwableMatcher = throwableMatcher;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f422751790500056f8f0960e83942827", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit38ClassRunner.java", "commitBeforeChange": "0174b15e97908a4a68625cb029a07e8f7d593afc", "commitAfterChange": "9a192ede27ad2936b0c4a31fe5d0180dfd556d8b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t\tprivate Description asDescription(Test test)", "signatureAfterChange": "  \t\tprivate Description asDescription(Test test)", "diff": ["-\t\t\tif (test instanceof JUnit4TestCaseFacade) {", "-\t\t\t\tJUnit4TestCaseFacade facade= (JUnit4TestCaseFacade) test;", "+\t\t\tif (test instanceof Describable) {", "+\t\t\t\tDescribable facade= (Describable) test;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f425e6719ae15c705a8b433990c77335", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/methods/TimeoutTest.java", "commitBeforeChange": "7eef2314cb78d41def996cdd80c5a56c94a993f3", "commitAfterChange": "35b428a24bdd2eddd9653189632896d4f5b1ce42", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "                  public void failure(boolean mainThreadStalls) throws Exception", "signatureAfterChange": "                  public void failure(boolean mainThreadStalls) throws Exception", "diff": ["-            Thread t1 = new Thread (new threadTest (false), \"timeout-thr1\");", "-            Thread t2 = new Thread (new threadTest (!mainThreadStalls), \"timeout-thr2\");", "-            Thread t3 = new Thread (new threadTest (false), \"timeout-thr3\");", "+            Thread t1 = new Thread(new ThreadTest(false), \"timeout-thr1\");", "+            Thread t2 = new Thread(new ThreadTest(!mainThreadStalls), \"timeout-thr2\");", "+            Thread t3 = new Thread(new ThreadTest(false), \"timeout-thr3\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f42f0d73597b5e055edb7fc291964e9a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/TimeoutRuleTest.java", "commitBeforeChange": "7783b6af52624957599680145471fd684ad1f47a", "commitAfterChange": "78f5fa85b492353ad062f54d1f0ceec745537761", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "          @Test         public void run5() throws IOException", "signatureAfterChange": "          @Test         public void run5() throws IOException", "diff": ["-            tmp.deleteOnExit();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f48d0136f81d700a47cf5ca10ea9f40c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/CategoryValidator.java", "commitBeforeChange": "f5e7e1ff180bb17e4f9df702a038e06a974f78f6", "commitAfterChange": "fe5d86eba71a1f59dbbed09de4add01cc20420c0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Override     public List<Throwable> validateAnnotatedMethod(Method method)", "signatureAfterChange": "     @Override     public List<Exception> validateAnnotatedMethod(Method method)", "diff": ["-    public List<Throwable> validateAnnotatedMethod(Method method) {", "-        List<Throwable> errors = new ArrayList<Throwable>();", "+    public List<Exception> validateAnnotatedMethod(Method method) {", "+        List<Exception> errors = new ArrayList<Exception>();", "-            for (Class clazz : fIncompatibleAnnotations) {", "+            for (Class clazz : INCOMPATIBLE_ANNOTATIONS) {", "-        return Collections.unmodifiableList(errors);", "+        return unmodifiableList(errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f53d38b1e2b7185387680a619cffac6e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "a58514aec7e843339be24980e92aeeb759327ffb", "commitAfterChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t\tpublic ExpectedException(Anchor next)", "signatureAfterChange": " \t\tpublic ExpectedException(Link next)", "diff": ["-\t\tAnchor fNext;", "-\t\tpublic ExpectedException(Anchor next) {", "+\t\tLink fNext;", "+\t\tpublic ExpectedException(Link next) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f54ab7339e03a36f5f7950b571661d98", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "a4c68872a91681139d404825c2bb04bd5ba804dd", "commitAfterChange": "f0ef837a40922ac08c608661385abf71732975d3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprotected void runMethod(TestMethod method, RunNotifier notifier)", "signatureAfterChange": "  \tprotected void runMethod(TestMethod method, RunNotifier notifier)", "diff": ["+\t\t", "+\t\t// TODO: (Oct 10, 2007 10:57:17 AM) Still seems messy doing this here", "+", "+\t\t", "+\t\t// TODO: (Oct 10, 2007 11:36:43 AM) EachTestNotifier has bad name throughout", "+", "-\t\trun(roadie, method, test);", "+\t\tchain(method, test, roadie).run(roadie);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f568b06f32f17d0f93045cfecd448973", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "d6662fcc06ec7b07c696eb703c47d3731e4e11c7", "commitAfterChange": "85578d48f6459a05665329faa9b52a861e9142cb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t@Test public void preferNewTestsOverTestsThatFailed()", "signatureAfterChange": " \t@Test public void preferNewTestsOverTestsThatFailed()", "diff": ["-\t\tList<Description> things= max.sort(two);", "+\t\tList<Description> things= max.sortedLeavesForTest(two);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f59af298bb284c34660efa264a3a87af", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/requests/ClassRequest.java", "commitBeforeChange": "6ff2381af213bf699e62244315debec66b373d81", "commitAfterChange": "67e3edf20613b1278f4be05353b31b5129e21882", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic ClassRequest(Class<?> testClass, SuiteBuilder builder)", "signatureAfterChange": "  \tpublic ClassRequest(Class<?> testClass)", "diff": ["-\tpublic ClassRequest(Class<?> testClass, SuiteBuilder builder) {", "-\t\tthis(testClass, builder, true);", "+\tpublic ClassRequest(Class<?> testClass) {", "+\t\tthis(testClass, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5b174968e340f48e56be28c5a027375", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "30a17cfdc3e58d7b0bc9723f86098c2a06a77c23", "commitAfterChange": "fdc9cd5ea91f5ae1d7e5991abadd1b3f989626f7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \t\t@Override \t\tprotected void runChild(final Runner runner, final RunNotifier notifier)", "signatureAfterChange": " \t \t\t@Override \t\tprotected void runChild(final Runner runner, final RunNotifier notifier)", "diff": ["-\t\t\tcollator.process(callable);", "+\t\t\tfCollator.process(callable);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5b2a55003e4bb08acd662b5b37d524f", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/tests/AssertionTest.java", "commitBeforeChange": "5139a1be36da4ed64a860de82e7d74f2e5405037", "commitAfterChange": "0cdf29715af64edd05229c400f214417fecdef89", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 41, "signatureBeforeChange": " \t \t@Test public void arraysDeclaredAsObjectAreComparedAsArrays()", "signatureAfterChange": " \t \t@Test(expected=AssertionError.class)  \tpublic void arraysDeclaredAsObjectAreComparedAsObjects()", "diff": ["-\t@Test public void arraysDeclaredAsObjectAreComparedAsArrays() {", "+\t@Test(expected=AssertionError.class) ", "+\tpublic void arraysDeclaredAsObjectAreComparedAsObjects() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f61b1e6994785f616e9b845abf88e195", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/TestMethod.java", "commitBeforeChange": "f98130957df08de9cae93169298e04bf84388cae", "commitAfterChange": "43b0fe352d5bced0c341640d0c630d23f2022a7e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic TestMethod(Method method, TestClass testClass)", "signatureAfterChange": "  \tpublic TestMethod(Method method)", "diff": ["-", "-\tpublic TestMethod(Method method, TestClass testClass) {", "+\tpublic TestMethod(Method method) {", "-\t\tfTestClass= testClass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6399b40ff091c4b1a9e66a9a4fecc99", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "37a611801fbea6ecc9b6356d9616e761c8b59b91", "commitAfterChange": "d9c908b9aab5f610e2f42aba1863ce25e36423f2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprotected void printFailure(TestRunEvent each, String prefix)", "signatureAfterChange": "  \tprotected void printFailure(Failure each, String prefix)", "diff": ["-\tprotected void printFailure(TestRunEvent each, String prefix) {", "+\tprotected void printFailure(Failure each, String prefix) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f657eb9b68cc58ccc9958a972a7713ad", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprotected String testName(TestMethod method)", "signatureAfterChange": "  \tprotected String testName(FrameworkMethod method)", "diff": ["-\tprotected String testName(TestMethod method) {", "+\tprotected String testName(FrameworkMethod method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6a5fe956097f943909be00aca9a86b0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/ParentRunnerTest.java", "commitBeforeChange": "a1813f62876a6c7227ec5c866b621e01cda79664", "commitAfterChange": "97afc5e205e1c6ac0f5a9aefabed92d58d88ab81", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Test \tpublic void useChildHarvester() throws InitializationError", "signatureAfterChange": "  \t@Test \tpublic void useChildHarvester() throws InitializationError", "diff": ["-\t\trunner.setRunnerInterceptor(new RunnerInterceptor() {", "-\t\t\tpublic void runChild(Runnable childStatement) {", "+\t\trunner.setScheduler(new RunnerScheduler() {", "+\t\t\tpublic void schedule(Runnable childStatement) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f70628303524f6b9027be921ae665b32", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/manipulation/Sorter.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public int compare(Description o1, Description o2)", "signatureAfterChange": "      public int compare(Description o1, Description o2)", "diff": ["-        return fComparator.compare(o1, o2);", "+        return comparator.compare(o1, o2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f725872a38f9c031dd970416d99ec532", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "015c02e04d940a4bffc6a8e687751c4610db19b8", "commitAfterChange": "8b507d7908603bf6e36ea9e60921b76eb5923d0f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \t\t@Override \t\tprotected void runChild(final FrameworkMethod method, final RunNotifier notifier)", "signatureAfterChange": " \t \t\t@Override \t\tprotected void runChild(final FrameworkMethod method, final RunNotifier notifier)", "diff": ["-\t\t\tcollator.process(callable);", "+\t\t\tfCollator.process(callable);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f738fcec3b513f296219098343a7f0ea", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "1d982e5310d57fe0ea4b63e05f20215ee3add1fe", "commitAfterChange": "24a5aad1f49b4decf946f1df701e354a18544132", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprotected List<TestMethod> getTestMethods()", "signatureAfterChange": "  \tprotected List<TestMethod> computeTestMethods()", "diff": ["-\tprotected List<TestMethod> getTestMethods() {", "+\tprotected List<TestMethod> computeTestMethods() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f75f57f033f6112b514ebf70adb5e1a4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "d6c79c0f626afd12506b6a5a672cdec84683c3ca", "commitAfterChange": "95da39292ea777ec3ff99be2bb23d46f704f683a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static MaxCore forFolder(String storedResults)", "signatureAfterChange": " \tpublic static MaxCore forFolder(String storedResults)", "diff": ["+\tpublic static MaxCore forFolder(String storedResults) {", "+\t\treturn new MaxCore(new File(storedResults + \".ser\"));", "-\tpublic static MaxCore forFolder(String storedResults) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7c7c18815cb523dd150ee373beec1ae", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public Result run(Request request, JUnitCore core)", "signatureAfterChange": "     public Result run(Request request, JUnitCore core)", "diff": ["-        core.addListener(fHistory.listener());", "+        core.addListener(history.listener());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7c9fa1542774d585f3c31ceead2036f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "95da39292ea777ec3ff99be2bb23d46f704f683a", "commitAfterChange": "8e20f520565dc52f5599eafd54b603043bfecbaf", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \t@Test \tpublic void rememberOldRuns()", "signatureAfterChange": "  \t@Test \tpublic void rememberOldRuns()", "diff": ["-\t\t// TODO (Mar 9, 2009 10:40:03 PM): Direct access to fHistory", "-\t\tMaxCore reincarnation= MaxCore.forFolder(fMaxFile);", "+\t\tMaxCore reincarnation= MaxCore.storedLocally(fMaxFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8326d2ab8574575daec973729797158", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/requests/FilterRequest.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public Runner getRunner()", "signatureAfterChange": "      @Override     public Runner getRunner()", "diff": ["-            Runner runner = fRequest.getRunner();", "-            fFilter.apply(runner);", "+            Runner runner = request.getRunner();", "+            filter.apply(runner);", "-                    .format(\"No tests found matching %s from %s\", fFilter", "-                            .describe(), fRequest.toString())));", "+                    .format(\"No tests found matching %s from %s\", filter", "+                            .describe(), request.toString())));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f84c8bff6b07994bad34aaeee7ac15af", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private void handleException(Throwable e) throws Throwable", "signatureAfterChange": "      private void handleException(Throwable e) throws Throwable", "diff": ["-            assertThat(e, fMatcherBuilder.build());", "+            assertThat(e, matcherBuilder.build());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8817126cbbd27364dd4d7c51e34e052", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/extension/TestMethodInterfaceTest.java", "commitBeforeChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "commitAfterChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Test \tpublic void getBeforesIsPublic() throws SecurityException, \t\t\tNoSuchMethodException", "signatureAfterChange": "  \t@Test \tpublic void getBeforesIsPublic() throws SecurityException, \t\t\tNoSuchMethodException", "diff": ["-\t\tJUnit4MethodRunner testMethod= new JUnit4MethodRunner(BeforesAndAfters.class", "+\t\tTestMethod testMethod= new TestMethod(BeforesAndAfters.class"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f892d1f1dbb2ac045ff46ab0e5532440", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/TestClassTest.java", "commitBeforeChange": "8e313a1e58a56694c0441b2fa60974fa8e1bfe31", "commitAfterChange": "409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \t@Test \tpublic void fieldsOnSubclassesShadowSuperclasses()", "signatureAfterChange": "  \t@Test \tpublic void fieldsOnSubclassesShadowSuperclasses()", "diff": ["-\t\t\t\tInterceptor.class).size(), is(1));", "+\t\t\t\tRule.class).size(), is(1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8ab039947fcb15584bed2a7a7833c64", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          public void startTest(Test test)", "signatureAfterChange": "          public void startTest(Test test)", "diff": ["-            fNotifier.fireTestStarted(asDescription(test));", "+            notifier.fireTestStarted(asDescription(test));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8d205e0d01f4a683dd2b96ce21d96e4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/junit/tests/framework/ComparisonCompactorTest.java", "commitBeforeChange": "b2d26ecd55eb952ad4dcd281ac3c4db77fbf9ba0", "commitAfterChange": "cfe6afadc81b72449c8b0cb96d51aa57f7a593b7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testComparisonErrorOverlapingMatchesContext()", "signatureAfterChange": "      public void testComparisonErrorOverlappingMatchesContext()", "diff": ["-    public void testComparisonErrorOverlapingMatchesContext() {", "+    public void testComparisonErrorOverlappingMatchesContext() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8deb115d467f8ae1ecca92840bf7051", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "c732aa178a822671d3de88e5ece05f9bf464172b", "commitAfterChange": "af9634a3656bcd9c3988692c32381d0772077584", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "   \tpublic List<FailedAssumption> getFailedAssumptions()", "signatureAfterChange": " \t \tpublic List<InvalidAssumption> getInvalidAssumptions()", "diff": ["-", "-\tpublic List<FailedAssumption> getFailedAssumptions() {", "-\t\treturn fUnrunnables;", "+\t", "+\tpublic List<InvalidAssumption> getInvalidAssumptions() {", "+\t\treturn fInvalidAssumptions;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f91e7666327a036daee7515aba2633ca", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "b8adef37033aa4177453362d24b3f2ecb7031c59", "commitAfterChange": "043e82844ef2c3c0961d98a34771c84f7a950d1a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public ParameterSupplier getSupplier(ParameterSignature unassigned)             throws InstantiationException, IllegalAccessException", "signatureAfterChange": "      public ParameterSupplier getSupplier(ParameterSignature unassigned)             throws InstantiationException, IllegalAccessException", "diff": ["-        ParameterSupplier supplier = getAnnotatedSupplier(unassigned);", "+        ParameterSupplier supplier = getSupplierFromAnnotation(unassigned);", "-", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9c13efc7e565622fb20d8319fbd46a8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCore.java", "commitBeforeChange": "8c91ac2cb9da29edf75ae22dba1e1aaa60275176", "commitAfterChange": "432e3e27df0b072f3bab066cd33214913f4c7f32", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic static Result runClasses(Class<?>... classes)", "signatureAfterChange": " \tpublic static Result runClasses(Executioner asdfasdf, Class<?>... classes)", "diff": ["+\t */", "+\tpublic static Result runClasses(Executioner asdfasdf, Class<?>... classes) {", "+\t\treturn new JUnitCore().run(asdfasdf, classes);", "+\t}", "-\t\treturn new JUnitCore().run(classes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa040a9d83dda6b89d5c4ff4c822dad5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/ThrowableMessageMatcher.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public ThrowableMessageMatcher(Matcher<String> matcher)", "signatureAfterChange": "      public ThrowableMessageMatcher(Matcher<String> matcher)", "diff": ["-        fMatcher = matcher;", "+        this.matcher = matcher;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa2da34b0abef3d8a055b92c0ef01c8c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "8134371705a43fa2b2a8913678d4336d867f6647", "commitAfterChange": "785c7859cd87dc5cb3872fef476ce2f86c9259dd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate Description(String displayName, Class<?> clazz, Annotation... annotations)", "signatureAfterChange": "  \tprivate Description(Class<?> clazz, String displayName, Annotation... annotations)", "diff": ["-\tprivate Description(String displayName, Class<?> clazz, Annotation... annotations) {", "-\t\tthis(displayName, clazz, displayName, annotations);", "+\tprivate Description(Class<?> clazz, String displayName, Annotation... annotations) {", "+\t\tthis(clazz, displayName, displayName, annotations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa461f47fe4cd63e7b020ad3ff2a39d7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "          protected Collection<Field> getDataPointsFields(ParameterSignature sig)", "signatureAfterChange": "          protected Collection<Field> getDataPointsFields(ParameterSignature sig)", "diff": ["-        List<FrameworkField> fields = fClass.getAnnotatedFields(DataPoints.class);", "+        List<FrameworkField> fields = clazz.getAnnotatedFields(DataPoints.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa498023472481f58ad134f5b0c953aa", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Result.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public List<Failure> getFailures()", "signatureAfterChange": "     public List<Failure> getFailures()", "diff": ["-        return fFailures;", "+        return failures;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa52d27454c04612b0f556fba3eede05", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "5e71994e865d0e2ac23885a11444cda91b3bba76", "commitAfterChange": "1273a35689bdcb3304f6634cdc3889c61f9b1b1f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void invokeValidatorsOnClass(List<Throwable> errors)", "signatureAfterChange": "      private void invokeValidatorsOnClass(List<Throwable> errors)", "diff": ["-            annotationValidator.validateAnnotatedClass(getTestClass().getJavaClass(), errors);", "+            errors.addAll(annotationValidator.validateAnnotatedClass(getTestClass().getJavaClass()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa991b7a92d4963c9fe1e1715bf21b2a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java", "commitBeforeChange": "eb095d6d587fac4d1b8693cf4e1bd5146df9902d", "commitAfterChange": "f8a42db55bdb365a111ca0ab2175d804c55002af", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tprivate List<PotentialAssignment> potentialValues(Method method) \t\t\tthrows Exception", "signatureAfterChange": "  \tprivate List<PotentialAssignment> potentialValues(Method method) \t\t\tthrows Exception", "diff": ["-\t\treturn Assignments.allUnassigned(method, HasDateMethod.class)", "+\t\treturn Assignments.allUnassigned(method, HasDateMethod.class, true)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faaaee3bfae979ac74bb27a19b680603", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Override     public boolean equals(Object obj)", "signatureAfterChange": "      @Override     public boolean equals(Object obj)", "diff": ["-        return uniqueId.equals(d.uniqueId);", "+        return fUniqueId.equals(d.fUniqueId);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fab324621a9cc2461551cacbe308bd53", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/FailureRunView.java", "commitBeforeChange": "b6a023c447628100c104708666eddd0b2eaa41d3", "commitAfterChange": "86b71cb1b9784a9b87c86b4f3f12632ae6773d1f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic void addTab(JTabbedPane pane)", "signatureAfterChange": " \t \tpublic void addTab(JTabbedPane pane)", "diff": ["-\t\tJScrollPane sl= new JScrollPane(fFailureList, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);", "+\t\tJScrollPane scrollPane= new JScrollPane(fFailureList, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);", "-\t\tpane.addTab(\"Failures\", errorIcon, sl, \"The list of failed tests\");", "+\t\tpane.addTab(\"Failures\", errorIcon, scrollPane, \"The list of failed tests\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fab9edaea20c428dedd7c29e507cbc3d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/categories/SuiteBuilderTest.java", "commitBeforeChange": "3b7ab4a322c966602f202e455a8bc4612af56a18", "commitAfterChange": "f09cff79b941a525271f3f2838a9742b4c5c8d36", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Test \tpublic void runTwo()", "signatureAfterChange": "  \t@Test \tpublic void runTwo()", "diff": ["-\t\tResult result= new JUnitCore().run(OnlyYesMaybeTwo.class);", "+\t\tResult result= new JUnitCore().run(OnlyYes.class);", "-\t\tassertThat(testResult(OnlyYesMaybeTwo.class), isSuccessful());", "+\t\tassertThat(testResult(OnlyYes.class), isSuccessful());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbba5f1009a5fc240809bfe32446dc4c", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/DefaultFailureDetailView.java", "commitBeforeChange": "22faf2f277960760eb373563891dcd129ece8cb6", "commitAfterChange": "ece77fa477a6d322bb5b37c7e2367f4c4dfbf9f3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t\t \t\tprivate void scan(String trace)", "signatureAfterChange": " \t\t \t\tprivate void scan(String trace)", "diff": ["- \t\t\t\tfLines.add(st.nextToken());", "+ \t\t\t\tfLines.addElement(st.nextToken());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbdfa944190f7e31c76311a56b0863c3", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/DefaultFailureDetailView.java", "commitBeforeChange": "2a57cc62edbc06b83c68d81dea87bbe43c46e20f", "commitAfterChange": "858fe281c8412ea60f24b6862b0bd5f75058624a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic Component getComponent()", "signatureAfterChange": " \tpublic Component getComponent()", "diff": ["-\t\t\tfList.setPrototypeCellValue(\"A Stack Trace Entry Line\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc1ae78cae94f5f5b7ec9512530c06e5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      Long getTestDuration(Description key)", "signatureAfterChange": "      Long getTestDuration(Description key)", "diff": ["-        return durations.get(key.toString());", "+        return fDurations.get(key.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc1f693b502166506bf9d1855f6cd082", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "commitAfterChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tprotected Link withPotentialTimeout(TestMethod method, Link next)", "signatureAfterChange": "  \tprotected Statement withPotentialTimeout(TestMethod method, Statement next)", "diff": ["-\tprotected Link withPotentialTimeout(TestMethod method, Link next) {", "+\tprotected Statement withPotentialTimeout(TestMethod method, Statement next) {", "-\t\t\t? new WithTimeout(next, timeout)", "+\t\t\t? new FailOnTimeout(next, timeout)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc49fe2c7bbc6a08f8d946fd3ec94662", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "a58514aec7e843339be24980e92aeeb759327ffb", "commitAfterChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic Anchor handleExceptions(Anchor next)", "signatureAfterChange": "  \tpublic Link handleExceptions(Link next)", "diff": ["-\tpublic Anchor handleExceptions(Anchor next) {", "+\tpublic Link handleExceptions(Link next) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc9060bf8d8972d4fcdb379360ad5e5e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "77ecd2119d3124b72935038effffadf7b98eccd9", "commitAfterChange": "3a791ec79fff66aebc332fe4e4cbf626e39bd3d3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected void collectInitializationErrors(List<Throwable> errors)", "signatureAfterChange": "  \tprotected void collectInitializationErrors(List<Throwable> errors)", "diff": ["-\t\tfTestClass.validateMethodsForDefaultRunner(errors);", "+\t\tgetTestClass().validateMethodsForDefaultRunner(errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcc46e237235f5baa10e2967b854c221", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "af5722e040626f7c3aa14ccbfb4cb2375f43a561", "commitAfterChange": "568e29c871ea144e12f273dc7e12c949a5a507da", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate ClassRule getClassRule(final FrameworkField field)", "signatureAfterChange": "  \tprivate Value getClassRule(final FrameworkField field)", "diff": ["-\tprivate ClassRule getClassRule(final FrameworkField field) {", "+\tprivate Value getClassRule(final FrameworkField field) {", "-\t\t\treturn (ClassRule) field.get(null);", "+\t\t\treturn (Value) field.get(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd17c8b94b626f34e11f09985f78ee1b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/EachTestNotifier.java", "commitBeforeChange": "a4c68872a91681139d404825c2bb04bd5ba804dd", "commitAfterChange": "f0ef837a40922ac08c608661385abf71732975d3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void addFailure(Throwable targetException)", "signatureAfterChange": "  \t@Override \tprotected void handleFailure(Throwable targetException)", "diff": ["-\tpublic void addFailure(Throwable targetException) {", "+", "+\t@Override", "+\tprotected void handleFailure(Throwable targetException) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd8bfc1f6bd0092f8cfbee6fe3617dcc", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "2ade5fd3aad123d6507b59ed5d48c8f030314f00", "commitAfterChange": "cc8497f28e1d5a46d7940a0b36556154c83d6f7a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private void addMultiPointMethods(ParameterSignature sig, List<PotentialAssignment> list)", "signatureAfterChange": "      private void addMultiPointMethods(ParameterSignature sig, List<PotentialAssignment> list)", "diff": ["-                addMultiPointArrayValues(sig, dataPointsMethod.getName(), list, dataPointsMethod.invokeExplosively(null));", "+                addArrayValues(sig, dataPointsMethod.getName(), list, dataPointsMethod.invokeExplosively(null));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fda3cda5383d40a7ca90717c793cf566", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TimeWatcher.java", "commitBeforeChange": "582d86c49eb8624b9db65e69ad0e404821505b3d", "commitAfterChange": "0a2601045f101930d0ca7f31c53b416fafbbe7a7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Override final protected void failed(Throwable e, Description description)", "signatureAfterChange": "      @Override final protected void failed(Throwable e, Description description)", "diff": ["-        endTime = System.nanoTime();", "+        endNanos = System.nanoTime();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdb418207e241618764e194f5bd717a0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/builders/JUnit4Builder.java", "commitBeforeChange": "f49fb25b6fbffcc7a68b28824ed3856ffa9d6fdd", "commitAfterChange": "078e45bd31a9920e00633ad6ce658e22529304f2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t@Override \tpublic Runner runnerForClass(Class<?> testClass) throws Throwable", "signatureAfterChange": " \t@Override \tpublic Runner runnerForClass(Class<?> testClass) throws Throwable", "diff": ["-\t\treturn new JUnit4ClassRunner(testClass);", "+\t\treturn new BlockJUnit4ClassRunner(testClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdc4bbe9c90fe3e509ba9d5a906de5b2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/TestIntrospector.java", "commitBeforeChange": "890b7b977e42360aa8975c8535fc66bfd8d8cb3e", "commitAfterChange": "88f0fe3ced24506ddf9791f7a088163f4e7b1f20", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic boolean isIgnored(Method eachMethod)", "signatureAfterChange": "  \tpublic boolean isIgnored(Method method)", "diff": ["-\tpublic boolean isIgnored(Method eachMethod) {", "-\t\treturn eachMethod.getAnnotation(Ignore.class) != null;", "+\tpublic boolean isIgnored(Method method) {", "+\t\treturn method.getAnnotation(Ignore.class) != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdec2914152e91bcc0b0ff9f5fbe0ea0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java", "commitBeforeChange": "90bf3119a6326671cc467386036302cc6040f752", "commitAfterChange": "34dd9f4e2bebbcf694dcb855a29edff9243a10d3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate Matcher<Long> greaterThan(final long l)", "signatureAfterChange": "  \tprivate Matcher<Long> greaterThanOrEquals(final long l)", "diff": ["-\tprivate Matcher<Long> greaterThan(final long l) {", "+\tprivate Matcher<Long> greaterThanOrEquals(final long l) {", "-\t\t\t\treturn item > l;", "+\t\t\t\treturn item >= l;", "-\t\t\t\tdescription.appendText(\"greater than \" + l);", "+\t\t\t\tdescription.appendText(\"greater than or equal\" + l);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdf6e6f5ec819bcfad29eeef59197430", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "4dcf3a499652b3c089d91e209c6f01313115ff76", "commitAfterChange": "a916d4133c7e394130d7953da427aae9917ab92c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprotected void printFailure(Failure failure, String prefix)", "signatureAfterChange": "  \tprotected void printFailure(TestRunEvent each, String prefix)", "diff": ["-\tprotected void printFailure(Failure failure, String prefix) {", "-\t\tgetWriter().println(prefix + \") \" + failure.getTestHeader());", "-\t\tgetWriter().print(failure.getTrace());", "+\tprotected void printFailure(TestRunEvent each, String prefix) {", "+\t\tgetWriter().println(prefix + \") \" + each.getTestHeader());", "+\t\tgetWriter().print(each.getTrace());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe1da2cd48c8bc64621ba4132cbf61f5", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/extensions/RepeatedTestTest.java", "commitBeforeChange": "b6a023c447628100c104708666eddd0b2eaa41d3", "commitAfterChange": "86b71cb1b9784a9b87c86b4f3f12632ae6773d1f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \t\tpublic void success()", "signatureAfterChange": "  \t\tpublic void runTest()", "diff": ["-\t\tpublic void success() {", "+\t\tpublic void runTest() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe3e300345c5526054bede2a764242a7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/junit3compatibility/JUnit38ClassRunnerTest.java", "commitBeforeChange": "73f85f59ea686adb8f05a294ffc114b9ec20f2ba", "commitAfterChange": "9b9d86d7e11ba518a826ce35784857d2c1428f38", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "         @Override         public boolean shouldRun(Description description)", "signatureAfterChange": "         @Override         public boolean shouldRun(Description description)", "diff": ["-            return false;", "+            if (description.isTest()) {", "+                return false;", "+            }", "+            return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe68d3972cda3ddaa00c9fd8e72945b6", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 86, "signatureBeforeChange": "  \t \tprivate void about()", "signatureAfterChange": " \t \tprivate void about()", "diff": ["-\tprivate void about() {", "-\t\tAboutDialog about= new AboutDialog(fFrame); ", "-\t\tabout.setModal(true);", "-\t\tabout.setLocation(300, 300);", "-\t\tabout.show();", "+\t", "+\tprivate void about() {", "+\t\tAboutDialog about= new AboutDialog(fFrame); ", "+\t\tabout.show();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe699718c12a0c7e441bc264b07b42b8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/Failure.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public Throwable getException()", "signatureAfterChange": "      public Throwable getException()", "diff": ["-        return thrownException;", "+        return fThrownException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe7184e8bc385077e8b3f2824a08bc54", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/framework/TestSuite.java", "commitBeforeChange": "b6a023c447628100c104708666eddd0b2eaa41d3", "commitAfterChange": "86b71cb1b9784a9b87c86b4f3f12632ae6773d1f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate Constructor getConstructor(Class theClass) throws NoSuchMethodException", "signatureAfterChange": " \tpublic static Constructor getTestConstructor(Class theClass) throws NoSuchMethodException", "diff": ["-\tprivate Constructor getConstructor(Class theClass) throws NoSuchMethodException {", "+\tpublic static Constructor getTestConstructor(Class theClass) throws NoSuchMethodException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fea71acef781aa90b8d7d339768380e1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public Collection<Annotation> getAnnotations()", "signatureAfterChange": "     public Collection<Annotation> getAnnotations()", "diff": ["-        return Arrays.asList(fAnnotations);", "+        return Arrays.asList(annotations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fec47b0671e4437ab34f9bc6653bd3bf", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "979e8abbe974e8847668f5887403da78a6165ebc", "commitAfterChange": "1fcd990f60518c941a44bae2596392021614a20b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Override \tprotected List<FrameworkMethod> getChildren()", "signatureAfterChange": "  \t@Override \tprotected List<FrameworkMethod> getChildren()", "diff": ["-\t\treturn fTestMethods;", "+\t\treturn computeTestMethods();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fec638580f68661c509985677f768b58", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/ThrowableCauseMatcher.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     protected void describeMismatchSafely(T item, Description description)", "signatureAfterChange": "      @Override     protected void describeMismatchSafely(T item, Description description)", "diff": ["-        fMatcher.describeMismatch(item.getCause(), description);", "+        matcher.describeMismatch(item.getCause(), description);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fede6b3259a57ca642b3f73aea2229e9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java", "commitBeforeChange": "971c9a52281458375af79e303449fe22bf91feab", "commitAfterChange": "97402a3401c6cc2d45d395c0d9d636f483b5571c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Test \tpublic void theoryClassMethodsShowUp() throws Exception", "signatureAfterChange": "  \t@Test \tpublic void theoryClassMethodsShowUp() throws Exception", "diff": ["-\t\tassertThat(new Theories(HasATheory.class).getPlan().getChildren()", "-\t\t\t\t.size(), is(1));", "+\t\tassertThat(new Theories(HasATheory.class).getDescription()", "+\t\t\t\t.getChildren().size(), is(1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fef5f811ba2515bcd550c6b6b5a1b6f9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "a5727fce1819a01a7d7715320bc0cac3b91200be", "commitAfterChange": "86b9346e4c8fa263810dbd55a2775081194b1d6f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      boolean isNewTest(Description key)", "signatureAfterChange": "      boolean isNewTest(Description key)", "diff": ["-        return !durations.containsKey(key.toString());", "+        return !fDurations.containsKey(key.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff24f11564ae6a8de21fb0d1340f7ad6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/AssertionTest.java", "commitBeforeChange": "88f0fe3ced24506ddf9791f7a088163f4e7b1f20", "commitAfterChange": "3d7fee93ddc21a6e849c36d5ae58b37b3d189665", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t@Test public void arraysDifferAtElement1withMessage()", "signatureAfterChange": "  \t@Test public void arraysDifferAtElement1withMessage()", "diff": ["-\t\t\tassertEquals(\"message\", new Object[] {true, true}, new Object[] {true, false});", "+\t\t\tassertArrayEquals(\"message\", (new Object[] {true, true}), (new Object[] {true, false}));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff3ea7ca72eb882e407092af9f069a62", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "commitAfterChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic void filter(Filter filter) throws NoTestsRemainException", "signatureAfterChange": "  \tpublic void filter(Filter filter) throws NoTestsRemainException", "diff": ["-\t\tfor (Iterator<Method> iter= fTestMethods.iterator(); iter.hasNext();) {", "-\t\t\tMethod method= iter.next();", "+\t\tfor (Iterator<TestMethod> iter= fTestMethods.iterator(); iter.hasNext();) {", "+\t\t\tTestMethod method= iter.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff5797dc419ec359d3dabac8e3937c14", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "1d982e5310d57fe0ea4b63e05f20215ee3add1fe", "commitAfterChange": "24a5aad1f49b4decf946f1df701e354a18544132", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic void filter(Filter filter) throws NoTestsRemainException", "signatureAfterChange": "  \tpublic void filter(Filter filter) throws NoTestsRemainException", "diff": ["-\t\t\tif (!filter.shouldRun(methodDescription(method)))", "+\t\t\tif (!filter.shouldRun(describeChild(method)))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff790c695924f8ceec8a02de593700e5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/Stopwatch.java", "commitBeforeChange": "e1315c75a81d8131dd88dadbf5184892f0d9ce63", "commitAfterChange": "7ae75535efbb7a95ac62cfa1d0ccb626cc23e8c7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 16, "signatureBeforeChange": "      private long currentNanoTime()", "signatureAfterChange": "          public long nanoTime()", "diff": ["-    private long currentNanoTime() {", "-        return System.nanoTime();", "+        public long nanoTime() {", "+            return System.nanoTime();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff9666fdf41f275d468bf799f6363f75", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/tests/ParameterizedTestTest.java", "commitBeforeChange": "b0c0b79ae5e0dcfc1670cf950d31a14f1c9c630c", "commitAfterChange": "c73e37759ed5119900f1ddf3f50dac5bb3ae19be", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \t@Test \tpublic void meaningfulFailureWhenParametersNotPublic() throws Exception", "signatureAfterChange": "  \t@Test \tpublic void meaningfulFailureWhenParametersNotPublic() throws Exception", "diff": ["-\t\tassertEquals(1, result.getFailureCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff9ee5c3f31ce2003cff952d42162c9b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/RunNotifier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void fireTestStarted(final Description description) throws StoppedByUserException", "signatureAfterChange": "     public void fireTestStarted(final Description description) throws StoppedByUserException", "diff": ["-        if (fPleaseStop) {", "+        if (pleaseStop) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffc6c617a2aa59a72672ba915d8ec77c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/Assert.java", "commitBeforeChange": "fdc9cd5ea91f5ae1d7e5991abadd1b3f989626f7", "commitAfterChange": "31cbeb4f3c141295d0b0703ccff2b2ffbee780f4", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tprivate static void internalArrayEquals(String message, Object expecteds, \t\t\tObject actuals) throws ArrayComparisonFailure", "signatureAfterChange": " \tprivate static void internalArrayEquals(String message, Object expecteds, \t\t\tObject actuals) throws ArrayComparisonFailure", "diff": ["-\t\tnew ExactComparisonCriteria().internalArrayEquals(message, expecteds, actuals);", "+\t\tnew ExactComparisonCriteria().arrayEquals(message, expecteds, actuals);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffebff2a7018a776f3d70802f9b467d3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "56b1d5d4342c13151ae2d4b3f9aca146732cfb42", "commitAfterChange": "0815c4d619b177431e64a2485baa0f746f3e2886", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprotected List<BisectionRule> classRules()", "signatureAfterChange": " \tprotected List<TestRule> classRules()", "diff": ["-\tprotected List<BisectionRule> classRules() {", "-\t\tList<BisectionRule> results= new ArrayList<BisectionRule>();", "+\tprotected List<TestRule> classRules() {", "+\t\tList<TestRule> results= new ArrayList<TestRule>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fff674796581662f1cef63cc0c65e68e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/AssertionTest.java", "commitBeforeChange": "88f0fe3ced24506ddf9791f7a088163f4e7b1f20", "commitAfterChange": "3d7fee93ddc21a6e849c36d5ae58b37b3d189665", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 21, "signatureBeforeChange": " \t \t@Test public void arraysEqualWithMessage()", "signatureAfterChange": " \t \t@Test public void arraysEqualWithMessage()", "diff": ["-\t\tassertEquals(\"equal\", objects1, objects2);", "+\t\tassertArrayEquals(\"equal\", objects1, objects2);"]}]}