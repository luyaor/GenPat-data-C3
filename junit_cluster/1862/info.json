{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "147863c937b48833cd23b68cf1744c72", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3364d3e10b3e06d9bc9b5ef6455a5d39", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "ec1a5c3ffcc4b9b0dda6e9a683ea51103f55853e", "commitAfterChange": "e77e1c45e873aa9bc1e15db632180eb81d62d5e2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \t\t@Override \t\tpublic void evaluate() throws Throwable", "signatureAfterChange": "  \t\t@Override \t\tpublic void evaluate() throws Throwable", "diff": ["+\t\t\t\tif (fMatcherBuilder.expectsThrowable())", "+\t\t\t\t\tfailDueToMissingException();", "-\t\t\t\treturn;", "-\t\t\t\treturn;", "-\t\t\t\treturn;", "-\t\t\tif (fMatcherBuilder.expectsThrowable())", "-\t\t\t\tthrow new AssertionError(\"Expected test to throw \"", "-\t\t\t\t\t\t\t\t+ StringDescription.toString(fMatcherBuilder.build()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86227c587d22afcc36c611bbb819eb42", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/experimental/categories/CategoryFilterFactoryTest.java", "commitBeforeChange": "5edfb4447b609c178d63a3d991172861076d143b", "commitAfterChange": "34336085d5aba69c997f8e6b244531561afebcd4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void shouldThrowException() throws Exception", "signatureAfterChange": "      @Test     public void shouldThrowException() throws Exception", "diff": ["+        CategoryFilterFactory categoryFilterFactory = new CategoryFilterFactoryStub();", "+", "-        CategoryFilterFactory categoryFilterFactory = new CategoryFilterFactoryStub();", "-        Filter filter = categoryFilterFactory.createFilter(\"NonExistentFilter\");", "-", "-        assertThat(filter, is((Filter) null));", "-    }", "+        categoryFilterFactory.parseArgs(\"NonExistentFilter\");"]}]}