{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3109698e8e1e22552fb931ee7df57150", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41e107205a7a3b4314ace8a103ff7754", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "4e2455b1f142bdf8f07383082638718695e51224", "commitAfterChange": "c618504adee4bc91b3bd7e0ff06be6e1fa9d88cc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate Matcher<Throwable> hasMessage(Matcher<String> matcher)", "signatureAfterChange": "  \tprivate Matcher<Throwable> hasMessage(final Matcher<String> matcher)", "diff": ["-\tprivate Matcher<Throwable> hasMessage(Matcher<String> matcher) {", "-\t\treturn new FeatureMatcher<Throwable, String>(matcher,", "-\t\t\t\t\"exception with message\", \"getMessage()\") {", "+\tprivate Matcher<Throwable> hasMessage(final Matcher<String> matcher) {", "+\t\treturn new TypeSafeMatcher<Throwable>() {", "+\t\t\tpublic void describeTo(Description description) {", "+\t\t\t\tdescription.appendText(\"message \");", "+\t\t\t\tdescription.appendDescriptionOf(matcher);", "+\t\t\t}", "+\t\t", "-\t\t\tprotected String featureValueOf(Throwable actual) {", "-\t\t\t\treturn actual.getMessage();", "+\t\t\tpublic boolean matchesSafely(Throwable item) {", "+\t\t\t\treturn matcher.matches(item.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65b275bda9ed89d09aea50a38ccd8b6f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/results/ResultMatchers.java", "commitBeforeChange": "052fc095d5b4a8af643d0e4402a504716ad8eb03", "commitAfterChange": "231241782c199d39943f742d0abe57057b0b785c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic static Matcher<Result> failureIs(final Matcher<? super Throwable> failureMatcher)", "signatureAfterChange": " \tpublic static Matcher<PrintableResult> failureIs(final Matcher<? super Throwable> exceptionMatcher)", "diff": ["-\tpublic static Matcher<Result> failureIs(final Matcher<? super Throwable> failureMatcher) {", "-\t\treturn new TypeSafeMatcher<Result>() {", "+\tpublic static Matcher<PrintableResult> failureIs(final Matcher<? super Throwable> exceptionMatcher) {", "+\t\treturn new TypeSafeMatcher<PrintableResult>() {", "-\t\t\t\tfailureMatcher.describeTo(description);", "+\t\t\t\texceptionMatcher.describeTo(description);", "-\t\t\tpublic boolean matchesSafely(Result item) {", "+\t\t\tpublic boolean matchesSafely(PrintableResult item) {", "-\t\t\t\t\treturn failureMatcher.matches(f.getException());", "+\t\t\t\t\treturn exceptionMatcher.matches(f.getException());", "-\t\t\t}", "-\t\t};", "-\t}"]}]}