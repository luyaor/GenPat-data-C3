{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df143bce782f6d0dd95747258014f46d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00f34c64259eafa6e25123fe9dad2353", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "ff7c54f564eac489de1aef062ff0048c128e1c4f", "commitAfterChange": "b23ffd790b06f561290239ef3b7a5239ba755f10", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic <T> List<T> getAnnotatedFieldValues(Object test, \t\t\tClass<? extends Annotation> annotationClass, Class<T> valueClass)", "signatureAfterChange": "  \tpublic <T> List<T> getAnnotatedFieldValues(Object test, \t\t\tClass<? extends Annotation> annotationClass, Class<T> valueClass)", "diff": ["-\t\tboolean fieldsMustBeStatic= test == null;", "-\t\tfor (FrameworkField field : getAnnotatedFields(annotationClass)) {", "-\t\t\tassertFieldIsPublic(field);", "-\t\t\tif (fieldsMustBeStatic) {", "-\t\t\t\tassertFieldIsStatic(field);", "-\t\t\t}", "+\t\tfor (FrameworkField eachField : getAnnotatedFields(annotationClass)) {", "-\t\t\t\tObject fieldValue= field.get(test);", "+\t\t\t\tObject fieldValue= eachField.get(test);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8396e27eee30cf01f5c70c6cc857a61", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "58609e42697cf1ced355527f23553fb3c336734c", "commitAfterChange": "eef732f8e686d719c109a1ca66aed0dc8bba8808", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic <T> List<T> getAnnotatedFieldValues(Object test, \t\t\tClass<? extends Annotation> annotationClass, Class<T> valueClass)", "signatureAfterChange": "  \tpublic <T> List<T> getAnnotatedFieldValues(Object test, \t\t\tClass<? extends Annotation> annotationClass, Class<T> valueClass)", "diff": ["-\t\tfor (FrameworkField eachField : getAnnotatedFields(annotationClass)) {", "+\t\tfor (FrameworkField each : getAnnotatedFields(annotationClass)) {", "-\t\t\t\tObject fieldValue= eachField.get(test);", "+\t\t\t\tObject fieldValue= each.get(test);"]}]}