{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a9d6673ccc711216e503d750cd151aa6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08364dc341b563bd5bb6df552b2d1cec", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tprivate void assertNoDescendantsHaveCategoryAnnotations(Description description) throws InitializationError", "signatureAfterChange": "      private void assertNoDescendantsHaveCategoryAnnotations(Description description) throws InitializationError", "diff": ["-\t", "-\tprivate void assertNoDescendantsHaveCategoryAnnotations(Description description) throws InitializationError {\t\t\t", "-\t\tfor (Description each : description.getChildren()) {", "-\t\t\tif (each.getAnnotation(Category.class) != null)", "-\t\t\t\tthrow new InitializationError(\"Category annotations on Parameterized classes are not supported on individual methods.\");", "-\t\t\tassertNoDescendantsHaveCategoryAnnotations(each);", "-\t\t}", "-\t}", "+", "+    private void assertNoDescendantsHaveCategoryAnnotations(Description description) throws InitializationError {", "+        for (Description each : description.getChildren()) {", "+            if (each.getAnnotation(Category.class) != null) {", "+                throw new InitializationError(\"Category annotations on Parameterized classes are not supported on individual methods.\");", "+            }", "+            assertNoDescendantsHaveCategoryAnnotations(each);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeb8c0b465355025168c6d31dfbcf46b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate void assertNoCategorizedDescendentsOfUncategorizeableParents(Description description) throws InitializationError", "signatureAfterChange": "      private void assertNoCategorizedDescendentsOfUncategorizeableParents(Description description) throws InitializationError", "diff": ["-\tprivate void assertNoCategorizedDescendentsOfUncategorizeableParents(Description description) throws InitializationError {", "-\t\tif (!canHaveCategorizedChildren(description))", "-\t\t\tassertNoDescendantsHaveCategoryAnnotations(description);", "-\t\tfor (Description each : description.getChildren())", "-\t\t\tassertNoCategorizedDescendentsOfUncategorizeableParents(each);", "-\t}", "+    private void assertNoCategorizedDescendentsOfUncategorizeableParents(Description description) throws InitializationError {", "+        if (!canHaveCategorizedChildren(description)) {", "+            assertNoDescendantsHaveCategoryAnnotations(description);", "+        }", "+        for (Description each : description.getChildren()) {", "+            assertNoCategorizedDescendentsOfUncategorizeableParents(each);", "+        }", "+    }"]}]}