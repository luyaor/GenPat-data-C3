{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be9ebe5fac854aaeef1808b4421ba3a1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68a16374d3abbf1c48a085dae6d16e0b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxCore.java", "commitBeforeChange": "378e17964a4188bad9b3d966207a2f682072148e", "commitAfterChange": "451ca12156d5704809a1feff78a10a9451cd2023", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate List<Description> findLeaves(Description description)", "signatureAfterChange": "  \tprivate List<Description> findLeaves(Request request)", "diff": ["-", "-\tprivate List<Description> findLeaves(Description description) {", "-\t\tList<Description> results= new ArrayList<Description>();", "-\t\tfindLeaves(description, results);", "-\t\treturn results;", "-\t}", "+", "+\tprivate List<Description> findLeaves(Request request) {", "+\t\tList<Description> results= new ArrayList<Description>();", "+\t\tfindLeaves(request.getRunner().getDescription(), results);", "+\t\treturn results;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6c89fb6c7274a8aad4dc1562be577eb", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/runner/JUnitCore.java", "commitBeforeChange": "5cfc92d9ee355a316619563c6cb6e2834d130b01", "commitAfterChange": "b0c0b79ae5e0dcfc1670cf950d31a14f1c9c630c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic Result runMain(String... args)", "signatureAfterChange": " \tpublic Result runMain(String... args)", "diff": ["+\t\tList<Failure> missingClasses= new ArrayList<Failure>();", "+\t\t\t\tDescription description= Description.createSuiteDescription(each);", "+\t\t\t\tFailure failure= new Failure(description, e);", "+\t\t\t\tmissingClasses.add(failure);", "-\t\treturn run(classes.toArray(new Class[0]));", "+\t\tResult result= run(classes.toArray(new Class[0]));", "+\t\tfor (Failure each : missingClasses)", "+\t\t\tresult.getFailures().add(each);", "+\t\treturn result;"]}]}