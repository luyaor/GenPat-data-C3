{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3cdb4fda533d9a16ead5276e37c0c9a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f0cf39a6b2600c1c38f2782949d5eaa", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCommandLineParser.java", "commitBeforeChange": "b1cf4b5bc6ead8c3dfcbbb9ebe69be85f5e53cb8", "commitAfterChange": "56193048f411846a58c0e0377a5f1ccfecd3d2f9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r     public Request createRequest(Computer computer)", "signatureAfterChange": "\r     public Request createRequest(Computer computer)", "diff": ["-        return Request\r", "-                .classes(computer, classes.toArray(new Class<?>[0]))\r", "-                .filterWith(filter);\r", "+        if (parserErrors.isEmpty()) {\r", "+            return Request\r", "+                    .classes(computer, classes.toArray(new Class<?>[0]))\r", "+                    .filterWith(filter);\r", "+        } else {\r", "+            return new Request() {\r", "+                @Override\r", "+                public Runner getRunner() {\r", "+                    return new ErrorReportingRunner(\r", "+                            JUnitCommandLineParser.class,\r", "+                            new InitializationError(parserErrors));\r", "+                }\r", "+            };\r", "+        }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b048a2238380e57057f34e5931af61ba", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCommandLineParseResult.java", "commitBeforeChange": "4eecfb1eff9aa5304f6b30874a26734124ac902d", "commitAfterChange": "a75370887a71a09b3e5a12dec252513e80228e6b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r     public Request createRequest(Computer computer)", "signatureAfterChange": "\r     public Request createRequest(Computer computer)", "diff": ["-            return Request\r", "-                    .classes(computer, classes.toArray(new Class<?>[classes.size()]))\r", "-                    .filterWith(filter);\r", "+            Request request = Request.classes(\r", "+                    computer, classes.toArray(new Class<?>[classes.size()]));\r", "+            return applyFilterSpecs(request);\r", "-            return new Request() {\r", "-                @Override\r", "-                public Runner getRunner() {\r", "-                    return new ErrorReportingRunner(\r", "-                            JUnitCommandLineParseResult.class,\r", "-                            new InitializationError(parserErrors));\r", "-                }\r", "-            };\r", "+            return errorReport(new InitializationError(parserErrors));\r", "+        }\r", "+    }\r"]}]}