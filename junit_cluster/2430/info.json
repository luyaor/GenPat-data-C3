{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c4c8b359671a0c15291a993570b49c0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00d28a977551e6b4680629438b033239", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/runners/Enclosed.java", "commitBeforeChange": "0c458a8796cc5ffcda5286ee4a367c8e31ae7c88", "commitAfterChange": "ebb9d7f536a5b1be8364c6cb7367cac8c3849caa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprivate static Class<?>[] filterOutAbstractClasses(final Class<?>[] classes)", "signatureAfterChange": " \t \tprivate static Class<?>[] filterAbstractClasses(final Class<?>[] classes)", "diff": ["-\tprivate static Class<?>[] filterOutAbstractClasses(final Class<?>[] classes) {\t\t", "+\tprivate static Class<?>[] filterAbstractClasses(final Class<?>[] classes) {\t\t", "-\t\treturn filteredSet.toArray(new Class<?>[] { });", "+\t\treturn filteredSet.toArray(new Class<?>[filteredSet.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16e08df2b896a64078b3f00e1572d9b7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCommandLineParseResult.java", "commitBeforeChange": "d1b8c04e54f0b9e4807fa88a2ff36ad9ba177107", "commitAfterChange": "07447b5f98989e4456be8ee8acd01cfb3d20b8c0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r     public Request createRequest(Computer computer)", "signatureAfterChange": "\r     public Request createRequest(Computer computer)", "diff": ["-                    .classes(computer, classes.toArray(new Class<?>[0]))\r", "+                    .classes(computer, classes.toArray(new Class<?>[classes.size()]))\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8296b031695ec5c8f127b1ab260f1031", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/tests/JUnitCoreTest.java", "commitBeforeChange": "398bf2652efda067329f9fdedd13cd8e466c3be4", "commitAfterChange": "0495321897d3aeffb0a5e63660b2b2d842d6e5df", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate void runClass(String className, int returnCode) throws IOException, InterruptedException", "signatureAfterChange": "  \tprivate void runClass(String className, int returnCode) throws IOException, InterruptedException", "diff": ["-\t\tString classPath= getClass().getClassLoader().getResource(\".\").getFile() + \";\" + System.getProperty(\"java.class.path\");", "+\t\tString classPath= getClass().getClassLoader().getResource(\".\").getFile() + File.pathSeparator + System.getProperty(\"java.class.path\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf35ab39177c2849a2a86bc9a2133d54", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCommandLineParseResult.java", "commitBeforeChange": "d1b8c04e54f0b9e4807fa88a2ff36ad9ba177107", "commitAfterChange": "07447b5f98989e4456be8ee8acd01cfb3d20b8c0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r     private String[] copyArray(String[] args, int from, int to)", "signatureAfterChange": "\r \r     private String[] copyArray(String[] args, int from, int to)", "diff": ["-        return result.toArray(new String[]{});\r", "+        return result.toArray(new String[result.size()]);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e790156cb6d9e0c13a3ac2e27c20e0bf", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/runners/Enclosed.java", "commitBeforeChange": "229490bbf8731ec07fd7ce6d68f0e22b502b9caf", "commitAfterChange": "45aed05bb9e75bc8228af8ffbb44d39626d02dd5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprivate static Class<?>[] filterAbstractClasses(final Class<?>[] classes)", "signatureAfterChange": " \t \tprivate static Class<?>[] filterAbstractClasses(final Class<?>[] classes)", "diff": ["-\t\tfinal List<Class<?>> filteredList = new ArrayList<Class<?>>();", "+\t\tfinal List<Class<?>> filteredList= new ArrayList<Class<?>>(classes.length);"]}]}