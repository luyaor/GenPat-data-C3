{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1eed11abfcc20eb4fd3692e5c0617988", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3299a3336be5a670661a412b084b6246", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "163f503af57d91f60c6b57d4c9afa768b7c04df0", "commitAfterChange": "ede492496de0f3c0872216ac9c9b88a00fdef09e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private static <T> List<T> getAnnotatedMembers(Map<Class<?>, List<T>> map,             Class<? extends Annotation> type)", "signatureAfterChange": "      private static <T> List<T> getAnnotatedMembers(Map<Class<?>, List<T>> map,             Class<? extends Annotation> type, boolean canFill)", "diff": ["-            Class<? extends Annotation> type) {", "-        if (!map.containsKey(type)) {", "-            map.put(type, new CopyOnWriteArrayList<T>());", "+            Class<? extends Annotation> type, boolean canFill) {", "+        if (!map.containsKey(type) && canFill) {", "+            map.put(type, new ArrayList<T>());", "-        return map.get(type);", "+        List<T> members = map.get(type);", "+        return members == null ? Collections.<T>emptyList() : members;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df738c79ee120cc75693c703ba71f30a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate <T> List<T> getAnnotatedMembers(Map<Class<?>, List<T>> map, \t\t\tClass<? extends Annotation> type)", "signatureAfterChange": "      private <T> List<T> getAnnotatedMembers(Map<Class<?>, List<T>> map,             Class<? extends Annotation> type)", "diff": ["-\tprivate <T> List<T> getAnnotatedMembers(Map<Class<?>, List<T>> map,", "-\t\t\tClass<? extends Annotation> type) {", "-\t\tif (!map.containsKey(type))", "-\t\t\tmap.put(type, new ArrayList<T>());", "-\t\treturn map.get(type);", "-\t}", "+    private <T> List<T> getAnnotatedMembers(Map<Class<?>, List<T>> map,", "+            Class<? extends Annotation> type) {", "+        if (!map.containsKey(type)) {", "+            map.put(type, new ArrayList<T>());", "+        }", "+        return map.get(type);", "+    }"]}]}