{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0df0ed9ff01d76d1636aa5b670ec53d5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "203cc06d8a49fc443dd6c66289cb37c1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/WithParameterSupplier.java", "commitBeforeChange": "0030e51f286ed52ad4c2c44857c4a28525c83f93", "commitAfterChange": "3375d1c3f489fc5d2b5c6629c55867bbfe2a033f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 17, "signatureBeforeChange": "      private List<PotentialAssignment> potentialValues(Method method)             throws Exception", "signatureAfterChange": "          @Test     public void shouldAcceptSuppliersWithTestClassConstructor() throws Exception", "diff": ["-    private List<PotentialAssignment> potentialValues(Method method)", "-            throws Exception {", "-        return Assignments.allUnassigned(method,", "-                new TestClass(method.getDeclaringClass()))", "-                .potentialsForNextUnassigned();", "+    ", "+    @Test", "+    public void shouldAcceptSuppliersWithTestClassConstructor() throws Exception {", "+        new Theories(TestClassUsingSupplierWithTestClassConstructor.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "287cd27ae6fbd71fd10fb17dcffc401c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public Object[] getMethodArguments(boolean nullsOk)             throws CouldNotGenerateValueException", "signatureAfterChange": "      public Object[] getMethodArguments() throws CouldNotGenerateValueException", "diff": ["-    public Object[] getMethodArguments(boolean nullsOk)", "-            throws CouldNotGenerateValueException {", "-        return getActualValues(getConstructorParameterCount(),", "-                fAssigned.size(), nullsOk);", "+    public Object[] getMethodArguments() throws CouldNotGenerateValueException {", "+        return getActualValues(getConstructorParameterCount(), fAssigned.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58432bb74a2f99540970079c4541d10f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "387e8518435df62b557a59001b18109af88fb0dc", "commitAfterChange": "82118e728701b7b0f81a2dd4a69b2290de056b28", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public Assignments assignNext(PotentialAssignment source)", "signatureAfterChange": "      public Assignments assignNext(PotentialAssignment source)", "diff": ["-        List<PotentialAssignment> assigned = new ArrayList<PotentialAssignment>(", "-                this.assigned);", "-        assigned.add(source);", "+        List<PotentialAssignment> potentialAssignments = new ArrayList<PotentialAssignment>(assigned);", "+        potentialAssignments.add(source);", "-        return new Assignments(assigned, unassigned.subList(1,", "+        return new Assignments(potentialAssignments, unassigned.subList(1,"]}]}