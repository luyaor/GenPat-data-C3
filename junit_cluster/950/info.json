{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e0698b2b2a7e58b0872611867fc243a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39ffe933ae093a3ebb34e75b23992f87", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static MaxHistory forFolder(File file)", "signatureAfterChange": "     public static MaxHistory forFolder(File file)", "diff": ["-\t */", "-\tpublic static MaxHistory forFolder(File file) {", "-\t\tif (file.exists())", "-\t\t\ttry {", "-\t\t\t\treturn readHistory(file);", "-\t\t\t} catch (CouldNotReadCoreException e) {", "-\t\t\t\te.printStackTrace();", "-\t\t\t\tfile.delete();", "-\t\t\t}", "-\t\treturn new MaxHistory(file);", "-\t}", "+     */", "+    public static MaxHistory forFolder(File file) {", "+        if (file.exists()) {", "+            try {", "+                return readHistory(file);", "+            } catch (CouldNotReadCoreException e) {", "+                e.printStackTrace();", "+                file.delete();", "+            }", "+        }", "+        return new MaxHistory(file);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0f4b607a1f6a80cc4a83ee3673d5fb9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/framework/Assert.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  \tpublic static String format(String message, Object expected, Object actual)", "signatureAfterChange": "      public static String format(String message, Object expected, Object actual)", "diff": ["-\tpublic static String format(String message, Object expected, Object actual) {", "-\t\tString formatted= \"\";", "-\t\tif (message != null && message.length() > 0)", "-\t\t\tformatted= message+\" \";", "-\t\treturn formatted+\"expected:<\"+expected+\"> but was:<\"+actual+\">\";", "-\t}", "+", "+    public static String format(String message, Object expected, Object actual) {", "+        String formatted = \"\";", "+        if (message != null && message.length() > 0) {", "+            formatted = message + \" \";", "+        }", "+        return formatted + \"expected:<\" + expected + \"> but was:<\" + actual + \">\";", "+    }"]}]}