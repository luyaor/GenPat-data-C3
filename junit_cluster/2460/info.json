{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1261ebaf3a67911eec530b3f74960d11", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1976b3b2054c26b72e2dcfc7cbb69b1c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TemporaryFolder.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic File newFolder(String... folderNames) throws IOException", "signatureAfterChange": "     public File newFolder(String... folderNames) throws IOException", "diff": ["-\t */", "-\tpublic File newFolder(String... folderNames) throws IOException {", "-\t\tFile file= getRoot();", "-\t\tfor (int i = 0; i < folderNames.length; i++) {", "-\t\t\tString folderName = folderNames[i];", "-\t\t\tfile = new File(file, folderName);", "-\t\t\tif (!file.mkdir() && isLastElementInArray(i, folderNames))", "-\t\t\t\tthrow new IOException(", "-\t\t\t\t\t\t\"a folder with the name \\'\" + folderName + \"\\' already exists\");", "-\t\t}", "-\t\treturn file;", "-\t}", "+     */", "+    public File newFolder(String... folderNames) throws IOException {", "+        File file = getRoot();", "+        for (int i = 0; i < folderNames.length; i++) {", "+            String folderName = folderNames[i];", "+            file = new File(file, folderName);", "+            if (!file.mkdir() && isLastElementInArray(i, folderNames)) {", "+                throw new IOException(", "+                        \"a folder with the name \\'\" + folderName + \"\\' already exists\");", "+            }", "+        }", "+        return file;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "367423a80808a6573730e19d10ab38d1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TemporaryFolder.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void delete()", "signatureAfterChange": "     public void delete()", "diff": ["-\t */", "-\tpublic void delete() {", "-\t\tif (folder != null)", "-\t\t\trecursiveDelete(folder);", "-\t}", "+     */", "+    public void delete() {", "+        if (folder != null) {", "+            recursiveDelete(folder);", "+        }", "+    }"]}]}