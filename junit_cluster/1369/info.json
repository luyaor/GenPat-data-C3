{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "426edab52aa679d852f035253095bdbe", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2813793b2a429724b1a601aa14255017", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/matchers/JUnitMatchers.java", "commitBeforeChange": "872faeab15115635b3260001979ae036e64e29bf", "commitAfterChange": "a37fd9ac8b2afc54384fd32f470b54aa69dc620a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic static <T extends Throwable> Matcher<T> withStacktrace(Matcher<T> throwableMatcher)", "signatureAfterChange": " \tpublic static <T extends Exception> Matcher<T> isException(Matcher<T> exceptionMatcher)", "diff": ["-\tpublic static <T extends Throwable> Matcher<T> withStacktrace(Matcher<T> throwableMatcher) {", "-\t\treturn StacktracePrintingMatcher.withStacktrace(throwableMatcher);", "+\t */", "+\tpublic static <T extends Exception> Matcher<T> isException(Matcher<T> exceptionMatcher) {", "+\t\treturn StacktracePrintingMatcher.isException(exceptionMatcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6375fc2ab860ba991d6065d142dfe18c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/matchers/JUnitMatchers.java", "commitBeforeChange": "6e6a6e47f15e3de1fac90ecb9e3dbdb180f3a88b", "commitAfterChange": "f1be7f250156ecc0e6b6c9d7005abb53359fe2fe", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic static Matcher<Throwable> causedBy(final Matcher<? super Throwable> causeMatcher)", "signatureAfterChange": " \tpublic static <T extends Throwable> Matcher<T> withStacktrace(Matcher<T> throwableMatcher)", "diff": ["-\tpublic static Matcher<Throwable> causedBy(final Matcher<? super Throwable> causeMatcher) {", "-\t\treturn new CauseMatcher(causeMatcher);", "-\t}\t\t", "+\tpublic static <T extends Throwable> Matcher<T> withStacktrace(Matcher<T> throwableMatcher) {", "+\t\treturn StacktracePrintingMatcher.withStacktrace(throwableMatcher);", "+\t}"]}]}