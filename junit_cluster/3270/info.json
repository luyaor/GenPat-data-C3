{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e93f6576172cf56c642b2276b3ae45a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4817cb263143065b7ff540f584493d99", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "4041354a3a7629b74970e0624b7564736c20e1e3", "commitAfterChange": "d21d4edb6a5c55a3d8930dd26762a26cad67d827", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tprivate Statement withRules(FrameworkMethod method, Object target, \t\t\tStatement statement)", "signatureAfterChange": "  \tprivate Statement withRules(FrameworkMethod method, Object target, \t\t\tStatement statement)", "diff": ["-\t\tfor (MethodRule each : getTestClass().getAnnotatedFieldValues(target,", "-\t\t\t\tRule.class, MethodRule.class))", "+\t\tresult= withMethodRules(method, target, result);", "+\t\tresult= withTestRules(method, target, result);", "+\t\treturn result;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bec17b54e4c4cc7021ac4e702d16c722", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/framework/ComparisonFailure.java", "commitBeforeChange": "15a124877d38d668808ae250821aa3d4327f7758", "commitAfterChange": "0f8075aba2fc1bba1b0c145e28bb99b5da31928f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic String getMessage()", "signatureAfterChange": " \tpublic String getMessage()", "diff": ["-\t\tfor (; k >= 0 && j >= 0; k--,j--) {", "+\t\tfor (; k >= i && j >= i; k--,j--) {", "-\t\tif (j == -1 && k == -1) {", "+\t\tif (j < i && k < i) {", "-\t\t} ", "-\t\t// handle overlapping matches", "-\t\telse if (j+1 < i || k+1 < i) {", "-\t\t\texpected= \"...\"+fExpected.substring(i, j+2)+\"...\";", "-\t\t\tactual= \"...\"+fActual.substring(i, k+2)+\"...\";", "-\t\t} ", "-\t\t// otherwise replace common prefix and suffix", "-\t\telse {", "+\t\t} else {", "-\t\t\tformatted= message+\": \";", "-\t\t\t\t", "+\t\t\tformatted= message+\": \";\t"]}]}