{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d97c331c6ee57295335a112c6876d64f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e89014bc5e3774f61199410f2c70391", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/rules/RuleFieldValidator.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate void validateTestRuleOrMethodRule(FrameworkMember<?> member, \t\t\tList<Throwable> errors)", "signatureAfterChange": "      private void validateTestRuleOrMethodRule(FrameworkMember<?> member,             List<Throwable> errors)", "diff": ["-\tprivate void validateTestRuleOrMethodRule(FrameworkMember<?> member,", "-\t\t\tList<Throwable> errors) {", "-\t\tif (!isMethodRule(member) && !isTestRule(member))", "-\t\t\taddError(errors, member, fMethods ?", "-\t\t\t\t\t\"must return an implementation of MethodRule or TestRule.\" :", "-\t\t\t\t\t\"must implement MethodRule or TestRule.\");", "-\t}", "+    private void validateTestRuleOrMethodRule(FrameworkMember<?> member,", "+            List<Throwable> errors) {", "+        if (!isMethodRule(member) && !isTestRule(member)) {", "+            addError(errors, member, fMethods ?", "+                    \"must return an implementation of MethodRule or TestRule.\" :", "+                    \"must implement MethodRule or TestRule.\");", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aaa68a6f493e3ded649a6ca894793bd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/rules/RuleFieldValidator.java", "commitBeforeChange": "49d62f902ba7dba44b0b2b3b71e45004c667b2d5", "commitAfterChange": "faba199e389e3c977fc5573315790a5cde5f7611", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate void validateTestRuleOrMethodRule(FrameworkField field, \t\t\tList<Throwable> errors)", "signatureAfterChange": "  \tprivate void validateTestRuleOrMethodRule(FrameworkMember<?> member, \t\t\tList<Throwable> errors)", "diff": ["-\tprivate void validateTestRuleOrMethodRule(FrameworkField field,", "+\tprivate void validateTestRuleOrMethodRule(FrameworkMember<?> member,", "-\t\tif (!isMethodRule(field) && !isTestRule(field))", "-\t\t\taddError(errors, field, \"must implement MethodRule or TestRule.\");", "+\t\tif (!isMethodRule(member) && !isTestRule(member))", "+\t\t\taddError(errors, member, fMethods ?", "+\t\t\t\t\t\"must return an implementation of MethodRule or TestRule.\" :", "+\t\t\t\t\t\"must implement MethodRule or TestRule.\");"]}]}