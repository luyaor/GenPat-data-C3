{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f29f7f7397e8adf3b2efae514756ff7e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df7e7099b49ee761c3dbd390529e86fc", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/MultipleFailureException.java", "commitBeforeChange": "a49240ade1974b948b20cf2c45d9129f04122735", "commitAfterChange": "346bad2d3fb82c9a8378758b12979f7c9fe584e3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate static String buildMessage(List<Throwable> errors)", "signatureAfterChange": "  \t@Override \tpublic String getMessage()", "diff": ["+", "+\t@Override", "+\tpublic String getMessage() {", "+\t\tStringBuilder sb = new StringBuilder(", "+\t\t\t\tString.format(\"There were %d errors:\", fErrors.size()));", "+\t\tfor (Throwable e : fErrors) {", "+\t\t\tsb.append(String.format(\"\\n  %s(%s)\", e.getClass().getName(), e.getMessage()));", "+\t\t}", "+\t\treturn sb.toString();", "-", "-\tprivate static String buildMessage(List<Throwable> errors) {", "-\t\tStringBuilder sb = new StringBuilder(", "-\t\t    String.format(\"There were %d errors:\", errors.size()));", "-\t    for (Throwable e : errors) {", "-\t    \tsb.append(String.format(\"\\n  %s(%s)\", e.getClass().getName(), e.getMessage()));", "-\t\t}", "-\t    return sb.toString();", "-\t  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5820882298d3c4d1cad23d24b696165", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Suite.java", "commitBeforeChange": "09fcafc04e07b3481ef60159de2d6ae3464b98ac", "commitAfterChange": "b8008562db24f9189b90dd0e3864a381681d527f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate void validate() throws InitializationError", "signatureAfterChange": "  \t@Override \tprotected void collectInitializationErrors(List<Throwable> errors)", "diff": ["-", "-\tprivate void validate() throws InitializationError {", "-\t\t// TODO: (Dec 10, 2007 9:17:45 PM) DUP with other ParentRunners?", "-\t\t// TODO: (Dec 10, 2007 9:18:24 PM) sort methods", "-", "-\t\t", "-\t\tList<Throwable> errors= new ArrayList<Throwable>();", "-\t\tgetTestClass().validateStaticMethods(errors);", "-\t\tassertValid(errors);", "-\t}", "+", "+\t@Override", "+\tprotected void collectInitializationErrors(List<Throwable> errors) {", "+\t\tgetTestClass().validateStaticMethods(errors);"]}]}