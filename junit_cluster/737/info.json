{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af11cb543a766211475746ed2c0821c5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4df11b98b2c5db909aa5bf51c5cdda05", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "36beacd221a4837af2a6d684b3a4fb79775a5231", "commitAfterChange": "b9ce87013e5389857956d785d14fc4f3fc2490c3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t@Override \tprotected void collectInitializationErrors(List<Throwable> errors)", "signatureAfterChange": " \t\t\t\t@Override \t\t\t\tprotected void collectInitializationErrors( \t\t\t\t\t\tList<Throwable> errors)", "diff": [" "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e849a1f5cbe5a7940c5c902761ef5fc6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/internal/MethodSorterTest.java", "commitBeforeChange": "63eebcfe396b5302cd49a7dd006eecb9b929721a", "commitAfterChange": "0676ed6363ca9935d082d39f539b263b2c3b42f2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private List<String> getDeclaredFilteredMethods(Class<?> clazz, List<String> ofInterest)", "signatureAfterChange": "      private List<String> getDeclaredFilteredMethods(Class<?> clazz, List<String> ofInterest)", "diff": ["-    \tList<String> names= getDeclaredMethodNames(clazz);", "+    \t// the method under test.", "+\t\tMethod[] actualMethods = MethodSorter.getDeclaredMethods(clazz);", "+\t\t", "+\t\t// obtain just the names instead of the full methods.", "+\t\tList<String> names = new ArrayList<String>();", "+\t\tfor (Method m : actualMethods) {", "+\t\t\tnames.add(m.toString().replace(clazz.getName() + '.', \"\"));", "+\t\t}", "+\t\t", "+\t\t// filter to just the methods of interest"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff7ee44a468aa76efd26292ff2553781", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "36beacd221a4837af2a6d684b3a4fb79775a5231", "commitAfterChange": "b9ce87013e5389857956d785d14fc4f3fc2490c3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t\t\t\t@Override \t\t\t\tprotected void collectInitializationErrors( \t\t\t\t\t\tList<Throwable> errors)", "signatureAfterChange": "  \t@Override \tprotected void collectInitializationErrors(List<Throwable> errors)", "diff": ["+\t\tField[] fields= getTestClass().getJavaClass().getDeclaredFields();", "+\t\t", "+\t\t// TODO: (Nov 26, 2007 9:37:26 PM) cheating", "+\t\tfor (Field each : fields)", "+\t\t\tif (each.getAnnotation(DataPoint.class) != null && !Modifier.isStatic(each.getModifiers()))", "+\t\t\t\terrors.add(new Error(\"DataPoint field THREE must be static\"));", "-\t\t\t\t\t// TODO: (Oct 12, 2007 12:08:03 PM) DUP"]}]}