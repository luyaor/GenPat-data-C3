{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "476a0d11c25211b0040d0aff0b1f59a9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5268d1c6c94df8af978f8e099e89cc73", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/framework/TestSuite.java", "commitBeforeChange": "c7fe9c82850d54468bfbc900a418873d4d5107fe", "commitAfterChange": "c7874453182cde8e7b38cf3ce356d16d3d1dcde8", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tprivate void addTestMethod(Method m, List<String> names, Class<? extends TestCase> theClass)", "signatureAfterChange": "  \tprivate void addTestMethod(Method m, List<String> names, Class<? extends TestCase> theClass)", "diff": ["-\t\t\t\taddTest(warning(\"Test method isn't public: \"+m.getName()));", "+\t\t\t\taddTest(warning(\"Test method isn't public: \"+ m.getName() + \"(\" + theClass.getCanonicalName() + \")\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "944dee23a707f762052217795333f26b", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/framework/TestCase.java", "commitBeforeChange": "8010c8e15665894c10360ba19e594c75c811a3ff", "commitAfterChange": "d01c8286f3e876157877f2cbdb9d0afd8b07c579", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic String toString()", "signatureAfterChange": " \tpublic String toString()", "diff": ["-\t    return getDisplayName();", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f02e28e3015e737e22b02626bbe0ccd5", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "9a866f6c679298e64194fbfa5ef82262a792824d", "commitAfterChange": "9a629cbfbc732e6b3feb382bd10e872f84ddc510", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void printHeader(TestResult result)", "signatureAfterChange": " \tpublic void printHeader(TestResult result)", "diff": ["-\t\t\tgetWriter().println (\" (\" + result.runCount() + \" tests)\");", "+\t\t\tgetWriter().println (\" (\" + result.runCount() + \" test\" + (result.runCount() == 1 ? \"\": \"s\") + \")\");"]}]}