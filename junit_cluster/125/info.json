{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "091345c783bf8e0a22f6a4a16c457bc6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ba10faec8f19131f9bb1459e5f2e6a0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "540fa757f7a9d86eea9b38e9920eec9bcee3afca", "commitAfterChange": "b421d0ebd66701187c10c2b0c7f519dc435531ae", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "          private void addMultiPointFields(ParameterSignature sig, List<PotentialAssignment> list)", "signatureAfterChange": "          private void addMultiPointFields(ParameterSignature sig, List<PotentialAssignment> list)", "diff": ["-            addArrayValues(sig, field.getName(), list, getStaticFieldValue(field));", "+            Class<?> type = field.getType();", "+            addDataPointsValues(type, sig, field.getName(), list, getStaticFieldValue(field));", "-    }    ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a1dcaa49425f43de64407d28a69b71a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "540fa757f7a9d86eea9b38e9920eec9bcee3afca", "commitAfterChange": "b421d0ebd66701187c10c2b0c7f519dc435531ae", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void addMultiPointMethods(ParameterSignature sig, List<PotentialAssignment> list) throws Throwable", "signatureAfterChange": "      private void addMultiPointMethods(ParameterSignature sig, List<PotentialAssignment> list) throws Throwable", "diff": ["-            if (returnType.isArray() && sig.canPotentiallyAcceptType(returnType.getComponentType())) {", "+            if ((returnType.isArray() && sig.canPotentiallyAcceptType(returnType.getComponentType())) ||", "+                    Iterable.class.isAssignableFrom(returnType)) {", "-                    addArrayValues(sig, dataPointsMethod.getName(), list, dataPointsMethod.invokeExplosively(null));", "+                    addDataPointsValues(returnType, sig, dataPointsMethod.getName(), list, ", "+                            dataPointsMethod.invokeExplosively(null));"]}]}