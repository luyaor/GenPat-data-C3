{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "66ce92190603d8600a493e2518f59377", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f30910a85c27f396f61c0842e5be4de", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "56b1d5d4342c13151ae2d4b3f9aca146732cfb42", "commitAfterChange": "0815c4d619b177431e64a2485baa0f746f3e2886", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprivate void validateRuleField(Field field, List<Throwable> errors)", "signatureAfterChange": "  \tprivate void validateRuleField(Field field, List<Throwable> errors)", "diff": ["-\t\tif (!MethodRule.class.isAssignableFrom(field.getType()))", "+\t\tClass<?> type= field.getType();", "+\t\tif (!(MethodRule.class.isAssignableFrom(type) || ", "+\t\t\t\tTestRule.class.isAssignableFrom(type)))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97465b710290e1ca1f68a2adf219bb08", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "387e8518435df62b557a59001b18109af88fb0dc", "commitAfterChange": "82118e728701b7b0f81a2dd4a69b2290de056b28", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "      private Statement withMethodRules(FrameworkMethod method, List<TestRule> testRules,             Object target, Statement result)", "signatureAfterChange": "      private Statement withMethodRules(FrameworkMethod method, List<TestRule> testRules,             Object target, Statement result)", "diff": ["+        Statement withMethodRules = result;", "-            if (!testRules.contains(each)) {", "-                result = each.apply(result, method, target);", "+            if (!(each instanceof TestRule && testRules.contains(each))) {", "+                withMethodRules = each.apply(withMethodRules, method, target);", "-        return result;", "+        return withMethodRules;"]}]}