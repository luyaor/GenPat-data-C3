{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "70622bf84a1daf360a1589ab057b0e64", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "092adf05b078d62ea414f5719b0a1889", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprotected void connectTestBrowser(Test testSuite, boolean reload)", "signatureAfterChange": " \t \tprotected void aboutToStart(Test testSuite)", "diff": ["-\tprotected void connectTestBrowser(Test testSuite, boolean reload) {", "-\t\tif(fTestBrowser != null && fTestBrowser.isVisible()) {", "-\t\t\tif (reload)", "-\t\t\t\tfTestBrowser.showTestTree(testSuite);", "-\t\t\tfTestResult.addListener(fTestBrowser.getTestListener());", "+\tprotected void aboutToStart(Test testSuite) {", "+\t\tfor (Enumeration e= fTestRunViews.elements(); e.hasMoreElements(); ) {", "+\t\t\tTestRunView v= (TestRunView) e.nextElement();", "+\t\t\tv.aboutToStart(testSuite, fTestResult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c053b19dd8d8b04e9008b18c3d4e0e5f", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "1e752dcb0a967bcb47fae4b12fb8765e79571e69", "commitAfterChange": "bfc94ee739d62127c7477300b26127bd560765a1", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 69, "signatureBeforeChange": " \t \tprivate void doRunTest(final Test testSuite, final boolean reload)", "signatureAfterChange": " \t \tprivate void doRunTest(final Test testSuite)", "diff": ["-\tprivate void doRunTest(final Test testSuite, final boolean reload) {", "+\tprivate void doRunTest(final Test testSuite) {", "-\t\t\t\tfTestResult= createTestResult();", "-\t\t\t\tfTestResult.addListener(TestRunner.this);", "-\t\t\t\taboutToStart(testSuite);", "+\t\t// make sure that the test result is created before we start the", "+\t\t// test runner thread so that listeners can register for it.", "+\t\tfTestResult= createTestResult();", "+\t\tfTestResult.addListener(TestRunner.this);", "+\t\taboutToStart(testSuite);", "+"]}]}