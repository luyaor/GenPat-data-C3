{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "20691127b66162ae2fa45315e2b10792", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69ba1e6d682036a85a4b800ed2af8f4e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/junit3compatibility/ClassRequestTest.java", "commitBeforeChange": "a916d4133c7e394130d7953da427aae9917ab92c", "commitAfterChange": "d148bce8682505082a3cc634acbd36ac13a10c9a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \t@Test public void noSuiteMethodIfMethodPrivate()", "signatureAfterChange": "  \t@Test \tpublic void noSuiteMethodIfMethodPrivate()", "diff": ["-\t", "-\t@Test public void noSuiteMethodIfMethodPrivate() {", "-\t\tassertFalse(new ClassRequest(PrivateSuiteMethod.class).hasSuiteMethod());", "+", "+\t@Test", "+\tpublic void noSuiteMethodIfMethodPrivate() {", "+\t\tassertFalse(((ClassRequest) Request.aClass(PrivateSuiteMethod.class))", "+\t\t\t\t.hasSuiteMethod());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "910166972a5b2f754d4b97fa51e252a7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/TestMethod.java", "commitBeforeChange": "1fe4f2534d39f819eae3ae1a6e6169c651b0a8a8", "commitAfterChange": "f98130957df08de9cae93169298e04bf84388cae", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprotected void invoke(Object target) throws IllegalAccessException, \t\t\tInvocationTargetException", "signatureAfterChange": "  \tprotected void invoke(Object target) throws Throwable", "diff": ["-\tprotected void invoke(Object target) throws IllegalAccessException,", "-\t\t\tInvocationTargetException {", "-\t\tgetMethod().invoke(target);", "+\tprotected void invoke(Object target) throws Throwable {", "+\t\tExplosiveMethod.from(getMethod()).invoke(target);"]}]}