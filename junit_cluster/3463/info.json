{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12b618e0ac3d2cde37fde999cf86ef6f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6c0ad33520747febaab22956cf6b50f", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/runners/Parameterized.java", "commitBeforeChange": "b0c0b79ae5e0dcfc1670cf950d31a14f1c9c630c", "commitAfterChange": "c73e37759ed5119900f1ddf3f50dac5bb3ae19be", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t\t@SuppressWarnings(\"unchecked\") \t\tprivate Collection<Object[]> getParametersList() throws IllegalAccessException, InvocationTargetException, Exception", "signatureAfterChange": "  \t\tprivate Collection getParametersList() throws IllegalAccessException, InvocationTargetException, Exception", "diff": ["-\t\t@SuppressWarnings(\"unchecked\")", "-\t\tprivate Collection<Object[]> getParametersList() throws IllegalAccessException, InvocationTargetException, Exception {", "+\t\tprivate Collection getParametersList() throws IllegalAccessException, InvocationTargetException, Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce1fb625424ee3019710bc301da56434", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java", "commitBeforeChange": "5a3a326096cf65a58272ee89a5ef1c164cfd9d33", "commitAfterChange": "d0c70cac5b28861803d97d59ab93dfcb10d2c4d3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t\t@SuppressWarnings(\"unchecked\") \t\tprivate GuesserQueue createGuesserQueue(Assignments incomplete) \t\t\t\tthrows InstantiationException, IllegalAccessException", "signatureAfterChange": "  \t\tprivate GuesserQueue createGuesserQueue(Assignments incomplete) \t\t\t\tthrows InstantiationException, IllegalAccessException", "diff": ["-\t\t@SuppressWarnings(\"unchecked\")", "-\t\t\t\tqueue.add(new Guesser(nextUnassigned.getType()));", "+\t\t\t\tqueue.add(new Guesser<Object>(nextUnassigned.getType()));"]}]}