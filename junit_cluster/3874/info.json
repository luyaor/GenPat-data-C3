{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "876e96be1259a46a25d7ad5d49af3d29", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46502418dfb87c3ec93487420750cee0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "956f86fa4c406a923d5366b5906e3431e9d0717d", "commitAfterChange": "7b94e3de5c8eab7e25c8b3be0e822ae6d4175bf0", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprotected Statement withAfters(FrameworkMethod method, Object target, \t\t\tStatement statement)", "signatureAfterChange": " \tprotected Statement withAfters(FrameworkMethod method, Object target, \t\t\tStatement statement)", "diff": ["+\t\t// TODO (May 11, 2009 11:28:21 PM):", "+\t\t// withBefores/withAfters/withBeforeClass/withAfterClass is a lot of", "+\t\t// duplication.", "-\t\treturn new RunAfters(statement, afters, target);", "+\t\treturn afters.isEmpty() ? statement :", "+\t\t\tnew RunAfters(statement, afters, target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "709d9e31250e8ef00835003c6acab06b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "956f86fa4c406a923d5366b5906e3431e9d0717d", "commitAfterChange": "198df01b7b288e57e222a33c74f8ff98bf518d93", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprotected Statement withAfters(FrameworkMethod method, Object target, \t\t\tStatement statement)", "signatureAfterChange": " \tprotected Statement withAfters(FrameworkMethod method, Object target, \t\t\tStatement statement)", "diff": ["+\t\t// TODO (May 11, 2009 11:28:21 PM):", "+\t\t// withBefores/withAfters/withBeforeClass/withAfterClass is a lot of", "+\t\t// duplication.", "-\t\treturn new RunAfters(statement, afters, target);", "+\t\treturn afters.isEmpty() ? statement :", "+\t\t\tnew RunAfters(statement, afters, target);"]}]}