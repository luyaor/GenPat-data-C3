{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "15c97f7e7b4f1189417468b2cf175842", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fb15e2e399c03eb6a32eca282478a87", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/MethodRoadie.java", "commitBeforeChange": "45899955c670e52681c3a7655e1b110fa5570eb9", "commitAfterChange": "7a2a3811a762d7988dc153d59c4222a6ab96bf82", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate void runWithTimeout(long timeout)", "signatureAfterChange": "  \tprivate void runWithTimeout(final long timeout)", "diff": ["-\tprivate void runWithTimeout(long timeout) {", "-\t\ttry {", "-\t\t\trunBefores();", "-\t\t\tExecutorService service= Executors.newSingleThreadExecutor();", "-\t\t\tCallable<Object> callable= new Callable<Object>() {", "-\t\t\t\tpublic Object call() throws Exception {", "-\t\t\t\t\trunTestMethod();", "-\t\t\t\t\treturn null;", "-\t\t\t\t}", "-\t\t\t};", "-\t\t\tFuture<Object> result= service.submit(callable);", "-\t\t\tservice.shutdown();", "-\t\t\ttry {", "-\t\t\t\tboolean terminated= service.awaitTermination(timeout,", "-\t\t\t\t\t\tTimeUnit.MILLISECONDS);", "-\t\t\t\tif (!terminated)", "-\t\t\t\t\tservice.shutdownNow();", "-\t\t\t\tresult.get(0, TimeUnit.MILLISECONDS); // throws the exception if one occurred during the invocation", "-\t\t\t} catch (TimeoutException e) {", "-\t\t\t\taddFailure(new Exception(String.format(\"test timed out after %d milliseconds\", timeout)));", "-\t\t\t} catch (Exception e) {", "-\t\t\t\taddFailure(e);", "-\t\t\t}\t\t", "-\t\t} catch (FailedBefore e) {", "-\t\t} finally {", "-\t\t\trunAfters();", "-\t\t}", "+\tprivate void runWithTimeout(final long timeout) {", "+\t\trunBeforesThenTestThenAfters(new Runnable() {", "+\t\t", "+\t\t\tpublic void run() {", "+\t\t\t\tExecutorService service= Executors.newSingleThreadExecutor();", "+\t\t\t\tCallable<Object> callable= new Callable<Object>() {", "+\t\t\t\t\tpublic Object call() throws Exception {", "+\t\t\t\t\t\trunTestMethod();", "+\t\t\t\t\t\treturn null;", "+\t\t\t\t\t}", "+\t\t\t\t};", "+\t\t\t\tFuture<Object> result= service.submit(callable);", "+\t\t\t\tservice.shutdown();", "+\t\t\t\ttry {", "+\t\t\t\t\tboolean terminated= service.awaitTermination(timeout,", "+\t\t\t\t\t\t\tTimeUnit.MILLISECONDS);", "+\t\t\t\t\tif (!terminated)", "+\t\t\t\t\t\tservice.shutdownNow();", "+\t\t\t\t\tresult.get(0, TimeUnit.MILLISECONDS); // throws the exception if one occurred during the invocation", "+\t\t\t\t} catch (TimeoutException e) {", "+\t\t\t\t\taddFailure(new Exception(String.format(\"test timed out after %d milliseconds\", timeout)));", "+\t\t\t\t} catch (Exception e) {", "+\t\t\t\t\taddFailure(e);", "+\t\t\t\t}\t\t\t\t", "+\t\t\t}", "+\t\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95314dd90f37b8db168d23dd00345c05", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/MethodRoadie.java", "commitBeforeChange": "45899955c670e52681c3a7655e1b110fa5570eb9", "commitAfterChange": "7a2a3811a762d7988dc153d59c4222a6ab96bf82", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void runTest()", "signatureAfterChange": " \t \tpublic void runTest()", "diff": ["-\t\t// TODO (Jul 2, 2007 4:54:13 PM):  duplicated in timeout branch?", "-", "-\t\ttry {", "-\t\t\trunBefores();", "-\t\t\trunTestMethod();", "-\t\t} catch (FailedBefore e) {", "-\t\t} finally {", "-\t\t\trunAfters();", "-\t\t}", "+\t\trunBeforesThenTestThenAfters(new Runnable() {", "+\t\t\tpublic void run() {", "+\t\t\t\trunTestMethod();", "+\t\t\t}", "+\t\t});"]}]}