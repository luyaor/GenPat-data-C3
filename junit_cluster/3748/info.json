{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8efcf22467ea49092a43f8c9b8f39e4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b3008aa2a088dcec723c1e96e2af172", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "beb1f4a80f7fa20523d40535fb81c1b8a7a9e638", "commitAfterChange": "83a25d440d118b7d10779a884d35f31045949e27", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      private void runChildren(final RunNotifier notifier)", "signatureAfterChange": "      private void runChildren(final RunNotifier notifier)", "diff": ["-        for (final T each : getFilteredChildren()) {", "-            fScheduler.schedule(new Runnable() {", "-                public void run() {", "-                    ParentRunner.this.runChild(each, notifier);", "-                }", "-            });", "+        final RunnerScheduler scheduler = fScheduler;", "+        try {", "+            for (final T each : getFilteredChildren()) {", "+                scheduler.schedule(new Runnable() {", "+                    public void run() {", "+                        ParentRunner.this.runChild(each, notifier);", "+                    }", "+                });", "+            }", "+        } finally {", "+            scheduler.finished();", "-        fScheduler.finished();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fba5694059f69671af93f2a0733b0b01", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/TimeoutRuleTest.java", "commitBeforeChange": "0cc40391bc3ed026b1c436375c31a2614c883cdf", "commitAfterChange": "cf870c0bebf6ca9631594845cd558e1f4fb78b29", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "          @Test         public void run5() throws IOException", "signatureAfterChange": "          @Test         public void run5() throws IOException", "diff": ["-                FileChannel channel = new RandomAccessFile(tmp, \"rw\").getChannel();", "-                rnd.nextBytes(data);", "-                ByteBuffer buffer = ByteBuffer.wrap(data);", "-                // Interrupted thread closes channel and throws ClosedByInterruptException.", "-                channel.write(buffer);", "-                channel.close();", "+                RandomAccessFile randomAccessFile = new RandomAccessFile(tmp, \"rw\");", "+                try {", "+                    FileChannel channel = randomAccessFile.getChannel();", "+                    rnd.nextBytes(data);", "+                    ByteBuffer buffer = ByteBuffer.wrap(data);", "+                    // Interrupted thread closes channel and throws ClosedByInterruptException.", "+                    channel.write(buffer);", "+                } finally {", "+                    randomAccessFile.close();", "+                }"]}]}