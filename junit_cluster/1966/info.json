{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "934b56bb0c696239c8fd841844ab4375", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fdf63c0bcae6eb91865cf564bdf9da8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "d0c70cac5b28861803d97d59ab93dfcb10d2c4d3", "commitAfterChange": "7d8f2b7f6e190e8e59efacc10bc617b6646d131b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t\tprivate boolean hasCorrectCategoryAnnotation(Description description)", "signatureAfterChange": "  \t\tprivate boolean hasCorrectCategoryAnnotation(Description description)", "diff": ["-\t\t\tCategory annotation= description.getAnnotation(Category.class);", "-\t\t\tif (annotation == null)", "+\t\t\tList<Class<?>> categories= categories(description);", "+\t\t\tif (categories.isEmpty())", "-\t\t\tfor (Class<?> each : annotation.value()) {", "+\t\t\tfor (Class<?> each : categories)", "+\t\t\tfor (Class<?> each : categories)", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f00872426c467f191bc9507fc17ce34", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "95a8c63cb0a7867d58ee4a0777fec65bab39a1ec", "commitAfterChange": "c7895eb8695d79b14ff2f903fbb2fab3e52e4c43", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate static boolean canHaveCategorizedChildren(Description description)", "signatureAfterChange": " \tprivate static boolean canHaveCategorizedChildren(Description description)", "diff": ["+\t// parentage.", "-\t\tRunWith annotation= description.getAnnotation(RunWith.class);", "-\t\tif (annotation == null)", "-\t\t\treturn true;", "-\t\t// TODO: something more general", "-\t\treturn !annotation.value().equals(Parameterized.class);", "+\t\tfor (Description each : description.getChildren())", "+\t\t\tif (each.getTestClass() == null)", "+\t\t\t\treturn false;", "+\t\treturn true;"]}]}