{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3156967f6b48015bdc5853506a80d17", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebea884e20c8d2dbb76f245f342dace6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/running/methods/AnnotationTest.java", "commitBeforeChange": "a58514aec7e843339be24980e92aeeb759327ffb", "commitAfterChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \tpublic void testTestAndTeardownFailure() throws Exception", "signatureAfterChange": " \t \tpublic void testTestAndTeardownFailure() throws Exception", "diff": ["-\t\tassertEquals(Exception.class, runner.getFailures().get(0).getException().getClass());", "-\t\tassertEquals(Error.class, runner.getFailures().get(1).getException().getClass());", "+\t\t// TODO is order important?", "+\t\tassertEquals(Exception.class, runner.getFailures().get(1).getException().getClass());", "+\t\tassertEquals(Error.class, runner.getFailures().get(0).getException().getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1bf0dbd803ba9a4197292262e912e31", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/running/methods/AnnotationTest.java", "commitBeforeChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "commitAfterChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \tpublic void testTestAndTeardownFailure() throws Exception", "signatureAfterChange": " \t \tpublic void testTestAndTeardownFailure() throws Exception", "diff": ["-\t\t// TODO is order important?", "-\t\tassertEquals(Exception.class, runner.getFailures().get(1).getException().getClass());", "-\t\tassertEquals(Error.class, runner.getFailures().get(0).getException().getClass());", "+\t\tassertThat(runner.getFailures().toString(), both(containsString(\"hereAfter\")).and(containsString(\"inTest\")));"]}]}