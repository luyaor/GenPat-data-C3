{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86d271a7be36696049682f2fa7a9940f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fda759800ce10a731f91a00984faa63", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "49d62f902ba7dba44b0b2b3b71e45004c667b2d5", "commitAfterChange": "faba199e389e3c977fc5573315790a5cde5f7611", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tprotected List<TestRule> getTestRules(Object target)", "signatureAfterChange": " \tprotected List<TestRule> getTestRules(Object target)", "diff": ["-\t\treturn getTestClass().getAnnotatedFieldValues(target,", "+\t\tList<TestRule> result = getTestClass().getAnnotatedMethodValues(target,", "-\t}", "+\t\t\t", "+\t\tresult.addAll(getTestClass().getAnnotatedFieldValues(target,", "+\t\t\t\tRule.class, TestRule.class));", "+\t\treturn result;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fe7d60492c6bd946be9e40b298a9d51", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "26f9ebac45e0ff95c72d356b98b64eaf3de4f618", "commitAfterChange": "99b0ebc70e061d7620179f4e72e735e3944e54cd", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     protected List<org.junit.rules.MethodRule> rules(Object target)", "signatureAfterChange": "     protected List<MethodRule> rules(Object target)", "diff": ["-    protected List<org.junit.rules.MethodRule> rules(Object target) {", "-        return getTestClass().getAnnotatedFieldValues(target, Rule.class,", "-                org.junit.rules.MethodRule.class);", "+    protected List<MethodRule> rules(Object target) {", "+        List<MethodRule> rules = getTestClass().getAnnotatedMethodValues(target, ", "+                Rule.class, MethodRule.class);", "+        ", "+        rules.addAll(getTestClass().getAnnotatedFieldValues(target,", "+                Rule.class, MethodRule.class));", "+        ", "+        return rules;"]}]}