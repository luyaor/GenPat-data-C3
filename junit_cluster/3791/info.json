{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b31fb0b3a19e0dac5c4f98d65a042d6f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58432bb74a2f99540970079c4541d10f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "387e8518435df62b557a59001b18109af88fb0dc", "commitAfterChange": "82118e728701b7b0f81a2dd4a69b2290de056b28", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public Assignments assignNext(PotentialAssignment source)", "signatureAfterChange": "      public Assignments assignNext(PotentialAssignment source)", "diff": ["-        List<PotentialAssignment> assigned = new ArrayList<PotentialAssignment>(", "-                this.assigned);", "-        assigned.add(source);", "+        List<PotentialAssignment> potentialAssignments = new ArrayList<PotentialAssignment>(assigned);", "+        potentialAssignments.add(source);", "-        return new Assignments(assigned, unassigned.subList(1,", "+        return new Assignments(potentialAssignments, unassigned.subList(1,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1eec3b3a6f67908375ebcb39759565d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      private void runChildren(final RunNotifier notifier)", "signatureAfterChange": "      private void runChildren(final RunNotifier notifier)", "diff": ["-        final RunnerScheduler scheduler = fScheduler;", "+        final RunnerScheduler currentScheduler = scheduler;", "-                scheduler.schedule(new Runnable() {", "+                currentScheduler.schedule(new Runnable() {", "-            scheduler.finished();", "+            currentScheduler.finished();"]}]}