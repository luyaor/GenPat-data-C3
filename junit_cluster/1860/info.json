{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c530bdf1836508b78a3e3614ac3c5b06", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac0ee760addd62ff5f8f86544061dec3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/JUnit38ClassRunner.java", "commitBeforeChange": "c7fe9c82850d54468bfbc900a418873d4d5107fe", "commitAfterChange": "c7874453182cde8e7b38cf3ce356d16d3d1dcde8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t\t@SuppressWarnings(\"unchecked\") \t\tprivate Class<? extends Test> getEffectiveClass(Test test)", "signatureAfterChange": "  \t\tprivate Class<? extends Test> getEffectiveClass(Test test)", "diff": ["-\t\t@SuppressWarnings(\"unchecked\")", "-\t\t\t// TODO (Feb 23, 2009 11:45:54 PM): Think hard about this.", "-\t\t\tif (\"warning\".equals(getName(test)))", "-\t\t\t\ttry {", "-\t\t\t\t\treturn (Class<? extends Test>) Class.forName(fTest.toString());", "-\t\t\t\t} catch (ClassNotFoundException e) {", "-\t\t\t\t\treturn test.getClass();", "-\t\t\t\t}", "+//\t\t\t// TODO (Feb 23, 2009 11:45:54 PM): Think hard about this. Didn't think hard enough. Throwing away information doesn't help error recovery.", "+//\t\t\tif (\"warning\".equals(getName(test)))", "+//\t\t\t\ttry {", "+//\t\t\t\t\treturn (Class<? extends Test>) Class.forName(fTest.toString());", "+//\t\t\t\t} catch (ClassNotFoundException e) {", "+//\t\t\t\t\treturn test.getClass();", "+//\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef67857c2d5ce4482bf6c0053af1e35c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/TestClass.java", "commitBeforeChange": "a14fc5f174c08a9ff6e97b266ae3d84efcbd84e6", "commitAfterChange": "dc5f4661240f98469f498e6ab69a1512c8b39d0c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public TestClass(Class<?> klass)", "signatureAfterChange": "     public TestClass(Class<?> klass)", "diff": ["+        scanAnnotatedMembers(methodsForAnnotations, fieldsForAnnotations);", "+", "+        fMethodsForAnnotations = makeDeeplyUnmodifiable(methodsForAnnotations);", "+        fFieldsForAnnotations = makeDeeplyUnmodifiable(fieldsForAnnotations);", "+    }", "-", "-        fMethodsForAnnotations = makeDeeplyUnmodifiable(methodsForAnnotations);", "-        fFieldsForAnnotations = makeDeeplyUnmodifiable(fieldsForAnnotations);"]}]}