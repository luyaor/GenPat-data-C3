{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9f27c84a9b0c0ed3243b2b1ce8daf97", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5265741c60be9513c73ab9e0af5fa83d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "commitAfterChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprotected void validate() throws InitializationError", "signatureAfterChange": "  \tprivate void validate() throws InitializationError", "diff": ["-\t", "-\tprotected void validate() throws InitializationError {", "-\t\tMethodValidator methodValidator= new MethodValidator(fTestClass);", "-\t\tmethodValidator.validateMethodsForDefaultRunner();", "-\t\tmethodValidator.assertValid();", "+", "+\tprivate void validate() throws InitializationError {", "+\t\tList<Throwable> errors= new ArrayList<Throwable>();", "+\t\tcollectInitializationErrors(errors);", "+\t\tif (!errors.isEmpty())", "+\t\t\tthrow new InitializationError(errors);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fdf63c0bcae6eb91865cf564bdf9da8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "d0c70cac5b28861803d97d59ab93dfcb10d2c4d3", "commitAfterChange": "7d8f2b7f6e190e8e59efacc10bc617b6646d131b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t\tprivate boolean hasCorrectCategoryAnnotation(Description description)", "signatureAfterChange": "  \t\tprivate boolean hasCorrectCategoryAnnotation(Description description)", "diff": ["-\t\t\tCategory annotation= description.getAnnotation(Category.class);", "-\t\t\tif (annotation == null)", "+\t\t\tList<Class<?>> categories= categories(description);", "+\t\t\tif (categories.isEmpty())", "-\t\t\tfor (Class<?> each : annotation.value()) {", "+\t\t\tfor (Class<?> each : categories)", "+\t\t\tfor (Class<?> each : categories)", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c99a8bbdb37c46d78f6e97af96b174be", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/Stopwatch.java", "commitBeforeChange": "e1315c75a81d8131dd88dadbf5184892f0d9ce63", "commitAfterChange": "7ae75535efbb7a95ac62cfa1d0ccb626cc23e8c7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static long toSeconds(long nanos)", "signatureAfterChange": "      public final Statement apply(Statement base, Description description)", "diff": ["-     */", "-    public static long toSeconds(long nanos) {", "-        return TimeUnit.NANOSECONDS.toSeconds(nanos);", "-    }", "+    public final Statement apply(Statement base, Description description) {", "+        return new InternalWatcher().apply(base, description);"]}]}