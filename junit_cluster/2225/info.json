{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57fd0c6c8a59908aa015bc9dbbe801fd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "042187a38384615ffd018f63b48e1cec", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "ffd5f087e9b0ffaf146c91323adcf0ffdf469b0f", "commitAfterChange": "255f47231f5e49373d4b331e3a946e0005f1e0f4", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  \tprotected JFrame createUI(String suiteName)", "signatureAfterChange": "  \tprotected JFrame createUI(String suiteName)", "diff": ["-\t\tJScrollPane tracePane= new JScrollPane(fFailureView.getComponent(), JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);", "+\t\tJScrollPane tracePane= new JScrollPane(fFailureView.getComponent(), ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06d3f295134b61bcff7f780bbb0d7281", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/model/EachTestNotifier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void addFailure(Throwable targetException)", "signatureAfterChange": "      public void addFailure(Throwable targetException)", "diff": ["-            fNotifier", "-                    .fireTestFailure(new Failure(fDescription, targetException));", "+            notifier.fireTestFailure(new Failure(description, targetException));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1116ddaa0fb558ef9f73166231c19c59", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/FailureRunView.java", "commitBeforeChange": "ffd5f087e9b0ffaf146c91323adcf0ffdf469b0f", "commitAfterChange": "255f47231f5e49373d4b331e3a946e0005f1e0f4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic void addTab(JTabbedPane pane)", "signatureAfterChange": " \t \tpublic void addTab(JTabbedPane pane)", "diff": ["-\t\tJScrollPane scrollPane= new JScrollPane(fFailureList, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);", "+\t\tJScrollPane scrollPane= new JScrollPane(fFailureList, ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23fe816583286f3d421432804556883f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java", "commitBeforeChange": "0e1c92693e70e52ad9af23ee6180500c74fc9c95", "commitAfterChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Test \tpublic void ignoreExceptionsFromDataPointMethods()", "signatureAfterChange": "  \t@Test \tpublic void ignoreExceptionsFromDataPointMethods()", "diff": ["-\t\tassertThat(failures(HasUglyDataPointMethod.class), empty());", "+\t\tassertThat(testResult(HasUglyDataPointMethod.class), isSuccessful());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e9ca52abd8295b3e22c6708665d590b", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "69a8dad63d43eb1071c5823f345f290edd5a3050", "commitAfterChange": "0807a8cd01b6d63d54f9a3580540fa35b7fb292e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void testFailed(int status, Test test, Throwable t)", "signatureAfterChange": "  \tpublic void testFailed(int status, Test test, Throwable t)", "diff": ["-\t\t\tcase TestRunListener.STATUS_ERROR: writer().print(\"E\"); break;", "-\t\t\tcase TestRunListener.STATUS_FAILURE: writer().print(\"F\"); break;", "+\t\t\tcase TestRunListener.STATUS_ERROR: getWriter().print(\"E\"); break;", "+\t\t\tcase TestRunListener.STATUS_FAILURE: getWriter().print(\"F\"); break;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6db3933a8ab3761f42e4608e222de3da", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "69a8dad63d43eb1071c5823f345f290edd5a3050", "commitAfterChange": "0807a8cd01b6d63d54f9a3580540fa35b7fb292e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic void testStarted(String testName)", "signatureAfterChange": " \t \tpublic void testStarted(String testName)", "diff": ["-\t\twriter().print(\".\");", "+\t\tgetWriter().print(\".\");", "-\t\t\twriter().println();", "+\t\t\tgetWriter().println();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98782f366266e908311ab7d6925349ae", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/runner/WithDataPointMethod.java", "commitBeforeChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "commitAfterChange": "59b1e2926cdebfd257c6c091ee2bd478d8aa04d2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t@Test \tpublic void pickUpDataPointMethods()", "signatureAfterChange": "  \t@Test \tpublic void pickUpDataPointMethods()", "diff": ["-\t\tassertThat(failures(HasDataPointMethod.class), empty());", "+\t\tassertThat(testResult(HasDataPointMethod.class), isSuccessful());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a46293df3f79739604e208fde7649bff", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/model/EachTestNotifier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void addFailedAssumption(AssumptionViolatedException e)", "signatureAfterChange": "      public void addFailedAssumption(AssumptionViolatedException e)", "diff": ["-        fNotifier.fireTestAssumptionFailed(new Failure(fDescription, e));", "+        notifier.fireTestAssumptionFailed(new Failure(description, e));"]}]}