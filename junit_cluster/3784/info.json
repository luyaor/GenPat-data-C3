{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b0b244ffddcf797f2d07ca0aacbcb190", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8ce8c1d238e3147072b7e7222ec9405", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/TheoryMethod.java", "commitBeforeChange": "85c570ea92f0ee7d17573966dd7f94f4c3b0b61a", "commitAfterChange": "79d696c81cb996e6a199b062c0ae1f53408d5ebd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Override \tpublic void invoke(Object test) throws IllegalArgumentException, \t\t\tIllegalAccessException, InvocationTargetException", "signatureAfterChange": "  \t@Override \tpublic void invoke(Roadie context) \t\t\tthrows IllegalArgumentException, IllegalAccessException, \t\t\tInvocationTargetException", "diff": ["-\tpublic void invoke(Object test) throws IllegalArgumentException,", "-\t\t\tIllegalAccessException, InvocationTargetException {", "-\t\tint runCount= 0;", "+", "+\t@Override", "+\tpublic void invoke(Roadie context)", "+\t\t\tthrows IllegalArgumentException, IllegalAccessException,", "+\t\t\tInvocationTargetException {", "-\t\t\trunCount+= runWithDiscoveredParameterValues(test,", "-\t\t\t\t\tnew PotentialMethodValues(), ParameterSignature", "-\t\t\t\t\t\t\t.signatures(fMethod));", "+\t\t\trunWithDiscoveredParameterValues(context, new PotentialMethodValues(),", "+\t\t\t\t\tParameterSignature.signatures(fMethod));", "-\t\tif (runCount == 0)", "+\t\tif (successes == 0)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcd8655754b3d5bf7d0c53911eb781be", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/TheoryMethod.java", "commitBeforeChange": "149ecd4dcd99697710aa350e9cd3b3bcac877125", "commitAfterChange": "787ed4e5bc2b68e8b5cdb6190ff1fc053f1a5b13", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tpublic void invoke(Roadie context) \t\t\tthrows IllegalArgumentException, IllegalAccessException, \t\t\tInvocationTargetException", "signatureAfterChange": "  \t@Override \tpublic void invoke(Roadie context) throws IllegalArgumentException, \t\t\tIllegalAccessException, InvocationTargetException", "diff": ["-\tpublic void invoke(Roadie context)", "-\t\t\tthrows IllegalArgumentException, IllegalAccessException,", "-\t\t\tInvocationTargetException {", "+\tpublic void invoke(Roadie context) throws IllegalArgumentException,", "+\t\t\tIllegalAccessException, InvocationTargetException {", "-\t\t\trunWithDiscoveredParameterValues(context, new PotentialMethodValues(),", "-\t\t\t\t\tParameterSignature.signatures(fMethod));", "+\t\t\trunWithAssignment(Assignments.allUnassigned(context,", "+\t\t\t\t\tgetMethod()));", "+"]}]}