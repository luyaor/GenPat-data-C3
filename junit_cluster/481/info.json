{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e3d9ef7431b39147ac2624f17fae842", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "709783e5612d232d0b5cdc40e5363e92", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t\t\t \t\tpublic Component getListCellRendererComponent( \t\t\tJList list, Object value, int modelIndex,  \t\t\tboolean isSelected, boolean cellHasFocus)", "signatureAfterChange": " \t\t\t \tprotected FailureDetailView createFailureDetailView()", "diff": ["-\t\t\t", "-\t\tpublic Component getListCellRendererComponent(", "-\t\t\tJList list, Object value, int modelIndex, ", "-\t\t\tboolean isSelected, boolean cellHasFocus) {", "-", "-\t\t\tTestFailure failure= (TestFailure)value;", "-\t\t\tString text= failure.failedTest().toString();", "-\t\t\tString msg= failure.thrownException().getMessage();", "-\t\t\tif (msg != null) ", "-\t\t\t\ttext+= \":\" + BaseTestRunner.truncate(msg); ", "- ", "-\t\t\tif (failure.thrownException() instanceof AssertionFailedError) { ", "-\t\t\t\tif (fFailureIcon != null)", "-\t    \t\t\t\tsetIcon(fFailureIcon);", "-\t\t\t}", "-\t    \telse {", "-\t    \t\tif (fErrorIcon != null)", "-\t    \t\t\tsetIcon(fErrorIcon);", "-\t    \t}", "-\t    \treturn super.getListCellRendererComponent(list, text, modelIndex, isSelected, cellHasFocus);", "-\t\t}", "+\t\t\t", "+\tprotected FailureDetailView createFailureDetailView() {", "+\t\tString className= BaseTestRunner.getPreference(FAILUREDETAILVIEW_KEY);", "+\t\tif (className != null) {\t\t\t", "+\t\t\tClass viewClass= null;", "+\t\t\ttry {", "+\t\t\t\tviewClass= Class.forName(className);", "+\t\t\t\treturn (FailureDetailView)viewClass.newInstance();", "+\t\t\t} catch(Exception e) {", "+\t\t\t\tJOptionPane.showMessageDialog(fFrame, \"Could not create Failure DetailView - using default view\");", "+\t\t}", "+\t\treturn new DefaultFailureDetailView();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95a1491d272cb057b8cdca571fa001d3", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/AllTests.java", "commitBeforeChange": "cd3f5f4c6a28dd1d31482c4c42de85a11ecae31a", "commitAfterChange": "9af2e559040ea3bc3db5c5d39b2c4a27098d5a76", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic static Test suite()", "signatureAfterChange": " \t \tpublic static Test suite()", "diff": ["-\tpublic static Test suite() { // Collect tests manually because we have to test class collection code", "+\tpublic static Test suite() {", "-\t\tsuite.addTestSuite(ExtensionTest.class);", "-\t\tsuite.addTestSuite(TestCaseTest.class);", "-\t\tsuite.addTest(SuiteTest.suite()); // Tests suite building, so can't use automatic test extraction ", "-\t\tsuite.addTestSuite(ExceptionTestCaseTest.class);", "-\t\tsuite.addTestSuite(TestListenerTest.class);", "-\t\tsuite.addTestSuite(ActiveTestTest.class);", "-\t\tsuite.addTestSuite(AssertTest.class);", "-\t\tsuite.addTestSuite(StackFilterTest.class);", "-\t\tsuite.addTestSuite(SorterTest.class);", "-\t\tsuite.addTestSuite(RepeatedTestTest.class);", "-\t\tsuite.addTestSuite(TestImplementorTest.class);", "-\t\tsuite.addTestSuite(SimpleTestCollectorTest.class);", "-\t\tif (!BaseTestRunner.inVAJava()) {", "-\t\t\tsuite.addTestSuite(TextRunnerTest.class);", "-\t\t\tif (!isJDK11())", "-\t\t\t\tsuite.addTest(new TestSuite(TestCaseClassLoaderTest.class));", "-\t\t}", "+\t\tsuite.addTest(junit.tests.framework.AllTests.suite());", "+\t\tsuite.addTest(junit.tests.runner.AllTests.suite());", "+\t\tsuite.addTest(junit.tests.extensions.AllTests.suite());", "-\t}"]}]}