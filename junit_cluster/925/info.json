{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "26c8d7315fc6117f2769deda30b1ea26", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b360f6083ff22ff2e35f74b868946b5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/core/JUnitCoreReturnsCorrectExitCodeTest.java", "commitBeforeChange": "45eaab756edc8913b1c74e87ef3b519da6afa5fc", "commitAfterChange": "917a88fad06ce108a596a8fdb4607b1a2fbb3f3e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate void runClass(String className, int returnCode)", "signatureAfterChange": "  \tprivate void runClass(final String className, int returnCode)", "diff": ["-\tprivate void runClass(String className, int returnCode) {", "-\t\tTestSystem system= new TestSystem();", "-\t\tJUnitCore.runMainAndExit(system, className); ", "-\t\tassertEquals(returnCode, system.fCode);", "+\tprivate void runClass(final String className, int returnCode) {", "+\t\tInteger exitValue= new MainRunner().runWithCheckForSystemExit(new Runnable() {", "+\t\t\tpublic void run() {", "+\t\t\t\tJUnitCore.main(className); ", "+\t\t\t}", "+\t\t});", "+\t\tassertEquals(Integer.valueOf(returnCode), exitValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d90885e88daeaf5e6393d6e777cd1999", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/Parameterized.java", "commitBeforeChange": "db89759c22060a89f6750e2e92ce93072eace561", "commitAfterChange": "521fdb5aae536bd5055f6d0e4f09c5a7bdb5799f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic Parameterized(final Class<?> klass) throws Exception", "signatureAfterChange": " \t \t@Override \tpublic void run(final RunNotifier notifier)", "diff": ["-\tpublic Parameterized(final Class<?> klass) throws Exception {", "-\t\tsuper(klass, new RunAllParameterMethods(klass));", "+\tpublic void run(final RunNotifier notifier) {", "+\t\tnew ClassRoadie(notifier, fTestClass, getDescription(), new Runnable() {", "+\t\t\tpublic void run() {", "+\t\t\t\trunChildren(notifier);", "+\t\t\t}", "+\t\t}).runProtected();", "+\t}"]}]}