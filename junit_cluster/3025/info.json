{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a66b63d3ee4ef85a559e6509359f85f3", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85b63ed0992750d61fab7a6d574f1afa", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "bbbb8571f1a3cdcb9af977867c7a16de3a1f5a76", "commitAfterChange": "d96a05f8d33ed781c701c58dd285bf6464112719", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public FailOnTimeout(Statement originalStatement, long timeout, TimeUnit unit)", "signatureAfterChange": "      private FailOnTimeout(Builder builder, Statement statement)", "diff": ["-    public FailOnTimeout(Statement originalStatement, long timeout, TimeUnit unit) {", "-        this(originalStatement, timeout, unit, false);", "+    private FailOnTimeout(Builder builder, Statement statement) {", "+        originalStatement = statement;", "+        timeout = builder.timeout;", "+        timeUnit = builder.unit;", "+        lookForStuckThread = builder.lookForStuckThread;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6d89e24c2c69de8f717445f96bd304c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/parallel/ParallelMethodTest.java", "commitBeforeChange": "b9e14f64327e052e161c451bc2eaa854c9adcea4", "commitAfterChange": "c236a9e019a814b3542dcfe3a3a61b036c14d252", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \t@Test public void testsRunInParallel()", "signatureAfterChange": " \t \t@Test public void testsRunInParallel()", "diff": ["-\t\tlong start= System.currentTimeMillis();", "-\t\tlong end= System.currentTimeMillis();", "-\t\tassertThat(end - start, betweenInclusive(1000, 1900));", "-\t}", "+\t\tassertNotNull(fOne);", "+\t\tassertNotNull(fTwo);", "+\t\tassertThat(fOne, is(not(fTwo)));", "+\t\tfOne= null;", "+\t\tfTwo= null;"]}]}