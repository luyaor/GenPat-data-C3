{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c6b7d06a515dd77f38cd79efd7446b0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "557f1665d3f4ee86efc8aa3f195344e4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/links/WithTimeout.java", "commitBeforeChange": "a4c68872a91681139d404825c2bb04bd5ba804dd", "commitAfterChange": "f0ef837a40922ac08c608661385abf71732975d3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic void run(final EachTestNotifier context) throws Throwable", "signatureAfterChange": "  \t@Override \tpublic void run(final FailureListener listener)", "diff": ["-\tpublic void run(final EachTestNotifier context) throws Throwable {", "+\tpublic void run(final FailureListener listener) {", "-\t\t\t\ttry {", "-\t\t\t\t\tfNext.run(context);", "-\t\t\t\t} catch (Exception e) {", "-\t\t\t\t\tthrow e;", "-\t\t\t\t} catch (Error e) {", "-\t\t\t\t\tthrow e;", "-\t\t\t\t} catch (Throwable e) {", "-\t\t\t\t\t// TODO: (Oct 5, 2007 11:27:11 AM) Now what?  Is there a useful thing to do with this?", "-\t\t\t\t}", "+\t\t\t\tfNext.run(listener);", "-\t\t\tthrow new Exception(String.format(", "-\t\t\t\t\t\"test timed out after %d milliseconds\", fTimeout));", "+\t\t\tlistener.addFailure(new Exception(String.format(", "+\t\t\t\t\t\"test timed out after %d milliseconds\", fTimeout)));", "-\t\t\tthrow e.getCause();", "+\t\t\tlistener.addFailure(e.getCause());", "+\t\t} catch (InterruptedException e) {", "+\t\t\tlistener.addFailure(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "634651054e577bf805cd3616a3429bde", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/links/WithTimeout.java", "commitBeforeChange": "0e1c92693e70e52ad9af23ee6180500c74fc9c95", "commitAfterChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic void run(final FailureListener listener)", "signatureAfterChange": "  \t@Override \tpublic void run() throws Throwable", "diff": ["-\tpublic void run(final FailureListener listener) {", "+\tpublic void run() throws Throwable {", "-\t\t\t\tfNext.run(listener);", "+\t\t\t\t// TODO: (Oct 12, 2007 10:15:08 AM) Use MultipleFailureException", "+\t\t\t\t// TODO: (Oct 12, 2007 10:15:19 AM) Use MultipleFailureException in construction", "+\t\t\t\t// TODO: (Oct 12, 2007 10:15:29 AM) Convert to Statement?", "+", "+", "+", "+\t\t\t\ttry {", "+\t\t\t\t\tfNext.run();", "+\t\t\t\t} catch (Exception e) {", "+\t\t\t\t\tthrow e;", "+\t\t\t\t} catch (Error e) {", "+\t\t\t\t\tthrow e;", "+\t\t\t\t} catch (Throwable e) {", "+\t\t\t\t\t// TODO: (Oct 5, 2007 11:27:11 AM) Now what?  Is there a useful thing to do with this?", "+\t\t\t\t}", "-\t\t\tlistener.addFailure(new Exception(String.format(", "-\t\t\t\t\t\"test timed out after %d milliseconds\", fTimeout)));", "+\t\t\tthrow new Exception(String.format(", "+\t\t\t\t\t\"test timed out after %d milliseconds\", fTimeout));", "-\t\t\tlistener.addFailure(e.getCause());", "-\t\t} catch (InterruptedException e) {", "-\t\t\tlistener.addFailure(e);", "+\t\t\tthrow e.getCause();"]}]}