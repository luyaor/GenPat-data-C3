{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "14f7f9732ca161a92f8916f88d7662c3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d827edb18cf005328835c3ecb76e401", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/requests/ClassRequest.java", "commitBeforeChange": "a916d4133c7e394130d7953da427aae9917ab92c", "commitAfterChange": "d148bce8682505082a3cc634acbd36ac13a10c9a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic Runner buildRunner(Class<? extends Runner> runnerClass)", "signatureAfterChange": "  \tpublic Runner buildRunner(Class<? extends Runner> runnerClass)", "diff": ["-\t\t\treturn runnerClass.getConstructor(Class.class).newInstance(new Object[] { fTestClass });", "-\t\t} catch (NoSuchMethodException e) {", "-\t\t\tString simpleName= runnerClass.getSimpleName();", "-\t\t\tInitializationError error= new InitializationError(String.format(", "-\t\t\t\t\tCONSTRUCTOR_ERROR_FORMAT, simpleName, simpleName));", "-\t\t\treturn new ErrorReportingRunner(fTestClass, error);", "+\t\t\ttry {", "+\t\t\t\treturn runnerClass.getConstructor(Class.class).newInstance(", "+\t\t\t\t\t\tnew Object[] { fTestClass });", "+\t\t\t} catch (NoSuchMethodException e) {", "+\t\t\t\ttry {", "+\t\t\t\t\treturn runnerClass.getConstructor(Class.class,", "+\t\t\t\t\t\t\tSuiteBuilder.class).newInstance(", "+\t\t\t\t\t\t\tnew Object[] { fTestClass, fSuiteBuilder });", "+\t\t\t\t} catch (NoSuchMethodException e2) {", "+\t\t\t\t\tString simpleName= runnerClass.getSimpleName();", "+\t\t\t\t\tInitializationError error= new InitializationError(String", "+\t\t\t\t\t\t\t.format(CONSTRUCTOR_ERROR_FORMAT, simpleName,", "+\t\t\t\t\t\t\t\t\tsimpleName));", "+\t\t\t\t\treturn new ErrorReportingRunner(fTestClass, error);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3a2dfc133626d1dc141809f6d08f4b6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "d96a05f8d33ed781c701c58dd285bf6464112719", "commitAfterChange": "1e55e32ba3dab864b20e9c162c5b421f99a11c6d", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     @Deprecated     protected Statement withPotentialTimeout(FrameworkMethod method,             Object test, Statement next)", "signatureAfterChange": "     @Deprecated     protected Statement withPotentialTimeout(FrameworkMethod method,             Object test, Statement next)", "diff": ["-        return timeout > 0 ? new FailOnTimeout(next, timeout) : next;", "+        if (timeout <= 0) {", "+            return next;", "+        }", "+        return FailOnTimeout.builder()", "+               .withTimeout(timeout, TimeUnit.MILLISECONDS)", "+               .build(next);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3941e8883cf984f85bcedac2268bda9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxCore.java", "commitBeforeChange": "378e17964a4188bad9b3d966207a2f682072148e", "commitAfterChange": "451ca12156d5704809a1feff78a10a9451cd2023", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic void run(Request request)", "signatureAfterChange": " \t \tpublic void run(Request request)", "diff": ["-", "-\t\t\t\tstarts.put(description, System.nanoTime());", "+\t\t\t\tstarts.put(description, System.nanoTime()); // Get most accurate possible time", "-\t\t\t\tdurations.put(description, end - start);", "+\t\t\t\tfDurations.put(description, end - start);", "-\t\t\t\tthrow new UnsupportedOperationException();", "+\t\t\t\tlong end= System.currentTimeMillis(); // This needs to be comparable across tests", "+\t\t\t\tfFailures.put(failure.getDescription(), end);", "-\t\tResult result= core.run(request);", "-\t\tfFailures= result.getFailures();", "+\t\tcore.run(request);"]}]}