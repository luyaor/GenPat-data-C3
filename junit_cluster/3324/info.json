{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "80b7a9ebfb315ce52cb505cbce9a6ac0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b92c35573ff9d0cfe0f5f7ac6846168", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "196c4ed79cbaca37709643b54913b361b677ae04", "commitAfterChange": "0a9a389570a171b67c3155d312f2e90bdab5aaaf", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": "              @Override             public String describe()", "signatureAfterChange": "              public ExcludesAny(Set<Class<?>> categories)", "diff": ["-", "-            @Override", "-            public String describe() {", "-                return categoryFilter.describe();", "+", "+            public ExcludesAny(Set<Class<?>> categories) {", "+                super(true, null, true, categories);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2a9367df9f28f4f1fcfc56359e35076", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParentRunnerTest.java", "commitBeforeChange": "ff7c54f564eac489de1aef062ff0048c128e1c4f", "commitAfterChange": "b23ffd790b06f561290239ef3b7a5239ba755f10", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \t@Test \tpublic void shouldFailWithHelpfulMessageForNonStaticClassRule() throws Exception", "signatureAfterChange": "  \tprivate void assertClassHasFailureMessage(Class<?> klass, String message)", "diff": ["-\tpublic void shouldFailWithHelpfulMessageForNonStaticClassRule() throws Exception {", "-\t\tJUnitCore junitCore= new JUnitCore();", "-\t\tRequest request= Request.aClass(TestWithNonStaticClassRule.class);", "-\t\tResult result= junitCore.run(request);", "-\t\tassertThat(result.getFailureCount(), is(1));", "-\t\tassertThat(result.getFailures().get(0).getMessage(), is(equalTo(\"The TestRule 'x' is not static.\")));", "+\tprivate void assertClassHasFailureMessage(Class<?> klass, String message) {", "+\t\tJUnitCore junitCore= new JUnitCore();", "+\t\tRequest request= Request.aClass(klass);", "+\t\tResult result= junitCore.run(request);", "+\t\tassertThat(result.getFailureCount(), is(2)); //the second failure is no runnable methods", "+\t\tassertThat(result.getFailures().get(0).getMessage(),", "+\t\t\t\tis(equalTo(message)));"]}]}