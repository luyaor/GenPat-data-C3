{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12e3a58ac644158bd1ff0c24676cd78a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23bf1479784b44052823512e09e13329", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void validatePublicVoidNoArg(boolean isStatic, List<Throwable> errors)", "signatureAfterChange": "     public void validatePublicVoidNoArg(boolean isStatic, List<Throwable> errors)", "diff": ["-        if (fMethod.getParameterTypes().length != 0) {", "-            errors.add(new Exception(\"Method \" + fMethod.getName() + \" should have no parameters\"));", "+        if (method.getParameterTypes().length != 0) {", "+            errors.add(new Exception(\"Method \" + method.getName() + \" should have no parameters\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57fc1505f7b37f5bd3d7dd134946edd5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Override     public boolean equals(Object obj)", "signatureAfterChange": "      @Override     public boolean equals(Object obj)", "diff": ["-        return ((FrameworkMethod) obj).fMethod.equals(fMethod);", "+        return ((FrameworkMethod) obj).method.equals(method);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2e03ccf5c24716d6e6d8d6a96443297", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          @Override         public Object getValue() throws CouldNotGenerateValueException", "signatureAfterChange": "          @Override         public Object getValue() throws CouldNotGenerateValueException", "diff": ["-                return fMethod.invokeExplosively(null);", "+                return method.invokeExplosively(null);", "-                DataPoint annotation = fMethod.getAnnotation(DataPoint.class);", "+                DataPoint annotation = method.getAnnotation(DataPoint.class);"]}]}