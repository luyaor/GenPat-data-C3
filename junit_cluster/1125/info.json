{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd44198bce8e0f174310ca6129323f2c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82ffb9f6cca4461e62d4b89e349e6439", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/rules/RuleFieldValidator.java", "commitBeforeChange": "49d62f902ba7dba44b0b2b3b71e45004c667b2d5", "commitAfterChange": "faba199e389e3c977fc5573315790a5cde5f7611", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate void validateField(FrameworkField field, List<Throwable> errors)", "signatureAfterChange": "  \tprivate void validateMember(FrameworkMember<?> member, List<Throwable> errors)", "diff": ["-\tprivate void validateField(FrameworkField field, List<Throwable> errors) {", "-\t\toptionallyValidateStatic(field, errors);", "-\t\tvalidatePublic(field, errors);", "-\t\tvalidateTestRuleOrMethodRule(field, errors);", "+\tprivate void validateMember(FrameworkMember<?> member, List<Throwable> errors) {", "+\t\toptionallyValidateStatic(member, errors);", "+\t\tvalidatePublic(member, errors);", "+\t\tvalidateTestRuleOrMethodRule(member, errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d91cffebd061e7d7e3536e97bfe71074", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/rules/RuleFieldValidator.java", "commitBeforeChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "commitAfterChange": "759061a31775afd29ff99fd2a55969bd6aaa8c2f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 12, "signatureBeforeChange": "          private void validatePublicClass(FrameworkMember<?> member, List<Throwable> errors)", "signatureAfterChange": "         void validate(FrameworkMember<?> member, Class<? extends Annotation> annotation, List<Throwable> errors);", "diff": ["-    ", "-    private void validatePublicClass(FrameworkMember<?> member, List<Throwable> errors) {", "-        if (staticMembers && !isDeclaringClassPublic(member)) {", "-            addError(errors, member, \" must be declared in a public class.\");", "+         */", "+        void validate(FrameworkMember<?> member, Class<? extends Annotation> annotation, List<Throwable> errors);"]}]}