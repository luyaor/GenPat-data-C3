{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ca246d3080c77b9b69462cbc50ce8946", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11178cea3f8f1ab178e8fb3a88c4acf3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "4dcf3a499652b3c089d91e209c6f01313115ff76", "commitAfterChange": "a916d4133c7e394130d7953da427aae9917ab92c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate void printFailedAssumptions(Result result)", "signatureAfterChange": " \t \tprivate void printFailedAssumptions(Result result)", "diff": ["-\t\tprintExceptions(\"ignored test\", \"IGNORED TEST \", result.getFailedAssumptions());", "+\t\tprintEvents(\"invalid assumption\", \"INVALID ASSUMPTION \", result.getFailedAssumptions());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b04eb2776454e51183be179921a44cd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java", "commitBeforeChange": "1fa373f01d126d437f08a57a7b5e7a7ec0a01b85", "commitAfterChange": "8672a83f51b183c756649a423b908271c894b8df", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \t@Test \tpublic void failureOnInitialization()", "signatureAfterChange": " \t \t@Test \tpublic void failureOnInitialization()", "diff": ["-\t\tResult result = JUnitCore.runClasses(BadIndexForAnnotedFieldTest.class);", "+\t\tResult result = JUnitCore.runClasses(BadIndexForAnnotatedFieldTest.class);", "-\t\tassertEquals(\"Invalid @parameter value: 2. @parameter fields counted: 1. Please use an index between 0 and 0.\",", "+\t\tassertEquals(\"Invalid @Parameter value: 2. @Parameter fields counted: 1. Please use an index between 0 and 0.\",", "-\t\tassertEquals(\"The index 0 is never used.\", failures.get(1).getException().getMessage());", "+\t\tassertEquals(\"@Parameter(0) is never used.\", failures.get(1).getException().getMessage());"]}]}