{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "17fc224a3670bfb0f0933836c3cfd859", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2408fc7c9df11bdbe4d650940716f32d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "fc7acc64dbbf5c28ef4bd3b142e35922d6294428", "commitAfterChange": "223b34b516467bcd9cb7ebc7f49549f2e7362dca", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate Runner buildRunner(Description each)", "signatureAfterChange": "  \tprivate Runner buildRunner(Description each)", "diff": ["+\t\tif (each.toString().startsWith(MALFORMED_JUNIT_3_TEST_CLASS_PREFIX))", "+\t\t\t// This is cheating, because it runs the whole class ", "+\t\t\t// to get the warning for this method, but we can't do better, ", "+\t\t\t// because JUnit 3.8's", "+\t\t\t// thrown away which method the warning is for.", "+\t\t\treturn new JUnit38ClassRunner(new TestSuite(getMalformedTestClass(each)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed2eebbf7a5a743fec7274994b1452cb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxCore.java", "commitBeforeChange": "003f66a2e928691100fbe719d7253b5213e99698", "commitAfterChange": "d8da2f699a89857292e5e5b92945b2fe3c0a039a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate Runner buildRunner(Description each)", "signatureAfterChange": "  \tprivate Runner buildRunner(Description each)", "diff": ["+\t\tif (each.toString().startsWith(MALFORMED_JUNIT_3_TEST_CLASS_PREFIX))", "+\t\t\t// This is cheating, because it runs the whole class ", "+\t\t\t// to get the warning for this method, but we can't do better, ", "+\t\t\t// because JUnit 3.8's", "+\t\t\t// thrown away which method the warning is for.", "+\t\t\treturn new JUnit38ClassRunner(new TestSuite(getMalformedTestClass(each)));"]}]}