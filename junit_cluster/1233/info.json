{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "78e74b7eafd556dde91c1f1b8319dea6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09d67e4ccda338832c2e80f3f0130d32", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "1350d0562466adbea1a9f8408084acdd005bfc13", "commitAfterChange": "bd8a96dbbfe93f134f75c768e5c1254cff8a9e9f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t\tprotected void runWithIncompleteAssignment(Assignments incomplete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tThrowable", "signatureAfterChange": "  \t\tprotected void runWithIncompleteAssignment(Assignments incomplete, EachTestNotifier notifier) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tThrowable", "diff": ["-\t\tprotected void runWithIncompleteAssignment(Assignments incomplete)", "+\t\tprotected void runWithIncompleteAssignment(Assignments incomplete, EachTestNotifier notifier)", "-\t\t\t\trunWithAssignment(incomplete.assignNext(source));", "+\t\t\t\trunWithAssignment(incomplete.assignNext(source), notifier);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "585315438a017b61137a5b1b492d7a95", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "a4c68872a91681139d404825c2bb04bd5ba804dd", "commitAfterChange": "f0ef837a40922ac08c608661385abf71732975d3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprotected Link chain(TestMethod method, Object test)", "signatureAfterChange": " \t \tprotected Link chain(TestMethod method, Object test, EachTestNotifier notifier)", "diff": ["-", "-\tprotected Link chain(TestMethod method, Object test) {", "+\tprotected Link chain(TestMethod method, Object test, EachTestNotifier notifier) {", "-\t\treturn notifying(method, link);", "+\t\treturn notifying(method, link, notifier);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b425e32ea157157e213613e5a2d9e992", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "a4c68872a91681139d404825c2bb04bd5ba804dd", "commitAfterChange": "f0ef837a40922ac08c608661385abf71732975d3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Override \tprotected Link chain(final TestMethod method, Object test)", "signatureAfterChange": "  \t@Override \tprotected Link chain(final TestMethod method, Object test, EachTestNotifier notifier)", "diff": ["-\tprotected Link chain(final TestMethod method, Object test) {", "+\tprotected Link chain(final TestMethod method, Object test, EachTestNotifier notifier) {", "-\t\treturn notifying(method, next);", "+\t\treturn notifying(method, next, notifier);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4d91319d1b8244ecb48571b243a816a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/experimental/theories/extendingwithstubs/StubbedTheories.java", "commitBeforeChange": "1350d0562466adbea1a9f8408084acdd005bfc13", "commitAfterChange": "bd8a96dbbfe93f134f75c768e5c1254cff8a9e9f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t\t@Override \t\tprotected void runWithIncompleteAssignment(Assignments incomplete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tThrowable", "signatureAfterChange": "  \t\t@Override \t\tprotected void runWithIncompleteAssignment(Assignments incomplete, EachTestNotifier notifier) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tThrowable", "diff": ["-\t\tprotected void runWithIncompleteAssignment(Assignments incomplete)", "+\t\tprotected void runWithIncompleteAssignment(Assignments incomplete, EachTestNotifier notifier)", "-\t\t\t\trunWithAssignment(incomplete.assignNext(guessers.remove(0)));", "+\t\t\t\trunWithAssignment(incomplete.assignNext(guessers.remove(0)), notifier);"]}]}