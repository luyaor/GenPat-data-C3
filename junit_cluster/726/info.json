{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dd5d9cd3ff51a1b5aa8e25ea034224b2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06b398a92555e9b40308ce4c4232971b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/MethodRoadie.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tprivate void runAfters()", "signatureAfterChange": "      private void runAfters()", "diff": ["-\tprivate void runAfters() {", "-\t\tList<Method> afters= fTestMethod.getAfters();", "-\t\tfor (Method after : afters)", "-\t\t\ttry {", "-\t\t\t\tafter.invoke(fTest);", "-\t\t\t} catch (InvocationTargetException e) {", "-\t\t\t\taddFailure(e.getTargetException());", "-\t\t\t} catch (Throwable e) {", "-\t\t\t\taddFailure(e); // Untested, but seems impossible", "-\t\t\t}", "-\t}", "+", "+    private void runAfters() {", "+        List<Method> afters = fTestMethod.getAfters();", "+        for (Method after : afters) {", "+            try {", "+                after.invoke(fTest);", "+            } catch (InvocationTargetException e) {", "+                addFailure(e.getTargetException());", "+            } catch (Throwable e) {", "+                addFailure(e); // Untested, but seems impossible", "+            }", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aad20a0a40c3ded8060116e419a6717a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/ClassRoadie.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate void runAfters()", "signatureAfterChange": "      private void runAfters()", "diff": ["-\tprivate void runAfters() {", "-\t\tList<Method> afters= fTestClass.getAfters();", "-\t\tfor (Method after : afters)", "-\t\t\ttry {", "-\t\t\t\tafter.invoke(null);", "-\t\t\t} catch (InvocationTargetException e) {", "-\t\t\t\taddFailure(e.getTargetException());", "-\t\t\t} catch (Throwable e) {", "-\t\t\t\taddFailure(e); // Untested, but seems impossible", "-\t\t\t}", "-\t}", "+", "+    private void runAfters() {", "+        List<Method> afters = fTestClass.getAfters();", "+        for (Method after : afters) {", "+            try {", "+                after.invoke(null);", "+            } catch (InvocationTargetException e) {", "+                addFailure(e.getTargetException());", "+            } catch (Throwable e) {", "+                addFailure(e); // Untested, but seems impossible", "+            }", "+        }", "+    }"]}]}