{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9bab2fd62c29d75ccfa6149e4b1c8c8a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a3568c525a5e56cf34c75fb015d6073", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "83a25d440d118b7d10779a884d35f31045949e27", "commitAfterChange": "84d8eddd970e46894d471cd2dd17ae8d86fb05db", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      public void sort(Sorter sorter)", "signatureAfterChange": "      public void sort(Sorter sorter)", "diff": ["-        for (T each : getFilteredChildren()) {", "-            sortChild(each, sorter);", "+        synchronized (fLock) {", "+            for (T each : getFilteredChildren()) {", "+                sortChild(each, sorter);", "+            }", "+            List<T> sortedChildren = new ArrayList<T>(getFilteredChildren());", "+            Collections.sort(sortedChildren, comparator(sorter));", "+            setFilteredChildren(sortedChildren);", "-        List<T> sortedChildren = new ArrayList<T>(getFilteredChildren());", "-        Collections.sort(sortedChildren, comparator(sorter));", "-        getFilteredChildren().clear();", "-        getFilteredChildren().addAll(sortedChildren);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7518cfc8a9bb329ca664df28ce349e1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "83a25d440d118b7d10779a884d35f31045949e27", "commitAfterChange": "84d8eddd970e46894d471cd2dd17ae8d86fb05db", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": "      private Collection<T> getFilteredChildren()", "signatureAfterChange": "      private Collection<T> getFilteredChildren()", "diff": ["+", "-            fFilteredChildren = new ConcurrentLinkedQueue<T>(getChildren());", "+            synchronized (fLock) {", "+                setFilteredChildren(getChildren());", "+            }"]}]}