{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0779a104c3e9bb0f6c02582216b41b6e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c6bcdf82cf2c335bc4780873eb8b979", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/suppliers/TestedOnSupplier.java", "commitBeforeChange": "149ecd4dcd99697710aa350e9cd3b3bcac877125", "commitAfterChange": "787ed4e5bc2b68e8b5cdb6190ff1fc053f1a5b13", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t@Override public List<PotentialParameterValue> getValueSources(Object test, ParameterSignature sig)", "signatureAfterChange": " \t@Override public List<PotentialAssignment> getValueSources(Object test, ParameterSignature sig)", "diff": ["-\t@Override public List<PotentialParameterValue> getValueSources(Object test, ParameterSignature sig) {", "-\t\tList<PotentialParameterValue> list = new ArrayList<PotentialParameterValue>();", "-\t\tTestedOn testedOn = (TestedOn) sig.getSupplierAnnotation();", "+\t@Override public List<PotentialAssignment> getValueSources(Object test, ParameterSignature sig) {", "+\t\tList<PotentialAssignment> list = new ArrayList<PotentialAssignment>();", "+\t\tTestedOn testedOn = sig.getAnnotation(TestedOn.class);", "-\t\t\tlist.add(PotentialParameterValue.forValue(i));", "+\t\t\tlist.add(PotentialAssignment.forValue(i));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88e2e8ca186496dafd8e2f51d4a0104a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "2ade5fd3aad123d6507b59ed5d48c8f030314f00", "commitAfterChange": "cc8497f28e1d5a46d7940a0b36556154c83d6f7a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "          private void addSinglePointFields(ParameterSignature sig,             List<PotentialAssignment> list)", "signatureAfterChange": "      private void addSinglePointFields(ParameterSignature sig, List<PotentialAssignment> list)", "diff": ["-    private void addSinglePointFields(ParameterSignature sig,", "-            List<PotentialAssignment> list) {", "+    private void addSinglePointFields(ParameterSignature sig, List<PotentialAssignment> list) {", "-            Class<?> type = field.getType();", "-            if (sig.canAcceptType(type)) {", "-                list.add(PotentialAssignment.forValue(field.getName(), getStaticFieldValue(field)));", "+            Object value = getStaticFieldValue(field);", "+            ", "+            if (sig.canAcceptValue(value)) {", "+                list.add(PotentialAssignment.forValue(field.getName(), value));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3a55dd9ce6037fd04ce073f2cc6c3fe", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "2ade5fd3aad123d6507b59ed5d48c8f030314f00", "commitAfterChange": "cc8497f28e1d5a46d7940a0b36556154c83d6f7a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "          private void addMultiPointFields(ParameterSignature sig,             List<PotentialAssignment> list)", "signatureAfterChange": "          private void addMultiPointFields(ParameterSignature sig, List<PotentialAssignment> list)", "diff": ["-    private void addMultiPointFields(ParameterSignature sig,", "-            List<PotentialAssignment> list) {", "+    private void addMultiPointFields(ParameterSignature sig, List<PotentialAssignment> list) {", "-            Class<?> type = field.getType();", "-            if (sig.canAcceptArrayType(type)) {", "-                try {", "-                    addArrayValues(field.getName(), list, getStaticFieldValue(field));", "-                } catch (Throwable e) {", "-                    // ignore and move on", "-                }", "-            }", "+            addArrayValues(sig, field.getName(), list, getStaticFieldValue(field));", "-    }    ", "+    }"]}]}