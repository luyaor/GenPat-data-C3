{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "504b1aabf784f640d2e5c7061510ce73", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "011cfe90cdc3ff28c2d79d34afbce13c", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/tests/AssertionTest.java", "commitBeforeChange": "e060609ca85c723422684450b46dade931b0948a", "commitAfterChange": "ee76b28e432a94c33160b3edc7cb60b6394ac0cc", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \t@Ignore(\"Too much to do to get this working for 4.0 release\") \t@Test public void multiDimensionalArraysAreNotEqual()", "signatureAfterChange": " \t \t@Test public void multiDimensionalArraysAreNotEqual()", "diff": ["-\t@Ignore(\"Too much to do to get this working for 4.0 release\")", "-\t\t\tassertEquals(\"message\", new Object[][]{{true, true}, {false, false}}, new Object[][]{{true, true}, {false, true}});", "+\t\t\tassertEquals(\"message\", new Object[][]{{true, true}, {false, false}}, new Object[][]{{true, true}, {true, false}});", "-\t\t\tassertEquals(\"message: arrays first differed at element [1][1]; expected:<false> but was:<true>\", exception.getMessage());", "+\t\t\tassertEquals(\"message: arrays first differed at element [1][0]; expected:<false> but was:<true>\", exception.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c18ed66495368869703ae0cf2c0c8fe4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/CategoriesAndParameterizedTest.java", "commitBeforeChange": "b3831d600d2d893ec6250ee930188cc373d81ee5", "commitAfterChange": "403f761da11bdaf9a03538139e7ae51601c36b0e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t@Ignore(\"Fix next time\") \t@Test \tpublic void shouldFailWith()", "signatureAfterChange": "  \t@Test \tpublic void shouldFailWithMethodLevelCategoryAnnotationSwapped()", "diff": ["-\t@Ignore(\"Fix next time\")", "-\tpublic void shouldFailWith() {", "-\t\t\t\tPrintableResult.testResult(ParameterTokenSuiteC.class),", "+", "+\t@Test", "+\tpublic void shouldFailWithMethodLevelCategoryAnnotationSwapped() {", "+\t\tAssert.assertThat(", "+\t\t\t\tPrintableResult.testResult(ParameterTokenSuiteMalformedAndSwapped.class),"]}]}