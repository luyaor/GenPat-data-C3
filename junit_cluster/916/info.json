{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e9581004fc225f86d7c70f1cd5e47efd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b519bd35f89e544156c4dbfce88a77a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/internal/AllMembersSupplierTest.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void dataPointsAnnotationMeansTreatAsArrayOnly()             throws SecurityException, NoSuchMethodException", "signatureAfterChange": "      @Test     public void dataPointsAnnotationMeansTreatAsArrayOnly() throws Throwable", "diff": ["-    public void dataPointsAnnotationMeansTreatAsArrayOnly()", "-            throws SecurityException, NoSuchMethodException {", "-        List<PotentialAssignment> valueSources = new AllMembersSupplier(", "-                new TestClass(HasDataPoints.class))", "-                .getValueSources(ParameterSignature.signatures(", "-                        HasDataPoints.class.getConstructor(Object.class))", "-                        .get(0));", "+    public void dataPointsAnnotationMeansTreatAsArrayOnly() throws Throwable {", "+        List<PotentialAssignment> valueSources = allMemberValuesFor(", "+                HasDataPoints.class, Object.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "501f5d4e520443dff93035ad8a838be1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/internal/AllMembersSupplierTest.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void dataPointsArrayFieldMayContainNullValue()             throws SecurityException, NoSuchMethodException", "signatureAfterChange": "      @Test     public void dataPointsArrayFieldMayContainNullValue() throws Throwable", "diff": ["-    public void dataPointsArrayFieldMayContainNullValue()", "-            throws SecurityException, NoSuchMethodException {", "-        List<PotentialAssignment> valueSources = new AllMembersSupplier(", "-                new TestClass(HasDataPointsFieldWithNullValue.class))", "-                .getValueSources(ParameterSignature.signatures(", "-                        HasDataPointsFieldWithNullValue.class.getConstructor(Object.class))", "-                        .get(0));", "+    public void dataPointsArrayFieldMayContainNullValue() throws Throwable {", "+        List<PotentialAssignment> valueSources = allMemberValuesFor(", "+                HasDataPointsFieldWithNullValue.class, Object.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71f83c8bb47d2abb059e1095fdf8bc06", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/internal/AllMembersSupplierTest.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void dataPointsArrayMethodMayContainNullValue()             throws SecurityException, NoSuchMethodException", "signatureAfterChange": "      @Test     public void dataPointsArrayMethodMayContainNullValue() throws Throwable", "diff": ["-    public void dataPointsArrayMethodMayContainNullValue()", "-            throws SecurityException, NoSuchMethodException {", "-        List<PotentialAssignment> valueSources = new AllMembersSupplier(", "-                new TestClass(HasDataPointsMethodWithNullValue.class))", "-                .getValueSources(ParameterSignature.signatures(", "-                        HasDataPointsMethodWithNullValue.class.getConstructor(Integer.class))", "-                        .get(0));", "+    public void dataPointsArrayMethodMayContainNullValue() throws Throwable {", "+        List<PotentialAssignment> valueSources = allMemberValuesFor(", "+                HasDataPointsMethodWithNullValue.class, Integer.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7de1a636d3dcf8981e541fbfbaaca82", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/junit3compatibility/SuiteMethodTest.java", "commitBeforeChange": "d3e86b059db787af5c0d58ddf3f69af5b42865b8", "commitAfterChange": "7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \t@Test public void descriptionAndRunNotificationsAreConsistent()", "signatureAfterChange": " \t \t@Test public void failIfEverythingIsIgnoredOut()", "diff": ["-\t@Test public void descriptionAndRunNotificationsAreConsistent() {", "+\t@Test public void failIfEverythingIsIgnoredOut() {", "-\t\t", "-\t\tDescription description= Request.aClass(CompatibilityTest.class).getRunner().getDescription();", "-\t\tassertEquals(0, description.getChildren().size());", "+\t\tassertEquals(1, result.getFailureCount());"]}]}