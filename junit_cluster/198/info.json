{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f1c51dcb6c5545b8b0b963a094c23de4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44f449333f4e8965952d24e3c4699907", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/IsCollectionContaining.java", "commitBeforeChange": "017ce048adbc360fed2e8d7ae55dfbb3dbdc76dc", "commitAfterChange": "4e2455b1f142bdf8f07383082638718695e51224", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tprivate IsCollectionContaining(Matcher<? super T> elementMatcher)", "signatureAfterChange": "      public IsCollectionContaining(Matcher<? extends T> elementMatcher)", "diff": ["-\t// Client code should just use static factories, so this should be OK", "-\tprivate IsCollectionContaining(Matcher<? super T> elementMatcher) {", "-\t\tsuper(elementMatcher);", "-\t}", "+", "+    public IsCollectionContaining(Matcher<? extends T> elementMatcher) {", "+        this.elementMatcher = elementMatcher;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b16ae21e3e4283b0c977b8392aaab46", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/matchers/CombinableMatcher.java", "commitBeforeChange": "017ce048adbc360fed2e8d7ae55dfbb3dbdc76dc", "commitAfterChange": "4e2455b1f142bdf8f07383082638718695e51224", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tprivate CombinableMatcher(Matcher<? super T> matcher)", "signatureAfterChange": "  \tpublic CombinableMatcher(Matcher<? extends T> matcher)", "diff": ["-\t// should only be using static factories", "-\tprivate CombinableMatcher(Matcher<? super T> matcher) {", "-\t\tsuper(matcher);", "+", "+\tpublic CombinableMatcher(Matcher<? extends T> matcher) {", "+\t\tfMatcher= matcher;", "+\t}"]}]}