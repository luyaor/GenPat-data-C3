{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d812a012b775355f8d0347d6008be84f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d137a49c8757bdb5bbcaedd971ebc861", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/validator/CategoryValidator.java", "commitBeforeChange": "9cf5b64d8dbbb064fed3d4ee88eced2b6a7d50fe", "commitAfterChange": "bae4bd80513360c5e884e760447000d9c96ffd72", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private Set<Class<?>> buildIncompatibleAnnotationsSet()", "signatureAfterChange": "      private static Set<Class<? extends Annotation>> buildIncompatibleAnnotationsSet()", "diff": ["-    private Set<Class<?>> buildIncompatibleAnnotationsSet() {", "-        if (fIncompatibleAnnotations == null) {", "-            fIncompatibleAnnotations = new HashSet<Class<?>>();", "-            fIncompatibleAnnotations.add(BeforeClass.class);", "-            fIncompatibleAnnotations.add(AfterClass.class);", "-            fIncompatibleAnnotations.add(Before.class);", "-            fIncompatibleAnnotations.add(After.class);", "-        }", "-        return fIncompatibleAnnotations;", "+    private static Set<Class<? extends Annotation>> buildIncompatibleAnnotationsSet() {", "+        Set<Class<? extends Annotation>> incompatibleAnnotations = new HashSet<Class<? extends Annotation>>();", "+        incompatibleAnnotations.add(BeforeClass.class);", "+        incompatibleAnnotations.add(AfterClass.class);", "+        incompatibleAnnotations.add(Before.class);", "+        incompatibleAnnotations.add(After.class);", "+        return Collections.unmodifiableSet(incompatibleAnnotations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddb047ee0716cd6ac8db6e0905f21258", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/validator/CategoryValidator.java", "commitBeforeChange": "48af7e797dbefa1fc47e80394c7f74ef87c3c7ab", "commitAfterChange": "85f9d8397bfd96261c3214284672180c522e2d38", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private Set<Class<?>> buildIncompatibleAnnotationsSet()", "signatureAfterChange": "      private Set<Class<?>> buildIncompatibleAnnotationsSet()", "diff": ["-        final Set<Class<?>> incompatibleAnnotations = new HashSet<Class<?>>();", "-        incompatibleAnnotations.add(BeforeClass.class);", "-        incompatibleAnnotations.add(AfterClass.class);", "-        incompatibleAnnotations.add(Before.class);", "-        incompatibleAnnotations.add(After.class);", "-        return incompatibleAnnotations;", "+        if (fIncompatibleAnnotations == null) {", "+            fIncompatibleAnnotations = new HashSet<Class<?>>();", "+            fIncompatibleAnnotations.add(BeforeClass.class);", "+            fIncompatibleAnnotations.add(AfterClass.class);", "+            fIncompatibleAnnotations.add(Before.class);", "+            fIncompatibleAnnotations.add(After.class);", "+        }", "+        return fIncompatibleAnnotations;"]}]}