{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc654fa73dbaafa9bb9a645679db47f1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e0170c8f35e903e14347eacfd1a19c6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestElement.java", "commitBeforeChange": "0e1c92693e70e52ad9af23ee6180500c74fc9c95", "commitAfterChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void runAfters(FailureListener roadie, Object target)", "signatureAfterChange": "  \tpublic void runAfters(Object target) throws MultipleFailureException", "diff": ["-\tpublic void runAfters(FailureListener roadie, Object target) {", "+\tpublic void runAfters(Object target) throws MultipleFailureException {", "+\t\tMultipleFailureException errors= new MultipleFailureException();", "+\t\t", "-\t\t\t\troadie.addFailure(e);", "+\t\t\t\terrors.add(e);", "+\t\t\t", "+\t\terrors.throwUnlessEmpty();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "717fdc8f5b13f784e36376973a5b5751", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Statement childBlock(TestMethod method)", "signatureAfterChange": "  \tpublic Statement childBlock(FrameworkMethod method)", "diff": ["-\tpublic Statement childBlock(TestMethod method) {", "+\tpublic Statement childBlock(FrameworkMethod method) {", "+\t\tTestAnnotation annotation= new TestAnnotation(method);", "+\t\t", "-\t\tlink= possiblyExpectingExceptions(method, link);", "-\t\tlink= withPotentialTimeout(method, link);", "+\t\tlink= possiblyExpectingExceptions(annotation, link);", "+\t\tlink= withPotentialTimeout(annotation, link);"]}]}