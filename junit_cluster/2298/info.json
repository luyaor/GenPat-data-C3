{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef71bfb3322d4b82bbfad2e3e9f056f4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08e658c34b07253f7f0397a42f7ecd32", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/JUnitCommandLineParserTest.java", "commitBeforeChange": "b5084eb51ffdb2a3bd9bed7294afc941a733a693", "commitAfterChange": "c85a267605d4484121afeccef972a7266481ee7c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \r     @Test\r     public void shouldCreateFailureUponUnknownTestClass() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldCreateFailureUponUnknownTestClass() throws Exception", "diff": ["-        assertThat(description.toString(), allOf(\r", "-                containsString(\"initializationError:\"),\r", "-                containsString(IllegalArgumentException.class.getName()),\r", "-                containsString(unknownTestClass)));\r", "-    }\r", "+        assertThat(description.toString(), containsString(\"initializationError:\"));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c494f465a6d98166b31a43a92149fd49", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/JUnitCommandLineParserTest.java", "commitBeforeChange": "b5084eb51ffdb2a3bd9bed7294afc941a733a693", "commitAfterChange": "c85a267605d4484121afeccef972a7266481ee7c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r     @Test\r     public void shouldCreateFailureUponUnfoundFilterFactory() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldCreateFailureUponUnfoundFilterFactory() throws Exception", "diff": ["-        assertThat(description.toString(), allOf(\r", "-                containsString(\"initializationError:\"),\r", "-                containsString(FilterFactories.FilterFactoryNotCreatedException.class.getName()),\r", "-                containsString(nonExistentFilterFactory)));\r", "+        assertThat(description.toString(), containsString(\"initializationError:\"));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db748b6d0e8c3efe5927e2ba682142c2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/runner/JUnitCommandLineParserTest.java", "commitBeforeChange": "b5084eb51ffdb2a3bd9bed7294afc941a733a693", "commitAfterChange": "c85a267605d4484121afeccef972a7266481ee7c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r     @Test\r     public void shouldCreateFailureUponUncreatedFilter() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void shouldCreateFailureUponUncreatedFilter() throws Exception", "diff": ["-        assertThat(description.toString(), allOf(\r", "-                containsString(\"initializationError:\"),\r", "-                containsString(FilterFactory.FilterNotCreatedException.class.getName()),\r", "-                containsString(\"stub\")));\r", "+        assertThat(description.toString(), containsString(\"initializationError:\"));\r"]}]}