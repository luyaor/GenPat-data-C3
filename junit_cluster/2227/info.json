{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b24c2f6575d4b97a03e0a3f6c9f4f009", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "356246303372bcb2aa598ceab6bc6aa1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/ParameterSignature.java", "commitBeforeChange": "f0ef837a40922ac08c608661385abf71732975d3", "commitAfterChange": "0e1c92693e70e52ad9af23ee6180500c74fc9c95", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate <T extends Annotation> T findDeepAnnotation(Annotation[] annotations, \t\t\tClass<T> annotationType)", "signatureAfterChange": "  \tprivate <T extends Annotation> T findDeepAnnotation(Annotation[] annotations, \t\t\tClass<T> annotationType, int remainingDepth)", "diff": ["-\t\t\tClass<T> annotationType) {", "+\t\t\tClass<T> annotationType, int remainingDepth) {", "+\t\tif (remainingDepth == 0)", "+\t\t\treturn null;", "+\t\t", "-\t\t\tAnnotation candidate = findDeepAnnotation(each.annotationType().getAnnotations(), annotationType);", "+\t\t\tAnnotation candidate = findDeepAnnotation(each.annotationType().getAnnotations(), annotationType, remainingDepth - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0ec73a35bf4b56413ac9f2471ac16e6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/ParameterSignature.java", "commitBeforeChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "commitAfterChange": "59b1e2926cdebfd257c6c091ee2bd478d8aa04d2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate <T extends Annotation> T findDeepAnnotation(Annotation[] annotations, \t\t\tClass<T> annotationType)", "signatureAfterChange": "  \tprivate <T extends Annotation> T findDeepAnnotation(Annotation[] annotations, \t\t\tClass<T> annotationType, int depth)", "diff": ["-\t\t\tClass<T> annotationType) {", "+\t\t\tClass<T> annotationType, int depth) {", "+\t\tif (depth == 0)", "+\t\t\treturn null;", "-\t\t\tAnnotation candidate = findDeepAnnotation(each.annotationType().getAnnotations(), annotationType);", "+\t\t\tAnnotation candidate = findDeepAnnotation(each.annotationType().getAnnotations(), annotationType, depth - 1);"]}]}