{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f2c571b9a6058e4e0248e13d66d87259", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b79ddf5aebc715e6587bde7d6ed60e1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/ComparisonFailure.java", "commitBeforeChange": "950702c6adbbcbbee0ce2061d674bf05e0c997b1", "commitAfterChange": "a5d194fcb57b1b320ae808bc5a8d153f98f18a84", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "          private void findCommonSuffix()", "signatureAfterChange": "              public String compactPrefix()", "diff": ["-        private void findCommonSuffix() {", "-            int expectedSuffix = expected.length() - 1;", "-            int actualSuffix = actual.length() - 1;", "-            for (; actualSuffix >= prefix && expectedSuffix >= prefix; actualSuffix--, expectedSuffix--) {", "-                if (expected.charAt(expectedSuffix) != actual.charAt(actualSuffix)) {", "-                    break;", "-                }", "-            suffix = expected.length() - expectedSuffix - 1;", "-        }", "+            public String compactPrefix() {", "+                if (sharedPrefix.length() <= contextLength) {", "+                    return sharedPrefix;", "+                }", "+                return ELLIPSIS + sharedPrefix.substring(sharedPrefix.length() - contextLength);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b253ed5e7ea971f7d8c0d6c7a0b066d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/ComparisonFailure.java", "commitBeforeChange": "95f56b32ef3950e83273335e1ba6c2b6cf1a5540", "commitAfterChange": "674bb8f296b0bc7bbfbd8a1126cff2d98333bbf2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "          private void findCommonSuffix()", "signatureAfterChange": "          private void findCommonSuffix()", "diff": ["-            int expectedSuffix = fExpected.length() - 1;", "-            int actualSuffix = fActual.length() - 1;", "-            for (; actualSuffix >= fPrefix && expectedSuffix >= fPrefix; actualSuffix--, expectedSuffix--) {", "-                if (fExpected.charAt(expectedSuffix) != fActual.charAt(actualSuffix)) {", "+            int expectedSuffix = expected.length() - 1;", "+            int actualSuffix = actual.length() - 1;", "+            for (; actualSuffix >= prefix && expectedSuffix >= prefix; actualSuffix--, expectedSuffix--) {", "+                if (expected.charAt(expectedSuffix) != actual.charAt(actualSuffix)) {", "-            fSuffix = fExpected.length() - expectedSuffix - 1;", "+            suffix = expected.length() - expectedSuffix - 1;"]}]}