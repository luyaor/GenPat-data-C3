{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05d0660a212f070cfaa80f0b1dd5ef75", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e159a7ca67fd358ae7963621fc6c901", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/ClassRoadie.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate void runBefores() throws FailedBefore", "signatureAfterChange": "      private void runBefores() throws FailedBefore", "diff": ["-\tprivate void runBefores() throws FailedBefore {", "-\t\ttry {", "-\t\t\ttry {", "-\t\t\t\tList<Method> befores= fTestClass.getBefores();", "-\t\t\t\tfor (Method before : befores)", "-\t\t\t\t\tbefore.invoke(null);", "-\t\t\t} catch (InvocationTargetException e) {", "-\t\t\t\tthrow e.getTargetException();", "-\t\t\t}", "-\t\t} catch (org.junit.internal.AssumptionViolatedException e) {", "-\t\t\tthrow new FailedBefore();", "-\t\t} catch (Throwable e) {", "-\t\t\taddFailure(e);", "-\t\t\tthrow new FailedBefore();", "-\t\t}", "-\t}", "+", "+    private void runBefores() throws FailedBefore {", "+        try {", "+            try {", "+                List<Method> befores = fTestClass.getBefores();", "+                for (Method before : befores) {", "+                    before.invoke(null);", "+                }", "+            } catch (InvocationTargetException e) {", "+                throw e.getTargetException();", "+            }", "+        } catch (org.junit.internal.AssumptionViolatedException e) {", "+            throw new FailedBefore();", "+        } catch (Throwable e) {", "+            addFailure(e);", "+            throw new FailedBefore();", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b99692826c6f0cc59341e8b21598252e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \t@Override \tpublic Description getDescription()", "signatureAfterChange": "      @Override     public Description getDescription()", "diff": ["-\t", "-\t@Override", "-\tpublic Description getDescription() {", "-\t\tDescription description= Description.createSuiteDescription(getName(),", "-\t\t\t\tgetRunnerAnnotations());", "-\t\tfor (T child : getFilteredChildren())", "-\t\t\tdescription.addChild(describeChild(child));", "-\t\treturn description;", "-\t}", "+    @Override", "+    public Description getDescription() {", "+        Description description = Description.createSuiteDescription(getName(),", "+                getRunnerAnnotations());", "+        for (T child : getFilteredChildren()) {", "+            description.addChild(describeChild(child));", "+        }", "+        return description;", "+    }"]}]}