{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f122479e9928c5d02c480bacef62e8e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e2d68cdcf704b77ee45d50f302422cf", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/TheoryMethodRunner.java", "commitBeforeChange": "4081076e513e84bb2376f889d4108e64e9a18653", "commitAfterChange": "a58514aec7e843339be24980e92aeeb759327ffb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t\tprotected void runWithCompleteAssignment(Assignments complete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tInvocationTargetException, NoSuchMethodException, Throwable", "signatureAfterChange": "  \t\tprotected void runWithCompleteAssignment(Assignments complete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tInvocationTargetException, NoSuchMethodException, Throwable", "diff": ["-\t\t\t\tthisContext.runProtected(TheoryMethodRunner.this, new Runnable() { // TODO Ugly...", "-\t\t\t\t\tpublic void run() {", "+\t\t\t\tnew BeforeAndAfter(new Anchor() {", "+\t\t\t\t\t@Override", "+\t\t\t\t\tpublic void run(Roadie context) throws Throwable {", "-\t\t\t\t});", "+\t\t\t\t}).run(thisContext); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77c04533bf56bd865cb9b864880d6cd9", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/tests/runner/TextRunnerSingleMethodTest.java", "commitBeforeChange": "a0f0ee1b3f72d9361eb09b3a25156c69a748aa47", "commitAfterChange": "478f7f9217cf5da219a7ba298e3a87f405378194", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void testSingle() throws Exception", "signatureAfterChange": " \t \tpublic void testSingle() throws Exception", "diff": ["-", "+\t", "-\t\tTestRunner t= new TestRunner(new NullResultPrinter(null));", "+\t\tTestRunner t= new TestRunner();", "+\t\tt.setPrinter(new ResultPrinter(new PrintStream(new ByteArrayOutputStream())));", "-\t\tassertFalse(fgWasInvoked);", "+\t\tfgWasInvoked= false;"]}]}