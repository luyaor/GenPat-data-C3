{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c34618862a404b5f1a56b76709d66323", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e8c0c6a76db144ca94bd9ff72c4d0f8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/requests/ErrorReportingRequest.java", "commitBeforeChange": "95bd62b2ffd80394d1a17e9078a4d79478423030", "commitAfterChange": "9c8d59d9869280a698c3f3a119eb69f0e897c94b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic Runner getRunner()", "signatureAfterChange": "  \t@Override \tpublic Runner getRunner()", "diff": ["-\t\tList<Throwable> goofs= getCauses(fCause);", "-\t\tList<Runner> runners= new ArrayList<Runner>();", "-\t\tfor (int i= 0; i < goofs.size(); i++) {", "-\t\t\tfinal Description description= Description.createTestDescription(fClass, \"initializationError\" + i);", "-\t\t\tfinal Throwable throwable= goofs.get(i);", "-\t\t\trunners.add(new ErrorReportingRunner(description, throwable));", "-\t\t}", "-\t\tCompositeRunner runner= new CompositeRunner(fClass.getName(), runners);", "-\t\treturn runner;", "+\t\t// TODO: (Dec 10, 2007 9:41:13 PM) Should this class exist?", "+", "+\t\treturn new ErrorReportingRunner(fClass, fCause);", "+//\t\tList<Throwable> goofs= getCauses(fCause);", "+//\t\tCompositeRunner runner= new CompositeRunner(fClass.getName());", "+//\t\tfor (int i= 0; i < goofs.size(); i++) {", "+//\t\t\tfinal Description description= Description.createTestDescription(fClass, \"initializationError\" + i);", "+//\t\t\tfinal Throwable throwable= goofs.get(i);", "+//\t\t\trunner.add(new ErrorReportingRunner(fClass, throwable));", "+//\t\t}", "+//\t\treturn runner;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd871d330164dc632b4ef92a489d0192", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/JUnitCommandLineParser.java", "commitBeforeChange": "b1cf4b5bc6ead8c3dfcbbb9ebe69be85f5e53cb8", "commitAfterChange": "56193048f411846a58c0e0377a5f1ccfecd3d2f9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r     String[] parseOptions(String[] args)", "signatureAfterChange": "\r \r     String[] parseOptions(String[] args)", "diff": ["-                                Description description = createSuiteDescription(arg);\r", "-                                Failure failure = new Failure(\r", "-                                        description,\r", "-                                        new CommandLineParserError(arg + \" value not specified\"));\r", "-                                failures.add(failure);\r", "+                                parserErrors.add(new CommandLineParserError(arg + \" value not specified\"));\r", "-                        Description description = createSuiteDescription(arg);\r", "-                        Failure failure = new Failure(\r", "-                                description,\r", "-                                new CommandLineParserError(\"JUnit knows nothing about the \" + arg + \" option\"));\r", "-\r", "-                        failures.add(failure);\r", "+                        parserErrors.add(new CommandLineParserError(\"JUnit knows nothing about the \" + arg + \" option\"));\r", "-                Description description = createSuiteDescription(arg);\r", "-                Failure failure = new Failure(description, e);\r", "-                failures.add(failure);\r", "+                parserErrors.add(e);\r", "-                Description description = createSuiteDescription(arg);\r", "-                Failure failure = new Failure(description, e);\r", "-                failures.add(failure);\r", "+                parserErrors.add(e);\r"]}]}