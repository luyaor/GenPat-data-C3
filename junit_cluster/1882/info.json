{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d151efa6cfb2b457e86d9c66fd608fa1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ea05f8e6735034d03f08bca3b34173e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/TemporaryFolderUsageTest.java", "commitBeforeChange": "2d3090bf96357c0d9387a4e8f87525f776e52799", "commitAfterChange": "6f8a359dde5b1e317f0bab2da3ac2b5bce117884", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tprivate void assertParentFolderForFileIs(String msg, File f, \t\t\tFile parentFolder)", "signatureAfterChange": "  \tprivate void assertParentFolderForFileIs(File f, File parentFolder)", "diff": ["-", "-\tprivate void assertParentFolderForFileIs(String msg, File f,", "-\t\t\tFile parentFolder) {", "-\t\tassertThat(msg + \": not under root\", f.getParentFile(),", "-\t\t\t\tis(parentFolder));", "+", "+\tprivate void assertParentFolderForFileIs(File f, File parentFolder) {", "+\t\tassertThat(\"'\" + f.getAbsolutePath() + \"': not under root\",", "+\t\t\t\tf.getParentFile(), is(parentFolder));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf70f36f0391d14b5094680d27bbbb3d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/ExpectedExceptionRuleTest.java", "commitBeforeChange": "53929101b4d9606d92dfd8d52e87f5dda467d51a", "commitAfterChange": "052fc095d5b4a8af643d0e4402a504716ad8eb03", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Test \tpublic void expectedExceptionClauseExists()", "signatureAfterChange": " \t \t@Test \tpublic void expectedExceptionClauseExists()", "diff": ["-", "-\t\t\t\tnew CauseMatcher(IllegalArgumentException.class));", "+\t\t\t\tfailureIs(causedBy(instanceOf(IllegalArgumentException.class))));"]}]}