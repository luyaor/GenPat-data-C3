{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e083adace26b5a1a7c817dc9298ff5d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32c0551244e1521064905d01a3d12db8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t@Deprecated \tprotected void validateInstanceMethods(List<Throwable> errors)", "signatureAfterChange": "     @Deprecated     protected void validateInstanceMethods(List<Throwable> errors)", "diff": ["-\t */", "-\t@Deprecated", "-\tprotected void validateInstanceMethods(List<Throwable> errors) {", "-\t\tvalidatePublicVoidNoArgMethods(After.class, false, errors);", "-\t\tvalidatePublicVoidNoArgMethods(Before.class, false, errors);", "-\t\tvalidateTestMethods(errors);", "+     */", "+    @Deprecated", "+    protected void validateInstanceMethods(List<Throwable> errors) {", "+        validatePublicVoidNoArgMethods(After.class, false, errors);", "+        validatePublicVoidNoArgMethods(Before.class, false, errors);", "+        validateTestMethods(errors);", "-\t\tif (computeTestMethods().size() == 0)", "-\t\t\terrors.add(new Exception(\"No runnable methods\"));", "-\t}", "+        if (computeTestMethods().size() == 0) {", "+            errors.add(new Exception(\"No runnable methods\"));", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c459f501b3f3d97595a0439ea869360d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "dc44abf520611a8722e75ba1d32df6a28183e4e3", "commitAfterChange": "bb91daf8e0939d787ffb5a3eda05c2d626cd9851", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t@Deprecated \tprotected void validateInstanceMethods(List<Throwable> errors)", "signatureAfterChange": "     @Deprecated     protected void validateInstanceMethods(List<Throwable> errors)", "diff": ["-\t */", "-\t@Deprecated", "-\tprotected void validateInstanceMethods(List<Throwable> errors) {", "-\t\tvalidatePublicVoidNoArgMethods(After.class, false, errors);", "-\t\tvalidatePublicVoidNoArgMethods(Before.class, false, errors);", "-\t\tvalidateTestMethods(errors);", "+     */", "+    @Deprecated", "+    protected void validateInstanceMethods(List<Throwable> errors) {", "+        validatePublicVoidNoArgMethods(After.class, false, errors);", "+        validatePublicVoidNoArgMethods(Before.class, false, errors);", "+        validateTestMethods(errors);", "-\t\tif (computeTestMethods().size() == 0)", "-\t\t\terrors.add(new Exception(\"No runnable methods\"));", "-\t}", "+        if (computeTestMethods().size() == 0) {", "+            errors.add(new Exception(\"No runnable methods\"));", "+        }", "+    }"]}]}