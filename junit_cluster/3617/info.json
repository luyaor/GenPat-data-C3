{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de141960d74896a9d84eb11af2b50cf9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d4442243c2ba166d32da31c21c83262", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/matchers/JUnitMatchers.java", "commitBeforeChange": "695ae54ef17fc658734119b5378b19ff754a9951", "commitAfterChange": "52e61a55e8ffcaab2586ea8fec28e4b01336cd30", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static <T> org.hamcrest.Matcher<java.lang.Iterable<T>> hasItem(org.hamcrest.Matcher<? extends T> elementMatcher)", "signatureAfterChange": " \t@Deprecated     public static <T> Matcher<Iterable<? super T>> hasItem(Matcher<? super T> elementMatcher)", "diff": ["-\tpublic static <T> org.hamcrest.Matcher<java.lang.Iterable<T>> hasItem(org.hamcrest.Matcher<? extends T> elementMatcher) {", "-\t\treturn IsCollectionContaining.hasItem(elementMatcher);", "+\t@Deprecated", "+    public static <T> Matcher<Iterable<? super T>> hasItem(Matcher<? super T> elementMatcher) {", "+\t\treturn CoreMatchers.hasItem(elementMatcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9f96aa6c354d8776ccbb57be9edf424", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/matchers/JUnitMatchers.java", "commitBeforeChange": "b1068dc55c95d1000e07b71d3a9d9a2fd26bfff9", "commitAfterChange": "d9cccce5034bb9876221d271914471b205220061", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static <T> org.hamcrest.Matcher<java.lang.Iterable<T>> hasItem(org.hamcrest.Matcher<? extends T> elementMatcher)", "signatureAfterChange": " \t@Deprecated \tpublic static <T> Matcher<Iterable<? super T>> hasItem(Matcher<? super T> elementMatcher)", "diff": ["-\tpublic static <T> org.hamcrest.Matcher<java.lang.Iterable<T>> hasItem(org.hamcrest.Matcher<? extends T> elementMatcher) {", "-\t\treturn IsCollectionContaining.hasItem(elementMatcher);", "+\t@Deprecated", "+\tpublic static <T> Matcher<Iterable<? super T>> hasItem(Matcher<? super T> elementMatcher) {", "+\t\treturn CoreMatchers.hasItem(elementMatcher);"]}]}