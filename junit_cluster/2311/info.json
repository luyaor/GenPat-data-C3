{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b2a5b7bff29b0d378db39e59a16bb5c4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1987a56819155ec338e4ac969e8f838f", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "4f94cdbb44242eef4dadbd8820a43883deb41386", "commitAfterChange": "395b46b73966551369e58ae65ee75783df132fa9", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tpublic TestResult doRun(Test suite, boolean wait)", "signatureAfterChange": " \t \tpublic TestResult doRun(Test suite, boolean wait)", "diff": ["-\t\tgetWriter().println();", "-\t\tgetWriter().println(\"Time: \"+elapsedTimeAsString(runTime));", "-\t\tprint(result);", "+\t\tfPrinter.print(result, runTime);", "-\t\tgetWriter().println();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22744a85eda696fbe3f8f6571297f370", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "1350d0562466adbea1a9f8408084acdd005bfc13", "commitAfterChange": "bd8a96dbbfe93f134f75c768e5c1254cff8a9e9f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t\tprotected void runWithCompleteAssignment(final Assignments complete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tInvocationTargetException, NoSuchMethodException, Throwable", "signatureAfterChange": "  \t\tprotected void runWithCompleteAssignment(final Assignments complete, EachTestNotifier notifier) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tInvocationTargetException, NoSuchMethodException, Throwable", "diff": ["-\t\tprotected void runWithCompleteAssignment(final Assignments complete)", "+\t\tprotected void runWithCompleteAssignment(final Assignments complete, EachTestNotifier notifier)", "-\t\t\t\tfinal Object freshInstance= complete.getTarget().getClass()", "-\t\t\t\t\t\t.getConstructor().newInstance();", "-\t\t\t\t//TODO since the context no longer carries an instance, I think (and the tests agree) that this is redundant", "-\t\t\t\t/* final EachTestNotifier thisContext= complete.getContext()", "-\t\t\t\t\t\t.withNewInstance(freshInstance); */", "+\t\t\t\tfinal Object freshInstance= createTest();", "-\t\t\t\t}, fTestMethod, freshInstance).run(complete.getContext()); ", "+\t\t\t\t}, fTestMethod, freshInstance).run(notifier); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f9b3ae81c72b8b004abd9fd5aa3a10f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TemporaryFolder.java", "commitBeforeChange": "982a75011a074ab25f2c96a1c2639c5b1ebb3b18", "commitAfterChange": "2d3090bf96357c0d9387a4e8f87525f776e52799", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic File newFolder() throws IOException", "signatureAfterChange": " \tpublic File newFolder() throws IOException", "diff": ["-\t\tFile createdFolder= File.createTempFile(\"junit\", \"\", folder);", "+\t\treturn createTemporaryFolderIn(getRoot());", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5763e8025c7ac391f36def0f95a2c692", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "9a629cbfbc732e6b3feb382bd10e872f84ddc510", "commitAfterChange": "d26e4d7876b5a4fa2100596d7e1cffe6ffdb21e3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic void testStarted(String testName)", "signatureAfterChange": " \t \tpublic void testStarted(String testName)", "diff": ["-\t\tgetWriter().print(\".\");", "-\t\tif (fColumn++ >= 40) {", "-\t\t\tgetWriter().println();", "-\t\t\tfColumn= 0;", "-\t\t}", "+\t\tfPrinter.testStarted(testName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75cc9bf73ef8ad8a6bcd6c82fce2cdbc", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "a14fc5f174c08a9ff6e97b266ae3d84efcbd84e6", "commitAfterChange": "9fbafd6a2e90dc2cd04ae71597cd5a56b96cc403", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void validatePublicVoid(boolean isStatic, List<Throwable> errors)", "signatureAfterChange": "     public void validatePublicVoid(boolean isStatic, List<Throwable> errors)", "diff": ["-        if (Modifier.isStatic(fMethod.getModifiers()) != isStatic) {", "+        if (isStatic() != isStatic) {", "-        if (!Modifier.isPublic(fMethod.getDeclaringClass().getModifiers())) {", "-            errors.add(new Exception(\"Class \" + fMethod.getDeclaringClass().getName() + \" should be public\"));", "+        if (!Modifier.isPublic(getDeclaringClass().getModifiers())) {", "+            errors.add(new Exception(\"Class \" + getDeclaringClass().getName() + \" should be public\"));", "-        if (!Modifier.isPublic(fMethod.getModifiers())) {", "+        if (!isPublic()) {"]}]}