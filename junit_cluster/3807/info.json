{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a184f949e6baba91cb70146bee88c72f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4f7a0cc8ba0b070407262ee6487434c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Request.java", "commitBeforeChange": "8c91ac2cb9da29edf75ae22dba1e1aaa60275176", "commitAfterChange": "432e3e27df0b072f3bab066cd33214913f4c7f32", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic static Request classes(Class<?>... classes)", "signatureAfterChange": " \tpublic static Request classes(Executioner asdfasdf, Class<?>... classes)", "diff": ["-\tpublic static Request classes(Class<?>... classes) {", "+\tpublic static Request classes(Executioner asdfasdf, Class<?>... classes) {", "-\t\t\treturn runner(new Suite(new AllDefaultPossibilitiesBuilder(true), classes));", "+\t\t\tAllDefaultPossibilitiesBuilder builder= new AllDefaultPossibilitiesBuilder(true);", "+\t\t\tSuite suite= asdfasdf.getSuite(builder, classes);", "+\t\t\treturn runner(suite);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d16e2cac5001e69e2f2c31d04afb0f4f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/AllMembersSupplier.java", "commitBeforeChange": "2ade5fd3aad123d6507b59ed5d48c8f030314f00", "commitAfterChange": "cc8497f28e1d5a46d7940a0b36556154c83d6f7a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void addArrayValues(String name, List<PotentialAssignment> list, Object array)", "signatureAfterChange": "      private void addArrayValues(ParameterSignature sig, String name, List<PotentialAssignment> list, Object array)", "diff": ["-    private void addArrayValues(String name, List<PotentialAssignment> list, Object array) {", "+    private void addArrayValues(ParameterSignature sig, String name, List<PotentialAssignment> list, Object array) {", "-            list.add(PotentialAssignment.forValue(name + \"[\" + i + \"]\", Array.get(array, i)));", "-        }", "-    }", "+            Object value = Array.get(array, i);", "+            if (sig.canAcceptValue(value)) {", "+                list.add(PotentialAssignment.forValue(name + \"[\" + i + \"]\", value));"]}]}