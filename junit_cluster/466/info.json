{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05c70d4c10eeaff054dc15aee8ce3a52", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "973a07e66cc6691afad641d651926eeb", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "b521f0caadb99cab821730ad5d451e826d38e0a9", "commitAfterChange": "467dd0725eb20d018339ae843e895f9cabcfb988", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private void failDueToMissingException() throws AssertionError", "signatureAfterChange": "      private void failDueToMissingException() throws AssertionError", "diff": ["-        String failureMessage;", "-        ", "-        if ( isMissingExceptionMessageEmpty() ) {", "-            String expectation = StringDescription.toString(fMatcherBuilder.build());", "-            failureMessage = \"Expected test to throw \" + expectation;", "-        } else {", "-            failureMessage = missingExceptionMessage;", "-        }", "-", "-        fail(failureMessage);", "+        fail(missingExceptionMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b14f08a8619c4578784caecaddb0f8f3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedException.java", "commitBeforeChange": "0f623cd1b1309e8b687aa5055d2b5c672be2a0d5", "commitAfterChange": "f40f106b3721c9b3f9a7d535df1027588d64dcaf", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "          private String missingExceptionMessage()", "signatureAfterChange": "          private String missingExceptionMessage()", "diff": ["-        if (isMissingExceptionMessageEmpty()) {", "-            String expectation = StringDescription.toString(fMatcherBuilder.build());", "-            return \"Expected test to throw \" + expectation;", "-        } else {", "-            return missingExceptionMessage;", "-        }        ", "-    }", "+        String expectation= StringDescription.toString(fMatcherBuilder.build());", "+        return format(missingExceptionMessage, expectation);"]}]}