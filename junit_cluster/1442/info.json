{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "39d718f4988b91b40702d7d6465f001f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f13566165858bc37ea97975233ca561", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/links/RunAfters.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic void evaluate() throws Throwable", "signatureAfterChange": "  \t@Override \tpublic void evaluate() throws Throwable", "diff": ["-\t\t\tList<TestMethod> afters= fElement.getAfters();", "-\t\t\tfor (TestMethod each : afters)", "+\t\t\tList<FrameworkMethod> afters= fElement.getAfters();", "+\t\t\tfor (FrameworkMethod each : afters)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "536a57c8987883bf267ac6a2f956db69", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestElement.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void runBefores(Object target) throws Throwable", "signatureAfterChange": "  \tpublic void runBefores(Object target) throws Throwable", "diff": ["-\t\t\tList<TestMethod> befores= getBefores();", "-\t\t\tfor (TestMethod before : befores)", "+\t\t\tList<FrameworkMethod> befores= getBefores();", "+\t\t\tfor (FrameworkMethod before : befores)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ad837dbdba5f1b5a988cdcfb93ea6ce", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestClass.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void validateMethods(Class<? extends Annotation> annotation, \t\t\tboolean isStatic, List<Throwable> errors)", "signatureAfterChange": "  \tpublic void validateMethods(Class<? extends Annotation> annotation, \t\t\tboolean isStatic, List<Throwable> errors)", "diff": ["-\t\tList<TestMethod> methods= getAnnotatedMethods(annotation);", "+\t\tList<FrameworkMethod> methods= getAnnotatedMethods(annotation);", "-\t\tfor (TestMethod eachTestMethod : methods) {", "+\t\tfor (FrameworkMethod eachTestMethod : methods) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ecd48952f1b6f4016b2cf2be50d4a5e", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t\tprotected void runWithCompleteAssignment(final Assignments complete) throws InstantiationException, \t\t\t\tIllegalAccessException, InvocationTargetException, \t\t\t\tNoSuchMethodException, Throwable", "signatureAfterChange": "  \t\tprotected void runWithCompleteAssignment(final Assignments complete) \t\t\t\tthrows InstantiationException, IllegalAccessException, \t\t\t\tInvocationTargetException, NoSuchMethodException, Throwable", "diff": ["-\t\tprotected void runWithCompleteAssignment(final Assignments complete) throws InstantiationException,", "-\t\t\t\tIllegalAccessException, InvocationTargetException,", "-\t\t\t\tNoSuchMethodException, Throwable {", "+\t\tprotected void runWithCompleteAssignment(final Assignments complete)", "+\t\t\t\tthrows InstantiationException, IllegalAccessException,", "+\t\t\t\tInvocationTargetException, NoSuchMethodException, Throwable {", "-\t\t\t\t\t", "+", "-\t\t\t\t\tpublic Statement childBlock(TestMethod method) {", "+\t\t\t\t\tpublic Statement childBlock(FrameworkMethod method) {", "-\t\t\t\t\t\t", "+", "-\t\t\t\t\t\t\t\t\t// TODO: (Oct 12, 2007 2:07:01 PM) DUP? even correct?", "+\t\t\t\t\t\t\t\t\t// TODO: (Oct 12, 2007 2:07:01 PM) DUP? even", "+\t\t\t\t\t\t\t\t\t// correct?", "-\t\t\t\t\t\t\t\t\t // TODO: (Oct 12, 2007 2:04:01 PM) nullsOk as argument to Assignments constructor", "+\t\t\t\t\t\t\t\t\t// TODO: (Oct 12, 2007 2:04:01 PM) nullsOk", "+\t\t\t\t\t\t\t\t\t// as argument to Assignments constructor", "-\t\t\t\t\t\t\t\t\t\treportParameterizedError(e, complete.getAllArguments(nullsOk()));", "-\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\treportParameterizedError(e, complete", "+\t\t\t\t\t\t\t\t\t\t\t.getAllArguments(nullsOk()));", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t", "+", "-\t\t\t\t\t", "+", "-\t\t\t\t\tprotected Statement invoke(TestMethod method, Object test) {", "+\t\t\t\t\tprotected Statement invoke(FrameworkMethod method, Object test) {", "-\t\t\t\t\t", "+", "-\t\t\t\t\tprotected Statement ignoreViolatedAssumptions(final Statement next) {", "+\t\t\t\t\tprotected Statement ignoreViolatedAssumptions(", "+\t\t\t\t\t\t\tfinal Statement next) {", "-\t\t\t\t\t\t", "+", "-\t\t\t\t\t\t\t\t\tnext.evaluate();\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\tnext.evaluate();", "-\t\t\t\t\t\t\t\t\t// TODO: (Oct 12, 2007 2:19:52 PM) This feels hacky", "+\t\t\t\t\t\t\t\t\t// TODO: (Oct 12, 2007 2:19:52 PM) This", "+\t\t\t\t\t\t\t\t\t// feels hacky", "-\t\t\t\t\t\t\t\t\t// TODO: (Oct 12, 2007 2:15:44 PM) Can I remove other calls?", "+\t\t\t\t\t\t\t\t\t// TODO: (Oct 12, 2007 2:15:44 PM) Can I", "+\t\t\t\t\t\t\t\t\t// remove other calls?", "-\t\t\t\t\t", "+", "-\t\t\t\t\t\t// TODO: (Oct 12, 2007 12:40:33 PM) honor assumption violations in JUnit4ClassRunner constructor invocations", "+\t\t\t\t\t\t// TODO: (Oct 12, 2007 12:40:33 PM) honor assumption", "+\t\t\t\t\t\t// violations in JUnit4ClassRunner constructor", "+\t\t\t\t\t\t// invocations", "-\t\t\t\t\t\treturn getTestClass().getJavaClass().getConstructors()[0].newInstance(complete.getConstructorArguments(nullsOk()));", "+\t\t\t\t\t\treturn getTestClass().getJavaClass().getConstructors()[0]", "+\t\t\t\t\t\t\t\t.newInstance(complete", "+\t\t\t\t\t\t\t\t\t\t.getConstructorArguments(nullsOk()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69857157ec01dc7cbf9e10b0dc2a4ab6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic void filter(Filter filter) throws NoTestsRemainException", "signatureAfterChange": "  \tpublic void filter(Filter filter) throws NoTestsRemainException", "diff": ["-\t\tfor (Iterator<TestMethod> iter= fTestMethods.iterator(); iter.hasNext();) {", "-\t\t\tTestMethod method= iter.next();", "+\t\tfor (Iterator<FrameworkMethod> iter= fTestMethods.iterator(); iter.hasNext();) {", "+\t\t\tFrameworkMethod method= iter.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8607dc772c5c88e3810dedeed8ac6a3b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tprotected List<TestMethod> computeTestMethods()", "signatureAfterChange": "  \t@Override \tprotected List<FrameworkMethod> computeTestMethods()", "diff": ["-\tprotected List<TestMethod> computeTestMethods() {", "+\tprotected List<FrameworkMethod> computeTestMethods() {", "-\t\tList<TestMethod> testMethods= super.computeTestMethods();", "+\t\tList<FrameworkMethod> testMethods= super.computeTestMethods();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d5d3152d8a5a498d1a0ca68ae34cba1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestElement.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void runAfters(Object target) throws Throwable", "signatureAfterChange": "  \tpublic void runAfters(Object target) throws Throwable", "diff": ["-\t\tList<TestMethod> afters= getAfters();", "-\t\tfor (TestMethod after : afters)", "+\t\tList<FrameworkMethod> afters= getAfters();", "+\t\tfor (FrameworkMethod after : afters)"]}]}