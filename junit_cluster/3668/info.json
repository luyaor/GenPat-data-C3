{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5355e41b69cccfb653a1fd1865a694d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cf57eb4d4b62231780f3ed1147d568c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/assertion/MultipleFailureExceptionTest.java", "commitBeforeChange": "91a7ff28a3879d4a409176e092887924700d08b6", "commitAfterChange": "cb818f191ea2b9fe563aa20c581b16f3f23b7c4c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test(expected = ExpectedException.class)     public void assertEmptyRethrowsSingleThrowable() throws Throwable", "signatureAfterChange": "      public void assertEmptyRethrowsSingleRuntimeException() throws Exception", "diff": ["-    @Test(expected = ExpectedException.class)", "-    public void assertEmptyRethrowsSingleThrowable() throws Throwable {", "-        MultipleFailureException.assertEmpty(", "-                Collections.<Throwable>singletonList(new ExpectedException(\"pesto\")));", "+    public void assertEmptyRethrowsSingleRuntimeException() throws Exception {", "+        Throwable exception= new ExpectedException(\"pesto\");", "+        List<Throwable> errors= Collections.singletonList(exception);", "+        try {", "+            MultipleFailureException.assertEmpty(errors);", "+            fail();", "+        } catch (ExpectedException e) {", "+            assertSame(e, exception);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51aef4a38e2c6c2548de1a9de5c15e7c", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/Assert.java", "commitBeforeChange": "e060609ca85c723422684450b46dade931b0948a", "commitAfterChange": "ee76b28e432a94c33160b3edc7cb60b6394ac0cc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic static void assertEquals(String message, Object[] expecteds, Object[] actuals)", "signatureAfterChange": " \tpublic static void assertEquals(String message, Object[] expecteds, Object[] actuals)", "diff": ["-\t\t\t\tassertEquals(header + \"arrays first differed at element \" + i + \";\", expected, actual);", "+\t\t\t\ttry {", "+\t\t\t\t\tassertEquals(message, expected, actual);", "+\t\t\t\t} catch (ArrayComparisonFailure e) {", "+\t\t\t\t\te.addDimension(i);", "+\t\t\t\t\tthrow e;", "+\t\t\t\t}", "-\t\t\t\tassertEquals(header + \"arrays first differed at element [\" + i + \"];\", o1, o2);", "+\t\t\t\ttry {", "+\t\t\t\t\tassertEquals(o1, o2);", "+\t\t\t\t} catch (AssertionError e) {", "+\t\t\t\t\tthrow new ArrayComparisonFailure(header, e, i);", "+\t\t\t\t}"]}]}