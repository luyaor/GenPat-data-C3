{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a2f2d5bd0ed5cf2ebb6d9a2cbab5e73", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "174bd431376e84e3a726168728a89945", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxStarterTest.java", "commitBeforeChange": "378e17964a4188bad9b3d966207a2f682072148e", "commitAfterChange": "451ca12156d5704809a1feff78a10a9451cd2023", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \t@Test public void newTestsHavePriorityOverTestsThatFailed()", "signatureAfterChange": " \t@Test public void preferNewTestsOverTestsThatFailed()", "diff": ["-\t@Test public void newTestsHavePriorityOverTestsThatFailed() {", "-\t//TODO work this out later", "+\t// which order they run, you just want them both to be early in the sequence", "+\t@Test public void preferNewTestsOverTestsThatFailed() {", "-\t\tDescription dontSucceed= Description.createTestDescription(TwoTests.class, \"dontSucceed\");", "-\t\tassertEquals(dontSucceed, things.get(0));", "+\t\tassertEquals(succeed, things.get(0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cf2e9907e7dbcb8157797f7f4ab2918", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "01ecc0d5bc9f8b49ed36881cc258573a43bef69f", "commitAfterChange": "7ffc23078cc11ce7502c375242b66d6a745ac9a1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t@Override \tprotected Description describeChild(FrameworkMethod method)", "signatureAfterChange": "  \t@Override \tprotected Description describeChild(FrameworkMethod method)", "diff": ["-\t\tDescription description= Description.createTestDescription(", "-\t\t\t\tgetTestClass().getJavaClass(), testName(method), method", "-\t\t\t\t\t\t.getAnnotations());", "-\t\tdescription.setParent(getDescription());", "-\t\treturn description;", "+\t\treturn Description.createTestDescription(getTestClass().getJavaClass(),", "+\t\t\t\ttestName(method), method.getAnnotations());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ff5e767c2f6e8ca08effab57a36c7ad", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "5077a8c714a3693e26e15932feeb3861175ac849", "commitAfterChange": "1d86784cd452e8d9e30d812255cadb75ef8dae15", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t@Override \tprotected Description describeChild(FrameworkMethod method)", "signatureAfterChange": "  \t@Override \tprotected Description describeChild(FrameworkMethod method)", "diff": ["-\t\tDescription description= Description.createTestDescription(", "-\t\t\t\tgetTestClass().getJavaClass(), testName(method), method", "-\t\t\t\t\t\t.getAnnotations());", "-\t\tdescription.setParent(getDescription());", "-\t\treturn description;", "+\t\treturn Description.createTestDescription(getTestClass().getJavaClass(),", "+\t\t\t\ttestName(method), method.getAnnotations());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b97b8015c242c53b48e5006d3ee3c549", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/runner/ReloadingTestSuiteLoader.java", "commitBeforeChange": "8a30e5a31972c7d43c17189b6b901baeee027561", "commitAfterChange": "a24fe64ac4c88a0bc449df76c627405faa100b6b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprotected TestCaseClassLoader createLoader()", "signatureAfterChange": " \t \tprotected TestCaseClassLoader createLoader()", "diff": ["-\t\tTestCaseClassLoader loader= new TestCaseClassLoader();", "-\t\tThread.currentThread().setContextClassLoader(loader);", "-\t\treturn loader;", "+\t\treturn new TestCaseClassLoader();"]}]}