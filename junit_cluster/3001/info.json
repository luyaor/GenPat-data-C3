{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "40d84ac3a45f50f76e841e380a4ac787", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27a35d524d73ee3aa2f80fd2b2222538", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/framework/JUnit4TestAdapterCache.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tTest createTest(Description description)", "signatureAfterChange": "      Test createTest(Description description)", "diff": ["-\tTest createTest(Description description) {", "-\t\tif (description.isTest())", "-\t\t\treturn new JUnit4TestCaseFacade(description);", "-\t\telse {", "-\t\t\tTestSuite suite = new TestSuite(description.getDisplayName());", "-\t\t\tfor (Description child : description.getChildren())", "-\t\t\t\tsuite.addTest(asTest(child));", "-\t\t\treturn suite;", "-\t\t}", "-\t}", "+    Test createTest(Description description) {", "+        if (description.isTest()) {", "+            return new JUnit4TestCaseFacade(description);", "+        } else {", "+            TestSuite suite = new TestSuite(description.getDisplayName());", "+            for (Description child : description.getChildren()) {", "+                suite.addTest(asTest(child));", "+            }", "+            return suite;", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28b73b1f00f3e1d7d3b23c0412e68786", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/junit/framework/JUnit4TestAdapterCache.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic List<Test> asTestList(Description description)", "signatureAfterChange": "      public List<Test> asTestList(Description description)", "diff": ["-\tpublic List<Test> asTestList(Description description) {", "-\t\tif (description.isTest())", "-\t\t\treturn Arrays.asList(asTest(description));", "-\t\telse {", "-\t\t\tList<Test> returnThis = new ArrayList<Test>();", "-\t\t\tfor (Description child : description.getChildren()) {", "-\t\t\t\treturnThis.add(asTest(child));", "-\t\t\t}", "-\t\t\treturn returnThis;", "-\t\t}", "-\t}", "+", "+    public List<Test> asTestList(Description description) {", "+        if (description.isTest()) {", "+            return Arrays.asList(asTest(description));", "+        } else {", "+            List<Test> returnThis = new ArrayList<Test>();", "+            for (Description child : description.getChildren()) {", "+                returnThis.add(asTest(child));", "+            }", "+            return returnThis;", "+        }", "+    }"]}]}