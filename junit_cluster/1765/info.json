{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5eea39f3492b5a9bca0316710e3d2f29", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "394168b7154519c3c755680b393bf65c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/junit/samples/ListTest.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void testCapacity()", "signatureAfterChange": "      public void testCapacity()", "diff": ["-\t}", "-\tpublic void testCapacity() {", "-\t\tint size= fFull.size(); ", "-\t\tfor (int i= 0; i < 100; i++)", "-\t\t\tfFull.add(new Integer(i));", "-\t\tassertTrue(fFull.size() == 100+size);", "-\t}", "+", "+    public void testCapacity() {", "+        int size = fFull.size();", "+        for (int i = 0; i < 100; i++) {", "+            fFull.add(new Integer(i));", "+        }", "+        assertTrue(fFull.size() == 100 + size);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cd94ab11b5c31e8fd0e0864cf72b4a1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/RunBefores.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tpublic void evaluate() throws Throwable", "signatureAfterChange": "      @Override     public void evaluate() throws Throwable", "diff": ["-\t@Override", "-\tpublic void evaluate() throws Throwable {", "-\t\tfor (FrameworkMethod before : fBefores)", "-\t\t\tbefore.invokeExplosively(fTarget);", "-\t\tfNext.evaluate();", "-\t}", "+    @Override", "+    public void evaluate() throws Throwable {", "+        for (FrameworkMethod before : fBefores) {", "+            before.invokeExplosively(fTarget);", "+        }", "+        fNext.evaluate();", "+    }"]}]}