{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a322d6a942f28917c401d50e5f3d0704", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cca2ca72ea71009c1ea335118521aac", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/tests/extension/CompositeRunnerTest.java", "commitBeforeChange": "f8a42db55bdb365a111ca0ab2175d804c55002af", "commitAfterChange": "804f76fdf00c9f9fcbef58f03bbeda1f80b3ad8e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\tpublic CompositeWithClass(Class<?> type)", "signatureAfterChange": " \t\tpublic CompositeWithClass(Class<?> type)", "diff": ["-\t\t\tsuper(type);", "+\t\t\tsuper(type, \"something\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32ccf1772436c195d1970b3c2b76bda0", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/AssumptionViolatedException.java", "commitBeforeChange": "2e53904ae22336000cdf8e12166436e18e538b87", "commitAfterChange": "3bb48f0a58eb44f36b6e03538a7db05b6c6da335", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic AssumptionViolatedException(String assumption)", "signatureAfterChange": " \tpublic AssumptionViolatedException(String assumption)", "diff": ["+\t */", "-\t\tthis(assumption, null);", "+\t\tthis(assumption, false, null, null);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bcdfaf796cfb5ba50e42b4cc291d3ad", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/listening/ResultTest.java", "commitBeforeChange": "e727dd6b1cb2caa1699da3b2df7625c9554adc36", "commitAfterChange": "95bd62b2ffd80394d1a17e9078a4d79478423030", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t@Test public void ignoringInMiddleDoesntCountAsRun() throws Exception", "signatureAfterChange": " \t@Test public void failedAssumptionDoesntCountAsRun() throws Exception", "diff": ["-\t@Test public void ignoringInMiddleDoesntCountAsRun() throws Exception {", "+\t@Test public void failedAssumptionDoesntCountAsRun() throws Exception {", "-\t\tlistener.testIgnored(someTest);", "+\t\tlistener.testAssumptionFailed(someTest, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "455d949e2777608bb506d29db75a5b52", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "1d982e5310d57fe0ea4b63e05f20215ee3add1fe", "commitAfterChange": "24a5aad1f49b4decf946f1df701e354a18544132", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprotected Description methodDescription(TestMethod method)", "signatureAfterChange": "  \t@Override \tprotected Description describeChild(TestMethod method)", "diff": ["-\tprotected Description methodDescription(TestMethod method) {", "+\t@Override", "+\tprotected Description describeChild(TestMethod method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5832ae0decdbbf11eaaa29a8f9305cfe", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/CompositeRunner.java", "commitBeforeChange": "07b834616b9c3ce07af47165c55fe64f93f165f4", "commitAfterChange": "0c5906ab0068de4852dc593ebe93356aeea639ca", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic CompositeRunner(String name)", "signatureAfterChange": " \t \tpublic CompositeRunner(String name)", "diff": ["+\t\tsuper(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f920c4099c70ebbe52fdbf1593c0851", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/links/IgnoreViolatedAssumptions.java", "commitBeforeChange": "0dbe9eefa369da78ca67bf5487797a8de5b2d631", "commitAfterChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \t@Override \tpublic void run() throws Throwable", "signatureAfterChange": " \t \t@Override \tpublic void evaluate() throws Throwable", "diff": ["-\tpublic void run() throws Throwable {", "+\tpublic void evaluate() throws Throwable {", "-\t\t\tfNext.run();", "+\t\t\tfNext.evaluate();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c3429deb6f8de644c0cc252e70f467a", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/textui/TestRunner.java", "commitBeforeChange": "29416b4ee89314119fb0f2d8011d63ac36531388", "commitAfterChange": "8817825612894d11856312a777281b6c7cf81672", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t\t \tprotected void runFailed(String message)", "signatureAfterChange": " \t\t \tprotected void runFailed(String message)", "diff": ["-\t\tSystem.exit(-1);", "+\t\tSystem.exit(FAILURE_EXIT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7add57ca5c106e8cd5bc6525b3dacefc", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "commitAfterChange": "44e7458b19d5cd1900a765a440c96e85b81d25fc", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tprotected Link anchor(TestMethod method)", "signatureAfterChange": " \t \tprotected Link invoke(TestMethod method)", "diff": ["+\t", "+\tprotected Link invoke(TestMethod method) {", "+\t\treturn new Invoke(method);", "+\t}", "-\t", "-\tprotected Link anchor(TestMethod method) {", "-\t\treturn new InvokeMethod(method);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bb255a0872863926ad6948b1690a8b4", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "1d982e5310d57fe0ea4b63e05f20215ee3add1fe", "commitAfterChange": "24a5aad1f49b4decf946f1df701e354a18544132", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tprotected List<TestMethod> getTestMethods()", "signatureAfterChange": "  \t@Override \tprotected List<TestMethod> computeTestMethods()", "diff": ["-\tprotected List<TestMethod> getTestMethods() {", "+\tprotected List<TestMethod> computeTestMethods() {", "-\t\tList<TestMethod> testMethods= super.getTestMethods();", "+\t\tList<TestMethod> testMethods= super.computeTestMethods();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c1fd4e4d894f259ad3ec432d39c1e5c", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/StatusLine.java", "commitBeforeChange": "1e752dcb0a967bcb47fae4b12fb8765e79571e69", "commitAfterChange": "bfc94ee739d62127c7477300b26127bd560765a1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic void clear()", "signatureAfterChange": " \t \tpublic void clear()", "diff": ["+\t\tsetToolTipText(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8131cf1cd5595ab1ede429ba712d5377", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/listening/ResultTest.java", "commitBeforeChange": "37a611801fbea6ecc9b6356d9616e761c8b59b91", "commitAfterChange": "d9c908b9aab5f610e2f42aba1863ce25e36423f2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t@Test public void failedAssumptionDoesntCountAsRun() throws Exception", "signatureAfterChange": " \t@Test public void failedAssumptionDoesntCountAsRun() throws Exception", "diff": ["-\t\tlistener.testAssumptionInvalid(someTest, null);", "+\t\tlistener.testIgnored(someTest);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f3cdde9588d63cd5d9f35b0411c1f8d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/ExpectedExceptionMatcher.java", "commitBeforeChange": "6bea82df32f687d636f1b843a1918a3a1ff22a6e", "commitAfterChange": "872faeab15115635b3260001979ae036e64e29bf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tvoid andHasMessage(Matcher<String> matcher)", "signatureAfterChange": "  \tvoid andAlsoHasMessage(Matcher<String> matcher)", "diff": ["-\tvoid andHasMessage(Matcher<String> matcher) {", "-\t\tand(hasMessage(matcher));", "+\tvoid andAlsoHasMessage(Matcher<String> matcher) {", "+\t\tandAlso(hasMessage(matcher));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab0b827354b6245dba22979c5f516907", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/assertion/AssertionTest.java", "commitBeforeChange": "751f75986b11336ac8310d73c89003b0b09ecb92", "commitAfterChange": "766343797294634c86186664c519d65d7d984c96", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 53, "signatureBeforeChange": " \t \t@Test public void nullMessage()", "signatureAfterChange": " \t \t@Test public void nullMessage()", "diff": ["-\t\t\tassertEquals(\"\", exception.getMessage());", "+\t\t\t// we used to expect getMessage() to return \"\"; see failWithNoMessageToString()", "+\t\t\tassertNull(exception.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0f94d59952bdb279155b277d89e5c72", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java", "commitBeforeChange": "1fa373f01d126d437f08a57a7b5e7a7ec0a01b85", "commitAfterChange": "8672a83f51b183c756649a423b908271c894b8df", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \t@Test \tpublic void numberOfFieldsAndParametersShouldMatch()", "signatureAfterChange": "  \t@Test \tpublic void numberOfFieldsAndParametersShouldMatch()", "diff": ["-\t\tResult result = JUnitCore.runClasses(BadNumberOfAnnotedFieldTest.class);", "+\t\tResult result = JUnitCore.runClasses(BadNumberOfAnnotatedFieldTest.class);", "-\t\tassertTrue(failures.get(0).getException().getMessage().contains(\"Wrong number of parameters and @parameter fields. @parameter fields counted: 1, available parameters: 2.\"));", "+\t\tassertTrue(failures.get(0).getException().getMessage().contains(\"Wrong number of parameters and @Parameter fields. @Parameter fields counted: 1, available parameters: 2.\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1683db1b092d92e20cd26c7a2997e77", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/StatusLine.java", "commitBeforeChange": "1e752dcb0a967bcb47fae4b12fb8765e79571e69", "commitAfterChange": "bfc94ee739d62127c7477300b26127bd560765a1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void showError(String status)", "signatureAfterChange": " \t \tpublic void showError(String status)", "diff": ["+\t\tsetToolTipText(status);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6064a1a909a2fbbb48b01a377270dc7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "a681b760978751ca4c4ccc6de616b0643d6c2b0e", "commitAfterChange": "7944e8f8afbeaff17d337304df52dac227034423", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic String getMethodName()", "signatureAfterChange": " \tpublic String getMethodName()", "diff": ["-\t\treturn parseMethod();", "+\t\treturn methodAndClassNamePatternGroupOrDefault(1, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8f49263cf30c4ccc6492d2fc9b7e54b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "4dcf3a499652b3c089d91e209c6f01313115ff76", "commitAfterChange": "a916d4133c7e394130d7953da427aae9917ab92c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate void printExceptions(String exceptionTypeName, String listPrefix, \t\t\tList<? extends Failure> exceptions)", "signatureAfterChange": "  \tprivate void printEvents(String exceptionTypeName, String listPrefix, \t\t\tList<? extends TestRunEvent> exceptions)", "diff": ["-\tprivate void printExceptions(String exceptionTypeName, String listPrefix,", "-\t\t\tList<? extends Failure> exceptions) {", "+\tprivate void printEvents(String exceptionTypeName, String listPrefix,", "+\t\t\tList<? extends TestRunEvent> exceptions) {", "-\t\tfor (Failure each : exceptions)", "+\t\tfor (TestRunEvent each : exceptions)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc3407eef9ff826f779a6bae5b02bf3c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TemporaryFolder.java", "commitBeforeChange": "982a75011a074ab25f2c96a1c2639c5b1ebb3b18", "commitAfterChange": "2d3090bf96357c0d9387a4e8f87525f776e52799", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void create() throws IOException", "signatureAfterChange": " \tpublic void create() throws IOException", "diff": ["-\t\tfolder= newFolder();", "+\t\tfolder= createTemporaryFolderIn(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfd2b280f4e450361ef0535b284653a6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/running/classes/ParameterizedTestTest.java", "commitBeforeChange": "61994e0c0aa768b43fad1ac6e35b1e43ffc8b142", "commitAfterChange": "97654ff38f976733fa4c6ae9b28e3fe10328183f", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 49, "signatureBeforeChange": "      @Test     public void runsEveryTestOfArray()", "signatureAfterChange": "      @Test     public void runsEveryTestOfArray()", "diff": ["-        Result result= JUnitCore.runClasses(FibonacciTestWithArray.class);", "-        assertEquals(7, result.getRunCount());", "+        Result result= JUnitCore.runClasses(AdditionTestWithArray.class);", "+        assertEquals(4, result.getRunCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d32e6156c3e39bbd97d80112778d9332", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/awtui/TestRunner.java", "commitBeforeChange": "bfc94ee739d62127c7477300b26127bd560765a1", "commitAfterChange": "04f4f3197084ad9ad7c050ce1a40d6f4421662f4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tprotected Frame createUI(String suiteName)", "signatureAfterChange": " \t \tprotected Frame createUI(String suiteName)", "diff": ["-\t\tLabel suiteLabel= new Label(\"Enter the name of the Test class:\");", "+\t\tLabel suiteLabel= new Label(\"Test class name:\");", "-\t\tboolean useLoader= useReoadingTestSuiteLoader();", "-\t\tfUseLoadingRunner= new Checkbox(\"Use custom class loader for loading tests\", useLoader);", "+\t\tboolean useLoader= useReloadingTestSuiteLoader();", "+\t\tfUseLoadingRunner= new Checkbox(\"Reload classes every run\", useLoader);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f70628303524f6b9027be921ae665b32", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/manipulation/Sorter.java", "commitBeforeChange": "63b1950468b19d91e368caa6ae804b2c4fefc6a8", "commitAfterChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public int compare(Description o1, Description o2)", "signatureAfterChange": "      public int compare(Description o1, Description o2)", "diff": ["-        return fComparator.compare(o1, o2);", "+        return comparator.compare(o1, o2);"]}]}