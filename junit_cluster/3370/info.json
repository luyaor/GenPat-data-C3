{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f2ec8e54ac0910d3d43012b5c7ad9cd", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84610143d605eb462322093ed7b7f629", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/rules/RuleFieldValidator.java", "commitBeforeChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "commitAfterChange": "759061a31775afd29ff99fd2a55969bd6aaa8c2f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private void validateMember(FrameworkMember<?> member, List<Throwable> errors)", "signatureAfterChange": "      private void validateMember(FrameworkMember<?> member, List<Throwable> errors)", "diff": ["-        validatePublicClass(member, errors);", "-        validateStatic(member, errors);", "-        validatePublic(member, errors);", "-        validateTestRuleOrMethodRule(member, errors);", "-    }", "+        for (RuleValidator strategy : validatorStrategies) {", "+            strategy.validate(member, annotation, errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e466ae0cdc97b4266c6dbf9e873ec4e6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/rules/RuleFieldValidator.java", "commitBeforeChange": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88", "commitAfterChange": "759061a31775afd29ff99fd2a55969bd6aaa8c2f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      private RuleFieldValidator(Class<? extends Annotation> annotation,             boolean methods, boolean staticMembers)", "signatureAfterChange": "      RuleFieldValidator(Builder builder)", "diff": ["-    private RuleFieldValidator(Class<? extends Annotation> annotation,", "-            boolean methods, boolean staticMembers) {", "-        this.annotation = annotation;", "-        this.staticMembers = staticMembers;", "-        this.methods = methods;", "+    RuleFieldValidator(Builder builder) {", "+        this.annotation = builder.annotation;", "+        this.methods = builder.methods;", "+        this.validatorStrategies = builder.validators;"]}]}