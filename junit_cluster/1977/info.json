{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "22b193b90ae22cfe7efd0c17a002caad", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30331832017a6e2ecc2272c9603945d8", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/TemporaryFolder.java", "commitBeforeChange": "59e5333b24d0e433de10d74c69e5de7700c6b744", "commitAfterChange": "2568203bdebd5a4a4ad9aa74b1d8369d22f668a3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic File newFolder(String folder)", "signatureAfterChange": " \tpublic File newFolder(String folder) throws IOException", "diff": ["-\tpublic File newFolder(String folder) {", "+\tpublic File newFolder(String folder) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a233187d13456df1e75abe5f1551aeb7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/TempFolderRuleTest.java", "commitBeforeChange": "59e5333b24d0e433de10d74c69e5de7700c6b744", "commitAfterChange": "2568203bdebd5a4a4ad9aa74b1d8369d22f668a3", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \t\t@Test \t\tpublic void testNewFolder()", "signatureAfterChange": "  \t\t@Test \t\tpublic void testNewFolder() throws IOException", "diff": ["-\t\tpublic void testNewFolder() {", "+\t\tpublic void testNewFolder() throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f47431d53e27e64648b82438ceea4dd9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/rules/TemporaryFolderUsageTest.java", "commitBeforeChange": "59e5333b24d0e433de10d74c69e5de7700c6b744", "commitAfterChange": "2568203bdebd5a4a4ad9aa74b1d8369d22f668a3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t@Test(expected= IllegalStateException.class) \tpublic void newFolderWithGivenPathThrowsIllegalStateExceptionIfCreateWasNotInvoked()", "signatureAfterChange": "  \t@Test(expected= IllegalStateException.class) \tpublic void newFolderWithGivenPathThrowsIllegalStateExceptionIfCreateWasNotInvoked() throws IOException", "diff": ["-\tpublic void newFolderWithGivenPathThrowsIllegalStateExceptionIfCreateWasNotInvoked() {", "+\tpublic void newFolderWithGivenPathThrowsIllegalStateExceptionIfCreateWasNotInvoked() throws IOException {"]}]}