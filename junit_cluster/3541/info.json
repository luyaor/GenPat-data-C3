{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "449a1a7280b974917381090920d724a0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a79108d9e8ddfe2b9711812fcf6a4e1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4ClassRunner.java", "commitBeforeChange": "bd7bff7c4ca18e1d0eab5260e585d3914e5fa53d", "commitAfterChange": "6acc164b4125da775cccd4035c1b99e9d404bacd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tprotected void invokeTestMethod(Method method, RunNotifier notifier)", "signatureAfterChange": "  \tprotected void invokeTestMethod(Method method, RunNotifier notifier)", "diff": ["+\t\tDescription description= methodDescription(method);", "-\t\t\tnotifier.testAborted(methodDescription(method), e.getCause());", "+\t\t\tnotifier.testAborted(description, e.getCause());", "-\t\t\tnotifier.testAborted(methodDescription(method), e);", "+\t\t\tnotifier.testAborted(description, e);", "-\t\tcreateMethodRunner(test, method, notifier).run();", "+\t\tTestMethod testMethod= wrapMethod(method);", "+\t\tnew MethodRoadie(test, testMethod, notifier, description).run();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cbb3c09441af187e81abf3cf2b2f3a6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java", "commitBeforeChange": "8ff0b44e3fb0c1c56a1dc6290c3b6828a5a8f9bf", "commitAfterChange": "bed58a573c373d57d64fa369f58b2a8f0dbee3d7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t@Override \tprotected void runChild(FrameworkMethod method, RunNotifier notifier)", "signatureAfterChange": "  \t@Override \tprotected void runChild(final FrameworkMethod method, RunNotifier notifier)", "diff": ["-\tprotected void runChild(FrameworkMethod method, RunNotifier notifier) {", "-\t\tEachTestNotifier eachNotifier= makeNotifier(method, notifier);", "+\tprotected void runChild(final FrameworkMethod method, RunNotifier notifier) {", "+\t\tDescription description= describeChild(method);", "-\t\t\trunIgnored(eachNotifier);", "+\t\t\tnotifier.fireTestIgnored(description);", "-\t\t\trunNotIgnored(method, eachNotifier);", "+\t\t\trunLeaf(methodBlock(method), description, notifier);", "-\t}"]}]}