{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48524448f9b8e2d4fbe3a761eef5842e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2abb7db8f137635633a32ebe81c0b168", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/ParentRunner.java", "commitBeforeChange": "4892e000aa5b890795b5082f636d6623b6f3820d", "commitAfterChange": "23415d78793163c399ec376bed6c72cc86d885e3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tpublic void filter(Filter filter) throws NoTestsRemainException", "signatureAfterChange": " \t \tpublic void filter(Filter filter) throws NoTestsRemainException", "diff": ["+\t\t", "+\t\t// TODO: (Dec 7, 2007 12:36:23 PM) can I avoid two loops?", "+", "+\t\tfor (T each : getChildren())", "+\t\t\tif (shouldRun(each))", "+\t\t\t\treturn;", "+\t\tthrow new NoTestsRemainException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f88cb7a82644a9f22042570b56cb3cd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "095d3f8df0708f98d41f5894a892388b6985c44f", "commitAfterChange": "50b9c949876189d8c4871471ec346988e4ccae06", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \t@Override \tprotected void validateTestMethods(List<Throwable> errors)", "signatureAfterChange": " \t \t@Override \tprotected void validateTestMethods(List<Throwable> errors)", "diff": ["-\t\t// Tests can have params", "-\t\t// TODO: should still be public, not static", "+\t\tfor (FrameworkMethod each : computeTestMethods())", "+\t\t\teach.validatePublicVoid(false, errors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5b18afefa121fb85bf3b2d77c6ec6f3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "fcf34a36ee94cde6a5d9157a472ca65a465756ac", "commitAfterChange": "01b427b3b89ce04d01f0ddbd746d13a175feec5b", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tpublic void sort(Sorter sorter)", "signatureAfterChange": "  \tpublic void sort(Sorter sorter)", "diff": ["+\t\tfor (T each : getFilteredChildren())", "+\t\t\tsortChild(each);", "+\t\tCollections.sort(getFilteredChildren(), comparator());"]}]}