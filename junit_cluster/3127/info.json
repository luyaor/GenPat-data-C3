{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb59ea93de0dba4bec848d2ba3159481", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c8601899bdca4ad9415a8a2b777bd95", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/InexactComparisonCriteria.java", "commitBeforeChange": "025ccd132c3f3189bcb7f05c2a189ae403e2c1d6", "commitAfterChange": "44e2ed65cd904fc03aecd3b0763856009294bdec", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void internalArrayEquals(String message, Object expecteds, \t\t\tObject actuals) throws ArrayComparisonFailure", "signatureAfterChange": " \t@Override \tprotected void assertElementsEqual(Object expected, Object actual)", "diff": ["-\t */", "-\tpublic void internalArrayEquals(String message, Object expecteds,", "-\t\t\tObject actuals) throws ArrayComparisonFailure {", "-\t\t// TODO: DUP above", "-\t\t// TODO (Sep 8, 2008 4:32:50 PM): Test that this fails sometimes", "-\t\t// TODO (Sep 8, 2008 4:33:04 PM): Update javadoc", "-\t\t", "-\t\tif (expecteds == actuals)", "-\t\t\treturn;", "-\t\tString header= message == null ? \"\" : message + \": \";", "-\t\t", "-\t\tint expectedsLength= Assert.assertArraysAreSameLength(expecteds, actuals,", "-\t\t\t\theader);", "-", "-\t\tfor (int i= 0; i < expectedsLength; i++) {", "-\t\t\tObject expected= Array.get(expecteds, i);", "-\t\t\tObject actual= Array.get(actuals, i);", "-\t\t\t", "-\t\t\tif (Assert.isArray(expected) && Assert.isArray(actual)) {", "-\t\t\t\ttry {", "-\t\t\t\t\tinternalArrayEquals(message, expected, actual);", "-\t\t\t\t} catch (ArrayComparisonFailure e) {", "-\t\t\t\t\te.addDimension(i);", "-\t\t\t\t\tthrow e;", "-\t\t\t\t}", "-\t\t\t} else", "-\t\t\t\ttry {", "-\t\t\t\t\tif (expected instanceof Double)", "-\t\t\t\t\t\tAssert.assertEquals((Double)expected, (Double)actual, fDelta);", "-\t\t\t\t\telse", "-\t\t\t\t\t\tAssert.assertEquals((Float)expected, (Float)actual, fDelta);", "-\t\t\t\t} catch (AssertionError e) {", "-\t\t\t\t\tthrow new ArrayComparisonFailure(header, e, i);", "-\t\t\t\t}", "-\t\t}", "+\t// TODO (Apr 29, 2009 4:43:46 PM): Look for missing JavaDoc", "+\t@Override", "+\tprotected void assertElementsEqual(Object expected, Object actual) {", "+\t\tif (expected instanceof Double)", "+\t\t\tAssert.assertEquals((Double)expected, (Double)actual, fDelta);", "+\t\telse", "+\t\t\tAssert.assertEquals((Float)expected, (Float)actual, fDelta);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cad9599ed6e5613857f0675c67587ab9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/InexactComparisonCriteria.java", "commitBeforeChange": "3d6e99e93d7ba7360bfed1c213114648e8c70849", "commitAfterChange": "11f0abd09655be84d94d3013cf0c46f8239369e6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void internalArrayEquals(String message, Object expecteds, \t\t\tObject actuals) throws ArrayComparisonFailure", "signatureAfterChange": " \t@Override \tprotected void assertElementsEqual(Object expected, Object actual)", "diff": ["-\t */", "-\tpublic void internalArrayEquals(String message, Object expecteds,", "-\t\t\tObject actuals) throws ArrayComparisonFailure {", "-\t\t// TODO: DUP above", "-\t\t// TODO (Sep 8, 2008 4:32:50 PM): Test that this fails sometimes", "-\t\t// TODO (Sep 8, 2008 4:33:04 PM): Update javadoc", "-\t\t", "-\t\tif (expecteds == actuals)", "-\t\t\treturn;", "-\t\tString header= message == null ? \"\" : message + \": \";", "-\t\t", "-\t\tint expectedsLength= Assert.assertArraysAreSameLength(expecteds, actuals,", "-\t\t\t\theader);", "-", "-\t\tfor (int i= 0; i < expectedsLength; i++) {", "-\t\t\tObject expected= Array.get(expecteds, i);", "-\t\t\tObject actual= Array.get(actuals, i);", "-\t\t\t", "-\t\t\tif (Assert.isArray(expected) && Assert.isArray(actual)) {", "-\t\t\t\ttry {", "-\t\t\t\t\tinternalArrayEquals(message, expected, actual);", "-\t\t\t\t} catch (ArrayComparisonFailure e) {", "-\t\t\t\t\te.addDimension(i);", "-\t\t\t\t\tthrow e;", "-\t\t\t\t}", "-\t\t\t} else", "-\t\t\t\ttry {", "-\t\t\t\t\tif (expected instanceof Double)", "-\t\t\t\t\t\tAssert.assertEquals((Double)expected, (Double)actual, fDelta);", "-\t\t\t\t\telse", "-\t\t\t\t\t\tAssert.assertEquals((Float)expected, (Float)actual, fDelta);", "-\t\t\t\t} catch (AssertionError e) {", "-\t\t\t\t\tthrow new ArrayComparisonFailure(header, e, i);", "-\t\t\t\t}", "-\t\t}", "+\t// TODO (Apr 29, 2009 4:43:46 PM): Look for missing JavaDoc", "+\t@Override", "+\tprotected void assertElementsEqual(Object expected, Object actual) {", "+\t\tif (expected instanceof Double)", "+\t\t\tAssert.assertEquals((Double)expected, (Double)actual, fDelta);", "+\t\telse", "+\t\t\tAssert.assertEquals((Float)expected, (Float)actual, fDelta);"]}]}