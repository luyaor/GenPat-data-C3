{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d65f18dd7a8de6b26b7b19dfac985d73", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d48da7f147983d22cbb6912d65dfd78a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/Theories.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \t\tprivate boolean nullsOk()", "signatureAfterChange": "          private boolean nullsOk()", "diff": ["-\t\tprivate boolean nullsOk() {", "-\t\t\tTheory annotation= fTestMethod.getMethod().getAnnotation(", "-\t\t\t\t\tTheory.class);", "-\t\t\tif (annotation == null)", "-\t\t\t\treturn false;", "-\t\t\treturn annotation.nullsAccepted();", "-\t\t}", "+        private boolean nullsOk() {", "+            Theory annotation = fTestMethod.getMethod().getAnnotation(", "+                    Theory.class);", "+            if (annotation == null) {", "+                return false;", "+            }", "+            return annotation.nullsAccepted();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb33fc6aff032c9403ab7f350d0f71f6", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/TestMethod.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic long getTimeout()", "signatureAfterChange": "      public long getTimeout()", "diff": ["-\tpublic long getTimeout() {", "-\t\tTest annotation= fMethod.getAnnotation(Test.class);", "-\t\tif (annotation == null)", "-\t\t\treturn 0;", "-\t\tlong timeout= annotation.timeout();", "-\t\treturn timeout;", "-\t}", "+    public long getTimeout() {", "+        Test annotation = fMethod.getAnnotation(Test.class);", "+        if (annotation == null) {", "+            return 0;", "+        }", "+        long timeout = annotation.timeout();", "+        return timeout;", "+    }"]}]}