{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "448655913a4abbacd03d82790fe6c31f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26f5d236cfa7c4aa245ab55300c085e9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/requests/ClassRequest.java", "commitBeforeChange": "96af9a2a520a40404971968ee14a183d0aed1c4b", "commitAfterChange": "0ce71108da6f487d76c0f4dc46cde41e11dd3daa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public Runner getRunner()", "signatureAfterChange": "      @Override     public Runner getRunner()", "diff": ["+        if (fRunner == null) {", "+            synchronized (fRunnerLock) {", "+                if (fRunner == null) {", "+                    fRunner = new AllDefaultPossibilitiesBuilder(fCanUseSuiteMethod).safeRunnerForClass(fTestClass);", "+                }", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5802daf6eac1364e61ba52d8ea66d9c", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/AssumptionViolatedException.java", "commitBeforeChange": "2e53904ae22336000cdf8e12166436e18e538b87", "commitAfterChange": "3bb48f0a58eb44f36b6e03538a7db05b6c6da335", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void describeTo(Description description)", "signatureAfterChange": "  \tpublic void describeTo(Description description)", "diff": ["-\t\tif (fMatcher != null) {", "+\t\tif (fAssumption != null)", "+\t\t\tdescription.appendText(fAssumption);", "+", "+\t\tif (fValueMatcher) {", "+\t\t\tif (fAssumption != null)", "+\t\t\t\tdescription.appendText(\": \");", "+", "-\t\t\tdescription.appendText(\", expected: \");", "-\t\t\tdescription.appendDescriptionOf(fMatcher);", "-\t\t} else {", "-\t\t\tdescription.appendText(\"failed assumption: \" + fValue);", "+\t\t\t", "+\t\t\tif (fMatcher != null) {", "+\t\t\t\tdescription.appendText(\", expected: \");", "+\t\t\t\tdescription.appendDescriptionOf(fMatcher);", "+\t\t\t}"]}]}