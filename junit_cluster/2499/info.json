{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9034569853c53d524e8f080647ef2fbe", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c493965147cc6a55857caa4117876d3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "34e66740b9117ce85cfd416f9e931b2e533ab16e", "commitAfterChange": "85b7c26e63f851004ce20d4a00fbf1b46607ab0c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void throwTimeoutException(StatementThread thread) throws Exception", "signatureAfterChange": "      private Exception createTimeoutException(Thread thread)", "diff": ["-    private void throwTimeoutException(StatementThread thread) throws Exception {", "+", "+    private Exception createTimeoutException(Thread thread) {", "+        StackTraceElement[] stackTrace = thread.getStackTrace();", "-        exception.setStackTrace(thread.getRecordedStackTrace());", "-        throw exception;", "+        if (stackTrace != null) {", "+            exception.setStackTrace(stackTrace);", "+            thread.interrupt();", "+        }", "+        return exception;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6897de043a5f2802e0b1325317a25943", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "7eef2314cb78d41def996cdd80c5a56c94a993f3", "commitAfterChange": "35b428a24bdd2eddd9653189632896d4f5b1ce42", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private Exception createTimeoutException(Thread thread)", "signatureAfterChange": "      private Exception createTimeoutException(Thread thread)", "diff": ["-        Exception resultException;", "+        if (stackTrace != null) {", "+            currThreadException.setStackTrace(stackTrace);", "+            thread.interrupt();", "+        }", "-            resultException = new MultipleFailureException    ", "+            return new MultipleFailureException    ", "-            resultException = currThreadException;", "+            return currThreadException;", "-        if (stackTrace != null) {", "-            currThreadException.setStackTrace(stackTrace);", "-            thread.interrupt();", "-        }", "-        return resultException;"]}]}