{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "139ee15582340ce650530c005d94f3b2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75cc9bf73ef8ad8a6bcd6c82fce2cdbc", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "a14fc5f174c08a9ff6e97b266ae3d84efcbd84e6", "commitAfterChange": "9fbafd6a2e90dc2cd04ae71597cd5a56b96cc403", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void validatePublicVoid(boolean isStatic, List<Throwable> errors)", "signatureAfterChange": "     public void validatePublicVoid(boolean isStatic, List<Throwable> errors)", "diff": ["-        if (Modifier.isStatic(fMethod.getModifiers()) != isStatic) {", "+        if (isStatic() != isStatic) {", "-        if (!Modifier.isPublic(fMethod.getDeclaringClass().getModifiers())) {", "-            errors.add(new Exception(\"Class \" + fMethod.getDeclaringClass().getName() + \" should be public\"));", "+        if (!Modifier.isPublic(getDeclaringClass().getModifiers())) {", "+            errors.add(new Exception(\"Class \" + getDeclaringClass().getName() + \" should be public\"));", "-        if (!Modifier.isPublic(fMethod.getModifiers())) {", "+        if (!isPublic()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa17e68ceca0ffa2082e7ed14d7c40fe", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/experimental/validator/AnnotationValidatorFactoryTest.java", "commitBeforeChange": "1273a35689bdcb3304f6634cdc3889c61f9b1b1f", "commitAfterChange": "d3ee5d06c0b797ce812cbfe35addc6146d5f07cb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void nullArgumentReturnsDefaultAnnotationValidator()", "signatureAfterChange": "          public Class<? extends Annotation> annotationType()", "diff": ["-    public void nullArgumentReturnsDefaultAnnotationValidator() {", "-        AnnotationValidator annotationValidator = new AnnotationValidatorFactory().createAnnotationValidator(null);", "-        assertThat(annotationValidator, is(instanceOf(AnnotationValidator.class)));", "-    }", "+", "+        public Class<? extends Annotation> annotationType() {", "+            return ValidateWith.class;"]}]}