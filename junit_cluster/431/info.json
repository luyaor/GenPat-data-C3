{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "211ddb3fed303bcfa7d3dabf36546646", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d17e395f4ab7c1431cc8ba859c1f3629", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/runners/Parameterized.java", "commitBeforeChange": "b0c0b79ae5e0dcfc1670cf950d31a14f1c9c630c", "commitAfterChange": "c73e37759ed5119900f1ddf3f50dac5bb3ae19be", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t\tpublic RunAllParameterMethods(Class<?> klass) throws Exception", "signatureAfterChange": "  \t\tpublic RunAllParameterMethods(Class<?> klass) throws Exception", "diff": ["-\t\t\tfor (final Object[] parameters : getParametersList()) {", "-\t\t\t\tsuper.add(new TestClassRunnerForParameters(klass, parameters, i++));", "+\t\t\tfor (final Object each : getParametersList()) {", "+\t\t\t\tif (each instanceof Object[])", "+\t\t\t\t\tsuper.add(new TestClassRunnerForParameters(klass, (Object[])each, i++));", "+\t\t\t\telse", "+\t\t\t\t\tthrow new Exception(String.format(\"%s.%s() must return a Collection of arrays.\", fKlass.getName(), getParametersMethod().getName()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fac7fe694d8248d521b98513933bfb57", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/Parameterized.java", "commitBeforeChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "commitAfterChange": "2807ff63d6b408a927fd3dd684a42a2366677657", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic Parameterized(Class<?> klass) throws Throwable", "signatureAfterChange": "  \tpublic Parameterized(Class<?> klass) throws Throwable", "diff": ["-\t\t", "-\t\t", "-\t\t// TODO: (Nov 5, 2007 9:52:50 AM) Can I get rid of this?", "-\t\tfor (final Object each : fParameters) {", "-\t\t\tif (!(each instanceof Object[]))", "-\t\t\t\tthrow new Exception(String.format(", "-\t\t\t\t\t\t\"%s.%s() must return a Collection of arrays.\",", "-\t\t\t\t\t\tfTestClass.getName(), getParametersMethod().getName()));", "-\t\t}"]}]}