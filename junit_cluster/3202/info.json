{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad227c843010060ee87216f69c162256", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45b1602134eb62371b38c5591e7dd9e2", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/JUnit4MethodRunner.java", "commitBeforeChange": "679e5dd3e4af3115492fabed45ea8c48bfa9d9bf", "commitAfterChange": "4081076e513e84bb2376f889d4108e64e9a18653", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprotected void runWithExpectedExceptionCheck(final Roadie context)", "signatureAfterChange": " \t\tpublic ExpectedException(Anchor next)", "diff": ["+\t\tAnchor fNext;", "+\t\tpublic ExpectedException(Anchor next) {", "+\t\t\tfNext= next;", "+\t\t}", "-", "-\tprotected void runWithExpectedExceptionCheck(final Roadie context) {", "-\t\ttry {", "-\t\t\trunInsideExpectedExceptionCheck(context);", "-", "-\t\t\tfTestMethod.assertNoExceptionExpected(context);", "-\t\t} catch (Throwable e) {", "-\t\t\tif (e instanceof AssumptionViolatedException) {", "-\t\t\t\t// do nothing", "-\t\t\t} else", "-\t\t\t\tfTestMethod.assertExceptionExpected(context, e);", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81de1a6abe32a58d2ccd35649a2e9d61", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/TheoryMethodRunner.java", "commitBeforeChange": "679e5dd3e4af3115492fabed45ea8c48bfa9d9bf", "commitAfterChange": "4081076e513e84bb2376f889d4108e64e9a18653", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t\t\t@Override \t\t\tpublic void run(Roadie context)", "signatureAfterChange": "  \t@Override \tprotected TheoryAnchor anchor()", "diff": ["-\t\tnew Notifier(new Link() {", "-\t\t\t@Override", "-\t\t\tpublic void run(Roadie context) {", "-\t\t\t\trunWithExpectedExceptionCheck(context);", "-\t\t\t}\t\t\t", "+\tprotected TheoryAnchor anchor() {", "+\t\treturn new TheoryAnchor();"]}]}