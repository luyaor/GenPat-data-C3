{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c2628d851b068f0db9a07b85f99b745", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f5ef7fefae509c61691ee8745eb452d", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/notification/RunNotifier.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t\tvoid run()", "signatureAfterChange": "          void run()", "diff": ["-\t\tvoid run() {", "-\t\t\tsynchronized (fListeners) {", "-\t\t\t\tList<RunListener> safeListeners= new ArrayList<RunListener>();", "-\t\t\t\tList<Failure> failures= new ArrayList<Failure>();", "-\t\t\t\tfor (Iterator<RunListener> all= fCurrentListeners.iterator(); all", "-\t\t\t\t\t\t.hasNext();)", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tRunListener listener= all.next();", "-\t\t\t\t\t\tnotifyListener(listener);", "-\t\t\t\t\t\tsafeListeners.add(listener);", "-\t\t\t\t\t} catch (Exception e) {", "-\t\t\t\t\t\tfailures.add(new Failure(Description.TEST_MECHANISM, e));", "-\t\t\t\t\t}", "-\t\t\t\tfireTestFailures(safeListeners, failures);", "-\t\t\t}", "-\t\t}", "+        void run() {", "+            synchronized (fListeners) {", "+                List<RunListener> safeListeners = new ArrayList<RunListener>();", "+                List<Failure> failures = new ArrayList<Failure>();", "+                for (Iterator<RunListener> all = fCurrentListeners.iterator(); all", "+                        .hasNext(); ) {", "+                    try {", "+                        RunListener listener = all.next();", "+                        notifyListener(listener);", "+                        safeListeners.add(listener);", "+                    } catch (Exception e) {", "+                        failures.add(new Failure(Description.TEST_MECHANISM, e));", "+                    }", "+                }", "+                fireTestFailures(safeListeners, failures);", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b67a41a0c8cdc01fb43dec60f4ef9d6a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tpublic void sort(Sorter sorter)", "signatureAfterChange": "      public void sort(Sorter sorter)", "diff": ["-\tpublic void sort(Sorter sorter) {", "-\t\tfSorter= sorter;", "-\t\tfor (T each : getFilteredChildren())", "-\t\t\tsortChild(each);", "-\t\tCollections.sort(getFilteredChildren(), comparator());", "-\t}", "+", "+    public void sort(Sorter sorter) {", "+        fSorter = sorter;", "+        for (T each : getFilteredChildren()) {", "+            sortChild(each);", "+        }", "+        Collections.sort(getFilteredChildren(), comparator());", "+    }"]}]}