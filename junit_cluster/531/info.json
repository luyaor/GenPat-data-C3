{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "49227c0a460adb60bcf9a52333e7268c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d5aa5535d32d06e8fefe2568bd48199", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/junit/samples/money/MoneyBag.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t@Override \tpublic boolean equals(Object anObject)", "signatureAfterChange": "      @Override     public boolean equals(Object anObject)", "diff": ["-\t}", "-\t@Override", "-\tpublic boolean equals(Object anObject) {", "-\t\tif (isZero())", "-\t\t\tif (anObject instanceof IMoney)", "-\t\t\t\treturn ((IMoney)anObject).isZero();", "-\t\tif (anObject instanceof MoneyBag) {", "-\t\t\tMoneyBag aMoneyBag= (MoneyBag)anObject;", "-\t\t\tif (aMoneyBag.fMonies.size() != fMonies.size())", "-\t\t\t\treturn false;", "-\t\t    for (Money each : fMonies)", "-\t\t        if (! aMoneyBag.contains(each))", "-\t\t\t\t\treturn false;", "-\t\t\treturn true;", "-\t\t}", "-\t\treturn false;", "-\t}", "+", "+    @Override", "+    public boolean equals(Object anObject) {", "+        if (isZero()) {", "+            if (anObject instanceof IMoney) {", "+                return ((IMoney) anObject).isZero();", "+            }", "+        }", "+", "+        if (anObject instanceof MoneyBag) {", "+            MoneyBag aMoneyBag = (MoneyBag) anObject;", "+            if (aMoneyBag.fMonies.size() != fMonies.size()) {", "+                return false;", "+            }", "+", "+            for (Money each : fMonies) {", "+                if (!aMoneyBag.contains(each)) {", "+                    return false;", "+                }", "+            }", "+            return true;", "+        }", "+        return false;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83a6d47402db6e4ba7f7e9d70d9b4480", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/categories/Categories.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t\tprivate boolean hasCorrectCategoryAnnotation(Description description)", "signatureAfterChange": "          private boolean hasCorrectCategoryAnnotation(Description description)", "diff": ["-\t\tprivate boolean hasCorrectCategoryAnnotation(Description description) {", "-\t\t\tList<Class<?>> categories= categories(description);", "-\t\t\tif (categories.isEmpty())", "-\t\t\t\treturn fIncluded == null;", "-\t\t\tfor (Class<?> each : categories)", "-\t\t\t\tif (fExcluded != null && fExcluded.isAssignableFrom(each))", "-\t\t\t\t\treturn false;", "-\t\t\tfor (Class<?> each : categories)", "-\t\t\t\tif (fIncluded == null || fIncluded.isAssignableFrom(each))", "-\t\t\t\t\treturn true;", "-\t\t\treturn false;", "-\t\t}", "+        private boolean hasCorrectCategoryAnnotation(Description description) {", "+            List<Class<?>> categories = categories(description);", "+            if (categories.isEmpty()) {", "+                return fIncluded == null;", "+            }", "+            for (Class<?> each : categories) {", "+                if (fExcluded != null && fExcluded.isAssignableFrom(each)) {", "+                    return false;", "+                }", "+            }", "+            for (Class<?> each : categories) {", "+                if (fIncluded == null || fIncluded.isAssignableFrom(each)) {", "+                    return true;", "+                }", "+            }", "+            return false;", "+        }"]}]}