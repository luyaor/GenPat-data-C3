{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f50b12c998f347f707cd6d215787c57", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5af028209a47777e04cfb70decb5b33f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/Parameterized.java", "commitBeforeChange": "c391c25b230e880289484202f3dc3aa81c373a1c", "commitAfterChange": "495a9a93e4a1157e707a01467e7cc3f600c88d19", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private FrameworkMethod getParametersMethod() throws Exception", "signatureAfterChange": "          private FrameworkMethod getParametersMethod() throws Exception", "diff": ["-    private FrameworkMethod getParametersMethod() throws Exception {", "-        List<FrameworkMethod> methods = getTestClass().getAnnotatedMethods(", "-                Parameters.class);", "-        for (FrameworkMethod each : methods) {", "-            if (each.isStatic() && each.isPublic()) {", "-                return each;", "-        throw new Exception(\"No public static parameters method on class \"", "-                + getTestClass().getName());", "-    }", "+        private FrameworkMethod getParametersMethod() throws Exception {", "+            List<FrameworkMethod> methods = testClass", "+                    .getAnnotatedMethods(Parameters.class);", "+            for (FrameworkMethod each : methods) {", "+                if (each.isStatic() && each.isPublic()) {", "+                    return each;", "+                }", "+            }", "+", "+            throw new Exception(\"No public static parameters method on class \"", "+                    + testClass.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb86d4cb49004fb6c36cd4ecd68563dc", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tprivate void appendFailure(String kind, Test test, Throwable t)", "signatureAfterChange": " \t \tprivate void appendFailure(String kind, Test test, Throwable t)", "diff": ["-\t\t\tfFailureList.setSelectedIndex(0);", "+\t\t\trevealFailure(test);", "+\t}"]}]}