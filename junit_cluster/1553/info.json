{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95d978dfa06152b3de9c0ff6a4ae0235", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "177f75c927e5483dde2a1ac3ce748ef9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b", "commitAfterChange": "59b1e2926cdebfd257c6c091ee2bd478d8aa04d2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic Object[] getActualValues(boolean nullsOk, Object target) \t\t\tthrows CouldNotGenerateValueException", "signatureAfterChange": "  \tpublic Object[] getActualValues(boolean nullsOk, int start, int stop) throws CouldNotGenerateValueException", "diff": ["-\tpublic Object[] getActualValues(boolean nullsOk, Object target)", "-\t\t\tthrows CouldNotGenerateValueException {", "-\t\tObject[] values= new Object[fAssigned.size()];", "-\t\tfor (int i= 0; i < values.length; i++) {", "-\t\t\tvalues[i]= fAssigned.get(i).getValue(target);", "+\tpublic Object[] getActualValues(boolean nullsOk, int start, int stop) throws CouldNotGenerateValueException {", "+\t\tObject[] values= new Object[stop - start];", "+\t\tfor (int i= start; i < stop; i++) {", "+\t\t\tvalues[i]= fAssigned.get(i).getValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebae8cc40c85ee791739e65082aeb2d7", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/theories/internal/Assignments.java", "commitBeforeChange": "e012e06dc326394a3a834d974e9af3fea0e6df91", "commitAfterChange": "5c2070d7cf981e2e103aef6fd0ef64c473331325", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public Object[] getActualValues(int start, int stop, boolean nullsOk)             throws CouldNotGenerateValueException", "signatureAfterChange": "      public Object[] getActualValues(int start, int stop)              throws CouldNotGenerateValueException", "diff": ["-    public Object[] getActualValues(int start, int stop, boolean nullsOk)", "+    public Object[] getActualValues(int start, int stop) ", "-            Object value = fAssigned.get(i).getValue();", "-            if (value == null && !nullsOk) {", "-                throw new CouldNotGenerateValueException();", "-            }", "-            values[i - start] = value;", "+            values[i - start] = fAssigned.get(i).getValue();"]}]}