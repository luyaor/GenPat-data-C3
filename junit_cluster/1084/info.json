{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7b32ba6346f1473251f4a0147abcc58", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48b4e71f96051c0350f55d0b41fbbf47", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "8435a2a04e66546490344a028052f648b5f9f213", "commitAfterChange": "13bda470bfa1fe989ce80d616fb096af1b937146", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t\t@Override \t\tpublic List<T> getChildren()", "signatureAfterChange": "  \tprivate boolean shouldParallelize(Runner runner)", "diff": ["-", "-\t\t@Override", "-\t\tpublic List<T> getChildren() {", "-\t\t\treturn fDelegate.internalGetChildren();", "-\t\t}", "+\tprivate boolean shouldParallelize(Runner runner) {", "+\t\tif (runner instanceof ParentRunner) {", "+\t\t\tParentRunner<?> parentRunner= (ParentRunner<?>) runner;", "+\t\t\tif (fClasses && parentRunner.isSuite())", "+\t\t\t\treturn true;", "+\t\t\tif (fMethods && !parentRunner.isSuite())", "+\t\t\t\treturn true;", "+\t\t}", "+\t\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ca8ee876a84ef5838d76cb877f5b6ef", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "4d6f0702dae590809b808230f027a60aa0a4a345", "commitAfterChange": "ad5971c88fb501f007cf1a75200349fb7cbb4b25", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t\t@Override \t\tpublic List<T> getChildren()", "signatureAfterChange": "  \tprivate boolean shouldParallelize(Runner runner)", "diff": ["-", "-\t\t@Override", "-\t\tpublic List<T> getChildren() {", "-\t\t\treturn fDelegate.internalGetChildren();", "-\t\t}", "+\tprivate boolean shouldParallelize(Runner runner) {", "+\t\tif (runner instanceof ParentRunner) {", "+\t\t\tParentRunner<?> parentRunner= (ParentRunner<?>) runner;", "+\t\t\tif (fClasses && parentRunner.isSuite())", "+\t\t\t\treturn true;", "+\t\t\tif (fMethods && !parentRunner.isSuite())", "+\t\t\t\treturn true;", "+\t\t}", "+\t\treturn false;"]}]}