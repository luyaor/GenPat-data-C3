{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27de777f6b068d0695457247b0b8450d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83e2aa1b6908d334ad7ad7863cfe80cf", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/runners/Suite.java", "commitBeforeChange": "5139a1be36da4ed64a860de82e7d74f2e5405037", "commitAfterChange": "0cdf29715af64edd05229c400f214417fecdef89", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate static Class[] getAnnotatedClasses(Class<?> klass) throws InitializationError", "signatureAfterChange": "  \tprivate static Class<?>[] getAnnotatedClasses(Class<?> klass) throws InitializationError", "diff": ["-\tprivate static Class[] getAnnotatedClasses(Class<?> klass) throws InitializationError {", "+\tprivate static Class<?>[] getAnnotatedClasses(Class<?> klass) throws InitializationError {", "-\t\tClass[] classes= annotation.value();", "-\t\treturn classes;", "+\t\treturn annotation.value();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea9359f801f899cc214f36f18bd2a4ad", "repository": "https://github.com/junit-team/junit.git", "fileName": "org/junit/internal/requests/ClassRequest.java", "commitBeforeChange": "5139a1be36da4ed64a860de82e7d74f2e5405037", "commitAfterChange": "0cdf29715af64edd05229c400f214417fecdef89", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \t@Override \tpublic Runner getRunner()", "signatureAfterChange": " \t \t@Override \tpublic Runner getRunner()", "diff": ["-\t\tClass runnerClass= getRunnerClass(fTestClass);", "+\t\tClass<? extends Runner> runnerClass= getRunnerClass(fTestClass);", "-\t\t\tConstructor constructor= runnerClass.getConstructor(Class.class); // TODO good error message if no such constructor", "-\t\t\tRunner runner= (Runner) constructor", "-\t\t\t\t\t.newInstance(new Object[] { fTestClass });", "-\t\t\treturn runner;", "+\t\t\tConstructor<? extends Runner> constructor= runnerClass.getConstructor(Class.class); // TODO good error message if no such constructor", "+\t\t\treturn constructor.newInstance(new Object[] { fTestClass });"]}]}