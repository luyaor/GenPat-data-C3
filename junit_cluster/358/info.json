{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "afc9526a04b26e954dc7524e361d61cd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4156cc7b3468eeda3043319961dcc96f", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/Description.java", "commitBeforeChange": "c228881359e2a4ccd0d5972c646f043ec42d62e0", "commitAfterChange": "14f9868962aee5bcba8a7595287be1d5fed54b7d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Description createTestDescription(Class<?> clazz, String name)", "signatureAfterChange": " \tpublic static Description createTestDescription(String className, String name, Annotation... annotations)", "diff": ["+\t */", "+\tpublic static Description createTestDescription(String className, String name, Annotation... annotations) {", "+\t\treturn new Description(String.format(\"%s(%s)\", name, className), annotations);", "+\t}", "-\tpublic static Description createTestDescription(Class<?> clazz, String name) {", "-\t\treturn createTestDescription(clazz, name, new Annotation[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95995e10ab496bdff065f67d024669be", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/statements/FailOnTimeout.java", "commitBeforeChange": "5408162765635af9b42a47ea865b06865284a2ab", "commitAfterChange": "07cf3c7fa446da330776502fb7cdc7329bfa2265", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private Thread getStuckThread(Thread mainThread)", "signatureAfterChange": "     private Thread getStuckThread(Thread mainThread)", "diff": ["-        if (threadGroup == null) {", "-            return null;", "-        }", "-        Thread[] threadsInGroup = getThreadArray(threadGroup);", "-        if (threadsInGroup == null) {", "+        List<Thread> threadsInGroup = getThreadsInGroup(mainThread.getThreadGroup());", "+        if (threadsInGroup.isEmpty()) {"]}]}