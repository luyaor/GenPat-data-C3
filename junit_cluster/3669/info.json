{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d4cdbc504b4170d0f1dc747b9705b28", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "480a1ab4bbb2a44aac392ed08d163567", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactoryFactory.java", "commitBeforeChange": "196c4ed79cbaca37709643b54913b361b677ae04", "commitAfterChange": "0a9a389570a171b67c3155d312f2e90bdab5aaaf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Filter apply(final String filterSpec)             throws FilterFactoryNotFoundException, FilterFactory.FilterNotFoundException", "signatureAfterChange": "     public Filter createFilterFromFilterSpec(String filterSpec)             throws FilterFactoryNotFoundException, FilterFactory.FilterNotCreatedException", "diff": ["-public class FilterFactoryFactory {", "-    public Filter apply(final String filterSpec)", "-            throws FilterFactoryNotFoundException, FilterFactory.FilterNotFoundException {", "+class FilterFactoryFactory {", "+    public Filter createFilterFromFilterSpec(String filterSpec)", "+            throws FilterFactoryNotFoundException, FilterFactory.FilterNotCreatedException {", "+        String filterFactoryFqcn;", "+        FilterFactoryParams args;", "+", "-            final String[] tuple = filterSpec.split(\"=\", 2);", "+            String[] tuple = filterSpec.split(\"=\", 2);", "-            final FilterFactory filterFactory = create(tuple[0]);", "-            final String args = tuple[1];", "-", "-            return filterFactory.createFilter(args);", "+            filterFactoryFqcn = tuple[0];", "+            args = new FilterFactoryParams.OneArg(tuple[1]);", "-            final FilterFactory filterFactory = create(filterSpec);", "-", "-            return filterFactory.createFilter();", "+            filterFactoryFqcn = filterSpec;", "+            args = new FilterFactoryParams.ZeroArg();", "+", "+        return createFilter(filterFactoryFqcn, args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d366cdd98a256d7953763c131e7e6d86", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runner/FilterFactoryFactory.java", "commitBeforeChange": "5edfb4447b609c178d63a3d991172861076d143b", "commitAfterChange": "34336085d5aba69c997f8e6b244531561afebcd4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Filter createFilterFromFilterSpec(String filterSpec)             throws FilterFactoryNotCreatedException, FilterFactory.FilterNotCreatedException", "signatureAfterChange": "     public Filter createFilterFromFilterSpec(String filterSpec)             throws FilterFactoryNotCreatedException", "diff": ["-            throws FilterFactoryNotCreatedException, FilterFactory.FilterNotCreatedException {", "-        String filterFactoryFqcn;", "-        FilterFactoryParams args;", "+            throws FilterFactoryNotCreatedException {", "+        FilterFactory filterFactory;", "+        FilterFactoryParams params;", "-            filterFactoryFqcn = tuple[0];", "-            args = new FilterFactoryParams.OneArg(tuple[1]);", "-        } else {", "-            filterFactoryFqcn = filterSpec;", "-            args = new FilterFactoryParams.ZeroArg();", "-        }", "+            String filterFactoryFqcn = tuple[0];", "+            String args = tuple[1];", "-        return createFilter(filterFactoryFqcn, args);", "+            filterFactory = createFilterFactory(filterFactoryFqcn);", "+            params = filterFactory.parseArgs(args);", "+", "+            return filterFactory.createFilter(params);", "+        } else {", "+            String filterFactoryFqcn = filterSpec;", "+", "+            return createFilter(filterFactoryFqcn, new NoFilterFactoryParams());", "+        }"]}]}