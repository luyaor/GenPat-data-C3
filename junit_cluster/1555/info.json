{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "085baa8accf8c59eb9cd9f8b84712dbd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa43d7360a8cbe9e0260d1e6952eea26", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/max/MaxCore.java", "commitBeforeChange": "378e17964a4188bad9b3d966207a2f682072148e", "commitAfterChange": "451ca12156d5704809a1feff78a10a9451cd2023", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t\t\tprivate Long getDuration(Description o1)", "signatureAfterChange": " \t \t\tprivate Long getFailure(Description o1)", "diff": ["-", "-\t\t\tprivate Long getDuration(Description o1) {", "-\t\t\t\tLong result= durations.get(o1);", "-\t\t\t\tif (result == null) result= 0L;", "-\t\t\t\treturn result;", "-\t\t\t}", "+\t", "+\t\tprivate Long getFailure(Description o1) {", "+\t\t\tLong result= fFailures.get(o1);", "+\t\t\tif (result == null) result= 0L; // 0 = \"never failed (that I know about)\"", "+\t\t\treturn result;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5ef839f35d51e6773daa73d7073dfaf", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/max/MaxHistory.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \t\tprivate Long getFailure(Description key)", "signatureAfterChange": "          private Long getFailure(Description key)", "diff": ["-\t\tprivate Long getFailure(Description key) {", "-\t\t\tLong result= getFailureTimestamp(key);", "-\t\t\tif (result == null)", "-\t\t\t\treturn 0L; // 0 = \"never failed (that I know about)\"", "-\t\t\treturn result;", "-\t\t}", "+        private Long getFailure(Description key) {", "+            Long result = getFailureTimestamp(key);", "+            if (result == null) {", "+                return 0L; // 0 = \"never failed (that I know about)\"", "+            }", "+            return result;", "+        }"]}]}