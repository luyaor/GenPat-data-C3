{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7c22355cb5cf5891736f9efa5b43ece", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ea46c6ebe610bf1801bfa4f25861308", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "496ee866a46f783d145b649a688df57cbf79490e", "commitAfterChange": "5f7fddf537e551109ffd6241a00c87a2b3521523", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \t@Override \tpublic Description getDescription()", "signatureAfterChange": " \t \t@Override \tpublic Description getDescription()", "diff": ["-", "+\t", "-\t\tif (fDescription == null) {", "-\t\t\t// TODO: extract createDescription?", "-\t\t\tfDescription= Description.createSuiteDescription(getName(), fTestClass.getAnnotations());", "-\t\t\tfor (T child : getCachedChildren())", "-\t\t\t\tfDescription.addChild(describeChild(child));", "-\t\t}", "-\t\treturn fDescription;", "+\t\tDescription description= Description.createSuiteDescription(getName(),", "+\t\t\t\tfTestClass.getAnnotations());", "+\t\tfor (T child : getFilteredChildren())", "+\t\t\tdescription.addChild(describeChild(child));", "+\t\treturn description;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93fea115371e94fd8012531c19e48abd", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/ParentRunner.java", "commitBeforeChange": "971c9a52281458375af79e303449fe22bf91feab", "commitAfterChange": "97402a3401c6cc2d45d395c0d9d636f483b5571c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \t@Override \tpublic Description getDescription()", "signatureAfterChange": " \t \t@Override \tpublic Description getDescription()", "diff": ["-", "+\t", "-\t\tif (fDescription == null) {", "-\t\t\t// TODO: extract createDescription?", "-\t\t\tfDescription= Description.createSuiteDescription(getName(), fTestClass.getAnnotations());", "-\t\t\tfor (T child : getCachedChildren())", "-\t\t\t\tfDescription.addChild(describeChild(child));", "-\t\t}", "-\t\treturn fDescription;", "+\t\tDescription description= Description.createSuiteDescription(getName(),", "+\t\t\t\tfTestClass.getAnnotations());", "+\t\tfor (T child : getFilteredChildren())", "+\t\t\tdescription.addChild(describeChild(child));", "+\t\treturn description;"]}]}