{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "74d29611267a9ec222a0a66233df5ace", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0829405a9b3b3bed68773a8bbb91cafe", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/framework/Assert.java", "commitBeforeChange": "0f8075aba2fc1bba1b0c145e28bb99b5da31928f", "commitAfterChange": "4e8768dd8ffe28efea98454338f79ee40d8d3ebe", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tstatic public void assertEquals(String message, double expected, double actual, double delta)", "signatureAfterChange": " \tstatic public void assertEquals(String message, String expected, String actual)", "diff": ["+\t */", "+\tstatic public void assertEquals(String message, String expected, String actual) {", "+\t\tif (expected == null && actual == null)", "+\t\t\treturn;", "+\t\tif (expected != null && expected.equals(actual))", "+\t\t\treturn;", "+\t\tthrow new ComparisonFailure(message, expected, actual);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b79ddf5aebc715e6587bde7d6ed60e1", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/ComparisonFailure.java", "commitBeforeChange": "950702c6adbbcbbee0ce2061d674bf05e0c997b1", "commitAfterChange": "a5d194fcb57b1b320ae808bc5a8d153f98f18a84", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "          private void findCommonSuffix()", "signatureAfterChange": "              public String compactPrefix()", "diff": ["-        private void findCommonSuffix() {", "-            int expectedSuffix = expected.length() - 1;", "-            int actualSuffix = actual.length() - 1;", "-            for (; actualSuffix >= prefix && expectedSuffix >= prefix; actualSuffix--, expectedSuffix--) {", "-                if (expected.charAt(expectedSuffix) != actual.charAt(actualSuffix)) {", "-                    break;", "-                }", "-            suffix = expected.length() - expectedSuffix - 1;", "-        }", "+            public String compactPrefix() {", "+                if (sharedPrefix.length() <= contextLength) {", "+                    return sharedPrefix;", "+                }", "+                return ELLIPSIS + sharedPrefix.substring(sharedPrefix.length() - contextLength);", "+            }"]}]}