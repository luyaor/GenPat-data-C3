{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c385463b5ec2be5298b68f46ee93f716", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9604b892e49b2e605856a5321794b71", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java", "commitBeforeChange": "3aca014a2c39723febbe7def2fd132da80c3f4a9", "commitAfterChange": "2c6c142aa801cef3520ca668e75a670a32b4859a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void dataPointsMustBeStatic()", "signatureAfterChange": "      @Test     public void dataPointFieldsMustBeStatic()", "diff": ["-", "-    @Test", "-    public void dataPointsMustBeStatic() {", "-        assertThat(", "-                testResult(DataPointsMustBeStatic.class),", "-                CoreMatchers.<PrintableResult>both(failureCountIs(2))", "-                        .and(", "-                                hasFailureContaining(\"DataPoint field THREE must be static\"))", "-                        .and(", "-                                hasFailureContaining(\"DataPoint field FOUR must be static\")));", "-    }", "+    public void dataPointFieldsMustBeStatic() {", "+                testResult(DataPointFieldsMustBeStatic.class),", "+                CoreMatchers.<PrintableResult>both(failureCountIs(2))", "+                        .and(", "+                                hasFailureContaining(\"DataPoint field THREE must be static\"))", "+                        .and(", "+                                hasFailureContaining(\"DataPoint field FOURS must be static\")));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff790c695924f8ceec8a02de593700e5", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/rules/Stopwatch.java", "commitBeforeChange": "e1315c75a81d8131dd88dadbf5184892f0d9ce63", "commitAfterChange": "7ae75535efbb7a95ac62cfa1d0ccb626cc23e8c7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 16, "signatureBeforeChange": "      private long currentNanoTime()", "signatureAfterChange": "          public long nanoTime()", "diff": ["-    private long currentNanoTime() {", "-        return System.nanoTime();", "+        public long nanoTime() {", "+            return System.nanoTime();", "+        }"]}]}