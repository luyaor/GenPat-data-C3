{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "336c72a914ca44eeaf85a8737993b0a4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f1cf7461d36d4c85d5d2d96391b1e32", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/runners/TestClass.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate boolean isShadowed(Method current, Method previous)", "signatureAfterChange": "      private boolean isShadowed(Method current, Method previous)", "diff": ["-\tprivate boolean isShadowed(Method current, Method previous) {", "-\t\tif (! previous.getName().equals(current.getName()))", "-\t\t\treturn false;", "-\t\tif (previous.getParameterTypes().length != current.getParameterTypes().length)", "-\t\t\treturn false;", "-\t\tfor (int i= 0; i < previous.getParameterTypes().length; i++) {", "-\t\t\tif (! previous.getParameterTypes()[i].equals(current.getParameterTypes()[i]))", "-\t\t\t\treturn false;", "-\t\t}", "-\t\treturn true;", "-\t}", "+    private boolean isShadowed(Method current, Method previous) {", "+        if (!previous.getName().equals(current.getName())) {", "+            return false;", "+        }", "+        if (previous.getParameterTypes().length != current.getParameterTypes().length) {", "+            return false;", "+        }", "+        for (int i = 0; i < previous.getParameterTypes().length; i++) {", "+            if (!previous.getParameterTypes()[i].equals(current.getParameterTypes()[i])) {", "+                return false;", "+            }", "+        }", "+        return true;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "656bc003b8bb192f9483fd3def8b8682", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/runners/model/FrameworkMethod.java", "commitBeforeChange": "68cc61e2b6ae43f3ab6ef9a54e16b9318d3d038f", "commitAfterChange": "30f2b16525dabb477373be9ed3e76bb98b200806", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \t@Override \tpublic boolean isShadowedBy(FrameworkMethod other)", "signatureAfterChange": "      @Override     public boolean isShadowedBy(FrameworkMethod other)", "diff": ["-\t@Override", "-\tpublic boolean isShadowedBy(FrameworkMethod other) {", "-\t\tif (!other.getName().equals(getName()))", "-\t\t\treturn false;", "-\t\tif (other.getParameterTypes().length != getParameterTypes().length)", "-\t\t\treturn false;", "-\t\tfor (int i= 0; i < other.getParameterTypes().length; i++)", "-\t\t\tif (!other.getParameterTypes()[i].equals(getParameterTypes()[i]))", "-\t\t\t\treturn false;", "-\t\treturn true;", "-\t}", "+    @Override", "+    public boolean isShadowedBy(FrameworkMethod other) {", "+        if (!other.getName().equals(getName())) {", "+            return false;", "+        }", "+        if (other.getParameterTypes().length != getParameterTypes().length) {", "+            return false;", "+        }", "+        for (int i = 0; i < other.getParameterTypes().length; i++) {", "+            if (!other.getParameterTypes()[i].equals(getParameterTypes()[i])) {", "+                return false;", "+            }", "+        }", "+        return true;", "+    }"]}]}