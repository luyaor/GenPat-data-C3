{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8b1de7add15de9bb104dbd1b55e1dec", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28b219c10ff2bb6ee98eea6ed0ed695a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "015c02e04d940a4bffc6a8e687751c4610db19b8", "commitAfterChange": "8b507d7908603bf6e36ea9e60921b76eb5923d0f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t\t \t\t@Override \t\tpublic void run(RunNotifier notifier)", "signatureAfterChange": " \t\t \t\t@Override \t\tpublic void run(RunNotifier notifier)", "diff": ["-\t\t\tfor (Future<Object> each : collator.results)", "+\t\t\tfor (Future<Object> each : fCollator.results)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a075111c801fae892574c4f9f77f051", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "30a17cfdc3e58d7b0bc9723f86098c2a06a77c23", "commitAfterChange": "fdc9cd5ea91f5ae1d7e5991abadd1b3f989626f7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \t\t@Override \t\tprotected void runChild(final FrameworkMethod method, final RunNotifier notifier)", "signatureAfterChange": " \t \t\t@Override \t\tprotected void runChild(final FrameworkMethod method, final RunNotifier notifier)", "diff": ["-\t\t\tcollator.process(callable);", "+\t\t\tfCollator.process(callable);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fea37e45bf70de6e8a172c069f73cd3", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "015c02e04d940a4bffc6a8e687751c4610db19b8", "commitAfterChange": "8b507d7908603bf6e36ea9e60921b76eb5923d0f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \t\t@Override \t\tprotected void runChild(final Runner runner, final RunNotifier notifier)", "signatureAfterChange": " \t \t\t@Override \t\tprotected void runChild(final Runner runner, final RunNotifier notifier)", "diff": ["-\t\t\tcollator.process(callable);", "+\t\t\tfCollator.process(callable);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df6156eb7a7486610e7fba4f63cde240", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "015c02e04d940a4bffc6a8e687751c4610db19b8", "commitAfterChange": "8b507d7908603bf6e36ea9e60921b76eb5923d0f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t\t \t\t@Override \t\tpublic void run(RunNotifier notifier)", "signatureAfterChange": " \t\t \t\t@Override \t\tpublic void run(RunNotifier notifier)", "diff": ["-\t\t\tfor (Future<Object> each : collator.results)", "+\t\t\tfor (Future<Object> each : fCollator.results)", "-\t\t\t\t\teach.get(); // TODO(parallel) what should this really be?", "+\t\t\t\t\teach.get();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e29ca6353db52589412e96720798790b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "30a17cfdc3e58d7b0bc9723f86098c2a06a77c23", "commitAfterChange": "fdc9cd5ea91f5ae1d7e5991abadd1b3f989626f7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t\t \t\t@Override \t\tpublic void run(RunNotifier notifier)", "signatureAfterChange": " \t\t \t\t@Override \t\tpublic void run(RunNotifier notifier)", "diff": ["-\t\t\tfor (Future<Object> each : collator.results)", "+\t\t\tfor (Future<Object> each : fCollator.results)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e76b2523a8d1cf909636b0df47925339", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "30a17cfdc3e58d7b0bc9723f86098c2a06a77c23", "commitAfterChange": "fdc9cd5ea91f5ae1d7e5991abadd1b3f989626f7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t\t \t\t@Override \t\tpublic void run(RunNotifier notifier)", "signatureAfterChange": " \t\t \t\t@Override \t\tpublic void run(RunNotifier notifier)", "diff": ["-\t\t\tfor (Future<Object> each : collator.results)", "+\t\t\tfor (Future<Object> each : fCollator.results)", "-\t\t\t\t\teach.get(); // TODO(parallel) what should this really be?", "+\t\t\t\t\teach.get();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5b174968e340f48e56be28c5a027375", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "30a17cfdc3e58d7b0bc9723f86098c2a06a77c23", "commitAfterChange": "fdc9cd5ea91f5ae1d7e5991abadd1b3f989626f7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \t\t@Override \t\tprotected void runChild(final Runner runner, final RunNotifier notifier)", "signatureAfterChange": " \t \t\t@Override \t\tprotected void runChild(final Runner runner, final RunNotifier notifier)", "diff": ["-\t\t\tcollator.process(callable);", "+\t\t\tfCollator.process(callable);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f725872a38f9c031dd970416d99ec532", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/experimental/ParallelComputer.java", "commitBeforeChange": "015c02e04d940a4bffc6a8e687751c4610db19b8", "commitAfterChange": "8b507d7908603bf6e36ea9e60921b76eb5923d0f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \t\t@Override \t\tprotected void runChild(final FrameworkMethod method, final RunNotifier notifier)", "signatureAfterChange": " \t \t\t@Override \t\tprotected void runChild(final FrameworkMethod method, final RunNotifier notifier)", "diff": ["-\t\t\tcollator.process(callable);", "+\t\t\tfCollator.process(callable);"]}]}