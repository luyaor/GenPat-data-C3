{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f4a65d826c9cffd3ab3ce8c8bcc1645", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "092adf05b078d62ea414f5719b0a1889", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "f268f458843fc84e83c244a5c271cc71386eb1cf", "commitAfterChange": "4b1869ebb8002e5d0b82ab55460f6126043c9ec4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprotected void connectTestBrowser(Test testSuite, boolean reload)", "signatureAfterChange": " \t \tprotected void aboutToStart(Test testSuite)", "diff": ["-\tprotected void connectTestBrowser(Test testSuite, boolean reload) {", "-\t\tif(fTestBrowser != null && fTestBrowser.isVisible()) {", "-\t\t\tif (reload)", "-\t\t\t\tfTestBrowser.showTestTree(testSuite);", "-\t\t\tfTestResult.addListener(fTestBrowser.getTestListener());", "+\tprotected void aboutToStart(Test testSuite) {", "+\t\tfor (Enumeration e= fTestRunViews.elements(); e.hasMoreElements(); ) {", "+\t\t\tTestRunView v= (TestRunView) e.nextElement();", "+\t\t\tv.aboutToStart(testSuite, fTestResult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d2920d69016498c540f9176df196b92", "repository": "https://github.com/junit-team/junit.git", "fileName": "junit/swingui/TestRunner.java", "commitBeforeChange": "1e752dcb0a967bcb47fae4b12fb8765e79571e69", "commitAfterChange": "bfc94ee739d62127c7477300b26127bd560765a1", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprotected void aboutToStart(final Test testSuite)", "signatureAfterChange": " \t \tprotected void aboutToStart(final Test testSuite)", "diff": ["-\t\tSwingUtilities.invokeLater(", "-\t\t\tnew Runnable() {", "-\t\t\t\tpublic void run() {", "-\t\t\t\t\tfor (Enumeration e= fTestRunViews.elements(); e.hasMoreElements(); ) {", "-\t\t\t\t\t\tTestRunView v= (TestRunView) e.nextElement();", "-\t\t\t\t\t\tv.aboutToStart(testSuite, fTestResult);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t);", "+\t\tfor (Enumeration e= fTestRunViews.elements(); e.hasMoreElements(); ) {", "+\t\t\tTestRunView v= (TestRunView) e.nextElement();", "+\t\t\tv.aboutToStart(testSuite, fTestResult);", "+\t\t}"]}]}