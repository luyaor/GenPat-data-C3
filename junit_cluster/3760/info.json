{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aaf37ff684f772b61112527d2f2b5aa4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "243af559c4da2e6d4f91629c42c84fec", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/Parameterized.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate TestMethod getParametersMethod() throws Exception", "signatureAfterChange": "  \tprivate FrameworkMethod getParametersMethod() throws Exception", "diff": ["-\tprivate TestMethod getParametersMethod() throws Exception {", "-\t\tList<TestMethod> methods= fTestClass", "+\tprivate FrameworkMethod getParametersMethod() throws Exception {", "+\t\tList<FrameworkMethod> methods= fTestClass", "-\t\tfor (TestMethod each : methods) {", "+\t\tfor (FrameworkMethod each : methods) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "479bac6e174e77febc4ea09f49d6adb9", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/internal/runners/model/TestClass.java", "commitBeforeChange": "53e85db0bec2e03bf93afc73dced9b4a0b231644", "commitAfterChange": "8bed6c9278517d9fb13f274bc5a6ade358a39745", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic List<TestMethod> getAnnotatedMethods( \t\t\tClass<? extends Annotation> annotationClass)", "signatureAfterChange": "  \tpublic List<FrameworkMethod> getAnnotatedMethods( \t\t\tClass<? extends Annotation> annotationClass)", "diff": ["-\tpublic List<TestMethod> getAnnotatedMethods(", "+\tpublic List<FrameworkMethod> getAnnotatedMethods(", "-\t\tList<TestMethod> results= new ArrayList<TestMethod>();", "+\t\tList<FrameworkMethod> results= new ArrayList<FrameworkMethod>();", "-\t\t\t\tTestMethod testMethod= new TestMethod(eachMethod, this);", "+\t\t\t\tFrameworkMethod testMethod= new FrameworkMethod(eachMethod);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fb5c4c125f7ed49fa5bce848eca499a", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/org/junit/runners/Parameterized.java", "commitBeforeChange": "57302f0df76fba83ba72a676bd660efeb5881af6", "commitAfterChange": "576377b9ad44028dc84c2f8487cfe8dbccb8c252", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tprivate Method getParametersMethod() throws Exception", "signatureAfterChange": " \t \tprivate TestMethod getParametersMethod() throws Exception", "diff": ["-\tprivate Method getParametersMethod() throws Exception {", "-\t\tList<Method> methods= fTestClass.getAnnotatedMethods(Parameters.class);", "-\t\tfor (Method each : methods) {", "-\t\t\tint modifiers= each.getModifiers();", "+\tprivate TestMethod getParametersMethod() throws Exception {", "+\t\tList<TestMethod> methods= fTestClass.getAnnotatedMethods(Parameters.class);", "+\t\tfor (TestMethod each : methods) {", "+\t\t\tint modifiers= each.getMethod().getModifiers();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8f49263cf30c4ccc6492d2fc9b7e54b", "repository": "https://github.com/junit-team/junit.git", "fileName": "src/main/java/org/junit/internal/TextListener.java", "commitBeforeChange": "4dcf3a499652b3c089d91e209c6f01313115ff76", "commitAfterChange": "a916d4133c7e394130d7953da427aae9917ab92c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate void printExceptions(String exceptionTypeName, String listPrefix, \t\t\tList<? extends Failure> exceptions)", "signatureAfterChange": "  \tprivate void printEvents(String exceptionTypeName, String listPrefix, \t\t\tList<? extends TestRunEvent> exceptions)", "diff": ["-\tprivate void printExceptions(String exceptionTypeName, String listPrefix,", "-\t\t\tList<? extends Failure> exceptions) {", "+\tprivate void printEvents(String exceptionTypeName, String listPrefix,", "+\t\t\tList<? extends TestRunEvent> exceptions) {", "-\t\tfor (Failure each : exceptions)", "+\t\tfor (TestRunEvent each : exceptions)"]}]}