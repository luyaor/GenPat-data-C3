{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f4fead049237e73d70a6c894ddb07bb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3d9f1f79ceecba01b9bcd8dd4600f13", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java", "commitBeforeChange": "f981e5845436464b45fc937e601f7fc9fdbc5a7c", "commitAfterChange": "98a3157200a6b488a0f78b67b0741a2bd72d40fa", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private String checkImportStatements(String className)", "signatureAfterChange": "     private String checkImportStatements(String className)", "diff": ["+        String illegalType = null;", "-                    return fqClass;", "+                    illegalType = fqClass;", "+                    break;", "-                    return importArg;", "+                    illegalType = importArg;", "+                    break;", "-        return null;", "+        return illegalType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e79fbb10f879735d12a65fa006a72e5f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java", "commitBeforeChange": "98a3157200a6b488a0f78b67b0741a2bd72d40fa", "commitAfterChange": "044889b26a868b1b7200526ceeb40cdbe1e903fc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     PkgControl locateFinest(final String forPkg)", "signatureAfterChange": "     PkgControl locateFinest(final String forPkg)", "diff": ["+        PkgControl finestMatch = null;", "-        // This algormithm should be improved to check for a trailing \".\"", "+        // This algorithm should be improved to check for a trailing \".\"", "-        if (!forPkg.startsWith(fullPackage)) {", "-            return null;", "-        }", "-", "-        // Check if any of the children match.", "-        for (PkgControl pc : children) {", "-            final PkgControl match = pc.locateFinest(forPkg);", "-            if (match != null) {", "-                return match;", "+        if (forPkg.startsWith(fullPackage)) {", "+            // If there won't be match so I am the best there is.", "+            finestMatch = this;", "+            // Check if any of the children match.", "+            for (PkgControl pc : children) {", "+                final PkgControl match = pc.locateFinest(forPkg);", "+                if (match != null) {", "+                    finestMatch = match;", "+                    break;", "+                }", "-", "-        // No match so I am the best there is.", "-        return this;", "+        return finestMatch;"]}]}