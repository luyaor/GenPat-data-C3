{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "712644362c9bec77b955550f3c970578", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74b042fb1a54adef454840f19463f1eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "6f937bff1da1183d58b20f48e3cc401dc9eb06f4", "commitAfterChange": "0024de5711531372850e883c970414563ab8e3ad", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private static boolean containsAllSafeTokens(final DetailAST expr)", "signatureAfterChange": "     private static boolean containsAllSafeTokens(final DetailAST expr)", "diff": ["-", "-        //arg = skipVariablePlusAssign(arg);", "-        //must be just String literals to return true", "-                && !arg.branchContains(TokenTypes.IDENT);", "+                && !arg.branchContains(TokenTypes.IDENT)", "+                && !arg.branchContains(TokenTypes.LITERAL_NULL);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "898d621dfa6de8c260f60c8c3169ce93", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "eb5896a4a1d66552f5100046413f15d62b485b62", "commitAfterChange": "11ff590ba5cc717cbe00d88eb0b578e805572bc8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                    && shouldCheckEnhancedForLoopVariable(ast)", "-                    && isVariableInForInit(ast)) {", "+                        && shouldCheckEnhancedForLoopVariable(ast)", "+                        && isVariableInForInit(ast)", "+                        && !ast.branchContains(TokenTypes.FINAL)) {"]}]}