{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8eef9aa4c9c8b9cdd62e23fa3a4953d6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "253de14d0a0854672a5fe9408a60c3f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "6125beffc437f970eae276b4a6542265c6547784", "commitAfterChange": "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processVariable(DetailAST aAST)", "signatureAfterChange": "     private void processVariable(DetailAST aAST)", "diff": ["-                final ListIterator it =", "-                    mFieldsStack.listIterator(mFieldsStack.size());", "-                while (it.hasPrevious()) {", "-                    final FieldFrame frame = (FieldFrame) it.previous();", "-                    inStatic |= frame.isStaticType();", "-                    if ((frame.containsStaticField(name)", "-                        || (!inStatic && frame.containsInstanceField(name)))", "-                        && ((mRegexp == null) || (!getRegexp().match(name)))", "-                        && !isIgnoredSetterParam(aAST, name)", "-                        && !isIgnoredConstructorParam(aAST))", "-                    {", "-                        log(nameAST.getLineNo(), nameAST.getColumnNo(),", "-                            \"hidden.field\", name);", "-                        break;", "-                    }", "+                if ((mCurrentFrame.containsStaticField(name)", "+                     || (!inStatic(aAST)", "+                         && mCurrentFrame.containsInstanceField(name)))", "+                    && ((mRegexp == null) || (!getRegexp().match(name)))", "+                    && !isIgnoredSetterParam(aAST, name)", "+                    && !isIgnoredConstructorParam(aAST))", "+                {", "+                    log(nameAST, \"hidden.field\", name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba7f02c8c80e3d3dd10f77fd5d0873e6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "6d20b67e0f1bfedc2132a887257d72edde4c857b", "commitAfterChange": "99f8726600ebd9f73b86eacf5e44d0335266d8fc", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private static List<String> getAnnotationValues(DetailAST ast)", "signatureAfterChange": "     private static List<String> getAnnotationValues(DetailAST ast)", "diff": ["-                final List<String> valueList = Lists.newLinkedList();", "-                DetailAST childAST = ast.getFirstChild();", "-                while (childAST != null) {", "-                    if (childAST.getType() == TokenTypes.EXPR) {", "-                        valueList.add(getStringExpr(childAST));", "-                    }", "-                    childAST = childAST.getNextSibling();", "-                }", "-                return valueList;", "+                return findAllExpressionsInChildren(ast);"]}]}