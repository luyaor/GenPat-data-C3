{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "291812aecc27666930a6456bcc66bd48", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12c2809c6336db503a22a5231c43c128", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "113081ffce0d8a2fae01d54f739d524dc1a3f47c", "commitAfterChange": "7514320e04e4d35a4317172876e5f11e69a2c891", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void reportCComment(int aStartLineNo, int aStartColNo,                                int aEndLineNo, int aEndColNo)", "signatureAfterChange": "     public void reportCComment(int aStartLineNo, int aStartColNo,                                int aEndLineNo, int aEndColNo)", "diff": ["+        // save the comment", "+        final Integer key = new Integer(aStartLineNo);", "+        if (mCComments.containsKey(key)) {", "+            final List entries = (List) mCComments.get(key);", "+            entries.add(cc);", "+        }", "+        else {", "+            final List entries = new ArrayList();", "+            entries.add(cc);", "+            mCComments.put(key, entries);", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18f6e6b8af7e9b15eff7b1de50ba1799", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "31cc403a41c60aa09050252953a56ef053c034d4", "commitAfterChange": "2f9b0f057c489d074967575696a0d53a34fec6b7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void reportCComment(int startLineNo, int startColNo,             int endLineNo, int endColNo)", "signatureAfterChange": "     public void reportCComment(int startLineNo, int startColNo,             int endLineNo, int endColNo)", "diff": ["-        if (cComments.containsKey(startLineNo)) {", "-            final List<TextBlock> entries = cComments.get(startLineNo);", "+        if (clangComments.containsKey(startLineNo)) {", "+            final List<TextBlock> entries = clangComments.get(startLineNo);", "-            cComments.put(startLineNo, entries);", "+            clangComments.put(startLineNo, entries);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "398f437e8d2c7894b25febe964ed8910", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheck.java", "commitBeforeChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "commitAfterChange": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\")     private void findDuplicateFromLine(         final int aI, final int aJ, final int aILine,         final int[] aJLines, final MultiMap aIgnore)", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\")     private void findDuplicateFromLine(         final int aI, final int aJ, final int aILine,         final int[] aJLines, final MultiMap aIgnore)", "diff": ["-", "-", "-        final Integer iLine = new Integer(aILine);", "-            final Collection ignoreEntries = (Collection) aIgnore.get(iLine);", "+            final Collection ignoreEntries = (Collection) aIgnore.get(aILine);", "-                if (ignoreEntries.contains(new Integer(jLine))) {", "+                if (ignoreEntries.contains(jLine)) {", "-                    aIgnore.put(new Integer(aILine + offset),", "-                            new Integer(jLine + offset));", "+                    aIgnore.put(aILine + offset, jLine + offset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5329ffb4f4681b501fe551fb4218f638", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "commitAfterChange": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void reportCComment(int aStartLineNo, int aStartColNo,             int aEndLineNo, int aEndColNo)", "signatureAfterChange": "     public void reportCComment(int aStartLineNo, int aStartColNo,             int aEndLineNo, int aEndColNo)", "diff": ["-        final Integer key = new Integer(aStartLineNo);", "-        if (mCComments.containsKey(key)) {", "-            final List<TextBlock> entries = mCComments.get(key);", "+        if (mCComments.containsKey(aStartLineNo)) {", "+            final List<TextBlock> entries = mCComments.get(aStartLineNo);", "-            mCComments.put(key, entries);", "+            mCComments.put(aStartLineNo, entries);", "-            mJavadocComments.put(new Integer(aEndLineNo - 1), comment);", "+            mJavadocComments.put(aEndLineNo - 1, comment);"]}]}