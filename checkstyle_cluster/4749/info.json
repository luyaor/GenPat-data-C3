{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a068d78aca8aad82bd21d7b4876cd489", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "389a8f1f69e232e0b24dcec2170a5880", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java", "commitBeforeChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "commitAfterChange": "6ee4a0f805d528cdee03cfc175502d15b5722dab", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     protected final void checkRParen(DetailAST lparen, DetailAST rparen)", "signatureAfterChange": "     protected final void checkRParen(DetailAST lparen, DetailAST rparen)", "diff": ["-            if (!getIndent().isAcceptable(rparenLevel) && isOnStartOfLine(rparen)", "-                    && rparenLevel != lparenLevel + 1) {", "+            if (rparenLevel != lparenLevel + 1", "+                    && !getIndent().isAcceptable(rparenLevel)", "+                    && isOnStartOfLine(rparen)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45908fc5538de65a72b641d6ac9ec463", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java", "commitBeforeChange": "b9f232ffe08853fbfd0239d53d683d4fe5c6b817", "commitAfterChange": "1bd30555eac039d0486dffb3fc43b7a34117909b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static JavadocTags getJavadocTags(TextBlock cmt,             JavadocTagType tagType)", "signatureAfterChange": "     public static JavadocTags getJavadocTags(TextBlock cmt,             JavadocTagType tagType)", "diff": ["-                        int col = commentOffset + (tagMatcher.start(1) - 1);", "+                        int col = commentOffset + tagMatcher.start(1) - 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dac8e42d1d55b695916d780a967ace6b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheck.java", "commitBeforeChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "commitAfterChange": "6ee4a0f805d528cdee03cfc175502d15b5722dab", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean isCorrectLocation(DetailAST annotation, boolean hasParams)", "signatureAfterChange": "     private boolean isCorrectLocation(DetailAST annotation, boolean hasParams)", "diff": ["-        return allowingCondition && !hasNodeBefore(annotation)", "-            || !allowingCondition && !hasNodeBeside(annotation)", "-            || allowSamelineMultipleAnnotations;", "+        return allowSamelineMultipleAnnotations", "+            || allowingCondition && !hasNodeBefore(annotation)", "+            || !allowingCondition && !hasNodeBeside(annotation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee30d63fdb2029dc5b790db00a3e0b43", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "commitAfterChange": "6ee4a0f805d528cdee03cfc175502d15b5722dab", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private boolean shouldCheck(final DetailAST ast, final Scope nodeScope)", "signatureAfterChange": "     private boolean shouldCheck(final DetailAST ast, final Scope nodeScope)", "diff": ["-        return nodeScope.isIn(scope)", "-                && surroundingScope.isIn(scope)", "-                && (excludeScope == null || nodeScope != excludeScope", "-                    && surroundingScope != excludeScope);", "+        return (excludeScope == null", "+                || nodeScope != excludeScope", "+                && surroundingScope != excludeScope)", "+            && nodeScope.isIn(scope)", "+            && surroundingScope.isIn(scope);"]}]}