{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d698d99f7e3b7e3798e3eb15f30da08", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2075293c452db3eeb9647f6bd866193d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "4ebf621616e3c9ea2284e7109d19abbbe1a94efc", "commitAfterChange": "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     private void checkThrowsTags(List aTags, List aThrows,         boolean aReportExpectedTags)", "signatureAfterChange": "     private void checkThrowsTags(List<JavadocTag> aTags,             List<ExceptionInfo> aThrows, boolean aReportExpectedTags)", "diff": ["-    private void checkThrowsTags(List aTags, List aThrows,", "-        boolean aReportExpectedTags)", "+    private void checkThrowsTags(List<JavadocTag> aTags,", "+            List<ExceptionInfo> aThrows, boolean aReportExpectedTags)", "-        final Set foundThrows = new HashSet(); //used for performance only", "-        final ListIterator tagIt = aTags.listIterator();", "+        // The foundThrows used for performance only", "+        final Set<String> foundThrows = new HashSet<String>();", "+        final ListIterator<JavadocTag> tagIt = aTags.listIterator();", "-            final JavadocTag tag = (JavadocTag) tagIt.next();", "+            final JavadocTag tag = tagIt.next();", "-            final ListIterator throwIt = aThrows.listIterator();", "+            final ListIterator<ExceptionInfo> throwIt = aThrows.listIterator();", "-                final ExceptionInfo ei = (ExceptionInfo) throwIt.next();", "+                final ExceptionInfo ei = throwIt.next();", "-            final ListIterator throwIt = aThrows.listIterator();", "+            final ListIterator<ExceptionInfo> throwIt = aThrows.listIterator();", "-                final ExceptionInfo ei = (ExceptionInfo) throwIt.next();", "+                final ExceptionInfo ei = throwIt.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79519fb216a2b35347074711414e274a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "     private void checkThrowsTags(List<JavadocTag> aTags,             List<ExceptionInfo> aThrows, boolean aReportExpectedTags)", "signatureAfterChange": "     private void checkThrowsTags(List<JavadocTag> tags,             List<ExceptionInfo> throwsList, boolean reportExpectedTags)", "diff": ["-    private void checkThrowsTags(List<JavadocTag> aTags,", "-            List<ExceptionInfo> aThrows, boolean aReportExpectedTags)", "+    private void checkThrowsTags(List<JavadocTag> tags,", "+            List<ExceptionInfo> throwsList, boolean reportExpectedTags)", "-        final ListIterator<JavadocTag> tagIt = aTags.listIterator();", "+        final ListIterator<JavadocTag> tagIt = tags.listIterator();", "-            ListIterator<ExceptionInfo> throwIt = aThrows.listIterator();", "+            ListIterator<ExceptionInfo> throwIt = throwsList.listIterator();", "-            throwIt = aThrows.listIterator();", "+            throwIt = throwsList.listIterator();", "-                else if (mAllowThrowsTagsForSubclasses) {", "+                else if (allowThrowsTagsForSubclasses) {", "-                if (mAllowUndeclaredRTE) {", "+                if (allowUndeclaredRTE) {", "-                if (reqd && mValidateThrows) {", "+                if (reqd && validateThrows) {", "-        if (!mAllowMissingThrowsTags && aReportExpectedTags) {", "-            for (ExceptionInfo ei : aThrows) {", "+        if (!allowMissingThrowsTags && reportExpectedTags) {", "+            for (ExceptionInfo ei : throwsList) {"]}]}