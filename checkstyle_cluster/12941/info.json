{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "80b5b2ec536e04ebc867c20b524e1d3a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88ff646d329d4a1a9a1329d407367689", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "6e96026ec6d95fc5eadd3044cab91c24c73c8e0c", "commitAfterChange": "e00c478dd61d9d883e41b500b780ab217582c2e7", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected final int getFirstLine(int aStartLine, DetailAST aTree)", "signatureAfterChange": "     protected final int getFirstLine(int aStartLine, DetailAST aTree)", "diff": ["-", "+        int realStart = aStartLine;", "-        if (currLine < aStartLine) {", "-            aStartLine = currLine;", "+        if (currLine < realStart) {", "+            realStart = currLine;", "-            aStartLine = getFirstLine(aStartLine, node);", "+            realStart = getFirstLine(realStart, node);", "-        return aStartLine;", "+        return realStart;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb09f10e60521018fa4364486160b9bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java", "commitBeforeChange": "351d79582d7a6cea56af9d61f45973d3cf73a484", "commitAfterChange": "7c262e61e676982d7d33a42971b885d97b95f456", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private boolean isPrePreviousLineEmpty(DetailAST token)", "signatureAfterChange": "     private boolean isPrePreviousLineEmpty(DetailAST token)", "diff": ["+        boolean result = false;", "-        final String prePreviousLine = getLines()[lineNo - number];", "-        return prePreviousLine.trim().isEmpty();", "+        if (lineNo >= number) {", "+            final String prePreviousLine = getLines()[lineNo - number];", "+            result = prePreviousLine.trim().isEmpty();", "+        }", "+        return result;"]}]}