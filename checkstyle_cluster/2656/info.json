{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d350d7de11aadcba95e45b11597fede2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "402a725e8ef352277f0cdce9a4a09eb6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "contrib/bcel/src/checkstyle/com/puppycrawl/tools/checkstyle/bcel/checks/UnusedMethodCheck.java", "commitBeforeChange": "65603924fdf47c194fc2ef9e0bc60bfc81ee4166", "commitAfterChange": "2707ab4393bd5a585f1f794c43515b8a1b900078", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void leaveSet(Set aJavaClasses)", "signatureAfterChange": "     public void leaveSet(Set aJavaClasses)", "diff": ["-                    final String methodName = methodDefs[i].getName();", "+                            javaClass,", "-                            new Object[] {className, methodDefs[i]});", "+                            new Object[] {methodDefs[i]});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "745ec34d1a97feef758507323b5e941c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheckTest.java", "commitBeforeChange": "544e9992af3545b00cdabbb9ef43d0421150a6a9", "commitAfterChange": "c4cc403882e85ee416208abc361329af58230d92", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testIntegerOverflow() throws Exception", "signatureAfterChange": "      @Test     public void testIntegerOverflow() throws Exception", "diff": ["-        // use i18n for number formatting so test wont fail in non-english environments", "-        final String expectedComplexity = NumberFormat.getInstance().format(largerThanMaxInt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b3b52efbd555f877fedc6dec7413e7a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java", "commitBeforeChange": "79404974eff1458f4243f8acd6a08b6a8b869342", "commitAfterChange": "fe9057366308642868c25d427c3ee94411b37170", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private Object createObject(String aClassName)         throws CheckstyleException", "signatureAfterChange": "     private Object createObject(String aClassName)         throws CheckstyleException", "diff": ["-            final ClassLoader loader = Thread.currentThread()", "-                    .getContextClassLoader();", "-            final Class<?> clazz = Class.forName(aClassName, true, loader);", "+            final Class<?> clazz = Class.forName(aClassName, true,", "+                    mModuleClassLoader);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1e35151bc9cd13f93156509567bbb94", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "66325cbd72882454193765322efa716537ce9c93", "commitAfterChange": "33f75977205625bc5f9620a2c63e16a11f9663a5", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private Checker createChecker()", "signatureAfterChange": "     private Checker createChecker()", "diff": ["-            final ClassLoader taskLoader = this.getClass().getClassLoader();", "-                new AntClassLoader(taskLoader, getProject(), mClasspath, true);", "+                new AntClassLoader(getProject(), mClasspath);"]}]}