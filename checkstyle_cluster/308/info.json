{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d50d7ed1e63ea449fff287edb369ad9d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f952531ba9153805207d14af6ae6662", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheckTest.java", "commitBeforeChange": "204c073294cdca6756bcd546d6af85a797ad7d79", "commitAfterChange": "6784e5bcd5baa6b5086bf8b63709856d685a74c8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Test     public void testIgnoreSetter()         throws Exception", "signatureAfterChange": "     @Test     public void testIgnoreChainSetter()         throws Exception", "diff": ["+    /** tests ignoreSetter and setterCanReturnItsClass properties */", "+    @Test", "+    public void testIgnoreChainSetter()", "+        throws Exception", "+    {", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(HiddenFieldCheck.class);", "+        checkConfig.addAttribute(\"ignoreSetter\", \"true\");", "+        checkConfig.addAttribute(\"setterCanReturnItsClass\", \"true\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82d7a5d35e4ac72164faaa2115dac2b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenCheckTest.java", "commitBeforeChange": "fee4ea98984da7b06b33d8a7cd64d7ec79c3db10", "commitAfterChange": "dd47d21b9eb0d254016315790db9be5db2c28ea4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testDefault()         throws Exception", "signatureAfterChange": "      @Test     public void testPreviouslyIllegalTokens()         throws Exception", "diff": ["-    public void testDefault()", "+", "+    @Test", "+    public void testPreviouslyIllegalTokens()", "+        throws Exception {", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(IllegalTokenCheck.class);", "+        checkConfig.addAttribute(\"tokens\", \"LITERAL_SWITCH,POST_INC,POST_DEC\");", "+        final String[] expected = {"]}]}