{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a47f9623e48c561db49858d653d75e68", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24a83a036840bdcede2766378f391e16", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "d740f2e1cdb05f20a48bf7d5dcebdcd0faae6ddd", "commitAfterChange": "3ef918920c58c550169ccef3cfe1706aede11a6e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Override     public void execute()", "signatureAfterChange": "      @Override     public void execute()", "diff": ["-            realExecute();", "+            // output version info in debug mode", "+            final ResourceBundle compilationProperties = ResourceBundle", "+                    .getBundle(\"checkstylecompilation\");", "+            final String version = compilationProperties", "+                    .getString(\"checkstyle.compile.version\");", "+            final String compileTimestamp = compilationProperties", "+                    .getString(\"checkstyle.compile.timestamp\");", "+            log(\"checkstyle version \" + version, Project.MSG_VERBOSE);", "+            log(\"compiled on \" + compileTimestamp, Project.MSG_VERBOSE);", "+", "+            // Check for no arguments", "+            if (fileName == null && fileSets.isEmpty()) {", "+                throw new BuildException(", "+                        \"Must specify at least one of 'file' or nested 'fileset'.\",", "+                        getLocation());", "+            }", "+            if (configLocation == null) {", "+                throw new BuildException(\"Must specify 'config'.\", getLocation());", "+            }", "+            realExecute(version);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aef6c2552f3fb18b7a6defea6e9c3b1c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "d740f2e1cdb05f20a48bf7d5dcebdcd0faae6ddd", "commitAfterChange": "3ef918920c58c550169ccef3cfe1706aede11a6e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void realExecute()", "signatureAfterChange": "     private void realExecute(String checkstyleVersion)", "diff": ["-    private void realExecute() {", "-        // output version info in debug mode", "-        final ResourceBundle compilationProperties = ResourceBundle", "-                .getBundle(\"checkstylecompilation\");", "-        final String version = compilationProperties", "-                .getString(\"checkstyle.compile.version\");", "-        final String compileTimestamp = compilationProperties", "-                .getString(\"checkstyle.compile.timestamp\");", "-        log(\"checkstyle version \" + version, Project.MSG_VERBOSE);", "-        log(\"compiled on \" + compileTimestamp, Project.MSG_VERBOSE);", "-", "-        // Check for no arguments", "-        if (fileName == null && fileSets.isEmpty()) {", "-            throw new BuildException(", "-                    \"Must specify at least one of 'file' or nested 'fileset'.\",", "-                    getLocation());", "-        }", "-", "-        if (configLocation == null) {", "-            throw new BuildException(\"Must specify 'config'.\", getLocation());", "-        }", "-", "+    private void realExecute(String checkstyleVersion) {", "+            // setup the listeners", "+            final AuditListener[] listeners = getListeners();", "+            for (AuditListener element : listeners) {", "+                checker.addListener(element);", "+            }", "-            processFiles(checker, warningCounter, version);", "+            processFiles(checker, warningCounter, checkstyleVersion);"]}]}