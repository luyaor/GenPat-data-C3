{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d0e50d0132369d02d5832c4af72b9684", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "117741b6461b0089683e95475657e1d0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "e6a959013065a36ab17dd923d563e54bf845f9e1", "commitAfterChange": "6f2d19e2c49109709dd849dd4724900e43f7c7f1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testWithOneArgWIthoutParenthesesWithoutTypeOneLineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWIthoutParenthesesWithoutTypeOneLineBody()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"grammars/java8/InputLambdaTest10.java\"),", "+        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "+                + \"tools/checkstyle/grammars/java8/InputLambdaTest10.java\").getCanonicalPath(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b132f595c3585f4e565215d030a006e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "e6a959013065a36ab17dd923d563e54bf845f9e1", "commitAfterChange": "6f2d19e2c49109709dd849dd4724900e43f7c7f1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testWithOneArgWIthoutTypeFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWIthoutTypeFullBody()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"grammars/java8/InputLambdaTest7.java\"),", "+        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "+                + \"tools/checkstyle/grammars/java8/InputLambdaTest7.java\").getCanonicalPath(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e22884754e08e3a12367ccad19d37d3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "e6a959013065a36ab17dd923d563e54bf845f9e1", "commitAfterChange": "6f2d19e2c49109709dd849dd4724900e43f7c7f1", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void testInAssignment()         throws Exception", "signatureAfterChange": "      @Test     public void testInAssignment()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"grammars/java8/InputLambdaTest17.java\"),", "+        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "+                + \"tools/checkstyle/grammars/java8/InputLambdaTest17.java\").getCanonicalPath(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6899873d36f4bdb61385576abb5e814b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "e6a959013065a36ab17dd923d563e54bf845f9e1", "commitAfterChange": "6f2d19e2c49109709dd849dd4724900e43f7c7f1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testWithFewArgsWithoutTypeOneLineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithFewArgsWithoutTypeOneLineBody()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"grammars/java8/InputLambdaTest8.java\"),", "+        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "+                + \"tools/checkstyle/grammars/java8/InputLambdaTest8.java\").getCanonicalPath(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d45a0161eaddea02d606a0cd3753215", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "e6a959013065a36ab17dd923d563e54bf845f9e1", "commitAfterChange": "6f2d19e2c49109709dd849dd4724900e43f7c7f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testLambdaInVariableInitialization()         throws Exception", "signatureAfterChange": "      @Test     public void testLambdaInVariableInitialization()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"grammars/java8/InputLambdaTest1.java\"),", "+        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "+                + \"tools/checkstyle/grammars/java8/InputLambdaTest1.java\").getCanonicalPath(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9394916a3c4effb274f70f9f0a7c48cf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "e6a959013065a36ab17dd923d563e54bf845f9e1", "commitAfterChange": "6f2d19e2c49109709dd849dd4724900e43f7c7f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testWithoutArgsOneLineLambdaBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithoutArgsOneLineLambdaBody()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"grammars/java8/InputLambdaTest2.java\"),", "+        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "+                + \"tools/checkstyle/grammars/java8/InputLambdaTest2.java\").getCanonicalPath(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99f2933a73362275d30bb341abc996ec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "e6a959013065a36ab17dd923d563e54bf845f9e1", "commitAfterChange": "6f2d19e2c49109709dd849dd4724900e43f7c7f1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testCasesFromSpec()         throws Exception", "signatureAfterChange": "      @Test     public void testCasesFromSpec()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"grammars/java8/InputLambdaTest15.java\"),", "+        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "+                + \"tools/checkstyle/grammars/java8/InputLambdaTest15.java\").getCanonicalPath(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a75e6461a67bf6f2f1b2cdfe61bd8c11", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "e6a959013065a36ab17dd923d563e54bf845f9e1", "commitAfterChange": "6f2d19e2c49109709dd849dd4724900e43f7c7f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testWithoutArgsFullLambdaBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithoutArgsFullLambdaBody()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"grammars/java8/InputLambdaTest3.java\"),", "+        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "+                + \"tools/checkstyle/grammars/java8/InputLambdaTest3.java\").getCanonicalPath(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4fb0f283d78a5c05c25eb685f7c9cb1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "e6a959013065a36ab17dd923d563e54bf845f9e1", "commitAfterChange": "6f2d19e2c49109709dd849dd4724900e43f7c7f1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testWithFewArgWIthTypeOneLine()         throws Exception", "signatureAfterChange": "      @Test     public void testWithFewArgWIthTypeOneLine()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"grammars/java8/InputLambdaTest12.java\"),", "+        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "+                + \"tools/checkstyle/grammars/java8/InputLambdaTest12.java\").getCanonicalPath(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d182871fdaac39c817b1b470953dbc99", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "e6a959013065a36ab17dd923d563e54bf845f9e1", "commitAfterChange": "6f2d19e2c49109709dd849dd4724900e43f7c7f1", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     public void testInTernary()         throws Exception", "signatureAfterChange": "      @Test     public void testInTernary()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"grammars/java8/InputLambdaTest18.java\"),", "+        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "+                + \"tools/checkstyle/grammars/java8/InputLambdaTest18.java\").getCanonicalPath(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1d91bd8db39666fc2f081990627f84f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "e6a959013065a36ab17dd923d563e54bf845f9e1", "commitAfterChange": "6f2d19e2c49109709dd849dd4724900e43f7c7f1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testWithOneArgWithFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithFullBody()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"grammars/java8/InputLambdaTest5.java\"),", "+        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "+                + \"tools/checkstyle/grammars/java8/InputLambdaTest5.java\").getCanonicalPath(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2935f0f7d2399e1f5b2f60e567cb825", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "e6a959013065a36ab17dd923d563e54bf845f9e1", "commitAfterChange": "6f2d19e2c49109709dd849dd4724900e43f7c7f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testWithOneArgWithOneLineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithOneLineBody()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"grammars/java8/InputLambdaTest4.java\"),", "+        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "+                + \"tools/checkstyle/grammars/java8/InputLambdaTest4.java\").getCanonicalPath(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d66f02a3bbc03e35578b7cc113b7e457", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "e6a959013065a36ab17dd923d563e54bf845f9e1", "commitAfterChange": "6f2d19e2c49109709dd849dd4724900e43f7c7f1", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Test     public void testWithTypecast()         throws Exception", "signatureAfterChange": "      @Test     public void testWithTypecast()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"grammars/java8/InputLambdaTest16.java\"),", "+        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "+                + \"tools/checkstyle/grammars/java8/InputLambdaTest16.java\").getCanonicalPath(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0e3c0fcdcc47708594af776d03744a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "e6a959013065a36ab17dd923d563e54bf845f9e1", "commitAfterChange": "6f2d19e2c49109709dd849dd4724900e43f7c7f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testWithOneArgWIthoutTypeOneLineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWIthoutTypeOneLineBody()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"grammars/java8/InputLambdaTest6.java\"),", "+        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "+                + \"tools/checkstyle/grammars/java8/InputLambdaTest6.java\").getCanonicalPath(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea0eb66863b48cdac8cb885814884081", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "e6a959013065a36ab17dd923d563e54bf845f9e1", "commitAfterChange": "6f2d19e2c49109709dd849dd4724900e43f7c7f1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testWithFewArgWithTypeFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithFewArgWithTypeFullBody()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"grammars/java8/InputLambdaTest13.java\"),", "+        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "+                + \"tools/checkstyle/grammars/java8/InputLambdaTest13.java\").getCanonicalPath(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee16ecb32c732c0a487511cc9afda382", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "e6a959013065a36ab17dd923d563e54bf845f9e1", "commitAfterChange": "6f2d19e2c49109709dd849dd4724900e43f7c7f1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testWIthMultilineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWIthMultilineBody()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"grammars/java8/InputLambdaTest14.java\"),", "+        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "+                + \"tools/checkstyle/grammars/java8/InputLambdaTest14.java\").getCanonicalPath(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee3a77fc93e15176d9d54fa068a0fdbb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "e6a959013065a36ab17dd923d563e54bf845f9e1", "commitAfterChange": "6f2d19e2c49109709dd849dd4724900e43f7c7f1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testWithOneArgWIthoutParenthesesWithoutTypeFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWIthoutParenthesesWithoutTypeFullBody()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"grammars/java8/InputLambdaTest11.java\"),", "+        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "+                + \"tools/checkstyle/grammars/java8/InputLambdaTest11.java\").getCanonicalPath(),"]}]}