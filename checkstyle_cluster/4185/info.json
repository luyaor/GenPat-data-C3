{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "63852732c72bf2ef2bba448613ee1821", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f7448f4bafc6e4ce32470061edbc8ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MethodNameCheckTest.java", "commitBeforeChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "commitAfterChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testAccessTuning() throws Exception", "signatureAfterChange": "      @Test     public void testAccessTuning() throws Exception", "diff": ["+", "+        final String pattern = \"^[a-z][a-zA-Z0-9]*$\";", "+", "-            \"12:16: Name 'InputMethNameEqualClsName' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            \"23:20: Name 'Inner' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            \"28:20: Name 'InputMethNameEqualClsName' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            \"37:24: Name 'InputMethNameEqualClsName' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            \"47:9: Name 'SweetInterface' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            \"53:17: Name 'Outter' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "+            \"12:16: \" + getCheckMessage(MSG_INVALID_PATTERN, \"InputMethNameEqualClsName\", pattern),", "+            \"23:20: \" + getCheckMessage(MSG_INVALID_PATTERN, \"Inner\", pattern),", "+            \"28:20: \" + getCheckMessage(MSG_INVALID_PATTERN, \"InputMethNameEqualClsName\", pattern),", "+            \"37:24: \" + getCheckMessage(MSG_INVALID_PATTERN, \"InputMethNameEqualClsName\", pattern),", "+            \"47:9: \" + getCheckMessage(MSG_INVALID_PATTERN, \"SweetInterface\", pattern),", "+            \"53:17: \" + getCheckMessage(MSG_INVALID_PATTERN, \"Outter\", pattern),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6efbd34ba0342db221fb794b2ae01f0e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeParameterNameTest.java", "commitBeforeChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "commitAfterChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testMethodFooName()         throws Exception", "signatureAfterChange": "      @Test     public void testMethodFooName()         throws Exception", "diff": ["+        final String pattern = \"^foo$\";", "+", "-            \"7:13: Name 'TT' must match pattern '^foo$'.\",", "-            \"9:6: Name 'e_e' must match pattern '^foo$'.\",", "-            \"19:6: Name 'Tfo$o2T' must match pattern '^foo$'.\",", "-            \"28:10: Name '_fo' must match pattern '^foo$'.\",", "-            \"35:6: Name 'E' must match pattern '^foo$'.\",", "-            \"37:14: Name 'T' must match pattern '^foo$'.\",", "+            \"7:13: \" + getCheckMessage(MSG_INVALID_PATTERN, \"TT\", pattern),", "+            \"9:6: \" + getCheckMessage(MSG_INVALID_PATTERN, \"e_e\", pattern),", "+            \"19:6: \" + getCheckMessage(MSG_INVALID_PATTERN, \"Tfo$o2T\", pattern),", "+            \"28:10: \" + getCheckMessage(MSG_INVALID_PATTERN, \"_fo\", pattern),", "+            \"35:6: \" + getCheckMessage(MSG_INVALID_PATTERN, \"E\", pattern),", "+            \"37:14: \" + getCheckMessage(MSG_INVALID_PATTERN, \"T\", pattern),"]}]}