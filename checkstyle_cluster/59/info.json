{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c996f36035b5e0d0d08c24c21151f249", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d97f5d1e0f86e533f58bebe75a62b75", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "82d8e91024a57a96fbb6410dacb29d6a3f582903", "commitAfterChange": "32bd618b193dc04935b9c3c11b5bc4364cca8c89", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "      @Test     public void testListFiles_DirectoryWithNull() throws Exception", "signatureAfterChange": "      @Test     public void testListFiles_DirectoryWithNull() throws Exception", "diff": ["-        Class[] param = new Class[1];", "+        Class<?>[] param = new Class<?>[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "197dbb06c1190ef5736fa733667e3c87", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AbstractLoader.java", "commitBeforeChange": "7c20c36cea276a2b9abb09e8b19eb5825e6a921a", "commitAfterChange": "262209477f39964a63103613f3e2c985da083371", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected AbstractLoader(String aPublicId, String aDtdResourceName)         throws SAXException, ParserConfigurationException", "signatureAfterChange": "     protected AbstractLoader(String aPublicId, String aDtdResourceName)         throws SAXException, ParserConfigurationException", "diff": ["-        this(new HashMap(1));", "+        this(new HashMap<String, String>(1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29efcdbc3f1618021e42733269795eff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "7c20c36cea276a2b9abb09e8b19eb5825e6a921a", "commitAfterChange": "262209477f39964a63103613f3e2c985da083371", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public Map getCComments()", "signatureAfterChange": "     public Map<Integer, List<TextBlock>> getCComments()", "diff": ["-    public Map getCComments()", "+    public Map<Integer, List<TextBlock>> getCComments()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d42588511a9750b47eabe697185501e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "82d8e91024a57a96fbb6410dacb29d6a3f582903", "commitAfterChange": "32bd618b193dc04935b9c3c11b5bc4364cca8c89", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "      @Test     public void testListFiles_notFile() throws Exception", "signatureAfterChange": "      @Test     public void testListFiles_notFile() throws Exception", "diff": ["-        Class[] param = new Class[1];", "+        Class<?>[] param = new Class<?>[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "421c78db574dfb7b0ee235be3300aa5b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "82d8e91024a57a96fbb6410dacb29d6a3f582903", "commitAfterChange": "32bd618b193dc04935b9c3c11b5bc4364cca8c89", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "      @Test     public void testCreateListener_IllegalStateException() throws Exception", "signatureAfterChange": "      @Test     public void testCreateListener_IllegalStateException() throws Exception", "diff": ["-        Class[] param = new Class[1];", "+        Class<?>[] param = new Class<?>[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46ad939cf04921c5b6ec4043f889622e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "82d8e91024a57a96fbb6410dacb29d6a3f582903", "commitAfterChange": "32bd618b193dc04935b9c3c11b5bc4364cca8c89", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "      @Test     public void testLoadProperties_IOException() throws Exception", "signatureAfterChange": "      @Test     public void testLoadProperties_IOException() throws Exception", "diff": ["-        Class[] param = new Class[1];", "+        Class<?>[] param = new Class<?>[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c19dba65285ed7eac8bd010233f8ec2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractOption.java", "commitBeforeChange": "4ebf621616e3c9ea2284e7109d19abbbe1a94efc", "commitAfterChange": "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected abstract Map getStrToOpt();", "signatureAfterChange": "     protected abstract Map<String, AbstractOption> getStrToOpt();", "diff": ["-    protected abstract Map getStrToOpt();", "+    protected abstract Map<String, AbstractOption> getStrToOpt();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f003a3fe25afa8427ae84410cd86390", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PropertyCacheFileTest.java", "commitBeforeChange": "82d8e91024a57a96fbb6410dacb29d6a3f582903", "commitAfterChange": "32bd618b193dc04935b9c3c11b5bc4364cca8c89", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testException_NoSuchAlgorithmException() throws Exception", "signatureAfterChange": "      @Test     public void testException_NoSuchAlgorithmException() throws Exception", "diff": ["-        Class[] param = new Class[1];", "+        Class<?>[] param = new Class<?>[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6178eb65dfb0164d7645008c7718016b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "262209477f39964a63103613f3e2c985da083371", "commitAfterChange": "08638b5f739d9929698860048c052da2d5f80209", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected boolean isSubclass(Class aChild, Class aParent)", "signatureAfterChange": "     protected boolean isSubclass(Class<?> aChild, Class<?> aParent)", "diff": ["-    protected boolean isSubclass(Class aChild, Class aParent)", "+    protected boolean isSubclass(Class<?> aChild, Class<?> aParent)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71b1ae59002f273870da19bc3758d721", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractOption.java", "commitBeforeChange": "4ebf621616e3c9ea2284e7109d19abbbe1a94efc", "commitAfterChange": "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected AbstractOption(String aStrRep)", "signatureAfterChange": "     protected AbstractOption(String aStrRep)", "diff": ["-        final Map strToOpt = getStrToOpt();", "+        final Map<String, AbstractOption> strToOpt = getStrToOpt();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77754f53b300a47884818a4301b0d459", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "7c20c36cea276a2b9abb09e8b19eb5825e6a921a", "commitAfterChange": "262209477f39964a63103613f3e2c985da083371", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public Map getCppComments()", "signatureAfterChange": "     public Map<Integer, TextBlock> getCppComments()", "diff": ["-    public Map getCppComments()", "+    public Map<Integer, TextBlock> getCppComments()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa4e33ad76f41f4797ba47863027e60f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public String normalize(String aPath)", "signatureAfterChange": "     public String normalize(String aPath)", "diff": ["-        final Stack s = new Stack();", "+        final Stack<String> s = new Stack<String>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3c2794be584447cc06b767e579b73b3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "262209477f39964a63103613f3e2c985da083371", "commitAfterChange": "08638b5f739d9929698860048c052da2d5f80209", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void process(File[] aFiles)", "signatureAfterChange": "     public void process(File[] aFiles)", "diff": ["-        final Map propFilesMap = arrangePropertyFiles(propertyFiles);", "+        final Map<String, Set<File>> propFilesMap =", "+            arrangePropertyFiles(propertyFiles);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c442e0a498cb4ec120cb6500129b5fa9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     private void register(int aType, Class aHandlerClass)", "signatureAfterChange": "     private void register(int aType, Class<?> aHandlerClass)", "diff": ["-    private void register(int aType, Class aHandlerClass)", "+    private void register(int aType, Class<?> aHandlerClass)", "-            final Constructor ctor = aHandlerClass.getConstructor(new Class[] {", "-                IndentationCheck.class,", "-                DetailAST.class,             // current AST", "-                ExpressionHandler.class,     // parent", "-            });", "+            final Constructor<?> ctor = aHandlerClass", "+                    .getConstructor(new Class[] {IndentationCheck.class,", "+                        DetailAST.class, // current AST", "+                        ExpressionHandler.class, // parent", "+                    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6f65d9eda4d6c832cdeabe6f104b2bb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "262209477f39964a63103613f3e2c985da083371", "commitAfterChange": "08638b5f739d9929698860048c052da2d5f80209", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     protected final Class tryLoadClass(Token aIdent, String aCurrentClass)", "signatureAfterChange": "     protected final Class<?> tryLoadClass(Token aIdent, String aCurrentClass)", "diff": ["-    protected final Class tryLoadClass(Token aIdent, String aCurrentClass)", "+    protected final Class<?> tryLoadClass(Token aIdent, String aCurrentClass)", "-        final Class clazz = resolveClass(aIdent.getText(), aCurrentClass);", "+        final Class<?> clazz = resolveClass(aIdent.getText(), aCurrentClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d02d502155c3ba5b9b0fe6e3e7d1758a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/coding/InputIllegalTypeMemberModifiers.java", "commitBeforeChange": "a29f01a95b9dee1e64ec7ed91b4d0876eb82c0bf", "commitAfterChange": "9e5803a8ece964599093a95dd924662ef5c0a23a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          java.util.TreeSet table4()", "signatureAfterChange": "          java.util.TreeSet<Object> table4()", "diff": ["-    java.util.TreeSet table4() { java.util.TreeSet treeSet = null; return null; }", "+    java.util.TreeSet<Object> table4() { java.util.TreeSet<Object> treeSet = null; return null; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2b344975fa384641ce84a8fd97add0a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/ClassResolverTest.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testMisc() throws ClassNotFoundException", "signatureAfterChange": "     public void testMisc() throws ClassNotFoundException", "diff": ["-        final Set imps = new HashSet();", "+        final Set<String> imps = new HashSet<String>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f517c6ee13a65198672a000e20c86b99", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private static void parsePropertyString(String aValue,                                            List aFragments,                                            List aPropertyRefs)         throws CheckstyleException", "signatureAfterChange": "     private static void parsePropertyString(String aValue,                                            List<String> aFragments,                                            List<String> aPropertyRefs)         throws CheckstyleException", "diff": ["-                                           List aFragments,", "-                                           List aPropertyRefs)", "+                                           List<String> aFragments,", "+                                           List<String> aPropertyRefs)"]}]}