{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "11d16875296bb8f09bcbf3b72f6050a1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ec5f935119dc3392273212bb40aa941", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "686afc521a11088c57632352eb6fd60a682b03d6", "commitAfterChange": "16ba5b35f9f346e7cea294afaad7f9211605ecaa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main(String[] aArgs)", "signatureAfterChange": "     public static void main(String[] aArgs)", "diff": ["+        }", "+        ", "+        //Load the set of package names", "+        String[] packageNames = null;", "+        if (line.hasOption(\"n\")) {", "+            try {", "+                packageNames = PackageNamesLoader.loadPackageNames(", "+                    line.getOptionValue(\"n\"));", "+            }", "+            catch (CheckstyleException e) {", "+                System.out.println(\"Error loading package names file\");", "+                e.printStackTrace(System.out);", "+                System.exit(1);", "+            }", "+            c.setPackageNames(packageNames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbfc1feab3b6e43c67e7edf50a6cc8c7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "1a7694f787314c10700fb3d038c524e33542b950", "commitAfterChange": "503677ccb90a0068fefba773dd04c534359aec18", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "     private void checkThrowsTags(List aTags, List aThrows)", "signatureAfterChange": "     private void checkThrowsTags(List aTags, List aThrows)", "diff": ["-            // Handle extra JavadocTag", "+            // Handle extra JavadocTag.", "-                log(tag.getLineNo(),", "-                    \"Unused @throws tag for '\" + tag.getArg1() + \"'.\");", "+                // TODO: Need write unit tests.", "+                boolean reqd = true;", "+                if (mConfig.isEnableCheckUnusedThrows()) {", "+                    try {", "+                        reqd = !Utils.isRuntimeException(", "+                            tag.getArg1(),", "+                            this.getClass().getClassLoader());", "+                    }", "+                    catch (ClassNotFoundException e) {", "+                        log(tag.getLineNo(),", "+                            \"Unable to get class information for @throws tag '\"", "+                            + tag.getArg1() + \"'.\");", "+                    }", "+                }", "+", "+                if (reqd) {", "+                    log(tag.getLineNo(),", "+                        \"Unused @throws tag for '\" + tag.getArg1() + \"'.\");", "+                }"]}]}