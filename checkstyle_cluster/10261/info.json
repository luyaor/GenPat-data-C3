{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06000bd70139cec4a566a3caab879be7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6139b3ea78237d1a36393c56248a2722", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "     @Test     public void testDefault() throws Exception", "diff": ["-            \"6:11: Catching 'RuntimeException' is not allowed.\",", "-            \"7:11: Catching 'Exception' is not allowed.\",", "-            \"8:11: Catching 'Throwable' is not allowed.\",", "-            \"14:11: Catching 'java.lang.RuntimeException' is not allowed.\",", "-            \"15:11: Catching 'java.lang.Exception' is not allowed.\",", "-            \"16:11: Catching 'java.lang.Throwable' is not allowed.\",", "+            \"6:11: \" + getCheckMessage(MSG_KEY, \"RuntimeException\"),", "+            \"7:11: \" + getCheckMessage(MSG_KEY, \"Exception\"),", "+            \"8:11: \" + getCheckMessage(MSG_KEY, \"Throwable\"),", "+            \"14:11: \" + getCheckMessage(MSG_KEY, \"java.lang.RuntimeException\"),", "+            \"15:11: \" + getCheckMessage(MSG_KEY, \"java.lang.Exception\"),", "+            \"16:11: \" + getCheckMessage(MSG_KEY, \"java.lang.Throwable\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbaa4e1548e65f7600bd1f7ea6d5bf77", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testModifiedControlVariable() throws Exception", "signatureAfterChange": "     @Test     public void testModifiedControlVariable() throws Exception", "diff": ["-            \"14:14: Control variable 'i' is modified.\",", "-            \"17:15: Control variable 'i' is modified.\",", "-            \"20:37: Control variable 'i' is modified.\",", "-            \"21:17: Control variable 'i' is modified.\",", "-            \"25:14: Control variable 'j' is modified.\",", "-            \"49:15: Control variable 's' is modified.\",", "+            \"14:14: \" + getCheckMessage(MSG_KEY, \"i\"),", "+            \"17:15: \" + getCheckMessage(MSG_KEY, \"i\"),", "+            \"20:37: \" + getCheckMessage(MSG_KEY, \"i\"),", "+            \"21:17: \" + getCheckMessage(MSG_KEY, \"i\"),", "+            \"25:14: \" + getCheckMessage(MSG_KEY, \"j\"),", "+            \"49:15: \" + getCheckMessage(MSG_KEY, \"s\"),"]}]}