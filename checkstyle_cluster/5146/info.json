{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a44656f7ee779266069a94911e9459f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dac0c2627e872c9fa4cf8a3f9e19b08", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/InputNestedBlocks.java", "commitBeforeChange": "59de966a7e8a2225da2b1e12624ca24beab509ac", "commitAfterChange": "97d669aad430216e2cf48fca85dd44676f9728cf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void method()", "signatureAfterChange": "      public void method()", "diff": ["+        // case statements are a bit complicated,", "+        // they do not have its own variable scope by default.", "+        // Hence it may be OK in some development teams to allow", "+        // nested blocks if they are the complete case body.", "-                x = 3; // OK", "+                // OK", "+                x = 3;", "+            case 1:", "+                // Not OK, SLIST is not complete case body", "+                {", "+                    x = 1;", "+                }", "+                break;", "+            case 2:", "+                // OK if allowInSwitchCase is true, SLIST is complete case body", "+                {", "+                    x = 1;", "+                    break;", "+                }", "+            case 3: // test fallthrough", "-                {   // should be marked, even if a switch", "-                    // case does not have its own scope", "+                // Not OK, SLIST is not complete case body", "+                System.out.println(\"Hello\");", "+                {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b17f1b7da40635718131cad3ad3bbade", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/InputSemantic2.java", "commitBeforeChange": "daf8230919a8ffc9058a7ce129f5c60309739a00", "commitAfterChange": "a0012d03eb6a7ebc42f1986f09a8fe698c09eeb0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic void fooMethod()", "signatureAfterChange": " \tpublic void fooMethod()", "diff": ["+\t\tswitch (a) {} //warn", "+\t\tswitch (a) { //ok", "+        case 1:", "+            a = 2;", "+        case 2:", "+            a = 3;", "+        default:", "+            a = 0;", "+        }"]}]}