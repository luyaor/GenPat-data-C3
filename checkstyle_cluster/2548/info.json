{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b002fd0f6ccc8439bfa6d7297b1ee9e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60424d5c6ad19d8559512fcfd6412343", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "commitBeforeChange": "e0471bb7f2840ebfa4adaa5fea697b4b3c31f782", "commitAfterChange": "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private boolean isSkipCase(DetailAST ast)", "signatureAfterChange": "     private boolean isSkipCase(DetailAST ast)", "diff": ["-        if (modifiers != null", "-            && modifiers.branchContains(TokenTypes.FINAL)) {", "-            // do not check final variables", "-            return true;", "-        }", "-        return false;", "+        return modifiers != null && modifiers.branchContains(TokenTypes.FINAL);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "710e629206452594d579b3d98e0b75d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "e0471bb7f2840ebfa4adaa5fea697b4b3c31f782", "commitAfterChange": "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private boolean isNotRelevantSituation(DetailAST ast, int currentType)", "signatureAfterChange": "     private boolean isNotRelevantSituation(DetailAST ast, int currentType)", "diff": ["-        if (allowEmptyTypes && isEmptyType(ast, parentType)) {", "-            return true;", "-        }", "-", "-        return false;", "+        return allowEmptyTypes && isEmptyType(ast, parentType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8037cca7ff7154b2404dfd6406c7786b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java", "commitBeforeChange": "e0471bb7f2840ebfa4adaa5fea697b4b3c31f782", "commitAfterChange": "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean isSamePackage(String className, int clsNameLen, int pkgNameLen,                                   String illegal, int illegalLen)", "signatureAfterChange": "     private boolean isSamePackage(String className, int clsNameLen, int pkgNameLen,                                   String illegal, int illegalLen)", "diff": ["-        if (pkgName != null", "-            && clsNameLen == illegalLen - pkgNameLen - 1", "-            && illegal.charAt(pkgNameLen) == '.'", "-            && illegal.endsWith(className)", "-            && illegal.startsWith(pkgName)) {", "-            return true;", "-        }", "-        return false;", "+        return pkgName != null", "+                && clsNameLen == illegalLen - pkgNameLen - 1", "+                && illegal.charAt(pkgNameLen) == '.'", "+                && illegal.endsWith(className)", "+                && illegal.startsWith(pkgName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea986a6870e89885a174f2d05b43e36c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/CheckUtils.java", "commitBeforeChange": "66d6361c27586d58ba478b0223e60c6f1c5aa7b4", "commitAfterChange": "1cd112831f9553f98decd92f69cee5ec7bb1179e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public static boolean isOperatorTokenPartOfGenericDeclaration(final DetailAST aNode)", "signatureAfterChange": "     public static boolean isOperatorTokenPartOfGenericDeclaration(         final DetailAST aNode)", "diff": ["-    public static boolean isOperatorTokenPartOfGenericDeclaration(final DetailAST aNode)", "+    public static boolean isOperatorTokenPartOfGenericDeclaration(", "+        final DetailAST aNode)", "-        if ((type == TokenTypes.GT || type == TokenTypes.LT)", "-            && (parentType == TokenTypes.TYPE_ARGUMENTS || parentType == TokenTypes.TYPE_PARAMETERS))", "+        if (((type == TokenTypes.GT) || (type == TokenTypes.LT))", "+            && ((parentType == TokenTypes.TYPE_ARGUMENTS)", "+                || (parentType == TokenTypes.TYPE_PARAMETERS)))", "-        else  if (type == TokenTypes.BAND", "-            && (parentType == TokenTypes.TYPE_UPPER_BOUNDS || parentType == TokenTypes.TYPE_LOWER_BOUNDS))", "-        {", "-            return true;", "-        }", "-        else", "-        {", "-            return false;", "-        }", "+        return (type == TokenTypes.BAND)", "+            && ((parentType == TokenTypes.TYPE_UPPER_BOUNDS)", "+                || (parentType == TokenTypes.TYPE_LOWER_BOUNDS));"]}]}