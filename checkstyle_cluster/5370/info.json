{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d4c9db94f3e2a887558931a30608b76", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f6b2dd967bc2c1e540773749f1c4d17", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "aa5dbacdcbf20a9b56e2f7ecb577bb47778b0c54", "commitAfterChange": "84c1f8375fa540e7b0313b95af6be6000e3c4c71", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "     private void checkImports()", "signatureAfterChange": "     private void checkImports()", "diff": ["-            if (fromPackage(imp.getText(), \"java.lang\")) {", "-                mMessages.add(imp.getLineNo(), \"import.lang\");", "-            }", "-            else if (fromPackage(imp.getText(), mPkgName)) {", "-                mMessages.add(imp.getLineNo(), \"import.same\");", "-            }", "-            else if (!isReferencedImport(imp)) {", "-                mMessages.add(imp.getLineNo(), \"import.unused\", imp.getText());", "-            }", "-            else if (isIllegalImport(imp.getText())) {", "+            if (isIllegalImport(imp.getText())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b617fc80ac58b5e477dd022e2099f46b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "d3433c91e0a791b0d1f44bf1975e930e15ed74b8", "commitAfterChange": "c3e5b6847935c79831965c774babd679c26ce0f2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     void verifyVariable(MyVariable aVar)", "signatureAfterChange": "     void verifyVariable(MyVariable aVar)", "diff": ["-                    else {", "-                        mMessages.add(aVar.getLineNo(), aVar.getColumnNo() - 1,", "-                                      \"variable.notPrivate\", aVar.getText());", "-                    }", "-                }", "-                else if (mods.containsPublic()", "-                         && mConfig.getPublicMemberRegexp()", "-                               .match(aVar.getText()))", "-                {", "-                    // silently allow", "-                }", "-                else {", "-                    mMessages.add(aVar.getLineNo(), aVar.getColumnNo() - 1,", "-                                  \"variable.notPrivate\", aVar.getText());"]}]}