{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "abcd672554173e99aca53a8e92e595b1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac65065b23af63cb5992d9b21a4d6f69", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheckTest.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testIncorrect() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrect() throws Exception", "diff": ["-            \"6: Annotation 'MyAnnotation1' should be alone on line.\",", "-            \"11: Annotation 'MyAnnotation1' should be alone on line.\",", "-            \"17: Annotation 'MyAnnotation1' have incorrect indentation level 8, expected level should be 4.\",", "-            \"25: Annotation 'MyAnnotation1' have incorrect indentation level 8, expected level should be 4.\",", "-            \"29: Annotation 'MyAnnotation1' should be alone on line.\",", "-            \"29: Annotation 'MyAnnotation2' should be alone on line.\",", "-            \"32: Annotation 'MyAnnotation2' have incorrect indentation level 7, expected level should be 4.\",", "-            \"36: Annotation 'MyAnnotation2' have incorrect indentation level 8, expected level should be 4.\",", "-            \"37: Annotation 'MyAnnotation3' have incorrect indentation level 6, expected level should be 4.\",", "-            \"38: Annotation 'MyAnnotation4' have incorrect indentation level 10, expected level should be 4.\",", "-            \"41: Annotation 'MyAnnotation1' should be alone on line.\",", "-            \"48: Annotation 'MyAnnotation1' have incorrect indentation level 12, expected level should be 8.\",", "-            \"61: Annotation 'MyAnnotation2' have incorrect indentation level 12, expected level should be 8.\",", "-            \"65: Annotation 'MyAnnotation2' have incorrect indentation level 12, expected level should be 8.\",", "-            \"70: Annotation 'MyAnnotation2' have incorrect indentation level 7, expected level should be 4.\",", "-            \"73: Annotation 'MyAnnotation1' should be alone on line.\",", "-            \"85: Annotation 'MyAnnotation2' have incorrect indentation level 11, expected level should be 8.\",", "-            \"88: Annotation 'MyAnnotation2' have incorrect indentation level 10, expected level should be 8.\",", "-            \"98: Annotation 'MyAnnotation2' have incorrect indentation level 0, expected level should be 3.\",", "+            \"6: \" + getCheckMessage(MSG_KEY_ANNOTATION_LOCATION_ALONE, \"MyAnnotation1\"),", "+            \"11: \" + getCheckMessage(MSG_KEY_ANNOTATION_LOCATION_ALONE, \"MyAnnotation1\"),", "+            \"17: \" + getCheckMessage(MSG_KEY_ANNOTATION_LOCATION, \"MyAnnotation1\", 8, 4),", "+            \"25: \" + getCheckMessage(MSG_KEY_ANNOTATION_LOCATION, \"MyAnnotation1\", 8, 4),", "+            \"29: \" + getCheckMessage(MSG_KEY_ANNOTATION_LOCATION_ALONE, \"MyAnnotation1\"),", "+            \"29: \" + getCheckMessage(MSG_KEY_ANNOTATION_LOCATION_ALONE, \"MyAnnotation2\"),", "+            \"32: \" + getCheckMessage(MSG_KEY_ANNOTATION_LOCATION, \"MyAnnotation2\", 7, 4),", "+            \"36: \" + getCheckMessage(MSG_KEY_ANNOTATION_LOCATION, \"MyAnnotation2\", 8, 4),", "+            \"37: \" + getCheckMessage(MSG_KEY_ANNOTATION_LOCATION, \"MyAnnotation3\", 6, 4),", "+            \"38: \" + getCheckMessage(MSG_KEY_ANNOTATION_LOCATION, \"MyAnnotation4\", 10, 4),", "+            \"41: \" + getCheckMessage(MSG_KEY_ANNOTATION_LOCATION_ALONE, \"MyAnnotation1\"),", "+            \"48: \" + getCheckMessage(MSG_KEY_ANNOTATION_LOCATION, \"MyAnnotation1\", 12, 8),", "+            \"61: \" + getCheckMessage(MSG_KEY_ANNOTATION_LOCATION, \"MyAnnotation2\", 12, 8),", "+            \"65: \" + getCheckMessage(MSG_KEY_ANNOTATION_LOCATION, \"MyAnnotation2\", 12, 8),", "+            \"70: \" + getCheckMessage(MSG_KEY_ANNOTATION_LOCATION, \"MyAnnotation2\", 7, 4),", "+            \"73: \" + getCheckMessage(MSG_KEY_ANNOTATION_LOCATION_ALONE, \"MyAnnotation1\"),", "+            \"85: \" + getCheckMessage(MSG_KEY_ANNOTATION_LOCATION, \"MyAnnotation2\", 11, 8),", "+            \"88: \" + getCheckMessage(MSG_KEY_ANNOTATION_LOCATION, \"MyAnnotation2\", 10, 8),", "+            \"98: \" + getCheckMessage(MSG_KEY_ANNOTATION_LOCATION, \"MyAnnotation2\", 0, 3),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdaac12bf82ec9ad31bdd2e911c9587e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyRightCurlyTest.java", "commitBeforeChange": "af52963008a800390e8b356db5811886572f37a3", "commitAfterChange": "3a5a73d5c110418f712f5a9a838c6b4106506fdd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          @Test     public void leftCurlyMethodsTest() throws IOException, Exception", "signatureAfterChange": "          @Test     public void leftCurlyMethodsTest() throws IOException, Exception", "diff": ["-        ", "-        String checkMessagePrevious = getCheckMessage(LeftCurlyCheck.class, \"line.previous\", \"{\");", "-            \"4:1: \" + checkMessagePrevious,", "-            \"9:5: \" + checkMessagePrevious,", "-            \"16:5: \" + checkMessagePrevious,", "-            \"19:5: \" + checkMessagePrevious,", "-            \"23:5: \" + checkMessagePrevious,", "-            \"31:1: \" + checkMessagePrevious,", "-            \"33:5: \" + checkMessagePrevious,", "-            \"38:9: \" + checkMessagePrevious,", "-            \"41:9: \" + checkMessagePrevious,", "-            \"45:9: \" + checkMessagePrevious,", "-            \"57:5: \" + checkMessagePrevious,", "-            \"61:5: \" + checkMessagePrevious,", "-            \"69:5: \" + checkMessagePrevious,", "-            \"72:5: \" + checkMessagePrevious, ", "-            \"76:5: \" + checkMessagePrevious,", "+            \"4:1: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 1),", "+            \"9:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"16:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"19:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"23:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"31:1: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 1),", "+            \"33:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"38:9: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 9),", "+            \"41:9: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 9),", "+            \"45:9: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 9),", "+            \"57:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"61:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"69:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"72:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"76:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),"]}]}