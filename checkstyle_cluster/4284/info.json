{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cb53a3dd0d602b8ce6bd9e9fcec100c4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a26725707e4042a91e09b6e3487ca7d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.java", "commitBeforeChange": "df32e217c919da990fa40151d0a29380f53fcde1", "commitAfterChange": "09f3ba94a69c266c9e50dd5b7fefc8bc387e7086", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setCharset(String aCharset)", "signatureAfterChange": "     public void setCharset(String aCharset)         throws UnsupportedEncodingException", "diff": ["-    /** @param aCharset the name of a charset */", "+     */", "+        throws UnsupportedEncodingException", "+        // TODO: This is a hack to check that aCharset is supported.", "+        // TODO: Find a better way in Java 1.3", "+        try {", "+            final String hack = new String(new byte[] {}, aCharset);", "+        }", "+        catch (UnsupportedEncodingException es) {", "+            final String message = \"unsupported charset: \" + es.getMessage();", "+            throw new UnsupportedEncodingException(message);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb19635591f77806f98196070f003726", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Utils.java", "commitBeforeChange": "915c6568cf2cde57c3e92ee9786acb4808562671", "commitAfterChange": "df32e217c919da990fa40151d0a29380f53fcde1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static String[] getLines(String aFileName, String aCharsetName)         throws IOException", "signatureAfterChange": "     public static String[] getLines(String aFileName, String aCharsetName)         throws IOException", "diff": ["-        final LineNumberReader lnr =", "-              new LineNumberReader(new InputStreamReader(fr, aCharsetName));", "-", "+        LineNumberReader lnr = null;", "+        try {", "+            lnr = new LineNumberReader(new InputStreamReader(fr, aCharsetName));", "+        }", "+        catch (UnsupportedEncodingException ex) {", "+            final String message = \"unsupported charset: \" + ex.getMessage();", "+            throw new UnsupportedEncodingException(message);", "+        }"]}]}