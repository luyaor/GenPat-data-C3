{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f51cb0c7ad137a4b6f36ef55a29a5e57", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "173eb0b0bbbec8b739019cd0be18016d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "         public ClassFrame(LexicalFrame aParent)", "signatureAfterChange": "         public ClassFrame(LexicalFrame parent)", "diff": ["-        public ClassFrame(LexicalFrame aParent)", "+        public ClassFrame(LexicalFrame parent)", "-            super(aParent);", "-            mInstanceMembers = Sets.newHashSet();", "-            mInstanceMethods = Sets.newHashSet();", "-            mStaticMembers = Sets.newHashSet();", "-            mStaticMethods = Sets.newHashSet();", "+            super(parent);", "+            instanceMembers = Sets.newHashSet();", "+            instanceMethods = Sets.newHashSet();", "+            staticMembers = Sets.newHashSet();", "+            staticMethods = Sets.newHashSet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17bed6256c68c5867e572bce538b18bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void checkTypeParamTag(final int aLineNo,             final List<JavadocTag> aTags, final String aTypeParamName)", "signatureAfterChange": "     private void checkTypeParamTag(final int lineNo,             final List<JavadocTag> tags, final String typeParamName)", "diff": ["-    private void checkTypeParamTag(final int aLineNo,", "-            final List<JavadocTag> aTags, final String aTypeParamName)", "+    private void checkTypeParamTag(final int lineNo,", "+            final List<JavadocTag> tags, final String typeParamName)", "-        for (int i = aTags.size() - 1; i >= 0; i--) {", "-            final JavadocTag tag = aTags.get(i);", "+        for (int i = tags.size() - 1; i >= 0; i--) {", "+            final JavadocTag tag = tags.get(i);", "-                && (tag.getArg1().indexOf(\"<\" + aTypeParamName + \">\") == 0))", "+                && (tag.getArg1().indexOf(\"<\" + typeParamName + \">\") == 0))", "-            log(aLineNo, \"type.missingTag\",", "-                JavadocTagInfo.PARAM.getText() + \" <\" + aTypeParamName + \">\");", "+            log(lineNo, \"type.missingTag\",", "+                JavadocTagInfo.PARAM.getText() + \" <\" + typeParamName + \">\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ddd91b16862c77fc4e67e058817ab1f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private int compare(String aString1, String aString2,             boolean aCaseSensitive)", "signatureAfterChange": "     private int compare(String string1, String string2,             boolean caseSensitive)", "diff": ["-    private int compare(String aString1, String aString2,", "-            boolean aCaseSensitive)", "+    private int compare(String string1, String string2,", "+            boolean caseSensitive)", "-        if (aCaseSensitive) {", "-            return aString1.compareTo(aString2);", "+        if (caseSensitive) {", "+            return string1.compareTo(string2);", "-        return aString1.compareToIgnoreCase(aString2);", "+        return string1.compareToIgnoreCase(string2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ec54004b74ef9878c93ab39926e24f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void startElement(String aNamespaceURI,                              String aLocalName,                              String aQName,                              Attributes aAtts)         throws SAXException", "signatureAfterChange": "      @Override     public void startElement(String namespaceURI,                              String locqName,                              String qName,                              Attributes atts)         throws SAXException", "diff": ["-    public void startElement(String aNamespaceURI,", "-                             String aLocalName,", "-                             String aQName,", "-                             Attributes aAtts)", "+    public void startElement(String namespaceURI,", "+                             String locqName,", "+                             String qName,", "+                             Attributes atts)", "-        if (\"suppress\".equals(aQName)) {", "+        if (\"suppress\".equals(qName)) {", "-            final String files = aAtts.getValue(\"files\");", "+            final String files = atts.getValue(\"files\");", "-            final String checks = aAtts.getValue(\"checks\");", "-            final String modId = aAtts.getValue(\"id\");", "+            final String checks = atts.getValue(\"checks\");", "+            final String modId = atts.getValue(\"id\");", "-            final String lines = aAtts.getValue(\"lines\");", "+            final String lines = atts.getValue(\"lines\");", "-            final String columns = aAtts.getValue(\"columns\");", "+            final String columns = atts.getValue(\"columns\");", "-            mFilterChain.addFilter(suppress);", "+            filterChain.addFilter(suppress);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cf73944b3381f07e683c1dc8d89e2d8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private boolean checkIf(final DetailAST aAST, boolean aUseBreak,                             boolean aUseContinue)", "signatureAfterChange": "     private boolean checkIf(final DetailAST ast, boolean useBreak,                             boolean useContinue)", "diff": ["-    private boolean checkIf(final DetailAST aAST, boolean aUseBreak,", "-                            boolean aUseContinue)", "+    private boolean checkIf(final DetailAST ast, boolean useBreak,", "+                            boolean useContinue)", "-        final DetailAST thenStmt = aAST.findFirstToken(TokenTypes.RPAREN)", "+        final DetailAST thenStmt = ast.findFirstToken(TokenTypes.RPAREN)", "-        boolean isTerminated = isTerminated(thenStmt, aUseBreak, aUseContinue);", "+        boolean isTerminated = isTerminated(thenStmt, useBreak, useContinue);", "-                                        aUseBreak, aUseContinue);", "+                                        useBreak, useContinue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "545e665c543ee668245170253fb23db7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     private void checkParamTags(final List<JavadocTag> aTags,             final DetailAST aParent, boolean aReportExpectedTags)", "signatureAfterChange": "     private void checkParamTags(final List<JavadocTag> tags,             final DetailAST parent, boolean reportExpectedTags)", "diff": ["-    private void checkParamTags(final List<JavadocTag> aTags,", "-            final DetailAST aParent, boolean aReportExpectedTags)", "+    private void checkParamTags(final List<JavadocTag> tags,", "+            final DetailAST parent, boolean reportExpectedTags)", "-        final List<DetailAST> params = getParameters(aParent);", "+        final List<DetailAST> params = getParameters(parent);", "-                .getTypeParameters(aParent);", "+                .getTypeParameters(parent);", "-        final ListIterator<JavadocTag> tagIt = aTags.listIterator();", "+        final ListIterator<JavadocTag> tagIt = tags.listIterator();", "-        if (!mAllowMissingParamTags && aReportExpectedTags) {", "+        if (!allowMissingParamTags && reportExpectedTags) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dc6be09d696ce03f440d068d1df73fd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private boolean matchesSpecialImportsGroup(boolean aStatic,         String aCurrentImport, String aCurrentGroup)", "signatureAfterChange": "     private boolean matchesSpecialImportsGroup(boolean isStatic,         String currentImport, String currentGroup)", "diff": ["-    private boolean matchesSpecialImportsGroup(boolean aStatic,", "-        String aCurrentImport, String aCurrentGroup)", "+    private boolean matchesSpecialImportsGroup(boolean isStatic,", "+        String currentImport, String currentGroup)", "-        return !aStatic && SPECIAL_IMPORTS_RULE_GROUP.equals(aCurrentGroup)", "-                && mSpecialImportsRegExp.matcher(aCurrentImport).find();", "+        return !isStatic && SPECIAL_IMPORTS_RULE_GROUP.equals(currentGroup)", "+                && specialImportsRegExp.matcher(currentImport).find();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f302acd07813838a61e373dda09e011", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private boolean matchesStandartImportGroup(boolean aStatic,         String aCurrentImport, String aCurrentGroup)", "signatureAfterChange": "     private boolean matchesStandartImportGroup(boolean isStatic,         String currentImport, String currentGroup)", "diff": ["-    private boolean matchesStandartImportGroup(boolean aStatic,", "-        String aCurrentImport, String aCurrentGroup)", "+    private boolean matchesStandartImportGroup(boolean isStatic,", "+        String currentImport, String currentGroup)", "-        return !aStatic && STANDARD_JAVA_PACKAGE_RULE_GROUP.equals(aCurrentGroup)", "-                && mStandardPackageRegExp.matcher(aCurrentImport).find();", "+        return !isStatic && STANDARD_JAVA_PACKAGE_RULE_GROUP.equals(currentGroup)", "+                && standardPackageRegExp.matcher(currentImport).find();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8033976ec0b45796b4f15a093b9bfcb0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     private void checkReturnTag(List<JavadocTag> aTags, int aLineNo,         boolean aReportExpectedTags)", "signatureAfterChange": "     private void checkReturnTag(List<JavadocTag> tags, int lineNo,         boolean reportExpectedTags)", "diff": ["-    private void checkReturnTag(List<JavadocTag> aTags, int aLineNo,", "-        boolean aReportExpectedTags)", "+    private void checkReturnTag(List<JavadocTag> tags, int lineNo,", "+        boolean reportExpectedTags)", "-        final ListIterator<JavadocTag> it = aTags.listIterator();", "+        final ListIterator<JavadocTag> it = tags.listIterator();", "-        if (!found && !mAllowMissingReturnTag && aReportExpectedTags) {", "-            log(aLineNo, \"javadoc.return.expected\");", "+        if (!found && !allowMissingReturnTag && reportExpectedTags) {", "+            log(lineNo, \"javadoc.return.expected\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e497d22689d1d576bb448b1092e9567", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void startElement(String aNamespaceURI,                              String aLocalName,                              String aQName,                              Attributes aAtts)         throws SAXException", "signatureAfterChange": "      @Override     public void startElement(String namespaceURI,                              String localName,                              String qName,                              Attributes atts)         throws SAXException", "diff": ["-    public void startElement(String aNamespaceURI,", "-                             String aLocalName,", "-                             String aQName,", "-                             Attributes aAtts)", "+    public void startElement(String namespaceURI,", "+                             String localName,", "+                             String qName,", "+                             Attributes atts)", "-        if (\"package\".equals(aQName)) {", "+        if (\"package\".equals(qName)) {", "-            final String name = aAtts.getValue(\"name\");", "+            final String name = atts.getValue(\"name\");", "-            mPackageStack.push(name);", "+            packageStack.push(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a654cf82a92944464b8e5dd89805553b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          @Override         public void endElement(String aNamespaceURI,                                String aLocalName,                                String aQName)             throws SAXException", "signatureAfterChange": "          @Override         public void endElement(String namespaceURI,                                String localName,                                String qName)             throws SAXException", "diff": ["-        public void endElement(String aNamespaceURI,", "-                               String aLocalName,", "-                               String aQName)", "+        public void endElement(String namespaceURI,", "+                               String localName,", "+                               String qName)", "-            if (aQName.equals(MODULE)) {", "+            if (qName.equals(MODULE)) {", "-                    mConfigStack.pop();", "+                    configStack.pop();", "-                final boolean omitModule = mOmitIgnoredModules", "+                final boolean omitModule = omitIgnoredModules", "-                if (omitModule && !mConfigStack.isEmpty()) {", "+                if (omitModule && !configStack.isEmpty()) {", "-                        mConfigStack.peek();", "+                        configStack.peek();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be6610953f5003e510a9e085bb72b63e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private boolean matchesSamePackageImportGroup(boolean aStatic,         String aImportPath, String aCurrentGroup)", "signatureAfterChange": "     private boolean matchesSamePackageImportGroup(boolean isStatic,         String importFullPath, String currentGroup)", "diff": ["-    private boolean matchesSamePackageImportGroup(boolean aStatic,", "-        String aImportPath, String aCurrentGroup)", "+    private boolean matchesSamePackageImportGroup(boolean isStatic,", "+        String importFullPath, String currentGroup)", "-        final String importPath = aImportPath.substring(0, aImportPath.lastIndexOf(\".\"));", "-        return !aStatic && SAME_PACKAGE_RULE_GROUP.equals(aCurrentGroup)", "-                && mSamePackageDomainsRegExp.contains(importPath);", "+        final String importPath = importFullPath.substring(0, importFullPath.lastIndexOf(\".\"));", "+        return !isStatic && SAME_PACKAGE_RULE_GROUP.equals(currentGroup)", "+                && samePackageDomainsRegExp.contains(importPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4532fc26d113fe446acc95a0ee39b6c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean isTerminated(final DetailAST aAST, boolean aUseBreak,                                  boolean aUseContinue)", "signatureAfterChange": "     private boolean isTerminated(final DetailAST ast, boolean useBreak,                                  boolean useContinue)", "diff": ["-    private boolean isTerminated(final DetailAST aAST, boolean aUseBreak,", "-                                 boolean aUseContinue)", "+    private boolean isTerminated(final DetailAST ast, boolean useBreak,", "+                                 boolean useContinue)", "-        switch (aAST.getType()) {", "+        switch (ast.getType()) {", "-            return aUseBreak;", "+            return useBreak;", "-            return aUseContinue;", "+            return useContinue;", "-            return checkSlist(aAST, aUseBreak, aUseContinue);", "+            return checkSlist(ast, useBreak, useContinue);", "-            return checkIf(aAST, aUseBreak, aUseContinue);", "+            return checkIf(ast, useBreak, useContinue);", "-            return checkLoop(aAST);", "+            return checkLoop(ast);", "-            return checkTry(aAST, aUseBreak, aUseContinue);", "+            return checkTry(ast, useBreak, useContinue);", "-            return checkSwitch(aAST, aUseContinue);", "+            return checkSwitch(ast, useContinue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c97ae2c1a5227a1e7766deb4f528b839", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected final void logError(DetailAST aAst, String aSubtypeName,                                   int aActualLevel)", "signatureAfterChange": "     protected final void logError(DetailAST ast, String subtypeName,                                   int actualLevel)", "diff": ["-    protected final void logError(DetailAST aAst, String aSubtypeName,", "-                                  int aActualLevel)", "+    protected final void logError(DetailAST ast, String subtypeName,", "+                                  int actualLevel)", "-        logError(aAst, aSubtypeName, aActualLevel, getLevel());", "+        logError(ast, subtypeName, actualLevel, getLevel());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca3b8e9747a4228b89057b1c815b70ca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void processTypeParams(DetailAST aAST)", "signatureAfterChange": "     private void processTypeParams(DetailAST ast)", "diff": ["-    private void processTypeParams(DetailAST aAST)", "+    private void processTypeParams(DetailAST ast)", "-        final DetailAST typeParams =", "-            aAST.findFirstToken(TokenTypes.TYPE_PARAMETERS);", "+        final DetailAST params =", "+            ast.findFirstToken(TokenTypes.TYPE_PARAMETERS);", "-        mTypeParams.push(paramsMap);", "+        typeParams.push(paramsMap);", "-        if (typeParams == null) {", "+        if (params == null) {", "-        for (DetailAST child = typeParams.getFirstChild();", "+        for (DetailAST child = params.getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc461a658e130bf4fe1c02b7f86cd3d6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private boolean checkTry(final DetailAST aAST, boolean aUseBreak,                              boolean aUseContinue)", "signatureAfterChange": "     private boolean checkTry(final DetailAST ast, boolean useBreak,                              boolean useContinue)", "diff": ["-    private boolean checkTry(final DetailAST aAST, boolean aUseBreak,", "-                             boolean aUseContinue)", "+    private boolean checkTry(final DetailAST ast, boolean useBreak,", "+                             boolean useContinue)", "-        final DetailAST finalStmt = aAST.getLastChild();", "+        final DetailAST finalStmt = ast.getLastChild();", "-                                aUseBreak, aUseContinue);", "+                                useBreak, useContinue);", "-        boolean isTerminated = isTerminated(aAST.getFirstChild(),", "-                                            aUseBreak, aUseContinue);", "+        boolean isTerminated = isTerminated(ast.getFirstChild(),", "+                                            useBreak, useContinue);", "-        DetailAST catchStmt = aAST.findFirstToken(TokenTypes.LITERAL_CATCH);", "+        DetailAST catchStmt = ast.findFirstToken(TokenTypes.LITERAL_CATCH);", "-            isTerminated &= isTerminated(catchBody, aUseBreak, aUseContinue);", "+            isTerminated &= isTerminated(catchBody, useBreak, useContinue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa275c52d63ec6c7c47a120be105ab75", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void endElement(final String aNamespaceURI, final String aLocalName,         final String aQName)", "signatureAfterChange": "      @Override     public void endElement(final String namespaceURI, final String localName,         final String qName)", "diff": ["-    public void endElement(final String aNamespaceURI, final String aLocalName,", "-        final String aQName)", "+    public void endElement(final String namespaceURI, final String localName,", "+        final String qName)", "-        if (\"subpackage\".equals(aQName)) {", "-            assert mStack.size() > 1;", "-            mStack.pop();", "+        if (\"subpackage\".equals(qName)) {", "+            assert stack.size() > 1;", "+            stack.pop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc63e1f532f62ee0ad4eca645a592351", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean checkSlist(final DetailAST aAST, boolean aUseBreak,                                boolean aUseContinue)", "signatureAfterChange": "     private boolean checkSlist(final DetailAST ast, boolean useBreak,                                boolean useContinue)", "diff": ["-    private boolean checkSlist(final DetailAST aAST, boolean aUseBreak,", "-                               boolean aUseContinue)", "+    private boolean checkSlist(final DetailAST ast, boolean useBreak,", "+                               boolean useContinue)", "-        DetailAST lastStmt = aAST.getLastChild();", "+        DetailAST lastStmt = ast.getLastChild();", "-            && isTerminated(lastStmt, aUseBreak, aUseContinue);", "+            && isTerminated(lastStmt, useBreak, useContinue);"]}]}