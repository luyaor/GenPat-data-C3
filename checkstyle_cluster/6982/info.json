{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0713be7ee710f1259fc4f58dc4efb143", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00a2b9f4823fbb099369ad23d42ddd6b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultConfiguration.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Override     public Configuration[] getChildren()", "signatureAfterChange": "     @Override     public Configuration[] getChildren()", "diff": ["-        return mChildren.toArray(", "-            new Configuration[mChildren.size()]);", "+        return children.toArray(", "+            new Configuration[children.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02dc29327a739b75d93e115303d7efd9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/UnnecessaryParenthesesCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (surrounded && inTokenList(type, LITERALS)) {", "+        if (surrounded && isInTokenList(type, LITERALS)) {", "-        if (inTokenList(type, ASSIGNMENTS)) {", "+        if (isInTokenList(type, ASSIGNMENTS)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03497ec9befa94ca5d8594bef5b2ed94", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java", "commitBeforeChange": "896af516b0028ff2a26cc1888dfaba620d3fe9e0", "commitAfterChange": "55c92042eb6986e905529de841d3d1c9a7b2b6dd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static DetailAST getArrayTypeOrIdentifier(DetailAST arrayDeclarator)", "signatureAfterChange": "     private static DetailAST getArrayTypeOrIdentifier(DetailAST arrayDeclarator)", "diff": ["-            if (isCstyleMultiDimensionalArrayDeclaration(arrayDeclarator)) {", "+            if (isCStyleMultiDimensionalArrayDeclaration(arrayDeclarator)) {", "-            if (isCstyleArrayDeclaration(arrayDeclarator)) {", "+            if (isCStyleArrayDeclaration(arrayDeclarator)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0aabf3fd4a22e216fe6d9de008b43fd3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public SuppressElement(String aFiles, String aChecks)         throws RESyntaxException", "signatureAfterChange": "     public SuppressElement(String aFiles, String aChecks)         throws PatternSyntaxException", "diff": ["-        throws RESyntaxException", "+        throws PatternSyntaxException", "-        mFileRegexp = Utils.getRE(aFiles);", "+        mFileRegexp = Utils.getPattern(aFiles);", "-        mCheckRegexp = Utils.getRE(aChecks);", "+        mCheckRegexp = Utils.getPattern(aChecks);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12abe329532e07cd84fd84d1af3add0f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule528typevariablenames/ClassMethodTypeParameterNameTest.java", "commitBeforeChange": "a244f057057913003dd17e952ee76a844f0fb76b", "commitAfterChange": "dc0a1a2fccdf6a642b05dee98206c7dd487162bd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testClassDefault() throws Exception", "signatureAfterChange": "      @Test     public void testClassDefault() throws Exception", "diff": ["-            \"5:31: \" + getCheckMessage(configuration.getMessages(), msgKey, \"t\", format),", "-            \"13:14: \" + getCheckMessage(configuration.getMessages(), msgKey, \"foo\", format),", "-            \"27:24: \" + getCheckMessage(configuration.getMessages(), msgKey, \"$foo\", format),", "+            \"5:31: \" + getCheckMessage(configuration.getMessages(), MSG_KEY, \"t\", format),", "+            \"13:14: \" + getCheckMessage(configuration.getMessages(), MSG_KEY, \"foo\", format),", "+            \"27:24: \" + getCheckMessage(configuration.getMessages(), MSG_KEY, \"$foo\", format),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18f6e6b8af7e9b15eff7b1de50ba1799", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "31cc403a41c60aa09050252953a56ef053c034d4", "commitAfterChange": "2f9b0f057c489d074967575696a0d53a34fec6b7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void reportCComment(int startLineNo, int startColNo,             int endLineNo, int endColNo)", "signatureAfterChange": "     public void reportCComment(int startLineNo, int startColNo,             int endLineNo, int endColNo)", "diff": ["-        if (cComments.containsKey(startLineNo)) {", "-            final List<TextBlock> entries = cComments.get(startLineNo);", "+        if (clangComments.containsKey(startLineNo)) {", "+            final List<TextBlock> entries = clangComments.get(startLineNo);", "-            cComments.put(startLineNo, entries);", "+            clangComments.put(startLineNo, entries);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a430da07a1c0106e4bcb3303fae641d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/MethodParamPadCheck.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                log(parenAST, \"line.previous\", parenAST.getText());", "+                log(parenAST, LINE_PREVIOUS, parenAST.getText());", "-                log(parenAST , \"ws.preceded\", parenAST.getText());", "+                log(parenAST , WS_PRECEDED, parenAST.getText());", "-                log(parenAST, \"ws.notPreceded\", parenAST.getText());", "+                log(parenAST, WS_NOT_PRECEDED, parenAST.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1de37390aa5260b9ffe9916da2d3fea4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void logCommaViolation(final DetailAST ast)", "signatureAfterChange": "     private void logCommaViolation(final DetailAST ast)", "diff": ["-        if (this.comma == TrailingArrayComma.ALWAYS", "+        if (this.trailingArrayComma == TrailingArrayComma.ALWAYS", "-        else if (this.comma == TrailingArrayComma.NEVER", "+        else if (this.trailingArrayComma == TrailingArrayComma.NEVER"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ff6bd14e108e9a05d98a0d7e71951c3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsTest.java", "commitBeforeChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "commitAfterChange": "fdc81723bdfd6af2ffc2c901cd8dd5b2fe948267", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r     @Test\r     public void testExpandedDefault() throws Exception", "signatureAfterChange": "\r     @Test\r     public void testExpandedDefault() throws Exception", "diff": ["-            \"82:90: The warning '' cannot be suppressed at this location.\",\r", "-            \"82:103: The warning '   ' cannot be suppressed at this location.\",\r", "-            \"82:177: The warning '' cannot be suppressed at this location.\",\r", "-            \"82:190: The warning '   ' cannot be suppressed at this location.\",\r", "+            \"82:100: The warning '' cannot be suppressed at this location.\",\r", "+            \"82:113: The warning '   ' cannot be suppressed at this location.\",\r", "+            \"82:187: The warning '' cannot be suppressed at this location.\",\r", "+            \"82:200: The warning '   ' cannot be suppressed at this location.\",\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "261a9b76da8b2812e533d8c28a2b63e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public final IndentLevel getLevel()", "signatureAfterChange": "     public final IndentLevel getIndent()", "diff": ["-    public final IndentLevel getLevel() {", "-        if (level == null) {", "-            level = getLevelImpl();", "+    public final IndentLevel getIndent() {", "+        if (indent == null) {", "+            indent = getIndentImpl();", "-        return level;", "+        return indent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26c5cd8d5d269eec08204d074d345931", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "0fd69594a4c3e82f92f93f0371791da66938f8c3", "commitAfterChange": "f0f7f3e762ffef78dcf82bf1611c10da48b96cb9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main(String[] aArgs)", "signatureAfterChange": "     public static void main(String[] aArgs)", "diff": ["-            c = new Checker(System.getProperties(), System.err);", "+            c = new Checker(System.getProperties(), System.out);", "-            System.err.println(\"Unable to create an regexp object: \" +", "+            System.out.println(\"Unable to create an regexp object: \" +", "-            rese.printStackTrace(System.err);", "+            rese.printStackTrace(System.out);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a12ed16f14184478dcdeca73cf740b7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java", "commitBeforeChange": "b8c558e473c0a9a75c41312e31df34b8572a271b", "commitAfterChange": "58ce4c40970fc29d00e5740bc6098eb475668e86", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            if (mCheckUnusedThrows) {", "+            if (mAllowUndeclaredRTE) {", "-            if (mCheckUnusedThrows) {", "+            if (mAllowUndeclaredRTE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d9c8739bf4f1d7c224075063877e1ab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "3a55941f33dcd9111d6b61b0505217f47973a39d", "commitAfterChange": "f60a9cfe8b1b27d5ea25095bdfc690001da9f4d6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setColumns(String columns)", "signatureAfterChange": "     public void setColumns(String columns)", "diff": ["-        columnsCSV = columns;", "+        columnsCsv = columns;", "-            columnFilter = new CSVFilter(columns);", "+            columnFilter = new CsvFilter(columns);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fc45a9ecf4ba855eaf7aec9e3f00ed1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "e1d0e7f6361c32c69650ba789c1995e49a94142f", "commitAfterChange": "7dd24c8c35572b5db3e5c905d440e813cfe2538c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public String getFilename()", "signatureAfterChange": "     public String getFileName()", "diff": ["-    public String getFilename()", "+    public String getFileName()", "-        return filename;", "+        return fileName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "319bad05cb4a63e74c6c82277d6f3a0f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/VerifierImpl.java", "commitBeforeChange": "0fd69594a4c3e82f92f93f0371791da66938f8c3", "commitAfterChange": "f0f7f3e762ffef78dcf82bf1611c10da48b96cb9", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private static RE createRE(String aPattern)", "signatureAfterChange": "     private static RE createRE(String aPattern)", "diff": ["-            System.err.println(\"Failed to initialise regexp expression \" +", "+            System.out.println(\"Failed to initialise regexp expression \" +", "-            e.printStackTrace(System.err);", "+            e.printStackTrace(System.out);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a3f797dcf76daf5c14cd52ed859c852", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "8dc1a8ab994076f3fc10bab9248a2439ee54b443", "commitAfterChange": "21f0b07bd031f022d14106150af66ceddb4c06b8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void addFilter(Filter aFilter)", "signatureAfterChange": "     public void addFilter(Filter aFilter)", "diff": ["-        mFilters.add(aFilter);", "-    }", "+        mFilterChain.addFilter(aFilter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3baf711cc7aa3bb051e4ede34b651555", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ForHandler.java", "commitBeforeChange": "0eeb5e4fd6aa2c4b8a559e55384bba67d7d695c7", "commitAfterChange": "092e1f69476fc715852035a25b23a11804183a23", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private void checkForParams()", "signatureAfterChange": "     private void checkForParams()", "diff": ["-            getLevel() + getIndentCheck().getIndentationAmount());", "+            getLevel() + getIndentCheck().getBasicOffset());", "-            getLevel() + getIndentCheck().getIndentationAmount());", "+            getLevel() + getIndentCheck().getBasicOffset());", "-            getLevel() + getIndentCheck().getIndentationAmount());", "+            getLevel() + getIndentCheck().getBasicOffset());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f17f1def944cfa1b58d2e0dd82cfb91", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "595d070db0215c3cf0555d5074719cffc673c890", "commitAfterChange": "868d96b45918b5bb0db4b80bdf5b70f5202d6590", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void startSemi(DetailAST aAst)", "signatureAfterChange": "     private void visitSemi(DetailAST aAst)", "diff": ["-    private void startSemi(DetailAST aAst)", "+    private void visitSemi(DetailAST aAst)", "-        mExprDepth--;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4322a553ca775a4b7c26623eedea3d34", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private ClassResolver getClassResolver()", "signatureAfterChange": "     private ClassResolver getClassResolver()", "diff": ["-        if (mClassResolver == null) {", "-            mClassResolver =", "+        if (classResolver == null) {", "+            classResolver =", "-                                  mPackageFullIdent.getText(),", "-                                  mImports);", "+                                  packageFullIdent.getText(),", "+                                  imports);", "-        return mClassResolver;", "+        return classResolver;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "457a77aa4293746af27ae040403f3460", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void processStart(DetailAST ast)", "signatureAfterChange": "     private void processStart(DetailAST ast)", "diff": ["-                    log(ast.getLineNo(), before, WS_NOT_PRECEDED, \"<\");", "+                    log(ast.getLineNo(), before, WS_NOT_PRECEDED, OPEN_ANGLE_BRACKET);", "-                log(ast.getLineNo(), before, WS_PRECEDED, \"<\");", "+                log(ast.getLineNo(), before, WS_PRECEDED, OPEN_ANGLE_BRACKET);", "-            log(ast.getLineNo(), after, WS_FOLLOWED, \"<\");", "+            log(ast.getLineNo(), after, WS_FOLLOWED, OPEN_ANGLE_BRACKET);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46ee1993fed8d2796461acc2b31057d6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "896af516b0028ff2a26cc1888dfaba620d3fe9e0", "commitAfterChange": "55c92042eb6986e905529de841d3d1c9a7b2b6dd", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "         public Tag(String text, int line, SuppressWithNearbyCommentFilter filter)", "signatureAfterChange": "         public Tag(String text, int line, SuppressWithNearbyCommentFilter filter)", "diff": ["-                format = expandFrocomment(text, filter.checkFormat, filter.commentRegexp);", "+                format = expandFromComment(text, filter.checkFormat, filter.commentRegexp);", "-                    format = expandFrocomment(", "-                         text, filter.messageFormat, filter.commentRegexp);", "+                    format = expandFromComment(", "+                            text, filter.messageFormat, filter.commentRegexp);", "-                format = expandFrocomment(", "-                    text, filter.influenceFormat, filter.commentRegexp);", "+                format = expandFromComment(", "+                        text, filter.influenceFormat, filter.commentRegexp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49c139d4436137b4ce1d9a35f70790e5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AuditEvent.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public SeverityLevel getSeverityLevel()", "signatureAfterChange": "     public SeverityLevel getSeverityLevel()", "diff": ["-        return (mMessage == null)", "+        return (message == null)", "-            : mMessage.getSeverityLevel();", "+            : message.getSeverityLevel();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bc2977cfba8f3ec13ad7c5aaefb9471", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                if (!inLambda(ast)", "+                if (!isInLambda(ast)", "-                        && !inAbstractOrNativeMethod(ast)", "-                        && !ScopeUtils.inInterfaceBlock(ast)) {", "+                        && !isInAbstractOrNativeMethod(ast)", "+                        && !ScopeUtils.isInInterfaceBlock(ast)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cd36a6de74370041e7700bb83755597", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java", "commitBeforeChange": "02aaa1b7f653e25c34ef7f186fa1d940079384e8", "commitAfterChange": "52ac2776d7f128ff812b73b54dcc12210661f98b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic ConfigurationBuilder(File aROOT) \t\t\tthrows CheckstyleException, IOException", "signatureAfterChange": "  \tpublic ConfigurationBuilder(File aROOT) \t\t\tthrows CheckstyleException, IOException", "diff": ["-\t", "+", "-\t\tthis.mROOT = aROOT;", "-\t\tmConfig = getConfigurationFromXML(mXmlName, System.getProperties());", "-\t\tlistFiles(mFiles, mROOT, \"java\");", "+\t\tthis.ROOT = aROOT;", "+\t\tconfig = getConfigurationFromXML(xmlName, System.getProperties());", "+\t\tlistFiles(files, ROOT, \"java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fcc692413aba283d4e6efb72ec1e9bf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "ca89807d485f512061d7a7138aa91b454d85d466", "commitAfterChange": "ecd7ee879aa6cbc51fcb41093dbf42843256184f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void collectDeclarations(Deque<LexicalFrame> aFrameStack,         DetailAST aAST)", "signatureAfterChange": "     private void collectDeclarations(Deque<LexicalFrame> aFrameStack,         DetailAST aAST)", "diff": ["-                    ((ClassFrame) frame).addStaticMember(name);", "+                    ((ClassFrame) frame).addStaticMethod(name);", "-                    ((ClassFrame) frame).addInstanceMember(name);", "+                    ((ClassFrame) frame).addInstanceMethod(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fe72e5e0ee8ef7ae1e8ea578effc63c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private boolean hasProperAccessModifier(DetailAST variableDef, String variableName)", "signatureAfterChange": "     private boolean hasProperAccessModifier(DetailAST variableDef, String variableName)", "diff": ["-        if (!\"private\".equals(variableScope)) {", "+        if (!PRIVATE_ACCESS_MODIFIER.equals(variableScope)) {", "-                || packageAllowed && \"package\".equals(variableScope)", "-                || protectedAllowed && \"protected\".equals(variableScope)", "+                || packageAllowed && PACKAGE_ACCESS_MODIFIER.equals(variableScope)", "+                || protectedAllowed && PROTECTED_ACCESS_MODIFIER.equals(variableScope)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fff3a941442eccf8bf7549f4ff3be71", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Configurable.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     void configure(Configuration aConfiguration) throws CheckstyleException;", "signatureAfterChange": "     void configure(Configuration configuration) throws CheckstyleException;", "diff": ["-    void configure(Configuration aConfiguration) throws CheckstyleException;", "+    void configure(Configuration configuration) throws CheckstyleException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5110f5ce30e90cf1d12d7b523c04dde5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void checkIndentation()", "signatureAfterChange": "      @Override     public void checkIndentation()", "diff": ["-        checkExpressionSubtree(methodName, getLevel(), false, false);", "+        checkExpressionSubtree(methodName, getIndent(), false, false);", "-            new IndentLevel(getLevel(), getBasicOffset()),", "+            new IndentLevel(getIndent(), getBasicOffset()),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "526d4c4c2cdb85c6a9e78cc891e685c8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public int getCurrentIndentation()", "signatureAfterChange": "     public int getCurrentIndentation()", "diff": ["-        return mFirstNode.getColumnNo() + mIndentLevel;", "+        return firstNode.getColumnNo() + indentLevel;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5456164a98386c29b32691d451a7c24e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule528typevariablenames/ClassMethodTypeParameterNameTest.java", "commitBeforeChange": "0c75b3af7443afa5a3130bdbd1220fd1076117ed", "commitAfterChange": "230cd73883c40bf535cfca2d745f1f98564753db", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        checkConfig = builder.getCheckConfig(\"ClassTypeParameterName\");", "-        format = checkConfig.getAttribute(\"format\");", "+        configuration = builder.getCheckConfig(\"ClassTypeParameterName\");", "+        format = configuration.getAttribute(\"format\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55fc30a56c4c3c21abad74dd8d7b4ef7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Utils.java", "commitBeforeChange": "c2c34c8408d8ef5b92b7e87c671e392765f6c3d0", "commitAfterChange": "ebd4afdebe8ee09c0e6c7d1239e2ca982f87e51c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static boolean isPatternValid(String pattern)", "signatureAfterChange": "     public static boolean isPatternValid(String pattern)", "diff": ["-            Utils.getPattern(pattern);", "+            Pattern.compile(pattern);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56544fa4a6a75ac96509d4d46d76ce68", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public String[] getIllegalClassNames()", "signatureAfterChange": "     public String[] getIllegalClassNames()", "diff": ["-        return mIllegalClassNames.toArray(", "-            new String[mIllegalClassNames.size()]);", "+        return illegalClassNames.toArray(", "+            new String[illegalClassNames.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56641754e0b313ddad2a68f217f57e31", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/coding/InputUnnecessaryParentheses.java", "commitBeforeChange": "b9d3a7e995de2d7e77bf1be239a0c36e1337687d", "commitAfterChange": "4687b0b801bdcc50c763268e33eabd370ad8a85d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void f6(TypeA a)", "signatureAfterChange": "      private void f6(TypeA a)", "diff": ["-        TypeD<String> d = ((TypeD<String>) a);", "+        TypeParameterized<String> d = ((TypeParameterized<String>) a);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "568e02c3d2948637184541c2e434e21d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "0eeb5e4fd6aa2c4b8a559e55384bba67d7d695c7", "commitAfterChange": "092e1f69476fc715852035a25b23a11804183a23", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected void checkLinesIndent(LineSet aLines,                                     int aIndentLevel,                                     boolean aFirstLineMatches)", "signatureAfterChange": "     protected void checkLinesIndent(LineSet aLines,                                     int aIndentLevel,                                     boolean aFirstLineMatches)", "diff": ["-            aIndentLevel += mIndentCheck.getIndentationAmount();", "+            aIndentLevel += mIndentCheck.getBasicOffset();", "-                aIndentLevel += mIndentCheck.getIndentationAmount();", "+                aIndentLevel += mIndentCheck.getBasicOffset();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56e58830df85841fdd2cfc46b64e3576", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "e1d0e7f6361c32c69650ba789c1995e49a94142f", "commitAfterChange": "7dd24c8c35572b5db3e5c905d440e813cfe2538c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public static DetailAST parse(FileContents contents)         throws RecognitionException, TokenStreamException", "signatureAfterChange": "     public static DetailAST parse(FileContents contents)         throws RecognitionException, TokenStreamException", "diff": ["-        lexer.setFilename(contents.getFilename());", "+        lexer.setFilename(contents.getFileName());", "-        parser.setFilename(contents.getFilename());", "+        parser.setFilename(contents.getFileName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57f0bf70ef741455c95dceee18cf97ed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PropertyCacheFileTest.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testInCache() throws IOException", "signatureAfterChange": "      @Test     public void testInCache() throws IOException", "diff": ["-        assertTrue(cache.inCache(\"myFile\", 1));", "-        assertFalse(cache.inCache(\"myFile\", 2));", "-        assertFalse(cache.inCache(\"myFile1\", 1));", "+        assertTrue(cache.isInCache(\"myFile\", 1));", "+        assertFalse(cache.isInCache(\"myFile\", 2));", "+        assertFalse(cache.isInCache(\"myFile1\", 1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "581046be23ee8b517a960acc2cf80e61", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "3badd996bf40d25400ce40bf89aea92cd90b1b35", "commitAfterChange": "4e0914c73bf3e5b113869fad772a1096787b31ba", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private void notifyVisit(DetailAST aAST)", "signatureAfterChange": "     private void notifyVisit(DetailAST aAST)", "diff": ["-            mContext.clear();", "+            mTokenContext.clear();", "-                check.setTokenContext(mContext);", "+                check.setTokenContext(mTokenContext);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59043d58d847ea1a55d741e65fc86e1e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Class<?> resolve(String name, String currentClass)         throws ClassNotFoundException", "signatureAfterChange": "     public Class<?> resolve(String name, String currentClass)         throws ClassNotFoundException", "diff": ["-            if (imp.endsWith(\".\" + name)) {", "+            if (imp.endsWith(PERIOD + name)) {", "-            clazz = resolveQualifiedName(pkg + \".\" + name);", "+            clazz = resolveQualifiedName(pkg + PERIOD + name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d23624c3e60c7fa7e8ede6745f74dce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/AbstractParenPadCheck.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected void processRight(DetailAST ast)", "signatureAfterChange": "     protected void processRight(DetailAST ast)", "diff": ["-                log(ast.getLineNo(), before, WS_PRECEDED, \")\");", "+                log(ast.getLineNo(), before, WS_PRECEDED, CLOSE_PARENTHESIS);", "-                && line.charAt(before) != '(') {", "+                && line.charAt(before) != OPEN_PARENTHESIS) {", "-                    WS_NOT_PRECEDED, \")\");", "+                    WS_NOT_PRECEDED, CLOSE_PARENTHESIS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f769bdd4f2969ca8884a363f5edb019", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/ParseTreeModel.java", "commitBeforeChange": "5635ac93dc03ba38265f118885fa00bdabffda6c", "commitAfterChange": "94facbbd4dd5038a891b682217b2b5821fe9e729", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public Object getValueAt(Object node, int column)", "signatureAfterChange": "      public Object getValueAt(Object node, int column)", "diff": ["-                // TODO: use token type name as in TreeWalker.TOKEN_VALUE_TO_NAME", "-                return String.valueOf(ast.getType());", "+                return TokenTypes.getTokenName(ast.getType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61b04fb25105d44cadd3851afd888f6e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "ecc852d48b9d26398926b255e3cd68572119c106", "commitAfterChange": "751257987b2ef5f301e2deb3b55302196e5015af", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private int process(String aFileName)", "signatureAfterChange": "     private int process(String aFileName)", "diff": ["-                VerifierSingleton.getInstance().clearMessages();", "+                VerifierSingleton.getInstance().reset();", "-                VerifierSingleton.getInstance().clearMessages();", "+                VerifierSingleton.getInstance().reset();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63c05bd372fe6dc675f1d1dc9402eebc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     void destroy()", "signatureAfterChange": "     void destroy()", "diff": ["-        if (mDetailsFile != null) {", "+        if (detailsFile != null) {", "-                out = new FileOutputStream(mDetailsFile);", "-                mDetails.store(out, null);", "+                out = new FileOutputStream(detailsFile);", "+                details.store(out, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "654c368e9c8c1fab6a00d4f0bdad5882", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "443e534a3c98c0b30f24647da724fe918f17a006", "commitAfterChange": "66d73fe6189267fee3423e2e8d7fc2d68599a43f", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "     private void checkThrowsTags(List<JavadocTag> tags,             List<ExceptionInfo> throwsList, boolean reportExpectedTags)", "signatureAfterChange": "     private void checkThrowsTags(List<JavadocTag> tags,             List<ExceptionInfo> throwsList, boolean reportExpectedTags)", "diff": ["-            final String documentedEx = tag.getArg1();", "-            final Token token = new Token(tag.getArg1(), tag.getLineNo(), tag", "+            final String documentedEx = tag.getFirstArg();", "+            final Token token = new Token(tag.getFirstArg(), tag.getLineNo(), tag", "-                        JavadocTagInfo.THROWS.getText(), tag.getArg1());", "+                        JavadocTagInfo.THROWS.getText(), tag.getFirstArg());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "677dc43daa0762e8a127901cfd508e35", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "78a5fd3494e8f3fe6e5edd0925f46b43583451fe", "commitAfterChange": "3cd6646941eca3da7d3b9a221c88e4c1d214876e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public String[] getLines()", "signatureAfterChange": "     public String[] getLines()", "diff": ["-        return mLines.clone();", "+        return mText.toLinesArray();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a9b1898cb49836ef1238f16a83f7a7e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "6eaab74faa08e2eed14ab2d547c559470add0034", "commitAfterChange": "9982fc546a7ec040ec7cc1449ea81fc321aa7c1b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void testNoJavadoc()         throws Exception", "signatureAfterChange": "      public void testNoJavadoc()         throws Exception", "diff": ["-        mConfig.setIgnoreJavadoc(true);", "+        mConfig.setJavadocScope(Scope.NOTHING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b7848b61189742137411f187918441a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "commitAfterChange": "6125beffc437f970eae276b4a6542265c6547784", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "         private SilentJava14Recognizer(GeneratedJava14Lexer aLexer)", "signatureAfterChange": "         public SilentJava15Recognizer(TokenStream aLexer)", "diff": ["-        private SilentJava14Recognizer(GeneratedJava14Lexer aLexer)", "+        public SilentJava15Recognizer(TokenStream aLexer)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c694387b1a3ebbd2c00adb17afc6aba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java", "commitBeforeChange": "3c7c3cbe88a2bec0962702305db4f2b05117501c", "commitAfterChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-            && desc.hasPrivateCtor()", "-            && !desc.hasNonPrivateCtor())", "+            && desc.isWithPrivateCtor()", "+            && !desc.isWithNonPrivateCtor())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ffa4997b7a5289727c5cf95cc485528", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     LineText[] getMessages()", "signatureAfterChange": "     LocalizedMessage[] getMessages()", "diff": ["-    LineText[] getMessages()", "+    LocalizedMessage[] getMessages()", "-        return (LineText[]) mMessages.toArray(new LineText[mMessages.size()]);", "+        return (LocalizedMessage[])", "+            mMessages.toArray(new LocalizedMessage[mMessages.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74f462d3a35c7010e5875c43018a7c78", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "3c7c3cbe88a2bec0962702305db4f2b05117501c", "commitAfterChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-        String currentGroup = getImportGroup(firstImport.isStatic(),", "+        String currentGroup = getImportGroup(firstImport.isStaticImport(),", "-                    && matchesImportGroup(importObject.isStatic(),", "+                    && matchesImportGroup(importObject.isStaticImport(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76feb9718ac0edf542e5574880d9615b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java", "commitBeforeChange": "0db81f33e13f9829ee7de0b261f042017084b78f", "commitAfterChange": "70a6e2e6d34fa5a404e88e45cd62a20a06e19556", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testCacheFile() throws Exception", "signatureAfterChange": "      @Test     public void testCacheFile() throws Exception", "diff": ["-        checker.addListener(new BriefLogger(stream));", "+        checker.addListener(new BriefUtLogger(stream));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78919542fbf86d4715f82c2c95257871", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private boolean checkClassName()", "signatureAfterChange": "     private boolean checkClassName()", "diff": ["-        return !mExcludedClassesPattern.matcher(mCurrentClass).find();", "+        return !excludedClassesPattern.matcher(currentClass).find();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78ca22a52cafd668224b46bfcfda8bfb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "3a55941f33dcd9111d6b61b0505217f47973a39d", "commitAfterChange": "f60a9cfe8b1b27d5ea25095bdfc690001da9f4d6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setLines(String lines)", "signatureAfterChange": "     public void setLines(String lines)", "diff": ["-        linesCSV = lines;", "+        linesCsv = lines;", "-            lineFilter = new CSVFilter(lines);", "+            lineFilter = new CsvFilter(lines);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7acacb633c402761a54be352994083c9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setAuthorFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setAuthorFormat(String aFormat)         throws ConversionException", "diff": ["-            mAuthorFormatRE = Utils.getRE(aFormat);", "+            mAuthorFormatPattern = Utils.getPattern(aFormat);", "-        catch (RESyntaxException e) {", "+        catch (PatternSyntaxException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b406001766b95d559868749aa8aa31c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "22136c67e9c83494e7aa977ffe7a79beee1b4175", "commitAfterChange": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r     private AST skipVariableAssign(final AST aCurrentAST)", "signatureAfterChange": "\r     private DetailAST skipVariableAssign(final DetailAST aCurrentAST)", "diff": ["-    private AST skipVariableAssign(final AST aCurrentAST)\r", "+    private DetailAST skipVariableAssign(final DetailAST aCurrentAST)\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bb287fafbd59ab372582ec8dac4455d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "3a55941f33dcd9111d6b61b0505217f47973a39d", "commitAfterChange": "f60a9cfe8b1b27d5ea25095bdfc690001da9f4d6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public int hashCode()", "signatureAfterChange": "      @Override     public int hashCode()", "diff": ["-        return Objects.hash(filePattern, checkPattern, moduleId, linesCSV, columnsCSV);", "+        return Objects.hash(filePattern, checkPattern, moduleId, linesCsv, columnsCsv);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88ee806f1c7f53e0ff82851261afbfc6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "595d070db0215c3cf0555d5074719cffc673c890", "commitAfterChange": "868d96b45918b5bb0db4b80bdf5b70f5202d6590", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAst)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAst)", "diff": ["-            startStatement(aAst);", "+            visitExpr(aAst);", "-            startSemi(aAst);", "+            visitSemi(aAst);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b3add627f5330b1836e7b9ff0b7e525", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected void fireErrors(String aFileName, LineText[] aErrors)", "signatureAfterChange": "     protected void fireErrors(String aFileName, LocalizedMessage[] aErrors)", "diff": ["-    protected void fireErrors(String aFileName, LineText[] aErrors)", "+    protected void fireErrors(String aFileName, LocalizedMessage[] aErrors)", "-                               aErrors[i].getText());", "+                               aErrors[i].getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d97af2197474fd5684caa4e87603adb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/ParseTreeBuilder.java", "commitBeforeChange": "ff5cbc39c4882b3a3dcdbedcad9393e170148725", "commitAfterChange": "82f4a9852de874b4849a67f53f4e541d13db869b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static ParseTree treeCustomJavadocTags()", "signatureAfterChange": "     public static ParseTree treeCustomJavadocTags()", "diff": ["-        CommonToken ZcIzE = new CommonToken(JavadocTokenTypes.NEWLINE, \"\\n\");", "+        CommonToken ZcIzE = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        CommonToken mDykX = new CommonToken(JavadocTokenTypes.NEWLINE, \"\\n\");", "+        CommonToken mDykX = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        CommonToken VNXPi = new CommonToken(JavadocTokenTypes.NEWLINE, \"\\n\");", "+        CommonToken VNXPi = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f09c849e41c8b7e399a91fa878a6e40", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java", "commitBeforeChange": "3c7c3cbe88a2bec0962702305db4f2b05117501c", "commitAfterChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "         boolean hasPrivateCtor()", "signatureAfterChange": "         boolean isWithPrivateCtor()", "diff": ["-        boolean hasPrivateCtor()", "+        boolean isWithPrivateCtor()", "-            return hasPrivateCtor;", "+            return withPrivateCtor;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "912f467565977981fbcaa1a64c7a6d1c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck.java", "commitBeforeChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "commitAfterChange": "29027109bf962f47b6a6000fdca69b5679ce4b43", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void loadHeaderFile() throws CheckstyleException", "signatureAfterChange": "     private void loadHeaderFile() throws CheckstyleException", "diff": ["-                    uri.toURL().openStream()), mCharset);", "+                    uri.toURL().openStream()), charset);", "-                    \"unable to load header file \" + mFilename, ex);", "+                    \"unable to load header file \" + filename, ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92e88fa801bd6dd87b487156a72c8f9f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public int getColumnNo()", "signatureAfterChange": "     public int getColumnNo()", "diff": ["-        if (mColumnNo == NOT_INITIALIZED) {", "+        if (columnNo == NOT_INITIALIZED) {", "-        return mColumnNo;", "+        return columnNo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "967b0b527d3ee7edfba3eb9cba0ae506", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "2a01965deb18e6301b72cb8b2b131cba896b7a4e", "commitAfterChange": "c18071b7561b99767e871be9d4d7711eb15b76f1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private Vector getJavadocTags(TextBlock aCmt)", "signatureAfterChange": "     private List getJavadocTags(TextBlock aCmt)", "diff": ["-    private Vector getJavadocTags(TextBlock aCmt)", "+    private List getJavadocTags(TextBlock aCmt)", "-        final Vector tags = new Vector();", "+        final List tags = new ArrayList();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97e8a8d060027dc117b58399ee1df2fb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck.java", "commitBeforeChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "commitAfterChange": "29027109bf962f47b6a6000fdca69b5679ce4b43", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     protected final void finishLocalSetup() throws CheckstyleException", "signatureAfterChange": "      @Override     protected final void finishLocalSetup() throws CheckstyleException", "diff": ["-        if (mFilename != null) {", "+        if (filename != null) {", "-        if (mHeaderLines.isEmpty()) {", "+        if (readerLines.isEmpty()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b32ecc7303a8111d133908b8f7818be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     private void checkParamTags(final List<JavadocTag> tags,             final DetailAST parent, boolean reportExpectedTags)", "signatureAfterChange": "     private void checkParamTags(final List<JavadocTag> tags,             final DetailAST parent, boolean reportExpectedTags)", "diff": ["-                log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTag\",", "+                log(tag.getLineNo(), tag.getColumnNo(), MSG_UNUSED_TAG,", "-                log(param, \"javadoc.expectedTag\",", "+                log(param, MSG_EXCPECTED_TAG,", "-                log(typeParam, \"javadoc.expectedTag\",", "+                log(typeParam, MSG_EXCPECTED_TAG,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9db555a2493720f45e6e9a57dfcfcdb7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void processStart(DetailAST ast)", "signatureAfterChange": "     private void processStart(DetailAST ast)", "diff": ["-                    log(ast.getLineNo(), before, \"ws.notPreceded\", \"<\");", "+                    log(ast.getLineNo(), before, WS_NOT_PRECEDED, \"<\");", "-                log(ast.getLineNo(), before, \"ws.preceded\", \"<\");", "+                log(ast.getLineNo(), before, WS_PRECEDED, \"<\");", "-            log(ast.getLineNo(), after, \"ws.followed\", \"<\");", "+            log(ast.getLineNo(), after, WS_FOLLOWED, \"<\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2355e448b8971ea383b61a1941711a8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "c2d3932843e70e4bb5df7161800aca248f9af778", "commitAfterChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public TreeWalker()", "signatureAfterChange": "     public TreeWalker()", "diff": ["-            sLog.debug(\"TreeWalker uses recursive algorithm\");", "+            LOG.debug(\"TreeWalker uses recursive algorithm\");", "-            sLog.debug(\"TreeWalker uses iterative algorithm\");", "+            LOG.debug(\"TreeWalker uses iterative algorithm\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5a75201222619e3aa359874c2070dbe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java", "commitBeforeChange": "a362f4213c856558ce10720a82bcbc1bddd0a1e0", "commitAfterChange": "8e55d5c09147620f59461387d45d09c2bc0bbd6e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void checkComment(DetailAST aAST, String[] aComment)", "signatureAfterChange": "     private void checkComment(DetailAST aAST, String[] aComment)", "diff": ["-            || !((JavadocTag) tags.get(0)).isSeeTag())", "+            || !((JavadocTag) tags.get(0)).isSeeOrInheritDocTag())", "-                if (!jt.isSeeTag()) {", "+                if (!jt.isSeeOrInheritDocTag()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a747c074d122e5bebed9940ae135ac6b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/annotation/InputCorrectAnnotationLocation.java", "commitBeforeChange": "04c38bad85ac94b3da997fe23b2181479ed6ac57", "commitAfterChange": "10c39148b715af5229f185ff3d54f4187c0fbe4a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "         @MyAnnotation1         @MyAnnotation2 void foo1(int a)", "signatureAfterChange": "         @MyAnnotation5         @MyAnnotation6 void foo1(int a)", "diff": ["-        @MyAnnotation1", "-        @MyAnnotation2 void foo1(int a) {}", "+        @MyAnnotation5", "+        @MyAnnotation6 void foo1(int a) {}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaeb1efe316c13104ac2828c257fab1d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setPublicMemberPattern(String aPattern)", "signatureAfterChange": "     public void setPublicMemberPattern(String aPattern)", "diff": ["-            mPublicMemberRE = Utils.getRE(aPattern);", "-            mPublicMemberPattern = aPattern;", "+            mPublicMemberPattern = Utils.getPattern(aPattern);", "+            mPublicMemberFormat = aPattern;", "-        catch (RESyntaxException e) {", "+        catch (PatternSyntaxException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab914d743381a64a65a22947a607753d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "ecc852d48b9d26398926b255e3cd68572119c106", "commitAfterChange": "751257987b2ef5f301e2deb3b55302196e5015af", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     void clearMessages()", "signatureAfterChange": "     void reset()", "diff": ["-    /** Clears the list of error messages. Use before processing a file. **/", "-    void clearMessages()", "+    /** Resets the verifier. Use before processing a file. **/", "+    void reset()", "-        mMessages.clear();", "+        mMessages.reset();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad940b8f3c3c66f2a2fe2622e967da82", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/indentation/InputInvalidAssignIndent.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     void foo(String[] args)", "signatureAfterChange": "     void foo(String[] args)", "diff": ["-          getLineNo();", "+          getLine();", "-          getLineNo();", "+          getLine();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afe9c61ac1e55f0c1e423430679d171c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java", "commitBeforeChange": "02aaa1b7f653e25c34ef7f186fa1d940079384e8", "commitAfterChange": "52ac2776d7f128ff812b73b54dcc12210661f98b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic String getFilePath(String aFileName)", "signatureAfterChange": "  \tpublic String getFilePath(String aFileName)", "diff": ["-\t\tString absoluteRootPath = mROOT.getAbsolutePath();", "+\t\tString absoluteRootPath = ROOT.getAbsolutePath();", "-\t\tfor (File file : mFiles) {", "+\t\tfor (File file : files) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afffcb5b715fe34030750245d17c221c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java", "commitBeforeChange": "896af516b0028ff2a26cc1888dfaba620d3fe9e0", "commitAfterChange": "55c92042eb6986e905529de841d3d1c9a7b2b6dd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private static boolean isCstyleMultiDimensionalArrayDeclaration(DetailAST arrayDeclaration)", "signatureAfterChange": "     private static boolean isCStyleMultiDimensionalArrayDeclaration(DetailAST arrayDeclaration)", "diff": ["-    private static boolean isCstyleMultiDimensionalArrayDeclaration(DetailAST arrayDeclaration) {", "+    private static boolean isCStyleMultiDimensionalArrayDeclaration(DetailAST arrayDeclaration) {", "-                result = isCstyleArrayDeclaration(parentArrayDeclaration);", "+                result = isCStyleArrayDeclaration(parentArrayDeclaration);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b08d795bec10a8df00bacdf268c9154f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "dc92fd1b89e33067adc5b2bf51df76b8d488b0bf", "commitAfterChange": "4018efa9fefa66e599369ace1cb189b02ae64fa7", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 101, "signatureBeforeChange": "     private CatchBlockOption extractCatchBlockOption(String aFrom)         throws BuildException", "signatureAfterChange": "     private BlockOption extractBlockOption(String aFrom)         throws BuildException", "diff": ["-    private CatchBlockOption extractCatchBlockOption(String aFrom)", "+    private BlockOption extractBlockOption(String aFrom)", "-        final CatchBlockOption opt = CatchBlockOption.decode(aFrom);", "+        final BlockOption opt = BlockOption.decode(aFrom);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8ba25b9d79a3e2698a67087a360ee77", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected IndentLevel getChildrenExpectedLevel()", "signatureAfterChange": "     protected IndentLevel getChildrenExpectedIndent()", "diff": ["-    protected IndentLevel getChildrenExpectedLevel() {", "-        IndentLevel indentLevel = new IndentLevel(getLevel(), getBasicOffset());", "+    protected IndentLevel getChildrenExpectedIndent() {", "+        IndentLevel indentLevel = new IndentLevel(getIndent(), getBasicOffset());", "-        if (getLevel().isMultiLevel() && hasCurlies()) {", "+        if (getIndent().isMultiLevel() && hasCurlies()) {", "-                final IndentLevel level = new IndentLevel(curlyLevel(), getBasicOffset());", "+                final IndentLevel level = new IndentLevel(curlyIndent(), getBasicOffset());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b96698b2e00a14d12bbe4b67e91ebc23", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PackageNamesLoaderTest.java", "commitBeforeChange": "751805442819ae5f08f32347faf44f4c1b214eb3", "commitAfterChange": "b79466ba09c359480cce46a5cfdad44f07bf9793", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testPackagesWithDots() throws Exception", "signatureAfterChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testPackagesWithDots() throws Exception", "diff": ["-        LinkedHashSet<String> list = (LinkedHashSet<String>) field.get(loader);", "+        Set<String> list = (Set<String>) field.get(loader);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9c2f5148b7fb5d684d266c9c7e47fe9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AnnotationUtility.java", "commitBeforeChange": "193474f51804bf6255bfcec58befcb1dc8ff8329", "commitAfterChange": "7d5e825abd68a4ffcb86865149b917edf76a47b6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static DetailAST getAnnotation(final DetailAST ast,         String annotation)", "signatureAfterChange": "     public static DetailAST getAnnotation(final DetailAST ast,         String annotation)", "diff": ["-            throw new NullPointerException(\"the ast is null\");", "+            throw new IllegalArgumentException(\"the ast is null\");", "-            throw new NullPointerException(\"the annotation is null\");", "+            throw new IllegalArgumentException(\"the annotation is null\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be23c711309bcf875a1d10c593aa0a27", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck.java", "commitBeforeChange": "17c08660fa40c844057c33e2de04c67af41393b0", "commitAfterChange": "0989b5c3954e46b156bf5d2344327f650ddafc8d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected List<String> getHeaderLines()", "signatureAfterChange": "     protected ImmutableList<String> getHeaderLines()", "diff": ["-    protected List<String> getHeaderLines()", "+    protected ImmutableList<String> getHeaderLines()", "-        return Collections.unmodifiableList(mHeaderLines);", "+        return ImmutableList.copyOf(mHeaderLines);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beda81e7f9757970877964858ccf5b11", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/IntMatchFilterTest.java", "commitBeforeChange": "7abbd6af2f63a9e5bfa067f3058b5a3e738971de", "commitAfterChange": "8d242382f8bb77488b6da23bdd0d2d61583703fc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public void testEquals()", "signatureAfterChange": "          public void testEquals()", "diff": ["-        final Filter filter = new IntMatchFilter(0);", "-        final Filter filter2 = new IntMatchFilter(0);", "-        final Filter filter3 = new IntMatchFilter(1);", "+        final IntFilter filter = new IntMatchFilter(0);", "+        final IntFilter filter2 = new IntMatchFilter(0);", "+        final IntFilter filter3 = new IntMatchFilter(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bee837adcdf142e71d9bca1a35a68bef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        final String name = TokenTypes.getTokenName(ast.getType());", "+        final String name = Utils.getTokenName(ast.getType());", "-                    final String descendantName = TokenTypes", "+                    final String descendantName = Utils", "-                    final String descendantName = TokenTypes", "+                    final String descendantName = Utils"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3343432e12c813ad33e51cc98e75677", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java", "commitBeforeChange": "067896807847df81ba6e65195e4f39069dc3aea7", "commitAfterChange": "bc0bf95daedb6f0e658187d6e44410a60f46dbe2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic ConfigurationBuilder(File aROOT) \t\t\tthrows CheckstyleException, IOException", "signatureAfterChange": "  \tpublic ConfigurationBuilder(File aROOT) \t\t\tthrows CheckstyleException, IOException", "diff": ["-\t\tROOT = aROOT;", "+\t\troot = aROOT;", "-\t\tlistFiles(files, ROOT, \"java\");", "+\t\tlistFiles(files, root, \"java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c557360360b03cc2a731a8b54defa42b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java", "commitBeforeChange": "067896807847df81ba6e65195e4f39069dc3aea7", "commitAfterChange": "bc0bf95daedb6f0e658187d6e44410a60f46dbe2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic File getROOT()", "signatureAfterChange": "  \tpublic File getRoot()", "diff": ["-\tpublic File getROOT() {", "-\t\treturn ROOT;", "+\tpublic File getRoot() {", "+\t\treturn root;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c72fd9d880e8438a6e8bab76fd9fcbe5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtils.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static boolean inInterfaceOrAnnotationBlock(DetailAST aAST)", "signatureAfterChange": "     public static boolean isInInterfaceOrAnnotationBlock(DetailAST aAST)", "diff": ["-    public static boolean inInterfaceOrAnnotationBlock(DetailAST aAST) {", "-        return inInterfaceBlock(aAST) || inAnnotationBlock(aAST);", "+    public static boolean isInInterfaceOrAnnotationBlock(DetailAST aAST) {", "+        return isInInterfaceBlock(aAST) || isInAnnotationBlock(aAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccceaa5ceb3cc57c77b0d236f38f818b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "02ae6023b5b6f66e495393a6f87e4beb4b4ab3d0", "commitAfterChange": "584f7ee1232be96284255540e7249023c327ca8f", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "         public Token(FullIdent fullIdent)", "signatureAfterChange": "         public Token(FullIdent fullIdent)", "diff": ["-            line = fullIdent.getLineNo();", "-            column = fullIdent.getColumnNo();", "+            lineNo = fullIdent.getLineNo();", "+            columnNo = fullIdent.getColumnNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0b3ed1cb8ac4f2a58e2ac0c908b8f0b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportCheck.java", "commitBeforeChange": "db428ff350e76d0609e192fc48314cf226677fde", "commitAfterChange": "ed7fc0e632848e74d78992a9081ad689fa85e855", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-    public void visitToken(DetailAST aAST) ", "+    public void visitToken(DetailAST aAST)", "-            for (int i = 0; i < m_excludes.length && !exempt; i++) {", "-                if (name.getText().equals(m_excludes[i])) {", "+            for (int i = 0; i < mExcludes.length && !exempt; i++) {", "+                if (name.getText().equals(mExcludes[i])) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0cd2149f9e5fd1abd1c39717e469822", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/indentation/InputClassesMethods.java", "commitBeforeChange": "1ad274c7029a7bdf03d96dddd4ac8c130f2bf543", "commitAfterChange": "8d88dde6f325f9696a6fcd0ed74d45c6a848031b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "           @MyAnnotation           @Override           String longLongLongLongLongMethodName()", "signatureAfterChange": "           @MyAnnotation2           String longLongLongLongLongMethodName()", "diff": ["-          @MyAnnotation", "-          @Override", "+          @MyAnnotation2"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d21199594aca35b7de19ec813f1c3f4d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void initHeaderRegexps()", "signatureAfterChange": "     private void initHeaderRegexps()", "diff": ["-            mHeaderRegexps = new RE[headerLines.length];", "+            mHeaderRegexps = new Pattern[headerLines.length];", "-                    mHeaderRegexps[i] = Utils.getRE(headerLines[i]);", "+                    mHeaderRegexps[i] = Utils.getPattern(headerLines[i]);", "-                catch (RESyntaxException ex) {", "+                catch (PatternSyntaxException ex) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d47856c5a80ab171ff1eafa6587df12c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ConstantNameCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     protected final boolean mustCheckName(DetailAST ast)", "signatureAfterChange": "      @Override     protected final boolean mustCheckName(DetailAST ast)", "diff": ["-                || ScopeUtils.inAnnotationBlock(ast)", "-                || ScopeUtils.inInterfaceOrAnnotationBlock(ast)", "-                        && !ScopeUtils.inCodeBlock(ast)) {", "+                || ScopeUtils.isInAnnotationBlock(ast)", "+                || ScopeUtils.isInInterfaceOrAnnotationBlock(ast)", "+                        && !ScopeUtils.isInCodeBlock(ast)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da7ba0d9a81490e73b17f2f453d36347", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void validateNewLinePosion(DetailAST brace, DetailAST startToken,                                        String braceLine)", "signatureAfterChange": "     private void validateNewLinePosion(DetailAST brace, DetailAST startToken,                                        String braceLine)", "diff": ["-                log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);", "+                log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);", "-                log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);", "+                log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);", "-            log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);", "+            log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e61267a75150efe8b1eb545f5fc35540", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "904de34fcd984edce3d6042a5a17e2a969254588", "commitAfterChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean hasFallThroughComment(DetailAST currentCase, DetailAST nextCase)", "signatureAfterChange": "     private boolean hasFallThroughComment(DetailAST currentCase, DetailAST nextCase)", "diff": ["-        if (commentMatch(regExp, linePart, endLineNo)) {", "+        if (matchesComment(regExp, linePart, endLineNo)) {", "-                    allThroughComment = commentMatch(regExp, lines[i], i + 1);", "+                    allThroughComment = matchesComment(regExp, lines[i], i + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e640a1fe31529043ada5b812a7c27f26", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "31cc403a41c60aa09050252953a56ef053c034d4", "commitAfterChange": "2f9b0f057c489d074967575696a0d53a34fec6b7", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public boolean hasIntersectionWithComment(int startLineNo,             int startColNo, int endLineNo, int endColNo)", "signatureAfterChange": "     public boolean hasIntersectionWithComment(int startLineNo,             int startColNo, int endLineNo, int endColNo)", "diff": ["-        final Collection<List<TextBlock>> values = cComments.values();", "+        final Collection<List<TextBlock>> values = clangComments.values();", "-            final TextBlock comment = cPlusPlusComments.get(lineNumber);", "+            final TextBlock comment = cppComments.get(lineNumber);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e83f8262d0dd615583bd6a52dc59ebfc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java", "commitBeforeChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "commitAfterChange": "0b98c0389e2cf745cb125a89dece57538fc672b7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                                \"redundantModifier\", modifier.getText());", "+                                MSG_KEY, modifier.getText());", "-                            \"redundantModifier\", modifier.getText());", "+                            MSG_KEY, modifier.getText());", "-                                \"redundantModifier\", modifier.getText());", "+                                MSG_KEY, modifier.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecb2517f8b78bc33646ecaed761206c7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setGroups(String... packageGroups)", "signatureAfterChange": "     public void setGroups(String... packageGroups)", "diff": ["-            else if (Utils.startsWithChar(pkg, '/')) {", "-                if (!Utils.endsWithChar(pkg, '/')) {", "+            else if (CommonUtils.startsWithChar(pkg, '/')) {", "+                if (!CommonUtils.endsWithChar(pkg, '/')) {", "-                if (!Utils.endsWithChar(pkg, '.')) {", "+                if (!CommonUtils.endsWithChar(pkg, '.')) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f04e13424ba37df4f36aa8884228061e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java", "commitBeforeChange": "3c7c3cbe88a2bec0962702305db4f2b05117501c", "commitAfterChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "          @Override         public String toString()", "signatureAfterChange": "          @Override         public String toString()", "diff": ["-                + \" pctor=\" + hasPrivateCtor", "-                + \" ctor=\" + hasNonPrivateCtor", "+                + \" pctor=\" + withPrivateCtor", "+                + \" ctor=\" + withNonPrivateCtor"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f196a2ec8e8a846dfa7b9d5edf042763", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void logAsSeparated(DetailAST ast)", "signatureAfterChange": "     private void logAsSeparated(DetailAST ast)", "diff": ["-        final String name = Utils.getTokenName(ast.getType());", "+        final String name = TokenUtils.getTokenName(ast.getType());", "-                final String descendantName = Utils.getTokenName(element);", "+                final String descendantName = TokenUtils.getTokenName(element);", "-                final String descendantName = Utils.getTokenName(element);", "+                final String descendantName = TokenUtils.getTokenName(element);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2e3c2bc506d80ce7268aedfcb1b4903", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private int checkPackageHtml(String[] aFiles)", "signatureAfterChange": "     private int checkPackageHtml(String[] aFiles)", "diff": ["-                    final LineText error =", "-                        new LineText(0, \"missing package documentation file.\");", "-                    fireErrors(docFile, new LineText[]{error});", "+                    final LocalizedMessage error =", "+                        new LocalizedMessage(0, \"javadoc.packageHtml\", null);", "+                    fireErrors(docFile, new LocalizedMessage[]{error});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3c2b1263fc708b257316bb6fb653400", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "dc92fd1b89e33067adc5b2bf51df76b8d488b0bf", "commitAfterChange": "4018efa9fefa66e599369ace1cb189b02ae64fa7", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 101, "signatureBeforeChange": "     private static CatchBlockOption getCatchBlockOptionProperty(         Properties aProps,         String aName,         CatchBlockOption aDefault,         PrintStream aLog)", "signatureAfterChange": "     private static BlockOption getBlockOptionProperty(Properties aProps,                                                       String aName,                                                       BlockOption aDefault,                                                       PrintStream aLog)", "diff": ["-    private static CatchBlockOption getCatchBlockOptionProperty(", "-        Properties aProps,", "-        String aName,", "-        CatchBlockOption aDefault,", "-        PrintStream aLog)", "+    private static BlockOption getBlockOptionProperty(Properties aProps,", "+                                                      String aName,", "+                                                      BlockOption aDefault,", "+                                                      PrintStream aLog)", "-        CatchBlockOption retVal = aDefault;", "+        BlockOption retVal = aDefault;", "-            retVal = CatchBlockOption.decode(strRep);", "+            retVal = BlockOption.decode(strRep);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4a67cea27396032e20f47ae03ab3e02", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTag.java", "commitBeforeChange": "443e534a3c98c0b30f24647da724fe918f17a006", "commitAfterChange": "66d73fe6189267fee3423e2e8d7fc2d68599a43f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public String getArg1()", "signatureAfterChange": "     public String getFirstArg()", "diff": ["-    public String getArg1() {", "-        return arg1;", "+    public String getFirstArg() {", "+        return firstArg;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f70ac8e6245ece90ce3c496535326086", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "e71b877a424e1e6e247a2ef6825c742a94afd68f", "commitAfterChange": "6f4247181beca3530b5c2dc762d9c5c6a018a06c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private Configuration createConfiguration()", "signatureAfterChange": "     private GlobalProperties createGlobalProperties()", "diff": ["-    private Configuration createConfiguration()", "+    private GlobalProperties createGlobalProperties()", "-        final Configuration retVal;", "+        final GlobalProperties retVal;", "-            retVal = new Configuration(props, System.out);", "+            retVal = new GlobalProperties(props, System.out);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8355bd805fe6083a9d90a0adac1e42a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "0382b7907b54e95408344863915a847dabc37f12", "commitAfterChange": "eb5896a4a1d66552f5100046413f15d62b485b62", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     ExpressionHandler createMethodCallHandler(IndentationCheck indentCheck,         DetailAST ast, ExpressionHandler parent)", "signatureAfterChange": "     AbstractExpressionHandler createMethodCallHandler(IndentationCheck indentCheck,         DetailAST ast, AbstractExpressionHandler parent)", "diff": ["-    ExpressionHandler createMethodCallHandler(IndentationCheck indentCheck,", "-        DetailAST ast, ExpressionHandler parent) {", "-        ExpressionHandler theParent = parent;", "+    AbstractExpressionHandler createMethodCallHandler(IndentationCheck indentCheck,", "+        DetailAST ast, AbstractExpressionHandler parent) {", "+        AbstractExpressionHandler theParent = parent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbf316fb29d18bbf598367746f7b3244", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java", "commitBeforeChange": "02aaa1b7f653e25c34ef7f186fa1d940079384e8", "commitAfterChange": "52ac2776d7f128ff812b73b54dcc12210661f98b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      protected void verify(Checker aC,                           File[] aProcessedFiles,                           String aMessageFileName,                           String[] aExpected,                           Integer[] aWarnsExpected)         throws Exception", "signatureAfterChange": "      protected void verify(Checker aC,                           File[] aProcessedFiles,                           String aMessageFileName,                           String[] aExpected,                           Integer[] aWarnsExpected)         throws Exception", "diff": ["-        mStream.flush();", "+        stream.flush();", "-            new ByteArrayInputStream(mBAOS.toByteArray());", "+            new ByteArrayInputStream(BAOS.toByteArray());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff0af56047e7db6470d21e527d2f77d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-                         mAuthorFormatRE, mAuthorFormat);", "+                         mAuthorFormatPattern, mAuthorFormat);", "-                         mVersionFormatRE, mVersionFormat);", "+                         mVersionFormatPattern, mVersionFormat);"]}]}