{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2122a0d318fb645c636ecdf79ba65e46", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e0a5617faa935de9e7c0be7e7719614", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "65ca7775ba7d0b649c16cfdc8a1447f41867c870", "commitAfterChange": "6ffc8dd26075456b055ffcd35d3915c23049bfbb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private String getStrippedFileName(final String aFileName)", "signatureAfterChange": "     private String getStrippedFileName(final String aFileName)", "diff": ["-        final String basedir = mConfig.getBasedir();", "-        if ((basedir == null) || !aFileName.startsWith(basedir)) {", "+        if ((mBasedir == null) || !aFileName.startsWith(mBasedir)) {", "-            final int skipSep = basedir.endsWith(File.separator) ? 0 : 1;", "-            stripped = aFileName.substring(basedir.length() + skipSep);", "+            final int skipSep = mBasedir.endsWith(File.separator) ? 0 : 1;", "+            stripped = aFileName.substring(mBasedir.length() + skipSep);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faf0524b3cb186821389c07ad623c016", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/RedundantThrowsCheckTest.java", "commitBeforeChange": "fa7617c2223dae31f3ad486002f60201667e7a95", "commitAfterChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testRejectDuplicatesOnly() throws Exception", "signatureAfterChange": "      public void testRejectDuplicatesOnly() throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(RedundantThrowsCheck.class);", "-        checkConfig.addAttribute(\"allowSubclasses\", \"true\");", "-        checkConfig.addAttribute(\"allowUnchecked\", \"true\");", "+        mCheckConfig.addAttribute(\"allowSubclasses\", \"true\");", "+        mCheckConfig.addAttribute(\"allowUnchecked\", \"true\");", "-        verify(checkConfig, getPath(\"InputRedundantThrows.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputRedundantThrows.java\"), expected);"]}]}