{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7cf46a23347743d915095515a881200c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca3b8e9747a4228b89057b1c815b70ca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void processTypeParams(DetailAST aAST)", "signatureAfterChange": "     private void processTypeParams(DetailAST ast)", "diff": ["-    private void processTypeParams(DetailAST aAST)", "+    private void processTypeParams(DetailAST ast)", "-        final DetailAST typeParams =", "-            aAST.findFirstToken(TokenTypes.TYPE_PARAMETERS);", "+        final DetailAST params =", "+            ast.findFirstToken(TokenTypes.TYPE_PARAMETERS);", "-        mTypeParams.push(paramsMap);", "+        typeParams.push(paramsMap);", "-        if (typeParams == null) {", "+        if (params == null) {", "-        for (DetailAST child = typeParams.getFirstChild();", "+        for (DetailAST child = params.getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d492ae37a70b07c3f8ad1094269f28e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aDetailAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST detailAST)", "diff": ["-    public void visitToken(DetailAST aDetailAST)", "+    public void visitToken(DetailAST detailAST)", "-        final DetailAST paramDef =", "-            aDetailAST.findFirstToken(TokenTypes.PARAMETER_DEF);", "+        final DetailAST paradef =", "+            detailAST.findFirstToken(TokenTypes.PARAMETER_DEF);", "-                paramDef.findFirstToken(TokenTypes.TYPE);", "+                paradef.findFirstToken(TokenTypes.TYPE);", "-                log(aDetailAST, \"illegal.catch\", ident.getText());", "+                log(detailAST, \"illegal.catch\", ident.getText());"]}]}