{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab6c1b379b7c7bc87f1c3ff9b9667e1a", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24f9e21a5040c40d94bd83945b155ec1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java", "commitBeforeChange": "0cf971e37bc86697dbb3e38bfc18b3b55d5aa8e7", "commitAfterChange": "526c9d0cbabd8ed8f3a26c45a7a6bc0a5c158c0c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static FilterSet loadSuppressions(String filename)         throws CheckstyleException", "signatureAfterChange": "     public static FilterSet loadSuppressions(String filename)         throws CheckstyleException", "diff": ["-        URI uri;", "-        try {", "-            final URL url = new URL(filename);", "-            uri = url.toURI();", "-        }", "-        catch (final MalformedURLException | URISyntaxException ignored) {", "-            // URL violating RFC 2396", "-            uri = null;", "-        }", "-        if (uri == null) {", "-            final File file = new File(filename);", "-            if (file.exists()) {", "-                uri = file.toURI();", "-            }", "-            else {", "-                // check to see if the file is in the classpath", "-                try {", "-                    final URL configUrl = SuppressionsLoader.class", "-                            .getResource(filename);", "-                    if (configUrl == null) {", "-                        throw new CheckstyleException(UNABLE_TO_FIND_ERROR_MESSAGE + filename);", "-                    }", "-                    uri = configUrl.toURI();", "-                }", "-                catch (final URISyntaxException e) {", "-                    throw new CheckstyleException(UNABLE_TO_FIND_ERROR_MESSAGE + filename, e);", "-                }", "-            }", "-        }", "+        final URI uri = CommonUtils.getUriByFilename(filename);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a98536f07fc2f2c7fda1bb0e1a2033ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "0cf971e37bc86697dbb3e38bfc18b3b55d5aa8e7", "commitAfterChange": "526c9d0cbabd8ed8f3a26c45a7a6bc0a5c158c0c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static Configuration loadConfiguration(String config,         PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(String config,         PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "diff": ["-        URI uri;", "-        try {", "-            final URL url = new URL(config);", "-            uri = url.toURI();", "-        }", "-        catch (final URISyntaxException | MalformedURLException ignored) {", "-            uri = null;", "-        }", "-", "-        if (uri == null) {", "-            final File file = new File(config);", "-            if (file.exists()) {", "-                uri = file.toURI();", "-            }", "-            else {", "-                // check to see if the file is in the classpath", "-                try {", "-                    final URL configUrl = ConfigurationLoader.class", "-                            .getResource(config);", "-                    if (configUrl == null) {", "-                        throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + config);", "-                    }", "-                    uri = configUrl.toURI();", "-                }", "-                catch (final URISyntaxException e) {", "-                    throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + config, e);", "-                }", "-            }", "-        }", "+        final URI uri = CommonUtils.getUriByFilename(config);"]}]}