{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8bbd6e222691cde0935238e14e4b096e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cee43ba082da74f30984d52fb3ba963", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/InputSemantic.java", "commitBeforeChange": "3d0256c50f6b1626af530c9e56920a72c5508bfe", "commitAfterChange": "3f6653f424d19ea54cc3fe64a42c2c4f76a27b06", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     Boolean getBoolean()", "signatureAfterChange": "     Boolean getBoolean()", "diff": ["-        Boolean b = new java.lang.Boolean(true);", "+        return new java.lang.Boolean(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dede66435877e1e424d8755dfb1c798", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/FileTextTest.java", "commitBeforeChange": "7770f2a2c25c41bf024355f19caac358419110a6", "commitAfterChange": "bb5eb6c08eb4cae392147567654f6d45d6174cbf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testUnsupportedCharset() throws IOException", "signatureAfterChange": "      @Test     public void testUnsupportedCharset() throws IOException", "diff": ["-            FileText o = new FileText(new File(\"any name\"), charsetName);", "+            new FileText(new File(\"any name\"), charsetName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c92121aa2e0626aad1a42f342807b497", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/SeverityLevelCounterTest.java", "commitBeforeChange": "7770f2a2c25c41bf024355f19caac358419110a6", "commitAfterChange": "bb5eb6c08eb4cae392147567654f6d45d6174cbf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test(expected = IllegalArgumentException.class)     public void testCtorException()", "signatureAfterChange": "      @Test(expected = IllegalArgumentException.class)     public void testCtorException()", "diff": ["-        final SeverityLevelCounter o = new SeverityLevelCounter(null);", "+        new SeverityLevelCounter(null);"]}]}