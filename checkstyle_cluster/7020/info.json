{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb6850e07b714458d8cb40fa8fc1bb68", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f00ade505fe51ed40e0382302bb29a6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void insertVariable(DetailAST aAST)", "signatureAfterChange": "     private void insertVariable(DetailAST ast)", "diff": ["-    private void insertVariable(DetailAST aAST)", "+    private void insertVariable(DetailAST ast)", "-        if (!aAST.branchContains(TokenTypes.FINAL)) {", "-            final Map<String, DetailAST> state = mScopeStack.peek();", "-            final DetailAST ast = aAST.findFirstToken(TokenTypes.IDENT);", "-            state.put(ast.getText(), ast);", "+        if (!ast.branchContains(TokenTypes.FINAL)) {", "+            final Map<String, DetailAST> state = scopeStack.peek();", "+            final DetailAST astNode = ast.findFirstToken(TokenTypes.IDENT);", "+            state.put(astNode.getText(), astNode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0481e4b3486a5c749071805e5c7acf4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AnnotationUtility.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static boolean isAnnotatingType(DetailAST aAST, int aTokenType)", "signatureAfterChange": "     public static boolean isAnnotatingType(DetailAST ast, int tokenType)", "diff": ["-    public static boolean isAnnotatingType(DetailAST aAST, int aTokenType)", "+    public static boolean isAnnotatingType(DetailAST ast, int tokenType)", "-        final DetailAST ast = AnnotationUtility.annotatingWhat(aAST);", "-        return ast.getType() == aTokenType;", "+        final DetailAST astNode = AnnotationUtility.annotatingWhat(ast);", "+        return astNode.getType() == tokenType;"]}]}