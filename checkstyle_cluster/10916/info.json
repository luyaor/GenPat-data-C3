{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4905dbabf8d6867e1b543092a3d4f445", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14aa7bd108223b69ac98d85a68df8eb4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/SimplifyBooleanReturnCheck.java", "commitBeforeChange": "54b9235aedc7f62e887c1a90b68ad465da08dd65", "commitAfterChange": "f1ef403f5e8fab7f9c68100f5089bb24ecf46bb9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["+        // LITERAL_IF has the following four or five children:", "+        // '('", "+        // condition", "+        // ')'", "+        // thenstatement", "+        // [ LITERAL_ELSE (with the elseStatement as a child) ]", "+", "-        if (aAST.getChildCount() != 3) {", "+        if (aAST.getChildCount() != 5) {", "-        AST condition = aAST.getFirstChild();", "-        AST thenStatement = condition.getNextSibling();", "-        AST elseStatement = thenStatement.getNextSibling();", "+        // skip '(' and ')'", "+        // TODO: Introduce helpers in DetailAST", "+        AST condition = aAST.getFirstChild().getNextSibling();", "+        AST thenStatement = condition.getNextSibling().getNextSibling();", "+        AST elseStatement = thenStatement.getNextSibling().getFirstChild();", "-            log(aAST.getLineNo(), \"Remove conditional logic.\");", "+            // TODO: i18n", "+            log(aAST.getLineNo(), aAST.getColumnNo(), \"Remove conditional logic.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a67ee960c59717da797235256a4f942", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "ed79281fff9b62deeed7b359c7fceedb6adb46c3", "commitAfterChange": "84c72ec3202ed9c2dff66ba3f5136a38af4ce95c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public ImportOrderCheck()", "signatureAfterChange": "     public ImportOrderOption getAbstractOption()", "diff": ["-    public ImportOrderCheck() {", "-        super(ImportOrderOption.UNDER, ImportOrderOption.class);", "+     */", "+    public ImportOrderOption getAbstractOption() {", "+        // WARNING!! Do not rename this method to getOption(). It breaks", "+        // BeanUtils, which will silently not call setOption. Very annoying!", "+        return option;"]}]}