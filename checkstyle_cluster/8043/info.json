{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7afd21b5b69873b34d7e875e77cfdf0e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08925ba2366496834674b35c1d8d3a12", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "b3133035a4fa0e086dfb0dfbefbc7f1540521bbc", "commitAfterChange": "add2bdfb27494bff5fa9c305d9782f57c6170b18", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 67, "signatureBeforeChange": "         public AuditListener createListener(Task aTask)             throws ClassNotFoundException, InstantiationException,             IllegalAccessException, IOException", "signatureAfterChange": "         public AuditListener createListener(Task aTask)             throws IOException", "diff": ["-            throws ClassNotFoundException, InstantiationException,", "-            IllegalAccessException, IOException", "+            throws IOException", "-            final Class clazz = Class.forName(mClassName);", "-            final AuditListener listener = (AuditListener) clazz.newInstance();", "-            listener.setOutputStream(createOutputStream(aTask));", "-            return listener;", "+            if (E_XML.equals(mFormatterType.getValue())) {", "+                return createXMLLogger(aTask);", "+            }", "+            else {", "+                return createDefaultLogger(aTask);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "973d4de123bcbe01f41fe1e7b6bb03ef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "         public AuditListener createListener(Task aTask) throws IOException", "signatureAfterChange": "         public AuditListener createListener(Task task) throws IOException", "diff": ["-        public AuditListener createListener(Task aTask) throws IOException", "+        public AuditListener createListener(Task task) throws IOException", "-            if ((mFormatterType != null)", "-                    && E_XML.equals(mFormatterType.getValue()))", "+            if ((formatterType != null)", "+                    && E_XML.equals(formatterType.getValue()))", "-                return createXMLLogger(aTask);", "+                return createXMLLogger(task);", "-            return createDefaultLogger(aTask);", "+            return createDefaultLogger(task);"]}]}