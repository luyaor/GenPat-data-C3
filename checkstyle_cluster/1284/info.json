{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1c0324fa7c9ad1d09be2dbb25c9812e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "173eb0b0bbbec8b739019cd0be18016d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "         public ClassFrame(LexicalFrame aParent)", "signatureAfterChange": "         public ClassFrame(LexicalFrame parent)", "diff": ["-        public ClassFrame(LexicalFrame aParent)", "+        public ClassFrame(LexicalFrame parent)", "-            super(aParent);", "-            mInstanceMembers = Sets.newHashSet();", "-            mInstanceMethods = Sets.newHashSet();", "-            mStaticMembers = Sets.newHashSet();", "-            mStaticMethods = Sets.newHashSet();", "+            super(parent);", "+            instanceMembers = Sets.newHashSet();", "+            instanceMethods = Sets.newHashSet();", "+            staticMembers = Sets.newHashSet();", "+            staticMethods = Sets.newHashSet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0578e8e75d7f74190e399c5780993b8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "          @Override         boolean contains(String aNameToFind)", "signatureAfterChange": "          @Override         boolean contains(String nameToFind)", "diff": ["-        boolean contains(String aNameToFind)", "+        boolean contains(String nameToFind)", "-            return super.contains(aNameToFind)", "-                    || mInstanceMembers.contains(aNameToFind)", "-                    || mInstanceMethods.contains(aNameToFind)", "-                    || mStaticMembers.contains(aNameToFind)", "-                    || mStaticMethods.contains(aNameToFind);", "+            return super.contains(nameToFind)", "+                    || instanceMembers.contains(nameToFind)", "+                    || instanceMethods.contains(nameToFind)", "+                    || staticMembers.contains(nameToFind)", "+                    || staticMethods.contains(nameToFind);"]}]}