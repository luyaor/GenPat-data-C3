{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5cd8559f8499b7062d4524f98e8fbcca", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22717b2b052b02324422aefe602e2126", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/OneMethodPrivateFieldCheck.java", "commitBeforeChange": "889f470ea6ca16b3067e35e2463282d9678f7bf0", "commitAfterChange": "80c8e1c7a8f32c0dd263fdd30d9d87ade317f51c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private Iterator getReferences(DetailAST aAST)", "signatureAfterChange": "     private Iterator getReferences(DetailAST aAST)", "diff": ["-        else {", "-            final Set dummy = new HashSet();", "-            return dummy.iterator();", "-        }", "+        final Set dummy = new HashSet();", "+        return dummy.iterator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f536e11b8237b53e569639e587de2b6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "ecd2e62dd43ac4640dc13a2f860874930538779a", "commitAfterChange": "e195128381e3d20a922411e2dea4c6496f3be1a3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private DetailAST skipAnnotationOnlyLines(DetailAST aAST)", "signatureAfterChange": "     private DetailAST skipAnnotationOnlyLines(DetailAST aAST)", "diff": ["-        else {", "-            final int lastAnnotLineNumber = lastAnnot.getLineNo();", "-            while (lastAnnot.getPreviousSibling() != null", "-                   && (lastAnnot.getPreviousSibling().getLineNo()", "-                        == lastAnnotLineNumber))", "-            {", "-                lastAnnot = lastAnnot.getPreviousSibling();", "-            }", "-            return lastAnnot;", "+        final int lastAnnotLineNumber = lastAnnot.getLineNo();", "+        while (lastAnnot.getPreviousSibling() != null", "+               && (lastAnnot.getPreviousSibling().getLineNo()", "+                    == lastAnnotLineNumber))", "+        {", "+            lastAnnot = lastAnnot.getPreviousSibling();", "+        return lastAnnot;"]}]}