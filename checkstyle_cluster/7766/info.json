{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f3f581e9523d608614c7abedbed1d2f0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e9c97b56c4e13a11316f19667a513d5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private static List<File> getFilesToProcess(CommandLine aLine)", "signatureAfterChange": "     private static List<File> getFilesToProcess(CommandLine aLine)", "diff": ["-            for (int i = 0; i < values.length; i++) {", "-                traverse(new File(values[i]), files);", "+            for (String element : values) {", "+                traverse(new File(element), files);", "-        for (int i = 0; i < remainingArgs.length; i++) {", "-            files.add(new File(remainingArgs[i]));", "+        for (String element : remainingArgs) {", "+            files.add(new File(element));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4d5c66aa6381dd8c829e3df0169f751", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/XMLLoggerTest.java", "commitBeforeChange": "1079f0ab995bc25218f9e38af7968552f26a5df5", "commitAfterChange": "f45fee0aa4ba2f6f286c9e0336543c20e311a681", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testIsReference()         throws IOException", "signatureAfterChange": "      @Test     public void testIsReference()         throws IOException", "diff": ["-        final String[] reference = {", "+        final String[] references = {", "-        for (int i = 0; i < reference.length; i++) {", "-            assertTrue(\"reference: \" + reference[i],", "-                       XMLLogger.isReference(reference[i]));", "+        for (String reference : references) {", "+            assertTrue(\"reference: \" + reference,", "+                    XMLLogger.isReference(reference));", "-        final String[] noReference = {", "+        final String[] noReferences = {", "-        for (int i = 0; i < noReference.length; i++) {", "-            assertFalse(\"no reference: \" + noReference[i],", "-                       XMLLogger.isReference(noReference[i]));", "+        for (String noReference : noReferences) {", "+            assertFalse(\"no reference: \" + noReference,", "+                    XMLLogger.isReference(noReference));"]}]}