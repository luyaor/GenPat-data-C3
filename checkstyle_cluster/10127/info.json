{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f0bdd95054f3e6571c133365b0dfd986", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18391a80ba6e0c61859b037d2fc1e8c9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "10f348bbfd91fd8c2bd7776aff3c03f549380a44", "commitAfterChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private static void collectDeclarations(Deque<LexicalFrame> frameStack,         DetailAST ast)", "signatureAfterChange": "     private static void collectDeclarations(Deque<AbstractFrame> frameStack,         DetailAST ast)", "diff": ["-    private static void collectDeclarations(Deque<LexicalFrame> frameStack,", "+    private static void collectDeclarations(Deque<AbstractFrame> frameStack,", "-        final LexicalFrame frame = frameStack.peek();", "+        final AbstractFrame frame = frameStack.peek();", "-                frame.addIdent(classIdent);", "-                frameStack.addFirst(new ClassFrame(frame));", "+                frameStack.addFirst(new ClassFrame(frame, classIdent.getText()));", "-                if (frame instanceof ClassFrame) {", "+                if (frame.getType() == FrameType.CLASS_FRAME) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54406641326a3ec3567a15a3d79c3e14", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "10f348bbfd91fd8c2bd7776aff3c03f549380a44", "commitAfterChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private static void collectVariableDeclarations(DetailAST ast, LexicalFrame frame)", "signatureAfterChange": "     private static void collectVariableDeclarations(DetailAST ast, AbstractFrame frame)", "diff": ["-    private static void collectVariableDeclarations(DetailAST ast, LexicalFrame frame) {", "-        final DetailAST ident =", "-                ast.findFirstToken(TokenTypes.IDENT);", "-        if (frame instanceof ClassFrame) {", "+    private static void collectVariableDeclarations(DetailAST ast, AbstractFrame frame) {", "+        final DetailAST ident = ast.findFirstToken(TokenTypes.IDENT);", "+        if (frame.getType() == FrameType.CLASS_FRAME) {"]}]}