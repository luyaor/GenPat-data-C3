{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3ad8fe658c9a4eed688a80b7a9cc1f1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c4a3dcfc691ae2b1a9b4d3471e78d08", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "262209477f39964a63103613f3e2c985da083371", "commitAfterChange": "08638b5f739d9929698860048c052da2d5f80209", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void compareKeySets(Set aKeys, Map aFileMap)", "signatureAfterChange": "     private void compareKeySets(Set<Object> aKeys,             Map<File, Set<Object>> aFileMap)", "diff": ["-    private void compareKeySets(Set aKeys, Map aFileMap)", "+    private void compareKeySets(Set<Object> aKeys,", "+            Map<File, Set<Object>> aFileMap)", "-        final Set fls = aFileMap.entrySet();", "+        final Set<Entry<File, Set<Object>>> fls = aFileMap.entrySet();", "-        for (final Iterator iter = fls.iterator(); iter.hasNext();) {", "-            final Map.Entry entry = (Map.Entry) iter.next();", "-            final File currentFile = (File) entry.getKey();", "+        for (Entry<File, Set<Object>> entry : fls) {", "+            final File currentFile = entry.getKey();", "-            final Set currentKeys = (Set) entry.getValue();", "+            final Set<Object> currentKeys = entry.getValue();", "-            final Set keysClone = new HashSet(aKeys);", "+            final Set<Object> keysClone = new HashSet<Object>(aKeys);", "-                for (final Iterator it = keysClone.iterator(); it.hasNext();) {", "-                    final Object key = it.next();", "+                for (Object key : keysClone) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c6aa19925e6904a153f9d256e33a43c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/RedundantImportCheck.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     @Override     public void visitToken(DetailAST aAST)", "diff": ["+    @Override", "-            final Iterator it = mImports.iterator();", "-            while (it.hasNext()) {", "-                final FullIdent full = (FullIdent) it.next();", "+            for (FullIdent full : mImports) {", "-            final Iterator it = mStaticImports.iterator();", "-            while (it.hasNext()) {", "-                final FullIdent full = (FullIdent) it.next();", "+            for (FullIdent full : mStaticImports) {"]}]}