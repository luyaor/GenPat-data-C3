{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5802148b517f03423a912dcdff05189e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "045d501568fe0ef09e4afb87afe33891", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java", "commitBeforeChange": "476f90c5d38c6cc2b3ed6776ad4a3120ea627338", "commitAfterChange": "5c3762cef2a69a10241801916a815f9066bca5f8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "         ClassDesc(boolean aDeclaredAsFinal)", "signatureAfterChange": "         ClassDesc(boolean aDeclaredAsFinal, boolean aDeclaredAsAbstract)", "diff": ["-        ClassDesc(boolean aDeclaredAsFinal)", "+        ClassDesc(boolean aDeclaredAsFinal, boolean aDeclaredAsAbstract)", "+            mDeclaredAsAbstract = aDeclaredAsAbstract;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14e175000053875b640605865bed30d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "2f5b39d41f21f2243d457b6c322e909b1911be5d", "commitAfterChange": "66325cbd72882454193765322efa716537ce9c93", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     private PackageNamesLoader()         throws ParserConfigurationException, SAXException", "signatureAfterChange": "     private PackageNamesLoader(ClassLoader aClassLoader)         throws ParserConfigurationException, SAXException", "diff": ["-    private PackageNamesLoader()", "+    private PackageNamesLoader(ClassLoader aClassLoader)", "+        mModuleFactory = new PackageObjectFactory(aClassLoader);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19e7b3fa1ca919e1025022560be29ab4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/ExecutableStatementCountCheck.java", "commitBeforeChange": "b8f9b199ad7de16619cec1f288bd751fad8bc4a9", "commitAfterChange": "b0bb7e1b50237a03ce4e977af15665c07e20f078", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "         public Context()", "signatureAfterChange": "         public Context(DetailAST aAST)", "diff": ["-        public Context()", "+        public Context(DetailAST aAST)", "+            mAST = aAST;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c37c923e547b7d37acd33fb912e435f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "ddd153f70798bcf1e33629e98407db8f9dbe0dcc", "commitAfterChange": "adce874628730a881c533bb04db2688d03a60fc6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private ConfigurationLoader(PropertyResolver aOverrideProps)         throws ParserConfigurationException, SAXException", "signatureAfterChange": "     private ConfigurationLoader(final PropertyResolver aOverrideProps,                                 final boolean aOmitIgnoredModules)         throws ParserConfigurationException, SAXException", "diff": ["-    private ConfigurationLoader(PropertyResolver aOverrideProps)", "+    private ConfigurationLoader(final PropertyResolver aOverrideProps,", "+                                final boolean aOmitIgnoredModules)", "+        mOmitIgnoredModules = aOmitIgnoredModules;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82e98ef568ba68f7be0f3d6096491a0d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java", "commitBeforeChange": "2f5b39d41f21f2243d457b6c322e909b1911be5d", "commitAfterChange": "66325cbd72882454193765322efa716537ce9c93", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     PackageObjectFactory()", "signatureAfterChange": "     PackageObjectFactory(ClassLoader aClassLoader)", "diff": ["-    PackageObjectFactory()", "+    PackageObjectFactory(ClassLoader aClassLoader)", "+        mLoader = aClassLoader;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f0578de358ffe00905b586688412d3f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "730ade67d5f3f286c1004ce9a772fd4bc3bc9307", "commitAfterChange": "f8459eb6742402c5c33f7b80e4c5844998a258ac", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     private ConfigurationLoader()         throws ParserConfigurationException, SAXException", "signatureAfterChange": "     private ConfigurationLoader(Properties aOverrideProps)         throws ParserConfigurationException, SAXException", "diff": ["-    private ConfigurationLoader()", "+    private ConfigurationLoader(Properties aOverrideProps)", "+        mOverrideProps = aOverrideProps; "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad10742042c347e8b75339c8ed9b4bfc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "e7556f4af60fa1602c1b74289c6c64e1a83e4235", "commitAfterChange": "5fc3ff2bfbed94f88e1af95f38e970a832e4dbe6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void notifyBegin(FileContents aContents)", "signatureAfterChange": "     private void notifyBegin(FileContents aContents, ClassLoader aLoader)", "diff": ["-    private void notifyBegin(FileContents aContents)", "+    private void notifyBegin(FileContents aContents, ClassLoader aLoader)", "+            check.setClassLoader(aLoader);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b56c48877fa72fac7b99d7798399e59f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "efa27bbfbe665185aed98b4ad3d93af4d643c141", "commitAfterChange": "ca3ffb73abc810385a4ce8fe685ad31c9d172bff", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DefaultLogger(OutputStream infoStream,                          boolean closeInfoAfterUse,                          OutputStream errorStream,                          boolean closeErrorAfterUse)", "signatureAfterChange": "     public DefaultLogger(OutputStream infoStream,                          boolean closeInfoAfterUse,                          OutputStream errorStream,                          boolean closeErrorAfterUse,                          boolean printSeverity)", "diff": ["-                         boolean closeErrorAfterUse)", "+                         boolean closeErrorAfterUse,", "+                         boolean printSeverity)", "+        this.printSeverity = printSeverity;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d942e3c651f0de2afcf2c33467d27818", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "0db81f33e13f9829ee7de0b261f042017084b78f", "commitAfterChange": "70a6e2e6d34fa5a404e88e45cd62a20a06e19556", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public DefaultLogger(OutputStream infoStream,                          boolean closeInfoAfterUse,                          OutputStream errorStream,                          boolean closeErrorAfterUse)", "signatureAfterChange": "     public DefaultLogger(OutputStream infoStream,                          boolean closeInfoAfterUse,                          OutputStream errorStream,                          boolean closeErrorAfterUse,                          AuditEvemtFormatter messageFormatter)", "diff": ["-                         boolean closeErrorAfterUse) {", "+                         boolean closeErrorAfterUse,", "+                         AuditEvemtFormatter messageFormatter) {", "+        formatter = messageFormatter;"]}]}