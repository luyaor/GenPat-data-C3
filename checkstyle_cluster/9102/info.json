{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "73f4bb675b817eeab7abcfbfd9a056b3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a00e8b2c5ee5215360270794137289f7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/AnonInnerLengthCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        AnonInnerLengthCheck anonInnerLengthCheckObj =", "+        final AnonInnerLengthCheck anonInnerLengthCheckObj =", "-        int[] actual = anonInnerLengthCheckObj.getAcceptableTokens();", "-        int[] expected = {TokenTypes.LITERAL_NEW};", "+        final int[] actual = anonInnerLengthCheckObj.getAcceptableTokens();", "+        final int[] expected = {TokenTypes.LITERAL_NEW};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa1bde509d669c4d3b53c178ca3241f7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        AvoidStaticImportCheck testCheckObject =", "+        final AvoidStaticImportCheck testCheckObject =", "-        int[] actual = testCheckObject.getAcceptableTokens();", "-        int[] expected = {TokenTypes.STATIC_IMPORT};", "+        final int[] actual = testCheckObject.getAcceptableTokens();", "+        final int[] expected = {TokenTypes.STATIC_IMPORT};"]}]}