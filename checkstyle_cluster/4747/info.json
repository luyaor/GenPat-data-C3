{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7023aa51ceb24ad4161106b28b3b2569", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "308c2c7327561fcedb3fdb0ec706541d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "         private void addReferencedClassName(String className)", "signatureAfterChange": "         private void addReferencedClassName(String referencedClassName)", "diff": ["-        private void addReferencedClassName(String className) {", "-            if (isSignificant(className)) {", "-                referencedClassNames.add(className);", "+        private void addReferencedClassName(String referencedClassName) {", "+            if (isSignificant(referencedClassName)) {", "+                referencedClassNames.add(referencedClassName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba68f4da33a33ac5539a23b4067575f6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "         private boolean isSignificant(String className)", "signatureAfterChange": "         private boolean isSignificant(String candidateClassName)", "diff": ["-        private boolean isSignificant(String className) {", "-            return !excludedClasses.contains(className)", "-                    && !className.startsWith(\"java.lang.\");", "+        private boolean isSignificant(String candidateClassName) {", "+            return !excludedClasses.contains(candidateClassName)", "+                    && !candidateClassName.startsWith(\"java.lang.\");"]}]}