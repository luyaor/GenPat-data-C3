{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "855dfdbb3b7c791518d053dc948c4bb2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69e806d91a9312f498ec953cbee7c831", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java", "commitBeforeChange": "1781e78175c3f21bd8fe0c5fa45a32a9cc36a488", "commitAfterChange": "80da4bb9bad0e9469c0cad8701e5c19edc5adbc5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     private static void initConverters()", "signatureAfterChange": "     private static void initConverters()", "diff": ["-", "-        boolean[] booleanArray = new boolean[0];", "-        byte[] byteArray = new byte[0];", "-        char[] charArray = new char[0];", "-        double[] doubleArray = new double[0];", "-        float[] floatArray = new float[0];", "-        int[] intArray = new int[0];", "-        long[] longArray = new long[0];", "-        short[] shortArray = new short[0];", "+        final boolean[] booleanArray = new boolean[0];", "+        final byte[] byteArray = new byte[0];", "+        final char[] charArray = new char[0];", "+        final double[] doubleArray = new double[0];", "+        final float[] floatArray = new float[0];", "+        final int[] intArray = new int[0];", "+        final long[] longArray = new long[0];", "+        final short[] shortArray = new short[0];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d31b38d81d5ff856ee1f1f8948e899e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testNullClassLoader() throws Exception", "signatureAfterChange": "      @Test     public void testNullClassLoader() throws Exception", "diff": ["-        DetailAST exprAst = new DetailAST();", "+        final DetailAST exprAst = new DetailAST();", "-        DetailAST newAst = new DetailAST();", "+        final DetailAST newAst = new DetailAST();", "-        DetailAST identAst = new DetailAST();", "+        final DetailAST identAst = new DetailAST();", "-        DetailAST lparenAst = new DetailAST();", "+        final DetailAST lparenAst = new DetailAST();", "-        DetailAST elistAst = new DetailAST();", "+        final DetailAST elistAst = new DetailAST();", "-        DetailAST rparenAst = new DetailAST();", "+        final DetailAST rparenAst = new DetailAST();", "-        IllegalInstantiationCheck check = new IllegalInstantiationCheck();", "-        File inputFile = new File(getNonCompilablePath(\"InputIllegalInstantiationLang.java\"));", "+        final IllegalInstantiationCheck check = new IllegalInstantiationCheck();", "+        final File inputFile = new File(getNonCompilablePath(\"InputIllegalInstantiationLang.java\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f6bbe0e5bf645582caf8f2f24203c93", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      @Test     public void testIncorrectTag() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrectTag() throws Exception", "diff": ["-            Class<?> aClassParent = ConfigurationLoader.class;", "+            final Class<?> aClassParent = ConfigurationLoader.class;", "-            Constructor<?>[] parentConstructors = aClassParent.getDeclaredConstructors();", "+            final Constructor<?>[] parentConstructors = aClassParent.getDeclaredConstructors();", "-            Class<?> aClass = Class.forName(\"com.puppycrawl.tools.checkstyle.\"", "+            final Class<?> aClass = Class.forName(\"com.puppycrawl.tools.checkstyle.\"", "-            Constructor<?>[] constructors = aClass.getDeclaredConstructors();", "+            final Constructor<?>[] constructors = aClass.getDeclaredConstructors();", "-            Class<?>[] param = new Class<?>[4];", "+            final Class<?>[] param = new Class<?>[4];", "-            Method method = aClass.getDeclaredMethod(\"startElement\", param);", "-            Object objParent = ctorParent.newInstance(null, true);", "-            Object obj = constructor.newInstance(objParent);", "+            final Method method = aClass.getDeclaredMethod(\"startElement\", param);", "+            final Object objParent = ctorParent.newInstance(null, true);", "+            final Object obj = constructor.newInstance(objParent);"]}]}