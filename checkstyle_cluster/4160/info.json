{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a6cf8fbf51d7c60d36214775bf86d9a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1482503c5ac9a232d0f75e45872193f9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "d87ea06ebb50622ac5327ec6c9765486aa032ff1", "commitAfterChange": "edf2c95634cd0c657465723eb0dc2e6f1834eeba", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "     void setHeaderIgnoreLineNo(int aHeaderIgnoreLineNo)", "signatureAfterChange": "     public void setHeaderIgnoreLineNo(int aHeaderIgnoreLineNo)", "diff": ["-    void setHeaderIgnoreLineNo(int aHeaderIgnoreLineNo)", "+    public void setHeaderIgnoreLineNo(int aHeaderIgnoreLineNo)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4710ddb0410ec5b2697ef669d1cdc392", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "bdd55605c098cb581884a790286dfec5e57710c8", "commitAfterChange": "913028d7f2698018bb9414d763110d3ef25be875", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 63, "signatureBeforeChange": "     public void setHeaderIgnoreLineNo(int aHeaderIgnoreLineNo)", "signatureAfterChange": "     public void setHeaderIgnoreLineNo(int aHeaderIgnoreLineNo)", "diff": ["-        mHeaderIgnoreLineNo = aHeaderIgnoreLineNo;", "+        setHeaderIgnoreLines(String.valueOf(aHeaderIgnoreLineNo));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee799756689f4077438199ad69adaba6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "3ded7a11556a6258bcddd3ebe2d69a2058675601", "commitAfterChange": "69138e40225407ef560fd9d06d2903de37c83c2c", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 32, "signatureBeforeChange": "     int getHeaderIgnoreLineNo()", "signatureAfterChange": "     void setHeaderIgnoreLineNo(int aHeaderIgnoreLineNo)", "diff": ["+     */", "+    void setHeaderIgnoreLineNo(int aHeaderIgnoreLineNo)", "+        mHeaderIgnoreLineNo = aHeaderIgnoreLineNo;"]}]}