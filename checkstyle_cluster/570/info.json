{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7df101d89dd5115cb1f1182ec7c94848", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b8fa9c0817e35695646c4f2c888cf0f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java", "commitBeforeChange": "232246fb939ae84f2dc124d6c59675b6c64e7802", "commitAfterChange": "8bd1d6869ba97b6a03dd2b069ffbe5a1571e1b45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected IndentLevel getLevelImpl()", "signatureAfterChange": "      @Override     protected IndentLevel getLevelImpl()", "diff": ["-                final DetailAST main = getMainAst();", "-                final DetailAST dot = main.getFirstChild();", "-                final DetailAST target = dot.getFirstChild();", "-", "-                if (dot.getType() == TokenTypes.DOT", "-                    && target.getType() == TokenTypes.METHOD_CALL)", "-                {", "-                    final DetailAST dot1 = target.getFirstChild();", "-                    final DetailAST target1 = dot1.getFirstChild();", "-", "-                    if (dot1.getType() == TokenTypes.DOT", "-                        && target1.getType() == TokenTypes.METHOD_CALL)", "-                    {", "-                        return container.getLevel();", "-                    }", "+                if (isChainedMethodCallWrapped()) {", "+                    return container.getLevel();", "-                return new IndentLevel(container.getLevel(), getBasicOffset());", "+                else {", "+                    return new IndentLevel(container.getLevel(), getBasicOffset());", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c40a24a131a8ec33790fe98a61bbde87", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java", "commitBeforeChange": "798aac8ff0ec17573d316b64ea1b86ecf387f12f", "commitAfterChange": "5a4f991d2738c824f70f361b21d9da193ff3751c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public IndentLevel getLevelImpl()", "signatureAfterChange": "     public IndentLevel getLevelImpl()", "diff": ["+", "+                // we should increase indentation only if this is the first", "+                // chained method call which was moved to the next line", "+                DetailAST main = getMainAst();", "+                DetailAST dot = (DetailAST) main.getFirstChild();", "+                DetailAST target = (DetailAST) dot.getFirstChild();", "+", "+                if (dot.getType() == TokenTypes.DOT", "+                    && target.getType() == TokenTypes.METHOD_CALL)", "+                {", "+                    DetailAST dot1 = (DetailAST) target.getFirstChild();", "+                    DetailAST target1 = (DetailAST) dot1.getFirstChild();", "+", "+                    if (dot1.getType() == TokenTypes.DOT", "+                        && target1.getType() == TokenTypes.METHOD_CALL)", "+                    {", "+                        return container.getLevel();", "+                    }", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1da1fdf624541a919714e0c3b6d6c3c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "commitBeforeChange": "e3741d10267df217664f47fdf68169286e2d31bc", "commitAfterChange": "2554557c1c4dda6cb348ba053a60c17d8ada9f73", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        final DetailAST parent1 = aAST.getParent();", "-        final DetailAST parent2 = parent1.getParent();", "-        final DetailAST parent3 = parent2.getParent();", "-", "-        final boolean assigment = isAssignment(parent1);", "-        final boolean expr = parent1.getType() == TokenTypes.EXPR;", "-        final boolean exprList =", "-                expr && parent2.getType() == TokenTypes.ELIST;", "-        final boolean methodCall =", "-                exprList && parent3.getType() == TokenTypes.METHOD_CALL;", "-        final boolean ctorCall =", "-                exprList && parent3.getType() == TokenTypes.LITERAL_NEW;", "-", "-        if (assigment || methodCall || ctorCall) {", "-            log(aAST.getLineNo(), aAST.getColumnNo(), \"assignment.inner.avoid\");", "+        if (isInContext(aAST, ALLOWED_ASSIGMENT_CONTEXT)) {", "+            return;", "+", "+        if (isInNoBraceControlStatement(aAST)) {", "+            return;", "+        }", "+", "+        if (isInWhileIdiom(aAST)) {", "+            return;", "+        }", "+", "+        log(aAST.getLineNo(), aAST.getColumnNo(), \"assignment.inner.avoid\");"]}]}