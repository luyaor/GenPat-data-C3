{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "37671656b3975fec14a0d4976dc11145", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59f800f04ff73680545557b83de0728e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "9241c0a692ed65fab3b3fdb3c4ff1c118794337c", "commitAfterChange": "4ee4d60e07a763be669173c3f45ed9b29eedca7c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean isTerminated(final DetailAST ast, boolean useBreak,                                  boolean useContinue)", "signatureAfterChange": "     private boolean isTerminated(final DetailAST ast, boolean useBreak,                                  boolean useContinue)", "diff": ["+        boolean terminated;", "+", "-                return true;", "+                terminated = true;", "+                break;", "-                return useBreak;", "+                terminated = useBreak;", "+                break;", "-                return useContinue;", "+                terminated = useContinue;", "+                break;", "-                return checkSlist(ast, useBreak, useContinue);", "+                terminated = checkSlist(ast, useBreak, useContinue);", "+                break;", "-                return checkIf(ast, useBreak, useContinue);", "+                terminated = checkIf(ast, useBreak, useContinue);", "+                break;", "-                return checkLoop(ast);", "+                terminated = checkLoop(ast);", "+                break;", "-                return checkTry(ast, useBreak, useContinue);", "+                terminated = checkTry(ast, useBreak, useContinue);", "+                break;", "-                return checkSwitch(ast, useContinue);", "+                terminated = checkSwitch(ast, useContinue);", "+                break;", "-                return false;", "+                terminated = false;", "+        return terminated;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4532fc26d113fe446acc95a0ee39b6c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean isTerminated(final DetailAST aAST, boolean aUseBreak,                                  boolean aUseContinue)", "signatureAfterChange": "     private boolean isTerminated(final DetailAST ast, boolean useBreak,                                  boolean useContinue)", "diff": ["-    private boolean isTerminated(final DetailAST aAST, boolean aUseBreak,", "-                                 boolean aUseContinue)", "+    private boolean isTerminated(final DetailAST ast, boolean useBreak,", "+                                 boolean useContinue)", "-        switch (aAST.getType()) {", "+        switch (ast.getType()) {", "-            return aUseBreak;", "+            return useBreak;", "-            return aUseContinue;", "+            return useContinue;", "-            return checkSlist(aAST, aUseBreak, aUseContinue);", "+            return checkSlist(ast, useBreak, useContinue);", "-            return checkIf(aAST, aUseBreak, aUseContinue);", "+            return checkIf(ast, useBreak, useContinue);", "-            return checkLoop(aAST);", "+            return checkLoop(ast);", "-            return checkTry(aAST, aUseBreak, aUseContinue);", "+            return checkTry(ast, useBreak, useContinue);", "-            return checkSwitch(aAST, aUseContinue);", "+            return checkSwitch(ast, useContinue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc461a658e130bf4fe1c02b7f86cd3d6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private boolean checkTry(final DetailAST aAST, boolean aUseBreak,                              boolean aUseContinue)", "signatureAfterChange": "     private boolean checkTry(final DetailAST ast, boolean useBreak,                              boolean useContinue)", "diff": ["-    private boolean checkTry(final DetailAST aAST, boolean aUseBreak,", "-                             boolean aUseContinue)", "+    private boolean checkTry(final DetailAST ast, boolean useBreak,", "+                             boolean useContinue)", "-        final DetailAST finalStmt = aAST.getLastChild();", "+        final DetailAST finalStmt = ast.getLastChild();", "-                                aUseBreak, aUseContinue);", "+                                useBreak, useContinue);", "-        boolean isTerminated = isTerminated(aAST.getFirstChild(),", "-                                            aUseBreak, aUseContinue);", "+        boolean isTerminated = isTerminated(ast.getFirstChild(),", "+                                            useBreak, useContinue);", "-        DetailAST catchStmt = aAST.findFirstToken(TokenTypes.LITERAL_CATCH);", "+        DetailAST catchStmt = ast.findFirstToken(TokenTypes.LITERAL_CATCH);", "-            isTerminated &= isTerminated(catchBody, aUseBreak, aUseContinue);", "+            isTerminated &= isTerminated(catchBody, useBreak, useContinue);"]}]}