{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5d36ea3e722313195736ccea44cc896", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e4c5835e915cc4b33cc8db7931d5953", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     @Test     public void testNotOverride() throws Exception", "signatureAfterChange": "     @Test     public void testNotOverride() throws Exception", "diff": ["-            \"8: The Javadoc {@inheritDoc} tag is not valid at this location.\",", "-            \"15: The Javadoc {@inheritDoc} tag is not valid at this location.\",", "-            //this wont be flagged because this check only checks methods.", "-            //\"22: The Javadoc comment contains an {@inheritDoc} tag. The tag is not valid at this location.\",", "+            \"8: \" + getCheckMessage(MSG_KEY_TAG_NOT_VALID_ON, \"{@inheritDoc}\"),", "+            \"15: \" + getCheckMessage(MSG_KEY_TAG_NOT_VALID_ON, \"{@inheritDoc}\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "351e7b29a607d3532503bd20bda2c607", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testAlone() throws Exception", "signatureAfterChange": "      @Test     public void testAlone() throws Exception", "diff": ["-            \"93:27: '}' should be alone on a line.\",", "-            \"93:27: '}' should be on a new line.\",", "+            \"93:27: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),", "+            \"93:27: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4972668584338b6c90a4b323e067609", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testStyleCompact() throws Exception", "signatureAfterChange": "      @Test     public void testStyleCompact() throws Exception", "diff": ["-            \"43: Annotation style must be 'COMPACT'.\",", "-            \"47: Annotation style must be 'COMPACT'.\",", "+            \"43: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"COMPACT\"),", "+            \"47: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"COMPACT\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df9bd7dff709f3c24525351dcfc1137d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testSigleLineIfBlock() throws Exception", "signatureAfterChange": "      @Test     public void testSigleLineIfBlock() throws Exception", "diff": ["-            \"23: 'if' construct must use '{}'s.\" ,", "-            \"29: 'if' construct must use '{}'s.\" ,", "+            \"23: \" + getCheckMessage(MSG_KEY_NEED_BRACES, \"if\"),", "+            \"29: \" + getCheckMessage(MSG_KEY_NEED_BRACES, \"if\"),"]}]}