{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "85d5be4f7e35e77d8f92dfb806f8f0be", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bd472a8715ebb97fcb958b0d01fbede", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "03a24c2e44dbc49721c7c4a6e4e82d7907a601ee", "commitAfterChange": "4424370783f1c41fc1e146f554468f89e8f0e88b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["+", "+    @Override", "-        super.visitToken(ast);", "-        if (ast.getType() == TokenTypes.IDENT) {", "-            processIdent(ast);", "+        switch (ast.getType()) {", "+            case TokenTypes.IDENT :", "+                processIdent(ast);", "+                break;", "+            case TokenTypes.CLASS_DEF :", "+            case TokenTypes.INTERFACE_DEF :", "+            case TokenTypes.ENUM_DEF :", "+            case TokenTypes.ANNOTATION_DEF :", "+            case TokenTypes.SLIST :", "+            case TokenTypes.METHOD_DEF :", "+            case TokenTypes.CTOR_DEF :", "+                current = frames.get(ast);", "+                break;", "+            default :", "+                // do nothing"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d80776bfe806a9068c0219b9450d1f3f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "f010eb47869bae692609de487d6140373e02f3a3", "commitAfterChange": "907a19906f790ce8faea7aa74e12608538dca1b6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-        final LexicalFrame frame = this.mFrames.current();", "+        switch (aAST.getType()) {", "+        case TokenTypes.CLASS_DEF :", "+        case TokenTypes.INTERFACE_DEF :", "+        case TokenTypes.ENUM_DEF :", "+        case TokenTypes.ANNOTATION_DEF :", "+        case TokenTypes.SLIST :", "+        case TokenTypes.METHOD_DEF :", "+        case TokenTypes.CTOR_DEF :", "+            this.mCurrent = this.mFrames.get(aAST);", "+            break;", "+        default :", "+            // do nothing", "+        }", "+    } // end visitToken", "-            this.mFrames.enter(new ClassFrame());", "-            this.mFrames.enter(new BlockFrame());", "-            this.mFrames.enter(new MethodFrame());"]}]}