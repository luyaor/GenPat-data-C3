{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd5b9846ed23f78d227f6a7a3fbd985b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "540f5e4851a348af08ca98de497144a0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "96c668724bc05a11ceb031dda71efe1e9e69480d", "commitAfterChange": "788b41973d5747c7b4699a853b62168cf0001df6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public boolean equals(Object aObject)", "signatureAfterChange": "     public boolean equals(Object aObject)", "diff": ["-            if (!this.mCheckPattern.equals(other.mCheckPattern)) {", "+            if (mCheckPattern != null) {", "+                if (!mCheckPattern.equals(other.mCheckPattern)) {", "+                    return false;", "+                }", "+            }", "+            else if (other.mCheckPattern != null) {", "+                return false;", "+            }", "+", "+            // same module id?", "+            if (mModuleId != null) {", "+                if (!mModuleId.equals(other.mModuleId)) {", "+                    return false;", "+                }", "+            }", "+            else if (other.mModuleId != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da14395e8a1a91bab75bb86f96797b1e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "c37cc9e521b884aec06593210191e9200c726788", "commitAfterChange": "88f6d6ffe7c1735f48f24cf5cd38c34d7326e3fd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public boolean equals(Object aObj)", "signatureAfterChange": "     public boolean equals(Object aObj)", "diff": ["+            boolean isTextEquals = true;", "+", "+            if (getText() != null) {", "+                isTextEquals = getText().equals(other.getText());", "+            }", "+            else if (other.getText() != null) {", "+                isTextEquals = false;", "+            }", "+", "-                && (other.getText().equals(getText()))", "-                && (other.mLineNo == mLineNo)", "-                && (other.mColumnNo == mColumnNo);", "+                && isTextEquals", "+                && (other.mLineNo == getLineNo())", "+                && (other.mColumnNo == getColumnNo());"]}]}