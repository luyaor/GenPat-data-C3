{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "682fc8c8b557a0458708c73f62e10f7a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bed831934a67b010571b428163a7bbb0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "58473e4e73ef030566c584329acdefbe45a9b92c", "commitAfterChange": "068702d69533256fca702acb12740883a24e2591", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static String getCommentText(String... comments)", "signatureAfterChange": "     private static String getCommentText(String... comments)", "diff": ["-        final StringBuffer buffer = new StringBuffer();", "+        final StringBuilder builder = new StringBuilder();", "-                buffer.append(line.substring(textStart));", "-                trimTail(buffer);", "-                buffer.append('\\n');", "+                builder.append(line.substring(textStart));", "+                trimTail(builder);", "+                builder.append('\\n');", "-        return buffer.toString().trim();", "+        return builder.toString().trim();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c496a92758bc1eacfaaf77135ccd241a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentLevel.java", "commitBeforeChange": "1ca93bdf66b630e58d979ad2aa40f02e678db5cf", "commitAfterChange": "bc36fe40fcfb51e720dc531a824cd6664ccc4c8b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-        return Joiner.on(\", \").join(mLevels);", "+        if (mLevels.cardinality() == 1) {", "+            return String.valueOf(mLevels.nextSetBit(0));", "+        }", "+        final StringBuilder sb = new StringBuilder();", "+        for (int i = mLevels.nextSetBit(0); i >= 0;", "+            i = mLevels.nextSetBit(i + 1))", "+        {", "+            if (sb.length() > 0) {", "+                sb.append(\", \");", "+            }", "+            sb.append(i);", "+        }", "+        return sb.toString();"]}]}