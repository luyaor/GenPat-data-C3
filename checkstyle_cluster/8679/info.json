{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3754937b580dcc369c0a6e49cc809d4a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54050740cb6ab2af354306391a15fbfb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java", "commitBeforeChange": "d2af4accdde3eac0a2103353f490e97bf62f61d2", "commitAfterChange": "d4b933799af120cf4a8490db98f396b6348430e9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setLineSeparator(String aLineSeparator)", "signatureAfterChange": "     public void setLineSeparator(String aLineSeparator)", "diff": ["-        final AbstractOption option =", "-            LineSeparatorOption.SYSTEM.decode(aLineSeparator);", "-", "-        if (option == null) {", "-            throw new ConversionException(\"unable to parse \" + aLineSeparator);", "+        try {", "+            mLineSeparator =", "+                Enum.valueOf(LineSeparatorOption.class, aLineSeparator.trim()", "+                    .toUpperCase());", "-", "-        mLineSeparator = (LineSeparatorOption) option;", "+        catch (IllegalArgumentException iae) {", "+            throw new ConversionException(\"unable to parse \" + aLineSeparator,", "+                iae);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd3c55ba3d77e6d78dab47dd21579af5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "4c124c309f63c48a52c3fe765f3e23ad5a4be9d3", "commitAfterChange": "4218884ee87436e45bc590291e5f3c7175f67930", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Ignore @Test     public void testOsBasedir() throws Exception", "signatureAfterChange": "      @Test     public void testOsBasedir() throws Exception", "diff": ["-    @Ignore @Test // Need to resolve why fails under Maven.", "+    @Test", "-        String testinputs_dir = System.getProperty(\"testinputs.dir\");", "+        String testinputs_dir = System.getProperty(\"testinputs.dir\")", "+                .replace('/', File.separatorChar)", "+                .replace('\\\\',File.separatorChar);", "-        c.setBasedir(testinputs_dir + \"indentation/./..\\\\coding\\\\\");", "-        assertEquals(c.getBasedir(), testinputs_dir + \"coding\");", "+        final String instr = testinputs_dir + \"indentation/./..\\\\coding\\\\\";", "+        c.setBasedir(instr);"]}]}