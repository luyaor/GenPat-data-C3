{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed9e432b5c0d7cd4d8ef8b03f79ae3be", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dd8c9477a5b2c7ef3b0f53b46b393b8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "f010eb47869bae692609de487d6140373e02f3a3", "commitAfterChange": "907a19906f790ce8faea7aa74e12608538dca1b6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 5, "signatureBeforeChange": "         LexicalFrame findFrame(String aNameToFind)", "signatureAfterChange": "     private LexicalFrame findFrame(String aName)", "diff": ["+     */", "+    private LexicalFrame findFrame(String aName)", "+    {", "+        if (mCurrent != null) {", "+            return mCurrent.getIfContains(aName);", "+        }", "+        else {", "+            return null;", "+        }", "-         */", "-        LexicalFrame findFrame(String aNameToFind)", "-        {", "-            for (LexicalFrame thisFrame : mFrameList) {", "-                if (thisFrame.contains(aNameToFind)) {", "-                    return thisFrame;", "-                }", "-            }", "-            return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8da965010996c9999e6b413475d4133d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "0ce872d7cc6b0b1564655b9e3119f72911f4dddd", "commitAfterChange": "ea9ff3965d9c657b5b7bd2d969e075f430635c47", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static void flushAndCloseOutStream(OutputStream stream)", "signatureAfterChange": "     private static void flushAndCloseOutStream(OutputStream stream) throws IOException", "diff": ["-    private static void flushAndCloseOutStream(OutputStream stream) {", "-        try {", "+    private static void flushAndCloseOutStream(OutputStream stream) throws IOException {", "+        if (stream != null) {", "-            Closeables.close(stream, false);", "-        catch (final IOException ex) {", "-            LOG.debug(\"Unable to flush and close output stream.\", ex);", "-        }", "+        Closeables.close(stream, false);"]}]}