{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e428d082f01599becbd4be0c1674701a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfd4f79419ed2903696f8feda53077be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "commitBeforeChange": "42fc689da0fd2f8b9d6e1ea42da65479f5ad9121", "commitAfterChange": "38be87d86ccef8820fb52315c612fe0d16188013", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-        if (!publicTypeFound) {", "-            // skip first top-level type.", "-            lineNumberTypeMap.remove(lineNumberTypeMap.firstKey());", "-        }", "+        if (!lineNumberTypeMap.isEmpty()) {", "+            if (!publicTypeFound) {", "+                // skip first top-level type.", "+                lineNumberTypeMap.remove(lineNumberTypeMap.firstKey());", "+            }", "-        for (Map.Entry<Integer, String> entry", "-                : lineNumberTypeMap.entrySet())", "-        {", "-            log(entry.getKey(), MSG_KEY, entry.getValue());", "+            for (Map.Entry<Integer, String> entry", "+                    : lineNumberTypeMap.entrySet())", "+            {", "+                log(entry.getKey(), MSG_KEY, entry.getValue());", "+            }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7065088d7f1afd91db4f14e71dbfbe9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-    public void finishTree(DetailAST aRootAST)", "+    public void finishTree(DetailAST rootAST)", "-        if (!mPublicTypeFound && !mLineNumberTypeMap.isEmpty()) {", "+        if (!publicTypeFound && !lineNumberTypeMap.isEmpty()) {", "-            mLineNumberTypeMap.remove(mLineNumberTypeMap.firstKey());", "+            lineNumberTypeMap.remove(lineNumberTypeMap.firstKey());", "-                : mLineNumberTypeMap.entrySet())", "+                : lineNumberTypeMap.entrySet())", "-        mLineNumberTypeMap.clear();", "-        mPublicTypeFound = false;", "+        lineNumberTypeMap.clear();", "+        publicTypeFound = false;"]}]}