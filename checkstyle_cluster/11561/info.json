{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e7ebf46cdacfd02afd8f6ce162dc329", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ebaa172ef26278867bdd9088c99fbc4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public ExpressionHandler getHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "signatureAfterChange": "     public ExpressionHandler getHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "diff": ["-        ExpressionHandler handler =", "+        final ExpressionHandler handler =", "-        Integer type = new Integer(aAst.getType());", "+        final Integer type = new Integer(aAst.getType());", "-            Constructor handlerCtor = (Constructor) mTypeHandlers.get(type);", "+            final Constructor handlerCtor =", "+                (Constructor) mTypeHandlers.get(type);", "-        catch (InstantiationException e) {", "+        catch (final InstantiationException e) {", "-        catch (IllegalAccessException e) {", "+        catch (final IllegalAccessException e) {", "-        catch (InvocationTargetException e) {", "+        catch (final InvocationTargetException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88596129647f6e9334c4c58ee91970e5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Utils.java", "commitBeforeChange": "1ef7197d95faaa734cf4a506bebc8229bcd4d1f1", "commitAfterChange": "e68f47ce99313c7dafade4ac4a55fccf12c09d5e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private static int getTokenFieldValue(Field field, String name)", "signatureAfterChange": "     public static int getIntFromField(Field field, Object object)", "diff": ["-    private static int getTokenFieldValue(Field field, String name) {", "+    public static int getIntFromField(Field field, Object object) {", "-            return field.getInt(name);", "+            return field.getInt(object);", "-        catch (final IllegalArgumentException | IllegalAccessException e) {", "-            throw new IllegalStateException(", "-                    \"Failed to instantiate collection of Java tokens\", e);", "+        catch (final IllegalAccessException exception) {", "+            throw new IllegalStateException(exception);"]}]}