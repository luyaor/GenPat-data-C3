{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0316325b723b607e2b52f0639d86edb3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1537f8f611812cb27072d3d23db53c3d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "4ebf621616e3c9ea2284e7109d19abbbe1a94efc", "commitAfterChange": "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private void checkParamTags(final List aTags, final DetailAST aParent,         boolean aReportExpectedTags)", "signatureAfterChange": "     private void checkParamTags(final List<JavadocTag> aTags,             final DetailAST aParent, boolean aReportExpectedTags)", "diff": ["-    private void checkParamTags(final List aTags, final DetailAST aParent,", "-        boolean aReportExpectedTags)", "+    private void checkParamTags(final List<JavadocTag> aTags,", "+            final DetailAST aParent, boolean aReportExpectedTags)", "-        final List params = getParameters(aParent);", "-        final List typeParams = CheckUtils.getTypeParameters(aParent);", "+        final List<DetailAST> params = getParameters(aParent);", "+        final List<DetailAST> typeParams = CheckUtils", "+                .getTypeParameters(aParent);", "-        final ListIterator tagIt = aTags.listIterator();", "+        final ListIterator<JavadocTag> tagIt = aTags.listIterator();", "-            final JavadocTag tag = (JavadocTag) tagIt.next();", "+            final JavadocTag tag = tagIt.next();", "-            final Iterator paramIt = params.iterator();", "+            final Iterator<DetailAST> paramIt = params.iterator();", "-                final DetailAST param = (DetailAST) paramIt.next();", "+                final DetailAST param = paramIt.next();", "-                final Iterator typeParamsIt = typeParams.iterator();", "+                final Iterator<DetailAST> typeParamsIt = typeParams.iterator();", "-                    final DetailAST typeParam = (DetailAST) typeParamsIt.next();", "+                    final DetailAST typeParam = typeParamsIt.next();", "-            final Iterator paramIt = params.iterator();", "+            final Iterator<DetailAST> paramIt = params.iterator();", "-                final DetailAST param = (DetailAST) paramIt.next();", "+                final DetailAST param = paramIt.next();", "-            final Iterator typeParamsIt = typeParams.iterator();", "+            final Iterator<DetailAST> typeParamsIt = typeParams.iterator();", "-                final DetailAST typeParam = (DetailAST) typeParamsIt.next();", "+                final DetailAST typeParam = typeParamsIt.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31da884ba86861f8dfbc41b06b5e198c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "6f6e4db399353f769525820d9a7319287105d3e5", "commitAfterChange": "06c32930c34e2b10b5926883c29a4a20fe6ecf05", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private void checkParamTags(List aTags, List aParams,                                 boolean aReportExpectedTags)", "signatureAfterChange": "     private void checkParamTags(final List aTags, final DetailAST aParent,                                 boolean aReportExpectedTags)", "diff": ["-    private void checkParamTags(List aTags, List aParams,", "+    private void checkParamTags(final List aTags, final DetailAST aParent,", "+        List params = getParameters(aParent);", "+        List typeParams = CheckUtils.getTypeParameters(aParent);", "+", "-            // Loop looking for matching param", "-            final Iterator paramIt = aParams.iterator();", "+", "+            // Loop looking for matching param", "+            final Iterator paramIt = params.iterator();", "+            if (tag.getArg1().startsWith(\"<\") && tag.getArg1().endsWith(\">\")) {", "+                // Loop looking for matching type param", "+                Iterator typeParamsIt = typeParams.iterator();", "+                while (typeParamsIt.hasNext()) {", "+                    final DetailAST typeParam = (DetailAST) typeParamsIt.next();", "+                    if (typeParam.findFirstToken(TokenTypes.IDENT).getText()", "+                        .equals(tag.getArg1().substring(", "+                            1, tag.getArg1().length() - 1)))", "+                    {", "+                        found = true;", "+                        typeParamsIt.remove();", "+                        break;", "+                    }", "+                }", "+", "+            }", "+", "-        // Now dump out all parameters without tags :- unless", "+        // Now dump out all type parameters/parameters without tags :- unless", "-            final Iterator paramIt = aParams.iterator();", "+            final Iterator paramIt = params.iterator();", "+", "+            final Iterator typeParamsIt = typeParams.iterator();", "+            while (typeParamsIt.hasNext()) {", "+                final DetailAST typeParam = (DetailAST) typeParamsIt.next();", "+                log(typeParam, \"javadoc.expectedTag\", \"@param\",", "+                    \"<\"", "+                    + typeParam.findFirstToken(TokenTypes.IDENT).getText()", "+                    + \">\");", "+            }"]}]}