{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a76ecdd73c7aa538fc554e3c6daa5b4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27c300f2def922695f0bb84008ab42f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "28193fd5f053dd45f8bfa96b500b5e41a79a55cb", "commitAfterChange": "c8aae6e57e6e348e0ad113a6d9522ca247f40cba", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testBadInt()         throws CheckstyleException", "signatureAfterChange": "      public void testBadInt()         throws CheckstyleException", "diff": ["-            assertEquals(", "-                \"number format exception src/testinputs/com/puppycrawl/tools/checkstyle/suppressions_bad_int.xml - For input string: \\\"a\\\"\",", "-                ex.getMessage());", "+            assertTrue(", "+                ex.getMessage(),", "+                ex.getMessage().startsWith(\"number format exception src/testinputs/com/puppycrawl/tools/checkstyle/suppressions_bad_int.xml - \"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45c09fad8dd26951dc224512c0b489e6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java", "commitBeforeChange": "f47587c9fb66cf46fbd2eb5691449cda6d551ecb", "commitAfterChange": "6ab5bf1ae57aa57a79b46b892c5bd7542df2b272", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testRequiredTokenIsNotInDefaultTokens() throws Exception", "signatureAfterChange": "      @Test     public void testRequiredTokenIsNotInDefaultTokens() throws Exception", "diff": ["-        catch (CheckstyleException ignored) {", "-            //expected", "+        catch (CheckstyleException ex) {", "+            assertTrue(ex.getMessage().startsWith(\"cannot initialize module\"", "+                + \" com.puppycrawl.tools.checkstyle.TreeWalker - Token \\\"\"", "+                + TokenTypes.ASSIGN + \"\\\" from required\"", "+                + \" tokens was not found in default tokens list in check\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70a39dc8d87c1382216b44950d260493", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/AvoidStarImportTest.java", "commitBeforeChange": "7e570084e62eda58f3c4fa7e75e26a1a41d255cf", "commitAfterChange": "78bc37d67358493ace57983b711449e1c9f15c93", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testIt()         throws Exception", "signatureAfterChange": "      public void testIt()         throws Exception", "diff": ["-        assertEquals(msgs.getMessages()[0].getMessage(), \"help me Ronda\");", "+        assertEquals(", "+          \"Avoid using the '.*' form of import.\",", "+          msgs.getMessages()[0].getMessage());", "+        assertEquals(", "+          \"Avoid using the '.*' form of import.\",", "+          msgs.getMessages()[1].getMessage());", "+        assertEquals(", "+          \"Avoid using the '.*' form of import.\",", "+          msgs.getMessages()[2].getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea16cee4cdfe0074191c7de5892efb3d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/TokenUtilsTest.java", "commitBeforeChange": "f47587c9fb66cf46fbd2eb5691449cda6d551ecb", "commitAfterChange": "6ab5bf1ae57aa57a79b46b892c5bd7542df2b272", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetIntFromInaccessibleField() throws NoSuchFieldException", "signatureAfterChange": "      @Test     public void testGetIntFromInaccessibleField() throws NoSuchFieldException", "diff": ["-            // expected", "+            assertTrue(expected.getMessage().startsWith(", "+                \"java.lang.IllegalAccessException: Class\"", "+                + \" com.puppycrawl.tools.checkstyle.utils.TokenUtils\"", "+                + \" can not access a member of class java.lang.Integer with modifiers \"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fda3700f9ac330b9bfceb7e4097d2914", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheckTest.java", "commitBeforeChange": "6a8584adbd9ad33ae2b89c0deb6481f62dd14257", "commitAfterChange": "10352e146f048c7938af5949925b0eb19781a0b1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testNonExistingHeaderFile() throws Exception", "signatureAfterChange": "      @Test     public void testNonExistingHeaderFile() throws Exception", "diff": ["-            // expected exception", "+            assertTrue(ex.getMessage()", "+                    .startsWith(\"cannot initialize module\"", "+                            + \" com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck\"", "+                            + \" - Unable to find: \"));", "+            assertTrue(ex.getMessage().endsWith(\"nonExisting.file\"));"]}]}