{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f1f7b02f35c03f9df498e4a7d5984dbf", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e8ef244bbda494615dfb3b78f704a3a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java", "commitBeforeChange": "78e9ce870170ca3ef88fd78f8e0af0681c958eb3", "commitAfterChange": "ea4085cd15fefe1e70a495798187c425295c74b6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        final String[] lines = getLines();", "-        final String line = lines[aAST.getLineNo() - 1];", "-        final int after = aAST.getColumnNo() + aAST.getText().length();", "+        DetailAST targetAST = aAST;", "+        if (targetAST.getType() == TokenTypes.TYPECAST) {", "+            targetAST = targetAST.findFirstToken(TokenTypes.RPAREN);", "+        }", "+        final String line = getLines()[aAST.getLineNo() - 1];", "+        final int after =", "+            targetAST.getColumnNo() + targetAST.getText().length();", "-                log(aAST.getLineNo(), after, \"ws.followed\", aAST.getText());", "+                log(targetAST.getLineNo(), after,", "+                    \"ws.followed\", targetAST.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f67f6c2932464ff7e0617a4456511c9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void processStart(DetailAST aAST)", "signatureAfterChange": "     private void processStart(DetailAST ast)", "diff": ["-    private void processStart(DetailAST aAST)", "+    private void processStart(DetailAST ast)", "-        final String line = getLine(aAST.getLineNo() - 1);", "-        final int before = aAST.getColumnNo() - 1;", "-        final int after = aAST.getColumnNo() + 1;", "+        final String line = getLine(ast.getLineNo() - 1);", "+        final int before = ast.getColumnNo() - 1;", "+        final int after = ast.getColumnNo() + 1;", "-            final DetailAST parent = aAST.getParent();", "+            final DetailAST parent = ast.getParent();", "-                    log(aAST.getLineNo(), before, \"ws.notPreceded\", \"<\");", "+                    log(ast.getLineNo(), before, \"ws.notPreceded\", \"<\");", "-                log(aAST.getLineNo(), before, \"ws.preceded\", \"<\");", "+                log(ast.getLineNo(), before, \"ws.preceded\", \"<\");", "-            log(aAST.getLineNo(), after, \"ws.followed\", \"<\");", "+            log(ast.getLineNo(), after, \"ws.followed\", \"<\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "814e2a46ffad5ba8d642bc95c60bf31f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForIteratorPadCheck.java", "commitBeforeChange": "4a0b798adbce23e37a9d2445079503cb8d624eed", "commitAfterChange": "ee8467d36723b5b3562b4f101e84950a4320ecf1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            final String line = getLines()[aAST.getLineNo() - 1];", "-            final int after = aAST.getColumnNo() - 1;", "+            //empty for iterator. test pad after semi.", "+            final DetailAST semi = aAST.getPreviousSibling();", "+            final String line = getLines()[semi.getLineNo() - 1];", "+            final int after = semi.getColumnNo() + 1;", "+            //don't check if at end of line", "-                    log(aAST.getLineNo(), after, \"ws.followed\", \";\");", "+                    log(semi.getLineNo(), after, \"ws.followed\", \";\");", "-                         && !Character.isWhitespace(line.charAt(after))", "-                         && (line.charAt(after) != ')'))", "+                         && !Character.isWhitespace(line.charAt(after)))", "-                    log(aAST.getLineNo(), after, \"ws.notFollowed\", \";\");", "+                    log(semi.getLineNo(), after, \"ws.notFollowed\", \";\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd9eda308ec417dd6cfc68cb9c2e3b91", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void processEnd(DetailAST ast)", "signatureAfterChange": "     private void processEnd(DetailAST ast)", "diff": ["-            log(ast.getLineNo(), before, \"ws.preceded\", \">\");", "+            log(ast.getLineNo(), before, WS_PRECEDED, \">\");", "-                        log(ast.getLineNo(), after, \"ws.followed\", \">\");", "+                        log(ast.getLineNo(), after, WS_FOLLOWED, \">\");", "-                    log(ast.getLineNo(), after, \"ws.illegalFollow\", \">\");", "+                    log(ast.getLineNo(), after, WS_ILLEGAL_FOLLOW, \">\");", "-                        log(ast.getLineNo(), after, \"ws.notPreceded\", \"&\");", "+                        log(ast.getLineNo(), after, WS_NOT_PRECEDED, \"&\");", "-                        log(ast.getLineNo(), after, \"ws.followed\", \">\");", "+                        log(ast.getLineNo(), after, WS_FOLLOWED, \">\");", "-                    log(ast.getLineNo(), after, \"ws.followed\", \">\");", "+                    log(ast.getLineNo(), after, WS_FOLLOWED, \">\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bee571a7ca84f829f84edd4e1f044bde", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceBeforeCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final String line = getLine(aAST.getLineNo() - 1);", "-        final int before = aAST.getColumnNo() - 1;", "+        final String line = getLine(ast.getLineNo() - 1);", "+        final int before = ast.getColumnNo() - 1;", "-            if (aAST.getType() == TokenTypes.SEMI) {", "-                final DetailAST sibling = aAST.getPreviousSibling();", "+            if (ast.getType() == TokenTypes.SEMI) {", "+                final DetailAST sibling = ast.getPreviousSibling();", "-            boolean flag = !mAllowLineBreaks;", "+            boolean flag = !allowLineBreaks;", "-                log(aAST.getLineNo(), before, \"ws.preceded\", aAST.getText());", "+                log(ast.getLineNo(), before, \"ws.preceded\", ast.getText());"]}]}