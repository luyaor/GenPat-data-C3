{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "042c37d43b371f7d6c324a72c522e857", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44186c590994a82261ace73f84d9bf78", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/SuperCloneCheckTest.java", "commitBeforeChange": "de60ea7b86b5ea25338dfe8a300db9d179004812", "commitAfterChange": "e24596db9459a3592784a544b213cc7aa919a3f6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testIt() throws Exception", "signatureAfterChange": "      @Test     public void testIt() throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"checks/coding/InputClone.java\"), expected);", "+        verify(checkConfig, getPath(\"InputClone.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98736bbe2b88f8104dfa00a54c9c33bb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 64, "signatureBeforeChange": "      @Test     public void testSynchronizedStatement() throws Exception", "signatureAfterChange": "      @Test     public void testSynchronizedStatement() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputSynchronizedStatement.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputSynchronizedStatement.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccf9a18a8103e5b27b540c03a17a7dd4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testWithFewArgWithTypeFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithFewArgWithTypeFullBody()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest13.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda13.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7d031c02c093c24119b8ff84b7c1c2d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCorrect() throws Exception", "signatureAfterChange": "      @Test     public void testCorrect() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputCorrectAtClauseOrderCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputCorrectAtClauseOrder.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e98b6ce9abbf9fcfbc38665496e34194", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/AnnotationTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testAnnotationOnWildcards()         throws Exception", "signatureAfterChange": "      @Test     public void testAnnotationOnWildcards()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputAnnotationsTest9.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputAnnotations9.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec5ee781991ba163faed4fedac75557c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule521packagenames/PackageNameTest.java", "commitBeforeChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "commitAfterChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void badPackageNameTest() throws Exception", "signatureAfterChange": "      @Test     public void badPackageNameTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"PackageNameInputBad\");", "+        final String filePath = builder.getFilePath(\"InputPackageNameBad\");"]}]}