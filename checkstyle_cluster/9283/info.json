{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d979506fe410798f7479952e901da216", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "049e1db66eec3327f43ffe398f5f8114", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (TokenTypes.INTERFACE_DEF == ast.getType()) {", "+        if (ast.getType() == TokenTypes.INTERFACE_DEF) {", "-        else if (TokenTypes.CTOR_DEF == ast.getType()", "+        else if (ast.getType() == TokenTypes.CTOR_DEF"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "065e14acc05069983c392aac5bbcebb1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (TokenTypes.METHOD_DEF == ast.getType()) {", "+        if (ast.getType() == TokenTypes.METHOD_DEF) {", "-            final boolean inInterface = TokenTypes.INTERFACE_DEF == ast.getType();", "+            final boolean inInterface = ast.getType() == TokenTypes.INTERFACE_DEF;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "281e3460e47e6731c98776363b3b98e6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/AbstractParenPadCheck.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected void processRight(DetailAST ast)", "signatureAfterChange": "     protected void processRight(DetailAST ast)", "diff": ["-            if (PadOption.NOSPACE == getAbstractOption()", "+            if (getAbstractOption() == PadOption.NOSPACE", "-            else if (PadOption.SPACE == getAbstractOption()", "+            else if (getAbstractOption() == PadOption.SPACE"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b511ff0375606ac2b67207b6727733b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/MethodParamPadCheck.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            if (PadOption.NOSPACE == getAbstractOption()", "+            if (getAbstractOption() == PadOption.NOSPACE", "-            else if (PadOption.SPACE == getAbstractOption()", "+            else if (getAbstractOption() == PadOption.SPACE"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cd26a9f7cc046df3d1a48817eb37989", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportCheck.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(final DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(final DetailAST ast)", "diff": ["-        if (!allowClassImports && TokenTypes.IMPORT == ast.getType()) {", "+        if (!allowClassImports && ast.getType() == TokenTypes.IMPORT) {", "-            && TokenTypes.STATIC_IMPORT == ast.getType()) {", "+            && ast.getType() == TokenTypes.STATIC_IMPORT) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c37de74a72444fba7c8323c17c2276bf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/AbstractParenPadCheck.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected void processLeft(DetailAST ast)", "signatureAfterChange": "     protected void processLeft(DetailAST ast)", "diff": ["-            if (PadOption.NOSPACE == getAbstractOption()", "+            if (getAbstractOption() == PadOption.NOSPACE", "-            else if (PadOption.SPACE == getAbstractOption()", "+            else if (getAbstractOption() == PadOption.SPACE"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7ab603ee7ad8b7118b3f1be63686ec4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForIteratorPadCheck.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                if (PadOption.NOSPACE == getAbstractOption()", "+                if (getAbstractOption() == PadOption.NOSPACE", "-                else if (PadOption.SPACE == getAbstractOption()", "+                else if (getAbstractOption() == PadOption.SPACE"]}]}