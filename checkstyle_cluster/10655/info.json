{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a85bde73175eeeeddf85a8ab5d9d9c4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f07a0381c54b0f4aa8095bb835676dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolderTest.java", "commitBeforeChange": "64c05f5391bdf55a60da22a685488022827aee84", "commitAfterChange": "1487e5161886d95cb8c82e4fb1a8b447fa7e32d0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testIsSuppressed() throws Exception", "signatureAfterChange": "      @Test     public void testIsSuppressed() throws Exception", "diff": ["-        Constructor<?> entryConstr = entry.getDeclaredConstructor(String.class, int.class,", "+        Constructor<?> entryConstructor = entry.getDeclaredConstructor(String.class, int.class,", "-        entryConstr.setAccessible(true);", "+        entryConstructor.setAccessible(true);", "-        Object entryInstance = entryConstr.newInstance(\"MockEntry\", 100, 100, 350, 350);", "+        Object entryInstance = entryConstructor.newInstance(\"MockEntry\", 100, 100, 350, 350);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa2d4a4a053e499db17d13e4bcf03a14", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/CommonUtilsTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testInvokeConstructor() throws NoSuchMethodException", "signatureAfterChange": "      @Test     public void testInvokeConstructor() throws NoSuchMethodException", "diff": ["-        Constructor<String> constructor = String.class.getConstructor(String.class);", "+        final Constructor<String> constructor = String.class.getConstructor(String.class);", "-        String constructedString = CommonUtils.invokeConstructor(constructor, \"string\");", "+        final String constructedString = CommonUtils.invokeConstructor(constructor, \"string\");"]}]}