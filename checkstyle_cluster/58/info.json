{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0fe31a5c56906048f4a1252ef110a2d5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "082dd694c1fc03a9ea85076f41fbfd1d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "2698e9a5196abbc566b633dbe6bdbf71db33b4f8", "commitAfterChange": "89005ddf6d5d8b494e4451d16df9fd8996c735a9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Override     public void addError(AuditEvent evt)", "signatureAfterChange": "     @Override     public void addError(AuditEvent evt)", "diff": ["-        if (!SeverityLevel.IGNORE.equals(severityLevel)) {", "+        if (SeverityLevel.IGNORE != severityLevel) {", "-            if (SeverityLevel.WARNING.equals(severityLevel)) {", "+            if (SeverityLevel.WARNING == severityLevel) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "087020dd53dace6a9f0dd57c967268a6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedCheck.java", "commitBeforeChange": "521dacce7582a4349a9b02980c3e849e83c023fb", "commitAfterChange": "82d8e91024a57a96fbb6410dacb29d6a3f582903", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean validateTagAtTheRestOfComment(String[] lines, boolean foundBefore,                                                   int currentLine, int i)", "signatureAfterChange": "     private boolean validateTagAtTheRestOfComment(String[] lines, boolean foundBefore,                                                   int currentLine, int i)", "diff": ["-            final Matcher multilineCont =", "-                MissingDeprecatedCheck.MATCH_DEPRECATED_MULTILINE_CONT", "-                .matcher(lines[reindex]);", "+            final Matcher multilineCont = MATCH_DEPRECATED_MULTILINE_CONT.matcher(lines[reindex]);", "-                if (!lFin.equals(MissingDeprecatedCheck.NEXT_TAG)", "-                    && !lFin.equals(MissingDeprecatedCheck.END_JAVADOC)) {", "+                if (!lFin.equals(NEXT_TAG)", "+                    && !lFin.equals(END_JAVADOC)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10b2aa9b15b4497542692e3d7c314f5e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "7e1d5d0a2d4eeebf14b406722a16cb43f6437f1a", "commitAfterChange": "f0c74333de00353b99ff1e9bfd1365ed4560794c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void openFile(File file, final Component parent)", "signatureAfterChange": "      public void openFile(File file, final Component parent)", "diff": ["-                getLinesToPosition().clear();", "+                clearLinesToPosition();", "-                getLinesToPosition().add(0);", "+                addLineToPosition(0);", "-                    getLinesToPosition().add(textArea.getText().length());", "+                    addLineToPosition(textArea.getText().length());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1582d9312acff145b45b35841d192bbb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LineColumn.java", "commitBeforeChange": "b3f832821730749993c3c419eb6f9b320fb6190f", "commitAfterChange": "e23b8a2ffa778628b4a163ef7ac60291482f64ef", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public int compareTo(LineColumn lineColumn)", "signatureAfterChange": "      @Override     public int compareTo(LineColumn lineColumn)", "diff": ["-        if (getLine() == lineColumn.getLine()) {", "-            return Integer.compare(getColumn(), lineColumn.getColumn());", "+        if (line == lineColumn.line) {", "+            return Integer.compare(column, lineColumn.column);", "-            return Integer.compare(getLine(), lineColumn.getLine());", "+            return Integer.compare(line, lineColumn.line);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "160107945abba33f3ba3c66a5907d11d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "9c21acf16a4d0dbae220f42c26f4917152c379d1", "commitAfterChange": "11eb99681a05047aecc2ce4b4bc51c849d1cfd44", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private static boolean isCommentConsistent(String comment)", "signatureAfterChange": "      private static boolean isCommentConsistent(String comment)", "diff": ["-", "-            return expectedLevel == indentInComment && !isWarnComment", "-                    || expectedLevel != indentInComment && isWarnComment;", "+            return isSingleLevelCommentConsistent(indentInComment, isWarnComment, expectedLevel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29c6ae47ee9d40df1da5cb7222a93dfb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheckTest.java", "commitBeforeChange": "613ac4bb77cbdb6b93d4a79360c8e4aa47f5596b", "commitAfterChange": "aa950f06974ead524a9f355ad8fb1b38852f9625", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Test     public void testIOException() throws Exception", "signatureAfterChange": "     @Test     public void testIOException() throws Exception", "diff": ["-        Assert.assertEquals(\"Wrong messages count: \" + messages.size(),", "+        assertEquals(\"Wrong messages count: \" + messages.size(),", "-        Assert.assertEquals(\"Message key '\" + retrievedMessage", "-                + \"' is not valid\", \"unable.open.cause\",", "+        assertEquals(\"Message key '\" + retrievedMessage", "+                        + \"' is not valid\", \"unable.open.cause\",", "-        Assert.assertEquals(\"Message '\" + message.getMessage()", "-                + \"' is not valid\", message.getMessage(),", "+        assertEquals(\"Message '\" + message.getMessage()", "+                        + \"' is not valid\", message.getMessage(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fd78984b119d60deb149a2cd7297cf3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "contrib/bcel/src/checkstyle/com/puppycrawl/tools/checkstyle/bcel/AbstractCheckVisitor.java", "commitBeforeChange": "65603924fdf47c194fc2ef9e0bc60bfc81ee4166", "commitAfterChange": "2707ab4393bd5a585f1f794c43515b8a1b900078", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected final void log(int aLine, String aKey, Object aArgs[])", "signatureAfterChange": "     protected final void log(int aLine, String aKey, Object aArgs[])", "diff": ["-        mMessages.add(", "-            new LocalizedMessage(", "-                aLine,", "-                getMessageBundle(),", "-                aKey,", "-                aArgs,", "-                getSeverityLevel(),", "-                this.getClass()));", "+        log(NO_FILE, aLine, aKey, aArgs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3015bc7f9a29dbc23c9c88a2034f8e25", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "9fcb40a184ebe0dd1eea732b9a493e3e01ea53dc", "commitAfterChange": "483132aca9c35591e1010e51a0ac31d746dc75a6", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private boolean shouldCheck(final DetailAST ast, final Scope nodeScope)", "signatureAfterChange": "     private boolean shouldCheck(final DetailAST ast, final Scope nodeScope)", "diff": ["-                && (excludeScope == null || !nodeScope.isIn(excludeScope)", "-                    || !surroundingScope.isIn(excludeScope));", "+                && (excludeScope == null || nodeScope != excludeScope", "+                    && surroundingScope != excludeScope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33c6196af7acc09c3dacdbfca410a585", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ParameterNumberCheck.java", "commitBeforeChange": "4bbe4acd319fa60dac09d28aaa9f7b18f18dee1f", "commitAfterChange": "eecd476fa8c6dba62f919a5ff1740d108848c867", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        final DetailAST params =", "-            Utils.findFirstToken(aAST.getFirstChild(),", "-                                 TokenTypes.PARAMETERS);", "-        final int count = Utils.countTokens(params.getFirstChild(),", "-                                            TokenTypes.PARAMETER_DEF);", "+        final DetailAST params = aAST.findFirstToken(TokenTypes.PARAMETERS);", "+        final int count = params.getChildCount(TokenTypes.PARAMETER_DEF);", "-            final DetailAST name = Utils.findFirstToken(aAST.getFirstChild(),", "-                                                        TokenTypes.IDENT);", "+            final DetailAST name = aAST.findFirstToken(TokenTypes.IDENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43c0c735d6e5e4dabfc2020abf0446da", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "85d6fcba9ce1ac53db7f92ef4ba3d4de5bda3fbc", "commitAfterChange": "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void checkCheckClosingParens(final DetailAST ast)", "signatureAfterChange": "     private void checkCheckClosingParens(final DetailAST ast)", "diff": ["-        if (ClosingParens.IGNORE == this.parens) {", "+        if (ClosingParens.IGNORE == parens) {", "-        if (ClosingParens.ALWAYS == this.parens", "+        if (ClosingParens.ALWAYS == parens", "-            this.log(ast.getLineNo(), MSG_KEY_ANNOTATION_PARENS_MISSING);", "+            log(ast.getLineNo(), MSG_KEY_ANNOTATION_PARENS_MISSING);", "-        else if (ClosingParens.NEVER == this.parens", "+        else if (ClosingParens.NEVER == parens", "-            this.log(ast.getLineNo(), MSG_KEY_ANNOTATION_PARENS_PRESENT);", "+            log(ast.getLineNo(), MSG_KEY_ANNOTATION_PARENS_PRESENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47e25158ae7baf91cd9d560eb813ece0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "22136c67e9c83494e7aa977ffe7a79beee1b4175", "commitAfterChange": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r     private boolean containsAllSafeTokens(final AST aExpr)", "signatureAfterChange": "\r     private boolean containsAllSafeTokens(final DetailAST aExpr)", "diff": ["-    private boolean containsAllSafeTokens(final AST aExpr)\r", "+    private boolean containsAllSafeTokens(final DetailAST aExpr)\r", "-        AST arg = aExpr.getFirstChild();\r", "+        DetailAST arg = aExpr.getFirstChild();\r", "-        if (((DetailAST) arg).branchContains(TokenTypes.METHOD_CALL)) {\r", "+        if (arg.branchContains(TokenTypes.METHOD_CALL)) {\r", "-        if (((DetailAST) arg).branchContains(TokenTypes.PLUS_ASSIGN)\r", "-                || ((DetailAST) arg).branchContains(TokenTypes.IDENT))\r", "+        if ((arg).branchContains(TokenTypes.PLUS_ASSIGN)\r", "+                || (arg).branchContains(TokenTypes.IDENT))\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48593b09d08cf6f6e3cec920c984bbf5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java", "commitBeforeChange": "22136c67e9c83494e7aa977ffe7a79beee1b4175", "commitAfterChange": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-            lcurly = (DetailAST) aAST.getFirstChild();", "-            nextToken = (DetailAST) lcurly.getNextSibling();", "+            lcurly = aAST.getFirstChild();", "+            nextToken = lcurly.getNextSibling();", "-            nextToken = (DetailAST) aAST.getNextSibling();", "+            nextToken = aAST.getNextSibling();", "-            lcurly = (DetailAST) aAST.getFirstChild();", "+            lcurly = aAST.getFirstChild();", "-            lcurly = (DetailAST) aAST.getFirstChild();", "+            lcurly = aAST.getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4af0dac500694890718a83a06213aae0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "a135b0952a3041e37dfc9b81452bc016a5687e25", "commitAfterChange": "ca1c33e3112d9217e89eec82bbcd589381d48715", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static Properties loadProperties(File file)", "signatureAfterChange": "     private static Properties loadProperties(File file)", "diff": ["-        FileInputStream fis = null;", "-        try {", "-            fis = new FileInputStream(file);", "+", "+        try (final FileInputStream fis = new FileInputStream(file)) {", "-        }", "-        finally {", "-            Utils.closeQuietly(fis);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4edb4baf4e59b55e9090f800ef032cd1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "c75c9f00ac9e34031b88f097a9f436ec261e3b82", "commitAfterChange": "a244f057057913003dd17e952ee76a844f0fb76b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Override     public int compareTo(LocalizedMessage other)", "signatureAfterChange": "      @Override     public int compareTo(LocalizedMessage other)", "diff": ["-        int result = Integer.compare(getLineNo(), other.getLineNo());", "+        int result = Integer.compare(lineNo, other.lineNo);", "-        if (getLineNo() == other.getLineNo()) {", "-            if (getColumnNo() == other.getColumnNo()) {", "+        if (lineNo == other.lineNo) {", "+            if (columnNo == other.columnNo) {", "-                result = Integer.compare(getColumnNo(), other.getColumnNo());", "+                result = Integer.compare(columnNo, other.columnNo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53e7a970e87fef7573a9fa62ec5d7fc8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "495227c6086c83d4cb4547f7a3fe7ff8976853ea", "commitAfterChange": "20483ae032296610315fafb9a8774cfdd0e13857", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "signatureAfterChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "diff": ["-        setCacheFile(aProps.getProperty(Defn.CACHE_FILE_PROP));", "+        setStringProperty(aProps, Defn.CACHE_FILE_PROP);", "+        setStringProperty(aProps, Defn.LOCALE_LANGUAGE_PROP);", "-        setBasedir(aProps.getProperty(Defn.BASEDIR_PROP));", "+        setStringProperty(aProps, Defn.BASEDIR_PROP);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c534dc24b3e5d76b383f7f5c1089d0a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java", "commitBeforeChange": "52e2087c404986f8e12cd8579be7b2333961e1a3", "commitAfterChange": "c38185458ab824874b8465c46b4dc42646440aaa", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "         public void setRowHeight(int newRowHeight)", "signatureAfterChange": "         public void setRowHeight(int newRowHeight)", "diff": ["-                if (JTreeTable.this != null &&", "-                        JTreeTable.this.getRowHeight() != newRowHeight) {", "-                    JTreeTable.this.setRowHeight(getRowHeight());", "+                if (getRowHeight() != newRowHeight) {", "+                    setRowHeight(getRowHeight());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "696b138944ea0e629bbe6bbedd9a1ada", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "211e2414ae57765ee25e99ab89372ee293f59e38", "commitAfterChange": "ad34b2a35eff0dba70ef5b27a0ff361520b66bea", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-            startToken = aAST;", "+            // Orig", "+            //startToken = aAST;", "+            // New", "+            startToken = skipAnnotationOnlyLines(aAST);", "+            // End", "-            startToken = aAST.getFirstChild();", "+            startToken = (DetailAST) skipAnnotationOnlyLines(aAST);", "-                : objBlock.getFirstChild();", "+                : (DetailAST) objBlock.getFirstChild();", "-            final DetailAST candidate = aAST.getFirstChild();", "+            final DetailAST candidate = (DetailAST) aAST.getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a7be7b4413c4339b3846795c58355ac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "28e8f33dfdccf2d34d44bea42c28567776313628", "commitAfterChange": "6d3dbe2fd3d64b491ee39ac1d42d0ee88938d190", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processSingleGeneric(DetailAST ast, String line, int after)", "signatureAfterChange": "     private void processSingleGeneric(DetailAST ast, String line, int after)", "diff": ["-            && '(' != charAfter && ')' != charAfter", "-            && ',' != charAfter && '[' != charAfter", "-            && '.' != charAfter && ':' != charAfter", "-            && !isAfterMethodReference(ast)) {", "+            && charAfter != '(' && charAfter != ')'", "+            && charAfter != ',' && charAfter != '['", "+            && charAfter != '.' && charAfter != ':') {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f902e89d977e60b7c2b730a3c4475f7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "65ca7775ba7d0b649c16cfdc8a1447f41867c870", "commitAfterChange": "6ffc8dd26075456b055ffcd35d3915c23049bfbb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Checker(Configuration aConfig)         throws CheckstyleException", "signatureAfterChange": "     public Checker()         throws CheckstyleException", "diff": ["-     */", "-    public Checker(Configuration aConfig)", "-        throws CheckstyleException", "-        this(aConfig.getGlobalProperties(), aConfig.getCheckConfigurations());", "+    public Checker()", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "728baa975bceceeeb88fcf94ec300bfa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "commitBeforeChange": "85d6fcba9ce1ac53db7f92ef4ba3d4de5bda3fbc", "commitAfterChange": "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Override     public void visitToken(final DetailAST ast)", "signatureAfterChange": "     @Override     public void visitToken(final DetailAST ast)", "diff": ["-            this.getFileContents().getJavadocBefore(ast.getLineNo());", "+            getFileContents().getJavadocBefore(ast.getLineNo());", "-            this.log(ast.getLineNo(), MSG_KEY_TAG_NOT_VALID_ON,", "+            log(ast.getLineNo(), MSG_KEY_TAG_NOT_VALID_ON,", "-        if (this.javaFiveCompatibility) {", "+        if (javaFiveCompatibility) {", "-            this.log(ast.getLineNo(), MSG_KEY_ANNOTATION_MISSING_OVERRIDE);", "+            log(ast.getLineNo(), MSG_KEY_ANNOTATION_MISSING_OVERRIDE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ce50f9f04f57d9f8ebdb300b279feae", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "2698e9a5196abbc566b633dbe6bdbf71db33b4f8", "commitAfterChange": "89005ddf6d5d8b494e4451d16df9fd8996c735a9", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void logCommaViolation(final DetailAST ast)", "signatureAfterChange": "     private void logCommaViolation(final DetailAST ast)", "diff": ["-        if (TrailingArrayComma.ALWAYS.equals(this.comma)", "+        if (TrailingArrayComma.ALWAYS == this.comma", "-        else if (TrailingArrayComma.NEVER.equals(this.comma)", "+        else if (TrailingArrayComma.NEVER == this.comma"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88563bed3ea1a858f95dbca16c1ea440", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java", "commitBeforeChange": "262209477f39964a63103613f3e2c985da083371", "commitAfterChange": "08638b5f739d9929698860048c052da2d5f80209", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     @Override     public void visitToken(DetailAST aAST)", "diff": ["+    @Override", "-            state = (ScopeState) mScopeStates.peek();", "+            state = mScopeStates.peek();", "-            state = (ScopeState) mScopeStates.peek();", "+            state = mScopeStates.peek();", "-            state = (ScopeState) mScopeStates.peek();", "+            state = mScopeStates.peek();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8af53210ad066ab19be40bc3d15abcd0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java", "commitBeforeChange": "8aa747f8ac92b55212445789548369dd628cb260", "commitAfterChange": "54ed230519fc78c7a5ca48d9dd05cce4f4ff4b1b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private DetailNode getNearestEmptyLine(DetailNode aNode)", "signatureAfterChange": "     private DetailNode getNearestEmptyLine(DetailNode aNode)", "diff": ["-            if (newLine.getType() == JavadocTokenTypes.NEWLINE && previousSibling != null", "-                && previousSibling.getType() == JavadocTokenTypes.LEADING_ASTERISK)", "+            if (newLine.getType() == JavadocTokenTypes.NEWLINE && isEmptyLine(newLine))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95e4ece96ece1a865af54aae181ed239", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LineColumn.java", "commitBeforeChange": "85d6fcba9ce1ac53db7f92ef4ba3d4de5bda3fbc", "commitAfterChange": "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Override     public int compareTo(LineColumn lineColumn)", "signatureAfterChange": "     @Override     public int compareTo(LineColumn lineColumn)", "diff": ["-        return this.getLine() != lineColumn.getLine()", "-            ? Integer.compare(this.getLine(), lineColumn.getLine())", "-            : Integer.compare(this.getColumn(), lineColumn.getColumn());", "+        return getLine() != lineColumn.getLine()", "+            ? Integer.compare(getLine(), lineColumn.getLine())", "+            : Integer.compare(getColumn(), lineColumn.getColumn());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "961a761e25e6b0435496c12542ba036f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/UtilsTest.java", "commitBeforeChange": "f0d637e28c17dd33cf4031a1ab499abf4c1bbb03", "commitAfterChange": "59fa63c67d44757974a88e8210d7263497155272", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      @Test     public void testIsCommentType() throws NoSuchMethodException", "signatureAfterChange": "      @Test     public void testIsCommentType() throws NoSuchMethodException", "diff": ["-        Assert.assertTrue(Utils.isCommentType(TokenTypes.SINGLE_LINE_COMMENT));", "-        Assert.assertTrue(Utils.isCommentType(TokenTypes.BLOCK_COMMENT_BEGIN));", "-        Assert.assertTrue(Utils.isCommentType(TokenTypes.BLOCK_COMMENT_END));", "-        Assert.assertTrue(Utils.isCommentType(TokenTypes.COMMENT_CONTENT));", "+        assertTrue(Utils.isCommentType(TokenTypes.SINGLE_LINE_COMMENT));", "+        assertTrue(Utils.isCommentType(TokenTypes.BLOCK_COMMENT_BEGIN));", "+        assertTrue(Utils.isCommentType(TokenTypes.BLOCK_COMMENT_END));", "+        assertTrue(Utils.isCommentType(TokenTypes.COMMENT_CONTENT));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9005c68858a2d81d497b0a4bd6dcf8a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "113ea8405c8b753540ee3423d7e37e383f269155", "commitAfterChange": "7f7db38a097a95c264307123924779380fb40077", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void checkLinesIndent(LineSet aLines,                                   IndentLevel aIndentLevel,                                   boolean aFirstLineMatches,                                   int aFirstLine)", "signatureAfterChange": "     private void checkLinesIndent(LineSet aLines,                                   IndentLevel aIndentLevel,                                   boolean aFirstLineMatches,                                   int aFirstLine)", "diff": ["-            aIndentLevel = new IndentLevel(aIndentLevel,", "-                                           mIndentCheck.getBasicOffset());", "+            aIndentLevel = new IndentLevel(aIndentLevel, getBasicOffset());", "-                aIndentLevel = new IndentLevel(aIndentLevel,", "-                                               mIndentCheck.getBasicOffset());", "+                aIndentLevel = new IndentLevel(aIndentLevel, getBasicOffset());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aebb088e4d2f8112d8ce3da9afc794eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ConstantNameCheck.java", "commitBeforeChange": "4bbe4acd319fa60dac09d28aaa9f7b18f18dee1f", "commitAfterChange": "eecd476fa8c6dba62f919a5ff1740d108848c867", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-                    Utils.findFirstToken(aAST.getFirstChild(),", "-                                         TokenTypes.MODIFIERS);", "+                    aAST.findFirstToken(TokenTypes.MODIFIERS);", "-                Utils.findFirstToken(aAST.getFirstChild(), TokenTypes.IDENT);", "+                aAST.findFirstToken(TokenTypes.IDENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1f3c4eced080d51765b8cc0bd7ba495", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "4c1700ebe1041b5f3be839024ae553bd8983db91", "commitAfterChange": "d3dd0586454d1757c8a188ecb9d2954b244344d4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected final void processAST(DetailAST aAST)", "signatureAfterChange": "     protected final void processAST(DetailAST aAST)", "diff": ["-                if (!mAllowMissingJavadoc", "-                    && !(mAllowMissingPropertyJavadoc", "-                         && (isSetterMethod(aAST) || isGetterMethod(aAST))))", "-                {", "+                if (!isMissingJavadocAllowed(aAST)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4723066d0be06cebb4f92abff2f63d1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Comment.java", "commitBeforeChange": "ed7bdbd3b2072acbadf4260e26f59a6499556ada", "commitAfterChange": "9423bd2f1df0b58d31dd2898345654160891ec2a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public boolean intersects(int aStartLineNo, int aStartColNo,                               int aEndLineNo, int aEndColNo)", "signatureAfterChange": "     public boolean intersects(int aStartLineNo, int aStartColNo,                               int aEndLineNo, int aEndColNo)", "diff": ["-        final long thisStart = ((long) mFirstLine) * multiplier + mFirstCol;", "-        final long thisEnd = ((long) mLastLine) * multiplier + mLastCol;", "-        final long inStart = ((long) aStartLineNo) * multiplier + aStartColNo;", "-        final long inEnd = ((long) aEndLineNo) * multiplier + aEndColNo;", "+        final long thisStart = mFirstLine * multiplier + mFirstCol;", "+        final long thisEnd = mLastLine * multiplier + mLastCol;", "+        final long inStart = aStartLineNo * multiplier + aStartColNo;", "+        final long inEnd = aEndLineNo * multiplier + aEndColNo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccfd9f67f5509aad18be5813513f40c1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java", "commitBeforeChange": "22136c67e9c83494e7aa977ffe7a79beee1b4175", "commitAfterChange": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-            DetailAST modifier = (DetailAST) modifiers.getFirstChild();", "+            DetailAST modifier = modifiers.getFirstChild();", "-                modifier = (DetailAST) modifier.getNextSibling();", "+                modifier = modifier.getNextSibling();", "-                DetailAST modifier = (DetailAST) modifiers.getFirstChild();", "+                DetailAST modifier = modifiers.getFirstChild();", "-                    modifier = (DetailAST) modifier.getNextSibling();", "+                    modifier = modifier.getNextSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d712c952ac40d8cba0a09b49064c0adb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "d44cb066cbd89ce3c8d99c04d2fd28dbae68a6d9", "commitAfterChange": "e36ae750f6378b9a3cd8e5171c6e6b710bf10959", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Override     public void addError(AuditEvent evt)", "signatureAfterChange": "     @Override     public void addError(AuditEvent evt)", "diff": ["-            if (printSeverity) {", "-                sb.append(\": \").append(severityLevel.getName());", "+            if (SeverityLevel.WARNING == severityLevel) {", "+                sb.append(\": warning\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e31fe19fdd836972e1376563c944d05f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTag.java", "commitBeforeChange": "2698e9a5196abbc566b633dbe6bdbf71db33b4f8", "commitAfterChange": "89005ddf6d5d8b494e4451d16df9fd8996c735a9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public boolean isThrowsTag()", "signatureAfterChange": "     public boolean isThrowsTag()", "diff": ["-        return (JavadocTagInfo.THROWS.equals(tagInfo)", "-            || JavadocTagInfo.EXCEPTION.equals(tagInfo));", "+        return (JavadocTagInfo.THROWS == tagInfo", "+            || JavadocTagInfo.EXCEPTION == tagInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1b6b035778c423180b418969b58f2e3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java", "commitBeforeChange": "22136c67e9c83494e7aa977ffe7a79beee1b4175", "commitAfterChange": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected IndentLevel getLevelImpl()", "signatureAfterChange": "      @Override     protected IndentLevel getLevelImpl()", "diff": ["-                final DetailAST dot = (DetailAST) main.getFirstChild();", "-                final DetailAST target = (DetailAST) dot.getFirstChild();", "+                final DetailAST dot = main.getFirstChild();", "+                final DetailAST target = dot.getFirstChild();", "-                    final DetailAST dot1 = (DetailAST) target.getFirstChild();", "-                    final DetailAST target1 = (DetailAST) dot1.getFirstChild();", "+                    final DetailAST dot1 = target.getFirstChild();", "+                    final DetailAST target1 = dot1.getFirstChild();", "-        findSubtreeLines(lines, (DetailAST) getMainAst().getFirstChild(), true);", "+        findSubtreeLines(lines, getMainAst().getFirstChild(), true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8d29a52fb423383e1ede92098820d0f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "85d6fcba9ce1ac53db7f92ef4ba3d4de5bda3fbc", "commitAfterChange": "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public FileText(FileText fileText)", "signatureAfterChange": "     public FileText(FileText fileText)", "diff": ["-        this.file = fileText.file;", "-        this.charset = fileText.charset;", "-        this.fullText = fileText.fullText;", "-        this.lines = fileText.lines.clone();", "-        this.lineBreaks = ArrayUtils.clone(fileText.lineBreaks);", "+        file = fileText.file;", "+        charset = fileText.charset;", "+        fullText = fileText.fullText;", "+        lines = fileText.lines.clone();", "+        lineBreaks = ArrayUtils.clone(fileText.lineBreaks);"]}]}