{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f88398bfae7c2c0b07a3fb2bfeeca715", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b23b17ae0e111be71175d1cd42462ef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "216fcb79f9f5bbd05244364e926f261a90e697d1", "commitAfterChange": "8a7713b4f7890e2f6493eacc5806b5eb8cfbe767", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private boolean hasShortCircuitTag(final DetailAST aAST,             final List<JavadocTag> aTags, final Scope aScope)", "signatureAfterChange": "     private boolean hasShortCircuitTag(final DetailAST aAST,             final List<JavadocTag> aTags, final Scope aScope)", "diff": ["-        if ((aAST.getType() == TokenTypes.CTOR_DEF)", "-                || (aScope == Scope.PRIVATE)", "-                || (aAST.getType() == TokenTypes.METHOD_DEF", "-                && aAST.branchContains(TokenTypes.LITERAL_STATIC)))", "-        {", "+        if (!JavadocTagInfo.INHERIT_DOC.isValidOn(aAST)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85a80b9cd219dfd74ffce32ce10437c8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheck.java", "commitBeforeChange": "6475d9dc1b5f1a2793fd112974031ebc00a834fc", "commitAfterChange": "43e856a0df8002e9f362ed22ff991b7b8c1cf80a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            if (!Character.isWhitespace(charAfter)) {", "-                //empty FOR_ITERATOR?", "-                if (targetAST.getType() == TokenTypes.SEMI) {", "-                    final DetailAST sibling =", "-                        targetAST.getNextSibling();", "-                    if (sibling != null", "-                        && sibling.getType() == TokenTypes.FOR_ITERATOR", "-                        && sibling.getChildCount() == 0) {", "-                        return;", "-                    }", "-                }", "+            if (!Character.isWhitespace(charAfter) && !isEmptyForIterator(targetAST)) {", "+", "-                    targetAST.getColumnNo() + targetAST.getText().length(),", "-                    WS_NOT_FOLLOWED,", "-                    message);", "+                        targetAST.getColumnNo() + targetAST.getText().length(),", "+                        WS_NOT_FOLLOWED,", "+                        message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2b766231aed721ea421f1b428a4ae41", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "da2d75a1780c1691dc4aa45489f9e9674b1c652e", "commitAfterChange": "36b91a59d62c9505b835717f00f470c499cf9b30", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            case TokenTypes.LITERAL_FOR:", "-            case TokenTypes.STATIC_INIT:", "-            case TokenTypes.INSTANCE_INIT:", "-                scopeStack.push(new HashMap<String, DetailAST>());", "+                scopeStack.push(new ScopeData());", "-                    insertVariable(ast);", "+                    insertParameter(ast);", "+                        && !ast.branchContains(TokenTypes.FINAL)", "-                        && shouldCheckEnhancedForLoopVariable(ast)", "-                        && !ast.branchContains(TokenTypes.FINAL)) {", "+                        && shouldCheckEnhancedForLoopVariable(ast)) {", "-                        && ast.getParent().getFirstChild() == ast) {", "+                        && isFirstChild(ast)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecd31cd3f0c5f5123f875a522947f962", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceBeforeCheck.java", "commitBeforeChange": "3d9f726c2d5fcc152fbfbcdeaade390b36b5fba0", "commitAfterChange": "9ae0be5921780b18dd61d17c47b05de3c867838e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (before < 0 || Character.isWhitespace(line.charAt(before))) {", "-", "-            // empty FOR initializer?", "-            if (ast.getType() == TokenTypes.SEMI) {", "-                final DetailAST sibling = ast.getPreviousSibling();", "-                if (sibling != null", "-                        && sibling.getType() == TokenTypes.FOR_INIT", "-                        && sibling.getChildCount() == 0) {", "-                    return;", "-                }", "-            }", "+        if ((before < 0 || Character.isWhitespace(line.charAt(before)))", "+                && !isInEmptyForInitializer(ast)) {"]}]}