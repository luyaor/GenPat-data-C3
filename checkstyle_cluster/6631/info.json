{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f954ba86fb5c95de06f1c48739d418ce", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0249bce29ee0afe1d043caf2b4d6c51", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "fa7617c2223dae31f3ad486002f60201667e7a95", "commitAfterChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testExcludeScope() throws Exception", "signatureAfterChange": "      public void testExcludeScope() throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(JavadocMethodCheck.class);", "-        checkConfig.addAttribute(\"scope\", Scope.PRIVATE.getName());", "-        checkConfig.addAttribute(\"excludeScope\", Scope.PROTECTED.getName());", "+        mCheckConfig.addAttribute(\"scope\", Scope.PRIVATE.getName());", "+        mCheckConfig.addAttribute(\"excludeScope\", Scope.PROTECTED.getName());", "-        verify(checkConfig, getPath(\"javadoc\" + File.separator", "+        verify(mCheckConfig, getPath(\"javadoc\" + File.separator"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0871806a6036a72350d371bb7b378c7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Test     public void testExcludeScope() throws Exception", "signatureAfterChange": "      @Test     public void testExcludeScope() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"scope\", Scope.PRIVATE.getName());", "-        mCheckConfig.addAttribute(\"excludeScope\", Scope.PROTECTED.getName());", "+        checkConfig.addAttribute(\"scope\", Scope.PRIVATE.getName());", "+        checkConfig.addAttribute(\"excludeScope\", Scope.PROTECTED.getName());", "-        verify(mCheckConfig, getPath(\"javadoc\" + File.separator", "+        verify(checkConfig, getPath(\"javadoc\" + File.separator"]}]}