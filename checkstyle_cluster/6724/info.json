{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "999566bb689f53943c3dd251b9bc13aa", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f0dcfe9a67f4cceb77a0d57f07b69d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "6a30bbf32961d8bc124754b78abbfe2b32d3158f", "commitAfterChange": "5ace8fc09d4e301959a420f0f36de73c84f7a820", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public void testEmptyConfiguration()         throws Exception", "signatureAfterChange": "          public void testEmptyConfiguration()         throws Exception", "diff": ["-        Configuration config =", "-            loadConfiguration(\"empty_configuration.xml\");", "-                    ", "-        GlobalProperties globalProps =", "-            new GlobalProperties(new Properties(), System.out);", "-        assertEquals(\"properties\", globalProps.getProperties(),", "-            config.getProperties());", "-                ", "-        CheckConfiguration[] checkConfigs = config.getCheckConfigurations();", "-        assertEquals(\"checkConfigs.length\", 0, checkConfigs.length);", "+//        Configuration config =", "+//            loadConfiguration(\"empty_configuration.xml\");", "+//                    ", "+//        GlobalProperties globalProps =", "+//            new GlobalProperties(new Properties(), System.out);", "+//        assertEquals(\"properties\", globalProps.getProperties(),", "+//            config.getProperties());", "+//                ", "+//        CheckConfiguration[] checkConfigs = config.getCheckConfigurations();", "+//        assertEquals(\"checkConfigs.length\", 0, checkConfigs.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a91c024c00baaf020fb0db4fc00422b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "6a30bbf32961d8bc124754b78abbfe2b32d3158f", "commitAfterChange": "5ace8fc09d4e301959a420f0f36de73c84f7a820", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          public void testCheck()         throws Exception", "signatureAfterChange": "          public void testCheck()         throws Exception", "diff": ["-        Configuration config =", "-            loadConfiguration(\"avoidstarimport_configuration.xml\");", "-                    ", "-        GlobalProperties globalProps =", "-            new GlobalProperties(new Properties(), System.out);", "-        assertEquals(\"properties\", globalProps.getProperties(),", "-            config.getProperties());", "-                ", "-        CheckConfiguration[] checkConfigs = config.getCheckConfigurations();", "-        assertEquals(\"checkConfigs.length\", 1, checkConfigs.length);", "-        ", "-        assertTrue(\"checkConfigs[0]\",", "-            (checkConfigs[0].createInstance(this.getClass().getClassLoader()))", "-                instanceof AvoidStarImport);", "+//        Configuration config =", "+//            loadConfiguration(\"avoidstarimport_configuration.xml\");", "+//                    ", "+//        GlobalProperties globalProps =", "+//            new GlobalProperties(new Properties(), System.out);", "+//        assertEquals(\"properties\", globalProps.getProperties(),", "+//            config.getProperties());", "+//                ", "+//        CheckConfiguration[] checkConfigs = config.getCheckConfigurations();", "+//        assertEquals(\"checkConfigs.length\", 1, checkConfigs.length);", "+//        ", "+//        assertTrue(\"checkConfigs[0]\",", "+//            (checkConfigs[0].createInstance(this.getClass().getClassLoader()))", "+//                instanceof AvoidStarImport);"]}]}