{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8e59b43574c1b44bab31a15b2625323c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "077569f6df72b46eba3002bca9cb9cd5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void processIDENT(DetailAST aAST)", "signatureAfterChange": "     private void processIDENT(DetailAST ast)", "diff": ["-    private void processIDENT(DetailAST aAST)", "+    private void processIDENT(DetailAST ast)", "-        final int parentType = aAST.getParent().getType();", "+        final int parentType = ast.getParent().getType();", "-            if (mCheckMethods && isClassMethod(aAST.getText())) {", "-                log(aAST, \"require.this.method\", aAST.getText());", "+            if (checkMethods && isClassMethod(ast.getText())) {", "+                log(ast, \"require.this.method\", ast.getText());", "-        if (!mCheckFields) {", "+        if (!checkFields) {", "-        if (ScopeUtils.getSurroundingScope(aAST) == null) {", "+        if (ScopeUtils.getSurroundingScope(ast) == null) {", "-            && (aAST.getPreviousSibling() != null))", "+            && (ast.getPreviousSibling() != null))", "-        final String name = aAST.getText();", "+        final String name = ast.getText();", "-            log(aAST, \"require.this.variable\", name);", "+            log(ast, \"require.this.variable\", name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e84f8a09e70c5d41644a4b7b70b610e8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "a6a288813e2b86dd11ed0bd3e4af9539480813ff", "commitAfterChange": "95871dcc266d181b4c960a2ff88daa3e713ef656", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void processIDENT(DetailAST aAST)", "signatureAfterChange": "     private void processIDENT(DetailAST aAST)", "diff": ["+        // let's check method calls", "-            log(aAST, \"require.this.method\", aAST.getText());", "+            if (mCheckMethods) {", "+                log(aAST, \"require.this.method\", aAST.getText());", "+            }", "+            return;", "+        }", "+", "+        // let's check fields", "+        if (!mCheckFields) {", "+            // we shouldn't check fields", "-        final LexicalFrame declared = this.mFrames.findFrame(aAST.getText());", "+        final String name = aAST.getText();", "+        final LexicalFrame declared = this.mFrames.findFrame(name);", "-            log(aAST, \"require.this.unfound.variable\", aAST.getText());", "+            log(aAST, \"require.this.unfound.variable\", name);", "-            log(aAST, \"require.this.variable\", aAST.getText());", "+            log(aAST, \"require.this.variable\", name);"]}]}