{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "187183f58af5180e01e6bde7a693ed36", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92b18ea63d40fdb6a2b2e75fb63602c6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private List getMethodTags(TextBlock aComment)", "signatureAfterChange": "     private List getMethodTags(TextBlock aComment)", "diff": ["-            Matcher javadocArgMatcher = MATCH_JAVADOC_ARG.matcher(lines[i]);", "-            Matcher javadocNoargMatcher = MATCH_JAVADOC_NOARG.matcher(lines[i]);", "-            Matcher noargCurlyMatcher = MATCH_JAVADOC_NOARG_CURLY", "-                    .matcher(lines[i]);", "-            Matcher argMultilineStart = MATCH_JAVADOC_ARG_MULTILINE_START", "-                    .matcher(lines[i]);", "-            Matcher noargMultilineStart = MATCH_JAVADOC_NOARG_MULTILINE_START", "-                    .matcher(lines[i]);", "+            final Matcher javadocArgMatcher =", "+                MATCH_JAVADOC_ARG.matcher(lines[i]);", "+            final Matcher javadocNoargMatcher =", "+                MATCH_JAVADOC_NOARG.matcher(lines[i]);", "+            final Matcher noargCurlyMatcher =", "+                MATCH_JAVADOC_NOARG_CURLY.matcher(lines[i]);", "+            final Matcher argMultilineStart =", "+                MATCH_JAVADOC_ARG_MULTILINE_START.matcher(lines[i]);", "+            final Matcher noargMultilineStart =", "+                MATCH_JAVADOC_NOARG_MULTILINE_START.matcher(lines[i]);", "+", "-                    Matcher multilineCont = MATCH_JAVADOC_MULTILINE_CONT", "+                    final Matcher multilineCont = MATCH_JAVADOC_MULTILINE_CONT", "-                        String lFin = multilineCont.group(1);", "+                        final String lFin = multilineCont.group(1);", "-                    Matcher multilineCont = MATCH_JAVADOC_MULTILINE_CONT", "+                    final Matcher multilineCont = MATCH_JAVADOC_MULTILINE_CONT", "-                        String lFin = multilineCont.group(1);", "+                        final String lFin = multilineCont.group(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6c248b2be6556222855bf56008e6d90", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected IndentLevel getLevelImpl()", "signatureAfterChange": "     protected IndentLevel getLevelImpl()", "diff": ["-            MethodCallHandler container = ((MethodCallHandler) getParent());", "+            final MethodCallHandler container =", "+                ((MethodCallHandler) getParent());", "-                DetailAST main = getMainAst();", "-                DetailAST dot = (DetailAST) main.getFirstChild();", "-                DetailAST target = (DetailAST) dot.getFirstChild();", "+                final DetailAST main = getMainAst();", "+                final DetailAST dot = (DetailAST) main.getFirstChild();", "+                final DetailAST target = (DetailAST) dot.getFirstChild();", "-                    DetailAST dot1 = (DetailAST) target.getFirstChild();", "-                    DetailAST target1 = (DetailAST) dot1.getFirstChild();", "+                    final DetailAST dot1 = (DetailAST) target.getFirstChild();", "+                    final DetailAST target1 = (DetailAST) dot1.getFirstChild();", "-        LineSet lines = new LineSet();", "+        final LineSet lines = new LineSet();", "-        int firstCol = lines.firstLineCol();", "-        int lineStart = getLineStart(getFirstAst(getMainAst()));", "+        final int firstCol = lines.firstLineCol();", "+        final int lineStart = getLineStart(getFirstAst(getMainAst()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d892f5fd0ad7ce3973b8adaffbcb6be8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testWrongKeyTypeInProperties() throws Exception", "signatureAfterChange": "      @Test     public void testWrongKeyTypeInProperties() throws Exception", "diff": ["-        Class<?> uniquePropertiesClass = Class", "+        final Class<?> uniquePropertiesClass = Class", "-        Constructor<?> constructor = uniquePropertiesClass.getDeclaredConstructor();", "+        final Constructor<?> constructor = uniquePropertiesClass.getDeclaredConstructor();", "-        Object uniqueProperties = constructor.newInstance();", "-        Method method = uniqueProperties.getClass().getDeclaredMethod(\"put\", Object.class,", "+        final Object uniqueProperties = constructor.newInstance();", "+        final Method method = uniqueProperties.getClass().getDeclaredMethod(\"put\", Object.class,", "-        Object result = method.invoke(uniqueProperties, 1, \"value\");", "-        Map<Object, Object> table = new HashMap<>();", "-        Object expected = table.put(1, \"value\");", "+        final Object result = method.invoke(uniqueProperties, 1, \"value\");", "+        final Map<Object, Object> table = new HashMap<>();", "+        final Object expected = table.put(1, \"value\");", "-        Object result2 = method.invoke(uniqueProperties, 1, \"value\");", "-        Object expected2 = table.put(1, \"value\");", "+        final Object result2 = method.invoke(uniqueProperties, 1, \"value\");", "+        final Object expected2 = table.put(1, \"value\");"]}]}