{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aac29e155eff0ca7b9e3e59dd4d379a7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14dee9994e7abcd66b492dd38641df86", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java", "commitBeforeChange": "c4c966c9712ae2c9ce8f2f215598477d4b59586f", "commitAfterChange": "4d8c68ec207613560251735b5de1c7be4a2658c5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void visitClassDef(DetailAST aAST)", "signatureAfterChange": "     private void visitClassDef(DetailAST aAST)", "diff": ["-        mCheckingStack.push(Boolean.valueOf(mChecking));", "+        mCheckingStack.push(mChecking ? Boolean.TRUE : Boolean.FALSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bca758e95315638a08e5de29f586cf94", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheckTest.java", "commitBeforeChange": "5f3eced2d85c10407b5ba1f38c06af05715d9bd7", "commitAfterChange": "de60ea7b86b5ea25338dfe8a300db9d179004812", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testFileWithFewTopLevelClasses() throws Exception", "signatureAfterChange": "      @Test     public void testFileWithFewTopLevelClasses() throws Exception", "diff": ["-            \"33: \" + getCheckMessage(MSG_KEY, \"InnerClone\"),", "-            \"50: \" + getCheckMessage(MSG_KEY, \"CloneWithTypeArguments\"),", "-            \"58: \" + getCheckMessage(MSG_KEY, \"CloneWithTypeArgumentsAndNoSuper\"),", "-            \"67: \" + getCheckMessage(MSG_KEY, \"MyClassWithGenericSuperMethod\"),", "-            \"84: \" + getCheckMessage(MSG_KEY, \"AnotherClass\"),", "-            \"97: \" + getCheckMessage(MSG_KEY, \"NativeTest\"),", "+            \"29: \" + getCheckMessage(MSG_KEY, \"InnerClone\"),", "+            \"33: \" + getCheckMessage(MSG_KEY, \"CloneWithTypeArguments\"),", "+            \"37: \" + getCheckMessage(MSG_KEY, \"CloneWithTypeArgumentsAndNoSuper\"),", "+            \"41: \" + getCheckMessage(MSG_KEY, \"MyClassWithGenericSuperMethod\"),", "+            \"45: \" + getCheckMessage(MSG_KEY, \"AnotherClass\"),", "+            \"48: \" + getCheckMessage(MSG_KEY, \"NativeTest\"),", "-        verify(checkConfig, getPath(\"coding\" + File.separator + \"InputClone.java\"), expected);", "+        verify(checkConfig, getPath(\"checks\" + File.separator + \"design\"", "+                + File.separator + \"InputClone.java\"), expected);"]}]}