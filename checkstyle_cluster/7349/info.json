{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f1829ba7e2af206f0142974460b53dd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1caa09820694261c67c4281858e02e41", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     @Override     public void setHeader(String header)", "signatureAfterChange": "     @Override     public void setHeader(String header)", "diff": ["-        if (!Utils.isPatternValid(header)) {", "+        if (!CommonUtils.isPatternValid(header)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "685c87af69fc89965ff2b61d04d929ef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "a210010f0d98c85de06228ffc6c605c57df7340f", "commitAfterChange": "e2b4e687d7b8f9d6d5e1346d874b90e4567aff81", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     private void checkComment(DetailAST ast, TextBlock comment)", "signatureAfterChange": "     private void checkComment(DetailAST ast, TextBlock comment)", "diff": ["-            if (CheckUtils.isVoidMethod(ast)) {", "+            if (CheckUtils.isNonVoidMethod(ast)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6eb446267471d0860753cc81782e66c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "a8ad56697b9348de2a242654d5c56b127d78e876", "commitAfterChange": "a21164df1fbaff36ba020968b3a6128ab8476756", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     private void checkComment(DetailAST ast, TextBlock comment)", "signatureAfterChange": "     private void checkComment(DetailAST ast, TextBlock comment)", "diff": ["-            if (isFunction(ast)) {", "+            if (CheckUtils.isVoidMethod(ast)) {"]}]}