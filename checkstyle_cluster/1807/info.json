{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57199f1803a9418cb3748a89d39510ce", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07347b09c24fae38c5e14b7403d11b48", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-    public void leaveToken(DetailAST aAST)", "+    public void leaveToken(DetailAST ast)", "-        if ((TokenTypes.CLASS_DEF == aAST.getType())", "-            || (TokenTypes.INTERFACE_DEF == aAST.getType())", "-            || (TokenTypes.ENUM_CONSTANT_DEF == aAST.getType())", "-            || (TokenTypes.ENUM_DEF == aAST.getType()))", "+        if ((TokenTypes.CLASS_DEF == ast.getType())", "+            || (TokenTypes.INTERFACE_DEF == ast.getType())", "+            || (TokenTypes.ENUM_CONSTANT_DEF == ast.getType())", "+            || (TokenTypes.ENUM_DEF == ast.getType()))", "-            final MethodCounter counter = mCounters.pop();", "-            checkCounters(counter, aAST);", "+            final MethodCounter counter = counters.pop();", "+            checkCounters(counter, ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ebbacc8f32363e7eb6d50d35412d25e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "         public Point(int aLineNo, int aColumnNo)", "signatureAfterChange": "         public Point(int lineNo, int columnNo)", "diff": ["-        public Point(int aLineNo, int aColumnNo)", "+        public Point(int lineNo, int columnNo)", "-            mLine = aLineNo;", "-            mColumn = aColumnNo;", "+            line = lineNo;", "+            column = columnNo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e79bd2a8936f12649e5c5dc1f318cc53", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final DetailAST typeAST = aAST.getParent();", "+        final DetailAST typeAST = ast.getParent();", "-                (variableAST.getLineNo() > aAST.getLineNo())", "-                || (variableAST.getColumnNo() > aAST.getColumnNo());", "+                (variableAST.getLineNo() > ast.getLineNo())", "+                || (variableAST.getColumnNo() > ast.getColumnNo());", "-            if (isJavaStyle != mJavaStyle) {", "-                log(aAST.getLineNo(), aAST.getColumnNo(), \"array.type.style\");", "+            if (isJavaStyle != javaStyle) {", "+                log(ast.getLineNo(), ast.getColumnNo(), \"array.type.style\");"]}]}