{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "08bb7632b71615ab6834c12a896982b3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8db5a06b66155285c29ed2690e4bc328", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/IntMatchFilterTest.java", "commitBeforeChange": "a9bfdceec2a2d86a622c03fbd4052f007b5e70cc", "commitAfterChange": "1e7d8eef0641edcf97316618c8fab40bd248133d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDecide()", "signatureAfterChange": "     public void testDecide()", "diff": ["-        assertEquals(\"less than\", Filter.NEUTRAL, filter.decide(new Integer(-1)));", "-        assertEquals(\"equal\", Filter.ACCEPT, filter.decide(new Integer(0)));", "-        assertEquals(\"greater than\", Filter.NEUTRAL, filter.decide(new Integer(1)));", "+        assertFalse(\"less than\", filter.accept(new Integer(-1)));", "+        assertTrue(\"equal\", filter.accept(new Integer(0)));", "+        assertFalse(\"greater than\", filter.accept(new Integer(1)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f567dd1902969d00b11f9ebd49850cae", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/IntRangeFilterTest.java", "commitBeforeChange": "a9bfdceec2a2d86a622c03fbd4052f007b5e70cc", "commitAfterChange": "1e7d8eef0641edcf97316618c8fab40bd248133d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public void testDecideSingle()", "signatureAfterChange": "          public void testDecideSingle()", "diff": ["-        assertEquals(\"less than\", Filter.NEUTRAL, filter.decide(new Integer(-1)));", "-        assertEquals(\"in range\", Filter.ACCEPT, filter.decide(new Integer(0)));", "-        assertEquals(\"greater than\", Filter.NEUTRAL, filter.decide(new Integer(1)));", "+        assertFalse(\"less than\", filter.accept(new Integer(-1)));", "+        assertTrue(\"in range\", filter.accept(new Integer(0)));", "+        assertFalse(\"greater than\", filter.accept(new Integer(1)));"]}]}