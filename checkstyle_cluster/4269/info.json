{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d43f9cbf98a4783d5bba495ec6d3dbe0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47f21e6ca4c3ab97991542398d65fb69", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "69976b5365b7c33a602dd814337e2db1136288fc", "commitAfterChange": "ac8eadea0b1fb183d56cd809a34a7b9047b47d47", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 37, "signatureBeforeChange": "      @Test     public void testInvalidForWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testInvalidForWithChecker()         throws Exception", "diff": ["-        final Checker c = createChecker(checkConfig);", "+", "+        checkConfig.addAttribute(\"arrayInitIndent\", \"4\");", "+        checkConfig.addAttribute(\"basicOffset\", \"4\");", "+        checkConfig.addAttribute(\"braceAdjustment\", \"0\");", "+        checkConfig.addAttribute(\"caseIndent\", \"4\");", "+        checkConfig.addAttribute(\"forceStrictCondition\", \"false\");", "+        checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\");", "+        checkConfig.addAttribute(\"tabWidth\", \"4\");", "+        checkConfig.addAttribute(\"throwsIndent\", \"4\");", "-            \"22: \" + getCheckMessage(MSG_ERROR, \"for\", 6, 8),", "-            \"23: \" + getCheckMessage(MSG_ERROR, \"for rcurly\", 10, 8),", "-            \"25: \" + getCheckMessage(MSG_ERROR, \"for\", 9, 8),", "-            \"26: \" + getCheckMessage(MSG_ERROR, \"for lcurly\", 6, 8),", "-            \"27: \" + getCheckMessage(MSG_ERROR, \"for rcurly\", 6, 8),", "-            \"31: \" + getCheckMessage(MSG_CHILD_ERROR, \"for\", 10, 12),", "-            \"31: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 10, 12),", "-            \"32: \" + getCheckMessage(MSG_ERROR, \"for rcurly\", 10, 8),", "-            \"35: \" + getCheckMessage(MSG_ERROR, \"for lcurly\", 10, 8),", "-            \"36: \" + getCheckMessage(MSG_CHILD_ERROR, \"for\", 10, 12),", "-            \"36: \" + getCheckMessage(MSG_ERROR, \"member def type\", 10, 12),", "-            \"44: \" + getCheckMessage(MSG_CHILD_ERROR, \"for\", 10, 12),", "-            \"44: \" + getCheckMessage(MSG_ERROR, \"i\", 10, 12),", "-            \"50: \" + getCheckMessage(MSG_ERROR, \"for\", 7, 8),", "-            \"51: \" + getCheckMessage(MSG_CHILD_ERROR, \"for\", 10, 12),", "-            \"51: \" + getCheckMessage(MSG_ERROR, \"int\", 10, 11),", "-            \"51: \" + getCheckMessage(MSG_ERROR, \"member def type\", 10, 12),", "-            \"60: \" + getCheckMessage(MSG_CHILD_ERROR, \"for\", 7, 12),", "-            \"60: \" + getCheckMessage(MSG_ERROR, \"i\", 7, 12),", "-            \"65: \" + getCheckMessage(MSG_ERROR, \"for\", 6, 8),", "-            \"66: \" + getCheckMessage(MSG_CHILD_ERROR, \"for\", 10, 12),", "-            \"67: \" + getCheckMessage(MSG_CHILD_ERROR, \"for\", 14, 16),", "-            \"68: \" + getCheckMessage(MSG_CHILD_ERROR, \"for\", 10, 12),", "-            \"73: \" + getCheckMessage(MSG_ERROR, \"for rcurly\", 39, 8),", "-            \"77: \" + getCheckMessage(MSG_ERROR, \"for rparen\", 12, 8),", "+            \"26: \" + getCheckMessage(MSG_ERROR, \"for\", 6, 8),", "+            \"27: \" + getCheckMessage(MSG_ERROR, \"for rcurly\", 10, 8),", "+            \"29: \" + getCheckMessage(MSG_ERROR, \"for\", 9, 8),", "+            \"30: \" + getCheckMessage(MSG_ERROR, \"for lcurly\", 6, 8),", "+            \"31: \" + getCheckMessage(MSG_ERROR, \"for rcurly\", 6, 8),", "+            \"35: \" + getCheckMessage(MSG_CHILD_ERROR, \"for\", 10, 12),", "+            \"35: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 10, 12),", "+", "+            \"36: \" + getCheckMessage(MSG_ERROR, \"for rcurly\", 10, 8),", "+            \"39: \" + getCheckMessage(MSG_ERROR, \"for lcurly\", 10, 8),", "+            \"40: \" + getCheckMessage(MSG_CHILD_ERROR, \"for\", 10, 12),", "+            \"40: \" + getCheckMessage(MSG_ERROR, \"member def type\", 10, 12),", "+            \"48: \" + getCheckMessage(MSG_CHILD_ERROR, \"for\", 10, 12),", "+            \"48: \" + getCheckMessage(MSG_ERROR, \"i\", 10, 12),", "+            \"54: \" + getCheckMessage(MSG_ERROR, \"for\", 7, 8),", "+", "+            \"55: \" + getCheckMessage(MSG_CHILD_ERROR, \"for\", 10, 12),", "+            \"55: \" + getCheckMessage(MSG_ERROR, \"int\", 10, 11),", "+            \"55: \" + getCheckMessage(MSG_ERROR, \"member def type\", 10, 12),", "+            \"64: \" + getCheckMessage(MSG_CHILD_ERROR, \"for\", 7, 12),", "+            \"64: \" + getCheckMessage(MSG_ERROR, \"i\", 7, 12),", "+", "+            \"69: \" + getCheckMessage(MSG_ERROR, \"for\", 6, 8),", "+            \"70: \" + getCheckMessage(MSG_CHILD_ERROR, \"for\", 10, 12),", "+            \"71: \" + getCheckMessage(MSG_CHILD_ERROR, \"for\", 14, 16),", "+            \"72: \" + getCheckMessage(MSG_CHILD_ERROR, \"for\", 10, 12),", "+            \"77: \" + getCheckMessage(MSG_ERROR, \"for rcurly\", 39, 8),", "+            \"81: \" + getCheckMessage(MSG_ERROR, \"for rparen\", 12, 8),", "-        verify(c, fname, expected);", "+        verifyWarns(checkConfig, fname, expected, 6);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d03c2c912c8b73ed192fb286366168ac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "69976b5365b7c33a602dd814337e2db1136288fc", "commitAfterChange": "ac8eadea0b1fb183d56cd809a34a7b9047b47d47", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 36, "signatureBeforeChange": "      @Test     public void testInvalidWhileWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testInvalidWhileWithChecker()         throws Exception", "diff": ["-        final Checker c = createChecker(checkConfig);", "+", "+        checkConfig.addAttribute(\"arrayInitIndent\", \"4\");", "+        checkConfig.addAttribute(\"basicOffset\", \"4\");", "+        checkConfig.addAttribute(\"braceAdjustment\", \"0\");", "+        checkConfig.addAttribute(\"caseIndent\", \"4\");", "+        checkConfig.addAttribute(\"forceStrictCondition\", \"false\");", "+        checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\");", "+        checkConfig.addAttribute(\"tabWidth\", \"4\");", "+        checkConfig.addAttribute(\"throwsIndent\", \"4\");", "-            \"21: \" + getCheckMessage(MSG_ERROR, \"while\", 9, 8),", "-            \"22: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 7, 8),", "-            \"24: \" + getCheckMessage(MSG_ERROR, \"while\", 7, 8),", "-            \"25: \" + getCheckMessage(MSG_ERROR, \"while lcurly\", 9, 8),", "-            \"26: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 9, 8),", "-            \"28: \" + getCheckMessage(MSG_ERROR, \"while\", 9, 8),", "-            \"29: \" + getCheckMessage(MSG_ERROR, \"while lcurly\", 6, 8),", "-            \"30: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 14, 12),", "-            \"31: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 6, 8),", "-            \"33: \" + getCheckMessage(MSG_ERROR, \"while\", 10, 8),", "-            \"35: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 10, 8),", "+            \"25: \" + getCheckMessage(MSG_ERROR, \"while\", 9, 8),", "+            \"26: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 7, 8),", "+            \"28: \" + getCheckMessage(MSG_ERROR, \"while\", 7, 8),", "+            \"29: \" + getCheckMessage(MSG_ERROR, \"while lcurly\", 9, 8),", "+            \"30: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 9, 8),", "+", "+            \"32: \" + getCheckMessage(MSG_ERROR, \"while\", 9, 8),", "+            \"33: \" + getCheckMessage(MSG_ERROR, \"while lcurly\", 6, 8),", "+            \"34: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 14, 12),", "+            \"35: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 6, 8),", "+", "-            \"40: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 10, 8),", "-            \"42: \" + getCheckMessage(MSG_ERROR, \"while\", 6, 8),", "-            \"43: \" + getCheckMessage(MSG_ERROR, \"while lcurly\", 10, 8),", "-            \"46: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 6, 8),", "-            \"49: \" + getCheckMessage(MSG_ERROR, \"if\", 14, 12),", "-            \"50: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 18, 16),", "-            \"51: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 14, 12),", "-            \"52: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 14, 12),", "-            \"53: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 10, 8),", "-            \"56: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 10, 12),", "-            \"62: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 10, 12),", "-            \"67: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 10, 12),", "-            \"74: \" + getCheckMessage(MSG_ERROR, \"while rparen\", 5, 8),", "-            \"81: \" + getCheckMessage(MSG_ERROR, \"while rparen\", 10, 8),", "-            \"88: \" + getCheckMessage(MSG_ERROR, \"while rparen\", 10, 8),", "-            \"95: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 8, 12),", "+            \"39: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 10, 8),", "+            \"41: \" + getCheckMessage(MSG_ERROR, \"while\", 10, 8),", "+            \"44: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 10, 8),", "+", "+            \"46: \" + getCheckMessage(MSG_ERROR, \"while\", 6, 8),", "+            \"47: \" + getCheckMessage(MSG_ERROR, \"while lcurly\", 10, 8),", "+            \"50: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 6, 8),", "+            \"53: \" + getCheckMessage(MSG_ERROR, \"if\", 14, 12),", "+            \"54: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 18, 16),", "+            \"55: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 14, 12),", "+            \"56: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 14, 12),", "+            \"57: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 10, 8),", "+", "+            \"60: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 10, 12),", "+            \"66: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 10, 12),", "+            \"71: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 10, 12),", "+            \"78: \" + getCheckMessage(MSG_ERROR, \"while rparen\", 5, 8),", "+            \"85: \" + getCheckMessage(MSG_ERROR, \"while rparen\", 10, 8),", "+            \"92: \" + getCheckMessage(MSG_ERROR, \"while rparen\", 10, 8),", "+            \"99: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 8, 12),", "-        verify(c, fname, expected);", "+        verifyWarns(checkConfig, fname, expected);"]}]}