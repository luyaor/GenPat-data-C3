{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d30e76d08391f0df7f71d7374ee2cddb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16786d650c357833627aa7c87879484b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java", "commitBeforeChange": "fe9057366308642868c25d427c3ee94411b37170", "commitAfterChange": "979b0b5c20f79d7ac2281ae539859a60dad48c6e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private String getTagId(String[] aText, Point aTagStart)", "signatureAfterChange": "     private String getTagId(String[] aText, Point aTagStart)", "diff": ["-        while ((column < text.length())", "-               && (((text.charAt(column) >= 'A')", "-                    && (text.charAt(column) <= 'Z'))", "-                   || ((text.charAt(column) >= 'a')", "-                       && (text.charAt(column) <= 'z'))", "-                   || ((text.charAt(column) >= '0')", "-                       && (text.charAt(column) <= '9'))))", "+        //Character.isJavaIdentifier... may not be a valid HTML", "+        //identifier but is valid for generics", "+        while (column < text.length()", "+            && (Character.isJavaIdentifierStart(text.charAt(column))", "+                || Character.isJavaIdentifierPart(text.charAt(column))))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8e847f8cba2090db10dad64a60e4fab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java", "commitBeforeChange": "fe9057366308642868c25d427c3ee94411b37170", "commitAfterChange": "979b0b5c20f79d7ac2281ae539859a60dad48c6e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private boolean isTag(String[] aText, Point aPos)", "signatureAfterChange": "     private boolean isTag(String[] aText, Point aPos)", "diff": ["-        return (((column < text.length())", "-                && (((text.charAt(column) >= 'A')", "-                     && (text.charAt(column) <= 'Z'))", "-                    || ((text.charAt(column) >= 'a')", "-                        && (text.charAt(column) <= 'z'))", "-                    || (text.charAt(column) == '/')))", "+        //Character.isJavaIdentifier... may not be a valid HTML", "+        //identifier but is valid for generics", "+        return ((column < text.length())", "+                && (Character.isJavaIdentifierStart(text.charAt(column))", "+                    || Character.isJavaIdentifierPart(text.charAt(column))", "+                    || text.charAt(column) == '/')"]}]}