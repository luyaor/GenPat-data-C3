{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b909e12a0f9ff6d0eb6448db3d74e9dd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02ce4b36326afe9ecc3f83e4c807c4dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     private boolean isInThrows(List<ExceptionInfo> throwsList,             AbstractClassInfo documentedCI, Set<String> foundThrows)", "signatureAfterChange": "     private boolean isInThrows(List<ExceptionInfo> throwsList,             AbstractClassInfo documentedClassInfo, Set<String> foundThrows)", "diff": ["-            AbstractClassInfo documentedCI, Set<String> foundThrows) {", "+            AbstractClassInfo documentedClassInfo, Set<String> foundThrows) {", "-                    documentedCI.getName().getText())) {", "+                    documentedClassInfo.getName().getText())) {", "-            if (documentedCI.getClazz() == exceptionInfo.getClazz()) {", "+            if (documentedClassInfo.getClazz() == exceptionInfo.getClazz()) {", "-                found = isSubclass(documentedCI.getClazz(), exceptionInfo.getClazz());", "+                found = isSubclass(documentedClassInfo.getClazz(), exceptionInfo.getClazz());", "-            foundThrows.add(documentedCI.getName().getText());", "+            foundThrows.add(documentedClassInfo.getName().getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10b8b0d8c0e614071d942360973241e5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     private boolean isInThrows(List<ExceptionInfo> throwsList,             AbstractClassInfo documentedCI, Set<String> foundThrows)", "signatureAfterChange": "     private boolean isInThrows(List<ExceptionInfo> throwsList,             AbstractClassInfo documentedCI, Set<String> foundThrows)", "diff": ["-            final ExceptionInfo ei = throwIt.next();", "+            final ExceptionInfo exceptionInfo = throwIt.next();", "-            if (ei.getName().getText().equals(", "+            if (exceptionInfo.getName().getText().equals(", "-                foundException = ei;", "+                foundException = exceptionInfo;", "-            final ExceptionInfo ei = exceptionInfoIt.next();", "+            final ExceptionInfo exceptionInfo = exceptionInfoIt.next();", "-            if (documentedCI.getClazz() == ei.getClazz()) {", "+            if (documentedCI.getClazz() == exceptionInfo.getClazz()) {", "-                foundException = ei;", "+                foundException = exceptionInfo;", "-                found = isSubclass(documentedCI.getClazz(), ei.getClazz());", "+                found = isSubclass(documentedCI.getClazz(), exceptionInfo.getClazz());"]}]}