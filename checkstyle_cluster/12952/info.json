{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff95f0c816d5c4d5c8a51e4e4f7bde9f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d19ce2957f58aa28a840199b70c3f26", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "a9bfdceec2a2d86a622c03fbd4052f007b5e70cc", "commitAfterChange": "1e7d8eef0641edcf97316618c8fab40bd248133d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public int decide(Object aObject)", "signatureAfterChange": "     public boolean accept(Object aObject)", "diff": ["-    public int decide(Object aObject)", "+    public boolean accept(Object aObject)", "-            return Filter.NEUTRAL;", "+            return true;", "-            return Filter.NEUTRAL;", "+            return true;", "-        // deny if no line/column matching", "+        // reject if no line/column matching", "-            return Filter.DENY;", "+            return false;", "-        // deny line if it is accepted by the line CSV filter", "+        // reject line if it is accepted by the line CSV filter", "-            if (mLineFilter.decide(line) == Filter.ACCEPT) {", "-                return Filter.DENY;", "+            if (mLineFilter.accept(line)) {", "+                return false;", "-        // deny if column accepted by the column CSV filter", "+        // reject if column accepted by the column CSV filter", "-            if (mColumnFilter.decide(column) == Filter.ACCEPT) {", "-                return Filter.DENY;", "+            if (mColumnFilter.accept(column)) {", "+                return false;", "-        return Filter.NEUTRAL;", "+        return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4049136065e0f9d71fa9e2e996d68522", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SeverityMatchFilter.java", "commitBeforeChange": "a9bfdceec2a2d86a622c03fbd4052f007b5e70cc", "commitAfterChange": "1e7d8eef0641edcf97316618c8fab40bd248133d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int decide(Object aObject)", "signatureAfterChange": "     public boolean accept(Object aObject)", "diff": ["-    public int decide(Object aObject)", "+    public boolean accept(Object aObject)", "-            return Filter.NEUTRAL;", "+            return false;", "-        if (mSeverityLevel == null) {", "-            return Filter.NEUTRAL;", "-        }", "-", "-        boolean matchOccurred = false;", "-        if (mSeverityLevel.equals(event.getSeverityLevel())) {", "-            matchOccurred = true;", "-        }", "-", "-        if (matchOccurred) {", "-            if (mAcceptOnMatch) {", "-                return Filter.ACCEPT;", "-            }", "-            else {", "-                return Filter.DENY;", "-            }", "-        }", "-        else {", "-            return Filter.NEUTRAL;", "-        }", "+        return mSeverityLevel.equals(event.getSeverityLevel());"]}]}