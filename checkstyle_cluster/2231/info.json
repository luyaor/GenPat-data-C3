{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7d3a0fcaa8136e17111afb2b35e6f25", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9621bcad89fdf632885758fd0bd88c3f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/VerifierImpl.java", "commitBeforeChange": "c8756ab48159c2c8d1e397e73d9175595fe7d742", "commitAfterChange": "0b7bf277067a87a43a11ce53f730cbfcbb95549e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void verifyWSAfter(int aLineNo, int aColNo, String aConstruct)", "signatureAfterChange": "     public void verifyWSAfter(int aLineNo, int aColNo, MyToken aConstruct)", "diff": ["-    public void verifyWSAfter(int aLineNo, int aColNo, String aConstruct)", "+    public void verifyWSAfter(int aLineNo, int aColNo, MyToken aConstruct)", "-        if (mConfig.isIgnoreWhitespace()) {", "+        if (mConfig.isIgnoreWhitespace() ||", "+            ((MyToken.CAST == aConstruct) && mConfig.isIgnoreCastWhitespace()))", "+        {", "-            log(aLineNo, aConstruct + \" needs to be followed by whitespace.\");", "+            log(aLineNo,", "+                aConstruct.getText() + \" needs to be followed by whitespace.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4fc159794c39ac22b5b2500969d608c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/MethodSignature.java", "commitBeforeChange": "ea01eaaa85409442aeece8763f0388066bd07bf5", "commitAfterChange": "d4f1261a61913b28d746aeb929bd23f372372a4c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "     int getLineNo()", "signatureAfterChange": "     int getLineNo()", "diff": ["-    /** @return the line number **/", "-    int getLineNo()", "-    {", "-        return mLineNo;", "-    }", "+    /** @return the first line of the method signature **/", "+    int getLineNo()", "+    {", "+        return (mModSet.size() > 0)", "+            ? mModSet.getFirstLineNo()", "+            : mName.getLineNo();", "+    }"]}]}