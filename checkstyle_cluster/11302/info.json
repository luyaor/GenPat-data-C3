{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1351b5935e1ac5c9e04e457543bed3ed", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7efbc3af68c94e5de20590e08b9088f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/ParseTreeBuilder.java", "commitBeforeChange": "65865d1adcf6e1579b7323d56117186db1ad96eb", "commitAfterChange": "b4c351b03d4a9d7dffc9a3502d17a41fb3e440b4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static ParseTree treeLeadingAsterisks()", "signatureAfterChange": "      public static ParseTree treeLeadingAsterisks()", "diff": ["-    }", "-    public static ParseTree treeLeadingAsterisks() {", "-        JavadocContext ESHfJ = new JavadocContext(null, 0);", "-        CommonToken avwXT = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        ESHfJ.addChild(avwXT);", "-        CommonToken RlzJr = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \"  *\");", "-        ESHfJ.addChild(RlzJr);", "-        TextContext mDTfc = new TextContext(ESHfJ, 0);", "-        CommonToken TCVnz = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        mDTfc.addChild(TCVnz);", "-        CommonToken Eecil = new CommonToken(JavadocTokenTypes.CHAR, \"L\");", "-        mDTfc.addChild(Eecil);", "-        CommonToken jiYGz = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        mDTfc.addChild(jiYGz);", "-        CommonToken dJXCd = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "-        mDTfc.addChild(dJXCd);", "-        CommonToken hcsGh = new CommonToken(JavadocTokenTypes.CHAR, \"d\");", "-        mDTfc.addChild(hcsGh);", "-        CommonToken HDIpw = new CommonToken(JavadocTokenTypes.CHAR, \"i\");", "-        mDTfc.addChild(HDIpw);", "-        CommonToken rIybq = new CommonToken(JavadocTokenTypes.CHAR, \"n\");", "-        mDTfc.addChild(rIybq);", "-        CommonToken vxdRh = new CommonToken(JavadocTokenTypes.CHAR, \"g\");", "-        mDTfc.addChild(vxdRh);", "-        CommonToken WMJXY = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        mDTfc.addChild(WMJXY);", "-        CommonToken zqREY = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "-        mDTfc.addChild(zqREY);", "-        CommonToken PdPMn = new CommonToken(JavadocTokenTypes.CHAR, \"s\");", "-        mDTfc.addChild(PdPMn);", "-        CommonToken nHhZd = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "-        mDTfc.addChild(nHhZd);", "-        CommonToken YACET = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        mDTfc.addChild(YACET);", "-        CommonToken GPryT = new CommonToken(JavadocTokenTypes.CHAR, \"r\");", "-        mDTfc.addChild(GPryT);", "-        CommonToken RMGmz = new CommonToken(JavadocTokenTypes.CHAR, \"i\");", "-        mDTfc.addChild(RMGmz);", "-        CommonToken pktyX = new CommonToken(JavadocTokenTypes.CHAR, \"s\");", "-        mDTfc.addChild(pktyX);", "-        CommonToken ihpJN = new CommonToken(JavadocTokenTypes.CHAR, \"k\");", "-        mDTfc.addChild(ihpJN);", "-        ESHfJ.addChild(mDTfc);", "-        CommonToken nuxOz = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        ESHfJ.addChild(nuxOz);", "-        CommonToken jqMyc = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \"    *\");", "-        ESHfJ.addChild(jqMyc);", "-        TextContext wkaXz = new TextContext(ESHfJ, 0);", "-        CommonToken qwSBF = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        wkaXz.addChild(qwSBF);", "-        CommonToken Nkbgp = new CommonToken(JavadocTokenTypes.CHAR, \"A\");", "-        wkaXz.addChild(Nkbgp);", "-        CommonToken rDueW = new CommonToken(JavadocTokenTypes.CHAR, \"n\");", "-        wkaXz.addChild(rDueW);", "-        CommonToken tojhr = new CommonToken(JavadocTokenTypes.CHAR, \"o\");", "-        wkaXz.addChild(tojhr);", "-        CommonToken kuktV = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "-        wkaXz.addChild(kuktV);", "-        CommonToken SvKGl = new CommonToken(JavadocTokenTypes.CHAR, \"h\");", "-        wkaXz.addChild(SvKGl);", "-        CommonToken CRGcP = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        wkaXz.addChild(CRGcP);", "-        CommonToken laMGd = new CommonToken(JavadocTokenTypes.CHAR, \"r\");", "-        wkaXz.addChild(laMGd);", "-        CommonToken QIVBU = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        wkaXz.addChild(QIVBU);", "-        CommonToken inUyg = new CommonToken(JavadocTokenTypes.CHAR, \"o\");", "-        wkaXz.addChild(inUyg);", "-        CommonToken MrCDK = new CommonToken(JavadocTokenTypes.CHAR, \"n\");", "-        wkaXz.addChild(MrCDK);", "-        CommonToken ibqGj = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        wkaXz.addChild(ibqGj);", "-        ESHfJ.addChild(wkaXz);", "-        CommonToken CvXeG = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "-        ESHfJ.addChild(CvXeG);", "-        return ESHfJ;", "-    }", "+    public static ParseTree treeLeadingAsterisks()", "+    {", "+        JavadocContext javadocContext0 = new JavadocContext(null, 0);", "+        CommonToken newline0 = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "+        javadocContext0.addChild(newline0);", "+        CommonToken leadingAsterisk0 = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \"  *\");", "+        javadocContext0.addChild(leadingAsterisk0);", "+        TextContext textContext0 = new TextContext(javadocContext0, 0);", "+        CommonToken ws0 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        textContext0.addChild(ws0);", "+        CommonToken char0 = new CommonToken(JavadocTokenTypes.CHAR, \"L\");", "+        textContext0.addChild(char0);", "+        CommonToken char1 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext0.addChild(char1);", "+        CommonToken char2 = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "+        textContext0.addChild(char2);", "+        CommonToken char3 = new CommonToken(JavadocTokenTypes.CHAR, \"d\");", "+        textContext0.addChild(char3);", "+        CommonToken char4 = new CommonToken(JavadocTokenTypes.CHAR, \"i\");", "+        textContext0.addChild(char4);", "+        CommonToken char5 = new CommonToken(JavadocTokenTypes.CHAR, \"n\");", "+        textContext0.addChild(char5);", "+        CommonToken char6 = new CommonToken(JavadocTokenTypes.CHAR, \"g\");", "+        textContext0.addChild(char6);", "+        CommonToken ws1 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        textContext0.addChild(ws1);", "+        CommonToken char7 = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "+        textContext0.addChild(char7);", "+        CommonToken char8 = new CommonToken(JavadocTokenTypes.CHAR, \"s\");", "+        textContext0.addChild(char8);", "+        CommonToken char9 = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "+        textContext0.addChild(char9);", "+        CommonToken char10 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext0.addChild(char10);", "+        CommonToken char11 = new CommonToken(JavadocTokenTypes.CHAR, \"r\");", "+        textContext0.addChild(char11);", "+        CommonToken char12 = new CommonToken(JavadocTokenTypes.CHAR, \"i\");", "+        textContext0.addChild(char12);", "+        CommonToken char13 = new CommonToken(JavadocTokenTypes.CHAR, \"s\");", "+        textContext0.addChild(char13);", "+        CommonToken char14 = new CommonToken(JavadocTokenTypes.CHAR, \"k\");", "+        textContext0.addChild(char14);", "+        javadocContext0.addChild(textContext0);", "+        CommonToken newline1 = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "+        javadocContext0.addChild(newline1);", "+        CommonToken leadingAsterisk1 = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \"    *\");", "+        javadocContext0.addChild(leadingAsterisk1);", "+        TextContext textContext1 = new TextContext(javadocContext0, 0);", "+        CommonToken ws2 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        textContext1.addChild(ws2);", "+        CommonToken char15 = new CommonToken(JavadocTokenTypes.CHAR, \"A\");", "+        textContext1.addChild(char15);", "+        CommonToken char16 = new CommonToken(JavadocTokenTypes.CHAR, \"n\");", "+        textContext1.addChild(char16);", "+        CommonToken char17 = new CommonToken(JavadocTokenTypes.CHAR, \"o\");", "+        textContext1.addChild(char17);", "+        CommonToken char18 = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "+        textContext1.addChild(char18);", "+        CommonToken char19 = new CommonToken(JavadocTokenTypes.CHAR, \"h\");", "+        textContext1.addChild(char19);", "+        CommonToken char20 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext1.addChild(char20);", "+        CommonToken char21 = new CommonToken(JavadocTokenTypes.CHAR, \"r\");", "+        textContext1.addChild(char21);", "+        CommonToken ws3 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        textContext1.addChild(ws3);", "+        CommonToken char22 = new CommonToken(JavadocTokenTypes.CHAR, \"o\");", "+        textContext1.addChild(char22);", "+        CommonToken char23 = new CommonToken(JavadocTokenTypes.CHAR, \"n\");", "+        textContext1.addChild(char23);", "+        CommonToken char24 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext1.addChild(char24);", "+        javadocContext0.addChild(textContext1);", "+        CommonToken eof0 = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "+        javadocContext0.addChild(eof0);", "+        return javadocContext0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd13b7d799b649a69f7a6478678c39bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/ParseTreeBuilder.java", "commitBeforeChange": "65865d1adcf6e1579b7323d56117186db1ad96eb", "commitAfterChange": "b4c351b03d4a9d7dffc9a3502d17a41fb3e440b4", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 28, "signatureBeforeChange": "     public static ParseTree treeSince()", "signatureAfterChange": "      public static ParseTree treeSince()", "diff": ["-    }", "-    public static ParseTree treeSince() {", "-        JavadocContext KzwtL = new JavadocContext(null, 0);", "-        CommonToken KBdjc = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \"*\");", "-        KzwtL.addChild(KBdjc);", "-        CommonToken bumXm = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        KzwtL.addChild(bumXm);", "-        JavadocTagContext yxgFX = new JavadocTagContext(KzwtL, 0);", "-        CommonToken YHnJx = new CommonToken(JavadocTokenTypes.SINCE_LITERAL, \"@since\");", "-        yxgFX.addChild(YHnJx);", "-        CommonToken VnMhH = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        yxgFX.addChild(VnMhH);", "-        DescriptionContext hfUJs = new DescriptionContext(yxgFX, 0);", "-        TextContext KDFKH = new TextContext(hfUJs, 0);", "-        CommonToken HzQdJ = new CommonToken(JavadocTokenTypes.CHAR, \"1\");", "-        KDFKH.addChild(HzQdJ);", "-        CommonToken dQvjG = new CommonToken(JavadocTokenTypes.CHAR, \".\");", "-        KDFKH.addChild(dQvjG);", "-        CommonToken xEdyg = new CommonToken(JavadocTokenTypes.CHAR, \"5\");", "-        KDFKH.addChild(xEdyg);", "-        hfUJs.addChild(KDFKH);", "-        CommonToken IXuHo = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        hfUJs.addChild(IXuHo);", "-        yxgFX.addChild(hfUJs);", "-        KzwtL.addChild(yxgFX);", "-        CommonToken PkBux = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \" *\");", "-        KzwtL.addChild(PkBux);", "-        CommonToken KpMIW = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        KzwtL.addChild(KpMIW);", "-        JavadocTagContext OcuEn = new JavadocTagContext(KzwtL, 0);", "-        CommonToken SehKa = new CommonToken(JavadocTokenTypes.SINCE_LITERAL, \"@since\");", "-        OcuEn.addChild(SehKa);", "-        CommonToken JURQC = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        OcuEn.addChild(JURQC);", "-        DescriptionContext NYzVK = new DescriptionContext(OcuEn, 0);", "-        TextContext KYmTj = new TextContext(NYzVK, 0);", "-        CommonToken XeINZ = new CommonToken(JavadocTokenTypes.CHAR, \"R\");", "-        KYmTj.addChild(XeINZ);", "-        CommonToken yaphV = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        KYmTj.addChild(yaphV);", "-        CommonToken fWGhu = new CommonToken(JavadocTokenTypes.CHAR, \"l\");", "-        KYmTj.addChild(fWGhu);", "-        CommonToken kWDEz = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        KYmTj.addChild(kWDEz);", "-        CommonToken xrhZk = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "-        KYmTj.addChild(xrhZk);", "-        CommonToken rrnjf = new CommonToken(JavadocTokenTypes.CHAR, \"s\");", "-        KYmTj.addChild(rrnjf);", "-        CommonToken hMbVu = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        KYmTj.addChild(hMbVu);", "-        CommonToken WEbWM = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        KYmTj.addChild(WEbWM);", "-        CommonToken NFvZb = new CommonToken(JavadocTokenTypes.CHAR, \"3\");", "-        KYmTj.addChild(NFvZb);", "-        CommonToken rWLUe = new CommonToken(JavadocTokenTypes.CHAR, \".\");", "-        KYmTj.addChild(rWLUe);", "-        CommonToken sZzJq = new CommonToken(JavadocTokenTypes.CHAR, \"4\");", "-        KYmTj.addChild(sZzJq);", "-        CommonToken fpHMf = new CommonToken(JavadocTokenTypes.CHAR, \".\");", "-        KYmTj.addChild(fpHMf);", "-        CommonToken ukVDH = new CommonToken(JavadocTokenTypes.CHAR, \"5\");", "-        KYmTj.addChild(ukVDH);", "-        NYzVK.addChild(KYmTj);", "-        OcuEn.addChild(NYzVK);", "-        KzwtL.addChild(OcuEn);", "-        CommonToken lWOPi = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "-        KzwtL.addChild(lWOPi);", "-        return KzwtL;", "-    }", "+", "+    public static ParseTree treeSince()", "+    {", "+        JavadocContext javadocContext0 = new JavadocContext(null, 0);", "+        CommonToken leadingAsterisk0 = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \"*\");", "+        javadocContext0.addChild(leadingAsterisk0);", "+        CommonToken ws0 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocContext0.addChild(ws0);", "+        JavadocTagContext javadocTagContext0 = new JavadocTagContext(javadocContext0, 0);", "+        CommonToken sinceLiteral0 = new CommonToken(JavadocTokenTypes.SINCE_LITERAL, \"@since\");", "+        javadocTagContext0.addChild(sinceLiteral0);", "+        CommonToken ws1 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocTagContext0.addChild(ws1);", "+        DescriptionContext descriptionContext0 = new DescriptionContext(javadocTagContext0, 0);", "+        TextContext textContext0 = new TextContext(descriptionContext0, 0);", "+        CommonToken char0 = new CommonToken(JavadocTokenTypes.CHAR, \"1\");", "+        textContext0.addChild(char0);", "+        CommonToken char1 = new CommonToken(JavadocTokenTypes.CHAR, \".\");", "+        textContext0.addChild(char1);", "+        CommonToken char2 = new CommonToken(JavadocTokenTypes.CHAR, \"5\");", "+        textContext0.addChild(char2);", "+        descriptionContext0.addChild(textContext0);", "+        CommonToken newline0 = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "+        descriptionContext0.addChild(newline0);", "+        javadocTagContext0.addChild(descriptionContext0);", "+        javadocContext0.addChild(javadocTagContext0);", "+        CommonToken leadingAsterisk1 = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \" *\");", "+        javadocContext0.addChild(leadingAsterisk1);", "+        CommonToken ws2 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocContext0.addChild(ws2);", "+        JavadocTagContext javadocTagContext1 = new JavadocTagContext(javadocContext0, 0);", "+        CommonToken sinceLiteral1 = new CommonToken(JavadocTokenTypes.SINCE_LITERAL, \"@since\");", "+        javadocTagContext1.addChild(sinceLiteral1);", "+        CommonToken ws3 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocTagContext1.addChild(ws3);", "+        DescriptionContext descriptionContext1 = new DescriptionContext(javadocTagContext1, 0);", "+        TextContext textContext1 = new TextContext(descriptionContext1, 0);", "+        CommonToken char3 = new CommonToken(JavadocTokenTypes.CHAR, \"R\");", "+        textContext1.addChild(char3);", "+        CommonToken char4 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext1.addChild(char4);", "+        CommonToken char5 = new CommonToken(JavadocTokenTypes.CHAR, \"l\");", "+        textContext1.addChild(char5);", "+        CommonToken char6 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext1.addChild(char6);", "+        CommonToken char7 = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "+        textContext1.addChild(char7);", "+        CommonToken char8 = new CommonToken(JavadocTokenTypes.CHAR, \"s\");", "+        textContext1.addChild(char8);", "+        CommonToken char9 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext1.addChild(char9);", "+        CommonToken ws4 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        textContext1.addChild(ws4);", "+        CommonToken char10 = new CommonToken(JavadocTokenTypes.CHAR, \"3\");", "+        textContext1.addChild(char10);", "+        CommonToken char11 = new CommonToken(JavadocTokenTypes.CHAR, \".\");", "+        textContext1.addChild(char11);", "+        CommonToken char12 = new CommonToken(JavadocTokenTypes.CHAR, \"4\");", "+        textContext1.addChild(char12);", "+        CommonToken char13 = new CommonToken(JavadocTokenTypes.CHAR, \".\");", "+        textContext1.addChild(char13);", "+        CommonToken char14 = new CommonToken(JavadocTokenTypes.CHAR, \"5\");", "+        textContext1.addChild(char14);", "+        descriptionContext1.addChild(textContext1);", "+        javadocTagContext1.addChild(descriptionContext1);", "+        javadocContext0.addChild(javadocTagContext1);", "+        CommonToken eof0 = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "+        javadocContext0.addChild(eof0);", "+        return javadocContext0;", "+    }"]}]}