{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "63936e06d9ce00a773dd5faa2bee3cd6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f0cc2c265f0286cbb532cf8e6adbad0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java", "commitBeforeChange": "f02d45fd6d0615ca856e6cc79a37596e70e4ece9", "commitAfterChange": "7b26e83b92f03e6142af4c37f4308df275989d39", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     protected final void checkRParen(DetailAST lparen, DetailAST rparen)", "signatureAfterChange": "     protected final void checkRParen(DetailAST lparen, DetailAST rparen)", "diff": ["-        // no paren - no check :)", "-        if (rparen == null) {", "-            return;", "-        }", "+        if (rparen != null) {", "+            // the rcurly can either be at the correct indentation,", "+            // or not first on the line", "+            final int rparenLevel = expandedTabsColumnNo(rparen);", "+            // or has <lparen level> + 1 indentation", "+            final int lparenLevel = expandedTabsColumnNo(lparen);", "-        // the rcurly can either be at the correct indentation,", "-        // or not first on the line ...", "-        final int rparenLevel = expandedTabsColumnNo(rparen);", "-        if (getLevel().isAcceptable(rparenLevel) || !startsLine(rparen)) {", "-            return;", "+            if (!getLevel().isAcceptable(rparenLevel) && startsLine(rparen)", "+                    && rparenLevel != lparenLevel + 1) {", "+                logError(rparen, \"rparen\", rparenLevel);", "+            }", "-", "-        // or has <lparen level> + 1 indentation", "-        final int lparenLevel = expandedTabsColumnNo(lparen);", "-        if (rparenLevel == lparenLevel + 1) {", "-            return;", "-        }", "-", "-        logError(rparen, \"rparen\", rparenLevel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "476490f8053284955c417965490f37e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "a4d63db21d57ab53aff8a467f89df3867518ab91", "commitAfterChange": "0eeb5e4fd6aa2c4b8a559e55384bba67d7d695c7", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected void checkRParen()", "signatureAfterChange": "     protected void checkRParen()", "diff": ["-        // the rcurly can either be at the correct indentation, or on", "-        // the same line as the lcurly", "-        // TODO: perhaps the handler should allow to place", "-        // rparen at indentation of lparen plus 1", "-        // if (test1", "-        //     || test2", "-        //     )", "-        if (rparen == null", "-            || expandedTabsColumnNo(rparen) == getLevel()", "+        // no paren - no check :)", "+        if (rparen == null) {", "+            return;", "+        }", "+", "+        // the rcurly can either be at the correct indentation,", "+        // or not first on the line ...", "+        final int rparenLevel = expandedTabsColumnNo(rparen);", "+        if (rparenLevel == getLevel()", "+", "+        // or has <lparen level> + 1 indentation", "+        final DetailAST lparen = getLParen();", "+        final int lparenLevel = expandedTabsColumnNo(lparen);", "+        if (rparenLevel == (lparenLevel + 1)) {", "+            return;", "+        }", "+"]}]}