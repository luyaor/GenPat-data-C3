{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec4d935ec8adecbb54e1ccc8bec192b8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ea6c9daf9715366049c45e5696991f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "1eb344dc82079aaf47390f512440835f4087e45f", "commitAfterChange": "fe6db3ab8a864e11eebfb0496f6a41852bdee019", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static void main(String... args) throws UnsupportedEncodingException,             CheckstyleException, FileNotFoundException", "signatureAfterChange": "     public static void main(String... args) throws UnsupportedEncodingException,             CheckstyleException, FileNotFoundException", "diff": ["-        catch (Exception ex) {", "-            // smth wrong during processing", "+        catch (CheckstyleException e) {", "-            throw ex;", "+            System.out.println(e.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30ce85946f1debac2b7a1d7231576ced", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "03f8352479400cd2c80511bfe0242932a4f00f11", "commitAfterChange": "7e570084e62eda58f3c4fa7e75e26a1a41d255cf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public String getMessage()", "signatureAfterChange": "     public String getMessage()", "diff": ["+        System.err.println(\"LocalizedMessage.getMessage\");", "+            ex.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4847490671838d5fd15355a5f716d5a0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java", "commitBeforeChange": "b9cfa0969468d97aade2ec022dfff34dc33e7b1a", "commitAfterChange": "9d11682be9f541bcc21cfc533ede5e0b5a7862f4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIllegalAbstractClassName() throws Exception", "signatureAfterChange": "     @Test     public void testIllegalAbstractClassName() throws Exception", "diff": ["+    // abstract --> ^Abstract.*$|^.*Factory$", "+        checkConfig.addAttribute(\"checkName\", \"true\");", "+        checkConfig.addAttribute(\"checkModifier\", \"false\");", "+        verify(checkConfig, getPath(\"naming\" + File.separator + \"InputAbstractClassName.java\"), expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a30613392a69df040757b883008715ce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/WhitespaceAroundTest.java", "commitBeforeChange": "0fdfc2f36086a108407fc7d51edc5b8c934b658a", "commitAfterChange": "8313819dcbf3e9cc0700120014c78a99706d88bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testIt()         throws Exception", "signatureAfterChange": "      public void testIt()         throws Exception", "diff": ["-        assertEquals(28, msgs.getMessages().length);", "+        assertEquals(29, msgs.getMessages().length);", "-        // verifyMessage(msgs, idx++, 76, 19, \"'return' is not followed by whitespace.\");", "+        verifyMessage(msgs, idx++, 76, 19, \"'return' is not followed by whitespace.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dafaf9552b0bccbbba24e58d0a9c3985", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/XMLLoggerTest.java", "commitBeforeChange": "148513d67a89b48445e751cd6a14ec73946d41f3", "commitAfterChange": "6ba28f2ef1ba7b8a8a20273d62fd7817d63a91f0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void verifyLines(String[] aExpectedLines)         throws IOException", "signatureAfterChange": "     private void verifyLines(String[] aExpectedLines)         throws IOException", "diff": ["-        assertEquals(\"length.\", aExpectedLines.length + 2, lines.length);", "-        assertEquals(\"first line.\", \"<checkstyle>\", lines[0]);", "+        assertEquals(\"length.\", aExpectedLines.length + 3, lines.length);", "+        assertEquals(\"first line.\",", "+                     \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\",", "+                     lines[0]);", "+        assertEquals(\"second line.\", \"<checkstyle>\", lines[1]);", "-            assertEquals(\"line \" + i + \".\", aExpectedLines[i], lines[i + 1]);", "+            assertEquals(\"line \" + i + \".\", aExpectedLines[i], lines[i + 2]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfaa51d5e6ed462c9fa804544daad136", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java", "commitBeforeChange": "06865630aa3da0b36064b9e00e0e95ff681f234e", "commitAfterChange": "6e6d912013f9c04733014ed393b25d35a8f31882", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private Object doMakeObject(String name)         throws CheckstyleException", "signatureAfterChange": "     private Object doMakeObject(String name)         throws CheckstyleException", "diff": ["-            // keep looking", "+            LOG.debug(\"Keep looking, ignoring exception\", ex);", "-                // keep looking", "+                LOG.debug(\"Keep looking, ignoring exception\", ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f82360af29f8f0024b47482091d3d183", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/grammars/GeneratedJava14LexerTest.java", "commitBeforeChange": "6b63ea977a77173df9ac76a121ccad9596f46634", "commitAfterChange": "06cd88b149c822f94e1a46f60f2987610a3d18f4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testUnexpectedChar() throws IOException, Exception", "signatureAfterChange": "     public void testUnexpectedChar() throws IOException, Exception", "diff": ["-//         verify(checkConfig, getPath(\"grammars/InputGrammar.java\"), expected);", "+        verify(checkConfig, getPath(\"grammars/InputGrammar.java\"), expected);"]}]}