{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ba9bd13551b6a4e4a9d8a2f561dd7e6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "754c59dea1fda8deb36d66476a19a088", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "7514320e04e4d35a4317172876e5f11e69a2c891", "commitAfterChange": "01d27913a71c29d6a769ed98ca7dd4ba01fe31eb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Configuration()", "signatureAfterChange": "     public Configuration()", "diff": ["-        try {", "-            for (int i = 0; i < Defn.ALL_PATTERN_PROPS.length; i++) {", "-                setPatternProperty(", "-                    Defn.ALL_PATTERN_PROPS[i],", "-                    (String) PATTERN_DEFAULTS.get(Defn.ALL_PATTERN_PROPS[i]));", "-            }", "-        }", "-        catch (RESyntaxException ex) {", "-            ex.printStackTrace();", "-            throw new IllegalStateException(ex.getMessage());", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e90cc131e729cf6719ce0561bbafbcd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/PackageHtmlCheck.java", "commitBeforeChange": "3c0608f33a6c41cf96056c52ae99070cbe5062d5", "commitAfterChange": "a4ce4c6bb4714ff0b51d071509d2683d9e623a36", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public int process(File[] aFiles)", "signatureAfterChange": "     public int process(File[] aFiles)", "diff": ["-        Set directories = new HashSet();", "-        for (int i = 0; i < aFiles.length; i++) {", "-            File file = aFiles[i];", "-            if (file.getName().endsWith(\".java\")) {", "-                File dir = file.getParentFile();", "-                directories.add(dir); // duplicates are handled automatically", "-            }", "-        }", "+        Set directories = getParentDirs(aFiles);", "-", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0cf15f68c32566541549236064aa463", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportCheck.java", "commitBeforeChange": "2e50ca968c3edffa06a700d2585345181c238cd4", "commitAfterChange": "d9bd21f3f7e589bfce3177a654f38a2e33ddf375", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setExcludes(String[] aExcludes)", "signatureAfterChange": "     public void setExcludes(String[] aExcludes)", "diff": ["-        mExcludes = new String[aExcludes.length];", "+        mExcludes = appendDotStar(aExcludes);", "+    }", "-            mExcludes[i] = aExcludes[i];", "-            if (!mExcludes[i].endsWith(\".*\")) {", "-                mExcludes[i] = mExcludes[i] + \".*\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd0516643a726cf58c36952a729623d1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "59222296258fecc02db44eeae1cb65b44b68c267", "commitAfterChange": "91875d1901eaf53e869e6179ceb6e45a3ab14e77", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          public void actionPerformed(ActionEvent e)", "signatureAfterChange": "          public void actionPerformed(ActionEvent e)", "diff": ["-            final Component parent = SwingUtilities.getRoot(ParseTreeInfoPanel.this);", "+            final Component parent =", "+                SwingUtilities.getRoot(ParseTreeInfoPanel.this);", "-            if (file != null) {", "-                try {", "-                    DetailAST parseTree = parseFile(file.getAbsolutePath());", "-                    mParseTreeModel.setParseTree(parseTree);", "-                }", "-                catch (IOException ex) {", "-                    JOptionPane.showMessageDialog(parent,", "-                            \"Could not open \" + file + \": \" + ex.getMessage());", "-                }", "-                catch (ANTLRException ex) {", "-                    JOptionPane.showMessageDialog(parent,", "-                            \"Could not parse \" + file + \": \" + ex.getMessage());", "-                }", "+            openFile(file, parent);", "+        }"]}]}