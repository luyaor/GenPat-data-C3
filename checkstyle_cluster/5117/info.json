{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "17efb4064e4c1d100d8f46debe5e0e58", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "044d67ab769a14dbf6daf43cd0759276", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "7d82fd670a2111e78de45cd09da5f184fc93d6ee", "commitAfterChange": "17d3b314bbb0f23622b719c089c1b3ca1607c1da", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "signatureAfterChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "diff": ["-        setRelaxJavadoc(", "-            getBooleanProperty(aProps, RELAX_JAVADOC_PROP, mRelaxJavadoc));", "-        setIgnoreJavadoc(", "-            getBooleanProperty(aProps, IGNORE_JAVADOC_PROP, mIgnoreJavadoc));", "+        setJavadocScope(", "+            Scope.getInstance( aProps.getProperty(JAVADOC_CHECKSCOPE_PROP,", "+                                                  Scope.PRIVATE.getName())));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "379ed356c11af9d442f56aa0236236df", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "ae9d1d6217ad7dbc2e6f1faa890298c68726dcb4", "commitAfterChange": "2e1382c5bb1aa61cc01d7958a589e2a3831f56b5", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 28, "signatureBeforeChange": "         @Override         public void syntaxError(                 Recognizer<?, ?> aRecognizer, Object aOffendingSymbol,                 int aLine, int aCharPositionInLine,                 String aMsg, RecognitionException aEx)", "signatureAfterChange": "         @Override         public void syntaxError(                 Recognizer<?, ?> aRecognizer, Object aOffendingSymbol,                 int aLine, int aCharPositionInLine,                 String aMsg, RecognitionException aEx)", "diff": ["-                log(lineNumber, JAVADOC_MISSED_HTML_CLOSE, token.getText());", "+                mErrorMessage = createLogMessage(lineNumber,", "+                        JAVADOC_MISSED_HTML_CLOSE, aCharPositionInLine, token.getText());", "+", "-                log(lineNumber, JAVADOC_WRONG_SINGLETON_TAG, token.getText());", "+                mErrorMessage = createLogMessage(lineNumber,", "+                        JAVADOC_WRONG_SINGLETON_TAG, aCharPositionInLine, token.getText());", "+", "-                    log(lineNumber, \"javadoc.parse.rule.error\", aMsg, upperCaseRuleName);", "+", "+                    mErrorMessage = createLogMessage(lineNumber,", "+                            JAVADOC_PARSE_RULE_ERROR, aCharPositionInLine, aMsg, upperCaseRuleName);", "-                    log(lineNumber, \"javadoc.parse.token.error\", aMsg);", "+                    mErrorMessage = createLogMessage(lineNumber, JAVADOC_PARSE_TOKEN_ERROR,", "+                            aCharPositionInLine, aMsg, aCharPositionInLine);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "811de89d855b2d562dbeafacb2645613", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "ecc852d48b9d26398926b255e3cd68572119c106", "commitAfterChange": "751257987b2ef5f301e2deb3b55302196e5015af", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 62, "signatureBeforeChange": "     private void checkLCurly(int aStartLine,                              MyCommonAST aBrace,                              LeftCurlyOption aOption)", "signatureAfterChange": "     private void checkLCurly(int aStartLine,                              MyCommonAST aBrace,                              LeftCurlyOption aOption)", "diff": ["-                log(aBrace.getLineNo(), aBrace.getColumnNo(),", "-                    \"line.new\", \"{\");", "+                mMessages.add(aBrace.getLineNo(), aBrace.getColumnNo(),", "+                              \"line.new\", \"{\");", "-                log(aBrace.getLineNo(), aBrace.getColumnNo(),", "-                    \"line.previous\", \"{\");", "+                mMessages.add(aBrace.getLineNo(), aBrace.getColumnNo(),", "+                              \"line.previous\", \"{\");", "-                    log(aBrace.getLineNo(), aBrace.getColumnNo(),", "-                        \"line.new\", \"{\");", "+                    mMessages.add(aBrace.getLineNo(), aBrace.getColumnNo(),", "+                                  \"line.new\", \"{\");", "-                    log(aBrace.getLineNo(), aBrace.getColumnNo(),", "-                        \"line.previous\", \"{\");", "+                    mMessages.add(aBrace.getLineNo(), aBrace.getColumnNo(),", "+                                  \"line.previous\", \"{\");", "-                log(aBrace.getLineNo(), aBrace.getColumnNo(),", "-                    \"line.new\", \"{\");", "+                mMessages.add(aBrace.getLineNo(), aBrace.getColumnNo(),", "+                              \"line.new\", \"{\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d768811efdc488ee89dcf44f474f40c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "d4cee632835a462da2dc6794b059fb0d6b1c9bc2", "commitAfterChange": "d216ec75255a120ce7c24e51da7df63a2b9864de", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void process(File aFile)", "signatureAfterChange": "     private void process(File aFile)", "diff": ["-        mMessages.reset();", "+        getMessageCollector().reset();", "-            mMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE,", "-                                               \"general.fileNotFound\", null));", "+            getMessageCollector().add(new LocalizedMessage(", "+                0, Defn.CHECKSTYLE_BUNDLE,", "+                \"general.fileNotFound\", null));", "-            mMessages.add(new LocalizedMessage(", "-                              0, Defn.CHECKSTYLE_BUNDLE,", "-                              \"general.exception\",", "-                              new String[] {ioe.getMessage()}));", "+            getMessageCollector().add(new LocalizedMessage(", "+                0, Defn.CHECKSTYLE_BUNDLE,", "+                \"general.exception\",", "+                new String[] {ioe.getMessage()}));", "-            mMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE,", "-                                               \"general.exception\",", "-                                               new String[] {re.getMessage()}));", "+            getMessageCollector().add(new LocalizedMessage(", "+                0, Defn.CHECKSTYLE_BUNDLE,", "+                \"general.exception\",", "+                new String[] {re.getMessage()}));", "-            mMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE,", "-                                               \"general.exception\",", "-                                               new String[] {te.getMessage()}));", "+            getMessageCollector().add(new LocalizedMessage(", "+                0, Defn.CHECKSTYLE_BUNDLE,", "+                \"general.exception\",", "+                new String[] {te.getMessage()}));", "-            mMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE,", "-                                               \"general.exception\",", "-                                               new String[] {\"\" + err}));", "+            getMessageCollector().add(new LocalizedMessage(", "+                0, Defn.CHECKSTYLE_BUNDLE,", "+                \"general.exception\",", "+                new String[] {\"\" + err}));", "-        if (mMessages.size() == 0) {", "+        if (getMessageCollector().size() == 0) {", "-                fileName, mMessages.getMessages());", "+                fileName, getMessageCollector().getMessages());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf16e9b1a7e5062fe222bc4b71727ee2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "1ab08ad4abff024bdd3fbeb6f08a1a4a61c49b65", "commitAfterChange": "26774cf3102640084d88aa60dc928cd0cd783793", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "         public ImportDetails(String importFullPath,                 int lineNumber, String importGroup, boolean staticImport)", "signatureAfterChange": "         public ImportDetails(String importFullPath,                 int lineNumber, String importGroup, boolean staticImport)", "diff": ["-            setImportFullPath(importFullPath);", "-            setLineNumber(lineNumber);", "-            setImportGroup(importGroup);", "-            setStaticImport(staticImport);", "+            this.importFullPath = importFullPath;", "+            this.lineNumber = lineNumber;", "+            this.importGroup = importGroup;", "+            this.staticImport = staticImport;"]}]}