{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a60eff66829edf546936f61800b136cc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2923704af7a211229e03b17c19dc3470", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java", "commitBeforeChange": "adebc9da6f1c59de41426400149d2da0339e797e", "commitAfterChange": "c6a70d4cca08ebdb2b4b26eff3e7da076ada184d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected IndentLevel getLevelImpl()", "signatureAfterChange": "      @Override     protected IndentLevel getLevelImpl()", "diff": ["+        IndentLevel indentLevel;", "-                return container.getLevel();", "+                indentLevel = container.getLevel();", "-            if (isChainedMethodCallWrapped()) {", "-                return container.getLevel();", "+            else if (isChainedMethodCallWrapped()) {", "+                indentLevel = container.getLevel();", "-                return new IndentLevel(container.getLevel(), getBasicOffset());", "+                indentLevel = new IndentLevel(container.getLevel(), getBasicOffset());", "-", "-        // if our expression isn't first on the line, just use the start", "-        // of the line", "-        final LineSet lines = new LineSet();", "-        findSubtreeLines(lines, getMainAst().getFirstChild(), true);", "-        final int firstCol = lines.firstLineCol();", "-        final int lineStart = getLineStart(getFirstAst(getMainAst()));", "-        if (lineStart != firstCol) {", "-            return new IndentLevel(lineStart);", "+        else {", "+            // if our expression isn't first on the line, just use the start", "+            // of the line", "+            final LineSet lines = new LineSet();", "+            findSubtreeLines(lines, getMainAst().getFirstChild(), true);", "+            final int firstCol = lines.firstLineCol();", "+            final int lineStart = getLineStart(getFirstAst(getMainAst()));", "+            if (lineStart != firstCol) {", "+                indentLevel = new IndentLevel(lineStart);", "+            }", "+            else {", "+                indentLevel = super.getLevelImpl();", "+            }", "-        return super.getLevelImpl();", "+        return indentLevel;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eff8544b2a2e3ad1f439efbc8ed24fdb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java", "commitBeforeChange": "4f16cb85a987f5d53b7055f4c96c15c76937c9ce", "commitAfterChange": "3d4290baf0a9dabd9f5e7f5db304e7ce7b491dcb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected IndentLevel getLevelImpl()", "signatureAfterChange": "      @Override     protected IndentLevel getLevelImpl()", "diff": ["-            if (container != null) {", "-                if (areOnSameLine(container.getMainAst(), getMainAst())) {", "-                    return container.getLevel();", "-                }", "-", "-                // we should increase indentation only if this is the first", "-                // chained method call which was moved to the next line", "-                if (isChainedMethodCallWrapped()) {", "-                    return container.getLevel();", "-                }", "-                else {", "-                    return new IndentLevel(container.getLevel(), getBasicOffset());", "-                }", "+            if (areOnSameLine(container.getMainAst(), getMainAst())) {", "+                return container.getLevel();", "-", "-            // if we get here, we are the child of the left hand side (name", "-            //  side) of a method call with no \"containing\" call, use", "-            //  the first non-method call parent", "-", "-            AbstractExpressionHandler p = getParent();", "-            while (p instanceof MethodCallHandler) {", "-                p = p.getParent();", "+            // we should increase indentation only if this is the first", "+            // chained method call which was moved to the next line", "+            if (isChainedMethodCallWrapped()) {", "+                return container.getLevel();", "-            return p.suggestedChildLevel(this);", "+            else {", "+                return new IndentLevel(container.getLevel(), getBasicOffset());", "+            }"]}]}