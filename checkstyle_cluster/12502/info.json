{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f32f3e659fea56f6f6c3dfeb08080d8a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06661994ad6878999443e723ea49d314", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "206ff56be6d052ebd15d06bffeba31dd14947119", "commitAfterChange": "91a4d48af703bfb26ff08273a6a520c6f4c709f6", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     private void checkThrowsTags(List aTags, List aThrows)", "signatureAfterChange": "     private void checkThrowsTags(List aTags, List aThrows)", "diff": ["+        final Set foundThrows = new HashSet();", "-            boolean found = false;", "+            final String documentedEx = tag.getArg1();", "+            boolean found = foundThrows.contains(documentedEx);", "-            while (throwIt.hasNext()) {", "+            while (!found && throwIt.hasNext()) {", "-                if (t.getText().equals(tag.getArg1())) {", "+                if (t.getText().equals(documentedEx)) {", "-                    break;", "+                    foundThrows.add(documentedEx);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7b7271c888b43624588353e25b115f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static boolean isDragOk(final DropTargetDragEvent evt)", "signatureAfterChange": "     private static boolean isDragOk(final DropTargetDragEvent evt)", "diff": ["-        boolean ok = false;", "+        boolean okStatus = false;", "-        int i = 0;", "+        int index = 0;", "-        while (!ok && i < flavors.length) {", "-            if (flavors[i].equals(DataFlavor.javaFileListFlavor)) {", "-                ok = true;", "+        while (!okStatus && index < flavors.length) {", "+            if (flavors[index].equals(DataFlavor.javaFileListFlavor)) {", "+                okStatus = true;", "-            i++;", "+            index++;", "-        return ok;", "+        return okStatus;"]}]}