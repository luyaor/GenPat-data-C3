{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7559d2ee4169f57d74ad3ce098ac65b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b6ed53d5c82a4dbb1ee3db6e5a04cca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "0855fff95e4aac170ac5ab74cd1872f20555a214", "commitAfterChange": "b3f216962675b06505885a2e82af150e6b12bb56", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processVariable(DetailAST aAST)", "signatureAfterChange": "     private void processVariable(DetailAST aAST)", "diff": ["-                    if (aFieldsSet.contains(name)) {", "-                        if ((mRegexp == null) || (!getRegexp().match(name))) {", "-                            if (!isIgnoredSetterParam(aAST, name)) {", "-                                log(nameAST.getLineNo(), nameAST.getColumnNo(),", "-                                    \"hidden.field\", name);", "-                                break;", "-                            }", "-                        }", "+                    if (aFieldsSet.contains(name)", "+                        && ((mRegexp == null) || (!getRegexp().match(name)))", "+                        && !isIgnoredSetterParam(aAST, name))", "+                    {", "+                        log(nameAST.getLineNo(), nameAST.getColumnNo(),", "+                            \"hidden.field\", name);", "+                        break;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6a660d6cae87f21e4250e63a46a01b9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "094ffd52eca4f05bfc671f01cb7ad0b7d1bbe77f", "commitAfterChange": "49d100f325752b15bbee56bfcf99dac223144639", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processVariable(DetailAST aAST)", "signatureAfterChange": "     private void processVariable(DetailAST aAST)", "diff": ["-        if (!ScopeUtils.inInterfaceOrAnnotationBlock(aAST)) {", "-            if (ScopeUtils.isLocalVariableDef(aAST)", "-                || (aAST.getType() == TokenTypes.PARAMETER_DEF))", "-            {", "-                //local variable or parameter. Does it shadow a field?", "-                final DetailAST nameAST = aAST.findFirstToken(TokenTypes.IDENT);", "-                final String name = nameAST.getText();", "-                if ((mCurrentFrame.containsStaticField(name)", "-                     || (!inStatic(aAST)", "-                         && mCurrentFrame.containsInstanceField(name)))", "-                    && ((mRegexp == null)", "-                        || (!getRegexp().matcher(name).find()))", "-                    && !isIgnoredSetterParam(aAST, name)", "-                    && !isIgnoredConstructorParam(aAST))", "-                {", "-                    log(nameAST, \"hidden.field\", name);", "-                }", "-            }", "+        if (ScopeUtils.inInterfaceOrAnnotationBlock(aAST)", "+            || !ScopeUtils.isLocalVariableDef(aAST)", "+            && (aAST.getType() != TokenTypes.PARAMETER_DEF))", "+        {", "+            // do nothing", "+            return;", "+        }", "+        //local variable or parameter. Does it shadow a field?", "+        final DetailAST nameAST = aAST.findFirstToken(TokenTypes.IDENT);", "+        final String name = nameAST.getText();", "+        if ((mCurrentFrame.containsStaticField(name)", "+             || (!inStatic(aAST) && mCurrentFrame.containsInstanceField(name)))", "+            && ((mRegexp == null) || (!getRegexp().matcher(name).find()))", "+            && !isIgnoredSetterParam(aAST, name)", "+            && !isIgnoredConstructorParam(aAST))", "+        {", "+            log(nameAST, \"hidden.field\", name);"]}]}