{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b78db7c5006505f5862ca34d9e2ecab8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "072dc94f3ce66d59449aff77b3ec1359", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java", "commitBeforeChange": "779d30b7599259bb25f5178cbb28f2a038992553", "commitAfterChange": "1bc8a685f64ec17d87b465cb765127cc5f0db1ca", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static Point skipHtmlComment(String[] text, Point from)", "signatureAfterChange": "     private static Point skipHtmlComment(String[] text, Point from)", "diff": ["-        while (to.getLineNo() < text.length", "-               && !text[to.getLineNo()]", "+        while (!text[to.getLineNo()]"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58a75bc8d62b9ee44d684ab9265e7de7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java", "commitBeforeChange": "779d30b7599259bb25f5178cbb28f2a038992553", "commitAfterChange": "1bc8a685f64ec17d87b465cb765127cc5f0db1ca", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static boolean isTag(String[] javadocText, Point pos)", "signatureAfterChange": "     private static boolean isTag(String[] javadocText, Point pos)", "diff": ["-                    || Character.isJavaIdentifierPart(text.charAt(column))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc220e4a844dd15931e2c985df679c7d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/FilterSetTest.java", "commitBeforeChange": "5ca472faa6ccc8a70690052528f00d0e3e75bffd", "commitAfterChange": "eb31210db6d680a80c7538251f989adf3adb9e3e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testOneFilter()", "signatureAfterChange": "      @Test     public void testOneFilter()", "diff": ["-        assertTrue(\"0\", filter.accept(Integer.valueOf(0)));", "-        assertFalse(\"1\", filter.accept(Integer.valueOf(1)));", "+        assertTrue(\"0\", filter.accept(0));", "+        assertFalse(\"1\", filter.accept(1));"]}]}