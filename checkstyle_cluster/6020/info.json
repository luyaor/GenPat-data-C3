{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "13fa9470ac4355458a11f0aa19eb96ab", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d579a33e4a3a265f12052404bfe01d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        ClassFanOutComplexityCheck classFanOutComplexityCheckObj = new ClassFanOutComplexityCheck();", "-        int[] actual = classFanOutComplexityCheckObj.getAcceptableTokens();", "-        int[] expected = {", "+        final ClassFanOutComplexityCheck classFanOutComplexityCheckObj =", "+            new ClassFanOutComplexityCheck();", "+        final int[] actual = classFanOutComplexityCheckObj.getAcceptableTokens();", "+        final int[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d469fdd69a74a13262bee3f850055483", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        CyclomaticComplexityCheck cyclomaticComplexityCheckObj = new CyclomaticComplexityCheck();", "-        int[] actual = cyclomaticComplexityCheckObj.getAcceptableTokens();", "-        int[] expected = {", "+        final CyclomaticComplexityCheck cyclomaticComplexityCheckObj =", "+            new CyclomaticComplexityCheck();", "+        final int[] actual = cyclomaticComplexityCheckObj.getAcceptableTokens();", "+        final int[] expected = {"]}]}