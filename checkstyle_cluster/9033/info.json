{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81efaaec5e6a00ef87995a6942ccc7c3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b52cd1e7e2de37fb2233df90ec408fef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/JUnitTestCaseCheck.java", "commitBeforeChange": "d86a9de35b58eeed409ed9fc3cbef252fda4cb84", "commitAfterChange": "5d7063c660b241bce251f1a8c89394619f2791fb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void checkSuiteMethod(DetailAST aAST, String aActualName)", "signatureAfterChange": "     private void checkSuiteMethod(DetailAST aAST, String aActualName)", "diff": ["-        DetailAST typeAST = aAST.findFirstToken(TokenTypes.TYPE);", "-        boolean isArray =", "+        final DetailAST typeAST = aAST.findFirstToken(TokenTypes.TYPE);", "+        final boolean isArray =", "-        String type = CheckUtils.createFullType(typeAST).getText();", "+        final String type = CheckUtils.createFullType(typeAST).getText();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8e7d5aa19ffd195dbb68d48f31d5529", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java", "commitBeforeChange": "d86a9de35b58eeed409ed9fc3cbef252fda4cb84", "commitAfterChange": "5d7063c660b241bce251f1a8c89394619f2791fb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void visitToken(DetailAST aDetailAST)", "signatureAfterChange": "     public void visitToken(DetailAST aDetailAST)", "diff": ["-        DetailAST paramDef =", "+        final DetailAST paramDef =", "-        DetailAST excType = paramDef.findFirstToken(TokenTypes.TYPE);", "-        FullIdent ident = CheckUtils.createFullType(excType);", "+        final DetailAST excType = paramDef.findFirstToken(TokenTypes.TYPE);", "+        final FullIdent ident = CheckUtils.createFullType(excType);"]}]}