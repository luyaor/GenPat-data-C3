{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f0beea5893edb491c7d18a780ec3c45", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30a3f49203a55eaf7c01ffab92ca8b15", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "5b07a9df8af02f337432119e3349344ae13c7065", "commitAfterChange": "e5f09c7fd2b5115bd164a5ed4f0a5e376c2dc2d7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Class resolve(String aName) throws ClassNotFoundException", "signatureAfterChange": "     public Class resolve(String aName) throws ClassNotFoundException", "diff": ["-            if (imp.endsWith(aName) && isLoadable(imp)) {", "-                return safeLoad(imp);", "+            if (imp.endsWith(aName)) {", "+                if (isLoadable(imp)) {", "+                    return safeLoad(imp);", "+                }", "+                // perhaps this is a import for inner class", "+                // let's try load it.", "+                int dot = imp.lastIndexOf(\".\");", "+                if (dot != -1) {", "+                    final String innerName = imp.substring(0, dot) + \"$\"", "+                        + imp.substring(dot + 1);", "+                    if (isLoadable(innerName)) {", "+                        return safeLoad(innerName);", "+                    }", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d811d66f29b891990eda1eb455d650f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "0ce872d7cc6b0b1564655b9e3119f72911f4dddd", "commitAfterChange": "ea9ff3965d9c657b5b7bd2d969e075f430635c47", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     void destroy()", "signatureAfterChange": "     void persist() throws IOException", "diff": ["-    /** Cleans up the object and updates the cache file. **/", "-    void destroy() {", "-        if (detailsFile != null) {", "-            FileOutputStream out = null;", "-            try {", "-                out = new FileOutputStream(detailsFile);", "-                details.store(out, null);", "-            }", "-            catch (final IOException e) {", "-                LOG.debug(\"Unable to save cache file.\", e);", "-            }", "-            finally {", "-                if (out != null) {", "-                    flushAndCloseOutStream(out);", "-                }", "-            }", "+     */", "+    void persist() throws IOException {", "+        FileOutputStream out = null;", "+        try {", "+            out = new FileOutputStream(fileName);", "+            details.store(out, null);", "+        }", "+        finally {", "+            flushAndCloseOutStream(out);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "559498dd2c605d15d52110418c7031f3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "1eda2807c85e7cd80f538bf1ac7c9288a1b59240", "commitAfterChange": "960d7d03b0dd7d1070ff218d5b27d21db7b0f0da", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     void destroy()", "signatureAfterChange": "     void destroy()", "diff": ["+            FileOutputStream out = null;", "-                mDetails.store(new FileOutputStream(mDetailsFile), null);", "+                out = new FileOutputStream(mDetailsFile);", "+                mDetails.store(out, null);", "+            finally {", "+                if (out != null) {", "+                    try {", "+                        out.flush();", "+                        out.close();", "+                    }", "+                    catch (IOException ex) {", "+                        System.out.println(\"Unable to close cache file\");", "+                        ex.printStackTrace(System.out);", "+                    }", "+                }", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afa4d454798192b0cb0da55898488ee6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/XDocsPagesTest.java", "commitBeforeChange": "1c5d01c3b48ab48fcfb0e7f3764e98d46727870e", "commitAfterChange": "e5d51331954f15890c08de2ae68f8791e7127180", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testAllCheckSections() throws Exception", "signatureAfterChange": "      @Test     public void testAllCheckSections() throws Exception", "diff": ["+            String lastSectioName = null;", "+                    Assert.assertNull(fileName + \" section '\" + sectionName + \"' should be first\",", "+                            lastSectioName);", "+                if (lastSectioName != null) {", "+                    Assert.assertTrue(", "+                            fileName + \" section '\" + sectionName", "+                                    + \"' is out of order compared to '\" + lastSectioName + \"'\",", "+                            sectionName.toLowerCase(Locale.ENGLISH).compareTo(", "+                                    lastSectioName.toLowerCase(Locale.ENGLISH)) >= 0);", "+                }", "+", "+                lastSectioName = sectionName;"]}]}