{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "25bb45e8ac3fb87fdec1f6b24eaa8faa", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "727c96d12166b162d2375446e2571336", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AvoidStarImport.java", "commitBeforeChange": "03f8352479400cd2c80511bfe0242932a4f00f11", "commitAfterChange": "7e570084e62eda58f3c4fa7e75e26a1a41d255cf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void visitToken(com.puppycrawl.tools.checkstyle.api.DetailAST aAST)", "signatureAfterChange": "      public void visitToken(com.puppycrawl.tools.checkstyle.api.DetailAST aAST)", "diff": ["-            log(aAST.getLineNo(), \"Avoid STAR import - \" + name);", "+            log(aAST.getLineNo(), \"import.avoidStar\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7617844f4d67b1b939b5b42770420236", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "4b26a472cc9205b45a4ef9546fd793e6941a626d", "commitAfterChange": "85ba2a3dce39e73858d0f3df72c43804677c8c48", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setGroups(String... packageGroups)", "signatureAfterChange": "     public void setGroups(String... packageGroups)", "diff": ["-                    pkg = pkg + \".\";", "+                    pkg += \".\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8ca22453a06f12c9e68ad19f62d9b52", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/AnnotationUtility.java", "commitBeforeChange": "146e2657d319f070a4106cb0e4017fa6b3156949", "commitAfterChange": "dab75cd8a08345b16e334c803a3208f8494db097", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static DetailAST getAnnotation(final DetailAST ast,         String annotation)", "signatureAfterChange": "     public static DetailAST getAnnotation(final DetailAST ast,         String annotation)", "diff": ["-            throw new IllegalArgumentException(\"the ast is null\");", "+            throw new IllegalArgumentException(THE_AST_IS_NULL);", "-            throw new IllegalArgumentException(\"the annotation\"", "-                + \"is empty or spaces\");", "+            throw new IllegalArgumentException(", "+                    \"the annotation is empty or spaces\");"]}]}