{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f87ca3a2bc520e74d2f43ce6aa4f6b2a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28398dc5490c041aed3695d1794f9cd6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheck.java", "commitBeforeChange": "784f0bda4450a6d64ef2dde571e13413e16c35ad", "commitAfterChange": "97da7167f411c6cf1602a8d61408c3ac2c0b572e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private int findDuplicateFromLine(int aI, int aJ, int aILine)", "signatureAfterChange": "     private int findDuplicateFromLine(int aI, int aJ, int aILine)", "diff": ["+", "+            if (aI == aJ && aILine == jLine) {", "+                continue;", "+            }", "+", "-            if ((aI != aJ || aILine != jLine) && equivalent >= mMin) {", "-                reportDuplicate(", "-                        equivalent, aILine, mFiles[aJ], jLine);", "+", "+            if ((aI != aJ || aILine < jLine) && equivalent >= mMin) {", "+                reportDuplicate(equivalent, aILine, mFiles[aJ], jLine);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e330e21a3551ee534b9c38a23d291ff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "ecc5239c78ca71db775de187b6b70481d8b08284", "commitAfterChange": "d2af4accdde3eac0a2103353f490e97bf62f61d2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     void destroy()", "signatureAfterChange": "     void destroy()", "diff": ["-                if (out != null) {", "-                    try {", "-                        out.flush();", "-                        out.close();", "-                    }", "-                    catch (final IOException ex) {", "-                        Utils.getExceptionLogger()", "-                            .debug(\"Unable to close cache file.\", ex);", "-                    }", "+                this.flushAndCloseOutStream(out);", "+            }", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91ec715520e45c971dacf6d1f29d98cd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java", "commitBeforeChange": "d58096b2b6cec63781bffdab93b92c9d2836c6cb", "commitAfterChange": "2959d83ed2a3b8217d9d3c8aefa748cdacdcd393", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private static DetailAST getOneLinePreviousStatementOfSingleLineComment(DetailAST comment)", "signatureAfterChange": "     private static DetailAST getOneLinePreviousStatementOfSingleLineComment(DetailAST comment)", "diff": ["+        DetailAST previousStatement = null;", "-                final DetailAST previousStatement =", "-                    findPreviousStatementOfSingleLineComment(comment, root);", "+                previousStatement = findPreviousStatementOfSingleLineComment(comment, root);", "-                    return previousStatement;", "+                    root = null;", "+                    stack.clear();", "+                    break;", "-        return null;", "+        return previousStatement;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4bc0308d231bd09c6e4b394410b6f67", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "ecc5239c78ca71db775de187b6b70481d8b08284", "commitAfterChange": "d2af4accdde3eac0a2103353f490e97bf62f61d2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static Properties loadProperties(File aFile)", "signatureAfterChange": "     private static Properties loadProperties(File aFile)", "diff": ["-            fis = new FileInputStream(aFile);", "-            properties.load(fis);", "-            fis.close();", "+            try {", "+                fis = new FileInputStream(aFile);", "+                properties.load(fis);", "+            }", "+            finally {", "+                if (fis != null) {", "+                    fis.close();", "+                }", "+            }"]}]}