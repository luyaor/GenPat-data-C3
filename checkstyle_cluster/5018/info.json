{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f94473ee4543adf352a2643e64adbcb", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "061d4400d11a11d2bed21743055f56cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "3ed2fd68f81f6200362f4babc9595b29f437ddd9", "commitAfterChange": "6e1e8b738d29d67575fb3390864ea786f19725e3", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     final void setFound()", "signatureAfterChange": "     void setFound()", "diff": ["-    final void setFound()", "+    void setFound()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16faa249ba70550d580979c4366bcd71", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "3ed2fd68f81f6200362f4babc9595b29f437ddd9", "commitAfterChange": "6e1e8b738d29d67575fb3390864ea786f19725e3", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     final FullIdent getFullIdent()", "signatureAfterChange": "     FullIdent getFullIdent()", "diff": ["-    final FullIdent getFullIdent()", "+    FullIdent getFullIdent()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19e6fa365db99a7bdcdab71a8b4f0767", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "3ed2fd68f81f6200362f4babc9595b29f437ddd9", "commitAfterChange": "6e1e8b738d29d67575fb3390864ea786f19725e3", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     final boolean isFound()", "signatureAfterChange": "     boolean isFound()", "diff": ["-    final boolean isFound()", "+    boolean isFound()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59f7a648a835c4b4f825994cd0a7de98", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "343e946b076a5344e380c76e5b3ea23438b6fc93", "commitAfterChange": "e3a48d1527341456a798c3f0c1986de6898a8c60", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     protected final void checkModifiers()", "signatureAfterChange": "     protected void checkModifiers()", "diff": ["-    protected final void checkModifiers()", "+    protected void checkModifiers()", "-            /*", "-            if (!areOnSameLine(modifier, prevExpr)) {", "-                continue;", "-            }", "-            */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67bc13d62ae58dd0ab72798e59d8381c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractComplexityCheck.java", "commitBeforeChange": "1da0f94aa7f7b145275ca2659053427ebaf0f096", "commitAfterChange": "c044038c3b932586c0d384b614254cc2d1838838", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public final void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-    public final void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST aAST)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7136a54d7efa65b8a2a2868d97b9ec2f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "17cfbb2442d878ae6e229f809b8b2c479b9dfdcb", "commitAfterChange": "7166b6a1d07452b72cf6f62ae2afe9846b96ad91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void startElement(String aNamespaceURI,                              String aLocalName,                              String aQName,                              Attributes aAtts)             throws SAXException", "signatureAfterChange": "         public void startElement(String aNamespaceURI,                                  String aLocalName,                                  String aQName,                                  Attributes aAtts)                 throws SAXException", "diff": ["+        /** @see org.xml.sax.helpers.DefaultHandler **/", "+        public void startElement(String aNamespaceURI,", "+                                 String aLocalName,", "+                                 String aQName,", "+                                 Attributes aAtts)", "+                throws SAXException", "+        {", "+            // TODO: debug logging for support puposes", "+            if (aQName.equals(\"module\")) {", "+                //create configuration", "+                final String name = aAtts.getValue(\"name\");", "+                DefaultConfiguration conf = new DefaultConfiguration(name);", "+                if (mConfiguration == null) {", "+                    mConfiguration = conf;", "+                }", "+", "+                //add configuration to it's parent", "+                if (!mConfigStack.isEmpty()) {", "+                    final DefaultConfiguration top =", "+                            (DefaultConfiguration) mConfigStack.peek();", "+                    top.addChild(conf);", "+                }", "+", "+                mConfigStack.push(conf);", "+            }", "+            else if (aQName.equals(\"property\")) {", "+                //extract name and value", "+                final String name = aAtts.getValue(\"name\");", "+                final String value;", "+                try {", "+                    value = replaceProperties(aAtts.getValue(\"value\"),", "+                        mOverrideProps);", "+                }", "+                catch (CheckstyleException ex) {", "+                    throw new SAXException(ex.getMessage());", "+                }", "+", "+                //add to attributes of configuration", "+                final DefaultConfiguration top =", "+                    (DefaultConfiguration) mConfigStack.peek();", "+                top.addAttribute(name, value);", "+            }", "+        }", "-    /** @see org.xml.sax.helpers.DefaultHandler **/", "-    public void startElement(String aNamespaceURI,", "-                             String aLocalName,", "-                             String aQName,", "-                             Attributes aAtts)", "-            throws SAXException", "-    {", "-        // TODO: debug logging for support puposes", "-        if (aQName.equals(\"module\")) {", "-            //create configuration", "-            final String name = aAtts.getValue(\"name\");", "-            final DefaultConfiguration conf = new DefaultConfiguration(name);", "-            if (mConfiguration == null) {", "-                mConfiguration = conf;", "-            }", "-", "-            //add configuration to it's parent", "-            if (!mConfigStack.isEmpty()) {", "-                final DefaultConfiguration top =", "-                        (DefaultConfiguration) mConfigStack.peek();", "-                top.addChild(conf);", "-            }", "-", "-            mConfigStack.push(conf);", "-        }", "-        else if (aQName.equals(\"property\")) {", "-            //extract name and value", "-            final String name = aAtts.getValue(\"name\");", "-            final String value;", "-            try {", "-                value = replaceProperties(aAtts.getValue(\"value\"),", "-                    mOverrideProps);", "-            }", "-            catch (CheckstyleException ex) {", "-                throw new SAXException(ex.getMessage());", "-            }", "-", "-            //add to attributes of configuration", "-            final DefaultConfiguration top =", "-                (DefaultConfiguration) mConfigStack.peek();", "-            top.addAttribute(name, value);", "-        }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8350c56da1665872dfacb92fc2a6cfff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "734c516bd982b9046b0b84ff9d255fc570f54bc7", "commitAfterChange": "48eee721d989ee5933fe6849a2f693c28a9385c3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static Properties loadProperties(File file)", "signatureAfterChange": "     private static Properties loadProperties(File file)", "diff": ["-        try (final FileInputStream fis = new FileInputStream(file)) {", "+        try (FileInputStream fis = new FileInputStream(file)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94c2c8b049f3891659ae9c498247de1d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractComplexityCheck.java", "commitBeforeChange": "1da0f94aa7f7b145275ca2659053427ebaf0f096", "commitAfterChange": "c044038c3b932586c0d384b614254cc2d1838838", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public final void leaveToken(DetailAST aAST)", "signatureAfterChange": "     public void leaveToken(DetailAST aAST)", "diff": ["-    public final void leaveToken(DetailAST aAST)", "+    public void leaveToken(DetailAST aAST)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c28a0c27ed04c583f9f684b5cad3a47a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/coding/InputDeclarationOrder.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public InputDeclarationOrder()", "signatureAfterChange": "     public InputDeclarationOrder()", "diff": ["-        final String foo = ERROR;", "+        String foo = ERROR;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5d111ebca77b1ea0b0abdf9c7a2e690", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/coding/InputDeclarationOrder.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     InputDeclarationOrderEnum()", "signatureAfterChange": "     InputDeclarationOrderEnum()", "diff": ["-        final String foo = ERROR;", "+        String foo = ERROR;"]}]}