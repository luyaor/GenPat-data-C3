{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eca1cd86033dc2bc899664854e9bb0bc", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66aa93ba462146625e69054ea7c05ca0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "4cc94a581c8da49c65d139da08d70aea1b5cf1e9", "commitAfterChange": "88e89a138aa39f50f7642106cde6568f6e07783f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void setupChild(Configuration aChildConf)             throws CheckstyleException", "signatureAfterChange": "     public void setupChild(Configuration aChildConf)             throws CheckstyleException", "diff": ["-", "-        // IMPORTANT! Need to use the same class loader that created this", "-        // class. Otherwise can get ClassCastException problems.", "-        final String[] packageNames = getPackageNames();", "-        final Check c =", "-            (Check) PackageObjectFactory.makeObject(", "-                packageNames,", "-                getClass().getClassLoader(),", "-                name);", "+        final Check c = (Check) mModuleFactory.createModule(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d116c281108d98de84c9451238cdeb1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "4cc94a581c8da49c65d139da08d70aea1b5cf1e9", "commitAfterChange": "88e89a138aa39f50f7642106cde6568f6e07783f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void setupChild(Configuration aChildConf)             throws CheckstyleException", "signatureAfterChange": "     protected void setupChild(Configuration aChildConf)             throws CheckstyleException", "diff": ["-            final String[] packageNames = getPackageNames();", "-                    (FileSetCheck) PackageObjectFactory.makeObject(", "-                            packageNames,", "-                            getClass().getClassLoader(),", "-                            name);", "-            fsc.setPackageNames(packageNames);", "+            (FileSetCheck) mModuleFactory.createModule(name);"]}]}