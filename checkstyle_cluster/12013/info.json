{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7833b76cf66f18956f14e4944ed31d0b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a430da07a1c0106e4bcb3303fae641d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/MethodParamPadCheck.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                log(parenAST, \"line.previous\", parenAST.getText());", "+                log(parenAST, LINE_PREVIOUS, parenAST.getText());", "-                log(parenAST , \"ws.preceded\", parenAST.getText());", "+                log(parenAST , WS_PRECEDED, parenAST.getText());", "-                log(parenAST, \"ws.notPreceded\", parenAST.getText());", "+                log(parenAST, WS_NOT_PRECEDED, parenAST.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cbe7e7d38b09e0dd53ad95972249df3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/UnnecessaryParenthesesCheck.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            log(ast, \"unnecessary.paren.ident\", ast.getText());", "+            log(ast, MSG_IDENT, ast.getText());", "-                log(ast, \"unnecessary.paren.string\",", "+                log(ast, MSG_STRING,", "-                log(ast, \"unnecessary.paren.literal\", ast.getText());", "+                log(ast, MSG_LITERAL, ast.getText());", "-                log(ast, \"unnecessary.paren.assign\");", "+                log(ast, MSG_ASSIGN);"]}]}