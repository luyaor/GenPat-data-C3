{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dd22265dc9e1e3ffd2d87b90d0dbc566", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b11bac3929fe244f46245f7987ff142", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheckTest.java", "commitBeforeChange": "b2991ef9e72bd4c69797779357fd9dc2eab7a3ae", "commitAfterChange": "384ecfc7d5a8ec7f0711c8baae661118297272a2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testNoNewlineAtEndOfFile() throws Exception", "signatureAfterChange": "      @Test     public void testNoNewlineLfAtEndOfFile() throws Exception", "diff": ["+", "+    @Test", "+    public void testNoNewlineLfAtEndOfFile() throws Exception {", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(NewlineAtEndOfFileCheck.class);", "+        checkConfig.addAttribute(\"lineSeparator\", LineSeparatorOption.LF.toString());", "+        final String[] expected = {", "+            \"0: \" + getCheckMessage(MSG_KEY_NO_NEWLINE_EOF),", "+        };", "+        verify(", "+            createChecker(checkConfig),", "+            getPath(\"InputNoNewlineAtEndOfFile.java\"),", "-        checkConfig.addAttribute(\"lineSeparator\", LineSeparatorOption.LF.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c85ee841228f624c649b7e4ac538dc0c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "commitAfterChange": "78e9ce870170ca3ef88fd78f8e0af0681c958eb3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testSame()         throws Exception", "signatureAfterChange": "      public void testSame() throws Exception", "diff": ["-    public void testSame()", "-        throws Exception", "+    public void testSame() throws Exception", "-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(RightCurlyCheck.class);", "-        checkConfig.addAttribute(\"option\", RightCurlyOption.SAME.toString());", "+        mCheckConfig.addAttribute(\"option\", RightCurlyOption.SAME.toString());", "+            \"93:27: '}' should be alone on a line.\",", "+            \"93:27: '}' should be on a new line.\",", "-        verify(checkConfig, getPath(\"InputLeftCurlyOther.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputLeftCurlyOther.java\"), expected);"]}]}