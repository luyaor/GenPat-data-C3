{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa8297a57941e7b22867f5b841da040f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5329ffb4f4681b501fe551fb4218f638", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "commitAfterChange": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void reportCComment(int aStartLineNo, int aStartColNo,             int aEndLineNo, int aEndColNo)", "signatureAfterChange": "     public void reportCComment(int aStartLineNo, int aStartColNo,             int aEndLineNo, int aEndColNo)", "diff": ["-        final Integer key = new Integer(aStartLineNo);", "-        if (mCComments.containsKey(key)) {", "-            final List<TextBlock> entries = mCComments.get(key);", "+        if (mCComments.containsKey(aStartLineNo)) {", "+            final List<TextBlock> entries = mCComments.get(aStartLineNo);", "-            mCComments.put(key, entries);", "+            mCComments.put(aStartLineNo, entries);", "-            mJavadocComments.put(new Integer(aEndLineNo - 1), comment);", "+            mJavadocComments.put(aEndLineNo - 1, comment);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70fe9819fe195c50c60e75face5c511d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "commitAfterChange": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public ExpressionHandler getHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "signatureAfterChange": "     public ExpressionHandler getHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "diff": ["-        final Integer type = new Integer(aAst.getType());", "-", "-                mTypeHandlers.get(type);", "+                mTypeHandlers.get(aAst.getType());", "-            throw new RuntimeException(\"no handler for type \" + type);", "+            throw new RuntimeException(\"no handler for type \" + aAst.getType());"]}]}