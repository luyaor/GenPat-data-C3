{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "051f67f4990a25f8c19cb6d58e6843e2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d90eefdad9753ce81962ba0ccf468b12", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "f747835b6b4bd894eed2ef17eb059a003fb4d988", "commitAfterChange": "6ebcf2733b6c635d5f044aa35caf2a610c7723ff", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean containsOneArg(final AST expr)", "signatureAfterChange": "     private static boolean containsOneArgument(DetailAST methodCall)", "diff": ["+     */", "+    private static boolean containsOneArgument(DetailAST methodCall) {", "+        final DetailAST elist = methodCall.findFirstToken(TokenTypes.ELIST);", "+        return elist.getChildCount() == 1;", "-     */", "-    private boolean containsOneArg(final AST expr) {", "-        return !containsNoArgs(expr) && !containsMultiArgs(expr);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9e829ae725a7d87f0b12da7870ad788", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "f747835b6b4bd894eed2ef17eb059a003fb4d988", "commitAfterChange": "6ebcf2733b6c635d5f044aa35caf2a610c7723ff", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(final DetailAST methodCall)", "signatureAfterChange": "      @Override     public void visitToken(final DetailAST methodCall)", "diff": ["-            && containsOneArg(expr) && containsAllSafeTokens(expr)) {", "+            && containsOneArgument(methodCall) && containsAllSafeTokens(expr)) {", "-            && containsOneArg(expr) && containsAllSafeTokens(expr)) {", "+            && containsOneArgument(methodCall) && containsAllSafeTokens(expr)) {", "+    }"]}]}