{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc95bd0568250d2ae8b04d94e61c07c5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2da0407c544c3e18e9b69e6bc24d1e68", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheck.java", "commitBeforeChange": "d7ec6a95ac09e00b8d72b7db4f664a6ffa7e9562", "commitAfterChange": "2f70947ed74ab968324fdcf83f808ff1d88df1fb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public synchronized void process(File[] aFiles)", "signatureAfterChange": "     public synchronized void process(File[] aFiles)", "diff": ["-        long start = System.currentTimeMillis();", "+        final long start = System.currentTimeMillis();", "-                File file = mFiles[i];", "-                String[] lines = Utils.getLines(file.getPath(), getCharset());", "-                ChecksumGenerator transformer = findChecksumGenerator(file);", "+                final File file = mFiles[i];", "+                final String[] lines =", "+                    Utils.getLines(file.getPath(), getCharset());", "+                final ChecksumGenerator transformer =", "+                    findChecksumGenerator(file);", "-        long endReading = System.currentTimeMillis();", "+        final long endReading = System.currentTimeMillis();", "-        long endSearching = System.currentTimeMillis();", "+        final long endSearching = System.currentTimeMillis();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3bb2fd55cac51d336cffff1746028f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void process(File aFile)", "signatureAfterChange": "     private void process(File aFile)", "diff": ["-        catch (FileNotFoundException fnfe) {", "+        catch (final FileNotFoundException fnfe) {", "-        catch (IOException ioe) {", "+        catch (final IOException ioe) {", "-        catch (RecognitionException re) {", "+        catch (final RecognitionException re) {", "-        catch (TokenStreamRecognitionException tre) {", "+        catch (final TokenStreamRecognitionException tre) {", "-        catch (TokenStreamException te) {", "+        catch (final TokenStreamException te) {", "-        catch (Throwable err) {", "+        catch (final Throwable err) {"]}]}