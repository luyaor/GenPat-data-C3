{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f0eec6bc7f2f7daafb852cffdfd413c0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b85381cbb337cc0ae5fe8d334743ee6d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule232specialescape/IllegalTokenTextTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void illegalTokensTest() throws Exception", "signatureAfterChange": "      @Test     public void illegalTokensTest() throws Exception", "diff": ["-        Configuration checkConfig = builder.getCheckConfig(\"IllegalTokenText\");", "-        String filePath = builder.getFilePath(\"IllegalTokenTextInput\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"IllegalTokenText\");", "+        final String filePath = builder.getFilePath(\"IllegalTokenTextInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dabcf5ab6a8fcded185fa32dd43ac0e4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule232specialescape/IllegalTokenTextTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void illegalTokensTest() throws Exception", "signatureAfterChange": "      @Test     public void illegalTokensTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"IllegalTokenText\");", "-        final String filePath = builder.getFilePath(\"InputIllegalTokenText\");", "+        final Configuration checkConfig = getCheckConfig(\"IllegalTokenText\");", "+        final String filePath = getPath(\"InputIllegalTokenText.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}]}