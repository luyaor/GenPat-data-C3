{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6b17933f3d0d266bfee3677285324464", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18d61132729e186b477cb1e159e58891", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "381544887c222baddc8d6aab9f266bf16bc118b5", "commitAfterChange": "36321e0cc61a3ef9db6a2a468e72bf79f0da6211", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testRemoveFilter() throws Exception", "signatureAfterChange": "      public void testRemoveFilter() throws Exception", "diff": ["-        c.fireAuditStarted();", "-        assertTrue(\"Checker.fireAuditStarted() doesn't call filter\", f2.wasCalled());", "-        assertFalse(\"Checker.fireAuditStarted() does call removed filter\", f.wasCalled());", "+ \t// we do call filter in fireErrors() only (fix for 1080343)", "+// \tc.fireAuditStarted();", "+//         assertTrue(\"Checker.fireAuditStarted() doesn't call filter\", f2.wasCalled());", "+//         assertFalse(\"Checker.fireAuditStarted() does call removed filter\", f.wasCalled());", "-        f2.resetFilter();", "-        c.fireAuditFinished();", "-        assertTrue(\"Checker.fireAuditFinished() doesn't call filter\", f2.wasCalled());", "-        assertFalse(\"Checker.fireAuditFinished() does call removed filter\", f.wasCalled());", "+ \t// we do call filter in fireErrors() only (fix for 1080343)", "+//         f2.resetFilter();", "+//         c.fireAuditFinished();", "+//         assertTrue(\"Checker.fireAuditFinished() doesn't call filter\", f2.wasCalled());", "+//         assertFalse(\"Checker.fireAuditFinished() does call removed filter\", f.wasCalled());", "-        f2.resetFilter();", "-        c.fireFileStarted(\"Some File Name\");", "-        assertTrue(\"Checker.fireFileStarted() doesn't call filter\", f2.wasCalled());", "-        assertFalse(\"Checker.fireFileStarted() does call removed filter\", f.wasCalled());", "+ \t// we do call filter in fireErrors() only (fix for 1080343)", "+//         f2.resetFilter();", "+//         c.fireFileStarted(\"Some File Name\");", "+//         assertTrue(\"Checker.fireFileStarted() doesn't call filter\", f2.wasCalled());", "+//         assertFalse(\"Checker.fireFileStarted() does call removed filter\", f.wasCalled());", "-        f2.resetFilter();", "-        c.fireFileFinished(\"Some File Name\");", "-        assertTrue(\"Checker.fireFileFinished() doesn't call filter\", f2.wasCalled());", "-        assertFalse(\"Checker.fireFileFinished() does call removed filter\", f.wasCalled());", "+ \t// we do call filter in fireErrors() only (fix for 1080343)", "+//         f2.resetFilter();", "+//         c.fireFileFinished(\"Some File Name\");", "+//         assertTrue(\"Checker.fireFileFinished() doesn't call filter\", f2.wasCalled());", "+//         assertFalse(\"Checker.fireFileFinished() does call removed filter\", f.wasCalled());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65f657b9e037ad0f9d7c6874bf0bd50c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "381544887c222baddc8d6aab9f266bf16bc118b5", "commitAfterChange": "36321e0cc61a3ef9db6a2a468e72bf79f0da6211", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testAddFilter() throws Exception", "signatureAfterChange": "      public void testAddFilter() throws Exception", "diff": ["-        c.fireAuditStarted();", "-        assertTrue(\"Checker.fireAuditStarted() doesn't call filter\", f.wasCalled());", "+\t// we do not call filter in fireAuditStarted() (fix for 1080343)", "+//         c.fireAuditStarted();", "+//         assertTrue(\"Checker.fireAuditStarted() doesn't call filter\", f.wasCalled());", "-        f.resetFilter();", "-        c.fireAuditFinished();", "-        assertTrue(\"Checker.fireAuditFinished() doesn't call filter\", f.wasCalled());", "+\t// we do not call filter in fireAuditFinished() (fix for 1080343)", "+//         f.resetFilter();", "+//         c.fireAuditFinished();", "+//         assertTrue(\"Checker.fireAuditFinished() doesn't call filter\", f.wasCalled());", "-        f.resetFilter();", "-        c.fireFileStarted(\"Some File Name\");", "-        assertTrue(\"Checker.fireFileStarted() doesn't call filter\", f.wasCalled());", "+\t// we do not call filter in fireFileStarted() (fix for 1080343)", "+//         f.resetFilter();", "+//         c.fireFileStarted(\"Some File Name\");", "+//         assertTrue(\"Checker.fireFileStarted() doesn't call filter\", f.wasCalled());", "-        f.resetFilter();", "-        c.fireFileFinished(\"Some File Name\");", "-        assertTrue(\"Checker.fireFileFinished() doesn't call filter\", f.wasCalled());", "+\t// we do not call filter in fireFileFinished() (fix for 1080343)", "+//         f.resetFilter();", "+//         c.fireFileFinished(\"Some File Name\");", "+//         assertTrue(\"Checker.fireFileFinished() doesn't call filter\", f.wasCalled());"]}]}