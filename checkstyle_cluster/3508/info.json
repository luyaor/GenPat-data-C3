{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7028413c6c873d73d8c9b1f34adb7421", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "026a48bd45678d53ede8441a091ce9e0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "688dc9c547d92cf86d13733c6c0856dc43984676", "commitAfterChange": "37e0bc051f37fff6f6d004ae57073cc98df95122", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void processEnd(DetailAST aAST)", "signatureAfterChange": "     private void processEnd(DetailAST aAST)", "diff": ["-                    && ('.' != charAfter))", "+                    && ('.' != charAfter) && (':' != charAfter))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3d5906bfc34d258b4f3701e447fded7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/naming/MethodNameCheck.java", "commitBeforeChange": "756e47a05af9db14879e349f7bde1dfa64b83af8", "commitAfterChange": "a6471e8a2608cbe29b26da7c442aff2ebe4de236", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAst)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAst)", "diff": ["-            if (method.getText().equals(classIdent.getText())) {", "+            // Following logic is to handle when a classIdent can not be", "+            // found. This is when you have a Literal_New keyword followed", "+            // a DOT, which is when you have:", "+            // new Outclass.InnerInterface(x) { ... }", "+            // Such a rare case, will not have the logic to handle parsing", "+            // down the tree looking for the first ident.", "+            if ((null != classIdent)", "+                && method.getText().equals(classIdent.getText()))", "+            {"]}]}