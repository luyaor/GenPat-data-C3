{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1fd910b5cfb653a582063b78b1a1cbce", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b53a8820763a595c73fe44b363461a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheckTest.java", "commitBeforeChange": "e59080b695ecd2f12aa8dce07f40d9a77a98d52b", "commitAfterChange": "6c1b26a8361782c8e7ae9455bd4d68e03bc919f8", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testNoHeader()         throws Exception", "signatureAfterChange": "      @Test     public void testNoHeader() throws Exception", "diff": ["-    public void testNoHeader()", "-        throws Exception {", "+    public void testNoHeader() throws Exception {", "-        // No header file specified", "-            fail();", "+            final String[] expected = {", "+            };", "+            verify(checkConfig, getPath(\"InputRegexpHeader1.java\"), expected);", "-            // expected exception", "+            // Exception is not expected", "+            fail();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "725dd6ab9ed167753555ff4e5ce3293e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck.java", "commitBeforeChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "commitAfterChange": "29027109bf962f47b6a6000fdca69b5679ce4b43", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void loadHeader(final Reader aHeaderReader) throws IOException", "signatureAfterChange": "     private void loadHeader(final Reader headerReader) throws IOException", "diff": ["-    private void loadHeader(final Reader aHeaderReader) throws IOException", "+    private void loadHeader(final Reader headerReader) throws IOException", "-        final LineNumberReader lnr = new LineNumberReader(aHeaderReader);", "-        mHeaderLines.clear();", "+        final LineNumberReader lnr = new LineNumberReader(headerReader);", "+        readerLines.clear();", "-            mHeaderLines.add(l);", "+            readerLines.add(l);"]}]}