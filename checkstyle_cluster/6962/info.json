{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b52dc1692ea39385b3c8b7f4d0329c1b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78eb61cbe2f844bdf7fffe1786055650", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "2271d712c91f9b47fa202cd405f10979209e8c57", "commitAfterChange": "a2f74423b6db21eeb1ed1725e6cfc2b83c44113b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void processEnd(DetailAST ast)", "signatureAfterChange": "     private void processEnd(DetailAST ast)", "diff": ["-                    && (ast.getParent().getParent().getType()", "-                        == TokenTypes.DOT)", "-                    && (ast.getParent().getParent().getParent().getType()", "-                        == TokenTypes.METHOD_CALL))", "+                        && ((ast.getParent().getParent().getType()", "+                            == TokenTypes.DOT)", "+                        && (ast.getParent().getParent().getParent().getType()", "+                            == TokenTypes.METHOD_CALL))", "+                    || isAfterMethodReference(ast))", "-                    && ('.' != charAfter) && (':' != charAfter))", "+                    && ('.' != charAfter) && (':' != charAfter)", "+                    && !isAfterMethodReference(ast))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f734dee95287d0c31225dc80242b52c0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "3300c3c835982e11c24b89e7c11ec9d7333cfb52", "commitAfterChange": "795968d20ed78e558a95fdd35702366327a4bdc1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private boolean isInAnnotation(DetailAST ast)", "signatureAfterChange": "     private static boolean isChildOf(DetailAST ast, int type)", "diff": ["-    private boolean isInAnnotation(DetailAST ast)", "+    private static boolean isChildOf(DetailAST ast, int type)", "-        return TokenTypes.ANNOTATION == ast.getParent().getParent().getType()", "-                || TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR", "-                        == ast.getParent().getParent().getType();", "+        boolean result = false;", "+        DetailAST node = ast;", "+        do {", "+            if (node.getType() == type) {", "+                result = true;", "+            }", "+            node = node.getParent();", "+        } while (node != null && !result);", "+", "+        return result;"]}]}