{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed66e4368848da854f1af8f2fae21cdf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b53a8820763a595c73fe44b363461a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheckTest.java", "commitBeforeChange": "e59080b695ecd2f12aa8dce07f40d9a77a98d52b", "commitAfterChange": "6c1b26a8361782c8e7ae9455bd4d68e03bc919f8", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testNoHeader()         throws Exception", "signatureAfterChange": "      @Test     public void testNoHeader() throws Exception", "diff": ["-    public void testNoHeader()", "-        throws Exception {", "+    public void testNoHeader() throws Exception {", "-        // No header file specified", "-            fail();", "+            final String[] expected = {", "+            };", "+            verify(checkConfig, getPath(\"InputRegexpHeader1.java\"), expected);", "-            // expected exception", "+            // Exception is not expected", "+            fail();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e506b448bfe6d5a679aa21138e1302b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportTest.java", "commitBeforeChange": "32f5f97181f9049af5411a5b8f151b51f1c5f165", "commitAfterChange": "731b581a1c0406506266226c50be8796179464e5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testWithChecker()         throws Exception", "signatureAfterChange": "      public void testExcludes()         throws Exception", "diff": ["-    public void testWithChecker()", "+", "+    public void testExcludes()", "+        throws Exception", "+    {", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(AvoidStarImportCheck.class);", "+        checkConfig.addAttribute(\"excludes\", \"java.io,java.lang\");", "+        // allow the java.io/java.lang star imports", "+        final String[] expected2 = new String[] {", "+            \"7: Using the '.*' form of import should be avoided - com.puppycrawl.tools.checkstyle.*.\"", "+        };", "+        verify(checkConfig, getPath(\"InputImport.java\"), expected2);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f58e4b503cd8a0266b5c0d4bef5ed213", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "267ba659ac62583f14c8c25d3cf4587070e1966c", "commitAfterChange": "95f7a7cde50ceac50d41c2bff65b6983c888bea3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGroups() throws Exception", "signatureAfterChange": "      @Test     public void testGroups() throws Exception", "diff": ["-        checkConfig.addAttribute(\"groups\", \"java.awt, javax.swing, java.io\");", "+        checkConfig.addAttribute(\"groups\", \"java.awt\");", "+        checkConfig.addAttribute(\"groups\", \"javax.swing\");", "+        checkConfig.addAttribute(\"groups\", \"java.io\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f91321f2632202bb49c066417ecb4b95", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheckTest.java", "commitBeforeChange": "17ebdc5c3740d37f29b8dc09c4ce4a42d2982b1e", "commitAfterChange": "4297ca50a95bd01c236ee1f4aeb13488298b104f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void test() throws Exception", "signatureAfterChange": "      @Test     public void testFormat() throws Exception", "diff": ["-    public void test() throws Exception", "-            \"6:9: The field '_errorCode' must be declared final.\",", "-            \"23:9: The field '_errorCode' must be declared final.\",", "+", "+    @Test", "+    public void testFormat() throws Exception", "+    {", "+        DefaultConfiguration checkConfig = createCheckConfig(MutableExceptionCheck.class);", "+        checkConfig.addAttribute(\"format\", \"^.*Failure$\");", "+        checkConfig.addAttribute(\"extendedClassNameFormat\", \"^.*ThreadDeath$\");", "+        String[] expected = {", "+            \"34:13: The field 'errorCode' must be declared final.\","]}]}