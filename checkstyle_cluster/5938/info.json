{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3ff6da28929b36fbddf579d43551009", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b2c0b7663efb69f3216f11e164074c5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java", "commitBeforeChange": "3e25a4911d0f0e4ea1b9c22f1b65158794f7d093", "commitAfterChange": "7f452f66c8ac18a9d0093c0cb05009ddae0b8ea9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private boolean isPreceedsEmptyForInit(DetailAST ast)", "signatureAfterChange": "     private static boolean isPreceedsEmptyForInit(DetailAST ast)", "diff": ["-    private boolean isPreceedsEmptyForInit(DetailAST ast) {", "-        boolean preceedsEmptyForInintializer = false;", "+    private static boolean isPreceedsEmptyForInit(DetailAST ast) {", "+        boolean result = false;", "-        if (parent != null", "-            && parent.getType() == TokenTypes.LITERAL_FOR", "-            && parent.findFirstToken(TokenTypes.FOR_EACH_CLAUSE) == null) {", "+        if (parent.findFirstToken(TokenTypes.FOR_EACH_CLAUSE) == null) {", "-            preceedsEmptyForInintializer = forIterator.getChildCount() == 0", "-                    && ast == forIterator.getPreviousSibling();", "+            result = forIterator.getChildCount() == 0;", "-        return preceedsEmptyForInintializer;", "+        return result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa44fdfe7c83e87f29c8480e45ed7455", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java", "commitBeforeChange": "3e25a4911d0f0e4ea1b9c22f1b65158794f7d093", "commitAfterChange": "7f452f66c8ac18a9d0093c0cb05009ddae0b8ea9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private boolean isFollowsEmptyForIterator(DetailAST ast)", "signatureAfterChange": "     private static boolean isFollowsEmptyForIterator(DetailAST ast)", "diff": ["-    private boolean isFollowsEmptyForIterator(DetailAST ast) {", "-        boolean followsEmptyForIterator = false;", "+    private static boolean isFollowsEmptyForIterator(DetailAST ast) {", "+        boolean result = false;", "-        if (parent != null", "-            && parent.getType() == TokenTypes.LITERAL_FOR", "-            && parent.findFirstToken(TokenTypes.FOR_EACH_CLAUSE) == null) {", "+        if (parent.findFirstToken(TokenTypes.FOR_EACH_CLAUSE) == null) {", "-            followsEmptyForIterator = forIterator.getChildCount() == 0", "-                && ast == forIterator.getNextSibling();", "+            result = forIterator.getChildCount() == 0;", "-        return followsEmptyForIterator;", "+        return result;"]}]}