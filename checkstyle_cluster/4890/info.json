{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de1c722f2180736f81f39c039a2f9a6f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1660f53b35269214d3903d8f44203abf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/LineSeparatorOption.java", "commitBeforeChange": "b2991ef9e72bd4c69797779357fd9dc2eab7a3ae", "commitAfterChange": "384ecfc7d5a8ec7f0711c8baae661118297272a2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public boolean matches(byte... bytes)", "signatureAfterChange": "     public boolean matches(byte... bytes)", "diff": ["-        final String s = new String(bytes);", "-        return s.equals(lineSeparator);", "+        if (this == LF_CR_CRLF) {", "+            // this silently assumes CRLF and ANY have the same length", "+            // and LF and CR are of length 1", "+            return CRLF.matches(bytes)", "+                || LF.matches(Arrays.copyOfRange(bytes, 1, 2))", "+                || CR.matches(Arrays.copyOfRange(bytes, 1, 2));", "+        }", "+        else {", "+            return Arrays.equals(bytes, lineSeparator);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "290d19eb2a2f1163edfd689e341a01ad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheck.java", "commitBeforeChange": "e16c4a8259ed7bf412bfa74ac4cb6b39c467c422", "commitAfterChange": "741454e7f18b1714499eda0c44dbdf75518683b0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "         private long calcChecksum(String aLine)", "signatureAfterChange": "         protected long calcChecksum(String aLine)", "diff": ["-        private long calcChecksum(String aLine)", "-        {", "-            if (aLine.startsWith(\"import \")) {", "-                return IGNORE;", "-            }", "-            else {", "-                return reallyCalcChecksum(aLine);", "-            }", "-        }", "+         */", "+        protected long calcChecksum(String aLine)", "+        {", "+            if (aLine.startsWith(\"import \")) {", "+                return IGNORE;", "+            }", "+            else {", "+                return super.calcChecksum(aLine);", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4de33c300f96e44648ee88607b9eded5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/comments/CommentsTest.java", "commitBeforeChange": "ff5cbc39c4882b3a3dcdbedcad9393e170148725", "commitAfterChange": "82f4a9852de874b4849a67f53f4e541d13db869b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private static DetailAST buildInput_2()", "signatureAfterChange": "     private static DetailAST buildInput_2()", "diff": ["-        slCommentContent.setText(\" my class\\n\");", "+        slCommentContent.setText(\" my class\" + LINE_SEPARATOR);", "-        blockCommentContent.setText(\"*\\n\"", "-                + \"     * Lines <b>method</b>.\\n\"", "-                + \"     * \\n\"", "-                + \"     * @return string.\\n\"", "+        blockCommentContent.setText(\"*\" + LINE_SEPARATOR", "+                + \"     * Lines <b>method</b>.\" + LINE_SEPARATOR", "+                + \"     * \" + LINE_SEPARATOR", "+                + \"     * @return string.\" + LINE_SEPARATOR"]}]}