{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c11b0426c24cbe5669cbd933cf1b7eb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98602b78234e595c5ee24f040df4ec53", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "da2d75a1780c1691dc4aa45489f9e9674b1c652e", "commitAfterChange": "36b91a59d62c9505b835717f00f470c499cf9b30", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["+    @Override", "+    public void leaveToken(DetailAST ast) {", "+        switch (ast.getType()) {", "+            case TokenTypes.OBJBLOCK:", "+            case TokenTypes.SLIST:", "+            case TokenTypes.CTOR_DEF:", "+            case TokenTypes.METHOD_DEF:", "+                final Map<String, DetailAST> scope = scopeStack.pop().scope;", "+                for (DetailAST node : scope.values()) {", "+                    log(node.getLineNo(), node.getColumnNo(), MSG_KEY, node", "+                        .getText());", "+                }", "+                break;", "+            default:", "+                // do nothing", "+        }", "-    @Override", "-    public void leaveToken(DetailAST ast) {", "-        super.leaveToken(ast);", "-        switch (ast.getType()) {", "-            case TokenTypes.OBJBLOCK:", "-            case TokenTypes.SLIST:", "-            case TokenTypes.LITERAL_FOR:", "-            case TokenTypes.CTOR_DEF:", "-            case TokenTypes.STATIC_INIT:", "-            case TokenTypes.INSTANCE_INIT:", "-            case TokenTypes.METHOD_DEF:", "-                final Map<String, DetailAST> state = scopeStack.pop();", "-                for (DetailAST node : state.values()) {", "-                    log(node.getLineNo(), node.getColumnNo(), MSG_KEY, node", "-                        .getText());", "-                }", "-                break;", "-", "-            default:", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df6d92977c1b7466e7e4d8610544efac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "1c2c822688b560351d016f29946fd6697f3fa9b8", "commitAfterChange": "9c3b17b9db6c0884d4d456b4d6219abc03a453d4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["+        Map<String, DetailAST> scope = null;", "-            case TokenTypes.SLIST:", "-                final Map<String, DetailAST> scope = scopeStack.pop().scope;", "-                for (DetailAST node : scope.values()) {", "-                    log(node.getLineNo(), node.getColumnNo(), MSG_KEY, node", "-                        .getText());", "+                scope = scopeStack.pop().scope;", "+                break;", "+            case TokenTypes.SLIST:", "+                if (ast.getParent().getType() != TokenTypes.CASE_GROUP", "+                    || findLastToken(ast.getParent().getParent(), TokenTypes.CASE_GROUP,", "+                        TokenTypes.SLIST) == ast.getParent()) {", "+                    scope = scopeStack.pop().scope;", "+        if (scope != null) {", "+            for (DetailAST node : scope.values()) {", "+                log(node.getLineNo(), node.getColumnNo(), MSG_KEY, node.getText());", "+            }", "+        }", "+    }"]}]}