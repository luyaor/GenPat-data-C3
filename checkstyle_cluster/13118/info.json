{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3de8086468a94da06cac7b7b11cb6774", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29b6e8c4cac78d18174cbcb70092a103", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "c59a39378f51ec63c3dc9421446ddd7904c4cfce", "commitAfterChange": "02da493e64154d6bbac09a64d67a025f0e72cad1", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void realExecute()", "signatureAfterChange": "     private void realExecute()", "diff": ["-            if (!ok && (mFailureProperty != null)) {", "-                getProject().setProperty(mFailureProperty, \"true\");", "-            }", "+            if (!ok) {", "+                final String failureMsg =", "+                        \"Got \" + numErrs + \" errors and \" + numWarnings", "+                                + \" warnings.\";", "+                if (mFailureProperty != null) {", "+                    getProject().setProperty(mFailureProperty, failureMsg);", "+                }", "-            if (!ok && mFailOnViolation) {", "-                throw new BuildException(\"Got \" + numErrs + \" errors and \"", "-                        + numWarnings + \" warnings.\", getLocation());", "+                if (mFailOnViolation) {", "+                    throw new BuildException(failureMsg, getLocation());", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf567fe7768f0dac6b7c9e8c16b72396", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportCheck.java", "commitBeforeChange": "9f93c2258ef0512b743f5927be201ff55a9d5c57", "commitAfterChange": "23c8774d2e2fd245de1e5df02758fd23702c565e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setExcludes(String... excludesParam)", "signatureAfterChange": "     public void setExcludes(String... excludesParam)", "diff": ["+        final String suffix = \".*\";", "+", "-            excludes.add(exclude.endsWith(\".*\") ? exclude : exclude + \".*\");", "+            if (exclude.endsWith(suffix)) {", "+                excludes.add(exclude);", "+            }", "+            else {", "+                excludes.add(exclude + suffix);", "+            }"]}]}