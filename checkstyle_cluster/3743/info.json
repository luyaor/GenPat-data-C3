{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f12081d2ff3277dd4c3498dc6c331746", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7db726275a0931d39f48c80e41599c7a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "b9b72f969209ac4edb9c6b02aaf8e2f590d0b737", "commitAfterChange": "24ba45a971569b9702e6bf78c5c07c48beb25464", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void checkHtml(DetailAST aAST, String[] aComment)", "signatureAfterChange": "     private void checkHtml(Comment aComment)", "diff": ["-    private void checkHtml(DetailAST aAST, String[] aComment)", "+    private void checkHtml(Comment aComment)", "-        final int lineno = aAST.getLineNo() - aComment.length;", "+        final int lineno = aComment.getFirstLineNo();", "+        final String[] text = aComment.getText();", "-        try {", "-            // Can throw NoSuchElementException when tokenizing encounters", "-            // \"<\" at end of aComment[i].", "-            parser = new TagParser(aComment, lineno);", "-        }", "-        catch (NoSuchElementException e) {", "-            log(lineno, \"javadoc.incompleteTag\", new Object[] {aComment[0]});", "-            return;", "-        }", "+        parser = new TagParser(text, lineno);", "-                    new Object[] {aComment[tag.getLineno() - lineno]});", "+                    new Object[] {text[tag.getLineno() - lineno]});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baf022f97c0ec81599fd38fd04855e84", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "e9cc31b2ecec62ef4e53ea576e29f25963f516e4", "commitAfterChange": "927ec62235d97ab741aae3954b9a771843df724c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void checkHtml(DetailAST aAST, String[] aComment)", "signatureAfterChange": "     private void checkHtml(DetailAST aAST, String[] aComment)", "diff": ["-            final TagParser parser = new TagParser(aComment[i], lineno + i);", "+            TagParser parser = null;", "+            try {", "+                // Can throw NoSuchElementException when tokenizing encounters", "+                // \"<\" at end of aComment[i].", "+                parser = new TagParser(aComment[i], lineno + i);", "+            }", "+            catch (NoSuchElementException e) {", "+                log(", "+                    lineno + i,", "+                    \"javadoc.incompleteTag\",", "+                    new Object[] {aComment[i]});", "+                return;", "+            }"]}]}