{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55e28395163a09c482ef745f5ae28da3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78ca1dc6f36270881a9b21af2111e7f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java", "commitBeforeChange": "791036b2f1597a793222ee500f6deec50f379111", "commitAfterChange": "9988d4d007b7d7b1417efc1e06de9309cb7c3e54", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected final int getLineStart(String line)", "signatureAfterChange": "     protected final int getLineStart(String line)", "diff": ["-        for (int start = 0; start < line.length(); start++) {", "-            final char c = line.charAt(start);", "-", "-            if (!Character.isWhitespace(c)) {", "-                return Utils.lengthExpandedTabs(", "-                    line, start, indentCheck.getIndentationTabWidth());", "-            }", "+        int index = 0;", "+        while (Character.isWhitespace(line.charAt(index))) {", "+            index++;", "-        return 0;", "+        return Utils.lengthExpandedTabs(", "+            line, index, indentCheck.getIndentationTabWidth());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1f8e8859ab66b57d5faa21fb6eb8c47", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "7347cc361b9251beb9f13acfbcb966f887925da5", "commitAfterChange": "661a9b0ddb10922458082573d79e0791ba6f38c2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected int getLineStart(String aLine)", "signatureAfterChange": "     protected final int getLineStart(String aLine)", "diff": ["-     */", "-    protected int getLineStart(String aLine)", "-    {", "-        for (int start = 0; start < aLine.length(); start++) {", "-            char c = aLine.charAt(start);", "-", "-            if (!Character.isWhitespace(c)) {", "-                return Utils.lengthExpandedTabs(", "-                    aLine, start, mIndentCheck.getIndentationTabWidth());", "-            }", "-        }", "-        return 0;", "-    }", "+     */", "+    protected final int getLineStart(String aLine)", "+    {", "+        for (int start = 0; start < aLine.length(); start++) {", "+            char c = aLine.charAt(start);", "+", "+            if (!Character.isWhitespace(c)) {", "+                return Utils.lengthExpandedTabs(", "+                    aLine, start, mIndentCheck.getIndentationTabWidth());", "+            }", "+        }", "+        return 0;", "+    }"]}]}