{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e452521be877deb37475d3505230a4b1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fbe84a43c75cd6f5f9c44260d2ec66f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/j2ee/MethodChecker.java", "commitBeforeChange": "91db1968e34b4f777ab146e37a827c20b35e5c52", "commitAfterChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void checkMethod(         DetailAST aMethodAST,         boolean aAllowFinal)", "signatureAfterChange": "     public void checkMethod(         DetailAST aMethodAST,         boolean aAllowFinal)", "diff": ["-            logName(aMethodAST, \"nonpublicmethod.bean\", new Object[] {});", "+            logName(aMethodAST, \"nonpublicmethod.bean\");", "-            logName(aMethodAST, \"illegalmodifiermethod.bean\",", "-                new Object[] {\"final\"});", "+            logName(aMethodAST, \"illegalmodifiermethod.bean\", \"final\");", "-            logName(aMethodAST, \"illegalmodifiermethod.bean\",", "-                new Object[] {\"static\"});", "+            logName(aMethodAST, \"illegalmodifiermethod.bean\", \"static\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d84736eae933b0a5d36fb3145f9506eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java", "commitBeforeChange": "15ccd9380664ab612e38446c47f8ee00e7ee880f", "commitAfterChange": "e21177aefee3694a53edd75b41c6c1760bf1301a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-                log(aAST, \"Constructor\");", "+                log(aAST, \"declaration.order.constructor\");", "-                log(aAST, \"Method\");", "+                log(aAST, \"declarationorder.method\");", "-                    log(aAST, \"Static variable\");", "+                    log(aAST, \"declaration.order.static\");", "-                    log(aAST, \"Instance variable\");", "+                    log(aAST, \"declaration.order.instance\");", "-                log(aAST, \"Variable access\");", "+                log(aAST, \"declaration.order.access\");"]}]}