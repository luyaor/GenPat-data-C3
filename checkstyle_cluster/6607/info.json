{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83716dc8d64fecf8b260cf53fd444a11", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4076be874756f8ab3138ecf7ee219698", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NestedForDepthCheck.java", "commitBeforeChange": "8ea8f96c0d6a70a8b9c9c1147d1c8a6d97345495", "commitAfterChange": "a07cae0aca9f9072256b3a5fd05779e8d69b9748", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-        if (TokenTypes.LITERAL_FOR == ast.getType()) {", "-            nestOut();", "-        }", "+        nestOut();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7310887f74a97482b2134e4442f78402", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "commitBeforeChange": "39ce82b920cf83358bf0c291e9ed826b5662c7e8", "commitAfterChange": "abe2b200312ee72aa552026b1a34e8bd72bfdc4e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["+", "+    @Override", "-        if (TokenTypes.CLASS_DEF == ast.getType()) {", "-            visitClassDef(ast);", "-        }", "+        visitClassDef(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9f299a257afd4e916996666bad5a98d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NestedForDepthCheck.java", "commitBeforeChange": "8ea8f96c0d6a70a8b9c9c1147d1c8a6d97345495", "commitAfterChange": "a07cae0aca9f9072256b3a5fd05779e8d69b9748", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (TokenTypes.LITERAL_FOR == ast.getType()) {", "-            nestIn(ast, MSG_KEY);", "-        }", "+        nestIn(ast, MSG_KEY);"]}]}