{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4013561785a5f791847ea566866e310a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ddacf7f3d64490896785fb3df343814", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java", "commitBeforeChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "commitAfterChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAllVariants() throws Exception", "signatureAfterChange": "      @Test     public void testAllVariants() throws Exception", "diff": ["+        final String pattern = \"^Abstract.+$|^.*Factory$\";", "+", "-            \"3:1: Name 'InputAbstractClassName' must match pattern '^Abstract.+$|^.*Factory$'.\",", "-            \"6:1: Name 'NonAbstractClassName' must match pattern '^Abstract.+$|^.*Factory$'.\",", "-            \"9:1: Name 'FactoryWithBadName' must match pattern '^Abstract.+$|^.*Factory$'.\",", "-            \"13:5: Name 'NonAbstractInnerClass' must match pattern '^Abstract.+$|^.*Factory$'.\",", "-            \"26:1: Class 'AbstractClass' must be declared as 'abstract'.\",", "-            \"29:1: Class 'Class1Factory' must be declared as 'abstract'.\",", "-            \"33:5: Class 'AbstractInnerClass' must be declared as 'abstract'.\",", "-            \"38:5: Class 'WellNamedFactory' must be declared as 'abstract'.\",", "+            \"3:1: \" + getCheckMessage(ILLEGAL_ABSTRACT_CLASS_NAME, \"InputAbstractClassName\", pattern),", "+            \"6:1: \" + getCheckMessage(ILLEGAL_ABSTRACT_CLASS_NAME, \"NonAbstractClassName\", pattern),", "+            \"9:1: \" + getCheckMessage(ILLEGAL_ABSTRACT_CLASS_NAME, \"FactoryWithBadName\", pattern),", "+            \"13:5: \" + getCheckMessage(ILLEGAL_ABSTRACT_CLASS_NAME, \"NonAbstractInnerClass\", pattern),", "+            \"26:1: \" + getCheckMessage(NO_ABSTRACT_CLASS_MODIFIER, \"AbstractClass\"),", "+            \"29:1: \" + getCheckMessage(NO_ABSTRACT_CLASS_MODIFIER, \"Class1Factory\"),", "+            \"33:5: \" + getCheckMessage(NO_ABSTRACT_CLASS_MODIFIER, \"AbstractInnerClass\"),", "+            \"38:5: \" + getCheckMessage(NO_ABSTRACT_CLASS_MODIFIER, \"WellNamedFactory\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8c310d468d9d5cdca957064ee123dbe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java", "commitBeforeChange": "fe07d99333284482aad4729ffd17bb94030a3ab4", "commitAfterChange": "3c0c72f96477afb542ee37b3336f4b7b7613ff29", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAllVariants() throws Exception", "signatureAfterChange": "      @Test     public void testAllVariants() throws Exception", "diff": ["-    //all variants", "-    public void testAllVariants() throws Exception {", "+    public void testAllVariants() throws Exception", "+    {", "-        final String[] expected = {", "-                \"3:1: Name 'InputAbstractClassName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-                \"6:1: Name 'NonAbstractClassName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-                \"9:1: Name 'FactoryWithBadName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-                \"13:5: Name 'NonAbstractInnerClass' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-                \"26:1: Class 'AbstractClass' must has abstract modifier.\",", "-                \"29:1: Class 'Class1Factory' must has abstract modifier.\",", "-                \"33:5: Class 'AbstractInnerClass' must has abstract modifier.\",", "-                \"38:5: Class 'WellNamedFactory' must has abstract modifier.\",", "-        };", "+", "+        final String[] expected = {", "+            \"3:1: Name 'InputAbstractClassName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "+            \"6:1: Name 'NonAbstractClassName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "+            \"9:1: Name 'FactoryWithBadName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "+            \"13:5: Name 'NonAbstractInnerClass' must match pattern '^Abstract.*$|^.*Factory$'.\",", "+            \"26:1: Class 'AbstractClass' must has abstract modifier.\",", "+            \"29:1: Class 'Class1Factory' must has abstract modifier.\",", "+            \"33:5: Class 'AbstractInnerClass' must has abstract modifier.\",", "+            \"38:5: Class 'WellNamedFactory' must has abstract modifier.\",};", "+"]}]}