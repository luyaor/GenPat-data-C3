{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ff7faf2cfdacca5ef210a78738bfbe6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c23381ede903ef371b30939ffd0c9ea2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java", "commitBeforeChange": "b30ed9fc87c0a74860cc355af259fc29f6d1b76f", "commitAfterChange": "a72e93613b8151d683fa83e5636212ed2f1413af", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static FilterSet loadSuppressions(String aFilename)         throws CheckstyleException", "signatureAfterChange": "     public static FilterSet loadSuppressions(String aFilename)         throws CheckstyleException", "diff": ["-            // check for the file in the classpath", "-            fis = SuppressionsLoader.class.getResourceAsStream(aFilename);", "-", "+            if (aFilename.matches(\"^https?://.+\")) {", "+                // this is a URL, load it as such", "+                try {", "+                    fis = new URL(aFilename).openStream();", "+                }", "+                catch (MalformedURLException e1) {", "+                    throw new CheckstyleException(", "+                        \"Invalid URL: \" + aFilename, e1);", "+                }", "+                catch (IOException e1) {", "+                    throw new CheckstyleException(", "+                        \"unable to read \" + aFilename, e1);", "+                }", "+            }", "+            else {", "+                // check for the file in the classpath", "+                fis = SuppressionsLoader.class.getResourceAsStream(aFilename);", "+            }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db4942dd0da4d9a480defb780edf81f0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "8a2f9d179f293099742b5883e36aaf3cb2c606a0", "commitAfterChange": "2df5874fc82ef6bbf8db66dafb3aec1e0caae19a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setProperties(File aProps)", "signatureAfterChange": "     public void setProperties(File aProps)", "diff": ["-        Properties mProperties = new Properties();", "+        final Properties mProperties = new Properties();", "-            mConfig = new Configuration(mProperties, System.out);", "-                \"Could not find Properties file '\" + aProps + \"'\",", "-                e, getLocation());", "+                    \"Could not find Properties file '\" + aProps + \"'\",", "+                    e, getLocation());", "-        catch (Exception e) {", "+        catch (IOException e) {", "-                \"Error loading Properties file '\" + aProps + \"'\",", "-                e, getLocation());", "+                    \"Error loading Properties file '\" + aProps + \"'\",", "+                    e, getLocation());", "+        }", "+", "+        try {", "+            mConfig = new Configuration(mProperties, System.out);", "+        }", "+        catch (RESyntaxException e) {", "+            throw new BuildException(", "+                    \"An regular expression error exists in '\" + aProps + \"'\",", "+                    e, getLocation());", "+        }", "+        catch (IOException e) {", "+            throw new BuildException(", "+                    \"An error loading the file '\" + e.getMessage() + \"'\",", "+                    e, getLocation());"]}]}