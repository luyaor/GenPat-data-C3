{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a0a97b62ce550fd615bf430c1b45af42", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f5d7a0c3efee4f2a61ae5a785294507", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public ParseTreeInfoPanel()", "signatureAfterChange": "     public ParseTreeInfoPanel()", "diff": ["-        DetailAST treeRoot = null;", "+        final DetailAST treeRoot = null;", "-        catch (TooManyListenersException ex)", "+        catch (final TooManyListenersException ex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d135aae901865ae82adb2d152064928", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "17c08660fa40c844057c33e2de04c67af41393b0", "commitAfterChange": "0989b5c3954e46b156bf5d2344327f650ddafc8d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public boolean hasIntersectionWithComment(int aStartLineNo,             int aStartColNo, int aEndLineNo, int aEndColNo)", "signatureAfterChange": "     public boolean hasIntersectionWithComment(int aStartLineNo,             int aStartColNo, int aEndLineNo, int aEndColNo)", "diff": ["-        for (List<TextBlock> row : values) {", "-            for (TextBlock comment : row) {", "+        for (final List<TextBlock> row : values) {", "+            for (final TextBlock comment : row) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "796ea87904c8751b01611530f16b4cb1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalThrowsCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(IllegalThrowsCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(IllegalThrowsCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}]}