{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aeb6c2424a09d0f4d0e8ede51264fb57", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61d3bf7ef7db1a47ae6b9e9463b9d38e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "9f93c2258ef0512b743f5927be201ff55a9d5c57", "commitAfterChange": "23c8774d2e2fd245de1e5df02758fd23702c565e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                brace = objBlock == null", "-                        ? null", "-                        : objBlock.getFirstChild();", "+                brace = objBlock;", "+", "+                if (objBlock != null) {", "+                    brace = objBlock.getFirstChild();", "+                }", "-                brace = candidate.getType() == TokenTypes.SLIST", "-                        ? candidate", "-                        : null; // silently ignore", "+                brace = null;", "+", "+                if (candidate.getType() == TokenTypes.SLIST) {", "+                    brace = candidate;", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fe7792acd1af66fab9aef862ddd3881", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java", "commitBeforeChange": "e21676f52f3d68294122244cea63b4ecbe92de8f", "commitAfterChange": "0f9490c4ab86e6df2cfe90db1ffe04e906a5edad", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 28, "signatureBeforeChange": "     private static DetailAST getPrevStatementWhenCommentIsUnderCase(DetailAST parentStatement)", "signatureAfterChange": "     private static DetailAST getPrevStatementWhenCommentIsUnderCase(DetailAST parentStatement)", "diff": ["-                prevStmt = blockBody.getFirstChild().getFirstChild();", "+                if (isUsingOfObjectReferenceToInvokeMethod(blockBody)) {", "+                    prevStmt = findStartTokenOfMethodCallChain(blockBody);", "+                }", "+                else {", "+                    prevStmt = blockBody.getFirstChild().getFirstChild();", "+                }", "-                prevStmt = blockBody;", "+                if (blockBody.getType() == TokenTypes.SLIST) {", "+                    prevStmt = blockBody.getParent().getParent();", "+                }", "+                else {", "+                    prevStmt = blockBody;", "+                }"]}]}