{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "07466bd669669614ceba72116eccebce", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "077a8314fee6ecdbcfb3efd7b0ce9160", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     static void remove(Component c, boolean recursive)", "signatureAfterChange": "     static void remove(Component c, boolean recursive)", "diff": ["-            for (int i = 0; i < comps.length; i++) {", "-                remove(comps[i], recursive);", "+            for (Component element : comps) {", "+                remove(element, recursive);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f42534b4cdd3d945c4d3036e060b884", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private Checker createChecker()", "signatureAfterChange": "     private Checker createChecker()", "diff": ["-            for (int i = 0; i < listeners.length; i++) {", "-                c.addListener(listeners[i]);", "+            for (AuditListener element : listeners) {", "+                c.addListener(element);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "646ae63fcce810c49e678cadd4c2da77", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static void traverse(File aNode, List<File> aFiles)", "signatureAfterChange": "     private static void traverse(File aNode, List<File> aFiles)", "diff": ["-                for (int i = 0; i < nodes.length; i++) {", "-                    traverse(nodes[i], aFiles);", "+                for (File element : nodes) {", "+                    traverse(element, aFiles);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88b6a8e075fa80a76c05a0c6438aac71", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected File[] scanFileSets()", "signatureAfterChange": "     protected File[] scanFileSets()", "diff": ["-            for (int j = 0; j < names.length; j++) {", "+            for (String element : names) {", "-                        + names[j];", "+                        + element;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c8169617359129891a09b2058df2f0f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "       public void openFile(File aFile, final Component aParent)", "signatureAfterChange": "       public void openFile(File aFile, final Component aParent)", "diff": ["-                for (int i = 0; i < sourceLines.length; i++) {", "-                    mJTextArea.append(sourceLines[i] + \"\\n\");", "+                for (String element : sourceLines) {", "+                    mJTextArea.append(element + \"\\n\");"]}]}