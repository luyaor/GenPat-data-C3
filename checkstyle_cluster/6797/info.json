{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61baf9d8bda350b6c2c61a4c49078e84", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "206a9341017731ed0b3c38c3d7c1909c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/VerifierImpl.java", "commitBeforeChange": "85a53ccdaf182d3d87d30006320f892b24087f35", "commitAfterChange": "517e2450caba6b5e492d8a94c19cb879bada3759", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setLines(String[] aLines)", "signatureAfterChange": "     public void setLines(String[] aLines)", "diff": ["-        // Iterate over the lines looking for long lines and tabs", "+        // Iterate over the lines looking for long lines and tabs.", "-            if (mLines[i].length() > mConfig.getMaxLineLength()) {", "+            // check for long line, but possibly allow imports", "+            if ((mLines[i].length() > mConfig.getMaxLineLength()) &&", "+                !(mConfig.isIgnoreImportLength() &&", "+                  mLines[i].trim().startsWith(\"import\")))", "+            {", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f83e31d1edcabd5cb8ca4c3e52fb3bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "83a1c2d3b34bd538da626562126e144cb5bb687d", "commitAfterChange": "f6c9d83def3c381d7485186b36e8c1d5e17a13ca", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     void setLines(String[] aLines)", "signatureAfterChange": "     void setLines(String[] aLines)", "diff": ["-            if ((mLines[i].length() > mConfig.getMaxLineLength()) &&", "-                !(mConfig.getIgnoreLineLengthRegexp().match(mLines[i])) &&", "+            String line = mLines[i];", "+            int realLength = Utils.lengthExpandedTabs(", "+                line, line.length(), mConfig.getTabWidth());", "+            if ((realLength > mConfig.getMaxLineLength()) &&", "+                !(mConfig.getIgnoreLineLengthRegexp().match(line)) &&", "-                  mLines[i].trim().startsWith(\"import\")))", "+                  line.trim().startsWith(\"import\")))"]}]}