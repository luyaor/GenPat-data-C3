{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00b4dee95deb85a0a9d481ae09e882c5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a47ae15ef15dbba1803640b81185aef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/OverloadMethodsDeclarationOrderCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "     @Test     public void testDefault() throws Exception", "diff": ["-            \"28: Overload methods should not be split. Previous overloaded method located at line '17'.\",", "-            \"56: Overload methods should not be split. Previous overloaded method located at line '45'.\",", "-            \"68: Overload methods should not be split. Previous overloaded method located at line '66'.\",", "-            \"111: Overload methods should not be split. Previous overloaded method located at line '100'.\",", "+            \"28: \" + getCheckMessage(MSG_KEY, 17),", "+            \"56: \" + getCheckMessage(MSG_KEY, 45),", "+            \"68: \" + getCheckMessage(MSG_KEY, 66),", "+            \"111: \" + getCheckMessage(MSG_KEY, 100),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aea897c764113230dc9f9fb5ac0752b7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIncorrectCustom() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrectCustom() throws Exception", "diff": ["-        final String tagOrder = \"'[@author, @version, @param, @return, @throws, @exception, @see,\"", "-                + \" @since, @serial, @serialField, @serialData, @deprecated]'.\";", "+        final String tagOrder = \"[@author, @version, @param, @return, @throws, @exception, @see,\"", "+                + \" @since, @serial, @serialField, @serialData, @deprecated]\";", "-            \"9: At-clauses have to appear in the order \" + tagOrder,", "-            \"11: At-clauses have to appear in the order \" + tagOrder,", "-            \"12: At-clauses have to appear in the order \" + tagOrder,", "-            \"115: At-clauses have to appear in the order \" + tagOrder,", "+            \"9: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"11: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"12: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"115: \" + getCheckMessage(MSG_KEY, tagOrder),"]}]}