{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de0dad056ebf9ce9996b48e7e1ace2b8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07a99f1bf10b6077466e4cc81d79d563", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/ParseTreeModel.java", "commitBeforeChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "commitAfterChange": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public Object getValueAt(Object node, int column)", "signatureAfterChange": "      public Object getValueAt(Object node, int column)", "diff": ["-                return new Integer(ast.getLineNo());", "+                return ast.getLineNo();", "-                return new Integer(ast.getColumnNo());", "+                return ast.getColumnNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e147f785eb2e160255f0cf86f5ff8f7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RegexpCheck.java", "commitBeforeChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "commitAfterChange": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "     @Override     public void beginTree(DetailAST aRootAST)", "diff": ["-                mCharacters.add(new Integer[] {", "-                    new Integer(i + 1), new Integer(j), });", "+                mCharacters.add(new Integer[] {i + 1, j});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b1c62cc232f4427fcb603415d8b7563", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheck.java", "commitBeforeChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "commitAfterChange": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void leaveMemberDef(DetailAST aAST)", "signatureAfterChange": "     private void leaveMemberDef(DetailAST aAST)", "diff": ["-            log(", "-                aAST.getLineNo(),", "-                aAST.getColumnNo(),", "-                \"executableStatementCount\",", "-                new Integer(count),", "-                new Integer(getMax()));", "+            log(aAST.getLineNo(), aAST.getColumnNo(),", "+                    \"executableStatementCount\", count, getMax());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cfc37ef5dd66fb404662f5d3a818c8f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java", "commitBeforeChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "commitAfterChange": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "         public void checkCount(DetailAST aAST)", "signatureAfterChange": "         public void checkCount(DetailAST aAST)", "diff": ["-                    \"booleanExpressionComplexity\",", "-                    new Integer(mCount),", "-                    new Integer(getMax()));", "+                    \"booleanExpressionComplexity\", mCount, getMax());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f69fbf6c86d88351c723e6ca4db6f91", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/AbstractNestedDepthCheck.java", "commitBeforeChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "commitAfterChange": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected final void nestIn(DetailAST aAST, String aMessageId)", "signatureAfterChange": "     protected final void nestIn(DetailAST aAST, String aMessageId)", "diff": ["-            log(aAST, aMessageId, new Integer(mDepth), new Integer(mMax));", "+            log(aAST, aMessageId, mDepth, mMax);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e7a402133c62edb0f5ba5ccbdb7ebed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheck.java", "commitBeforeChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "commitAfterChange": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "     @Override     public void beginTree(DetailAST aRootAST)", "diff": ["-            log(1, \"maxLen.file\",", "-                    new Integer(lines.length),", "-                    new Integer(mMaxFileLength));", "+            log(1, \"maxLen.file\", lines.length, mMaxFileLength);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80150dfb4d856f4eb038246f875af4db", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/IntRangeFilter.java", "commitBeforeChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "commitAfterChange": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public IntRangeFilter(int aLowerBound, int aUpperBound)", "signatureAfterChange": "     public IntRangeFilter(int aLowerBound, int aUpperBound)", "diff": ["-        mLowerBound = new Integer(aLowerBound);", "-        mUpperBound = new Integer(aUpperBound);", "+        mLowerBound = aLowerBound;", "+        mUpperBound = aUpperBound;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "888ceebe34ff91e94dfa8f0c86e899b3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "commitBeforeChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "commitAfterChange": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void visitLiteralThrows(DetailAST aAST)", "signatureAfterChange": "     private void visitLiteralThrows(DetailAST aAST)", "diff": ["-                new Integer(count), new Integer(getMax()));", "+                count, getMax());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5918c1670c4aa0462cfe2645426969c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "commitAfterChange": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     @Override     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "     @Override     public void finishTree(DetailAST aRootAST)", "diff": ["-                    new Integer(count), new Integer(mMethodMax));", "+                    count, mMethodMax);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb304f6ac2c7dc89fce1ff0db77f0723", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/AnonInnerLengthCheck.java", "commitBeforeChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "commitAfterChange": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     @Override     public void visitToken(DetailAST aAST)", "diff": ["-                log(aAST.getLineNo(),", "-                    aAST.getColumnNo(),", "-                    \"maxLen.anonInner\",", "-                    new Integer(length),", "-                    new Integer(mMax));", "+                log(aAST.getLineNo(), aAST.getColumnNo(), \"maxLen.anonInner\",", "+                        length, mMax);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c466591e0f3a31e6e87cd04dde128c90", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/MethodLengthCheck.java", "commitBeforeChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "commitAfterChange": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     @Override     public void visitToken(DetailAST aAST)", "diff": ["-                log(aAST.getLineNo(),", "-                    aAST.getColumnNo(),", "-                    \"maxLen.method\",", "-                    new Integer(length),", "-                    new Integer(mMax));", "+                log(aAST.getLineNo(), aAST.getColumnNo(), \"maxLen.method\",", "+                        length, mMax);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecd406a992311f2deacd380f3d8520a3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/RedundantImportCheck.java", "commitBeforeChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "commitAfterChange": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     @Override     public void visitToken(DetailAST aAST)", "diff": ["-                    log(aAST.getLineNo(),", "-                        aAST.getColumnNo(),", "-                        \"import.duplicate\",", "-                        new Integer(full.getLineNo()),", "-                        imp.getText());", "+                    log(aAST.getLineNo(), aAST.getColumnNo(),", "+                            \"import.duplicate\", full.getLineNo(),", "+                            imp.getText());", "-                    log(aAST.getLineNo(),", "-                        aAST.getColumnNo(),", "-                        \"import.duplicate\",", "-                        new Integer(full.getLineNo()),", "-                        imp.getText());", "+                    log(aAST.getLineNo(), aAST.getColumnNo(),", "+                        \"import.duplicate\", full.getLineNo(), imp.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f24e416f2f471c4a9d03e54f66bee8da", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "commitAfterChange": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "         public void checkCoupling()", "signatureAfterChange": "         public void checkCoupling()", "diff": ["-                log(mLineNo, mColumnNo, getLogMessageId(), new Integer(", "-                        mReferencedClassNames.size()), new Integer(getMax()),", "+                log(mLineNo, mColumnNo, getLogMessageId(),", "+                        mReferencedClassNames.size(), getMax(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa0cab6563084eedc846b6175d9d5fcf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/ReturnCountCheck.java", "commitBeforeChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "commitAfterChange": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "         public void checkCount(DetailAST aAST)", "signatureAfterChange": "         public void checkCount(DetailAST aAST)", "diff": ["-                    new Integer(mCount), new Integer(getMax()));", "+                    mCount, getMax());"]}]}