{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f1b77987bd3fdcf5c49a226768b4e100", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "086bee6f754300da8f8190dcd288cc63", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void processPackageDef(DetailAST aAST)", "signatureAfterChange": "     private void processPackageDef(DetailAST ast)", "diff": ["-    private void processPackageDef(DetailAST aAST)", "+    private void processPackageDef(DetailAST ast)", "-        final DetailAST packageNameAST = aAST.getLastChild()", "+        final DetailAST packageNameAST = ast.getLastChild()", "-        mPkgName = packageIdent.getText();", "+        pkgName = packageIdent.getText();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f581591e20f42130c1851241081ceb8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processClassDef(DetailAST aAST)", "signatureAfterChange": "     private void processClassDef(DetailAST ast)", "diff": ["-    private void processClassDef(DetailAST aAST)", "+    private void processClassDef(DetailAST ast)", "-        final DetailAST identToken = aAST.findFirstToken(TokenTypes.IDENT);", "+        final DetailAST identToken = ast.findFirstToken(TokenTypes.IDENT);", "-        mClassNames.add(className);", "+        classNames.add(className);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "402eff43c79601e49253946f7d7e0e26", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-    public void leaveToken(DetailAST aAST)", "+    public void leaveToken(DetailAST ast)", "-        switch (aAST.getType()) {", "+        switch (ast.getType()) {", "-            mScopeStates.pop();", "+            scopeStates.pop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c8488a2cb60922a3e2523fe335b43d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractTypeParameterNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     protected final boolean mustCheckName(DetailAST aAST)", "signatureAfterChange": "      @Override     protected final boolean mustCheckName(DetailAST ast)", "diff": ["-    protected final boolean mustCheckName(DetailAST aAST)", "+    protected final boolean mustCheckName(DetailAST ast)", "-            aAST.getParent().getParent();", "+            ast.getParent().getParent();", "-        return location.getType() == this.mLocation;", "+        return location.getType() == this.location;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6835c36cde16d32e8fb4acd5fc8a4426", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private boolean isExtendedClassNamedAsException(DetailAST aAST)", "signatureAfterChange": "     private boolean isExtendedClassNamedAsException(DetailAST ast)", "diff": ["-    private boolean isExtendedClassNamedAsException(DetailAST aAST)", "+    private boolean isExtendedClassNamedAsException(DetailAST ast)", "-        final DetailAST extendsClause = aAST.findFirstToken(TokenTypes.EXTENDS_CLAUSE);", "+        final DetailAST extendsClause = ast.findFirstToken(TokenTypes.EXTENDS_CLAUSE);", "-                return extendedClassName.matches(mExtendedClassNameFormat);", "+                return extendedClassName.matches(extendedClassNameFormat);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "808d7a73882102c968497d41090a3e31", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private boolean isInIgnoreOccurrenceContext(DetailAST aAST)", "signatureAfterChange": "     private boolean isInIgnoreOccurrenceContext(DetailAST ast)", "diff": ["-    private boolean isInIgnoreOccurrenceContext(DetailAST aAST)", "+    private boolean isInIgnoreOccurrenceContext(DetailAST ast)", "-        for (DetailAST token = aAST;", "+        for (DetailAST token = ast;", "-            if (mIgnoreOccurrenceContext.get(type)) {", "+            if (ignoreOccurrenceContext.get(type)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a2d213d2539d26b6d1d6f60a6184276", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean isCheckedMethod(DetailAST aAST)", "signatureAfterChange": "     private boolean isCheckedMethod(DetailAST ast)", "diff": ["-    private boolean isCheckedMethod(DetailAST aAST)", "+    private boolean isCheckedMethod(DetailAST ast)", "-            aAST.findFirstToken(TokenTypes.IDENT).getText();", "-        return !mIgnoredMethodNames.contains(methodName);", "+            ast.findFirstToken(TokenTypes.IDENT).getText();", "+        return !ignoredMethodNames.contains(methodName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae7d24b3de2021a09810e87d528c17d0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/InnerTypeLastCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-    public void leaveToken(DetailAST aAST)", "+    public void leaveToken(DetailAST ast)", "-        if (null == aAST.getParent()) {", "-            mRootClass = true;", "+        if (null == ast.getParent()) {", "+            rootClass = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc5fb15953c9eb8c0aadec6bde07b255", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void processPackage(DetailAST aAST)", "signatureAfterChange": "     private void processPackage(DetailAST ast)", "diff": ["-    private void processPackage(DetailAST aAST)", "+    private void processPackage(DetailAST ast)", "-        final DetailAST nameAST = aAST.getLastChild().getPreviousSibling();", "-        mPackageFullIdent = FullIdent.createFullIdent(nameAST);", "+        final DetailAST nameAST = ast.getLastChild().getPreviousSibling();", "+        packageFullIdent = FullIdent.createFullIdent(nameAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd3eb84f5699cc09741377bb43fbcd0d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractSuperCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-    public void leaveToken(DetailAST aAST)", "+    public void leaveToken(DetailAST ast)", "-        if (isOverridingMethod(aAST)) {", "+        if (isOverridingMethod(ast)) {", "-                mMethodStack.removeLast();", "+                methodStack.removeLast();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0e0bb43f75b69769145fe78c034566e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void processJavadoc(DetailAST aAST)", "signatureAfterChange": "     private void processJavadoc(DetailAST ast)", "diff": ["-    private void processJavadoc(DetailAST aAST)", "+    private void processJavadoc(DetailAST ast)", "-        final int lineNo = aAST.getLineNo();", "+        final int lineNo = ast.getLineNo();", "-            mReferenced.addAll(processJavadoc(cmt));", "+            referenced.addAll(processJavadoc(cmt));"]}]}