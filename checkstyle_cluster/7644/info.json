{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "956f187636ada16b44bbd9e53a1aaac5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b88e11d464c783f33e2266fcbb9e065", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ClassDefHandler.java", "commitBeforeChange": "343e946b076a5344e380c76e5b3ea23438b6fc93", "commitAfterChange": "e3a48d1527341456a798c3f0c1986de6898a8c60", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void checkIndentation()", "signatureAfterChange": "      @Override     public void checkIndentation()", "diff": ["-        // TODO: still need to better deal with the modifiers and \"class\"", "-        checkModifiers();", "+        final DetailAST modifiers = getMainAst().findFirstToken(TokenTypes.MODIFIERS);", "+        if (modifiers.getChildCount() == 0) {", "+            final DetailAST ident = getMainAst().findFirstToken(TokenTypes.IDENT);", "+            final int lineStart = getLineStart(ident);", "+            if (!getLevel().accept(lineStart)) {", "+                logError(ident, \"ident\", lineStart);", "+            }", "-        final LineSet lines = new LineSet();", "-", "-        // checks that line with class name starts at correct indentation,", "-        //  and following lines (in implements and extends clauses) are", "-        //  indented at least one level", "-        final DetailAST ident = getMainAst().findFirstToken(TokenTypes.IDENT);", "-        final int lineStart = getLineStart(ident);", "-        if (!getLevel().accept(lineStart)) {", "-            logError(ident, \"ident\", lineStart);", "+        }", "+        else {", "+            checkModifiers();", "-        lines.addLineAndCol(ident.getLineNo(), lineStart);", "-", "-        final DetailAST impl = getMainAst().findFirstToken(", "-            TokenTypes.IMPLEMENTS_CLAUSE);", "-        if ((impl != null) && (impl.getFirstChild() != null)) {", "-            findSubtreeLines(lines, impl, false);", "-        }", "-", "-        final DetailAST ext =", "-            getMainAst().findFirstToken(TokenTypes.EXTENDS_CLAUSE);", "-        if ((ext != null) && (ext.getFirstChild() != null)) {", "-            findSubtreeLines(lines, ext, false);", "-        }", "-", "-        checkLinesIndent(ident.getLineNo(), lines.lastLine(), getLevel());", "-", "+        final LineWrappingHandler lineWrap =", "+            new LineWrappingHandler(getIndentCheck(), getMainAst()) {", "+                @Override", "+                public DetailAST findLastNode(DetailAST aFirstNode)", "+                {", "+                    return aFirstNode.getLastChild();", "+                }", "+            };", "+        lineWrap.checkIndentation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b897c4e2164a4a0517540b555ea6b8d8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IndentationCheck.java", "commitBeforeChange": "bf6758b29dbb6f0e22d4951ea3bd25fdf45299fc", "commitAfterChange": "eaad55fdba73e17e103dc6600867f26fd6a3896b", "methodNumberBeforeChange": 152, "methodNumberAfterChange": 7, "signatureBeforeChange": "          public void checkIndentation()", "signatureAfterChange": "     public void indentationLog(int aLine, String aKey)", "diff": ["-", "-        public void checkIndentation() ", "-        {", "-", "-            // TODO: still need to better deal with the modifiers and \"class\"", "-            checkModifiers();", "-            ", "-            LineSet lines = new LineSet();", "-", "-            // checks that line with class name starts at correct indentation,", "-            //  and following lines (in implements and extends clauses) are ", "-            //  indented at least one level", "-            DetailAST ident = mMainAst.findFirstToken(TokenTypes.IDENT);", "-            int lineStart = getLineStart(ident);", "-            if (lineStart != getLevel()) {", "-                logError(ident, \"ident\", lineStart);", "-            }", "-", "-            lines.addLineAndCol(new Integer(ident.getLineNo()), lineStart);", "-            ", "-            DetailAST impl = mMainAst.findFirstToken(", "-                TokenTypes.IMPLEMENTS_CLAUSE);", "-            if (impl != null && impl.getFirstChild() != null) {", "-                findSubtreeLines(lines, impl, false);", "-            }", "-", "-            DetailAST ext = mMainAst.findFirstToken(TokenTypes.EXTENDS_CLAUSE);", "-            if (ext != null && ext.getFirstChild() != null) {", "-                findSubtreeLines(lines, ext, false);", "-            }", "-            ", "-            checkLinesIndent(ident.getLineNo(), lines.lastLine(), getLevel());", "-            ", "-            super.checkIndentation();", "-        }", "+     */", "+    public void indentationLog(int aLine, String aKey)", "+    {", "+        log(aLine, aKey);", "+    }"]}]}