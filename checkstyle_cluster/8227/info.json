{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e8bbf9bcc15c67943f080d649a91db8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1013c82341b3d961a68ecbf79b9710c5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "25603b312f6436a2518fdd8a32838c389837d992", "commitAfterChange": "3b3672d4694524ffe687d20e2be5970d4f85a26c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r     private void processEnd(DetailAST aAST)", "signatureAfterChange": "\r     private void processEnd(DetailAST aAST)", "diff": ["+\r", "-            // or a '(),'.\r", "+            // or a '(),[.'.\r", "-                if (!Character.isWhitespace(charAfter) && ('(' != charAfter)\r", "-                        && (')' != charAfter) && (',' != charAfter))\r", "+\r", "+                // Need to handle a number of cases. First is:\r", "+                //    Collections.<Object>emptySet();\r", "+                //                        ^\r", "+                //                        +--- whitespace not allowed\r", "+                if ((aAST.getParent().getType() == TokenTypes.TYPE_ARGUMENTS)\r", "+                    && (aAST.getParent().getParent().getType()\r", "+                        == TokenTypes.DOT)\r", "+                    && (aAST.getParent().getParent().getParent().getType()\r", "+                        == TokenTypes.METHOD_CALL))\r", "+                {\r", "+                    if (Character.isWhitespace(charAfter)) {\r", "+                        log(aAST.getLineNo(), after, \"ws.followed\", \">\");\r", "+                    }\r", "+                }\r", "+                else if (!Character.isWhitespace(charAfter)\r", "+                    && ('(' != charAfter) && (')' != charAfter)\r", "+                    && (',' != charAfter) && ('[' != charAfter)\r", "+                    && ('.' != charAfter))\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fc1f1d066d56d1a7972604ef1e8e344", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "c6edc74a2cf7a5e2c9affef6d0e1e931f783b462", "commitAfterChange": "e76ae6ed8d34160d87b490f5f3ee92f7ba74f5aa", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void processEnd(DetailAST aAST)", "signatureAfterChange": "     private void processEnd(DetailAST aAST)", "diff": ["-                // In a nested Generic type, so can only be a '>' or ','", "-                if ((line.charAt(after) != '>') && (line.charAt(after) != ','))", "+                // In a nested Generic type, so can only be a '>' or ',' or '&'", "+", "+                // In case of several extends definitions:", "+                //", "+                //   class IntEnumValueType<E extends Enum<E> & IntEnum>", "+                //                                          ^", "+                //   should be whitespace if followed by & -+", "+                //", "+                int indexOfAmp = line.indexOf('&', after);", "+                if ((indexOfAmp != -1) && whitespaceBetween(after, indexOfAmp, line))", "+                {", "+                    if (indexOfAmp - after == 0)", "+                    {", "+                        log(aAST.getLineNo(), after, \"ws.notPreceded\", \"&\");", "+                    }", "+                    else if (indexOfAmp - after != 1)", "+                    {", "+                        log(aAST.getLineNo(), after, \"ws.followed\", \">\");", "+                    }", "+                }", "+                else if ((line.charAt(after) != '>') && (line.charAt(after) != ','))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddf825898be2d8057786eaa1fb8fc451", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "b9f232ffe08853fbfd0239d53d683d4fe5c6b817", "commitAfterChange": "1bd30555eac039d0486dffb3fc43b7a34117909b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void processEnd(DetailAST ast)", "signatureAfterChange": "     private void processEnd(DetailAST ast)", "diff": ["-        if ((0 <= before) && Character.isWhitespace(line.charAt(before))", "+        if (0 <= before && Character.isWhitespace(line.charAt(before))", "-                if ((ast.getParent().getType() == TokenTypes.TYPE_ARGUMENTS)", "-                        && ((ast.getParent().getParent().getType()", "-                            == TokenTypes.DOT)", "-                        && (ast.getParent().getParent().getParent().getType()", "-                            == TokenTypes.METHOD_CALL))", "-                    || isAfterMethodReference(ast))", "+                if (ast.getParent().getType() == TokenTypes.TYPE_ARGUMENTS", "+                        && ast.getParent().getParent().getType()", "+                            == TokenTypes.DOT", "+                        && ast.getParent().getParent().getParent().getType()", "+                            == TokenTypes.METHOD_CALL", "+                        || isAfterMethodReference(ast))", "-                    && ('(' != charAfter) && (')' != charAfter)", "-                    && (',' != charAfter) && ('[' != charAfter)", "-                    && ('.' != charAfter) && (':' != charAfter)", "+                    && '(' != charAfter && ')' != charAfter", "+                    && ',' != charAfter && '[' != charAfter", "+                    && '.' != charAfter && ':' != charAfter", "-                if ((indexOfAmp != -1)", "+                if (indexOfAmp != -1"]}]}