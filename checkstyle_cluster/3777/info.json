{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e8054b75165fbf87677d3736c6bdb7a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4074af9715493235c97ba52d2ad02ad3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public final void configure(Configuration aConfiguration)         throws CheckstyleException", "signatureAfterChange": "     public final void configure(Configuration aConfiguration)         throws CheckstyleException", "diff": ["-        BeanUtilsBean beanUtils = createBeanUtilsBean();", "+        final BeanUtilsBean beanUtils = createBeanUtilsBean();", "-            catch (InvocationTargetException e) {", "+            catch (final InvocationTargetException e) {", "-            catch (IllegalAccessException e) {", "+            catch (final IllegalAccessException e) {", "-            catch (NoSuchMethodException e) {", "+            catch (final NoSuchMethodException e) {", "-            catch (IllegalArgumentException e) {", "+            catch (final IllegalArgumentException e) {", "-            catch (ConversionException e) {", "+            catch (final ConversionException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7decf2019e7f73555686f1f4b12dd576", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule712paragraphs/JavadocParagraphTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void javadocParagraphIncorrectTest() throws Exception", "signatureAfterChange": "      @Test     public void javadocParagraphIncorrectTest() throws Exception", "diff": ["-        String msgBefore = getCheckMessage(JavadocParagraphCheck.class, \"javadoc.paragraph.line.before\");", "-        String msgRed = getCheckMessage(JavadocParagraphCheck.class, \"javadoc.paragraph.redundant.paragraph\");", "-        String msgMisplaced = getCheckMessage(JavadocParagraphCheck.class, \"javadoc.paragraph.misplaced.tag\");", "+        final String msgBefore = getCheckMessage(JavadocParagraphCheck.class,", "+                \"javadoc.paragraph.line.before\");", "+        final String msgRed = getCheckMessage(JavadocParagraphCheck.class,", "+                \"javadoc.paragraph.redundant.paragraph\");", "+        final String msgMisplaced = getCheckMessage(JavadocParagraphCheck.class,", "+                \"javadoc.paragraph.misplaced.tag\");", "-        Configuration checkConfig = builder.getCheckConfig(\"JavadocParagraph\");", "-        String filePath = builder.getFilePath(\"InputIncorrectJavadocParagraphCheck\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"JavadocParagraph\");", "+        final String filePath = builder.getFilePath(\"InputIncorrectJavadocParagraphCheck\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}]}