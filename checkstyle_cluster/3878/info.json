{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "023a6330df8d388656b23e6c27c328a0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b51224c345cdb15cc57946bd7dc99113", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     @Test     public void testCompactDefault() throws Exception", "signatureAfterChange": "     @Test     public void testCompactDefault() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsCompact.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsCompact.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da87ca2196f04f30b868f9f318dace74", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     @Test     public void testGoodOverrideFromOtherJ5Compatible() throws Exception", "signatureAfterChange": "     @Test     public void testGoodOverrideFromOtherJ5Compatible() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"GoodOverrideFromOther.java\"), expected);", "+        verify(checkConfig, getPath(\"InputGoodOverrideFromOther.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7a824ab640e099cdbce10583403762b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testNullClassLoader() throws Exception", "signatureAfterChange": "      @Test     public void testNullClassLoader() throws Exception", "diff": ["-        File inputFile = new File(getNonCompilablePath(\"InputIllegalInstantiationCheckLang.java\"));", "+        File inputFile = new File(getNonCompilablePath(\"InputIllegalInstantiationLang.java\"));"]}]}