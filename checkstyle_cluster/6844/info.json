{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96e7a87c14025f7afc32c82366b6ce00", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1291bd4106087f916a518646c3416c86", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenTextCheck.java", "commitBeforeChange": "6e96026ec6d95fc5eadd3044cab91c24c73c8e0c", "commitAfterChange": "e00c478dd61d9d883e41b500b780ab217582c2e7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setMessage(String aMessage)", "signatureAfterChange": "     public void setMessage(String aMessage)", "diff": ["-        if (aMessage == null) {", "-            aMessage = \"\";", "-        }", "-        mMessage = aMessage;", "+        mMessage = (null == aMessage) ? \"\" : aMessage;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cf42216b957e464ed1c2858017229ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "8c8aabd141a702b163b01a59d841e305f753ea11", "commitAfterChange": "041413baf71060a96ec796b00e9b20cd7c3a33c4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DefaultLogger(         OutputStream aInfoStream,         boolean aCloseInfoAfterUse,         OutputStream aErrorStream,         boolean aCloseErrorAfterUse)", "signatureAfterChange": "     public DefaultLogger(OutputStream aInfoStream,                          boolean aCloseInfoAfterUse,                          OutputStream aErrorStream,                          boolean aCloseErrorAfterUse)", "diff": ["-    public DefaultLogger(", "-        OutputStream aInfoStream,", "-        boolean aCloseInfoAfterUse,", "-        OutputStream aErrorStream,", "-        boolean aCloseErrorAfterUse)", "+    public DefaultLogger(OutputStream aInfoStream,", "+                         boolean aCloseInfoAfterUse,", "+                         OutputStream aErrorStream,", "+                         boolean aCloseErrorAfterUse)", "-        if (aInfoStream == aErrorStream) {", "-            mErrorWriter = mInfoWriter;", "-        }", "-        else {", "-            mErrorWriter = new PrintWriter(aErrorStream);", "-        }", "+        mErrorWriter = (aInfoStream == aErrorStream)", "+            ? mInfoWriter", "+            : new PrintWriter(aErrorStream);"]}]}