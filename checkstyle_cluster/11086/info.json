{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ae32da52df9a8f8d677ecd82612d8592", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ebe38ce4d5f7e91122b066386a35f52", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheck.java", "commitBeforeChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "commitAfterChange": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static String getAnnotationName(DetailAST annotation)", "signatureAfterChange": "     private static String getAnnotationName(DetailAST annotation)", "diff": ["-        DetailAST idenNode = annotation.findFirstToken(TokenTypes.IDENT);", "-        if (idenNode == null) {", "-            idenNode = annotation.findFirstToken(TokenTypes.DOT).findFirstToken(TokenTypes.IDENT);", "+        DetailAST identNode = annotation.findFirstToken(TokenTypes.IDENT);", "+        if (identNode == null) {", "+            identNode = annotation.findFirstToken(TokenTypes.DOT).findFirstToken(TokenTypes.IDENT);", "-        return idenNode.getText();", "+        return identNode.getText();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2441c51a90757013e7b19221d0893372", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PackageNamesLoaderTest.java", "commitBeforeChange": "5dffb5a301b2605c730d1de3f312ba4a7f95355e", "commitAfterChange": "4d8d047f465f9eb101390da63ee62a735fbedba5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testPackagesWithSaxException() throws Exception", "signatureAfterChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testPackagesWithSaxException() throws Exception", "diff": ["-        Enumeration<URL> enumer = (Enumeration<URL>) mock(Enumeration.class);", "-        when(enumer.hasMoreElements()).thenReturn(true);", "-        when(enumer.nextElement()).thenReturn(url);", "+        Enumeration<URL> enumeration = (Enumeration<URL>) mock(Enumeration.class);", "+        when(enumeration.hasMoreElements()).thenReturn(true);", "+        when(enumeration.nextElement()).thenReturn(url);", "-        when(classLoader.getResources(\"checkstyle_packages.xml\")).thenReturn(enumer);", "+        when(classLoader.getResources(\"checkstyle_packages.xml\")).thenReturn(enumeration);"]}]}