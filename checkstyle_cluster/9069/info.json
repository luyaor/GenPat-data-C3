{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aefecccbf5a612b1ea53750247cc1433", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04f6bff4a6b84314391031c766f2d107", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceBeforeCheckTest.java", "commitBeforeChange": "35e4a41c1027d5078cbaf0d3988a21c12a2daf7e", "commitAfterChange": "e55435125ea57e96f0bf876dd13e78b0ae02cd52", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testDot() throws Exception", "signatureAfterChange": "      public void testDot() throws Exception", "diff": ["-            \"5:12: '.' is preceeded with whitespace.\",", "-            \"6:4: '.' is preceeded with whitespace.\",", "-            \"129:17: '.' is preceeded with whitespace.\",", "-            \"135:12: '.' is preceeded with whitespace.\",", "-            \"136:10: '.' is preceeded with whitespace.\",", "+            \"5:12: '.' is preceded with whitespace.\",", "+            \"6:4: '.' is preceded with whitespace.\",", "+            \"129:17: '.' is preceded with whitespace.\",", "+            \"135:12: '.' is preceded with whitespace.\",", "+            \"136:10: '.' is preceded with whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e639e21bd3828d2895d473b952ec073", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "f8a53831f0fa98f317ea7dbc6490b5e91b6cc5d9", "commitAfterChange": "5703b6e33550d6e9706f42e253c2cc7d83a358bf", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void testRelaxedJavadoc()         throws Exception", "signatureAfterChange": "     public void testRelaxedJavadoc()         throws Exception", "diff": ["-            filepath + \":7: type is missing a Javadoc comment.\",", "+            filepath + \":7: Missing a Javadoc comment.\",", "-            filepath + \":59:5: method is missing a Javadoc comment.\",", "-            filepath + \":64:5: method is missing a Javadoc comment.\",", "-            filepath + \":79:5: method is missing a Javadoc comment.\",", "-            filepath + \":84:5: method is missing a Javadoc comment.\"", "+            filepath + \":59:5: Missing a Javadoc comment.\",", "+            filepath + \":64:5: Missing a Javadoc comment.\",", "+            filepath + \":79:5: Missing a Javadoc comment.\",", "+            filepath + \":84:5: Missing a Javadoc comment.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a3228345e61d2e5a1e4e40c9f348f31", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeParameterNameTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testMethodDefault()         throws Exception", "signatureAfterChange": "      @Test     public void testMethodDefault()         throws Exception", "diff": ["-            \"5:13: Name 'TT' must match pattern '^[A-Z]$'.\",", "-            \"7:6: Name 'e_e' must match pattern '^[A-Z]$'.\",", "-            \"17:6: Name 'Tfo$o2T' must match pattern '^[A-Z]$'.\",", "-            \"21:6: Name 'foo' must match pattern '^[A-Z]$'.\",", "-            \"26:10: Name '_fo' must match pattern '^[A-Z]$'.\",", "+            \"7:13: Name 'TT' must match pattern '^[A-Z]$'.\",", "+            \"9:6: Name 'e_e' must match pattern '^[A-Z]$'.\",", "+            \"19:6: Name 'Tfo$o2T' must match pattern '^[A-Z]$'.\",", "+            \"23:6: Name 'foo' must match pattern '^[A-Z]$'.\",", "+            \"28:10: Name '_fo' must match pattern '^[A-Z]$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41a0b86786093a72e3a54e08aa07ae33", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "acc3f40015ffe1263cfa684ca4b29939249e9aed", "commitAfterChange": "c2b22a74a2e85bbb2cfd4e0e2379bb062cb58dd1", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "      public void testSemantic2()         throws Exception", "signatureAfterChange": "      public void testSemantic2()         throws Exception", "diff": ["-            filepath + \":51:65: Empty catch block.\",", "-            filepath + \":71:52: Empty catch block.\",", "-            filepath + \":72:45: Empty catch block.\",", "-            filepath + \":74:13: Empty try block.\",", "-            filepath + \":76:17: Empty finally block.\",", "+            filepath + \":52:65: Empty catch block.\",", "+            filepath + \":72:52: Empty catch block.\",", "+            filepath + \":73:45: Empty catch block.\",", "+            filepath + \":75:13: Empty try block.\",", "+            filepath + \":77:17: Empty finally block.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5786c8d83950b53fc54baeb69aa217b3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/usage/UnusedPrivateFieldCheckTest.java", "commitBeforeChange": "5f6970f2542204e3f23ac0466f81d9dc981cd3f5", "commitAfterChange": "5efa04e1bbcb5e90f72296f68534f2e626850ceb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDefault() throws Exception", "signatureAfterChange": "     public void testDefault() throws Exception", "diff": ["-            \"10:17: Unused field 'mUnreadPrimitive'.\",", "-            \"16:19: Unused field 'mUnreadArray'.\",", "-            \"20:17: Unused field 'mUnused2'.\",", "-            \"22:30: Unused field 'SUNUSED'.\",", "-            \"64:17: Unused field 'mUnused'.\",           ", "+            \"10:17: Unused private field 'mUnreadPrimitive'.\",", "+            \"16:19: Unused private field 'mUnreadArray'.\",", "+            \"20:17: Unused private field 'mUnused2'.\",", "+            \"22:30: Unused private field 'SUNUSED'.\",", "+            \"64:17: Unused private field 'mUnused'.\",           "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "641747c87915c1d14403dcc08cbe9b65", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheckTest.java", "commitBeforeChange": "61f8aaca7bcb8750909bcc95eb5c27c72c7d824d", "commitAfterChange": "bf529ef600fa9ef2034d0412c198b2121f2b94f2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testText()         throws Exception", "signatureAfterChange": "      @Test     public void testText()         throws Exception", "diff": ["-            \"75:13: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"try\"),", "-            \"77:17: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"finally\"),", "-            \"178:5: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"INSTANCE_INIT\"),", "-            \"206:29: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"synchronized\"),", "-            \"219:12: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"STATIC_INIT\"),", "+            \"33:13: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"try\"),", "+            \"35:17: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"finally\"),", "+            \"63:5: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"INSTANCE_INIT\"),", "+            \"71:29: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"synchronized\"),", "+            \"84:12: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"STATIC_INIT\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65e0e6a99b2318c42d9fbaf93265e9cc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWarningsFilterTest.java", "commitBeforeChange": "238bacaf90133590ea029a4ac4e2b27d97eb7bc3", "commitAfterChange": "2b41a0b5a3c2200ce6b500831196f23b036e48ee", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-            \"23:17: Name 'J' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            \"28:17: Name 'L' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            \"32:30: Name 'm' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\",", "-            \"38:17: More than 7 parameters (found 8).\",", "-            \"55:9: Catching 'Exception' is not allowed.\",", "+            \"24:17: Name 'J' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "+            \"29:17: Name 'L' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "+            \"33:30: Name 'm' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\",", "+            \"39:17: More than 7 parameters (found 8).\",", "+            \"56:9: Catching 'Exception' is not allowed.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67bc7d31c236ab2a7c0d61e4010bc833", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "dc764f3b6ad475854cd0d22655db3f96e7eb7ed3", "commitAfterChange": "a1cecb5e0658862f957e60a8d5b2ade13b592101", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void testTags()         throws Exception", "signatureAfterChange": "      public void testTags()         throws Exception", "diff": ["-            filepath + \":11: variable 'mMissingJavadoc' missing Javadoc.\",", "+            filepath + \":11:17: variable 'mMissingJavadoc' missing Javadoc.\",", "-            filepath + \":40: Expected @throws tag for 'Exception'.\",", "-            filepath + \":49: Expected @throws tag for 'Exception'.\",", "+            filepath + \":40:16: Expected @throws tag for 'Exception'.\",", "+            filepath + \":49:16: Expected @throws tag for 'Exception'.\",", "-            filepath + \":55: Expected @throws tag for 'Exception'.\",", "-            filepath + \":55: Expected @throws tag for 'NullPointerException'.\",", "+            filepath + \":55:16: Expected @throws tag for 'Exception'.\",", "+            filepath + \":55:27: Expected @throws tag for 'NullPointerException'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c783a5f7738f12ecebd057e8cb3e77b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheckTest.java", "commitBeforeChange": "adc04337ea44d4e6b0ff8ec5efedd11ecd263646", "commitAfterChange": "829cb74749cc8233e5052839067f5dc1c9be61ae", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void test() throws Exception", "signatureAfterChange": "     public void test() throws Exception", "diff": ["-            \"27:5: Cyclomatic Complexity is 4 (max allowed is 0).\",", "-            \"34:5: Cyclomatic Complexity is 6 (max allowed is 0).\",", "-            \"48:5: Cyclomatic Complexity is 4 (max allowed is 0).\",", "-            \"58:5: Cyclomatic Complexity is 4 (max allowed is 0).\",", "-            \"67:5: Cyclomatic Complexity is 4 (max allowed is 0).\",", "+            \"27:5: Cyclomatic Complexity is 3 (max allowed is 0).\",", "+            \"34:5: Cyclomatic Complexity is 5 (max allowed is 0).\",", "+            \"48:5: Cyclomatic Complexity is 3 (max allowed is 0).\",", "+            \"58:5: Cyclomatic Complexity is 3 (max allowed is 0).\",", "+            \"67:5: Cyclomatic Complexity is 3 (max allowed is 0).\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87fb439297ba084580811b7e9a8b13a6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "85221f6a4054191749796c207ce223be73cff163", "commitAfterChange": "d0a19311e37764cde921c38a618691aa340d252e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-            \"20: 'import' should be separated from previous statement.\",", "-            \"33: 'CLASS_DEF' should be separated from previous statement.\",", "-            \"36: 'VARIABLE_DEF' should be separated from previous statement.\",", "-            \"37: 'STATIC_INIT' should be separated from previous statement.\",", "-            \"75: 'INTERFACE_DEF' should be separated from previous statement.\",", "+            \"21: 'import' should be separated from previous statement.\",", "+            \"35: 'CLASS_DEF' should be separated from previous statement.\",", "+            \"38: 'VARIABLE_DEF' should be separated from previous statement.\",", "+            \"39: 'STATIC_INIT' should be separated from previous statement.\",", "+            \"77: 'INTERFACE_DEF' should be separated from previous statement.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f7386e5bad5e6e277ecb941a6b1f8a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      @Test     public void test_generics_1() throws Exception", "signatureAfterChange": "      @Test     public void test_generics_1() throws Exception", "diff": ["-            \"15:34: Expected @throws tag for 'RE'.\",", "-            \"31:13: Expected @param tag for '<NPE>'.\",", "-            \"38:12: Unused @throws tag for 'E'.\",", "-            \"41:38: Expected @throws tag for 'RuntimeException'.\",", "-            \"42:13: Expected @throws tag for 'java.lang.RuntimeException'.\",", "+            \"17:34: Expected @throws tag for 'RE'.\",", "+            \"33:13: Expected @param tag for '<NPE>'.\",", "+            \"40:12: Unused @throws tag for 'E'.\",", "+            \"43:38: Expected @throws tag for 'RuntimeException'.\",", "+            \"44:13: Expected @throws tag for 'java.lang.RuntimeException'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a25d9485fd278e8427f5926d6e2f0fa5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d92ceb81a67bb10b98f5ce305f839ba535a1c6ee", "commitAfterChange": "9aa8268e473071cbe26aa9d3a8631f1902e3fef0", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void testRelaxedJavadoc()         throws Exception", "signatureAfterChange": "     public void testRelaxedJavadoc()         throws Exception", "diff": ["-            filepath + \":44:9: variable 'mLen' must be private and have accessor methods.\",", "-            filepath + \":45:19: variable 'mDeer' missing Javadoc.\",", "-            filepath + \":45:19: variable 'mDeer' must be private and have accessor methods.\",", "-            filepath + \":46:16: variable 'aFreddo' missing Javadoc.\",", "-            filepath + \":46:16: variable 'aFreddo' must be private and have accessor methods.\",", "+            filepath + \":44:9: Variable 'mLen' must be private and have accessor methods.\",", "+            filepath + \":45:19: Variable 'mDeer' missing Javadoc.\",", "+            filepath + \":45:19: Variable 'mDeer' must be private and have accessor methods.\",", "+            filepath + \":46:16: Variable 'aFreddo' missing Javadoc.\",", "+            filepath + \":46:16: Variable 'aFreddo' must be private and have accessor methods.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d84736eae933b0a5d36fb3145f9506eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java", "commitBeforeChange": "15ccd9380664ab612e38446c47f8ee00e7ee880f", "commitAfterChange": "e21177aefee3694a53edd75b41c6c1760bf1301a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-                log(aAST, \"Constructor\");", "+                log(aAST, \"declaration.order.constructor\");", "-                log(aAST, \"Method\");", "+                log(aAST, \"declarationorder.method\");", "-                    log(aAST, \"Static variable\");", "+                    log(aAST, \"declaration.order.static\");", "-                    log(aAST, \"Instance variable\");", "+                    log(aAST, \"declaration.order.instance\");", "-                log(aAST, \"Variable access\");", "+                log(aAST, \"declaration.order.access\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfc94be371eabfe9240e53d560e33833", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/RedundantImportCheckTest.java", "commitBeforeChange": "404fcfba9c9f1e00e241c0f220781d944a07ce78", "commitAfterChange": "768664d6542ae719b014206b36619e4d180eed32", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testWithChecker()         throws Exception", "signatureAfterChange": "      public void testWithChecker()         throws Exception", "diff": ["-            \"7:1: Redundant import from the same package.\",", "-            \"8:38: Redundant import from the same package.\",", "-            \"10:1: Redundant import from the java.lang package.\",", "-            \"11:1: Redundant import from the java.lang package.\",", "-            \"14:1: Duplicate import to line 13.\",", "+            \"7:1: Redundant import from the same package - com.puppycrawl.tools.checkstyle.*.\",", "+            \"8:38: Redundant import from the same package - com.puppycrawl.tools.checkstyle.Configuration.\",", "+            \"10:1: Redundant import from the java.lang package - java.lang.*.\",", "+            \"11:1: Redundant import from the java.lang package - java.lang.String.\",", "+            \"14:1: Duplicate import to line 13 - java.util.List.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4ff45ca17db54eafa83d47cfafcc9c8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      @Test     public void test_generics_2() throws Exception", "signatureAfterChange": "      @Test     public void test_generics_2() throws Exception", "diff": ["-            \"15:34: Expected @throws tag for 'RE'.\",", "-            \"31:13: Expected @param tag for '<NPE>'.\",", "-            \"38:12: Unused @throws tag for 'E'.\",", "-            \"41:38: Expected @throws tag for 'RuntimeException'.\",", "-            \"42:13: Expected @throws tag for 'java.lang.RuntimeException'.\",", "+            \"17:34: Expected @throws tag for 'RE'.\",", "+            \"33:13: Expected @param tag for '<NPE>'.\",", "+            \"40:12: Unused @throws tag for 'E'.\",", "+            \"43:38: Expected @throws tag for 'RuntimeException'.\",", "+            \"44:13: Expected @throws tag for 'java.lang.RuntimeException'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecadb5b2a7cb02f3e31232c43057b6f6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "dc764f3b6ad475854cd0d22655db3f96e7eb7ed3", "commitAfterChange": "a1cecb5e0658862f957e60a8d5b2ade13b592101", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public void testRelaxedJavadoc()         throws Exception", "signatureAfterChange": "     public void testRelaxedJavadoc()         throws Exception", "diff": ["-            filepath + \":44: variable 'mLen' must be private and have accessor methods.\",", "-            filepath + \":45: variable 'mDeer' missing Javadoc.\",", "-            filepath + \":45: variable 'mDeer' must be private and have accessor methods.\",", "-            filepath + \":46: variable 'aFreddo' missing Javadoc.\",", "-            filepath + \":46: variable 'aFreddo' must be private and have accessor methods.\",", "+            filepath + \":44:9: variable 'mLen' must be private and have accessor methods.\",", "+            filepath + \":45:19: variable 'mDeer' missing Javadoc.\",", "+            filepath + \":45:19: variable 'mDeer' must be private and have accessor methods.\",", "+            filepath + \":46:16: variable 'aFreddo' missing Javadoc.\",", "+            filepath + \":46:16: variable 'aFreddo' must be private and have accessor methods.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0a286ddf355c169760f9f594bcc5ade", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsTest.java", "commitBeforeChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "commitAfterChange": "fdc81723bdfd6af2ffc2c901cd8dd5b2fe948267", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r     @Test\r     public void testSingleNoUncheckedUnusedAll() throws Exception", "signatureAfterChange": "\r     @Test\r     public void testSingleNoUncheckedUnusedAll() throws Exception", "diff": ["-            \"82:37: The warning 'unchecked' cannot be suppressed at this location.\",\r", "-            \"82:83: The warning '' cannot be suppressed at this location.\",\r", "-            \"82:88: The warning 'foo' cannot be suppressed at this location.\",\r", "-            \"82:96: The warning '    ' cannot be suppressed at this location.\",\r", "-            \"82:105: The warning 'unused' cannot be suppressed at this location.\",\r", "+            \"82:47: The warning 'unchecked' cannot be suppressed at this location.\",\r", "+            \"82:93: The warning '' cannot be suppressed at this location.\",\r", "+            \"82:98: The warning 'foo' cannot be suppressed at this location.\",\r", "+            \"82:106: The warning '    ' cannot be suppressed at this location.\",\r", "+            \"82:115: The warning 'unused' cannot be suppressed at this location.\",\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fadb1d7037e1558ca1750fa8ce876761", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "b2cca2d5e91425cfe52c1c59cc8aa907a2e766df", "commitAfterChange": "6d20b67e0f1bfedc2132a887257d72edde4c857b", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "      @Test     public void testExistingDirectoryWithViolations() throws Exception", "signatureAfterChange": "      @Test     public void testExistingDirectoryWithViolations() throws Exception", "diff": ["-            {\"JavaNCSSCheckTestInput\", \"1\", \"84\"},", "+            {\"ComplexityOverflow\", \"1\", \"172\"},", "-                        + \"/src/test/resources/com/puppycrawl/tools/checkstyle/metrics/\"", "+                        + \"/src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/\"", "-                String format = \"%s.java:%s: warning: File length is %s lines (max allowed is 80).\";", "+                String format = \"%s.java:%s: warning: File length is %s lines (max allowed is 170).\";", "-            \"src/test/resources/com/puppycrawl/tools/checkstyle/metrics/\");", "+            \"src/test/resources/com/puppycrawl/tools/checkstyle/checks/metrics/\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd1cf283cb2a3da0d7ba4ed42f012821", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsTest.java", "commitBeforeChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "commitAfterChange": "fdc81723bdfd6af2ffc2c901cd8dd5b2fe948267", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r     @Test\r     public void testSingleAll() throws Exception", "signatureAfterChange": "\r     @Test\r     public void testSingleAll() throws Exception", "diff": ["-            \"82:37: The warning 'unchecked' cannot be suppressed at this location.\",\r", "-            \"82:83: The warning '' cannot be suppressed at this location.\",\r", "-            \"82:88: The warning 'foo' cannot be suppressed at this location.\",\r", "-            \"82:96: The warning '    ' cannot be suppressed at this location.\",\r", "-            \"82:105: The warning 'unused' cannot be suppressed at this location.\",\r", "+            \"82:47: The warning 'unchecked' cannot be suppressed at this location.\",\r", "+            \"82:93: The warning '' cannot be suppressed at this location.\",\r", "+            \"82:98: The warning 'foo' cannot be suppressed at this location.\",\r", "+            \"82:106: The warning '    ' cannot be suppressed at this location.\",\r", "+            \"82:115: The warning 'unused' cannot be suppressed at this location.\",\r"]}]}