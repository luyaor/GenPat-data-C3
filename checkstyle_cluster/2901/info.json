{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24fab992710dce4dc37da70e49fcfb61", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40dcfe56da2d66e888b2472a54fa0159", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "230d434a1933305dd893713aa6d73a5e0953a03f", "commitAfterChange": "4d769d48f134d2e7d40111763e29f0870c9a7db5", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 21, "signatureBeforeChange": "      private ClassLoader getClassLoader()", "signatureAfterChange": "      private String[] getPackageNames()         throws CheckstyleException", "diff": ["-", "-    private ClassLoader getClassLoader()", "-    {", "-        return mLoader;", "+    private String[] getPackageNames()", "+        throws CheckstyleException", "+    {", "+        if (mPackageNames == null) {", "+            mPackageNames =", "+                PackageNamesLoader.loadPackageNames(", "+                    getClass().getClassLoader());", "+        }", "+        return mPackageNames;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb3ef28439346a2828b6b7dbcf56bc5c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "a4ce4c6bb4714ff0b51d071509d2683d9e623a36", "commitAfterChange": "2debda611fe487021711aa4acce56651799a778f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws BuildException", "diff": ["-                final GlobalProperties config = createGlobalProperties();", "-                final CheckConfiguration[] checkConfigs =", "-                    ConfigurationLoader.loadConfigs(", "-                        mConfigFile.getAbsolutePath());", "-                c = new Checker(config, checkConfigs);", "+                final Properties props = createOverridingProperties();", "+                final Configuration config =", "+                    ConfigurationLoader.loadConfiguration(", "+                        mConfigFile.getAbsolutePath(), props);", "+                config.setClassLoader(new AntClassLoader(getProject(),", "+                                      mClasspath));", "+                c = new Checker(config);"]}]}