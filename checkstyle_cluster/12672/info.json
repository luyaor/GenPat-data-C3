{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9061c0556e41bf66df4f460e2d31f27a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e3b863cd1c2913a971958ff08fc321c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java", "commitBeforeChange": "28c5d6f06244f45a5673a3ef5bd0d927b0042496", "commitAfterChange": "a5d30bf353dde01376d45fb031d9236b11a835d1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(final DetailAST aAST)", "signatureAfterChange": "     public void visitToken(final DetailAST aAST)", "diff": ["-                mCurrentLeaf = mRoot.locateFinest(full.getText());", "+                mInPkg = full.getText();", "+                mCurrentLeaf = mRoot.locateFinest(mInPkg);", "-            final AccessResult access = mCurrentLeaf.checkAccess(imp.getText());", "+            final AccessResult access = mCurrentLeaf.checkAccess(imp.getText(),", "+                    mInPkg);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9197b42882f6eb702ad5b70b0039212c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "ba60fc038fcea18546b532064596149bcd5effe2", "commitAfterChange": "139609ac5d073ecb04381466f075f174b0aec8c9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setGroups(String[] aGroups)", "signatureAfterChange": "     public void setGroups(String[] aGroups)", "diff": ["+        // set the default wildcard group to be after the last named group.", "+        mWildcardGroupIndex = aGroups.length;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c64f5ded4857050341ef6d7d97bb1d68", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "9acdd1b97e561748ae8cc61e11dcc145885ecb6d", "commitAfterChange": "c617457933a978f5fd861d7ea43d05bccf045c16", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public int process(String[] aFiles)", "signatureAfterChange": "     public int process(String[] aFiles)", "diff": ["-        for (int i = 0; i < aFiles.length; i++) {", "+", "+        /*", "+", "+          If you move checkPackageHtml() around beware of the caching", "+          functionality of checkstyle. Make sure that package.html", "+          checks are not skipped because of caching. Otherwise you", "+          might e.g. have a package.html file, check all java files", "+          without errors, delete package.html and then recheck without", "+          errors because the html file is not covered by the cache.", "+", "+        */", "+", "+        total += checkPackageHtml(aFiles);", "+        ", "+        for (int i = 0; i < aFiles.length; i++)", "+        {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbd9be02c2551fc520a0a8a8202def73", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "dc4e97d024fea774cecfd8d9501bf3dac4faf45c", "commitAfterChange": "6a9e1b3f93b487b86be7def11a0c9880f01ac29f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public LineWrappingHandler(IndentationCheck aInstance, DetailAST aFirstNode)", "signatureAfterChange": "     public LineWrappingHandler(IndentationCheck aInstance, DetailAST aFirstNode)", "diff": ["+        mForceStrictCondition = mIndentCheck.getForceStrictCondition();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daf506de8b4c0eb2233b61962e4c006b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/MyModifierSet.java", "commitBeforeChange": "dc764f3b6ad475854cd0d22655db3f96e7eb7ed3", "commitAfterChange": "a1cecb5e0658862f957e60a8d5b2ade13b592101", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     void addModifier(MyCommonAST aMCA)", "signatureAfterChange": "     void addModifier(MyCommonAST aMCA)", "diff": ["+            mFirstColNo = aMCA.getColumnNo();"]}]}