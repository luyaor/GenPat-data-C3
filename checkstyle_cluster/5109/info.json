{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a219602c5470ee8efd445ad647062884", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4878b8039b0821409611e2acbefc4b89", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 58, "signatureBeforeChange": "      @Test     public void testInvalidAssignWithChecker() throws Exception", "signatureAfterChange": "      @Test     public void testInvalidAssignWithChecker() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputInvalidAssignIndent.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputInvalidAssignIndent.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "768f968d63a0a71534f4830e62246c5b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testWithOneArgWithoutParenthesesWithoutTypeOneLineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithoutParenthesesWithoutTypeOneLineBody()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest10.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda10.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95c88733bd4a4aab0aba5b9f65c5a6f0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 31, "signatureBeforeChange": "      @Test     public void testValidMethodWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testValidMethodWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputValidMethodIndent.java\");", "+        final String fname = getPath(\"InputValidMethodIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b14b5ab2eef11326cfb3b9ede5ff8c62", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testWithOneArgWithoutTypeOneLineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithoutTypeOneLineBody()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest6.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda6.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1c73677c7c600cae63e4276fd215761", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputComplexityCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputComplexity.java\"), expected);"]}]}