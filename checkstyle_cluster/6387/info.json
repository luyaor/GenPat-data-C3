{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1670b0eb02499d58213f4a5c5b970be6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84d25c377d428dc4fb8e25c291a0176d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/transmogrify/Resolver.java", "commitBeforeChange": "a6990c84f05a74679588549df56143d3a5d053d1", "commitAfterChange": "748df52c1317e298203bf28e48545d3e50db59f1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void handleIf(BlockDef block)", "signatureAfterChange": "     private void handleIf(BlockDef block)", "diff": ["-        if (body != null && body.getType() == TokenTypes.SLIST) {", "-            handleSList(body, block);", "-        }", "-        else {", "-            resolveExpression(body, block, null, true);", "-        }", "+        if (body != null) {", "+        \tif (body.getType() == TokenTypes.SLIST) {", "+            \thandleSList(body, block);", "+        \t}", "+        \telse {", "+            \tresolveExpression(body, block, null, true);", "+        \t}", "-        SymTabAST elseBody = (SymTabAST) body.getNextSibling();", "-        //handle Checkstyle grammar", "-        while ((elseBody != null)", "-            && (elseBody.getType() != TokenTypes.LITERAL_ELSE)) {", "-            elseBody = (SymTabAST) elseBody.getNextSibling();", "-        }", "-        /*", "-         if (elseBody != null && elseBody.getType() == TokenTypes.SLIST) {", "-             handleSList(elseBody, block);", "-         }else{", "-             resolveExpression(elseBody, block, null, true);", "-         }", "-         */", "-        if (elseBody != null) {", "-            elseBody = (SymTabAST) elseBody.getFirstChild();", "-        }", "-        if (elseBody != null) {", "-            resolveExpression(elseBody, block.getParentScope(), null, true);", "-        }", "+\t        SymTabAST elseBody = (SymTabAST) body.getNextSibling();", "+\t        //handle Checkstyle grammar", "+\t        while ((elseBody != null)", "+\t            && (elseBody.getType() != TokenTypes.LITERAL_ELSE)) {", "+\t            elseBody = (SymTabAST) elseBody.getNextSibling();", "+\t        }", "+\t        /*", "+\t         if (elseBody != null && elseBody.getType() == TokenTypes.SLIST) {", "+\t             handleSList(elseBody, block);", "+\t         }else{", "+\t             resolveExpression(elseBody, block, null, true);", "+\t         }", "+\t         */", "+\t        if (elseBody != null) {", "+\t            elseBody = (SymTabAST) elseBody.getFirstChild();", "+\t        }", "+\t        if (elseBody != null) {", "+\t            resolveExpression(elseBody, block.getParentScope(), null, true);", "+\t        }", "+\t    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b74a1966ba295a178e429f6d4a287b5f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "9f93c2258ef0512b743f5927be201ff55a9d5c57", "commitAfterChange": "23c8774d2e2fd245de1e5df02758fd23702c565e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static FileText fromLines(File file, List<String> lines)", "signatureAfterChange": "     public static FileText fromLines(File file, List<String> lines)", "diff": ["-        return lines instanceof FileText", "-            ? (FileText) lines", "-            : new FileText(file, lines);", "+        if (lines instanceof FileText) {", "+            return (FileText) lines;", "+        }", "+        else {", "+            return new FileText(file, lines);", "+        }"]}]}