{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "607ee9c06bf4f9601d4d2f6ad6bad0c0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37099568bdaf1c4fe591506f7af736d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testEnum() throws Exception", "signatureAfterChange": "      @Test     public void testEnum() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"MethodCountCheckInput2.java\"), expected);", "+        verify(checkConfig, getPath(\"InputMethodCount2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "452054c4eb1921c7d2464de2e2d2aa5e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void leadingAsterisks()         throws IOException", "signatureAfterChange": "      @Test     public void leadingAsterisks()         throws IOException", "diff": ["-        String filename = getPath(\"LeadingAsterisks.txt\");", "+        String filename = getPath(\"InputLeadingAsterisks.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a69b58973afb896f8bcff02170d22820", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 21, "signatureBeforeChange": "      @Test     public void testAnonymousClasses() throws Exception", "signatureAfterChange": "      @Test     public void testAnonymousClasses() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputAnonymousClasses.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputAnonymousClasses.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5ecd01d288434c1c3ed4c3ccb47315a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/WhitespaceAroundTest.java", "commitBeforeChange": "4346d41010a729e14991e30706bdb16ff18ff39a", "commitAfterChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void whitespaceAroundBasicTest() throws Exception", "signatureAfterChange": "      @Test     public void whitespaceAroundBasicTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"WhitespaceAroundInput_Basic\");", "+        final String filePath = builder.getFilePath(\"InputWhitespaceAroundBasic\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2f009d0fd347ef13e29fa099032f61c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "44cc8b53c90117295151ea6723f859287f51dda5", "commitAfterChange": "5aacffce41a8f8d6b79f0b4a771e3e5ce03c0d02", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": "      @Test     public void testInheritDoc() throws Exception", "signatureAfterChange": "      @Test     public void testInheritDoc() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputInheritDoc.java\"), expected);", "+        verify(checkConfig, getPath(\"InputInheritDoc.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e54356597903562483342de9280094d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "e4a14e401a5839c6f4fa7238f5ba73255e488dba", "commitAfterChange": "b59648d60599bc197de618af5406c5e46978bbda", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testMissingConfigName()", "signatureAfterChange": "      public void testMissingConfigName()", "diff": ["-                        + \"for element type \\\"module\\\".\"));", "+                        + \"for element type \\\"module\\\".:7:23\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f716130ad44c35449a1c0179555c77ae", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     @Test     public void testBadAnnotationOverride() throws Exception", "signatureAfterChange": "     @Test     public void testBadAnnotationOverride() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"BadAnnotationOverride.java\"), expected);", "+        verify(checkConfig, getPath(\"InputBadAnnotationOverride.java\"), expected);"]}]}