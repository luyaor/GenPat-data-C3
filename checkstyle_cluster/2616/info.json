{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5df9f7194057a728ac651861cc87f443", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acdb1f02fa9e5ac43e4dd1294f56a30b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheck.java", "commitBeforeChange": "22d0ed9d4cf3c92e70d6315637ce36d572e91e98", "commitAfterChange": "3ad02e2dcdb4e4fbea22f6e8b765ff812f7887ee", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "     public void beginTree(DetailAST aRootAST)", "diff": ["+", "-            if (getRegexp().match(line)) {", "+            final boolean foundMatch;", "+            if (mIgnoreComments) {", "+                foundMatch = findNonCommentMatch(line, i + 1, 0);", "+            }", "+            else {", "+                foundMatch = getRegexp().match(line);", "+            }", "+            if (foundMatch) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d82d90a9c761f60e96e76280a9265a91", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "         void increment(Scope aScope)", "signatureAfterChange": "         void increment(Scope scope)", "diff": ["-        void increment(Scope aScope)", "+        void increment(Scope scope)", "-            mTotal++;", "-            if (mInInterface) {", "-                mCounts.put(Scope.PUBLIC, 1 + value(Scope.PUBLIC));", "+            total++;", "+            if (inInterface) {", "+                counts.put(Scope.PUBLIC, 1 + value(Scope.PUBLIC));", "-                mCounts.put(aScope, 1 + value(aScope));", "+                counts.put(scope, 1 + value(scope));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9a02c9c80d2ed5675e8b3aba8089f92", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/MethodCountCheck.java", "commitBeforeChange": "5320065461ca38393ab2402c7402cc8f65c331d4", "commitAfterChange": "45b1afd66692e017852016b7148c44ee4760f5d6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "         void increment(Scope aScope)", "signatureAfterChange": "         void increment(Scope aScope)", "diff": ["-            mCounts.put(aScope, 1 + value(aScope));", "+            mTotal++;", "+            if (mInInterface) {", "+                mCounts.put(Scope.PUBLIC, 1 + value(Scope.PUBLIC));", "+            }", "+            else {", "+                mCounts.put(aScope, 1 + value(aScope));", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbc037657dacddbb478306e62b2e38ac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/RegexpCheck.java", "commitBeforeChange": "4e0cb46ae540d8fea00a56c7221a32c8db4a8d54", "commitAfterChange": "edc4cc9ffc1a5b872398af9d6735b4bde75de385", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void findMatch()", "signatureAfterChange": "     private void findMatch()", "diff": ["-            final LineColumn end = text.lineColumn(matcher.end() - 1);", "+            final LineColumn end;", "+            if (matcher.end() == 0) {", "+                end = text.lineColumn(0);", "+            }", "+            else {", "+                end = text.lineColumn(matcher.end() - 1);", "+            }"]}]}