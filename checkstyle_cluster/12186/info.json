{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ecb622cfa776f7a4b2a00deeae8f83f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47dea9e404d2dc57dedafa2fac9c2c59", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private boolean hasAllowedAnnotations(DetailAST aMethodDef)", "signatureAfterChange": "     private boolean hasAllowedAnnotations(DetailAST methodDef)", "diff": ["-    private boolean hasAllowedAnnotations(DetailAST aMethodDef)", "+    private boolean hasAllowedAnnotations(DetailAST methodDef)", "-        final DetailAST modifiersNode = aMethodDef.findFirstToken(TokenTypes.MODIFIERS);", "+        final DetailAST modifiersNode = methodDef.findFirstToken(TokenTypes.MODIFIERS);", "-            if (mAllowedAnnotations.contains(identNode.getText())) {", "+            if (allowedAnnotations.contains(identNode.getText())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2bf29d23c6ce761db9f0f28e03d1db1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private DetailAST skipAnnotationOnlyLines(DetailAST aAST)", "signatureAfterChange": "     private DetailAST skipAnnotationOnlyLines(DetailAST ast)", "diff": ["-    private DetailAST skipAnnotationOnlyLines(DetailAST aAST)", "+    private DetailAST skipAnnotationOnlyLines(DetailAST ast)", "-        final DetailAST modifiers = aAST.findFirstToken(TokenTypes.MODIFIERS);", "+        final DetailAST modifiers = ast.findFirstToken(TokenTypes.MODIFIERS);", "-            return aAST;", "+            return ast;", "-            return aAST;", "+            return ast;"]}]}