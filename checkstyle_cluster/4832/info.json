{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7efd879959e19f6408b2cbfdfe449af4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72e8abd21342a9240c742d71d5b98d0c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "ff49be94c4917ad5c2780eaea3f2e16d4418473c", "commitAfterChange": "50ffeeae388de4b773578c861804af5feda8fe22", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void testSimple()         throws Exception", "signatureAfterChange": "      public void testSimple()         throws Exception", "diff": ["-            filepath + \":119:13: Name 'ABC' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            filepath + \":130:18: Name 'I' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            filepath + \":132:20: Name 'InnerBlockVariable' must match pattern '^[a-z][a-zA-Z0-9]*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "936ded94def0b3ec8b87fb41b2775873", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "caf539ded2c2efb3706c7819264d9e1c9e8e87df", "commitAfterChange": "206ff56be6d052ebd15d06bffeba31dd14947119", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void testSimple()         throws Exception", "signatureAfterChange": "      public void testSimple()         throws Exception", "diff": ["-            filepath + \":1: file length is 156 lines (max allowed is 20).\",", "+            filepath + \":1: file length is 146 lines (max allowed is 20).\",", "-            filepath + \":16: 'final' modifier out of order with the JLS suggestions.\",", "-            filepath + \":142: 'private' modifier out of order with the JLS suggestions.\",", "-            filepath + \":148: 'private' modifier out of order with the JLS suggestions.\",", "-            filepath + \":153: variable 'BAD__NAME' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\",", "+            filepath + \":142: variable 'BAD__NAME' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\",", "+        };", "+        verify(c, filepath, expected);", "+    }"]}]}