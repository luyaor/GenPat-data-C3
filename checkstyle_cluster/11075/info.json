{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d6ae0b2290646081a9c8d3d1f8b622b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51a645b4b27d8ef2a045ea84db9dcdc5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "a0d00ea8940acd30064715db04d7a19a99d4cca9", "commitAfterChange": "f52306ff7799ea2b2e4d99fba7040a11b186d68a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "         private void addName(String nameToAdd)", "signatureAfterChange": "          protected LexicalFrame getParent()", "diff": ["-        private void addName(String nameToAdd) {", "-            varNames.add(nameToAdd);", "+", "+        protected LexicalFrame getParent() {", "+            return parent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5838679985c263f43b970c9d7037acc2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "10f348bbfd91fd8c2bd7776aff3c03f549380a44", "commitAfterChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 19, "signatureBeforeChange": "         protected LexicalFrame(LexicalFrame parent)", "signatureAfterChange": "         protected abstract FrameType getType();", "diff": ["-        protected LexicalFrame(LexicalFrame parent) {", "+         */", "+        protected abstract FrameType getType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b935beb0a332117ebdc434e75443d06a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "661a9b0ddb10922458082573d79e0791ba6f38c2", "commitAfterChange": "7d38133e430f6c695c40d88c63af4c44f10878f9", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 12, "signatureBeforeChange": "     protected final void checkExpressionSubtree(DetailAST aTree, int aLevel)", "signatureAfterChange": "     protected boolean shouldIncraeseIndent()", "diff": ["+     */", "+    protected boolean shouldIncraeseIndent()", "+    {", "+        return true;", "+    }", "-     */", "-    protected final void checkExpressionSubtree(DetailAST aTree, int aLevel)", "-    {", "-        checkExpressionSubtree(aTree, aLevel, false, false);"]}]}