{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e44ccbd3223a093647334c139aab5cc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "754c59dea1fda8deb36d66476a19a088", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "7514320e04e4d35a4317172876e5f11e69a2c891", "commitAfterChange": "01d27913a71c29d6a769ed98ca7dd4ba01fe31eb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Configuration()", "signatureAfterChange": "     public Configuration()", "diff": ["-        try {", "-            for (int i = 0; i < Defn.ALL_PATTERN_PROPS.length; i++) {", "-                setPatternProperty(", "-                    Defn.ALL_PATTERN_PROPS[i],", "-                    (String) PATTERN_DEFAULTS.get(Defn.ALL_PATTERN_PROPS[i]));", "-            }", "-        }", "-        catch (RESyntaxException ex) {", "-            ex.printStackTrace();", "-            throw new IllegalStateException(ex.getMessage());", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9d043eb4d8653212d52739b79f71199", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "3ded7a11556a6258bcddd3ebe2d69a2058675601", "commitAfterChange": "69138e40225407ef560fd9d06d2903de37c83c2c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 1, "signatureBeforeChange": "     String[] getHeaderLines()", "signatureAfterChange": "     Configuration()         throws IllegalStateException", "diff": ["+     */", "+    Configuration()", "+        throws IllegalStateException", "+    {", "+        try {", "+            setParamPat(PARAMETER_PATTERN);", "+            setStaticPat(STATIC_PATTERN);", "+            setStaticFinalPat(CONST_PATTERN);", "+            setMemberPat(MEMBER_PATTERN);", "+            setTypePat(TYPE_PATTERN);", "+        }", "+        catch (RESyntaxException ex) {", "+            ex.printStackTrace();", "+            throw new IllegalStateException(ex.getMessage());", "+        }", "+    }"]}]}