{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e9d80cd25082e769ef643d5cd9d2ea3f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "025ee69055cc01c90e54896b153e2256", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java", "commitBeforeChange": "dc3fa902da0209c05f9a032f36341567d3af1dce", "commitAfterChange": "ec4f7b40c6c777d41b1fe5fe41ac4f85b8b80cc5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testWrong() throws Exception", "signatureAfterChange": "      public void testWrong() throws Exception", "diff": ["+", "+    public void testWrong() throws Exception", "+    {", "+        final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);", "+        checkConfig.addAttribute(\"file\", System.getProperty(\"testinputs.dir\")", "+                + \"/import-control_wrong.xml\");", "+        final String[] expected = {\"1:40: Import control file does not handle this package.\"};", "-    public void testWrong() throws Exception"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b0e91ea77761731d81b4d46d193fe4c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheckTest.java", "commitBeforeChange": "ff6c49e6a715d8372ac77a34aa77d9eaff6db154", "commitAfterChange": "911065320fb39299f442ea08f775cfe08ba2a2ed", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testSetLineSeparatorFailure()         throws Exception", "signatureAfterChange": "      @Test(expected=CheckstyleException.class)     public void testSetLineSeparatorFailure()         throws Exception", "diff": ["-    @Test", "+    @Test(expected=CheckstyleException.class)", "-        try {", "-            createChecker(checkConfig);", "-        }", "-        catch (CheckstyleException ex) {", "-            return;", "-        }", "-        fail(\"should throw conversion exception\");", "+        createChecker(checkConfig);"]}]}