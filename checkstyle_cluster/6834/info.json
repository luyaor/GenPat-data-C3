{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "506af1e58acf311f281c2c2ca3a19349", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c100d94de47ca64e45fb48b73357406", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "2ed00e0af3ede8d8a276bbde08c5492a42df842d", "commitAfterChange": "e81ca8290b4efd42c3454ffa0159b739f958ea48", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Class<?> resolve(String name, String currentClass)         throws ClassNotFoundException", "signatureAfterChange": "     public Class<?> resolve(String name, String currentClass)         throws ClassNotFoundException", "diff": ["-            clazz = resolveQualifiedName(pkg + PERIOD + name);", "-            if (clazz != null) {", "-                return clazz;", "+            final Class<?> classFromQualifiedName = resolveQualifiedName(pkg + PERIOD + name);", "+            if (classFromQualifiedName != null) {", "+                return classFromQualifiedName;", "-        clazz = resolveInnerClass(name, currentClass);", "-        if (clazz != null) {", "-            return clazz;", "+        final Class<?> innerClass = resolveInnerClass(name, currentClass);", "+        if (innerClass != null) {", "+            return innerClass;", "-        clazz = resolveByStarImports(name);", "-        if (clazz != null) {", "-            return clazz;", "+        final Class<?> classFromStarImport = resolveByStarImports(name);", "+        if (classFromStarImport != null) {", "+            return classFromStarImport;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2bad5cd7c1008e90cc620ce86047c46", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "ca2572e99a8cca7a52101da71916bfdd5d675fb2", "commitAfterChange": "d734bff020d3525c811a0b273021a5ac5665ade8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Class<?> resolve(String name, String currentClass)         throws ClassNotFoundException", "signatureAfterChange": "     public Class<?> resolve(String name, String currentClass)         throws ClassNotFoundException", "diff": ["-        //inner class of this class???", "+        // see if inner class of this class", "+        clazz = resolveInnerClass(name, currentClass);", "+        if (clazz != null) {", "+            return clazz;", "+        }", "+", "+        clazz = resolveByStarImports(name);", "+        if (clazz != null) {", "+            return clazz;", "+        }", "+", "+", "+        // Giving up, the type is unknown, so load the class to generate an", "+        // exception", "+        return safeLoad(name);", "+    }", "-                return safeLoad(innerClass);", "-        // try star imports", "-                    return clazz;", "-", "-        // Giving up, the type is unknown, so load the class to generate an", "-        // exception", "-        return safeLoad(name);"]}]}