{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3de1d68a43d6e778712fa5d6b204229c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07315b714826ed89413755ca3412b4c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/Main.java", "commitBeforeChange": "748df52c1317e298203bf28e48545d3e50db59f1", "commitAfterChange": "6cc11418ffa1c0be34411c0e4a296b748f2a0842", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main(String[] args)", "signatureAfterChange": "     public static void main(String[] args)", "diff": ["-        JFrame frame = new JFrame(\"CheckStyle\");", "-        frame.getContentPane().add(new ParseTreeInfoPanel());", "+        final JFrame frame = new JFrame(\"CheckStyle\");", "+        final ParseTreeInfoPanel panel = new ParseTreeInfoPanel();", "+        frame.getContentPane().add(panel);", "+        if (args.length >= 1) {", "+            final File f = new File(args[0]);", "+            panel.openFile(f, frame);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11d0239640b7891baed1ef3b6237e64c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "39f40e57858c8a5c6310bf35e6649b03188b6996", "commitAfterChange": "0518b753a40f1857516b356654e5d01834af2109", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Before     public void setUp()", "signatureAfterChange": "      @Test     public void testAllowNoEmptyLineBetweenFields() throws Exception", "diff": ["-", "-    @Before", "-    public void setUp()", "-    {", "-        mCheckConfig = createCheckConfig(EmptyLineSeparatorCheck.class);", "-    }", "+", "+    @Test", "+    public void testAllowNoEmptyLineBetweenFields() throws Exception", "+    {", "+", "+        DefaultConfiguration checkConfig = createCheckConfig(EmptyLineSeparatorCheck.class);", "+        checkConfig.addAttribute(\"allowNoEmptyLineBetweenFields\", \"true\");", "+", "+        final String[] expected = {", "+            \"20: 'import' should be separated from previous statement.\",", "+            \"33: 'CLASS_DEF' should be separated from previous statement.\",", "+            \"37: 'STATIC_INIT' should be separated from previous statement.\",", "+            \"75: 'INTERFACE_DEF' should be separated from previous statement.\",", "+        };", "+        verify(checkConfig, getPath(\"whitespace/InputEmptyLineSeparatorCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35eb1b030f4b7685fd0ec45cc1465096", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "524dd2e149045abdfbdb42282c78cf869d1f83d8", "commitAfterChange": "751fb5881113e58f492e3f2130533dca655a838a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "       @Test     public void testResourceLoadConfiguration() throws Exception", "signatureAfterChange": "       @Test     public void testResourceLoadConfiguration() throws Exception", "diff": ["+        final Properties props = new Properties();", "+        props.put(\"checkstyle.basedir\", \"basedir\");", "+", "-            \"/checkstyle/checkstyle_checks.xml\", new PropertiesExpander(new Properties()));", "-        verifyConfigNode(config, \"Checker\", 3, new Properties());", "+            \"src/test/resources/com/puppycrawl/tools/checkstyle/configs/checkstyle_checks.xml\", new PropertiesExpander(props));", "+", "+        //verify the root, and property substitution", "+        final Properties atts = new Properties();", "+        atts.put(\"tabWidth\", \"4\");", "+        atts.put(\"basedir\", \"basedir\");", "+        verifyConfigNode(config, \"Checker\", 3, atts);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69304838b911d908937e24b91277574c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWarningsFilterTest.java", "commitBeforeChange": "425fd5a27cd567d5784bd246729c55cf8cda3dbd", "commitAfterChange": "6438bb246b9e6b2b6cd31e1c028853440d52d64b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public Checker createChecker(Configuration checkConfig)         throws Exception", "signatureAfterChange": "      @Override     public Checker createChecker(Configuration checkConfig)         throws Exception", "diff": ["-        checksConfig.addChild(createCheckConfig(MemberNameCheck.class));", "-        checksConfig.addChild(createCheckConfig(ConstantNameCheck.class));", "+        final DefaultConfiguration memberNameCheckConfig = createCheckConfig(MemberNameCheck.class);", "+        memberNameCheckConfig.addAttribute(\"id\", \"ignore\");", "+        checksConfig.addChild(memberNameCheckConfig);", "+        final DefaultConfiguration constantNameCheckConfig =", "+            createCheckConfig(ConstantNameCheck.class);", "+        constantNameCheckConfig.addAttribute(\"id\", \"\");", "+        checksConfig.addChild(constantNameCheckConfig);", "-        checksConfig.addChild(createCheckConfig(UncommentedMainCheck.class));", "+        final DefaultConfiguration uncommentedMainCheckConfig =", "+            createCheckConfig(UncommentedMainCheck.class);", "+        uncommentedMainCheckConfig.addAttribute(\"id\", \"ignore\");", "+        checksConfig.addChild(uncommentedMainCheckConfig);"]}]}