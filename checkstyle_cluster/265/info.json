{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a5d7770461f6c1d96bb5537af7c7a7c6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23f836c0e80d0600c67bcb7e00e7fc53", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "804e50ee31b1653a27eab9bb5370b5af9c486eb1", "commitAfterChange": "5fb27c0fe21ed36f057767862e96017d46a72686", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private String getCommentText(String[] aComments)", "signatureAfterChange": "     private String getCommentText(String[] aComments)", "diff": ["-                // Look for Javadoc tag that's neither a @link nor a", "-                // @inheritDoc since they can appear", "-                // within the comment text.", "+                // Look for Javadoc tag that's not an inline tag", "+                // it can appear within the comment text.", "+                // Inline tags are denoted by curly braces: {@tag}", "-                    && !line.regionMatches(ndx + 1, \"link\", 0, \"link\".length())", "-                    && !line.regionMatches(", "-                        ndx + 1,", "-                        \"inheritDoc\",", "-                        0,", "-                        \"inheritDoc\".length()))", "+                    && (ndx == 0 || line.charAt(ndx - 1) != '{'))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afb9a969f38854bad60a5a35bf536ae6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "a00160b33c89916e57bf80a6256e4944407b4de4", "commitAfterChange": "611722a893e0c6362b693f5c629a902a83590cbf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private String getCommentText(String[] aComments)", "signatureAfterChange": "     private String getCommentText(String[] aComments)", "diff": ["-                // Look for Javadoc tag that's not a @link since can appear", "+                // Look for Javadoc tag that's neither a @link nor a", "+                // @inheritDoc since they can appear", "-                    && !line.regionMatches(ndx + 1, \"link\", 0, \"link\".length()))", "+                    && !line.regionMatches(ndx + 1, \"link\", 0, \"link\".length())", "+                    && !line.regionMatches(", "+                        ndx + 1,", "+                        \"inheritDoc\",", "+                        0,", "+                        \"inheritDoc\".length()))"]}]}