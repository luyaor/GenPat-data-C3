{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7fc9e848b5110703a1c21201648adb58", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c19b733d4007dc68804725774ed4c5f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "4e4a635fab94bc1107dbe47ba944a687736b9d67", "commitAfterChange": "c6edc74a2cf7a5e2c9affef6d0e1e931f783b462", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public FileText(File aFile, String aCharsetName) throws IOException", "signatureAfterChange": "     public FileText(File aFile, String aCharsetName) throws IOException", "diff": ["-        final String[] lines = LINE_TERMINATOR.split(mFullText, -1);", "-        if (lines.length > 0 && lines[lines.length - 1].length() == 0) {", "-            // drop empty line after last newline", "-            mLines = new String[lines.length - 1];", "-            System.arraycopy(lines, 0, mLines, 0, lines.length - 1);", "+        // Use the BufferedReader to break down the lines as this", "+        // is about 30% faster than using the", "+        // LINE_TERMINATOR.split(mFullText, -1) method", "+        final ArrayList<String> lines = new ArrayList<String>();", "+        final BufferedReader br =", "+            new BufferedReader(new StringReader(mFullText));", "+        for (;;) {", "+            final String l = br.readLine();", "+            if (null == l) {", "+                break;", "+            }", "+            lines.add(l);", "-        else {", "-            // no newline at end, so we keep the last line as is", "-            mLines = lines;", "-        }", "+        mLines = lines.toArray(new String[lines.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e254e13ae863eeac8dba78b41809c60f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java", "commitBeforeChange": "02aaa1b7f653e25c34ef7f186fa1d940079384e8", "commitAfterChange": "52ac2776d7f128ff812b73b54dcc12210661f98b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic Configuration getCheckConfig(String aCheckName)", "signatureAfterChange": "  \tpublic Configuration getCheckConfig(String aCheckName)", "diff": ["-\t\tfor (Configuration config : mConfig.getChildren()) {", "-\t\t\tif (\"TreeWalker\".equals(config.getName())) {", "-\t\t\t\tfor (Configuration checkConfig : config.getChildren()) {", "+\t\tfor (Configuration currentConfig : config.getChildren()) {", "+\t\t\tif (\"TreeWalker\".equals(currentConfig.getName())) {", "+\t\t\t\tfor (Configuration checkConfig : currentConfig.getChildren()) {", "-\t\t\t} else if (aCheckName.equals(config.getName())) {", "-\t\t\t\treturn config;", "+\t\t\t} else if (aCheckName.equals(currentConfig.getName())) {", "+\t\t\t\treturn currentConfig;"]}]}