{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dda05731f38b8c9eeaff9eb0cade7a1b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e9e27ced41469bcbcb05c28a69175a4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java", "commitBeforeChange": "8f12d2b92568c8fca42dfbd26f3d1f0b17100a7b", "commitAfterChange": "050d1e55a819d639fe9116ec3ebd99902530c3f9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Override     public final void contextualize(Context context)         throws CheckstyleException", "signatureAfterChange": "     @Override     public final void contextualize(Context context)         throws CheckstyleException", "diff": ["-        final BeanUtilsBean beanUtils = createBeanUtilsBean();", "-            try {", "-                beanUtils.copyProperty(this, key, value);", "-            }", "-            catch (final InvocationTargetException e) {", "-                throw new CheckstyleException(\"cannot set property \"", "-                    + key + \" to value \" + value + \" in bean \"", "-                    + this.getClass().getName(), e);", "-            }", "-            catch (final IllegalAccessException e) {", "-                throw new CheckstyleException(", "-                    \"cannot access \" + key + \" in \"", "-                    + this.getClass().getName(), e);", "-            }", "-            catch (final IllegalArgumentException | ConversionException e) {", "-                throw new CheckstyleException(", "-                    \"illegal value '\" + value + \"' for property '\" + key", "-                    + \"' of bean \" + this.getClass().getName(), e);", "-            }", "+            tryCopyProperty(this.getClass().getName(), key, value, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "713fdfd837e5357a0313a976253c8b6b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java", "commitBeforeChange": "8f12d2b92568c8fca42dfbd26f3d1f0b17100a7b", "commitAfterChange": "050d1e55a819d639fe9116ec3ebd99902530c3f9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Override     public final void configure(Configuration configuration)         throws CheckstyleException", "signatureAfterChange": "     @Override     public final void configure(Configuration configuration)         throws CheckstyleException", "diff": ["-        final BeanUtilsBean beanUtils = createBeanUtilsBean();", "-", "-            try {", "-                // BeanUtilsBean.copyProperties silently ignores missing setters", "-                // for key, so we have to go through great lengths here to", "-                // figure out if the bean property really exists.", "-                final PropertyDescriptor pd =", "-                    PropertyUtils.getPropertyDescriptor(this, key);", "-                if (pd == null) {", "-                    throw new CheckstyleException(", "-                        \"Property '\" + key + \"' in module \"", "-                        + configuration.getName()", "-                        + \" does not exist, please check the documentation\");", "-                }", "-", "-                // finally we can set the bean property", "-                beanUtils.copyProperty(this, key, value);", "-            }", "-            catch (final InvocationTargetException e) {", "-                throw new CheckstyleException(", "-                    \"Cannot set property '\" + key + \"' in module \"", "-                    + configuration.getName() + \" to '\" + value", "-                    + \"': \" + e.getTargetException().getMessage(), e);", "-            }", "-            catch (final IllegalAccessException | NoSuchMethodException e) {", "-                throw new CheckstyleException(", "-                    \"cannot access \" + key + \" in \"", "-                    + this.getClass().getName(), e);", "-            }", "-            catch (final IllegalArgumentException | ConversionException e) {", "-                throw new CheckstyleException(", "-                    \"illegal value '\" + value + \"' for property '\" + key", "-                    + \"' of module \" + configuration.getName(), e);", "-            }", "+            tryCopyProperty(configuration.getName(), key, value, true);", "+        }", "+    }"]}]}