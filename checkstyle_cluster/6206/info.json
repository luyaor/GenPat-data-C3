{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bef008bbeb110e7465af9e57a519e834", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98857b6f28fafc58bae037c52242fa7b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testVerbose() throws Exception", "signatureAfterChange": "      @Test     public void testVerbose() throws Exception", "diff": ["-            \"19:25: Line contains a tab character.\",", "-            \"145:35: Line contains a tab character.\",", "-            \"146:64: Line contains a tab character.\",", "-            \"154:9: Line contains a tab character.\",", "-            \"155:10: Line contains a tab character.\",", "-            \"156:1: Line contains a tab character.\",", "-            \"157:3: Line contains a tab character.\",", "-            \"158:3: Line contains a tab character.\",", "+            \"19:25: \" + getCheckMessage(CONTAINS_TAB),", "+            \"145:35: \" + getCheckMessage(CONTAINS_TAB),", "+            \"146:64: \" + getCheckMessage(CONTAINS_TAB),", "+            \"154:9: \" + getCheckMessage(CONTAINS_TAB),", "+            \"155:10: \" + getCheckMessage(CONTAINS_TAB),", "+            \"156:1: \" + getCheckMessage(CONTAINS_TAB),", "+            \"157:3: \" + getCheckMessage(CONTAINS_TAB),", "+            \"158:3: \" + getCheckMessage(CONTAINS_TAB),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a41f315361070dc4d1c484b5e1962e3e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testCommaNeverViolations() throws Exception", "signatureAfterChange": "      @Test     public void testCommaNeverViolations() throws Exception", "diff": ["-            \"9:32: Annotation array values cannot contain trailing comma.\",", "-            \"13:42: Annotation array values cannot contain trailing comma.\",", "-            \"16:46: Annotation array values cannot contain trailing comma.\",", "-            \"19:56: Annotation array values cannot contain trailing comma.\",", "-            \"27:38: Annotation array values cannot contain trailing comma.\",", "-            \"27:67: Annotation array values cannot contain trailing comma.\",", "-            \"33:39: Annotation array values cannot contain trailing comma.\",", "-            \"33:50: Annotation array values cannot contain trailing comma.\",", "+            \"9:32: \" + getCheckMessage(MSG_KEY_ANNOTATION_TRAILING_COMMA_PRESENT),", "+            \"13:42: \" + getCheckMessage(MSG_KEY_ANNOTATION_TRAILING_COMMA_PRESENT),", "+            \"16:46: \" + getCheckMessage(MSG_KEY_ANNOTATION_TRAILING_COMMA_PRESENT),", "+            \"19:56: \" + getCheckMessage(MSG_KEY_ANNOTATION_TRAILING_COMMA_PRESENT),", "+            \"27:38: \" + getCheckMessage(MSG_KEY_ANNOTATION_TRAILING_COMMA_PRESENT),", "+            \"27:67: \" + getCheckMessage(MSG_KEY_ANNOTATION_TRAILING_COMMA_PRESENT),", "+            \"33:39: \" + getCheckMessage(MSG_KEY_ANNOTATION_TRAILING_COMMA_PRESENT),", "+            \"33:50: \" + getCheckMessage(MSG_KEY_ANNOTATION_TRAILING_COMMA_PRESENT),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd9cfcb6fae9f976ddcf934172494193", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void testExcludeScope() throws Exception", "signatureAfterChange": "      @Test     public void testExcludeScope() throws Exception", "diff": ["-            \"27: Missing a Javadoc comment.\",", "-            \"39: Missing a Javadoc comment.\",", "-            \"52: Missing a Javadoc comment.\",", "-            \"63: Missing a Javadoc comment.\",", "-            \"75: Missing a Javadoc comment.\",", "-            \"87: Missing a Javadoc comment.\",", "-            \"99: Missing a Javadoc comment.\",", "-            \"111: Missing a Javadoc comment.\",", "+            \"27: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"39: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"52: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"63: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"75: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"87: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"99: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"111: \" + getCheckMessage(JAVADOC_MISSING),"]}]}