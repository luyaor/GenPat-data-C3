{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1fe72ca43ee9870c7b802db916d87ea", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3deee85e320aaa487fcf33f9a01e005", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/CodeSelector.java", "commitBeforeChange": "2f0b4be3aebc225683653298dc234eae7b3cb86e", "commitAfterChange": "c922d93b2fbb2c254c2d5236bb449193fb7d5747", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void select()", "signatureAfterChange": "     public void select()", "diff": ["-        final int end = findLastPosition(ast);", "+        final int end;", "+", "+        if (ast.getChildCount() == 0", "+            && TokenUtils.getTokenName(ast.getType()).equals(ast.getText())) {", "+            end = start;", "+        }", "+        else {", "+            end = findLastPosition(ast);", "+        }", "-        editor.setSelectionStart(start);", "-        editor.setSelectionEnd(end);", "+        editor.setCaretPosition(start);", "+        editor.moveCaretPosition(end);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb33336846a42d97f03e6df7802bb007", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentLevel.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-        if (mLevels.cardinality() == 1) {", "-            return String.valueOf(mLevels.nextSetBit(0));", "+        if (levels.cardinality() == 1) {", "+            return String.valueOf(levels.nextSetBit(0));", "-        for (int i = mLevels.nextSetBit(0); i >= 0;", "-            i = mLevels.nextSetBit(i + 1))", "+        for (int i = levels.nextSetBit(0); i >= 0;", "+            i = levels.nextSetBit(i + 1))"]}]}