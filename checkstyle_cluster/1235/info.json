{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7bd92caf4aa2571cd3eeff00b34fd963", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dd38490351e888bb246039362cf2264", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java", "commitBeforeChange": "0dbbf3b83a9832eb381db6dc777916e9d7fa676f", "commitAfterChange": "16ae5032c5e25ad35475c9a0f2de578ea6e640e5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void postprocessLiteralNew(DetailAST ast)", "signatureAfterChange": "     private void postprocessLiteralNew(DetailAST newTokenAst)", "diff": ["-    private void postprocessLiteralNew(DetailAST ast) {", "-        final DetailAST typeNameAST = ast.getFirstChild();", "-        final AST nameSibling = typeNameAST.getNextSibling();", "-        if (nameSibling != null", "-                && nameSibling.getType() == TokenTypes.ARRAY_DECLARATOR) {", "+    private void postprocessLiteralNew(DetailAST newTokenAst) {", "+        final DetailAST typeNameAst = newTokenAst.getFirstChild();", "+        final AST nameSibling = typeNameAst.getNextSibling();", "+        if (nameSibling.getType() == TokenTypes.ARRAY_DECLARATOR) {", "-        final FullIdent typeIdent = FullIdent.createFullIdent(typeNameAST);", "+        final FullIdent typeIdent = FullIdent.createFullIdent(typeNameAst);", "-        final int lineNo = ast.getLineNo();", "-        final int colNo = ast.getColumnNo();", "+        final int lineNo = newTokenAst.getLineNo();", "+        final int colNo = newTokenAst.getColumnNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27e21cf4f80bd68f61c8a1c44016fc9d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        DetailAST ast = aAST;", "-        if (aAST.getType() == TokenTypes.ARRAY_DECLARATOR", "-                 || aAST.getType() == TokenTypes.TYPECAST)", "+        DetailAST astNode = ast;", "+        if (ast.getType() == TokenTypes.ARRAY_DECLARATOR", "+                 || ast.getType() == TokenTypes.TYPECAST)", "-            ast = getPreceded(aAST);", "+            astNode = getPreceded(ast);", "-        final String line = getLine(aAST.getLineNo() - 1);", "-        final int after = getPositionAfter(ast);", "+        final String line = getLine(ast.getLineNo() - 1);", "+        final int after = getPositionAfter(astNode);", "-            log(ast.getLineNo(), after,", "-                \"ws.followed\", ast.getText());", "+            log(astNode.getLineNo(), after,", "+                \"ws.followed\", astNode.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a856e42528fe23a801b1b718bcc7e5d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private int getFirstNodeIndent(DetailAST aNode)", "signatureAfterChange": "     private int getFirstNodeIndent(DetailAST node)", "diff": ["-    private int getFirstNodeIndent(DetailAST aNode)", "+    private int getFirstNodeIndent(DetailAST node)", "-        int indentLevel = aNode.getColumnNo();", "+        int indentLevel = node.getColumnNo();", "-        if (aNode.getType() == TokenTypes.LITERAL_IF", "-                && aNode.getParent().getType() == TokenTypes.LITERAL_ELSE)", "+        if (node.getType() == TokenTypes.LITERAL_IF", "+                && node.getParent().getType() == TokenTypes.LITERAL_ELSE)", "-            final DetailAST lcurly = aNode.getParent().getPreviousSibling();", "+            final DetailAST lcurly = node.getParent().getPreviousSibling();", "-                    && rcurly.getLineNo() == aNode.getLineNo())", "+                    && rcurly.getLineNo() == node.getLineNo())", "-                indentLevel = aNode.getParent().getColumnNo();", "+                indentLevel = node.getParent().getColumnNo();"]}]}