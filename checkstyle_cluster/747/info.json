{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "44885794410233767961d64078fafb9e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf1fdaa3b3f12ce1ad5cbe7bbdc1c156", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "5cd9806d4b7900f41eb855d197eb334abade3ac8", "commitAfterChange": "98a9266a8091c1c6b26d41b4e17e1a32458f1bac", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean hasLineBreakAfter(DetailAST leftCurly)", "signatureAfterChange": "     private boolean hasLineBreakAfter(DetailAST leftCurly)", "diff": ["-            if (leftCurly.getParent().getParent().getType() == TokenTypes.ENUM_DEF)", "+            if (leftCurly.getParent().getParent().getType() == TokenTypes.ENUM_DEF && !ignoreEnums)", "-                if (!ignoreEnums) {", "-                    nextToken = leftCurly.getNextSibling();", "-                }", "+                nextToken = leftCurly.getNextSibling();", "-        if (nextToken != null && nextToken.getType() != TokenTypes.RCURLY) {", "-            if (leftCurly.getLineNo() == nextToken.getLineNo()) {", "-                return false;", "-            }", "+        if (nextToken != null && nextToken.getType() != TokenTypes.RCURLY", "+                && leftCurly.getLineNo() == nextToken.getLineNo())", "+        {", "+            return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc0482cb016bcbc4ec759eb975244438", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean hasLineBreakAfter(DetailAST aLeftCurly)", "signatureAfterChange": "     private boolean hasLineBreakAfter(DetailAST leftCurly)", "diff": ["-    private boolean hasLineBreakAfter(DetailAST aLeftCurly)", "+    private boolean hasLineBreakAfter(DetailAST leftCurly)", "-        if (aLeftCurly.getType() == TokenTypes.SLIST) {", "-            nextToken = aLeftCurly.getFirstChild();", "+        if (leftCurly.getType() == TokenTypes.SLIST) {", "+            nextToken = leftCurly.getFirstChild();", "-            if (aLeftCurly.getParent().getParent().getType() == TokenTypes.ENUM_DEF)", "+            if (leftCurly.getParent().getParent().getType() == TokenTypes.ENUM_DEF)", "-                if (!mIgnoreEnums) {", "-                    nextToken = aLeftCurly.getNextSibling();", "+                if (!ignoreEnums) {", "+                    nextToken = leftCurly.getNextSibling();", "-            if (aLeftCurly.getLineNo() == nextToken.getLineNo()) {", "+            if (leftCurly.getLineNo() == nextToken.getLineNo()) {"]}]}