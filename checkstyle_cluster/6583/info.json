{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09c9bd44c2f3590d2c75ad963b28dce0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96ba897890e5eb9e065df496c8530f18", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "8787efc822fd27a4a3f3dd795c34525ccc08d297", "commitAfterChange": "2fe9f501d86b6e70aa64f4474ae0863bb0b928d5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["+        final LexicalFrame frame = this.mFrames.current();", "-        case TokenTypes.PARAMETER_DEF :", "-        case TokenTypes.VARIABLE_DEF : {", "+        case TokenTypes.VARIABLE_DEF :  {", "+            final String name =", "+                    aAST.findFirstToken(TokenTypes.IDENT).getText();", "+            if (frame instanceof ClassFrame) {", "+                final DetailAST mods =", "+                    aAST.findFirstToken(TokenTypes.MODIFIERS);", "+                if (mods.branchContains(TokenTypes.LITERAL_STATIC)) {", "+                    ((ClassFrame) frame).addStaticMember(name);", "+                }", "+                else {", "+                    ((ClassFrame) frame).addInstanceMember(name);", "+                }", "+            }", "+            else {", "+                frame.addName(name);", "+            }", "+            break;", "+        }", "+        case TokenTypes.PARAMETER_DEF : {", "-            this.mFrames.current().addName(nameAST.getText());", "+            frame.addName(nameAST.getText());", "-            this.mFrames.current().addName(nameAST.getText());", "+            frame.addName(nameAST.getText());", "-        case TokenTypes.METHOD_DEF :", "+        case TokenTypes.METHOD_DEF : {", "+            final String name = aAST.findFirstToken(TokenTypes.IDENT).getText();", "+            if (frame instanceof ClassFrame) {", "+                final DetailAST mods =", "+                    aAST.findFirstToken(TokenTypes.MODIFIERS);", "+                if (mods.branchContains(TokenTypes.LITERAL_STATIC)) {", "+                    ((ClassFrame) frame).addStaticMember(name);", "+                }", "+                else {", "+                    ((ClassFrame) frame).addInstanceMember(name);", "+                }", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e20e55d303f393f758532c721738f310", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void collectDeclarations(Deque<LexicalFrame> aFrameStack,         DetailAST aAST)", "signatureAfterChange": "     private void collectDeclarations(Deque<LexicalFrame> frameStack,         DetailAST ast)", "diff": ["-    private void collectDeclarations(Deque<LexicalFrame> aFrameStack,", "-        DetailAST aAST)", "+    private void collectDeclarations(Deque<LexicalFrame> frameStack,", "+        DetailAST ast)", "-        final LexicalFrame frame = aFrameStack.peek();", "-        switch (aAST.getType()) {", "+        final LexicalFrame frame = frameStack.peek();", "+        switch (ast.getType()) {", "-                    aAST.findFirstToken(TokenTypes.IDENT).getText();", "+                    ast.findFirstToken(TokenTypes.IDENT).getText();", "-                    aAST.findFirstToken(TokenTypes.MODIFIERS);", "-                if (ScopeUtils.inInterfaceBlock(aAST)", "+                    ast.findFirstToken(TokenTypes.MODIFIERS);", "+                if (ScopeUtils.inInterfaceBlock(ast)", "-            final DetailAST nameAST = aAST.findFirstToken(TokenTypes.IDENT);", "+            final DetailAST nameAST = ast.findFirstToken(TokenTypes.IDENT);", "-            final DetailAST nameAST = aAST.findFirstToken(TokenTypes.IDENT);", "+            final DetailAST nameAST = ast.findFirstToken(TokenTypes.IDENT);", "-            aFrameStack.addFirst(new ClassFrame(frame));", "+            frameStack.addFirst(new ClassFrame(frame));", "-            aFrameStack.addFirst(new BlockFrame(frame));", "+            frameStack.addFirst(new BlockFrame(frame));", "-            final String name = aAST.findFirstToken(TokenTypes.IDENT).getText();", "+            final String name = ast.findFirstToken(TokenTypes.IDENT).getText();", "-                    aAST.findFirstToken(TokenTypes.MODIFIERS);", "+                    ast.findFirstToken(TokenTypes.MODIFIERS);", "-            aFrameStack.addFirst(new MethodFrame(frame));", "+            frameStack.addFirst(new MethodFrame(frame));"]}]}