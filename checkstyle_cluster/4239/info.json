{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "80df14b66b030814f34eab8815221164", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2120c3f1ddc82bf976a60dfc22eed870", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "b9b72f969209ac4edb9c6b02aaf8e2f590d0b737", "commitAfterChange": "24ba45a971569b9702e6bf78c5c07c48beb25464", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void checkFirstSentence(DetailAST aAST, String[] aComment)", "signatureAfterChange": "     private void checkFirstSentence(Comment aComment)", "diff": ["-    private void checkFirstSentence(DetailAST aAST, String[] aComment)", "+    private void checkFirstSentence(Comment aComment)", "-        final String commentText = getCommentText(aComment);", "+        final String commentText = getCommentText(aComment.getText());", "-            log(aAST.getLineNo() - aComment.length, \"javadoc.noperiod\");", "+            log(aComment.getFirstLineNo(), \"javadoc.noperiod\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7db726275a0931d39f48c80e41599c7a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "b9b72f969209ac4edb9c6b02aaf8e2f590d0b737", "commitAfterChange": "24ba45a971569b9702e6bf78c5c07c48beb25464", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void checkHtml(DetailAST aAST, String[] aComment)", "signatureAfterChange": "     private void checkHtml(Comment aComment)", "diff": ["-    private void checkHtml(DetailAST aAST, String[] aComment)", "+    private void checkHtml(Comment aComment)", "-        final int lineno = aAST.getLineNo() - aComment.length;", "+        final int lineno = aComment.getFirstLineNo();", "+        final String[] text = aComment.getText();", "-        try {", "-            // Can throw NoSuchElementException when tokenizing encounters", "-            // \"<\" at end of aComment[i].", "-            parser = new TagParser(aComment, lineno);", "-        }", "-        catch (NoSuchElementException e) {", "-            log(lineno, \"javadoc.incompleteTag\", new Object[] {aComment[0]});", "-            return;", "-        }", "+        parser = new TagParser(text, lineno);", "-                    new Object[] {aComment[tag.getLineno() - lineno]});", "+                    new Object[] {text[tag.getLineno() - lineno]});"]}]}