{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "40c989521f7f453a6fa652127513c8b9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dbbf95440d544581d21fadae2a57446", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "af52963008a800390e8b356db5811886572f37a3", "commitAfterChange": "3a5a73d5c110418f712f5a9a838c6b4106506fdd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testNewLine() throws Exception", "signatureAfterChange": "      @Test     public void testNewLine() throws Exception", "diff": ["+        checkConfig.addAttribute(\"shouldStartLine\", \"true\");", "-            \"111:9: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),", "-            \"111:10: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\"),", "-            \"122:9: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),", "-            \"122:10: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\"),", "-            \"136:10: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\"),", "+            \"111:5: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\", 5),", "+            \"111:6: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\", 6),", "+            \"122:5: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\", 5),", "+            \"122:6: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\", 6),", "+            \"136:6: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\", 6),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3587bb53e79778bbe7f0fa25d9008792", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheckTest.java", "commitBeforeChange": "6db0b3effd48f02d741b2202338d710b1b254910", "commitAfterChange": "59de966a7e8a2225da2b1e12624ca24beab509ac", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testIt()         throws Exception", "signatureAfterChange": "      public void testAllowSwitchInCase()         throws Exception", "diff": ["-    public void testIt()", "-            \"38:17: Avoid nested blocks.\",", "+", "+    public void testAllowSwitchInCase()", "+        throws Exception", "+    {", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(AvoidNestedBlocksCheck.class);", "+        checkConfig.addAttribute(\"allowInSwitchCase\", Boolean.TRUE.toString());", "+", "+        final String[] expected = {", "+            \"22:9: Avoid nested blocks.\",", "+            \"44:17: Avoid nested blocks.\",", "+            \"58:17: Avoid nested blocks.\","]}]}