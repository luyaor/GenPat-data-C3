{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92363c6d065768dcda1e523bdf983437", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce739455f49030490f58d2a30458e945", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java", "commitBeforeChange": "3c0c72f96477afb542ee37b3336f4b7b7613ff29", "commitAfterChange": "6f0a3dee5efc6217383f9bfd6d7a3a116b1c885b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAllVariants() throws Exception", "signatureAfterChange": "      @Test     public void testAllVariants() throws Exception", "diff": ["-        checkConfig.addAttribute(\"checkName\", \"true\");", "-        checkConfig.addAttribute(\"checkModifier\", \"true\");", "+        checkConfig.addAttribute(\"ignoreName\", \"false\");", "+        checkConfig.addAttribute(\"ignoreModifier\", \"false\");", "-            \"26:1: Class 'AbstractClass' must has abstract modifier.\",", "-            \"29:1: Class 'Class1Factory' must has abstract modifier.\",", "-            \"33:5: Class 'AbstractInnerClass' must has abstract modifier.\",", "-            \"38:5: Class 'WellNamedFactory' must has abstract modifier.\",};", "+            \"26:1: Class 'AbstractClass' must be declared as 'abstract'.\",", "+            \"29:1: Class 'Class1Factory' must be declared as 'abstract'.\",", "+            \"33:5: Class 'AbstractInnerClass' must be declared as 'abstract'.\",", "+            \"38:5: Class 'WellNamedFactory' must be declared as 'abstract'.\",", "+        };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d540a90e41fe82276d22e64c28338be7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java", "commitBeforeChange": "3c0c72f96477afb542ee37b3336f4b7b7613ff29", "commitAfterChange": "6f0a3dee5efc6217383f9bfd6d7a3a116b1c885b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testIllegalClassType() throws Exception", "signatureAfterChange": "      @Test     public void testIllegalClassType() throws Exception", "diff": ["-        checkConfig.addAttribute(\"checkName\", \"false\");", "-        checkConfig.addAttribute(\"checkModifier\", \"true\");", "+        checkConfig.addAttribute(\"ignoreName\", \"true\");", "+        checkConfig.addAttribute(\"ignoreModifier\", \"false\");", "-            \"26:1: Class 'AbstractClass' must has abstract modifier.\",", "-            \"29:1: Class 'Class1Factory' must has abstract modifier.\",", "-            \"33:5: Class 'AbstractInnerClass' must has abstract modifier.\",", "-            \"38:5: Class 'WellNamedFactory' must has abstract modifier.\",", "+            \"26:1: Class 'AbstractClass' must be declared as 'abstract'.\",", "+            \"29:1: Class 'Class1Factory' must be declared as 'abstract'.\",", "+            \"33:5: Class 'AbstractInnerClass' must be declared as 'abstract'.\",", "+            \"38:5: Class 'WellNamedFactory' must be declared as 'abstract'.\","]}]}