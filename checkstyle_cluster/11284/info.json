{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2497b4c2fb42822e89d8da6ed66d6d25", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d48f0eec8d0530afe887c7a2d083c9c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "5b4a81a4e1449e2baf5adca4b821c23bc87f4de2", "commitAfterChange": "b69e47845e1903966ddf39efdf49e103ff5a5248", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void doVisitToken(FullIdent ident, boolean isStatic,             boolean previous)", "signatureAfterChange": "     private void doVisitToken(FullIdent ident, boolean isStatic,             boolean previous)", "diff": ["-                if (!beforeFirstImport && separated) {", "-                    // This check should be made more robust to handle", "-                    // comments and imports that span more than one line.", "-                    if (line - lastImportLine < 2) {", "-                        log(line, MSG_SEPARATION, name);", "-                    }", "+                // This check should be made more robust to handle", "+                // comments and imports that span more than one line.", "+                if (!beforeFirstImport && separated && line - lastImportLine < 2) {", "+                    log(line, MSG_SEPARATION, name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5197abc836ef9c1287c3e15751f8b8d8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "89f4e3c8b106394adab068520f89a158867b168d", "commitAfterChange": "c09131defe36dde56b2d9767d1953d93e20bd200", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void doVisitToken(FullIdent ident, boolean isStatic,             boolean previous)", "signatureAfterChange": "     private void doVisitToken(FullIdent ident, boolean isStatic,             boolean previous)", "diff": ["-        if (groupIdx > lastGroup) {", "-            // This check should be made more robust to handle", "-            // comments and imports that span more than one line.", "+        if (!beforeFirstImport && isAlphabeticallySortableStaticImport(isStatic)", "+                || groupIdx == lastGroup) {", "+            doVisitTokenInSameGroup(isStatic, previous, name, line);", "+        }", "+        else if (groupIdx > lastGroup) {", "-        }", "-        else if (groupIdx == lastGroup || sortStaticImportsAlphabetically", "-                 && isAlphabeticallySortableStaticImport(isStatic)) {", "-            doVisitTokenInSameGroup(isStatic, previous, name, line);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c6bb15cca491b166735be0b0a6f2510", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "3b5c81da39e0a179d439ac18c880b3d79970037d", "commitAfterChange": "17754d363645285e49bf4323a1af5762af47a8ea", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void process(File aFile)", "signatureAfterChange": "     private void process(File aFile)", "diff": ["-                    this.getClass()));", "+                    this.getClass(), null));", "-                    this.getClass()));", "+                    this.getClass(), null));", "-                    this.getClass()));", "+                    this.getClass(), null));", "-                        this.getClass()));", "+                        this.getClass(), null));", "-                        this.getClass()));", "+                        this.getClass(), null));", "-                    this.getClass()));", "+                    this.getClass(), null));", "-                    this.getClass()));", "+                    this.getClass(), null));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d7d675ad99c67dfb0b2b91214f2a3bb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "10f348bbfd91fd8c2bd7776aff3c03f549380a44", "commitAfterChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void processIdent(DetailAST ast)", "signatureAfterChange": "     private void processIdent(DetailAST ast)", "diff": ["-                if (checkMethods && isClassMethod(ast)) {", "-                    log(ast, MSG_METHOD, ast.getText());", "+                if (checkMethods) {", "+                    final AbstractFrame frame = checkMethod(ast);", "+                    if (frame != null) {", "+                        logViolation(MSG_METHOD, ast, frame);", "+                    }", "-                    processField(ast, parentType);", "+                    final AbstractFrame frame = processField(ast, parentType);", "+                    if (frame != null) {", "+                        logViolation(MSG_VARIABLE, ast, frame);", "+                    }", "+        }", "+    }"]}]}