{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82153e43602fa6d068656cf519fc0498", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cdd59f08472094c8e210d96dc544314", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "04bca2e0435d598918603ce5a457ddc99e6ae5a5", "commitAfterChange": "c3baa3fa77f4ed8e475ab52db6d0f2f860d93ef0", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public void fireFileFinished(String aFileName)", "signatureAfterChange": "     public void fireFileFinished(String aFileName)", "diff": ["-        final Iterator it = mListeners.iterator();", "-        while (it.hasNext()) {", "-            final AuditListener listener = (AuditListener) it.next();", "-            listener.fileFinished(evt);", "+        if (accept(evt)) {", "+            final Iterator it = mListeners.iterator();", "+            while (it.hasNext()) {", "+                final AuditListener listener = (AuditListener) it.next();", "+                listener.fileFinished(evt);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "874c1c8d4b1481d5ec2b7696a009434e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "04bca2e0435d598918603ce5a457ddc99e6ae5a5", "commitAfterChange": "c3baa3fa77f4ed8e475ab52db6d0f2f860d93ef0", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void fireErrors(String aFileName, LocalizedMessage[] aErrors)", "signatureAfterChange": "     public void fireErrors(String aFileName, LocalizedMessage[] aErrors)", "diff": ["-            final Iterator it = mListeners.iterator();", "-            while (it.hasNext()) {", "-                final AuditListener listener = (AuditListener) it.next();", "-                listener.addError(evt);", "+            if (accept(evt)) {", "+                final Iterator it = mListeners.iterator();", "+                while (it.hasNext()) {", "+                    final AuditListener listener = (AuditListener) it.next();", "+                    listener.addError(evt);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be5020c566c7f1d6b15543dede8f1407", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "04bca2e0435d598918603ce5a457ddc99e6ae5a5", "commitAfterChange": "c3baa3fa77f4ed8e475ab52db6d0f2f860d93ef0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void fireFileStarted(String aFileName)", "signatureAfterChange": "     public void fireFileStarted(String aFileName)", "diff": ["-        final Iterator it = mListeners.iterator();", "-        while (it.hasNext()) {", "-            final AuditListener listener = (AuditListener) it.next();", "-            listener.fileStarted(evt);", "+        if (accept(evt)) {", "+            final Iterator it = mListeners.iterator();", "+            while (it.hasNext()) {", "+                final AuditListener listener = (AuditListener) it.next();", "+                listener.fileStarted(evt);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4295d3c83595f91a6934c8f28c53372", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "04bca2e0435d598918603ce5a457ddc99e6ae5a5", "commitAfterChange": "c3baa3fa77f4ed8e475ab52db6d0f2f860d93ef0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected void fireAuditFinished()", "signatureAfterChange": "     protected void fireAuditFinished()", "diff": ["-        final Iterator it = mListeners.iterator();", "-        while (it.hasNext()) {", "-            final AuditListener listener = (AuditListener) it.next();", "-            listener.auditFinished(evt);", "+        if (accept(evt)) {", "+            final Iterator it = mListeners.iterator();", "+            while (it.hasNext()) {", "+                final AuditListener listener = (AuditListener) it.next();", "+                listener.auditFinished(evt);", "+            }"]}]}