{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "463c44898701e456ff5de9a71371bdb0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afd264d8a8414d65e2bcb25408385017", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenTextCheck.java", "commitBeforeChange": "d46134bc27a43ca9244e0c609f8ec044a43f36de", "commitAfterChange": "41d538f9be41a0561ca7a28b159c034bcd3810e8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public int[] getAcceptableTokens()", "signatureAfterChange": "      @Override     public int[] getAcceptableTokens()", "diff": ["-        // Any tokens set by property 'tokens' are acceptable", "-        final Set<String> tokenNames = getTokenNames();", "-        final int[] result = new int[tokenNames.size()];", "-        int i = 0;", "-        for (final String name : tokenNames) {", "-            result[i] = Utils.getTokenId(name);", "-            i++;", "-        }", "-        return result;", "+        return Utils.getAllTokenIds();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e139b1efa6ee046c54d4b714772f3d72", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenCheck.java", "commitBeforeChange": "d46134bc27a43ca9244e0c609f8ec044a43f36de", "commitAfterChange": "41d538f9be41a0561ca7a28b159c034bcd3810e8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public int[] getAcceptableTokens()", "signatureAfterChange": "      @Override     public int[] getAcceptableTokens()", "diff": ["-        // Any tokens set by property 'tokens' are acceptable", "-        int[] tokensToCopy = getDefaultTokens();", "-        final Set<String> tokenNames = getTokenNames();", "-        if (!tokenNames.isEmpty()) {", "-            tokensToCopy = new int[tokenNames.size()];", "-            int i = 0;", "-            for (String name : tokenNames) {", "-                tokensToCopy[i] = Utils.getTokenId(name);", "-                i++;", "-            }", "-        }", "-        final int[] copy = new int[tokensToCopy.length];", "-        System.arraycopy(tokensToCopy, 0, copy, 0, tokensToCopy.length);", "-        return copy;", "+        return Utils.getAllTokenIds();", "+    }"]}]}