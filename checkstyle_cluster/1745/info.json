{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1fc1fe693b062ad32dd888e3cd3a5fff", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88d2110e1961666735278a074da5b008", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     ExpressionHandler createMethodCallHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "signatureAfterChange": "     ExpressionHandler createMethodCallHandler(IndentationCheck indentCheck,         DetailAST ast, ExpressionHandler parent)", "diff": ["-    ExpressionHandler createMethodCallHandler(IndentationCheck aIndentCheck,", "-        DetailAST aAst, ExpressionHandler aParent)", "+    ExpressionHandler createMethodCallHandler(IndentationCheck indentCheck,", "+        DetailAST ast, ExpressionHandler parent)", "-        ExpressionHandler theParent = aParent;", "-        DetailAST ast = aAst.getFirstChild();", "-        while ((ast != null) && (ast.getType() == TokenTypes.DOT)) {", "-            ast = ast.getFirstChild();", "+        ExpressionHandler theParent = parent;", "+        DetailAST astNode = ast.getFirstChild();", "+        while ((astNode != null) && (astNode.getType() == TokenTypes.DOT)) {", "+            astNode = astNode.getFirstChild();", "-        if ((ast != null) && isHandledType(ast.getType())) {", "-            theParent = getHandler(aIndentCheck, ast, theParent);", "-            mCreatedHandlers.put(ast, theParent);", "+        if ((astNode != null) && isHandledType(astNode.getType())) {", "+            theParent = getHandler(indentCheck, astNode, theParent);", "+            createdHandlers.put(astNode, theParent);", "-        return new MethodCallHandler(aIndentCheck, aAst, theParent);", "+        return new MethodCallHandler(indentCheck, ast, theParent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acefe8d5b397b08c70af7f3930f24d7b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private DetailAST getFirstAst(DetailAST aAst)", "signatureAfterChange": "     private DetailAST getFirstAst(DetailAST ast)", "diff": ["-    private DetailAST getFirstAst(DetailAST aAst)", "+    private DetailAST getFirstAst(DetailAST ast)", "-        DetailAST ast = aAst.getFirstChild();", "-        while ((ast != null) && (ast.getType() == TokenTypes.DOT)) {", "-            ast = ast.getFirstChild();", "+        DetailAST astNode = ast.getFirstChild();", "+        while ((astNode != null) && (astNode.getType() == TokenTypes.DOT)) {", "+            astNode = astNode.getFirstChild();", "-        if (ast == null) {", "-            ast = aAst;", "+        if (astNode == null) {", "+            astNode = ast;", "-        return ast;", "+        return astNode;"]}]}