{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47999be261392517a15d8f4533e96d1c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44a7f3a458c019b4b737b14ff548015c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "3fa2424fb3fbc30a9406cbcd29401f6d4285c77c", "commitAfterChange": "8d9d5e58ac50133f15ad8807bea302ab16aa5071", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected void logError(DetailAST aAst, String aSubtypeName)", "signatureAfterChange": "     protected void logChildError(int aLine,                                  int aActualLevel,                                  int aExpectedLevel)", "diff": ["-    protected void logError(DetailAST aAst, String aSubtypeName)", "+    protected void logChildError(int aLine,", "+                                 int aActualLevel,", "+                                 int aExpectedLevel)", "-        String typeStr = (aSubtypeName == \"\" ? \"\" : (\" \" + aSubtypeName));", "-        mIndentCheck.indentationLog(aAst.getLineNo(), mTypeName + typeStr", "-            + \" at indentation level not at correct indentation, \"", "-            + getLevel());", "+        Object[] args = new Object[] {", "+            mTypeName,", "+            new Integer(aActualLevel),", "+            new Integer(aExpectedLevel),", "+        };", "+        mIndentCheck.indentationLog(aLine,", "+                                    \"indentation.child.error\",", "+                                    args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5eda4fd5903c3b39064610118f34027", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "3fa2424fb3fbc30a9406cbcd29401f6d4285c77c", "commitAfterChange": "8d9d5e58ac50133f15ad8807bea302ab16aa5071", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected void logError(DetailAST aAst, String aSubtypeName,         int aActualLevel, int aExpectedLevel)", "signatureAfterChange": "     protected void logError(DetailAST aAst, String aSubtypeName,                             int aActualLevel, int aExpectedLevel)", "diff": ["-        int aActualLevel, int aExpectedLevel)", "+                            int aActualLevel, int aExpectedLevel)", "-        // TODO: i18n", "-        mIndentCheck.indentationLog(aAst.getLineNo(), mTypeName + typeStr", "-            + \" at indentation level \" + aActualLevel", "-            + \" not at correct indentation, \" + aExpectedLevel);", "+        Object[] args = new Object[] {", "+            mTypeName + typeStr,", "+            new Integer(aActualLevel),", "+            new Integer(aExpectedLevel),", "+        };", "+        mIndentCheck.indentationLog(aAst.getLineNo(),", "+                                    \"indentation.error\",", "+                                    args);"]}]}