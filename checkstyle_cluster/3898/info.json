{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eedfa4a7af24cafce8bf37ff7b40fdce", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d768811efdc488ee89dcf44f474f40c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "d4cee632835a462da2dc6794b059fb0d6b1c9bc2", "commitAfterChange": "d216ec75255a120ce7c24e51da7df63a2b9864de", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void process(File aFile)", "signatureAfterChange": "     private void process(File aFile)", "diff": ["-        mMessages.reset();", "+        getMessageCollector().reset();", "-            mMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE,", "-                                               \"general.fileNotFound\", null));", "+            getMessageCollector().add(new LocalizedMessage(", "+                0, Defn.CHECKSTYLE_BUNDLE,", "+                \"general.fileNotFound\", null));", "-            mMessages.add(new LocalizedMessage(", "-                              0, Defn.CHECKSTYLE_BUNDLE,", "-                              \"general.exception\",", "-                              new String[] {ioe.getMessage()}));", "+            getMessageCollector().add(new LocalizedMessage(", "+                0, Defn.CHECKSTYLE_BUNDLE,", "+                \"general.exception\",", "+                new String[] {ioe.getMessage()}));", "-            mMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE,", "-                                               \"general.exception\",", "-                                               new String[] {re.getMessage()}));", "+            getMessageCollector().add(new LocalizedMessage(", "+                0, Defn.CHECKSTYLE_BUNDLE,", "+                \"general.exception\",", "+                new String[] {re.getMessage()}));", "-            mMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE,", "-                                               \"general.exception\",", "-                                               new String[] {te.getMessage()}));", "+            getMessageCollector().add(new LocalizedMessage(", "+                0, Defn.CHECKSTYLE_BUNDLE,", "+                \"general.exception\",", "+                new String[] {te.getMessage()}));", "-            mMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE,", "-                                               \"general.exception\",", "-                                               new String[] {\"\" + err}));", "+            getMessageCollector().add(new LocalizedMessage(", "+                0, Defn.CHECKSTYLE_BUNDLE,", "+                \"general.exception\",", "+                new String[] {\"\" + err}));", "-        if (mMessages.size() == 0) {", "+        if (getMessageCollector().size() == 0) {", "-                fileName, mMessages.getMessages());", "+                fileName, getMessageCollector().getMessages());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7a29221451aaed8ca7d8f6c82dc80ab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "e6860c68f6901dc27c280667fa4c515b0ada17bb", "commitAfterChange": "6db0b3effd48f02d741b2202338d710b1b254910", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void process(File aFile)", "signatureAfterChange": "     private void process(File aFile)", "diff": ["-            getMessageCollector().add(new LocalizedMessage(", "-                0, Defn.CHECKSTYLE_BUNDLE,", "-                \"general.fileNotFound\", null));", "+            getMessageCollector().add(", "+                new LocalizedMessage(", "+                    0,", "+                    Defn.CHECKSTYLE_BUNDLE,", "+                    \"general.fileNotFound\",", "+                    null,", "+                    this.getClass()));", "-            getMessageCollector().add(new LocalizedMessage(", "-                0, Defn.CHECKSTYLE_BUNDLE,", "-                \"general.exception\",", "-                new String[] {ioe.getMessage()}));", "+            getMessageCollector().add(", "+                new LocalizedMessage(", "+                    0,", "+                    Defn.CHECKSTYLE_BUNDLE,", "+                    \"general.exception\",", "+                    new String[] {ioe.getMessage()},", "+                    this.getClass()));", "-            getMessageCollector().add(new LocalizedMessage(", "-                0, Defn.CHECKSTYLE_BUNDLE,", "-                \"general.exception\",", "-                new String[] {re.getMessage()}));", "+            getMessageCollector().add(", "+                new LocalizedMessage(", "+                    0,", "+                    Defn.CHECKSTYLE_BUNDLE,", "+                    \"general.exception\",", "+                    new String[] {re.getMessage()},", "+                    this.getClass()));", "-            getMessageCollector().add(new LocalizedMessage(", "-                0, Defn.CHECKSTYLE_BUNDLE,", "-                \"general.exception\",", "-                new String[] {te.getMessage()}));", "+            getMessageCollector().add(", "+                new LocalizedMessage(", "+                    0,", "+                    Defn.CHECKSTYLE_BUNDLE,", "+                    \"general.exception\",", "+                    new String[] {te.getMessage()},", "+                    this.getClass()));", "-            getMessageCollector().add(new LocalizedMessage(", "-                0, Defn.CHECKSTYLE_BUNDLE,", "-                \"general.exception\",", "-                new String[] {\"\" + err}));", "+            getMessageCollector().add(", "+                new LocalizedMessage(", "+                    0,", "+                    Defn.CHECKSTYLE_BUNDLE,", "+                    \"general.exception\",", "+                    new String[] {\"\" + err},", "+                    this.getClass()));"]}]}