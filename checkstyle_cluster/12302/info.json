{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a0372186496ba0c466449cfc5810d2f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45d0914880bc4eccb23f83de14d9e8cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java", "commitBeforeChange": "29027109bf962f47b6a6000fdca69b5679ce4b43", "commitAfterChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (TokenTypes.INTERFACE_DEF == aAST.getType()) {", "+        if (TokenTypes.INTERFACE_DEF == ast.getType()) {", "-                aAST.findFirstToken(TokenTypes.MODIFIERS);", "+                ast.findFirstToken(TokenTypes.MODIFIERS);", "-        else if (isInterfaceOrAnnotationMember(aAST)) {", "-            final DetailAST modifiers = aAST.findFirstToken(TokenTypes.MODIFIERS);", "+        else if (isInterfaceOrAnnotationMember(ast)) {", "+            final DetailAST modifiers = ast.findFirstToken(TokenTypes.MODIFIERS);", "-                            && aAST.getType() != TokenTypes.METHOD_DEF)", "+                            && ast.getType() != TokenTypes.METHOD_DEF)", "-        else if (aAST.getType() == TokenTypes.METHOD_DEF) {", "+        else if (ast.getType() == TokenTypes.METHOD_DEF) {", "-                            aAST.findFirstToken(TokenTypes.MODIFIERS);", "+                            ast.findFirstToken(TokenTypes.MODIFIERS);", "-            DetailAST parent = aAST.getParent();", "+            DetailAST parent = ast.getParent();", "-            if (checkFinal && !isAnnotatedWithSafeVarargs(aAST)) {", "+            if (checkFinal && !isAnnotatedWithSafeVarargs(ast)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7c03004d8f39af0bd858a84790ac721", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        switch (aAST.getType()) {", "+        switch (ast.getType()) {", "-            mScopeStack.push(new HashMap<String, DetailAST>());", "+            scopeStack.push(new HashMap<String, DetailAST>());", "-            if (ScopeUtils.inInterfaceBlock(aAST)", "-                || inAbstractOrNativeMethod(aAST))", "+            if (ScopeUtils.inInterfaceBlock(ast)", "+                || inAbstractOrNativeMethod(ast))", "-            if ((aAST.getParent().getType() != TokenTypes.OBJBLOCK)", "-                && (aAST.getParent().getType() != TokenTypes.FOR_EACH_CLAUSE))", "+            if ((ast.getParent().getType() != TokenTypes.OBJBLOCK)", "+                && (ast.getParent().getType() != TokenTypes.FOR_EACH_CLAUSE))", "-                insertVariable(aAST);", "+                insertVariable(ast);", "-            final int parentType = aAST.getParent().getType();", "+            final int parentType = ast.getParent().getType();", "-                // TODO: is there better way to check is aAST", "+                // TODO: is there better way to check is ast", "-                if (aAST.getParent().getFirstChild() == aAST) {", "-                    removeVariable(aAST);", "+                if (ast.getParent().getFirstChild() == ast) {", "+                    removeVariable(ast);"]}]}