{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "67e805ba12cd0eef6124a4319933adb3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66a18660d98d6875a28d0bb1f6078d6b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheck.java", "commitBeforeChange": "b02d9661f87fa5207986958885ddf10ddc512ad6", "commitAfterChange": "e936c4c6fae73ec4c53aa8f2f9db302d064e1b8e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          @Override         public Object put(Object key, Object value)", "signatureAfterChange": "          @Override         public Object put(Object key, Object value)", "diff": ["-            synchronized (lock) {", "-                final Object oldValue = super.put(key, value);", "-                if (oldValue != null && key instanceof String) {", "-                    final String keyString = (String) key;", "-                    duplicatedStrings.add(keyString);", "-                }", "-                return oldValue;", "+            final Object oldValue = super.put(key, value);", "+            if (oldValue != null && key instanceof String) {", "+                final String keyString = (String) key;", "+                duplicatedStrings.add(keyString);", "+            return oldValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6b712d0d09c4f632715f24106c7c55f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "260d2b935c0b25688a11077ada9405b791857fd8", "commitAfterChange": "ad42ed29799a13b9426a05cc94b4a4aaba709c2c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void doVisitToken(FullIdent ident, boolean isStatic,             boolean previous)", "signatureAfterChange": "     private void doVisitToken(FullIdent ident, boolean isStatic,             boolean previous)", "diff": ["-        if (ident != null) {", "-            final String name = ident.getText();", "-            final int groupIdx = getGroupNumber(name);", "-            final int line = ident.getLineNo();", "+        final String name = ident.getText();", "+        final int groupIdx = getGroupNumber(name);", "+        final int line = ident.getLineNo();", "-            if (groupIdx > lastGroup) {", "-                // This check should be made more robust to handle", "-                // comments and imports that span more than one line.", "-                if (!beforeFirstImport && separated && line - lastImportLine < 2) {", "-                    log(line, MSG_SEPARATION, name);", "-                }", "+        if (groupIdx > lastGroup) {", "+            // This check should be made more robust to handle", "+            // comments and imports that span more than one line.", "+            if (!beforeFirstImport && separated && line - lastImportLine < 2) {", "+                log(line, MSG_SEPARATION, name);", "-            else if (groupIdx == lastGroup || sortStaticImportsAlphabetically", "-                     && isAlphabeticallySortableStaticImport(isStatic)) {", "-                doVisitTokenInSameGroup(isStatic, previous, name, line);", "-            }", "-            else {", "-                log(line, MSG_ORDERING, name);", "-            }", "-", "-            lastGroup = groupIdx;", "-            lastImport = name;", "+        else if (groupIdx == lastGroup || sortStaticImportsAlphabetically", "+                 && isAlphabeticallySortableStaticImport(isStatic)) {", "+            doVisitTokenInSameGroup(isStatic, previous, name, line);", "+        }", "+        else {", "+            log(line, MSG_ORDERING, name);", "+        }", "+", "+        lastGroup = groupIdx;", "+        lastImport = name;"]}]}