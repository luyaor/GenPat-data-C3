{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "38c4340c4a96c24783993079d4640213", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d398d4a884ac0210f558ba3204caf5c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-            \"21: 'import' should be separated from previous statement.\",", "-            \"35: 'CLASS_DEF' should be separated from previous statement.\",", "-            \"38: 'VARIABLE_DEF' should be separated from previous statement.\",", "-            \"39: 'STATIC_INIT' should be separated from previous statement.\",", "-            \"77: 'INTERFACE_DEF' should be separated from previous statement.\",", "+            \"21: \" + getCheckMessage(MSG_SHOULD_BE_SEPARATED, \"import\"),", "+            \"35: \" + getCheckMessage(MSG_SHOULD_BE_SEPARATED, \"CLASS_DEF\"),", "+            \"38: \" + getCheckMessage(MSG_SHOULD_BE_SEPARATED, \"VARIABLE_DEF\"),", "+            \"39: \" + getCheckMessage(MSG_SHOULD_BE_SEPARATED, \"STATIC_INIT\"),", "+            \"77: \" + getCheckMessage(MSG_SHOULD_BE_SEPARATED, \"INTERFACE_DEF\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3935b36448bf4ec1b994ad83f6d115bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testStyleCompactNoArray() throws Exception", "signatureAfterChange": "      @Test     public void testStyleCompactNoArray() throws Exception", "diff": ["-            \"5: Annotation style must be 'COMPACT_NO_ARRAY'.\",", "-            \"20: Annotation style must be 'COMPACT_NO_ARRAY'.\",", "-            \"41: Annotation style must be 'COMPACT_NO_ARRAY'.\",", "-            \"43: Annotation style must be 'COMPACT_NO_ARRAY'.\",", "-            \"47: Annotation style must be 'COMPACT_NO_ARRAY'.\",", "+            \"5: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"COMPACT_NO_ARRAY\"),", "+            \"20: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"COMPACT_NO_ARRAY\"),", "+            \"41: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"COMPACT_NO_ARRAY\"),", "+            \"43: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"COMPACT_NO_ARRAY\"),", "+            \"47: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"COMPACT_NO_ARRAY\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a234fc3e312fe0343209fe97d682594", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java", "commitBeforeChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "commitAfterChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testDefaultPackage() throws Exception", "signatureAfterChange": "     @Test     public void testDefaultPackage() throws Exception", "diff": ["-            \"4: Wrong lexicographical order for 'java.awt.Button.ABORT' import.\",", "-            \"9: Wrong lexicographical order for 'java.awt.Dialog' import.\",", "-            \"13: Wrong lexicographical order for 'java.io.File' import.\",", "-            \"15: Wrong lexicographical order for 'java.io.InputStream' import.\",", "-            \"20: Wrong lexicographical order for 'com.google.common.*' import.\",", "+            \"4: \" + getCheckMessage(MSG_LEX, \"java.awt.Button.ABORT\"),", "+            \"9: \" + getCheckMessage(MSG_LEX, \"java.awt.Dialog\"),", "+            \"13: \" + getCheckMessage(MSG_LEX, \"java.io.File\"),", "+            \"15: \" + getCheckMessage(MSG_LEX, \"java.io.InputStream\"),", "+            \"20: \" + getCheckMessage(MSG_LEX, \"com.google.common.*\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fb800b8db49f52d9ed4e1a8fa94504b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault()         throws Exception", "signatureAfterChange": "      @Test     public void testDefault()         throws Exception", "diff": ["-            \"15:19: '+' should be on a new line.\",", "-            \"16:15: '-' should be on a new line.\",", "-            \"24:18: '&&' should be on a new line.\",", "-            \"39:30: '&' should be on a new line.\",", "-            \"52:29: '&' should be on a new line.\",", "+            \"15:19: \" + getCheckMessage(LINE_NEW, \"+\"),", "+            \"16:15: \" + getCheckMessage(LINE_NEW, \"-\"),", "+            \"24:18: \" + getCheckMessage(LINE_NEW, \"&&\"),", "+            \"39:30: \" + getCheckMessage(LINE_NEW, \"&\"),", "+            \"52:29: \" + getCheckMessage(LINE_NEW, \"&\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd6e7166ca9d91d01df45cf99e9d21cd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-            \"8:1: '{' should be on the previous line.\",", "-            \"12:5: '{' should be on the previous line.\",", "-            \"21:5: '{' should be on the previous line.\",", "-            \"30:5: '{' should be on the previous line.\",", "-            \"39:5: '{' should be on the previous line.\",", "+            \"8:1: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"12:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"21:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"30:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"39:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0c24c0b21d1e256defa8c62217b1abf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testMultipleEmptyLinesBetweenClassMembers() throws Exception", "signatureAfterChange": "      @Test     public void testMultipleEmptyLinesBetweenClassMembers() throws Exception", "diff": ["-            \"21: 'package' has more than 1 empty lines before.\",", "-            \"24: 'import' has more than 1 empty lines before.\",", "-            \"33: 'VARIABLE_DEF' has more than 1 empty lines before.\",", "-            \"38: 'VARIABLE_DEF' has more than 1 empty lines before.\",", "-            \"43: 'METHOD_DEF' has more than 1 empty lines before.\",", "+            \"21: \" + getCheckMessage(MSG_MULTIPLE_LINES, \"package\"),", "+            \"24: \" + getCheckMessage(MSG_MULTIPLE_LINES, \"import\"),", "+            \"33: \" + getCheckMessage(MSG_MULTIPLE_LINES, \"VARIABLE_DEF\"),", "+            \"38: \" + getCheckMessage(MSG_MULTIPLE_LINES, \"VARIABLE_DEF\"),", "+            \"43: \" + getCheckMessage(MSG_MULTIPLE_LINES, \"METHOD_DEF\"),"]}]}