{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a72f2fe0c2d4f91e3a24a72aab43ed31", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c42be2825cf85a0b8570d86cdfd2f30", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "a7d98740745af8c79e8d8a56c7b3ed75837b1695", "commitAfterChange": "a16368d3f85e8ad068ebf65a2025c8cf90cf7d3b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private Properties createOverridingProperties()", "signatureAfterChange": "     private Properties createOverridingProperties()", "diff": ["+            FileInputStream inStream = null;", "-                retVal.load(new FileInputStream(mPropertiesFile));", "+                inStream = new FileInputStream(mPropertiesFile);", "+                retVal.load(inStream);", "+            finally {", "+                try {", "+                    if (inStream != null) {", "+                        inStream.close();", "+                    }", "+                }", "+                catch (IOException e) {", "+                    throw new BuildException(", "+                        \"Error closing Properties file '\"", "+                        + mPropertiesFile + \"'\",", "+                        e, getLocation());", "+                }", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79e0f125c34464545b8616c8f29a220c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "33efb558db835d60ca54644860a096f08d802fb5", "commitAfterChange": "e689662e9d47347cb2f326e1c16901ee1c4c6367", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static Set<String> getPackageNames(ClassLoader classLoader)         throws CheckstyleException", "signatureAfterChange": "     public static Set<String> getPackageNames(ClassLoader classLoader)             throws CheckstyleException", "diff": ["-        throws CheckstyleException {", "+            throws CheckstyleException {", "-        Enumeration<URL> packageFiles = null;", "+        Set<String> result;", "-            packageFiles = classLoader.getResources(CHECKSTYLE_PACKAGES);", "+            //create the loader outside the loop to prevent PackageObjectFactory", "+            //being created anew for each file", "+            final PackageNamesLoader namesLoader = new PackageNamesLoader();", "+", "+            final Enumeration<URL> packageFiles = classLoader.getResources(CHECKSTYLE_PACKAGES);", "+", "+            while (packageFiles.hasMoreElements()) {", "+                final URL packageFile = packageFiles.nextElement();", "+                InputStream stream = null;", "+", "+                try {", "+                    stream = new BufferedInputStream(packageFile.openStream());", "+                    final InputSource source = new InputSource(stream);", "+                    namesLoader.parseInputSource(source);", "+                }", "+                catch (IOException e) {", "+                    throw new CheckstyleException(\"unable to open \" + packageFile, e);", "+                }", "+                finally {", "+                    Closeables.closeQuietly(stream);", "+                }", "+            }", "+", "+            result = namesLoader.getPackageNames();", "+", "-            throw new CheckstyleException(", "-                    \"unable to get package file resources\", e);", "+            throw new CheckstyleException(\"unable to get package file resources\", e);", "+        }", "+        catch (ParserConfigurationException | SAXException e) {", "+            throw new CheckstyleException(\"unable to open one of package files\", e);", "-        //create the loader outside the loop to prevent PackageObjectFactory", "-        //being created anew for each file", "-        final PackageNamesLoader namesLoader = newPackageNamesLoader();", "-", "-        while (packageFiles.hasMoreElements()) {", "-            final URL packageFile = packageFiles.nextElement();", "-            InputStream stream = null;", "-", "-            try {", "-                stream = new BufferedInputStream(packageFile.openStream());", "-                final InputSource source = new InputSource(stream);", "-                loadPackageNamesSource(source, \"default package names\",", "-                    namesLoader);", "-            }", "-            catch (IOException e) {", "-                throw new CheckstyleException(", "-                        \"unable to open \" + packageFile, e);", "-            }", "-            finally {", "-                Closeables.closeQuietly(stream);", "-            }", "-        }", "-        return namesLoader.getPackageNames();", "-    }", "+        return result;"]}]}