{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ffe5db997b3b8252daf7633bb349ae6b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "447144c17a86469f9214b399ff610062", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "b79466ba09c359480cce46a5cfdad44f07bf9793", "commitAfterChange": "e0887211663929e261910403eb769a093af83783", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void openFile(File file, final Component parent)", "signatureAfterChange": "      public void openFile(File file, final Component parent)", "diff": ["-                // insert the contents of the file to the text area", "-                for (String element : sourceLines) {", "-                    addLineToPosition(textArea.getText().length());", "-                    textArea.append(element + System.lineSeparator());", "-                }", "+                    addLineToPosition(textArea.getText().length());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c11f7ee432d65072cb7538c698e9fbce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java", "commitBeforeChange": "a3b229b5d8dcafc164007ac9d0a7f5b2599c0dd6", "commitAfterChange": "33ab409c4e5a4c5c29a5c19eb4b45f079f17d481", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private String checkImportStatements(String className)", "signatureAfterChange": "     private String checkImportStatements(String className)", "diff": ["-            final String importArg = importLineText.getText();", "+            String importArg = importLineText.getText();", "-                final String fqClass =", "-                    importArg.substring(0, importArg.length() - 1)", "-                    + className;", "-                // assume that illegalInstances only contain existing classes", "-                // or else we might create a false alarm here", "-                if (illegalClasses.contains(fqClass)) {", "-                    illegalType = fqClass;", "-                    break;", "-                }", "+                importArg = importArg.substring(0, importArg.length() - 1)", "+                        + className;", "-            else {", "-                if (CommonUtils.baseClassName(importArg).equals(className)", "+            if (CommonUtils.baseClassName(importArg).equals(className)", "-                    illegalType = importArg;", "-                    break;", "-                }", "+                illegalType = importArg;", "+                break;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7eb146311599008929788897adfda65", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "440cf6836f278602a790d764f257777be80d8b9e", "commitAfterChange": "686afc521a11088c57632352eb6fd60a682b03d6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "       private static Configuration loadConfiguration(String aName)         throws CheckstyleException", "signatureAfterChange": "     private Configuration loadConfiguration(String aName)         throws CheckstyleException", "diff": ["- ", "-    private static Configuration loadConfiguration(String aName)", "+    private Configuration loadConfiguration(String aName)", "-        String fName =", "+        return loadConfiguration(aName, new Properties());", "+    }", "-        return ConfigurationLoader.loadConfiguration(fName, new Properties());"]}]}