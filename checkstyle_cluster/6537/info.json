{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a82ae808b54763964182b110638f49d1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e8945fb4dd5541a7027812bd53efdde", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "0382b7907b54e95408344863915a847dabc37f12", "commitAfterChange": "eb5896a4a1d66552f5100046413f15d62b485b62", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public ExpressionHandler getHandler(IndentationCheck indentCheck,         DetailAST ast, ExpressionHandler parent)", "signatureAfterChange": "     public AbstractExpressionHandler getHandler(IndentationCheck indentCheck,         DetailAST ast, AbstractExpressionHandler parent)", "diff": ["-    public ExpressionHandler getHandler(IndentationCheck indentCheck,", "-        DetailAST ast, ExpressionHandler parent) {", "-        final ExpressionHandler handler =", "+    public AbstractExpressionHandler getHandler(IndentationCheck indentCheck,", "+        DetailAST ast, AbstractExpressionHandler parent) {", "+        final AbstractExpressionHandler handler =", "-        ExpressionHandler expHandler = null;", "+        AbstractExpressionHandler expHandler = null;", "-                expHandler = (ExpressionHandler) handlerCtor.newInstance(", "+                expHandler = (AbstractExpressionHandler) handlerCtor.newInstance("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c32a4947d7472354d96d1770d3fddc06", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ExpressionHandler(IndentationCheck aIndentCheck,             String aTypeName, DetailAST aExpr, ExpressionHandler aParent)", "signatureAfterChange": "     public ExpressionHandler(IndentationCheck indentCheck,             String typeName, DetailAST expr, ExpressionHandler parent)", "diff": ["-    public ExpressionHandler(IndentationCheck aIndentCheck,", "-            String aTypeName, DetailAST aExpr, ExpressionHandler aParent)", "+    public ExpressionHandler(IndentationCheck indentCheck,", "+            String typeName, DetailAST expr, ExpressionHandler parent)", "-        mIndentCheck = aIndentCheck;", "-        mTypeName = aTypeName;", "-        mMainAst = aExpr;", "-        mParent = aParent;", "+        this.indentCheck = indentCheck;", "+        this.typeName = typeName;", "+        mainAst = expr;", "+        this.parent = parent;"]}]}