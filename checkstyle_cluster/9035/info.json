{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc0e08f32ffc53579c06dc2d21e87945", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "447d2aedaf71372cc4592766333805d1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "27149f3504a2f350b74f456a9bffbae76a460060", "commitAfterChange": "5ede09997c283b4c418f0f540848e006be04fa87", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Test     public void testWithSumDefaultMsg() throws Exception", "signatureAfterChange": "      @Test     public void testWithSumDefaultMsg() throws Exception", "diff": ["-            \"22:32: Total count of 2 exceeds maximum count 1 under 'EQUAL'.\",", "-            \"22:50: Total count of 2 exceeds maximum count 1 under 'EQUAL'.\",", "-            \"23:33: Total count of 2 exceeds maximum count 1 under 'NOT_EQUAL'.\",", "-            \"23:51: Total count of 2 exceeds maximum count 1 under 'NOT_EQUAL'.\",", "+            \"22:32: \" + getCheckMessage(MSG_KEY_SUM_MAX, 2, 1, \"EQUAL\"),", "+            \"22:50: \" + getCheckMessage(MSG_KEY_SUM_MAX, 2, 1, \"EQUAL\"),", "+            \"23:33: \" + getCheckMessage(MSG_KEY_SUM_MAX, 2, 1, \"NOT_EQUAL\"),", "+            \"23:51: \" + getCheckMessage(MSG_KEY_SUM_MAX, 2, 1, \"NOT_EQUAL\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bc94b2a43c1abc86dce93bbfe2841fb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "commitAfterChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "      @Test     public void testInvalidAssignWithChecker() throws Exception", "signatureAfterChange": "      @Test     public void testInvalidAssignWithChecker() throws Exception", "diff": ["-            \"8: 'getLineNo' have incorrect indentation level 10, expected level should be 12.\",", "-            \"10: 'getLine' have incorrect indentation level 10, expected level should be 12.\",", "-            \"14: '=' have incorrect indentation level 9, expected level should be 12.\",", "-            \"15: '1' have incorrect indentation level 10, expected level should be 12.\",", "+            \"8: \" + getCheckMessage(MSG_ERROR, \"getLineNo\", 10, 12),", "+            \"10: \" + getCheckMessage(MSG_ERROR, \"getLine\", 10, 12),", "+            \"14: \" + getCheckMessage(MSG_ERROR, \"=\", 9, 12),", "+            \"15: \" + getCheckMessage(MSG_ERROR, \"1\", 10, 12),"]}]}