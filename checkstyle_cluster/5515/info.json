{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "70212cda55cee3a46e2e7d05e8a00ec4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b197dffcd443d47f8c15937c34724e1e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testMessageProperty()         throws Exception", "signatureAfterChange": "      @Test     public void testMessageProperty()         throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"format\", illegal);", "-        mCheckConfig.addAttribute(\"message\", message);", "+        checkConfig.addAttribute(\"format\", illegal);", "+        checkConfig.addAttribute(\"message\", message);", "-        verify(mCheckConfig, getPath(\"InputSemantic.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSemantic.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb00bf97acd9d7f6f79beaccf7edb707", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheckTest.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testMessageProperty()         throws Exception", "signatureAfterChange": "      @Test     public void testMessageProperty()         throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"format\", illegal);", "-        mCheckConfig.addAttribute(\"message\", message);", "+        checkConfig.addAttribute(\"format\", illegal);", "+        checkConfig.addAttribute(\"message\", message);", "-        verify(mCheckConfig, getPath(\"InputSemantic.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSemantic.java\"), expected);"]}]}