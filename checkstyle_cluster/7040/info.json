{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "082c2670ec3aa664d1a835d995f29a9f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29d6fa50049e539e6c26fc35df849ded", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/StringArrayReaderTest.java", "commitBeforeChange": "fb97056b9b58f7b33c53348da592c2896b72e575", "commitAfterChange": "d471c9cd5437242b7d9e3f3c19409854fc74e50c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testMisc()", "signatureAfterChange": "      public void testLineBreakSingleChar()", "diff": ["-    public void testMisc()", "+", "+    public void testLineBreakSingleChar()", "+    {", "+        final StringArrayReader o = new StringArrayReader(new String[] {\"a\", \"bc\"});", "+        try {", "+            int a = o.read();", "+            assertEquals('a', a);", "+            int nl1 = o.read();", "+            assertEquals('\\n', nl1);", "+            int b = o.read();", "+            assertEquals('b', b);", "+            int c = o.read();", "+            assertEquals('c', c);", "+            int nl2 = o.read();", "+            assertEquals('\\n', nl2);", "+            int eof = o.read();", "+            assertEquals(-1, eof);", "+        }", "+        catch (IOException ex) {", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e493d88847dcdb06a2b5a32b6b91fc6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "3fca3c9250864912e36783302ebe8f04f17ec262", "commitAfterChange": "d6bdd7ee798c9c3b721483cae4efb8faa97c8f1c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public FileText(File file, String charsetName) throws IOException", "signatureAfterChange": "     public FileText(File file, String charsetName) throws IOException", "diff": ["-        final StringBuilder buf = new StringBuilder();", "-        final FileInputStream stream = new FileInputStream(file);", "-        final Reader reader = new InputStreamReader(stream, decoder);", "-        try {", "-            final char[] chars = new char[READ_BUFFER_SIZE];", "-            while (true) {", "-                final int len = reader.read(chars);", "-                if (len < 0) {", "-                    break;", "-                }", "-                buf.append(chars, 0, len);", "-            }", "-        }", "-        finally {", "-            Closeables.closeQuietly(reader);", "-        }", "-        // buf.trimToSize(); // could be used instead of toString().", "-        fullText = buf.toString();", "+        fullText = readFile(file, decoder);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52f99e2cf6c30e2f0b3f185bf05aa4ad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/XMLLoggerTest.java", "commitBeforeChange": "7b0388ee96bf14872ae095da85738af97ef857d5", "commitAfterChange": "c74d7b7549dffa19bea50b0b9207706174d20c0b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private String[] getOutStreamLines()         throws IOException", "signatureAfterChange": "      private String[] getOutStreamLines()         throws IOException", "diff": ["-        final BufferedReader reader =", "-            new BufferedReader(new InputStreamReader(inStream, StandardCharsets.UTF_8));", "-        while (true) {", "-            final String line = reader.readLine();", "-            if (line == null) {", "-                break;", "+        try (final BufferedReader reader = new BufferedReader(", "+                new InputStreamReader(inStream, StandardCharsets.UTF_8))) {", "+            while (true) {", "+                final String line = reader.readLine();", "+                if (line == null) {", "+                    break;", "+                }", "+                lineList.add(line);", "-            lineList.add(line);", "-        reader.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8831f7db747d66f9675b21f417bcf67c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Utils.java", "commitBeforeChange": "7d38133e430f6c695c40d88c63af4c44f10878f9", "commitAfterChange": "9b86619fcafdc2b10cb78c9261b06a22be200464", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static String[] getLines(String aFileName)         throws IOException", "signatureAfterChange": "     public static String[] getLines(String aFileName)         throws IOException", "diff": ["+        final ArrayList lines = new ArrayList();", "-        final ArrayList lines = new ArrayList();", "-        while (true) {", "-            final String l = lnr.readLine();", "-            if (l == null) {", "-                break;", "+        try {", "+            while (true) {", "+                final String l = lnr.readLine();", "+                if (l == null) {", "+                    break;", "+                }", "+                lines.add(l);", "-            lines.add(l);", "+        }", "+        finally {", "+            try {", "+                lnr.close();", "+            }", "+            catch (IOException e) {", "+                ; // silently ignore", "+            }"]}]}