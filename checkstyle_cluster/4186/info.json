{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d5902e3366232a8d7e371e60bd1b5e1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30a3f49203a55eaf7c01ffab92ca8b15", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "5b07a9df8af02f337432119e3349344ae13c7065", "commitAfterChange": "e5f09c7fd2b5115bd164a5ed4f0a5e376c2dc2d7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Class resolve(String aName) throws ClassNotFoundException", "signatureAfterChange": "     public Class resolve(String aName) throws ClassNotFoundException", "diff": ["-            if (imp.endsWith(aName) && isLoadable(imp)) {", "-                return safeLoad(imp);", "+            if (imp.endsWith(aName)) {", "+                if (isLoadable(imp)) {", "+                    return safeLoad(imp);", "+                }", "+                // perhaps this is a import for inner class", "+                // let's try load it.", "+                int dot = imp.lastIndexOf(\".\");", "+                if (dot != -1) {", "+                    final String innerName = imp.substring(0, dot) + \"$\"", "+                        + imp.substring(dot + 1);", "+                    if (isLoadable(innerName)) {", "+                        return safeLoad(innerName);", "+                    }", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e50d1c485598351feb40b9b71b1d0472", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "6125beffc437f970eae276b4a6542265c6547784", "commitAfterChange": "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Class resolve(String aName) throws ClassNotFoundException", "signatureAfterChange": "     public Class resolve(String aName, String aCurrentClass)         throws ClassNotFoundException", "diff": ["-    public Class resolve(String aName) throws ClassNotFoundException", "+    public Class resolve(String aName, String aCurrentClass)", "+        throws ClassNotFoundException", "+        }", "+        //Perhaps it's fullyqualified inner class", "+        int dotIdx = aName.lastIndexOf(\".\");", "+        if (dotIdx != -1) {", "+            final String cn = aName.substring(0, dotIdx) + \"$\"", "+                + aName.substring(dotIdx + 1);", "+            if (isLoadable(cn)) {", "+                return safeLoad(cn);", "+            }", "+        //inner class of this class???", "+        if (!\"\".equals(aCurrentClass)) {", "+            final String innerClass = ((mPkg != null) ? (mPkg + \".\") : \"\")", "+                + aCurrentClass + \"$\" + aName;", "+            if (isLoadable(innerClass)) {", "+                return safeLoad(innerClass);", "+            }", "+        }", "+"]}]}