{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "64321bfda7d4a62684cd091f209775c1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72d670e6442e1a5ae9794fe38f046a12", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheck.java", "commitBeforeChange": "84a9ea5f6b3f000b840f184100ed3d2ebc096978", "commitAfterChange": "ca39f3af5a1e4fa088e42dde4ab3fc0f8daac723", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["+        if (mIgnoreDirectoryName) {", "+            return;", "+        }", "+", "+        // Calculate the directory name, but stripping off the last", "+        // part.", "+        final String fname = getFileContents().getFilename();", "+        final int lastPos = fname.lastIndexOf(File.separatorChar);", "+        final String dirname = fname.substring(0, lastPos);", "+", "+        // Convert the found package name into the expected directory name.", "+        final DetailAST nameAST = aAST.getLastChild().getPreviousSibling();", "+        final FullIdent full = FullIdent.createFullIdent(nameAST);", "+        final String expected = full.getText().replace('.', File.separatorChar);", "+", "+        // Finally see that the real directory ends with the expected directory", "+        if (!dirname.endsWith(expected)) {", "+            log(full.getLineNo(),", "+                full.getColumnNo(),", "+                \"package.dir.mismatch\",", "+                expected);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9701d26047bbe32d0277f2d812afb9d1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheck.java", "commitBeforeChange": "82fc3397f8b8776ef41b5aa2d3404e78a8b15ff7", "commitAfterChange": "7b3a329cf8645625097a2e17eb62a3430d9bb35a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-        if (mIgnoreDirectoryName) {", "-            return;", "-        }", "-", "-        // Calculate the directory name, but stripping off the last", "-        // part.", "-        final String fname = getFileContents().getFilename();", "-        final int lastPos = fname.lastIndexOf(File.separatorChar);", "-        final String dirname = fname.substring(0, lastPos);", "-", "-        // Convert the found package name into the expected directory name.", "-        final DetailAST nameAST = aAST.getLastChild().getPreviousSibling();", "-        final FullIdent full = FullIdent.createFullIdent(nameAST);", "-        final String expected = full.getText().replace('.', File.separatorChar);", "-", "-        // Finally see that the real directory ends with the expected directory", "-        if (!dirname.endsWith(expected)) {", "-            log(full.getLineNo(),", "-                full.getColumnNo(),", "-                \"package.dir.mismatch\",", "-                expected);", "-        }"]}]}