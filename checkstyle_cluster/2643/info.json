{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e08797b6b9e45806101f79788f7bc8dd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25619424799a4ab7f1e7fc5483863f84", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void removeVariable(DetailAST aAST)", "signatureAfterChange": "     private void removeVariable(DetailAST ast)", "diff": ["-    private void removeVariable(DetailAST aAST)", "+    private void removeVariable(DetailAST ast)", "-        for (int i = mScopeStack.size() - 1; i >= 0; i--) {", "-            final Map<String, DetailAST> state = mScopeStack.peek(i);", "-            final Object obj = state.remove(aAST.getText());", "+        for (int i = scopeStack.size() - 1; i >= 0; i--) {", "+            final Map<String, DetailAST> state = scopeStack.peek(i);", "+            final Object obj = state.remove(ast.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d65944c8f1314c9c458701e23f8499d1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected final ClassInfo findClassAlias(final String aName)", "signatureAfterChange": "     protected final ClassInfo findClassAlias(final String name)", "diff": ["-    protected final ClassInfo findClassAlias(final String aName)", "+    protected final ClassInfo findClassAlias(final String name)", "-        for (int i = mTypeParams.size() - 1; i >= 0; i--) {", "-            final Map<String, ClassInfo> paramMap = mTypeParams.peek(i);", "-            ci = paramMap.get(aName);", "+        for (int i = typeParams.size() - 1; i >= 0; i--) {", "+            final Map<String, ClassInfo> paramMap = typeParams.peek(i);", "+            ci = paramMap.get(name);"]}]}