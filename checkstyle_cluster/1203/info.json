{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b62e6dae1135767e2284db699d2a0fe5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73ca5282e4db64c697f5ac876f1df6d0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule341onetoplevel/OneTopLevelClassTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void goodTest() throws Exception", "signatureAfterChange": "      @Test     public void goodTest() throws Exception", "diff": ["-        Configuration checkConfig = builder.getCheckConfig(\"OneTopLevelClass\");", "-        String filePath = builder.getFilePath(\"OneTopLevelClassInputGood\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"OneTopLevelClass\");", "+        final String filePath = builder.getFilePath(\"OneTopLevelClassInputGood\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ac89c6d3f8169e06f79112272c894a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule32packagestate/LineLengthTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void lineLengthTest() throws Exception", "signatureAfterChange": "      @Test     public void lineLengthTest() throws Exception", "diff": ["-        Configuration checkConfig = builder.getCheckConfig(\"LineLength\");", "-        String filePath = builder.getFilePath(\"LineLengthInput2\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"LineLength\");", "+        final String filePath = builder.getFilePath(\"LineLengthInput2\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d41ccdea5509191dbb193ad580f8dc1a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyRightCurlyTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void leftCurlyBracesTest() throws Exception", "signatureAfterChange": "      @Test     public void leftCurlyBracesTest() throws Exception", "diff": ["-        Configuration checkConfig = builder.getCheckConfig(\"LeftCurly\");", "-        String filePath = builder.getFilePath(\"LeftCurlyInput_Braces\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"LeftCurly\");", "+        final String filePath = builder.getFilePath(\"LeftCurlyInput_Braces\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}]}