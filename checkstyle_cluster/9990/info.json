{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "120d8b9cb4500b0b9780368fb54aa6ae", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e8ef244bbda494615dfb3b78f704a3a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java", "commitBeforeChange": "78e9ce870170ca3ef88fd78f8e0af0681c958eb3", "commitAfterChange": "ea4085cd15fefe1e70a495798187c425295c74b6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        final String[] lines = getLines();", "-        final String line = lines[aAST.getLineNo() - 1];", "-        final int after = aAST.getColumnNo() + aAST.getText().length();", "+        DetailAST targetAST = aAST;", "+        if (targetAST.getType() == TokenTypes.TYPECAST) {", "+            targetAST = targetAST.findFirstToken(TokenTypes.RPAREN);", "+        }", "+        final String line = getLines()[aAST.getLineNo() - 1];", "+        final int after =", "+            targetAST.getColumnNo() + targetAST.getText().length();", "-                log(aAST.getLineNo(), after, \"ws.followed\", aAST.getText());", "+                log(targetAST.getLineNo(), after,", "+                    \"ws.followed\", targetAST.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23c7234152ee8d321e3b37406390b680", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/IllegalImportCheck.java", "commitBeforeChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "commitAfterChange": "6125beffc437f970eae276b4a6542265c6547784", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        final FullIdent imp = FullIdent.createFullIdentBelow(aAST);", "+        final FullIdent imp;", "+        if (aAST.getType() == TokenTypes.IMPORT) {", "+            imp = FullIdent.createFullIdentBelow(aAST);", "+        }", "+        else {", "+            imp = FullIdent.createFullIdent(", "+                (DetailAST) aAST.getFirstChild().getNextSibling());", "+        }"]}]}