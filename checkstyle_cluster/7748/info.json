{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88172ec8293f8496229e1203c0d09438", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42c0b90254d33609ab6c8732f2cea548", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     protected final void checkLParen(final DetailAST aLparen)", "signatureAfterChange": "     protected final void checkLParen(final DetailAST lparen)", "diff": ["-    protected final void checkLParen(final DetailAST aLparen)", "+    protected final void checkLParen(final DetailAST lparen)", "-        if ((aLparen == null)", "-            || getLevel().accept(expandedTabsColumnNo(aLparen))", "-            || !startsLine(aLparen))", "+        if ((lparen == null)", "+            || getLevel().accept(expandedTabsColumnNo(lparen))", "+            || !startsLine(lparen))", "-        logError(aLparen, \"lparen\", expandedTabsColumnNo(aLparen));", "+        logError(lparen, \"lparen\", expandedTabsColumnNo(lparen));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc33121a6bffa1286d97cd9cb1f93f17", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "d814d1352b63136a400cd8f4dffd03d68c9ccd24", "commitAfterChange": "3edd1b53a5d8d407fd33d8c514db8bc1c7274fe5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected void checkToplevelToken()", "signatureAfterChange": "     protected void checkTopLevelToken()", "diff": ["-    protected void checkToplevelToken() {", "-        final DetailAST toplevel = getToplevelAST();", "+    protected void checkTopLevelToken() {", "+        final DetailAST topLevel = getTopLevelAst();", "-        if (toplevel == null", "-            || getLevel().isAcceptable(expandedTabsColumnNo(toplevel)) || hasLabelBefore()) {", "+        if (topLevel == null", "+            || getLevel().isAcceptable(expandedTabsColumnNo(topLevel)) || hasLabelBefore()) {", "-        if (!shouldTopLevelStartLine() && !startsLine(toplevel)) {", "+        if (!shouldTopLevelStartLine() && !startsLine(topLevel)) {", "-        logError(toplevel, \"\", expandedTabsColumnNo(toplevel));", "+        logError(topLevel, \"\", expandedTabsColumnNo(topLevel));"]}]}