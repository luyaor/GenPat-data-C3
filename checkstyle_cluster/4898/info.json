{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b0dae9dc189901cfbc0ce7049082407", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "931975d58949f4a8310848c79820af16", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "d49eaaf2e42538bc7f01510eb3ca2812b253c98a", "commitAfterChange": "2880edd6554400955fb950bf8127311c436d2a7a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "         @Override         public ResourceBundle newBundle(String aBaseName, Locale aLocale, String aFormat,                  ClassLoader aLoader, boolean aReload) throws IOException", "signatureAfterChange": "         @Override         public ResourceBundle newBundle(String aBaseName, Locale aLocale, String aFormat,                  ClassLoader aLoader, boolean aReload) throws IOException", "diff": ["-            ResourceBundle bundle = null;", "+            ResourceBundle bundle = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4cdeb6779f2d0b1912f6862245fce10", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LocalVariableNameCheck.java", "commitBeforeChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "commitAfterChange": "dba746ba9387bee04ed362254abb5d9ed35169cd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     protected final boolean mustCheckName(DetailAST ast)", "signatureAfterChange": "      @Override     protected final boolean mustCheckName(DetailAST ast)", "diff": ["-        final DetailAST modifiersAST =", "-            ast.findFirstToken(TokenTypes.MODIFIERS);", "-        final boolean isFinal = modifiersAST != null", "-            && modifiersAST.branchContains(TokenTypes.FINAL);", "+        final DetailAST modifiersAST =", "+            ast.findFirstToken(TokenTypes.MODIFIERS);", "+        final boolean isFinal = modifiersAST != null", "+            && modifiersAST.branchContains(TokenTypes.FINAL);"]}]}