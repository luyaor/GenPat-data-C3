{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dcb5873784144796156cd72cc11fe07b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80c5d6e1f1d47894022e566698b23a77", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "b3133035a4fa0e086dfb0dfbefbc7f1540521bbc", "commitAfterChange": "add2bdfb27494bff5fa9c305d9782f57c6170b18", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void destroy()", "signatureAfterChange": "     public void destroy()", "diff": ["-", "-        // close all listeners", "-        final Iterator it = mListeners.iterator();", "-        while (it.hasNext()) {", "-            final AuditListener listener = (AuditListener) it.next();", "-            final OutputStream os = listener.getOutputStream();", "-            // close only those that can be closed...", "-            if ((os != System.out) && (os != System.err) && (os != null)) {", "-                try  {", "-                    os.flush();", "-                    os.close();", "-                }", "-                catch (IOException ex) {", "-                    ex.printStackTrace();", "-                }", "-            }", "-            it.remove();", "-        }", "+        mListeners.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ff444f35760015a843c9e6e7a6037da", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/doclets/CheckDocsDoclet.java", "commitBeforeChange": "aa7b0d2bcb6ad207f1ffdc4774d922946b42c01a", "commitAfterChange": "a91de9a50e4707848d31d7391966cca8b08e1559", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public static boolean start(RootDoc aRoot) throws IOException", "signatureAfterChange": "     public static boolean start(RootDoc aRoot) throws IOException", "diff": ["-        final Collection pages = sDocumentationPages.values();", "-        for (Iterator it = pages.iterator(); it.hasNext();) {", "-            DocumentationPage page = (DocumentationPage) it.next();", "-            String pageName = getPageName(page);", "-            // only documentation for duplicates is generated for now", "-            if  (\"duplicates\".equals(pageName)) {", "-                File outfile = new File(destDir, \"config_\" + pageName + \".xml\");", "-                Writer writer = new FileWriter(outfile);", "-                page.write(writer);", "-                writer.close();", "-            }", "-        }"]}]}