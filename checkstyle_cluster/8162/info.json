{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f37765bb0b119a5f7221ef690aed6b4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "223e6799cc9e79b868dc45fa49cec124", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheck.java", "commitBeforeChange": "78e9ce870170ca3ef88fd78f8e0af0681c958eb3", "commitAfterChange": "ea4085cd15fefe1e70a495798187c425295c74b6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        final String[] lines = getLines();", "-        final String line = lines[targetAST.getLineNo() - 1];", "+        final String line = getLines()[targetAST.getLineNo() - 1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8f26e0c3c52b11b9d3b8b02968efbcd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/PackageNamesLoaderTest.java", "commitBeforeChange": "ec0085226c3762e2d0d786ba1181e4e1d0496c0c", "commitAfterChange": "b8d0a65d5059b806bcf801db797232d4662d340d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public void testNoFile()         throws CheckstyleException", "signatureAfterChange": "          public void testNoFile()         throws CheckstyleException", "diff": ["-            String[] pkgNames = PackageNamesLoader.loadPackageNames(\"NoFile\");", "+            PackageNamesLoader.loadPackageNames(\"NoFile\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d24e5b4fba396dda3685c203e25c35f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "35de50c9405825eeb68357df2625b693d2748ed9", "commitAfterChange": "da6a8d083cb82a94707146de559911578f39affe", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static boolean isOnTheSameLine(DetailAST ast, int lastStatementEnd,                                            int forStatementEnd)", "signatureAfterChange": "     private static boolean isOnTheSameLine(DetailAST ast, int lastStatementEnd,                                            int forStatementEnd)", "diff": ["-        final boolean onTheSameLine =", "-            lastStatementEnd == ast.getLineNo() && forStatementEnd != ast.getLineNo();", "-        return onTheSameLine;", "+        return lastStatementEnd == ast.getLineNo() && forStatementEnd != ast.getLineNo();"]}]}