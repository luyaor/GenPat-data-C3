{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6412f5c77cea72dc4c02036085e02c80", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5188aeeb81bc5d8b3671d19b8bf5d437", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "1818ae8ab189515f24a711aa3fc520377bd71380", "commitAfterChange": "7b7eea6e9a4d4053912f83cda41c46c0f4474607", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "signatureAfterChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "diff": ["-        setPatternProperty(aProps, Defn.TODO_PATTERN_PROP, TODO_PATTERN);", "-        setPatternProperty(aProps, Defn.PARAMETER_PATTERN_PROP,", "-                           PARAMETER_PATTERN);", "-        setPatternProperty(aProps, Defn.STATIC_PATTERN_PROP, STATIC_PATTERN);", "-        setPatternProperty(aProps, Defn.CONST_PATTERN_PROP, CONST_PATTERN);", "-        setPatternProperty(aProps, Defn.MEMBER_PATTERN_PROP, MEMBER_PATTERN);", "-        setPatternProperty(aProps, Defn.PUBLIC_MEMBER_PATTERN_PROP,", "-                           PUBLIC_MEMBER_PATTERN);", "-        setPatternProperty(aProps, Defn.TYPE_PATTERN_PROP, TYPE_PATTERN);", "-        setPatternProperty(aProps, Defn.LOCAL_VAR_PATTERN_PROP,", "-                           LOCAL_VAR_PATTERN);", "-        setPatternProperty(aProps, Defn.LOCAL_FINAL_VAR_PATTERN_PROP,", "-                           LOCAL_FINAL_VAR_PATTERN);", "-        setPatternProperty(aProps, Defn.METHOD_PATTERN_PROP, METHOD_PATTERN);", "-        setPatternProperty(aProps, Defn.IGNORE_LINE_LENGTH_PATTERN_PROP,", "-                           IGNORE_LINE_LENGTH_PATTERN);", "-        setIntProperty(aProps, aLog, Defn.MAX_LINE_LENGTH_PROP,", "-                       MAX_LINE_LENGTH);", "-        setIntProperty(aProps, aLog, Defn.MAX_METHOD_LENGTH_PROP,", "-                       MAX_METHOD_LENGTH);", "-        setIntProperty(aProps, aLog, Defn.MAX_CONSTRUCTOR_LENGTH_PROP,", "-                       MAX_CONSTRUCTOR_LENGTH);", "-        setIntProperty(aProps, aLog, Defn.MAX_FILE_LENGTH_PROP,", "-                       MAX_FILE_LENGTH);", "-", "-        setBooleanProperty(aProps, Defn.ALLOW_TABS_PROP);", "-        setIntProperty(aProps, aLog, Defn.TAB_WIDTH_PROP, TAB_WIDTH);", "-        setBooleanProperty(aProps, Defn.ALLOW_PROTECTED_PROP);", "-        setBooleanProperty(aProps, Defn.ALLOW_PACKAGE_PROP);", "-        setBooleanProperty(aProps, Defn.ALLOW_NO_AUTHOR_PROP);", "-        setBooleanProperty(aProps, Defn.REQUIRE_VERSION_PROP);", "+        // Init the special properties", "+        setHeaderIgnoreLines(aProps.getProperty(Defn.HEADER_IGNORE_LINE_PROP));", "+        setRCurly(getRightCurlyOptionProperty(", "+                      aProps, Defn.RCURLY_PROP, RightCurlyOption.SAME, aLog));", "-        setBooleanProperty(aProps, Defn.REQUIRE_PACKAGE_HTML_PROP);", "-        setBooleanProperty(aProps, Defn.IGNORE_IMPORTS_PROP);", "-        setIllegalImports(", "-            aProps.getProperty(Defn.ILLEGAL_IMPORTS_PROP, ILLEGAL_IMPORTS));", "-        setIllegalInstantiations(", "-            aProps.getProperty(Defn.ILLEGAL_INSTANTIATIONS_PROP,", "-                               ILLEGAL_INSTANTIATIONS));", "-        setBooleanProperty(aProps, Defn.IGNORE_WHITESPACE_PROP);", "-        setBooleanProperty(aProps, Defn.IGNORE_CAST_WHITESPACE_PROP);", "-        setBooleanProperty(aProps, Defn.IGNORE_BRACES_PROP);", "-        setBooleanProperty(aProps, Defn.IGNORE_LONG_ELL_PROP);", "-        setBooleanProperty(aProps, Defn.IGNORE_PUBLIC_IN_INTERFACE_PROP);", "-        setStringProperty(aProps, Defn.CACHE_FILE_PROP);", "-        setStringProperty(aProps, Defn.LOCALE_LANGUAGE_PROP);", "-        setStringProperty(aProps, Defn.LOCALE_COUNTRY_PROP);", "-        setBooleanProperty(aProps, Defn.IGNORE_IMPORT_LENGTH_PROP);", "-        setHeaderIgnoreLines(aProps.getProperty(Defn.HEADER_IGNORE_LINE_PROP));", "-        setBooleanProperty(aProps, Defn.HEADER_LINES_REGEXP_PROP);", "-        setBooleanProperty(aProps, Defn.JAVADOC_CHECK_UNUSED_THROWS_PROP);", "-", "-        final String fname = aProps.getProperty(Defn.HEADER_FILE_PROP);", "-        if (fname != null) {", "-            setHeaderFile(fname);", "-        }", "-", "-        setLeftCurlyOptionProperty(aProps, Defn.LCURLY_METHOD_PROP, aLog);", "-        setLeftCurlyOptionProperty(aProps, Defn.LCURLY_TYPE_PROP, aLog);", "-        setLeftCurlyOptionProperty(aProps, Defn.LCURLY_OTHER_PROP, aLog);", "-        setRCurly(getRightCurlyOptionProperty(", "-                      aProps, Defn.RCURLY_PROP, RightCurlyOption.SAME, aLog));", "-        setBlockOptionProperty(aProps, Defn.TRY_BLOCK_PROP, aLog);", "-        setBlockOptionProperty(aProps, Defn.CATCH_BLOCK_PROP, aLog);", "-        setBlockOptionProperty(aProps, Defn.FINALLY_BLOCK_PROP, aLog);", "-        setStringProperty(aProps, Defn.BASEDIR_PROP);", "+        setHeaderFile(aProps.getProperty(Defn.HEADER_FILE_PROP));", "+", "+        // Initialise the general properties", "+        for (int i = 0; i < Defn.ALL_BOOLEAN_PROPS.length; i++) {", "+            setBooleanProperty(aProps, Defn.ALL_BOOLEAN_PROPS[i]);", "+        }", "+", "+        for (int i = 0; i < Defn.ALL_PATTERN_PROPS.length; i++) {", "+            setPatternProperty(aProps, Defn.ALL_PATTERN_PROPS[i]);", "+        }", "+", "+        for (int i = 0; i < Defn.ALL_INT_PROPS.length; i++) {", "+            setIntProperty(aProps, aLog, Defn.ALL_INT_PROPS[i]);", "+        }", "+", "+        for (int i = 0; i < Defn.ALL_BLOCK_PROPS.length; i++) {", "+            setBlockOptionProperty(aProps, Defn.ALL_BLOCK_PROPS[i], aLog);", "+        }", "+", "+        for (int i = 0; i < Defn.ALL_STRING_PROPS.length; i++) {", "+            setStringProperty(aProps, Defn.ALL_STRING_PROPS[i]);", "+        }", "+", "+        for (int i = 0; i < Defn.ALL_LCURLY_PROPS.length; i++) {", "+            setLeftCurlyOptionProperty(aProps, Defn.ALL_LCURLY_PROPS[i], aLog);", "+        }", "+", "+        for (int i = 0; i < Defn.ALL_STRING_SET_PROPS.length; i++) {", "+            setStringSetProperty(aProps, Defn.ALL_STRING_SET_PROPS[i]);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0ae6a907d6ae9a48887acf5c98aacbe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "4065b439221c56ab2a11f97cb50c246d8ba2c913", "commitAfterChange": "1a7694f787314c10700fb3d038c524e33542b950", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "signatureAfterChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "diff": ["-        setTodoPat(aProps.getProperty(TODO_PATTERN_PROP, TODO_PATTERN));", "-        setParamPat(aProps.getProperty(PARAMETER_PATTERN_PROP,", "-                                       PARAMETER_PATTERN));", "-        setStaticPat(aProps.getProperty(STATIC_PATTERN_PROP, STATIC_PATTERN));", "-        setStaticFinalPat(aProps.getProperty(CONST_PATTERN_PROP,", "-                                             CONST_PATTERN));", "-        setMemberPat(aProps.getProperty(MEMBER_PATTERN_PROP, MEMBER_PATTERN));", "-        setPublicMemberPat(aProps.getProperty(PUBLIC_MEMBER_PATTERN_PROP,", "-                                              PUBLIC_MEMBER_PATTERN));", "-        setTypePat(aProps.getProperty(TYPE_PATTERN_PROP, TYPE_PATTERN));", "-        setLocalVarPat(aProps.getProperty(LOCAL_VAR_PATTERN_PROP,", "-                                          LOCAL_VAR_PATTERN));", "-        setMethodPat(aProps.getProperty(METHOD_PATTERN_PROP, METHOD_PATTERN));", "-        setIgnoreLineLengthPat(aProps.getProperty(", "-            IGNORE_LINE_LENGTH_PATTERN_PROP, IGNORE_LINE_LENGTH_PATTERN));", "-        setIntProperty(aProps, aLog, MAX_LINE_LENGTH_PROP, MAX_LINE_LENGTH);", "-        setIntProperty(aProps, aLog, MAX_METHOD_LENGTH_PROP, MAX_METHOD_LENGTH);", "-        setIntProperty(aProps, aLog,", "-                       MAX_CONSTRUCTOR_LENGTH_PROP, MAX_CONSTRUCTOR_LENGTH);", "-        setIntProperty(aProps, aLog, MAX_FILE_LENGTH_PROP, MAX_FILE_LENGTH);", "+        setPatternProperty(aProps, Defn.TODO_PATTERN_PROP, TODO_PATTERN);", "+        setPatternProperty(aProps, Defn.PARAMETER_PATTERN_PROP,", "+                           PARAMETER_PATTERN);", "+        setPatternProperty(aProps, Defn.STATIC_PATTERN_PROP, STATIC_PATTERN);", "+        setPatternProperty(aProps, Defn.CONST_PATTERN_PROP, CONST_PATTERN);", "+        setPatternProperty(aProps, Defn.MEMBER_PATTERN_PROP, MEMBER_PATTERN);", "+        setPatternProperty(aProps, Defn.PUBLIC_MEMBER_PATTERN_PROP,", "+                           PUBLIC_MEMBER_PATTERN);", "+        setPatternProperty(aProps, Defn.TYPE_PATTERN_PROP, TYPE_PATTERN);", "+        setPatternProperty(aProps, Defn.LOCAL_VAR_PATTERN_PROP,", "+                           LOCAL_VAR_PATTERN);", "+        setPatternProperty(aProps, Defn.METHOD_PATTERN_PROP, METHOD_PATTERN);", "+        setPatternProperty(aProps, Defn.IGNORE_LINE_LENGTH_PATTERN_PROP,", "+                           IGNORE_LINE_LENGTH_PATTERN);", "+        setIntProperty(aProps, aLog, Defn.MAX_LINE_LENGTH_PROP,", "+                       MAX_LINE_LENGTH);", "+        setIntProperty(aProps, aLog, Defn.MAX_METHOD_LENGTH_PROP,", "+                       MAX_METHOD_LENGTH);", "+        setIntProperty(aProps, aLog, Defn.MAX_CONSTRUCTOR_LENGTH_PROP,", "+                       MAX_CONSTRUCTOR_LENGTH);", "+        setIntProperty(aProps, aLog, Defn.MAX_FILE_LENGTH_PROP,", "+                       MAX_FILE_LENGTH);", "-        setBooleanProperty(aProps, ALLOW_TABS_PROP);", "-        setIntProperty(aProps, aLog, TAB_WIDTH_PROP, TAB_WIDTH);", "-        setBooleanProperty(aProps, ALLOW_PROTECTED_PROP);", "-        setBooleanProperty(aProps, ALLOW_PACKAGE_PROP);", "-        setBooleanProperty(aProps, ALLOW_NO_AUTHOR_PROP);", "+        setBooleanProperty(aProps, Defn.ALLOW_TABS_PROP);", "+        setIntProperty(aProps, aLog, Defn.TAB_WIDTH_PROP, TAB_WIDTH);", "+        setBooleanProperty(aProps, Defn.ALLOW_PROTECTED_PROP);", "+        setBooleanProperty(aProps, Defn.ALLOW_PACKAGE_PROP);", "+        setBooleanProperty(aProps, Defn.ALLOW_NO_AUTHOR_PROP);", "-            Scope.getInstance(aProps.getProperty(JAVADOC_CHECKSCOPE_PROP,", "+            Scope.getInstance(aProps.getProperty(Defn.JAVADOC_CHECKSCOPE_PROP,", "-        setBooleanProperty(aProps, REQUIRE_PACKAGE_HTML_PROP);", "-        setBooleanProperty(aProps, IGNORE_IMPORTS_PROP);", "+        setBooleanProperty(aProps, Defn.REQUIRE_PACKAGE_HTML_PROP);", "+        setBooleanProperty(aProps, Defn.IGNORE_IMPORTS_PROP);", "-            aProps.getProperty(ILLEGAL_IMPORTS_PROP, ILLEGAL_IMPORTS));", "-        setIllegalInstantiations(aProps.getProperty(ILLEGAL_INSTANTIATIONS_PROP,", "-                                                   ILLEGAL_INSTANTIATIONS));", "-        setBooleanProperty(aProps, IGNORE_WHITESPACE_PROP);", "-        setBooleanProperty(aProps, IGNORE_CAST_WHITESPACE_PROP);", "-        setBooleanProperty(aProps, IGNORE_OP_WRAP_PROP);", "-        setBooleanProperty(aProps, IGNORE_BRACES_PROP);", "-        setBooleanProperty(aProps, IGNORE_LONG_ELL_PROP);", "-        setBooleanProperty(aProps, IGNORE_PUBLIC_IN_INTERFACE_PROP);", "-        setCacheFile(aProps.getProperty(CACHE_FILE_PROP));", "-        setBooleanProperty(aProps, IGNORE_IMPORT_LENGTH_PROP);", "-        setHeaderIgnoreLines(aProps.getProperty(HEADER_IGNORE_LINE_PROP));", "-        setBooleanProperty(aProps, HEADER_LINES_REGEXP_PROP);", "+            aProps.getProperty(Defn.ILLEGAL_IMPORTS_PROP, ILLEGAL_IMPORTS));", "+        setIllegalInstantiations(", "+            aProps.getProperty(Defn.ILLEGAL_INSTANTIATIONS_PROP,", "+                               ILLEGAL_INSTANTIATIONS));", "+        setBooleanProperty(aProps, Defn.IGNORE_WHITESPACE_PROP);", "+        setBooleanProperty(aProps, Defn.IGNORE_CAST_WHITESPACE_PROP);", "+        setBooleanProperty(aProps, Defn.IGNORE_OP_WRAP_PROP);", "+        setBooleanProperty(aProps, Defn.IGNORE_BRACES_PROP);", "+        setBooleanProperty(aProps, Defn.IGNORE_LONG_ELL_PROP);", "+        setBooleanProperty(aProps, Defn.IGNORE_PUBLIC_IN_INTERFACE_PROP);", "+        setCacheFile(aProps.getProperty(Defn.CACHE_FILE_PROP));", "+        setBooleanProperty(aProps, Defn.IGNORE_IMPORT_LENGTH_PROP);", "+        setHeaderIgnoreLines(aProps.getProperty(Defn.HEADER_IGNORE_LINE_PROP));", "+        setBooleanProperty(aProps, Defn.HEADER_LINES_REGEXP_PROP);", "-        final String fname = aProps.getProperty(HEADER_FILE_PROP);", "+        final String fname = aProps.getProperty(Defn.HEADER_FILE_PROP);", "-        setLCurlyMethod(getLeftCurlyOptionProperty(", "-                            aProps, LCURLY_METHOD_PROP,", "-                            LeftCurlyOption.EOL, aLog));", "-        setLCurlyType(getLeftCurlyOptionProperty(", "-                          aProps, LCURLY_TYPE_PROP,", "-                          LeftCurlyOption.EOL, aLog));", "-        setLCurlyOther(getLeftCurlyOptionProperty(", "-                           aProps, LCURLY_OTHER_PROP,", "-                           LeftCurlyOption.EOL, aLog));", "+        setLeftCurlyOptionProperty(aProps, Defn.LCURLY_METHOD_PROP, aLog);", "+        setLeftCurlyOptionProperty(aProps, Defn.LCURLY_TYPE_PROP, aLog);", "+        setLeftCurlyOptionProperty(aProps, Defn.LCURLY_OTHER_PROP, aLog);", "-                      aProps, RCURLY_PROP, RightCurlyOption.SAME, aLog));", "-        setTryBlock(", "-            getBlockOptionProperty(", "-                aProps, TRY_BLOCK_PROP, BlockOption.TEXT, aLog));", "-        setCatchBlock(", "-            getBlockOptionProperty(", "-                aProps, CATCH_BLOCK_PROP, BlockOption.TEXT, aLog));", "-        setFinallyBlock(", "-            getBlockOptionProperty(", "-                aProps, FINALLY_BLOCK_PROP, BlockOption.TEXT, aLog));", "+                      aProps, Defn.RCURLY_PROP, RightCurlyOption.SAME, aLog));", "+        setBlockOptionProperty(aProps, Defn.TRY_BLOCK_PROP, aLog);", "+        setBlockOptionProperty(aProps, Defn.CATCH_BLOCK_PROP, aLog);", "+        setBlockOptionProperty(aProps, Defn.FINALLY_BLOCK_PROP, aLog);", "-                                               PAREN_PAD_PROP,", "+                                               Defn.PAREN_PAD_PROP,"]}]}