{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61f5bd8742e82977f8ca79592a7a01ea", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0620ff4af88b81a6b90c60f78c41b8a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/InnerTypeLastCheck.java", "commitBeforeChange": "a94d50133e2b6bc791c8e1181a77338bd70720ee", "commitAfterChange": "4c384214a90272fe239b76e35ec5bcb87ef4b080", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-            while (null != nextSibling", "-                && ((nextSibling.getType() != TokenTypes.CLASS_DEF)", "-                    || (nextSibling.getType() != TokenTypes.INTERFACE_DEF)))", "-            {", "-                if (nextSibling.getType() == TokenTypes.VARIABLE_DEF", "-                        || nextSibling.getType() == TokenTypes.METHOD_DEF)", "+            while (null != nextSibling) {", "+                if (!ScopeUtils.inCodeBlock(aAST)", "+                    && (nextSibling.getType() == TokenTypes.VARIABLE_DEF", "+                        || nextSibling.getType() == TokenTypes.METHOD_DEF))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dca6c2cba186fc511f89bcc6f0d172ef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ClassDefHandler.java", "commitBeforeChange": "9f93c2258ef0512b743f5927be201ff55a9d5c57", "commitAfterChange": "23c8774d2e2fd245de1e5df02758fd23702c565e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ClassDefHandler(IndentationCheck indentCheck,                            DetailAST ast,                            AbstractExpressionHandler parent)", "signatureAfterChange": "     public ClassDefHandler(IndentationCheck indentCheck,                            DetailAST ast,                            AbstractExpressionHandler parent)", "diff": ["-        super(indentCheck,", "-              ast.getType() == TokenTypes.CLASS_DEF", "-              ? \"class def\" : ast.getType() == TokenTypes.ENUM_DEF", "-                  ? \"enum def\" : \"interface def\",", "-              ast, parent);", "+        super(indentCheck, getHandlerName(ast), ast, parent);"]}]}