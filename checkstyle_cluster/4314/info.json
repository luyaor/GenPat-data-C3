{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4da987a3d01dac627c7d6b2e95c61e80", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd1df42ec39dd2552ecb4c0bfd5741c1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "987da3a4c5fac3476a4461892c919c0f6d9248bd", "commitAfterChange": "08d6efe49d2960d9bd61bfb9cca65910f0c19b58", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void configure(Configuration aConfig)             throws CheckstyleException", "signatureAfterChange": "     protected void setupChild(Configuration aChildConf)             throws CheckstyleException", "diff": ["-    public void configure(Configuration aConfig)", "-        super.configure(aConfig);", "-", "-        final Configuration[] fileSetChecks = aConfig.getChildren();", "-        for (int i = 0; i < fileSetChecks.length; i++) {", "-            final Configuration fscConf = fileSetChecks[i];", "-            final String name = fscConf.getName();", "-            try {", "-                final FileSetCheck fsc =", "+     */", "+    protected void setupChild(Configuration aChildConf)", "+            throws CheckstyleException", "+    {", "+        final String name = aChildConf.getName();", "+        try {", "+            final FileSetCheck fsc =", "-                        getPackageNames(),", "-                        getClass().getClassLoader(),", "-                        name);", "-                fsc.setPackageNames(getPackageNames());", "-                fsc.contextualize(context);", "-                fsc.configure(fscConf);", "-                addFileSetCheck(fsc);", "-            }", "-            catch (Exception ex) {", "-                // TODO i18n", "-                throw new CheckstyleException(", "-                        \"cannot initialize filesetcheck with name \"", "-                        + name + \" - \" + ex.getMessage());", "-            }", "+                            getPackageNames(),", "+                            getClass().getClassLoader(),", "+                            name);", "+            fsc.setPackageNames(getPackageNames());", "+            fsc.contextualize(mChildContext);", "+            fsc.configure(aChildConf);", "+            addFileSetCheck(fsc);", "+        }", "+        catch (Exception ex) {", "+            // TODO i18n", "+            throw new CheckstyleException(", "+                    \"cannot initialize filesetcheck with name \"", "+                    + name + \" - \" + ex.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6e262d9aebf6e29de575debfd7fb89c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "79404974eff1458f4243f8acd6a08b6a8b869342", "commitAfterChange": "fe9057366308642868c25d427c3ee94411b37170", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private ModuleFactory getModuleFactory()", "signatureAfterChange": "     public static Set<String> getPackageNames(ClassLoader aClassLoader)         throws CheckstyleException", "diff": ["-     */", "-    private ModuleFactory getModuleFactory()", "-    {", "-        return mModuleFactory;", "-    }", "+    public static Set<String> getPackageNames(ClassLoader aClassLoader)", "+        Enumeration<URL> packageFiles = null;", "+        try {", "+            packageFiles = aClassLoader.getResources(CHECKSTYLE_PACKAGES);", "+        }", "+        catch (IOException e) {", "+            throw new CheckstyleException(", "+                    \"unable to get package file resources\", e);", "+        }", "+", "+        //create the loader outside the loop to prevent PackageObjectFactory", "+        //being created anew for each file", "+        final PackageNamesLoader namesLoader = newPackageNamesLoader();", "+", "+        while ((null != packageFiles) && packageFiles.hasMoreElements()) {", "+            final URL aPackageFile = packageFiles.nextElement();", "+            InputStream stream = null;", "+", "+            try {", "+                stream = new BufferedInputStream(aPackageFile.openStream());", "+                final InputSource source = new InputSource(stream);", "+                loadPackageNamesSource(source, \"default package names\",", "+                    namesLoader);", "+            }", "+            catch (IOException e) {", "+                throw new CheckstyleException(", "+                        \"unable to open \" + aPackageFile, e);", "+            }", "+            finally {", "+                if (stream != null) {", "+                    try {", "+                        stream.close();", "+                    }", "+                    catch (IOException e) {", "+                        throw new CheckstyleException(", "+                                \"error closing stream\", e);", "+                    }", "+                }", "+            }", "+        }", "+        return namesLoader.getPackageNames();"]}]}