{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "821be7863809a0d7bf610fb9bb4ee287", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1073a6ec26521193b1ca0ed30000a55a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "a015df25f2f89a8bbd075ab0ac2682b5e346a462", "commitAfterChange": "06b377b34cb81a6ba3fe48880c31a9a093b2a473", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public void fireFileFinished(String aFileName)", "signatureAfterChange": "     public void fireFileFinished(String aFileName)", "diff": ["-        if (mFilters.accept(evt)) {", "-            final Iterator it = mListeners.iterator();", "-            while (it.hasNext()) {", "-                final AuditListener listener = (AuditListener) it.next();", "-                listener.fileFinished(evt);", "-            }", "+        final Iterator it = mListeners.iterator();", "+        while (it.hasNext()) {", "+            final AuditListener listener = (AuditListener) it.next();", "+            listener.fileFinished(evt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c19d4f8be8419b9f94935bcd7c775cc7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "a015df25f2f89a8bbd075ab0ac2682b5e346a462", "commitAfterChange": "06b377b34cb81a6ba3fe48880c31a9a093b2a473", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected void fireAuditFinished()", "signatureAfterChange": "     protected void fireAuditFinished()", "diff": ["-        if (mFilters.accept(evt)) {", "-            final Iterator it = mListeners.iterator();", "-            while (it.hasNext()) {", "-                final AuditListener listener = (AuditListener) it.next();", "-                listener.auditFinished(evt);", "-            }", "+        final Iterator it = mListeners.iterator();", "+        while (it.hasNext()) {", "+            final AuditListener listener = (AuditListener) it.next();", "+            listener.auditFinished(evt);"]}]}