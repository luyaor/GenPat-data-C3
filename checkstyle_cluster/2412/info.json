{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d71f9b30db2958ac4cf48fbb0248cb6c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83ec51031695fc6bdc7947d1b2c15150", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RightCurlyCheck.java", "commitBeforeChange": "4bbe4acd319fa60dac09d28aaa9f7b18f18dee1f", "commitAfterChange": "eecd476fa8c6dba62f919a5ff1740d108848c867", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            rcurly = Utils.getLastSibling(", "-                aAST.getParent().getFirstChild().getNextSibling()", "-                .getNextSibling().getNextSibling().getFirstChild());", "+            DetailAST thenAST = aAST.getPreviousSibling();", "+            rcurly = thenAST.getLastChild();", "-            rcurly = Utils.getLastSibling(", "-                Utils.getLastSibling(aAST.getFirstChild()).getFirstChild());", "+            rcurly = aAST.getLastChild().getLastChild();", "-            nextToken = (DetailAST) aAST.getFirstChild().getNextSibling();", "-            rcurly = Utils.getLastSibling(aAST.getFirstChild().getFirstChild());", "+            DetailAST firstChild = (DetailAST) aAST.getFirstChild();", "+            nextToken = (DetailAST) firstChild.getNextSibling();", "+            rcurly = firstChild.getLastChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b30f54ab477718108f82b15988fdefd7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "d734bff020d3525c811a0b273021a5ac5665ade8", "commitAfterChange": "6c11cedd3bc24183534dd10d6442149d267693b5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void collectDeclarations(Deque<LexicalFrame> frameStack,         DetailAST ast)", "signatureAfterChange": "     private void collectDeclarations(Deque<LexicalFrame> frameStack,         DetailAST ast)", "diff": ["-                final String name =", "-                        ast.findFirstToken(TokenTypes.IDENT).getText();", "-                if (frame instanceof ClassFrame) {", "-                    final DetailAST mods =", "-                            ast.findFirstToken(TokenTypes.MODIFIERS);", "-                    if (ScopeUtils.inInterfaceBlock(ast)", "-                            || mods.branchContains(TokenTypes.LITERAL_STATIC)) {", "-                        ((ClassFrame) frame).addStaticMember(name);", "-                    }", "-                    else {", "-                        ((ClassFrame) frame).addInstanceMember(name);", "-                    }", "-                }", "-                else {", "-                    frame.addName(name);", "-                }", "+                collectVariableDeclarations(ast, frame);"]}]}