{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dfd78aa558cab2f8a972736a39799d32", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "171e4949fe31eca84ff54d5e17933ec1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "c6a70d4cca08ebdb2b4b26eff3e7da076ada184d", "commitAfterChange": "5478613082bac0329d25cffcfae5fab219d25118", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public AbstractExpressionHandler getHandler(IndentationCheck indentCheck,         DetailAST ast, AbstractExpressionHandler parent)", "signatureAfterChange": "     public AbstractExpressionHandler getHandler(IndentationCheck indentCheck,         DetailAST ast, AbstractExpressionHandler parent)", "diff": ["+        AbstractExpressionHandler resultHandler;", "-            return handler;", "+            resultHandler = handler;", "-", "-        if (ast.getType() == TokenTypes.METHOD_CALL) {", "-            return createMethodCallHandler(indentCheck, ast, parent);", "+        else if (ast.getType() == TokenTypes.METHOD_CALL) {", "+            resultHandler = createMethodCallHandler(indentCheck, ast, parent);", "-", "-        final Constructor<?> handlerCtor =", "-            typeHandlers.get(ast.getType());", "-        return (AbstractExpressionHandler) CommonUtils.invokeConstructor(", "-            handlerCtor, indentCheck, ast, parent);", "+        else {", "+            final Constructor<?> handlerCtor = typeHandlers.get(ast.getType());", "+            resultHandler = (AbstractExpressionHandler) CommonUtils.invokeConstructor(", "+                handlerCtor, indentCheck, ast, parent);", "+        }", "+        return resultHandler;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f040f4c0e6c0bbc9e1578f9b876fe7f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java", "commitBeforeChange": "98a3157200a6b488a0f78b67b0741a2bd72d40fa", "commitAfterChange": "044889b26a868b1b7200526ceeb40cdbe1e903fc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     AccessResult checkAccess(final String forImport, final String inPkg)", "signatureAfterChange": "     AccessResult checkAccess(final String forImport, final String inPkg)", "diff": ["+        AccessResult result;", "-            return retVal;", "+            result = retVal;", "-        if (parent == null) {", "+        else if (parent == null) {", "-            return AccessResult.DISALLOWED;", "+            result = AccessResult.DISALLOWED;", "-", "-        return parent.checkAccess(forImport, inPkg);", "+        else {", "+            result = parent.checkAccess(forImport, inPkg);", "+        }", "+        return result;"]}]}