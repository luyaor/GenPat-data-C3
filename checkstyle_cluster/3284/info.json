{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77cc51eb89e479f9b4b9010eba1315d0", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "644bab7fb1892dfe1a140d1e5a7cc0c7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setIgnoreNumbers(double[] aList)", "signatureAfterChange": "     public void setIgnoreNumbers(double[] list)", "diff": ["-    public void setIgnoreNumbers(double[] aList)", "+    public void setIgnoreNumbers(double[] list)", "-        if ((aList == null) || (aList.length == 0)) {", "+        if ((list == null) || (list.length == 0)) {", "-            mIgnoreNumbers = new double[aList.length];", "-            System.arraycopy(aList, 0, mIgnoreNumbers, 0, aList.length);", "+            mIgnoreNumbers = new double[list.length];", "+            System.arraycopy(list, 0, mIgnoreNumbers, 0, list.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86413b0564b842b605dae175231d9232", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "31cc403a41c60aa09050252953a56ef053c034d4", "commitAfterChange": "2f9b0f057c489d074967575696a0d53a34fec6b7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setIgnoreNumbers(double[] list)", "signatureAfterChange": "     public void setIgnoreNumbers(double[] list)", "diff": ["-            mIgnoreNumbers = new double[0];", "+            ignoreNumbers = new double[0];", "-            mIgnoreNumbers = new double[list.length];", "-            System.arraycopy(list, 0, mIgnoreNumbers, 0, list.length);", "-            Arrays.sort(mIgnoreNumbers);", "+            ignoreNumbers = new double[list.length];", "+            System.arraycopy(list, 0, ignoreNumbers, 0, list.length);", "+            Arrays.sort(ignoreNumbers);"]}]}