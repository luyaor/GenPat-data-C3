{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c7609f2320a9ddc4677e8b871afc5fd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dd549855a70fff0071cf06db038ab01", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "204c073294cdca6756bcd546d6af85a797ad7d79", "commitAfterChange": "6784e5bcd5baa6b5086bf8b63709856d685a74c8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if ((ast.getType() == TokenTypes.VARIABLE_DEF)", "-            || (ast.getType() == TokenTypes.PARAMETER_DEF))", "-        {", "-            processVariable(ast);", "-            return;", "-        }", "+        final int type = ast.getType();", "+        switch (type) {", "+            case TokenTypes.VARIABLE_DEF:", "+            case TokenTypes.PARAMETER_DEF:", "+                processVariable(ast);", "+                break;", "+            default:", "+                visitOtherTokens(ast, type);", "+        }", "+    }", "-                new FieldFrame(currentFrame, isStaticInnerType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0b7168756b37cf290ec49e873dabfc1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "28e8f33dfdccf2d34d44bea42c28567776313628", "commitAfterChange": "6d3dbe2fd3d64b491ee39ac1d42d0ee88938d190", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (ast.getType() == TokenTypes.GENERIC_START) {", "-            processStart(ast);", "-            depth++;", "-        }", "-        else if (ast.getType() == TokenTypes.GENERIC_END) {", "-            processEnd(ast);", "-            depth--;", "+        switch (ast.getType()) {", "+            case TokenTypes.GENERIC_START:", "+                processStart(ast);", "+                depth++;", "+                break;", "+            case TokenTypes.GENERIC_END:", "+                processEnd(ast);", "+                depth--;", "+                break;", "+            default:", "+                throw new IllegalArgumentException(\"Unknown type \" + ast);"]}]}