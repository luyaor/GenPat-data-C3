{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2843550394070762bdf44e9502b74af7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d9f527b2976a61b82171d0ab56478ed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testNL() throws Exception", "signatureAfterChange": "      @Test     public void testNL() throws Exception", "diff": ["-            \"49:14: '{' should be on a new line.\",", "-            \"53:14: '{' should be on a new line.\",", "-            \"58:18: '{' should be on a new line.\",", "-            \"62:18: '{' should be on a new line.\",", "-            \"67:12: '{' should be on a new line.\",", "-            \"72:18: '{' should be on a new line.\",", "+            \"49:14: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"53:14: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"58:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"62:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"67:12: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"72:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fb800b8db49f52d9ed4e1a8fa94504b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault()         throws Exception", "signatureAfterChange": "      @Test     public void testDefault()         throws Exception", "diff": ["-            \"15:19: '+' should be on a new line.\",", "-            \"16:15: '-' should be on a new line.\",", "-            \"24:18: '&&' should be on a new line.\",", "-            \"39:30: '&' should be on a new line.\",", "-            \"52:29: '&' should be on a new line.\",", "+            \"15:19: \" + getCheckMessage(LINE_NEW, \"+\"),", "+            \"16:15: \" + getCheckMessage(LINE_NEW, \"-\"),", "+            \"24:18: \" + getCheckMessage(LINE_NEW, \"&&\"),", "+            \"39:30: \" + getCheckMessage(LINE_NEW, \"&\"),", "+            \"52:29: \" + getCheckMessage(LINE_NEW, \"&\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd6e7166ca9d91d01df45cf99e9d21cd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-            \"8:1: '{' should be on the previous line.\",", "-            \"12:5: '{' should be on the previous line.\",", "-            \"21:5: '{' should be on the previous line.\",", "-            \"30:5: '{' should be on the previous line.\",", "-            \"39:5: '{' should be on the previous line.\",", "+            \"8:1: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"12:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"21:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"30:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"39:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec87e52470739c051f0a2bc931413317", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testText()         throws Exception", "signatureAfterChange": "      @Test     public void testText()         throws Exception", "diff": ["-            \"52:65: Empty catch block.\",", "-            \"72:52: Empty catch block.\",", "-            \"73:45: Empty catch block.\",", "-            \"75:13: Empty try block.\",", "-            \"77:17: Empty finally block.\",", "-            \"178:5: Empty INSTANCE_INIT block.\",", "+            \"52:65: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"catch\"),", "+            \"72:52: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"catch\"),", "+            \"73:45: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"catch\"),", "+            \"75:13: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"try\"),", "+            \"77:17: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"finally\"),", "+            \"178:5: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"INSTANCE_INIT\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbaa4e1548e65f7600bd1f7ea6d5bf77", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testModifiedControlVariable() throws Exception", "signatureAfterChange": "     @Test     public void testModifiedControlVariable() throws Exception", "diff": ["-            \"14:14: Control variable 'i' is modified.\",", "-            \"17:15: Control variable 'i' is modified.\",", "-            \"20:37: Control variable 'i' is modified.\",", "-            \"21:17: Control variable 'i' is modified.\",", "-            \"25:14: Control variable 'j' is modified.\",", "-            \"49:15: Control variable 's' is modified.\",", "+            \"14:14: \" + getCheckMessage(MSG_KEY, \"i\"),", "+            \"17:15: \" + getCheckMessage(MSG_KEY, \"i\"),", "+            \"20:37: \" + getCheckMessage(MSG_KEY, \"i\"),", "+            \"21:17: \" + getCheckMessage(MSG_KEY, \"i\"),", "+            \"25:14: \" + getCheckMessage(MSG_KEY, \"j\"),", "+            \"49:15: \" + getCheckMessage(MSG_KEY, \"s\"),"]}]}