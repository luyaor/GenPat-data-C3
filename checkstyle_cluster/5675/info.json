{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5cb089e4e8f74a1bfec21a1f2f1d86b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49bfc949fa5e002998244f367dd34f1a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java", "commitBeforeChange": "3296ba06ac6ae5ad8c864ada15cec91d058785d4", "commitAfterChange": "6f1f7bd3fdcca84404e97964b3e48de6db5024ec", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void initHeaderRegexps()", "signatureAfterChange": "     protected RegexpHeaderInfo getRegexpHeaderInfo()", "diff": ["+    protected RegexpHeaderInfo getRegexpHeaderInfo()", "+        return (RegexpHeaderInfo) getHeaderInfo();", "-     */", "-    private void initHeaderRegexps()", "-    {", "-        final String[] headerLines = getHeaderLines();", "-        if (headerLines != null) {", "-            mHeaderRegexps = new Pattern[headerLines.length];", "-            for (int i = 0; i < headerLines.length; i++) {", "-                try {", "-                    // TODO: Not sure if chache in Utils is still necessary", "-                    mHeaderRegexps[i] = Utils.getPattern(headerLines[i]);", "-                }", "-                catch (final PatternSyntaxException ex) {", "-                    throw new ConversionException(", "-                            \"line \" + i + \" in header specification\"", "-                            + \" is not a regular expression\");", "-                }", "-            }", "-        }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c3cffa9649286140b7d62d9abf63b87", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "f34eba11cbd8559d4d06f96e19affa70abaf86ff", "commitAfterChange": "0e3fe5643667a53079dbd114e5b1e9aa91fde083", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 28, "signatureBeforeChange": "     private int process(String aDir, String[] aFiles, Checker aChecker)", "signatureAfterChange": "         protected OutputStream createOutputStream(Task aTask)             throws IOException", "diff": ["-     **/", "-    private int process(String aDir, String[] aFiles, Checker aChecker)", "-        int retVal = 0;", "-        for (int i = 0; i < aFiles.length; i++) {", "-            retVal += aChecker.process(aDir + File.separator + aFiles[i]);", "-        return retVal;", "+         */", "+        protected OutputStream createOutputStream(Task aTask)", "+            throws IOException", "+        {", "+            if (mToFile == null) {", "+                return new LogOutputStream(aTask, Project.MSG_INFO);", "+            }", "+            return new FileOutputStream(mToFile);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "754954b0ff652151e80ed57a5cc30853", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RegexpHeaderCheck.java", "commitBeforeChange": "510bf2e6a7dd6f7da8a386fb0e33bac500fae297", "commitAfterChange": "d1a297476448ea9feec80af04416f198dc462bca", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setHeaderFile(String aFileName)         throws ConversionException", "signatureAfterChange": "     public void setHeaderFile(String aFileName)         throws ConversionException", "diff": ["+        initHeaderRegexps();", "+    }", "-                            \"line \" + i + \" in header file is not a regexp\");"]}]}