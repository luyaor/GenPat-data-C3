{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1aba255c940004e3a8c0a3a1e3fe5cc8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "084d8502e60c8ea106449af15fc29573", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "af52963008a800390e8b356db5811886572f37a3", "commitAfterChange": "3a5a73d5c110418f712f5a9a838c6b4106506fdd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-            \"25:17: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "-            \"28:17: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "-            \"40:13: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "-            \"44:13: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "-            \"93:27: \" + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, \"}\"),", "-            \"97:54: \" + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, \"}\"),", "+            \"25:17: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\", 17),", "+            \"28:17: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\", 17),", "+            \"40:13: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\", 13),", "+            \"44:13: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\", 13),", "+            \"93:27: \" + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, \"}\", 27),", "+            \"97:54: \" + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, \"}\", 54),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4efd2d4baa538ec4974676635be3221c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "af52963008a800390e8b356db5811886572f37a3", "commitAfterChange": "3a5a73d5c110418f712f5a9a838c6b4106506fdd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testSame() throws Exception", "signatureAfterChange": "      @Test     public void testSame() throws Exception", "diff": ["-            \"25:17: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "-            \"28:17: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "-            \"40:13: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "-            \"44:13: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "-            \"93:27: \" + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, \"}\"),", "-            \"97:54: \" + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, \"}\"),", "+            \"25:17: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\", 17),", "+            \"28:17: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\", 17),", "+            \"40:13: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\", 13),", "+            \"44:13: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\", 13),", "+            \"93:27: \" + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, \"}\", 27),", "+            \"97:54: \" + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, \"}\", 54),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66aec94ce1002a4b686eb3a159f023e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "af52963008a800390e8b356db5811886572f37a3", "commitAfterChange": "3a5a73d5c110418f712f5a9a838c6b4106506fdd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testNL3() throws Exception", "signatureAfterChange": "      @Test     public void testNL3() throws Exception", "diff": ["-            \"26:33: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "-            \"91:19: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "-            \"97:19: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "-            \"142:37: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "-            \"158:12: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "-            \"165:16: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"26:33: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\", 33),", "+            \"91:19: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\", 19),", "+            \"97:19: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\", 19),", "+            \"142:37: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\", 37),", "+            \"158:12: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\", 12),", "+            \"165:16: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\", 16),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f503b6c9475dc1d05e4c9f7739935f1b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "af52963008a800390e8b356db5811886572f37a3", "commitAfterChange": "3a5a73d5c110418f712f5a9a838c6b4106506fdd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testNL() throws Exception", "signatureAfterChange": "      @Test     public void testNL() throws Exception", "diff": ["-            \"49:14: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "-            \"53:14: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "-            \"58:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "-            \"62:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "-            \"67:12: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "-            \"72:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"49:14: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\", 14),", "+            \"53:14: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\", 14),", "+            \"58:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\", 18),", "+            \"62:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\", 18),", "+            \"67:12: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\", 12),", "+            \"72:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\", 18),"]}]}