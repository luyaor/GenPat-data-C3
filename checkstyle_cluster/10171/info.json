{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89dd79906b6121b6725ea0d917131611", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "306cbaa9849941e6df7e3febed8fcdf3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "fa9bf2e0ef561ab0e112157fd55c52ffac1b5715", "commitAfterChange": "e3929c641ca2c2ef08d90ee506db556529088326", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public DetailAST getPreviousSibling()", "signatureAfterChange": "     public DetailAST getPreviousSibling()", "diff": ["-        final DetailAST parent = getParent();", "-        if (parent == null) {", "-            return null;", "-        }", "-", "-        AST ast = parent.getFirstChild();", "-        while (ast != null) {", "-            AST nextSibling = ast.getNextSibling();", "-            if (this == nextSibling) {", "-                return (DetailAST) ast;", "-            }", "-            ast = nextSibling;", "-        }", "-        return null;", "+        return mPreviousSibling;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "415ecde9b2d0f7b1f95a2a2378d91cad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "a8ad56697b9348de2a242654d5c56b127d78e876", "commitAfterChange": "a21164df1fbaff36ba020968b3a6128ab8476756", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "     private void checkParamTags(final List<JavadocTag> tags,             final DetailAST parent, boolean reportExpectedTags)", "signatureAfterChange": "     private void checkParamTags(final List<JavadocTag> tags,             final DetailAST parent, boolean reportExpectedTags)", "diff": ["-", "-            // Loop looking for matching param", "-            final Iterator<DetailAST> paramIt = params.iterator();", "-            while (paramIt.hasNext()) {", "-                final DetailAST param = paramIt.next();", "-                if (param.getText().equals(arg1)) {", "-                    found = true;", "-                    paramIt.remove();", "-                    break;", "-                }", "-            }", "+            found = removeMatchingParam(params, arg1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91108d43dc0f1d67f1df1f8ac8bbe6c0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "7b8a3aa5bba1323a7bbb85b6dbd86835215a48fc", "commitAfterChange": "603c5bb53ea12900f6a1c8af0c4a765af36786e3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private boolean isVerifiable(DetailAST methodOrVariableDef)", "signatureAfterChange": "     private boolean isVerifiable(DetailAST methodOrVariableDef)", "diff": ["-            if (modifiersAst.getFirstChild() != null) {", "-                for (DetailAST modifier = modifiersAst.getFirstChild(); modifier != null;", "-                         modifier = modifier.getNextSibling()) {", "-                    if (memberModifiers.contains(modifier.getType())) {", "-                        result = true;", "-                    }", "+            result = isContainVerifiableType(modifiersAst);", "+        }", "+        return result;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c04a7ef55a285e0c6de715300b8ed40a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "1a205d4b436650a301ef088ed86a3821b99551f2", "commitAfterChange": "faa8a0b7a427385fab564d2959244355f8d9813f", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "     private void checkParamTags(final List<JavadocTag> tags,             final DetailAST parent, boolean reportExpectedTags)", "signatureAfterChange": "     private void checkParamTags(final List<JavadocTag> tags,             final DetailAST parent, boolean reportExpectedTags)", "diff": ["-                // Loop looking for matching type param", "-                final Iterator<DetailAST> typeParamsIt = typeParams.iterator();", "-                while (typeParamsIt.hasNext()) {", "-                    final DetailAST typeParam = typeParamsIt.next();", "-                    if (typeParam.findFirstToken(TokenTypes.IDENT).getText()", "-                            .equals(", "-                                    arg1.substring(1,", "-                                        arg1.length() - 1))) {", "-                        found = true;", "-                        typeParamsIt.remove();", "-                        break;", "-                    }", "-                }", "+                found = searchMatchingTypeParameter(typeParams,", "+                        arg1.substring(1, arg1.length() - 1));"]}]}