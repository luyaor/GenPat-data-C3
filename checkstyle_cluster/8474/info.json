{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62e2c7f7b98946246e6b26f96f4019b8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fd112450615dbdd7b46c838f987e6c0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "commitAfterChange": "6ee4a0f805d528cdee03cfc175502d15b5722dab", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                if (isOnTheSameLine(currentStatement, lastStatementEnd,", "-                        forStatementEnd) && !inForHeader) {", "+                if (!inForHeader", "+                        && isOnTheSameLine(currentStatement, lastStatementEnd, forStatementEnd)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faf8e36d41fd92eee0ba55ddcec4cf39", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "b17515919bd8064e7c6c245956395407bd59a3e7", "commitAfterChange": "af047afee8216a4b0db9027dd013a1aad2be9494", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static boolean isOnTheSameLine(DetailAST ast, int lastStatementEnd,                                            int forStatementEnd)", "signatureAfterChange": "     private static boolean isOnTheSameLine(DetailAST ast, int lastStatementEnd,                                            int forStatementEnd, int lambdaStatementEnd)", "diff": ["-                                           int forStatementEnd) {", "-        return lastStatementEnd == ast.getLineNo() && forStatementEnd != ast.getLineNo();", "+                                           int forStatementEnd, int lambdaStatementEnd) {", "+        return lastStatementEnd == ast.getLineNo() && forStatementEnd != ast.getLineNo()", "+                && lambdaStatementEnd != ast.getLineNo();"]}]}