{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "52dca55264cbb9ce6f884cb46b4be5e1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08585310ca31fb2619ff2ebc7a0f572e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void allowEmptyLoops() throws Exception", "signatureAfterChange": "      @Test     public void allowEmptyLoops() throws Exception", "diff": ["-            \"16:29: Must have at least one statement.\",", "-            \"19:42: Must have at least one statement.\",", "-            \"22:29: Must have at least one statement.\",", "-            \"23:28: Must have at least one statement.\",", "+            \"16:29: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"19:42: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"22:29: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"23:28: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6876c88c8c44b31d62ce828403632271", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testStrictSettings()         throws Exception", "signatureAfterChange": "     @Test     public void testStrictSettings()         throws Exception", "diff": ["-            \"22:9: Avoid nested blocks.\",", "-            \"44:17: Avoid nested blocks.\",", "-            \"50:17: Avoid nested blocks.\",", "-            \"58:17: Avoid nested blocks.\",", "+            \"22:9: \" + getCheckMessage(MSG_KEY_BLOCK_NESTED),", "+            \"44:17: \" + getCheckMessage(MSG_KEY_BLOCK_NESTED),", "+            \"50:17: \" + getCheckMessage(MSG_KEY_BLOCK_NESTED),", "+            \"58:17: \" + getCheckMessage(MSG_KEY_BLOCK_NESTED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e032d067f724f323f1ffb808be26c6cd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testAllowSwitchInCase()         throws Exception", "signatureAfterChange": "      @Test     public void testAllowSwitchInCase()         throws Exception", "diff": ["-            \"22:9: Avoid nested blocks.\",", "-            \"44:17: Avoid nested blocks.\",", "-            \"58:17: Avoid nested blocks.\",", "+            \"22:9: \" + getCheckMessage(MSG_KEY_BLOCK_NESTED),", "+            \"44:17: \" + getCheckMessage(MSG_KEY_BLOCK_NESTED),", "+            \"58:17: \" + getCheckMessage(MSG_KEY_BLOCK_NESTED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f421caa1aaac79b481ddfe7d91e3b4ca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void allowEmptyLoopsText() throws Exception", "signatureAfterChange": "      @Test     public void allowEmptyLoopsText() throws Exception", "diff": ["-            \"16:29: Empty if block.\",", "-            \"19:42: Empty if block.\",", "-            \"22:29: Empty if block.\",", "-            \"23:28: Empty switch block.\",", "+            \"16:29: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"if\"),", "+            \"19:42: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"if\"),", "+            \"22:29: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"if\"),", "+            \"23:28: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"switch\"),"]}]}