{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "768e234ade8bd5b5e42e9ca8596e3788", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73aaab9e784b838fdb39888cf215bd80", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "0ce872d7cc6b0b1564655b9e3119f72911f4dddd", "commitAfterChange": "ea9ff3965d9c657b5b7bd2d969e075f430635c47", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     PropertyCacheFile(Configuration currentConfig, String fileName)", "signatureAfterChange": "     PropertyCacheFile(Configuration config, String fileName)", "diff": ["-    PropertyCacheFile(Configuration currentConfig, String fileName) {", "-        boolean setInActive = true;", "-        if (fileName != null) {", "-            FileInputStream inStream = null;", "-            // get the current config so if the file isn't found", "-            // the first time the hash will be added to output file", "-            final String currentConfigHash = getConfigHashCode(currentConfig);", "+    PropertyCacheFile(Configuration config, String fileName) {", "+        if (config == null) {", "+            throw new IllegalArgumentException(\"config can not be null\");", "+        }", "+        if (fileName == null) {", "+            throw new IllegalArgumentException(\"fileName can not be null\");", "+        }", "+        this.config = config;", "+        this.fileName = fileName;", "+    }", "-                final String cachedConfigHash =", "-                    details.getProperty(CONFIG_HASH_KEY);", "-                setInActive = false;", "-                if (cachedConfigHash == null", "-                    || !cachedConfigHash.equals(currentConfigHash)) {", "-            catch (final FileNotFoundException e) {", "-                // Ignore, the cache does not exist", "-                setInActive = false;", "-                // put the hash in the file if the file is going to be created", "-                details.put(CONFIG_HASH_KEY, currentConfigHash);", "-            }", "-            catch (final IOException e) {", "-                LOG.debug(\"Unable to open cache file, ignoring.\", e);", "-            }", "-        detailsFile = setInActive ? null : fileName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d8eae90d92f087ba10c1f5364f828f0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "33b703a724ddd2090f771cb9834c85e0ccb569e1", "commitAfterChange": "864c681eef6521082729167ffdaabd2af1e813ed", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     PropertyCacheFile(Configuration aCurrentConfig, String aFileName)", "signatureAfterChange": "     PropertyCacheFile(Configuration aCurrentConfig, String aFileName)", "diff": ["+            // get the current config so if the file isn't found", "+            // the first time the hash will be added to output file", "+            final String currentConfigHash = getConfigHashCode(aCurrentConfig);", "-                final String currentConfigHash =", "-                    getConfigHashCode(aCurrentConfig);", "+                // put the hash in the file if the file is going to be created", "+                mDetails.put(CONFIG_HASH_KEY, currentConfigHash);", "-                // TODO: use logger", "-                System.out.println(\"Unable to open cache file, ignoring.\");", "-                e.printStackTrace(System.out);", "+                Utils.getExceptionLogger()", "+                    .debug(\"Unable to open cache file, ignoring.\", e);", "-                        // TODO: use logger", "-                        System.out.println(\"Unable to close cache file.\");", "-                        ex.printStackTrace(System.out);", "+                        Utils.getExceptionLogger()", "+                            .debug(\"Unable to close cache file.\", ex);"]}]}