{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5acf8e839457faf86c3cfc6e0ee87f38", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b8835b1a8a69e62590639cb71f60642", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/AnnotationTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testSimpleTypeAnnotation()         throws Exception", "signatureAfterChange": "      @Test     public void testSimpleTypeAnnotation()         throws Exception", "diff": ["-        verify(checkConfig,", "-                getPath(\"grammars/java8/InputAnnotationsTest1.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAnnotationsTest1.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "765de1c1dcc4ce0bf9472edf9a0d40bf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/GenericWhitespaceTest.java", "commitBeforeChange": "4346d41010a729e14991e30706bdb16ff18ff39a", "commitAfterChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void whitespaceAroundGenericsTest() throws Exception", "signatureAfterChange": "      @Test     public void whitespaceAroundGenericsTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"WhitespaceAroundInput_Generics\");", "+        final String filePath = builder.getFilePath(\"InputWhitespaceAroundGenerics\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "961676e69d58662dc70683469be0ceba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testWithUserSetValues() throws Exception", "signatureAfterChange": "      @Test     public void testWithUserSetValues() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputEmptyCatchBlockCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputEmptyCatchBlock.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0c63f31c52a15cf0045ef617b542a11", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     @Test     public void testParensNever() throws Exception", "signatureAfterChange": "     @Test     public void testParensNever() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"DifferentUseStyles.java\"), expected);", "+        verify(checkConfig, getPath(\"InputDifferentUseStyles.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe70443359fbec64e88a5ade0894d202", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/NoFinalizerCheckTest.java", "commitBeforeChange": "8a6befb469c60416d1629b5a92e5bf81e07b7cae", "commitAfterChange": "708bb0271d113352a98c3a878b448d6635405694", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testHasFinalizer()         throws Exception", "signatureAfterChange": "      @Test     public void testHasFinalizer()         throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"coding/InputHasFinalizer.java\"), expected);", "+        verify(checkConfig, getPath(\"InputHasFinalizer.java\"), expected);"]}]}