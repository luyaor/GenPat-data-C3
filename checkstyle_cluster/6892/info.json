{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ac790a38c26bfd0974dddb047daf5cf", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46f49a210d5cadaa575123685197edea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/WhitespaceAfterCheck.java", "commitBeforeChange": "081f9e7f7f70a5da494c9e1185c27f1766e16acc", "commitAfterChange": "916417fc6214ab75606d2fbc1d7b511509ffe25b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["+                //empty FOR_ITERATOR?", "+                if (targetAST.getType() == TokenTypes.SEMI) {", "+                    final DetailAST sibling =", "+                        (DetailAST) targetAST.getNextSibling();", "+                    if ((sibling != null)", "+                        && (sibling.getType() == TokenTypes.FOR_ITERATOR)", "+                        && (sibling.getChildCount() == 0))", "+                    {", "+                        return;", "+                    }", "+                }   "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db9cd204ebbc3cceb806ad74eaea423c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceBeforeCheck.java", "commitBeforeChange": "0b2ea87e30a285e6fb8c8f2aa4b80e1802f8d865", "commitAfterChange": "da2328d0f138c2d989056bc876f8698cc53bffe3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["+", "+            // empty FOR initializer?", "+            if (aAST.getType() == TokenTypes.SEMI) {", "+                final DetailAST sibling = aAST.getPreviousSibling();", "+                if ((sibling != null)", "+                        && (sibling.getType() == TokenTypes.FOR_INIT)", "+                        && (sibling.getChildCount() == 0))", "+                {", "+                    return;", "+                }", "+            }", "+"]}]}