{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c2eb054a1abc0f5a645e80c3c1947a5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1899b28a5503ad5f61acdf118cf8d5b4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "64c05f5391bdf55a60da22a685488022827aee84", "commitAfterChange": "1487e5161886d95cb8c82e4fb1a8b447fa7e32d0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void checkHtmlTags(final DetailAST ast, final TextBlock comment)", "signatureAfterChange": "     private void checkHtmlTags(final DetailAST ast, final TextBlock comment)", "diff": ["-        for (final HtmlTag htag : htmlStack) {", "-            if (!isSingleTag(htag)", "-                && !htag.getId().equals(lastFound)", "-                && !typeParameters.contains(htag.getId())) {", "-                log(htag.getLineNo(), htag.getPosition(), UNCLOSED_HTML, htag);", "-                lastFound = htag.getId();", "+        for (final HtmlTag htmlTag : htmlStack) {", "+            if (!isSingleTag(htmlTag)", "+                && !htmlTag.getId().equals(lastFound)", "+                && !typeParameters.contains(htmlTag.getId())) {", "+                log(htmlTag.getLineNo(), htmlTag.getPosition(), UNCLOSED_HTML, htmlTag);", "+                lastFound = htmlTag.getId();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "239a0e9aa7d4bd40a7486907a90e5862", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CommitValidationTest.java", "commitBeforeChange": "d1c5d416666252a520696d079945d17f50c83968", "commitAfterChange": "e7edc7118da8c40cba7b1497fa336e6b61d70031", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private static RevCommitsPair resolveRevCommitsPair(Repository repo)", "signatureAfterChange": "      private static RevCommitsPair resolveRevCommitsPair(Repository repo)", "diff": ["-        try {", "+", "+        try (RevWalk revWalk = new RevWalk(repo)) {", "-", "-            RevWalk revWalk = new RevWalk(repo);", "-", "-                first = new Git(repo).log().add(firstParent).call().iterator();", "-                second = new Git(repo).log().add(secondParent).call().iterator();", "+                try (Git git = new Git(repo)) {", "+                    first = git.log().add(firstParent).call().iterator();", "+                    second = git.log().add(secondParent).call().iterator();", "+                }", "-                first = new Git(repo).log().call().iterator();", "+                try (Git git = new Git(repo)) {", "+                    first = git.log().call().iterator();", "+                }"]}]}