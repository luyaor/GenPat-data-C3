{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "246a37fde8d4e298ed20d0f1e9477a00", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bddc363780b93b039e3b8de4356df3cc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "39ce82b920cf83358bf0c291e9ed826b5662c7e8", "commitAfterChange": "abe2b200312ee72aa552026b1a34e8bd72bfdc4e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void registerCheck(Check check)         throws CheckstyleException", "signatureAfterChange": "     private void registerCheck(Check check)         throws CheckstyleException", "diff": ["-                try {", "-                    final int tokenId = TokenTypes.getTokenId(token);", "-                    if (Arrays.binarySearch(acceptableTokens, tokenId) >= 0) {", "-                        registerCheck(token, check);", "-                    }", "-                    else {", "-                        throw new IllegalArgumentException(\"Token \\\"\"", "-                            + token + \"\\\" was not found in Acceptable tokens list\"", "-                                    + \" in check \" + check);", "-                    }", "+                final int tokenId = TokenTypes.getTokenId(token);", "+                if (Arrays.binarySearch(acceptableTokens, tokenId) >= 0) {", "+                    registerCheck(token, check);", "-                catch (final IllegalArgumentException ex) {", "+                else {", "-                                + \" in check \" + check, ex);", "+                                + \" in check \" + check);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f32b4c9985ae36de6501a2ed3bb9e9e3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.java", "commitBeforeChange": "3b0a175562e4fe39ca184c49173472bdf9cd2105", "commitAfterChange": "fa3199e2bc7d0498ce49fc2bb0b7899c6ace23d4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setCharset(String aCharset)         throws UnsupportedEncodingException", "signatureAfterChange": "     public void setCharset(String aCharset)         throws UnsupportedEncodingException", "diff": ["-        // TODO: This is a hack to check that aCharset is supported.", "-        // TODO: Find a better way in Java 1.3", "-        try {", "-            new String(new byte[] {}, aCharset);", "-        }", "-        catch (final UnsupportedEncodingException es) {", "-            final String message = \"unsupported charset: \" + es.getMessage();", "+        if (!Charset.isSupported(aCharset)) {", "+            final String message = \"unsupported charset: '\" + aCharset + \"'\";"]}]}