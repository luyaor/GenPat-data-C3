{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c7dcb52544cea52d3512379ccfacfdc5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5556166d1759066beff211a5a628bd2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testForceLineBreakBefore2() throws Exception", "signatureAfterChange": "      @Test     public void testForceLineBreakBefore2() throws Exception", "diff": ["-            \"24:33: '}' should have line break before.\",", "-            \"32:44: '}' should have line break before.\",", "-            \"32:63: '}' should have line break before.\",", "-            \"52:56: '}' should have line break before.\",", "+            \"24:33: \" + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, \"}\"),", "+            \"32:44: \" + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, \"}\"),", "+            \"32:63: \" + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, \"}\"),", "+            \"52:56: \" + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, \"}\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e967d89dc3894f50a8b6adbf54f6191e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testAllowNoEmptyLineBetweenFields() throws Exception", "signatureAfterChange": "      @Test     public void testAllowNoEmptyLineBetweenFields() throws Exception", "diff": ["-            \"21: 'import' should be separated from previous statement.\",", "-            \"35: 'CLASS_DEF' should be separated from previous statement.\",", "-            \"39: 'STATIC_INIT' should be separated from previous statement.\",", "-            \"77: 'INTERFACE_DEF' should be separated from previous statement.\",", "+            \"21: \" + getCheckMessage(MSG_SHOULD_BE_SEPARATED, \"import\"),", "+            \"35: \" + getCheckMessage(MSG_SHOULD_BE_SEPARATED, \"CLASS_DEF\"),", "+            \"39: \" + getCheckMessage(MSG_SHOULD_BE_SEPARATED, \"STATIC_INIT\"),", "+            \"77: \" + getCheckMessage(MSG_SHOULD_BE_SEPARATED, \"INTERFACE_DEF\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2f118821a052efcfdfc0cb81111535f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java", "commitBeforeChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "commitAfterChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testIllegalClassType() throws Exception", "signatureAfterChange": "      @Test     public void testIllegalClassType() throws Exception", "diff": ["-            \"26:1: Class 'AbstractClass' must be declared as 'abstract'.\",", "-            \"29:1: Class 'Class1Factory' must be declared as 'abstract'.\",", "-            \"33:5: Class 'AbstractInnerClass' must be declared as 'abstract'.\",", "-            \"38:5: Class 'WellNamedFactory' must be declared as 'abstract'.\",", "+            \"26:1: \" + getCheckMessage(NO_ABSTRACT_CLASS_MODIFIER, \"AbstractClass\"),", "+            \"29:1: \" + getCheckMessage(NO_ABSTRACT_CLASS_MODIFIER, \"Class1Factory\"),", "+            \"33:5: \" + getCheckMessage(NO_ABSTRACT_CLASS_MODIFIER, \"AbstractInnerClass\"),", "+            \"38:5: \" + getCheckMessage(NO_ABSTRACT_CLASS_MODIFIER, \"WellNamedFactory\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f421caa1aaac79b481ddfe7d91e3b4ca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void allowEmptyLoopsText() throws Exception", "signatureAfterChange": "      @Test     public void allowEmptyLoopsText() throws Exception", "diff": ["-            \"16:29: Empty if block.\",", "-            \"19:42: Empty if block.\",", "-            \"22:29: Empty if block.\",", "-            \"23:28: Empty switch block.\",", "+            \"16:29: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"if\"),", "+            \"19:42: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"if\"),", "+            \"22:29: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"if\"),", "+            \"23:28: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"switch\"),"]}]}