{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "193b3263e175cb4fbac6607504612cce", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "237ec8a4035d95dc7103dee6cee546ed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "9c488c1f512ffcc58af433842c992bd3f85b2d63", "commitAfterChange": "f47587c9fb66cf46fbd2eb5691449cda6d551ecb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testStringLiteralEquality() throws Exception", "signatureAfterChange": "      @Test     public void testStringLiteralEquality() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks\" + File.separator + \"InputStringLiteralEquality.java\"), expected);", "+        verify(checkConfig, getPath(\"InputStringLiteralEquality.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e50c8d236be77cce51842eaf10345b3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "96d3aaea19657ac233d9a57b46a52bc0b35eda95", "commitAfterChange": "5f3eced2d85c10407b5ba1f38c06af05715d9bd7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testDefaults() throws Exception", "signatureAfterChange": "      @Test     public void testDefaults() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding\" + File.separator + \"InputIllegalType.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalType.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "944ad73c96f50e033a549e93bd9cc8bb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MemberNameCheckTest.java", "commitBeforeChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "commitAfterChange": "fa5884271348f0cfaaa1160e18028d37845af4dd", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testPrivateOnly() throws Exception", "signatureAfterChange": "      @Test     public void testPrivateOnly() throws Exception", "diff": ["-        verify(checkConfig,", "-               getPath(\"naming\" + File.separator + \"InputMemberName.java\"),", "-               expected);", "+        verify(checkConfig, getPath(\"InputMemberName.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bad429682ab869818dcda62a74890ddf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MemberNameCheckTest.java", "commitBeforeChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "commitAfterChange": "fa5884271348f0cfaaa1160e18028d37845af4dd", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void memberNameExtended() throws Exception", "signatureAfterChange": "      @Test     public void memberNameExtended() throws Exception", "diff": ["-        verify(checkConfig,", "-              getPath(\"naming\" + File.separator + \"InputMemberNameExtended.java\"),", "-              expected);", "+        verify(checkConfig, getPath(\"InputMemberNameExtended.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c019d3c8dcf88de8f9213083eb118073", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "96d3aaea19657ac233d9a57b46a52bc0b35eda95", "commitAfterChange": "5f3eced2d85c10407b5ba1f38c06af05715d9bd7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testSameFileNameFalsePositive() throws Exception", "signatureAfterChange": "      @Test     public void testSameFileNameFalsePositive() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding\" + File.separator", "-                + \"InputIllegalTypeSameFileName.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalTypeSameFileName.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f53cbe37c2c718e9d17b7e9479d32204", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MemberNameCheckTest.java", "commitBeforeChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "commitAfterChange": "fa5884271348f0cfaaa1160e18028d37845af4dd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testNotPrivate() throws Exception", "signatureAfterChange": "      @Test     public void testNotPrivate() throws Exception", "diff": ["-        verify(checkConfig,", "-               getPath(\"naming\" + File.separator + \"InputMemberName.java\"),", "-               expected);", "+        verify(checkConfig, getPath(\"InputMemberName.java\"), expected);"]}]}