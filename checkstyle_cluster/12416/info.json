{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "14ec5af9209b62f08742e4d8adef5655", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "248033527e38a73d3115f06584bda0f4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean isIgnoreSituation(DetailAST aAst)", "signatureAfterChange": "     private boolean isIgnoreSituation(DetailAST ast)", "diff": ["-    private boolean isIgnoreSituation(DetailAST aAst)", "+    private boolean isIgnoreSituation(DetailAST ast)", "-        final DetailAST modifiers = aAst.getFirstChild();", "+        final DetailAST modifiers = ast.getFirstChild();", "-        if (aAst.getType() == TokenTypes.VARIABLE_DEF) {", "-            if ((mIgnoreFinal || mIgnoreStatic)", "-                    && isInterfaceDeclaration(aAst))", "+        if (ast.getType() == TokenTypes.VARIABLE_DEF) {", "+            if ((ignoreFinal || ignoreStatic)", "+                    && isInterfaceDeclaration(ast))", "-                result = (mIgnoreFinal", "+                result = (ignoreFinal", "-                    || (mIgnoreStatic", "+                    || (ignoreStatic", "-        else if (aAst.getType() == TokenTypes.METHOD_DEF) {", "-            result = mIgnoreOverriddenMethods", "+        else if (ast.getType() == TokenTypes.METHOD_DEF) {", "+            result = ignoreOverriddenMethods"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2137c08bbf061ab3c54f5743eb3faca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (shouldCheck(aAST)) {", "+        if (shouldCheck(ast)) {", "-            final int lineNo = aAST.getLineNo();", "+            final int lineNo = ast.getLineNo();", "-            else if (ScopeUtils.isOuterMostType(aAST)) {", "+            else if (ScopeUtils.isOuterMostType(ast)) {", "-                         mAuthorFormatPattern, mAuthorFormat);", "+                         authorFormatPattern, authorFormat);", "-                         mVersionFormatPattern, mVersionFormat);", "+                         versionFormatPattern, versionFormat);", "-                    CheckUtils.getTypeParameterNames(aAST);", "+                    CheckUtils.getTypeParameterNames(ast);", "-                if (!mAllowMissingParamTags) {", "+                if (!allowMissingParamTags) {"]}]}