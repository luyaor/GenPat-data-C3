{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a9bb73830cdeca4dfa0631ce91e2d7d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04c5363b351222120e3c9d4f7211bfd7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ClassCouplingCheckTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputClassCoupling.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fc65e92c71c43c26db92d74d7817251", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testAnnotationsWithoutDefaultValues() throws Exception", "signatureAfterChange": "      @Test     public void testAnnotationsWithoutDefaultValues() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"AnnotationsUseStyleParams.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAnnotationsUseStyleParams.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "297094c02f2e396e434be40db39d540e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testEverythingMixed() throws Exception", "signatureAfterChange": "      @Test     public void testEverythingMixed() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"DifferentUseStyles.java\"), expected);", "+        verify(checkConfig, getPath(\"InputDifferentUseStyles.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f252e823adf91373ba8c0efe1735172", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheckTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testNospaceWithComplexInput() throws Exception", "signatureAfterChange": "      @Test     public void testNospaceWithComplexInput() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputParenPad.java\"), expected);", "+        verify(checkConfig, getPath(\"InputParenPad.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9275b762fbe2486080ff63f4d8a8c7dc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyRightCurlyTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void leftCurlyBracesTest() throws Exception", "signatureAfterChange": "      @Test     public void leftCurlyBracesTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"LeftCurlyInput_Braces\");", "+        final String filePath = builder.getFilePath(\"InputLeftCurlyBraces\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "984aa5d715c078be1cf4710ebe6a3cd6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheckTest.java", "commitBeforeChange": "10352e146f048c7938af5949925b0eb19781a0b1", "commitAfterChange": "bee6b0a1ec26b04e2d738221bdce4bd159b278d2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testRegexpHeader() throws Exception", "signatureAfterChange": "      @Test     public void testRegexpHeader() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputScopeAnonInner.java\"), expected);", "+        verify(checkConfig, getPath(\"InputRegexpHeader7.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cef0c22ecc3fdddf0e515248a216bf8d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void extendAnnotationTest() throws Exception", "signatureAfterChange": "      @Test     public void extendAnnotationTest() throws Exception", "diff": ["-        verify(config, getPath(\"ExtendAnnotation.java\"), expected);", "+        verify(config, getPath(\"InputExtendAnnotation.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e480aef998a2e66dea7f76baf8b972d3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "9c488c1f512ffcc58af433842c992bd3f85b2d63", "commitAfterChange": "f47587c9fb66cf46fbd2eb5691449cda6d551ecb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testMinimumNumber()         throws Exception", "signatureAfterChange": "      @Test     public void testMinimumNumber()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/InputIllegalTokens.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e96c449cfd1e2dd6fbaecdf45f275790", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/NestedForDepthCheckTest.java", "commitBeforeChange": "bff0f959627099ae2b1be6e441741dc331979416", "commitAfterChange": "9509710845bf8d8ef67755be7e097d540d43b026", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testNestedTooDeep() throws Exception", "signatureAfterChange": "     @Test     public void testNestedTooDeep() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputNestedForDepth.java\"),", "+        verify(checkConfig, getPath(\"InputNestedForDepth.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eae201b3744a8a6b767ef47534b651aa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/MethodParamPadCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testSpaceOption() throws Exception", "signatureAfterChange": "      @Test     public void testSpaceOption() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputMethodParamPad.java\"), expected);", "+        verify(checkConfig, getPath(\"InputMethodParamPad.java\"), expected);"]}]}