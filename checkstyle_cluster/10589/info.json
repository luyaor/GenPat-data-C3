{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59835975c7731a24c4a7c03c5bf02e6a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b66f045ce9ea7aabdb894013e4c307c0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAst)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAst)", "+    public void visitToken(DetailAST ast)", "-        if (!isIgnoreSituation(aAst)) {", "+        if (!isIgnoreSituation(ast)) {", "-            final DetailAST nameAst = aAst.findFirstToken(TokenTypes.IDENT);", "+            final DetailAST nameAst = ast.findFirstToken(TokenTypes.IDENT);", "-                log(nameAst.getLineNo(), MSG_KEY, mAllowedAbbreviationLength);", "+                log(nameAst.getLineNo(), MSG_KEY, allowedAbbreviationLength);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cce8bc20382377d826c1d3ed2d46bbc9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (aAST.getType() == TokenTypes.TYPECAST) {", "-            targetAST = aAST.findFirstToken(TokenTypes.RPAREN);", "+        if (ast.getType() == TokenTypes.TYPECAST) {", "+            targetAST = ast.findFirstToken(TokenTypes.RPAREN);", "-            targetAST = aAST;", "-            message = new Object[]{aAST.getText()};", "+            targetAST = ast;", "+            message = new Object[]{ast.getText()};"]}]}