{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0172a9983c47314725410474d6a6cd9d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e26554caedd84547a6d54eb2f484bcad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "1079f0ab995bc25218f9e38af7968552f26a5df5", "commitAfterChange": "f45fee0aa4ba2f6f286c9e0336543c20e311a681", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testReplacePropertiesNoReplace()         throws CheckstyleException", "signatureAfterChange": "      @Test     public void testReplacePropertiesNoReplace()         throws CheckstyleException", "diff": ["-        for (int i = 0; i < testValues.length; i++) {", "+        for (String testValue : testValues) {", "-                testValues[i], new PropertiesExpander(props), null);", "-            assertEquals(\"\\\"\" + testValues[i] + \"\\\"\", value, testValues[i]);", "+                testValue, new PropertiesExpander(props), null);", "+            assertEquals(\"\\\"\" + testValue + \"\\\"\", value, testValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ead1d4ce3a775a252c17dd493d104607", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "1079f0ab995bc25218f9e38af7968552f26a5df5", "commitAfterChange": "f45fee0aa4ba2f6f286c9e0336543c20e311a681", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testReplacePropertiesReplace()         throws CheckstyleException", "signatureAfterChange": "      @Test     public void testReplacePropertiesReplace()         throws CheckstyleException", "diff": ["-        for (int i = 0; i < testValues.length; i++) {", "+        for (String[] testValue : testValues) {", "-                testValues[i][0], new PropertiesExpander(props), null);", "-            assertEquals(\"\\\"\" + testValues[i][0] + \"\\\"\",", "-                testValues[i][1], value);", "+                testValue[0], new PropertiesExpander(props), null);", "+            assertEquals(\"\\\"\" + testValue[0] + \"\\\"\",", "+                testValue[1], value);"]}]}