{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d6ac1d6e2ace52cce7247cbb21d7e4c3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30573538716baa3c33f5f48e5d71f8ee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java", "commitBeforeChange": "accb0bf5bcca0213c55996af02cc42bbc22f313c", "commitAfterChange": "cd12de2a24713a494393912e2277b67770eb79fe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testNonSpecifiedImports() throws Exception", "signatureAfterChange": "     @Test     public void testNonSpecifiedImports() throws Exception", "diff": ["-        checkConfig", "-                .addAttribute(\"customImportOrderRules\",", "-                        \"STATIC###STANDARD_JAVA_PACKAGE###THIRD_PARTY_PACKAGE###SAME_PACKAGE(3)\");", "+        checkConfig.addAttribute(\"customImportOrderRules\",", "+                \"STATIC###STANDARD_JAVA_PACKAGE###THIRD_PARTY_PACKAGE###SAME_PACKAGE(3)\");", "-            \"4: \" + getCheckMessage(MSG_LEX, \"java.awt.Button.ABORT\"),", "-            \"10: \" + getCheckMessage(MSG_LEX, \"java.awt.Dialog\"),", "-            \"15: \" + getCheckMessage(MSG_LEX, \"java.io.File\"),", "-            \"20: \" + getCheckMessage(MSG_ORDER, \"SAME_PACKAGE\"),", "-            \"22: \" + getCheckMessage(MSG_NONGROUP_IMPORT),", "+            \"4: \" + getCheckMessage(MSG_LEX, \"java.awt.Button.ABORT\", \"java.io.File.createTempFile\"),", "+            \"10: \" + getCheckMessage(MSG_LEX, \"java.awt.Dialog\", \"java.awt.Frame\"),", "+            \"15: \" + getCheckMessage(MSG_LEX, \"java.io.File\", \"javax.swing.JTable\"),", "+            \"20: \" + getCheckMessage(MSG_ORDER, SAME, THIRD, \"com.puppycrawl.tools.*\"),", "+            \"22: \" + getCheckMessage(MSG_NONGROUP_IMPORT, \"com.google.common.collect.*\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aef719d88e76412575fd0e8231cb05f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 73, "signatureBeforeChange": "     private void checkLCurly(int aStartLine,                              MyCommonAST aBrace,                              LeftCurlyOption aOption)", "signatureAfterChange": "     private void checkLCurly(int aStartLine,                              MyCommonAST aBrace,                              LeftCurlyOption aOption)", "diff": ["-                log(aBrace.getLineNo(),", "-                    aBrace.getColumnNo(),", "-                    \"'{' should be on a new line.\");", "+                log(aBrace.getLineNo(), aBrace.getColumnNo(),", "+                    \"line.new\", \"{\");", "-                log(aBrace.getLineNo(),", "-                    aBrace.getColumnNo(),", "-                    \"'{' should be on the previous line.\");", "+                log(aBrace.getLineNo(), aBrace.getColumnNo(),", "+                    \"line.previous\", \"{\");", "-                    log(aBrace.getLineNo(),", "-                        aBrace.getColumnNo(),", "-                        \"'{' should be on a new line.\");", "+                    log(aBrace.getLineNo(), aBrace.getColumnNo(),", "+                        \"line.new\", \"{\");", "-                    log(aBrace.getLineNo(),", "-                        aBrace.getColumnNo(),", "-                        \"'{' should be on the previous line.\");", "+                    log(aBrace.getLineNo(), aBrace.getColumnNo(),", "+                        \"line.previous\", \"{\");", "-                log(aBrace.getLineNo(),", "-                    aBrace.getColumnNo(),", "-                    \"'{' should be on a new line.\");", "+                log(aBrace.getLineNo(), aBrace.getColumnNo(),", "+                    \"line.new\", \"{\");"]}]}