{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "450e8555d82bc7730d6c083723b3f3ae", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55e2752182fb845c824baa415075bef0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "       private void verifyConfigNode(         DefaultConfiguration aConfig, String aName, int aChildrenLength,         Properties atts) throws Exception", "signatureAfterChange": "       private void verifyConfigNode(         DefaultConfiguration config, String name, int childrenLength,         Properties atts) throws Exception", "diff": ["-        DefaultConfiguration aConfig, String aName, int aChildrenLength,", "+        DefaultConfiguration config, String name, int childrenLength,", "-        assertEquals(\"name.\", aName, aConfig.getName());", "+        assertEquals(\"name.\", name, config.getName());", "-            aChildrenLength,", "-            aConfig.getChildren().length);", "+            childrenLength,", "+            config.getChildren().length);", "-        final String[] attNames = aConfig.getAttributeNames();", "+        final String[] attNames = config.getAttributeNames();", "-                aConfig.getAttribute(attNames[i]));", "+                config.getAttribute(attNames[i]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d08d8e70eb322e57d59b4b54afd3580e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static Configuration loadConfiguration(String aConfig,         PropertyResolver aOverridePropsResolver, boolean aOmitIgnoredModules)         throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(String config,         PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "diff": ["-    public static Configuration loadConfiguration(String aConfig,", "-        PropertyResolver aOverridePropsResolver, boolean aOmitIgnoredModules)", "+    public static Configuration loadConfiguration(String config,", "+        PropertyResolver overridePropsResolver, boolean omitIgnoredModules)", "-                final URL url = new URL(aConfig);", "+                final URL url = new URL(config);", "-                final File file = new File(aConfig);", "+                final File file = new File(config);", "-                                .getResource(aConfig);", "+                                .getResource(config);", "-                            throw new FileNotFoundException(aConfig);", "+                            throw new FileNotFoundException(config);", "-                        throw new FileNotFoundException(aConfig);", "+                        throw new FileNotFoundException(config);", "-            return loadConfiguration(source, aOverridePropsResolver,", "-                    aOmitIgnoredModules);", "+            return loadConfiguration(source, overridePropsResolver,", "+                    omitIgnoredModules);", "-            throw new CheckstyleException(\"unable to find \" + aConfig, e);", "+            throw new CheckstyleException(\"unable to find \" + config, e);", "-            throw new CheckstyleException(\"unable to read \" + aConfig + \" - \"", "+            throw new CheckstyleException(\"unable to read \" + config + \" - \""]}]}