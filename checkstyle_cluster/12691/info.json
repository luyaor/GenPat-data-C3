{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "604c1a9109630626e0c3599059dd7a82", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2be0e578880c3a4ea31747c774af3ae6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "957f644aeff928017aba3d0a920c1ce721296851", "commitAfterChange": "4065b439221c56ab2a11f97cb50c246d8ba2c913", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "     public void setIgnoreBraces(final boolean aIgnore)", "signatureAfterChange": "     public void setIgnoreBraces(final boolean aIgnore)", "diff": ["-        setBooleanFlag(Defn.IGNORE_BRACES_PROP, aIgnore);", "+        setBooleanProperty(Defn.IGNORE_BRACES_PROP, aIgnore);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e6e8194645b8c8267dd54d7346984da", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "957f644aeff928017aba3d0a920c1ce721296851", "commitAfterChange": "4065b439221c56ab2a11f97cb50c246d8ba2c913", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "     public void setIgnoreOpWrap(final boolean aIgnore)", "signatureAfterChange": "     public void setIgnoreOpWrap(final boolean aIgnore)", "diff": ["-        setBooleanFlag(Defn.IGNORE_OP_WRAP_PROP, aIgnore);", "+        setBooleanProperty(Defn.IGNORE_OP_WRAP_PROP, aIgnore);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b200ad5ff9342e5bf0e84774dfccf28", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "957f644aeff928017aba3d0a920c1ce721296851", "commitAfterChange": "4065b439221c56ab2a11f97cb50c246d8ba2c913", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "     public void setIgnoreImports(final boolean aIgnore)", "signatureAfterChange": "     public void setIgnoreImports(final boolean aIgnore)", "diff": ["-        setBooleanFlag(Defn.IGNORE_IMPORTS_PROP, aIgnore);", "+        setBooleanProperty(Defn.IGNORE_IMPORTS_PROP, aIgnore);"]}]}