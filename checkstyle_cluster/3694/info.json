{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "28b494ff31f7322e36780cb361eb080d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45db29d20f9d62fb12bb8c16fe9d5282", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "3eca04c940bcdf575c2f9009202a4145e9a82c15", "commitAfterChange": "57f395fa2b2dcea7dd369ab3dd52d3d42f0e0893", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(final DetailAST methodCall)", "signatureAfterChange": "      @Override     public void visitToken(final DetailAST methodCall)", "diff": ["-", "-        //checks for calling equals on String literal and", "-        //anon object which cannot be null", "-        //Also, checks if calling using strange inner class", "-        //syntax outter.inner.equals(otherObj) by looking", "-        //for the dot operator which cannot be improved", "-        if (objCalledOn.getType() == TokenTypes.STRING_LITERAL", "-                || objCalledOn.getType() == TokenTypes.LITERAL_NEW", "-                || objCalledOn.getType() == TokenTypes.DOT) {", "+        if (isStringLiteral(objCalledOn)) {", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b3c8c8115cc292f3721f99fc8fc6422", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/doclets/CheckDocsDoclet.java", "commitBeforeChange": "76e9e8ee631399e45f641c12a164dd140939db50", "commitAfterChange": "c4d8550b2e36a0ae7c5c410e62ca798980b45c5c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "         private void addCheck(ClassDoc aClassDoc)", "signatureAfterChange": "         private void addCheck(ClassDoc aClassDoc)", "diff": ["-            final String strippedClassName = aClassDoc.typeName();", "-            final String checkName = strippedClassName.endsWith(\"Check\")", "-                    ? strippedClassName.substring(", "-                            0, strippedClassName.length() - \"Check\".length())", "-                    : strippedClassName;", "+            String checkName = getCheckName(aClassDoc);", "+        }"]}]}