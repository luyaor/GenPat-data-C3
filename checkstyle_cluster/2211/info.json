{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "93dbb7bcf6f85fe87429473d04d2729b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0b3ed1cb8ac4f2a58e2ac0c908b8f0b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportCheck.java", "commitBeforeChange": "db428ff350e76d0609e192fc48314cf226677fde", "commitAfterChange": "ed7fc0e632848e74d78992a9081ad689fa85e855", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-    public void visitToken(DetailAST aAST) ", "+    public void visitToken(DetailAST aAST)", "-            for (int i = 0; i < m_excludes.length && !exempt; i++) {", "-                if (name.getText().equals(m_excludes[i])) {", "+            for (int i = 0; i < mExcludes.length && !exempt; i++) {", "+                if (name.getText().equals(mExcludes[i])) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec88b0538f302544282d8078f6c41f85", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-    public void finishTree(DetailAST aRootAST)", "+    public void finishTree(DetailAST rootAST)", "-        for (final FullIdent imp : mImports) {", "-            if (!mReferenced.contains(Utils.baseClassname(imp.getText()))) {", "+        for (final FullIdent imp : imports) {", "+            if (!referenced.contains(Utils.baseClassname(imp.getText()))) {"]}]}