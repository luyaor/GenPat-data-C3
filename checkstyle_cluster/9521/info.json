{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4966db87f9bf7cf99fe07631656b1e24", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e89f2ac2038f51197e89f6490cda841", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "commitBeforeChange": "e0471bb7f2840ebfa4adaa5fea697b4b3c31f782", "commitAfterChange": "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean isPrivateOrFinalOrAbstract(DetailAST ast)", "signatureAfterChange": "     private boolean isPrivateOrFinalOrAbstract(DetailAST ast)", "diff": ["-        if (modifiers.branchContains(TokenTypes.LITERAL_PRIVATE)", "-            || modifiers.branchContains(TokenTypes.ABSTRACT)", "-            || modifiers.branchContains(TokenTypes.FINAL)", "-            || modifiers.branchContains(TokenTypes.LITERAL_STATIC)) {", "-            return true;", "-        }", "-        return false;", "+        return modifiers.branchContains(TokenTypes.LITERAL_PRIVATE)", "+                || modifiers.branchContains(TokenTypes.ABSTRACT)", "+                || modifiers.branchContains(TokenTypes.FINAL)", "+                || modifiers.branchContains(TokenTypes.LITERAL_STATIC);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aeef3cda9fd0f1f81926e1eceb6cecc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "e0471bb7f2840ebfa4adaa5fea697b4b3c31f782", "commitAfterChange": "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean isStringLiteral(DetailAST objCalledOn)", "signatureAfterChange": "     private boolean isStringLiteral(DetailAST objCalledOn)", "diff": ["-        if (objCalledOn.getType() == TokenTypes.STRING_LITERAL", "+        return objCalledOn.getType() == TokenTypes.STRING_LITERAL", "-                || objCalledOn.getType() == TokenTypes.DOT) {", "-            return true;", "-        }", "-        return false;", "+                || objCalledOn.getType() == TokenTypes.DOT;"]}]}