{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a8d238c8146feec6e41ced62a60379fe", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0aff9fa5e08a21bc086fc19aeb974a1f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/RedundantThrowsCheck.java", "commitBeforeChange": "262209477f39964a63103613f3e2c985da083371", "commitAfterChange": "08638b5f739d9929698860048c052da2d5f80209", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void checkException(FullIdent aExc, List aKnownExcs)", "signatureAfterChange": "     private void checkException(FullIdent aExc, List<ClassInfo> aKnownExcs)", "diff": ["-    private void checkException(FullIdent aExc, List aKnownExcs)", "+    private void checkException(FullIdent aExc, List<ClassInfo> aKnownExcs)", "-        for (final Iterator known = aKnownExcs.iterator(); known.hasNext();) {", "-            final ClassInfo ci = (ClassInfo) known.next();", "+        for (final Iterator<ClassInfo> known = aKnownExcs.iterator(); known", "+                .hasNext();)", "+        {", "+            final ClassInfo ci = known.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f4529548b96a4270bec23fdcef95811", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "7c20c36cea276a2b9abb09e8b19eb5825e6a921a", "commitAfterChange": "262209477f39964a63103613f3e2c985da083371", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private void tagSuppressions(Collection aComments)", "signatureAfterChange": "     private void tagSuppressions(Collection<TextBlock> aComments)", "diff": ["-    private void tagSuppressions(Collection aComments)", "+    private void tagSuppressions(Collection<TextBlock> aComments)", "-        for (final Iterator iter = aComments.iterator(); iter.hasNext();) {", "-            final TextBlock comment = (TextBlock) iter.next();", "+        for (final Iterator<TextBlock> iter = aComments.iterator(); iter", "+                .hasNext();)", "+        {", "+            final TextBlock comment = iter.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "511f35dc88623fc6ab20af9c982c8542", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "4ebf621616e3c9ea2284e7109d19abbbe1a94efc", "commitAfterChange": "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     private void checkReturnTag(List aTags, int aLineNo,         boolean aReportExpectedTags)", "signatureAfterChange": "     private void checkReturnTag(List<JavadocTag> aTags, int aLineNo,         boolean aReportExpectedTags)", "diff": ["-    private void checkReturnTag(List aTags, int aLineNo,", "+    private void checkReturnTag(List<JavadocTag> aTags, int aLineNo,", "-        final ListIterator it = aTags.listIterator();", "+        final ListIterator<JavadocTag> it = aTags.listIterator();", "-            final JavadocTag jt = (JavadocTag) it.next();", "+            final JavadocTag jt = it.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c56ec139d1a34b84cb7881fad35b4dac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "4ebf621616e3c9ea2284e7109d19abbbe1a94efc", "commitAfterChange": "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void checkUnusedTypeParamTags(         final List aTags,         final List aTypeParamNames)", "signatureAfterChange": "     private void checkUnusedTypeParamTags(         final List<JavadocTag> aTags,         final List<String> aTypeParamNames)", "diff": ["-        final List aTags,", "-        final List aTypeParamNames)", "+        final List<JavadocTag> aTags,", "+        final List<String> aTypeParamNames)", "-            final JavadocTag tag = (JavadocTag) aTags.get(i);", "+            final JavadocTag tag = aTags.get(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce63d090d416015bcd0d99ee78f80103", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/PackageHtmlCheck.java", "commitBeforeChange": "4ebf621616e3c9ea2284e7109d19abbbe1a94efc", "commitAfterChange": "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void process(File[] aFiles)", "signatureAfterChange": "     public void process(File[] aFiles)", "diff": ["-        final Set directories = getParentDirs(javaFiles);", "-        for (final Iterator it = directories.iterator(); it.hasNext();) {", "-            final File dir = (File) it.next();", "+        final Set<File> directories = getParentDirs(javaFiles);", "+        for (final Iterator<File> it = directories.iterator(); it.hasNext();) {", "+            final File dir = it.next();"]}]}