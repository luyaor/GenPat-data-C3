{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "17fc8da6591c8d81b584aefe3da01cbb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b78ea03b5de14cc9c25415e8688dda4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "a1ad6dbd260c4293be469801021f371e60fc9ae8", "commitAfterChange": "1c42e3eeb9aeebc47b2373541c1cc8d311d8b671", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Override     public void addError(AuditEvent evt)", "signatureAfterChange": "     @Override     public void addError(AuditEvent evt)", "diff": ["-            sb.append(fileName);", "-            sb.append(':').append(evt.getLine());", "+            sb.append(fileName).append(':').append(evt.getLine());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d9949a06b02b30c60242998ff36538a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java", "commitBeforeChange": "3a20dbe8edafe0cca300b7b9dfa48effa9a36a06", "commitAfterChange": "5026b7228df4e3d9b79d13f27846987247f9e922", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void exitBlock()", "signatureAfterChange": "     private void exitBlock()", "diff": ["-        currentVariables = variableStack.pop();", "+        variableStack.pop();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "668a9ac2791efddae92621c3091386e1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "ba9639e5decde52e38fbc1a048be7501dc701ac3", "commitAfterChange": "c4928f486c67afa62e7e8fbd5d8f731be7186985", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static boolean isOnTheSameLine(DetailAST ast, int lastStatementEnd,                                            int forStatementEnd)", "signatureAfterChange": "     private static boolean isOnTheSameLine(DetailAST ast, int lastStatementEnd,                                            int forStatementEnd)", "diff": ["-        final boolean onTheSameLine;", "-        onTheSameLine = lastStatementEnd == ast.getLineNo() && forStatementEnd != ast.getLineNo();", "+        final boolean onTheSameLine =", "+            lastStatementEnd == ast.getLineNo() && forStatementEnd != ast.getLineNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8e238292bdcbab49850250be6e14ca9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "7c9772cee74ae38d5f26c54de43beb75434aef24", "commitAfterChange": "ef834b210cc5c7803ef930fcff96219b6b91922d", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "     private void checkParamTags(final List<JavadocTag> tags,             final DetailAST parent, boolean reportExpectedTags)", "signatureAfterChange": "     private void checkParamTags(final List<JavadocTag> tags,             final DetailAST parent, boolean reportExpectedTags)", "diff": ["-            boolean found;", "-            found = removeMatchingParam(params, arg1);", "+            boolean found = removeMatchingParam(params, arg1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9f0c0e7a62198c8163b70a6ae8eecb9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "ba9639e5decde52e38fbc1a048be7501dc701ac3", "commitAfterChange": "c4928f486c67afa62e7e8fbd5d8f731be7186985", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-            String message;", "-            message = re.getMessage();", "+            final String message = re.getMessage();"]}]}