{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8e65352773b5d00b87487f068bcfa7c7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01e9d0616644ba1e39b967dd9ceba0fe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "f768a8f8cca599d460e3c2da5369add062b6ead0", "commitAfterChange": "08ea556aed8265d64a5dd93963b1ce4587cc48b4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault()         throws Exception", "signatureAfterChange": "     @Test     public void testDefault()         throws Exception", "diff": ["-            \"41:26: '3' is a magic number.\",", "-            \"42:32: '1.5' is a magic number.\",", "+            \"41:26: '3_000' is a magic number.\",", "+            \"42:32: '1.5_0' is a magic number.\",", "-            \"63:30: '010L' is a magic number.\",", "+            \"63:30: '0_10L' is a magic number.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ac3ac1c8b3dc508ddf3dc7215a0cffb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d92ceb81a67bb10b98f5ce305f839ba535a1c6ee", "commitAfterChange": "9aa8268e473071cbe26aa9d3a8631f1902e3fef0", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      public void testNoJavadoc()         throws Exception", "signatureAfterChange": "      public void testNoJavadoc()         throws Exception", "diff": ["-            filepath + \":44:9: variable 'mLen' must be private and have accessor methods.\",", "-            filepath + \":45:19: variable 'mDeer' must be private and have accessor methods.\",", "-            filepath + \":46:16: variable 'aFreddo' must be private and have accessor methods.\",", "+            filepath + \":44:9: Variable 'mLen' must be private and have accessor methods.\",", "+            filepath + \":45:19: Variable 'mDeer' must be private and have accessor methods.\",", "+            filepath + \":46:16: Variable 'aFreddo' must be private and have accessor methods.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2023efa6d08946201d6de79b7a45b7de", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "24f73e69dc69add5fb33af0f54af7ad186b285eb", "commitAfterChange": "75da2ef6ac77766baac7016606457dc1f7bbfd7b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testWithAnnotations() throws Exception", "signatureAfterChange": "      @Test     public void testWithAnnotations() throws Exception", "diff": ["-        checkConfig.addAttribute(\"tokens\", \"LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, \"", "-            + \"LITERAL_ELSE, CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, \"", "-            + \"STATIC_INIT, INSTANCE_INIT\");", "+        checkConfig.addAttribute(\"tokens\", \"LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, \"", "+            + \"LITERAL_IF, LITERAL_ELSE, CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, \"", "+            + \"LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21b0aed984d912dfe91401a88e199336", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/usage/UnusedLocalVariableCheckTest.java", "commitBeforeChange": "5f6970f2542204e3f23ac0466f81d9dc981cd3f5", "commitAfterChange": "5efa04e1bbcb5e90f72296f68534f2e626850ceb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public void testIgnoreFormat() throws Exception", "signatureAfterChange": "          public void testIgnoreFormat() throws Exception", "diff": ["-                \"13:13: Unread local variable 'mUnreadPrimitive'.\",", "-                \"24:16: Unread local variable 'unreadObject'.\",", "-                \"45:13: Unread local variable 'java'.\",", "+                \"13:13: Unused local variable 'mUnreadPrimitive'.\",", "+                \"24:16: Unused local variable 'unreadObject'.\",", "+                \"45:13: Unused local variable 'java'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21d840a7afb683b3734f67e208a2fa4a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheckTest.java", "commitBeforeChange": "4704f9198833e80552a7b2bf900ee9ee6d3d39c9", "commitAfterChange": "05526332666bc5142f8cf29a941435527c20fb9c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testIt() throws Exception", "signatureAfterChange": "     public void testIt() throws Exception", "diff": ["-            \"4:9: Reference to instance variable 'i' needs \\\"this.\\\".\",", "-            \"10:9: Method call to 'method1' needs \\\"this.\\\".\",", "-            \"11:9: Unable find where 'j' is declared.\",", "+            \"6:9: Reference to instance variable 'i' needs \\\"this.\\\".\",", "+            \"12:9: Method call to 'method1' needs \\\"this.\\\".\",", "+            \"13:9: Unable find where 'j' is declared.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29389afe7deb7f1eb2157748fdd3114a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/NestedTryDepthCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "     @Test     public void testDefault() throws Exception", "diff": ["-            \"20:17: Nested try depth is 2 (max allowed is 1).\",", "-            \"31:17: Nested try depth is 2 (max allowed is 1).\",", "-            \"32:21: Nested try depth is 3 (max allowed is 1).\",", "+            \"22:17: Nested try depth is 2 (max allowed is 1).\",", "+            \"33:17: Nested try depth is 2 (max allowed is 1).\",", "+            \"34:21: Nested try depth is 3 (max allowed is 1).\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3820ba501f902413580dc1f16e0aa607", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "f768a8f8cca599d460e3c2da5369add062b6ead0", "commitAfterChange": "08ea556aed8265d64a5dd93963b1ce4587cc48b4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIgnoreNone()         throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreNone()         throws Exception", "diff": ["-            \"41:26: '3' is a magic number.\",", "-            \"42:32: '1.5' is a magic number.\",", "+            \"41:26: '3_000' is a magic number.\",", "+            \"42:32: '1.5_0' is a magic number.\",", "-            \"63:30: '010L' is a magic number.\",", "+            \"63:30: '0_10L' is a magic number.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fa7191d8ec5a2b44c139bb52c245f57", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/IllegalImportCheckTest.java", "commitBeforeChange": "f5a30b80e7154498d2d0734fe4f60a79cf943979", "commitAfterChange": "9c944ecd228c7920d2a82c65d58d903de21f36a3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testWithDefault()         throws Exception", "signatureAfterChange": "      @Test     public void testWithDefault()         throws Exception", "diff": ["-            \"15:1: Import from illegal package - sun.net.ftpclient.FtpClient.\",", "-            \"28:1: Import from illegal package - sun.net.ftpclient.FtpClient.*.\",", "+            \"15:1: Import from illegal package - sun.applet.*.\",", "+            \"28:1: Import from illegal package - sun.*.\",", "-        verify(checkConfig, getPath(\"imports\" + File.separator + \"InputImport.java\"), expected);", "+        verify(checkConfig, getPath(\"imports\" + File.separator + \"InputIllegalImportCheck.java\"),", "+                expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "436b024252e86b4464c6f4bf4ecc5bb7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "f8a53831f0fa98f317ea7dbc6490b5e91b6cc5d9", "commitAfterChange": "5703b6e33550d6e9706f42e253c2cc7d83a358bf", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "      public void testScopeInnerClassesPackage()         throws Exception", "signatureAfterChange": "      public void testScopeInnerClassesPackage()         throws Exception", "diff": ["-            filepath + \":18: type is missing a Javadoc comment.\",", "-            filepath + \":20: type is missing a Javadoc comment.\",", "-            filepath + \":22: type is missing a Javadoc comment.\"", "+            filepath + \":18: Missing a Javadoc comment.\",", "+            filepath + \":20: Missing a Javadoc comment.\",", "+            filepath + \":22: Missing a Javadoc comment.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43abe3c387db1b0e43639d7c246c040f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "dc764f3b6ad475854cd0d22655db3f96e7eb7ed3", "commitAfterChange": "a1cecb5e0658862f957e60a8d5b2ade13b592101", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      public void testNoJavadoc()         throws Exception", "signatureAfterChange": "      public void testNoJavadoc()         throws Exception", "diff": ["-            filepath + \":44: variable 'mLen' must be private and have accessor methods.\",", "-            filepath + \":45: variable 'mDeer' must be private and have accessor methods.\",", "-            filepath + \":46: variable 'aFreddo' must be private and have accessor methods.\",", "+            filepath + \":44:9: variable 'mLen' must be private and have accessor methods.\",", "+            filepath + \":45:19: variable 'mDeer' must be private and have accessor methods.\",", "+            filepath + \":46:16: variable 'aFreddo' must be private and have accessor methods.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b3282ecae0f28f40b25ed960b729a1d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testSameFileNameGeneral() throws Exception", "signatureAfterChange": "      @Test     public void testSameFileNameGeneral() throws Exception", "diff": ["-        checkConfig.addAttribute(\"illegalClassNames\", \"List, GregorianCalendar, java.io.File, ArrayList\");", "+        checkConfig.addAttribute(\"illegalClassNames\", \"List, InputGregorianCalendar, java.io.File, ArrayList\");", "-            \"10:5: \" + getCheckMessage(MSG_KEY, \"GregorianCalendar\"),", "-            \"16:23: \" + getCheckMessage(MSG_KEY, \"GregorianCalendar\"),", "+            \"10:5: \" + getCheckMessage(MSG_KEY, \"InputGregorianCalendar\"),", "+            \"16:23: \" + getCheckMessage(MSG_KEY, \"InputGregorianCalendar\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c7b9aa5034317faf6eb34e74f6151d5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/AvoidStarImportTest.java", "commitBeforeChange": "768664d6542ae719b014206b36619e4d180eed32", "commitAfterChange": "54b9235aedc7f62e887c1a90b68ad465da08dd65", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testWithChecker()         throws Exception", "signatureAfterChange": "      public void testWithChecker()         throws Exception", "diff": ["-            \"7: Avoid using the '.*' form of import.\",", "-            \"9: Avoid using the '.*' form of import.\",", "-            \"10: Avoid using the '.*' form of import.\",", "+            \"7: Avoid using the '.*' form of import - com.puppycrawl.tools.checkstyle.*.\",", "+            \"9: Avoid using the '.*' form of import - java.io.*.\",", "+            \"10: Avoid using the '.*' form of import - java.lang.*.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58dac4900c5e8df944a22155f4c363dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheckTest.java", "commitBeforeChange": "c998dc8d90485ee5810d81c2ce472c5a43b54a13", "commitAfterChange": "e61c562c8353470bff66a991d9763120ba00b277", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testProcessJavadoc() throws Exception", "signatureAfterChange": "      @Test     public void testProcessJavadoc() throws Exception", "diff": ["-            \"8:45: Unused import - com.puppycrawl.tools.checkstyle.imports.GlobalProperties.\",", "+            \"8:45: Unused import - com.puppycrawl.tools.checkstyle.imports.InputImportBug.\",", "-            \"45:8: Unused import - com.test.TestClass9.\",", "+            \"45:8: Unused import - com.puppycrawl.tools.checkstyle.DefaultLogger.\",", "-                + \"InputImport.java\"), expected);", "+                + \"InputUnusedImportsCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a476b06dcebb6bcff9ed2ed7cb7fcf1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeParameterNameTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testClassDefault()         throws Exception", "signatureAfterChange": "     @Test     public void testClassDefault()         throws Exception", "diff": ["-            \"3:38: Name 't' must match pattern '^[A-Z]$'.\",", "-            \"11:14: Name 'foo' must match pattern '^[A-Z]$'.\",", "-            \"25:24: Name 'foo' must match pattern '^[A-Z]$'.\",", "+            \"5:38: Name 't' must match pattern '^[A-Z]$'.\",", "+            \"13:14: Name 'foo' must match pattern '^[A-Z]$'.\",", "+            \"27:24: Name 'foo' must match pattern '^[A-Z]$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61813b9bba5d77e1e57802a325f11315", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MemberNameCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testNotPrivate() throws Exception", "signatureAfterChange": "      @Test     public void testNotPrivate() throws Exception", "diff": ["-            \"8:16: Name '_public' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            \"9:19: Name '_protected' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            \"10:9: Name '_package' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "+            \"10:16: Name '_public' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "+            \"11:19: Name '_protected' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "+            \"12:9: Name '_package' must match pattern '^[a-z][a-zA-Z0-9]*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "624dae6411520cf12d2fda0f3e46a90f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGroups() throws Exception", "signatureAfterChange": "      @Test     public void testGroups() throws Exception", "diff": ["-            \"3: Wrong order for 'java.awt.Dialog' import.\",", "-            \"11: Wrong order for 'java.io.IOException' import.\",", "-            \"14: Wrong order for 'javax.swing.WindowConstants.*' import.\",", "+            \"5: Wrong order for 'java.awt.Dialog' import.\",", "+            \"13: Wrong order for 'java.io.IOException' import.\",", "+            \"16: Wrong order for 'javax.swing.WindowConstants.*' import.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64e11f0fcdfde4e526ce62897d6e8b08", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "f8a53831f0fa98f317ea7dbc6490b5e91b6cc5d9", "commitAfterChange": "5703b6e33550d6e9706f42e253c2cc7d83a358bf", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "      public void testScopeAnonInnerAnonInner()         throws Exception", "signatureAfterChange": "      public void testScopeAnonInnerAnonInner()         throws Exception", "diff": ["-            filepath + \":26:9: method is missing a Javadoc comment.\",", "+            filepath + \":26:9: Missing a Javadoc comment.\",", "-            filepath + \":39:17: method is missing a Javadoc comment.\",", "+            filepath + \":39:17: Missing a Javadoc comment.\",", "-            filepath + \":53:17: method is missing a Javadoc comment.\",", "+            filepath + \":53:17: Missing a Javadoc comment.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b28e07f35fb76448eefeb3e128388fa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d92ceb81a67bb10b98f5ce305f839ba535a1c6ee", "commitAfterChange": "9aa8268e473071cbe26aa9d3a8631f1902e3fef0", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "      public void testImport()         throws Exception", "signatureAfterChange": "      public void testImport()         throws Exception", "diff": ["-            filepath + \":13: Unused import - java.util.List\",", "+            filepath + \":13: Unused import - java.util.List.\",", "-            filepath + \":14: Unused import - java.util.List\",", "-            filepath + \":15: Import from illegal package - sun.net.ftpclient.FtpClient\",", "+            filepath + \":14: Unused import - java.util.List.\",", "+            filepath + \":15: Import from illegal package - sun.net.ftpclient.FtpClient.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d314741ba39be248548bbb95c20418c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "b29e7a4c49ceff7d1f974a47a47ca519918ff650", "commitAfterChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r     \r     @Test\r     public void testEverythingMixed() throws Exception", "signatureAfterChange": "\r     \r     @Test\r     public void testEverythingMixed() throws Exception", "diff": ["-        checkConfig.addAttribute(\"closingParens\", \"MIXED\");\r", "-        checkConfig.addAttribute(\"elementStyle\", \"MIXED\");\r", "-        checkConfig.addAttribute(\"trailingArrayComma\", \"MIXED\");\r", "+        checkConfig.addAttribute(\"closingParens\", \"ignore\");\r", "+        checkConfig.addAttribute(\"elementStyle\", \"ignore\");\r", "+        checkConfig.addAttribute(\"trailingArrayComma\", \"ignore\");\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "812a37051b40107a3116f50ebf40e958", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/AvoidStarImportTest.java", "commitBeforeChange": "8809d19699c1da9d5992d2e23671255fafd619d5", "commitAfterChange": "96d6745a12127bd547e32137713b33aa9327aeb8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testWithChecker()         throws Exception", "signatureAfterChange": "     public void testWithChecker()         throws Exception", "diff": ["-            \"7: Avoid using the '.*' form of import - com.puppycrawl.tools.checkstyle.*.\",", "-            \"9: Avoid using the '.*' form of import - java.io.*.\",", "-            \"10: Avoid using the '.*' form of import - java.lang.*.\",", "+            \"7: Using the '.*' form of import should be avoided - com.puppycrawl.tools.checkstyle.*.\",", "+            \"9: Using the '.*' form of import should be avoided - java.io.*.\",", "+            \"10: Using the '.*' form of import should be avoided - java.lang.*.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8243a5ae59c6bda43a78249d93d0dadb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "       public void testWhitespace()         throws Exception", "signatureAfterChange": "       public void testWhitespace()         throws Exception", "diff": ["-            filepath + \":58:36: ')' is preceeded by whitespace.\",", "+            filepath + \":58:36: ')' is preceeded with whitespace.\",", "-            filepath + \":74:18: ')' is preceeded by whitespace.\",", "+            filepath + \":74:18: ')' is preceeded with whitespace.\",", "-            filepath + \":88:21: cast needs to be followed by whitespace.\",", "+            filepath + \":88:21: 'cast' is not followed by whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "887f3c47ff40ac507fb79bd11af08fd1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "a1cecb5e0658862f957e60a8d5b2ade13b592101", "commitAfterChange": "659e6ec7aa7251ea0a825f48c1a523431ff09b79", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "      public void testScopeAnonInnerAnonInner()         throws Exception", "signatureAfterChange": "      public void testScopeAnonInnerAnonInner()         throws Exception", "diff": ["-            filepath + \":26: method is missing a Javadoc comment.\",", "+            filepath + \":26:9: method is missing a Javadoc comment.\",", "-            filepath + \":39: method is missing a Javadoc comment.\",", "+            filepath + \":39:17: method is missing a Javadoc comment.\",", "-            filepath + \":53: method is missing a Javadoc comment.\",", "+            filepath + \":53:17: method is missing a Javadoc comment.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b9f04d60eaa25e0f036fdfa457e9515", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "24f73e69dc69add5fb33af0f54af7ad186b285eb", "commitAfterChange": "75da2ef6ac77766baac7016606457dc1f7bbfd7b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testAloneOrSingleLine() throws Exception", "signatureAfterChange": "      @Test     public void testAloneOrSingleLine() throws Exception", "diff": ["-        checkConfig.addAttribute(\"tokens\", \"LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, \"", "-            + \"LITERAL_ELSE, CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, \"", "-            + \"STATIC_INIT, INSTANCE_INIT\");", "+        checkConfig.addAttribute(\"tokens\", \"LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, \"", "+            + \"LITERAL_IF, LITERAL_ELSE, CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, \"", "+            + \"LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d2ff870d8b059e4d8c0536e5a2722e5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceBeforeCheckTest.java", "commitBeforeChange": "35e4a41c1027d5078cbaf0d3988a21c12a2daf7e", "commitAfterChange": "e55435125ea57e96f0bf876dd13e78b0ae02cd52", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "       public void testDotAllowLineBreaks() throws Exception", "signatureAfterChange": "       public void testDotAllowLineBreaks() throws Exception", "diff": ["-            \"5:12: '.' is preceeded with whitespace.\",", "-            \"129:17: '.' is preceeded with whitespace.\",", "-            \"136:10: '.' is preceeded with whitespace.\",", "+            \"5:12: '.' is preceded with whitespace.\",", "+            \"129:17: '.' is preceded with whitespace.\",", "+            \"136:10: '.' is preceded with whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e66137c521019ebbb1149625871f8a6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheckTest.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testSpace()         throws Exception", "signatureAfterChange": "      public void testSpace()         throws Exception", "diff": ["-            \"222:14: '(' is not followed by whitespace.\",", "-            \"232:14: '(' is not followed by whitespace.\",", "-            \"232:39: ')' is not preceded with whitespace.\",", "+            \"225:14: '(' is not followed by whitespace.\",", "+            \"235:14: '(' is not followed by whitespace.\",", "+            \"235:39: ')' is not preceded with whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "975064a7083bab64a9e2592831d1ad89", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheckTest.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testCtorToken()             throws Exception", "signatureAfterChange": "      public void testCtorToken()             throws Exception", "diff": ["-            \"22:26: Parameter s should be final.\",", "-            \"37:26: Parameter i should be final.\",", "-            \"42:26: Parameter s should be final.\",", "+            \"23:26: Parameter s should be final.\",", "+            \"38:26: Parameter i should be final.\",", "+            \"43:26: Parameter s should be final.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99c0606eb02f2b0a6e74c89c77e42def", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testSeparated() throws Exception", "signatureAfterChange": "      @Test     public void testSeparated() throws Exception", "diff": ["-            \"7: 'javax.swing.JComponent' should be separated from previous imports.\",", "-            \"9: 'java.io.File' should be separated from previous imports.\",", "-            \"14: Wrong order for 'javax.swing.WindowConstants.*' import.\",", "+            \"9: 'javax.swing.JComponent' should be separated from previous imports.\",", "+            \"11: 'java.io.File' should be separated from previous imports.\",", "+            \"16: Wrong order for 'javax.swing.WindowConstants.*' import.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fb0013bcb4463f7442cb8affac99ac3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "f768a8f8cca599d460e3c2da5369add062b6ead0", "commitAfterChange": "08ea556aed8265d64a5dd93963b1ce4587cc48b4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testIgnoreHashCodeMethod() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreHashCodeMethod() throws Exception", "diff": ["-            \"41:26: '3' is a magic number.\",", "-            \"42:32: '1.5' is a magic number.\",", "+            \"41:26: '3_000' is a magic number.\",", "+            \"42:32: '1.5_0' is a magic number.\",", "-            \"63:30: '010L' is a magic number.\",", "+            \"63:30: '0_10L' is a magic number.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fefbbccf401e991c4ad16152c77e75b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/AvoidStarImportTest.java", "commitBeforeChange": "81dab0c14131c72066f28cf8dbbddd1db3ea3a38", "commitAfterChange": "eb7b7bfd3e63a926c3f3b2801d519caa0e1fffc3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testWithChecker()         throws Exception", "signatureAfterChange": "      public void testWithChecker()         throws Exception", "diff": ["-            \"7:1: Avoid using the '.*' form of import.\",", "-            \"9:1: Avoid using the '.*' form of import.\",", "-            \"10:1: Avoid using the '.*' form of import.\",", "+            \"7: Avoid using the '.*' form of import.\",", "+            \"9: Avoid using the '.*' form of import.\",", "+            \"10: Avoid using the '.*' form of import.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7062f3032eea1ea80238e8d16a472a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "2c65534095e444b03bc2665b1fcd9ae3e60a01fc", "commitAfterChange": "2b53548ad0b56562256c824d4a6b5465abc53652", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testLineBreakAfter() throws Exception", "signatureAfterChange": "      @Test     public void testLineBreakAfter() throws Exception", "diff": ["-            \"53:5: '{' should be on the previous line.\",", "-            \"54:19: '{' should have line break after.\",", "-            \"64:1: '{' should be on the previous line.\",", "+            \"54:5: '{' should be on the previous line.\",", "+            \"56:27: '{' should have line break after.\",", "+            \"66:1: '{' should be on the previous line.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a942cc6bad8d6689f056333fa9a738d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/whitespace/TypecastParenPadCheckTest.java", "commitBeforeChange": "35e4a41c1027d5078cbaf0d3988a21c12a2daf7e", "commitAfterChange": "e55435125ea57e96f0bf876dd13e78b0ae02cd52", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testSpace()         throws Exception", "signatureAfterChange": "      public void testSpace()         throws Exception", "diff": ["-            \"87:27: ')' is not preceeded with whitespace.\",", "+            \"87:27: ')' is not preceded with whitespace.\",", "-            \"88:20: ')' is not preceeded with whitespace.\",", "+            \"88:20: ')' is not preceded with whitespace.\",", "-            \"90:20: ')' is not preceeded with whitespace.\",", "+            \"90:20: ')' is not preceded with whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad3ced4377c4869089d08465204a73e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheckTest.java", "commitBeforeChange": "8787efc822fd27a4a3f3dd795c34525ccc08d297", "commitAfterChange": "2fe9f501d86b6e70aa64f4474ae0863bb0b928d5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testFieldsOnly() throws Exception", "signatureAfterChange": "      @Test     public void testFieldsOnly() throws Exception", "diff": ["-            \"6:9: Reference to instance variable 'i' needs \\\"this.\\\".\",", "-            \"26:9: Reference to instance variable 'i' needs \\\"this.\\\".\",", "-            \"51:9: Reference to instance variable 'z' needs \\\"this.\\\".\",", "+            \"8:9: Reference to instance variable 'i' needs \\\"this.\\\".\",", "+            \"28:9: Reference to instance variable 'i' needs \\\"this.\\\".\",", "+            \"53:9: Reference to instance variable 'z' needs \\\"this.\\\".\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5192d2c200c681c56c6109037514036", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheckTest.java", "commitBeforeChange": "10f348bbfd91fd8c2bd7776aff3c03f549380a44", "commitAfterChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testMethodsOnly() throws Exception", "signatureAfterChange": "      @Test     public void testMethodsOnly() throws Exception", "diff": ["-            \"17:9: \" + getCheckMessage(MSG_METHOD, \"method1\", \"\\\"this\\\"\"),", "-            \"115:9: \" + getCheckMessage(MSG_METHOD, \"instanceMethod\", \"\\\"this\\\"\"),", "-            \"121:13: \" + getCheckMessage(MSG_METHOD, \"instanceMethod\", \"\\\"this\\\"\"),", "+            \"17:9: \" + getCheckMessage(MSG_METHOD, \"method1\", \"\"),", "+            \"115:9: \" + getCheckMessage(MSG_METHOD, \"instanceMethod\", \"\"),", "+            \"121:13: \" + getCheckMessage(MSG_METHOD, \"instanceMethod\", \"Issue2240.\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba1a970cd4670369efd724cd69e6a9f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheckTest.java", "commitBeforeChange": "ae3860dcdddada15b09dba876a5b8a06652656c2", "commitAfterChange": "6a8584adbd9ad33ae2b89c0deb6481f62dd14257", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testStrictJavadoc() throws Exception", "signatureAfterChange": "      @Test     public void testStrictJavadoc() throws Exception", "diff": ["-            \"44:9: \" + getCheckMessage(MSG_KEY, \"mLen\"),", "-            \"45:19: \" + getCheckMessage(MSG_KEY, \"mDeer\"),", "-            \"46:16: \" + getCheckMessage(MSG_KEY, \"aFreddo\"),", "+            \"32:9: \" + getCheckMessage(MSG_KEY, \"mLen\"),", "+            \"33:19: \" + getCheckMessage(MSG_KEY, \"mDeer\"),", "+            \"34:16: \" + getCheckMessage(MSG_KEY, \"aFreddo\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfdb51797f3741b1e5e537eccd4fac2c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "2d315277b6e1c152fd78da9fb91f214c43b31996", "commitAfterChange": "4d8f0c80663bb4015475669e6b85c6f3e1a1aec7", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void testModifierChecks()         throws Exception", "signatureAfterChange": "      public void testModifierChecks()         throws Exception", "diff": ["-            filepath + \":14:1: 'final' modifier out of order with the JLS suggestions.\",", "-            filepath + \":18:5: 'private' modifier out of order with the JLS suggestions.\",", "-            filepath + \":24:5: 'private' modifier out of order with the JLS suggestions.\",", "+            filepath + \":14:10: 'final' modifier out of order with the JLS suggestions.\",", "+            filepath + \":18:12: 'private' modifier out of order with the JLS suggestions.\",", "+            filepath + \":24:14: 'private' modifier out of order with the JLS suggestions.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d75bb3e3f3e17d1cd3774e2ecc68fe23", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "4d0adc9deed7f3df296f8016941414ec1600955b", "commitAfterChange": "1edf43ab329e96db26a3ed3a4f4a1abdaa4b1a3a", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "      public void testLCurlyMethodNL()         throws Exception", "signatureAfterChange": "      public void testLCurlyMethodNL()         throws Exception", "diff": ["-            filepath + \":14: '{' should be on a new line.\",", "-            filepath + \":21: '{' should be on a new line.\",", "-            filepath + \":34: '{' should be on a new line.\",", "+            filepath + \":14:39: '{' should be on a new line.\",", "+            filepath + \":21:20: '{' should be on a new line.\",", "+            filepath + \":34:31: '{' should be on a new line.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efde34cd601c8f02c9b336a53bfcd7a9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheckTest.java", "commitBeforeChange": "e76a439c2b0250808ce2723c43cd872a1761e294", "commitAfterChange": "96d3aaea19657ac233d9a57b46a52bc0b35eda95", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIt() throws Exception", "signatureAfterChange": "     @Test     public void testIt() throws Exception", "diff": ["-                + \"com.puppycrawl.tools.checkstyle.InputModifier,\"", "+                + \"com.puppycrawl.tools.checkstyle.checks.coding.InputModifier,\"", "-            \"38:21: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.InputModifier\"),", "+            \"38:21: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.checks.coding.InputModifier\"),", "-        verify(checkConfig, getPath(\"InputSemantic.java\"), expected);", "+        verify(checkConfig, getPath(\"checks/coding/InputSemantic.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffd4cc515f871e628e4f0c80b4d955e8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/RedundantThrowsCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAllowUnchecked() throws Exception", "signatureAfterChange": "      @Test     public void testAllowUnchecked() throws Exception", "diff": ["-            \"7:37: Redundant throws: 'java.io.FileNotFoundException' is subclass of 'java.io.IOException'.\",", "-            \"19:29: Redundant throws: 'java.io.IOException' listed more then one time.\",", "+            \"9:37: Redundant throws: 'java.io.FileNotFoundException' is subclass of 'java.io.IOException'.\",", "+            \"21:29: Redundant throws: 'java.io.IOException' listed more then one time.\",", "-            \"39:27: Redundant throws: 'NullPointerException' is subclass of 'RuntimeException'.\",", "+            \"41:27: Redundant throws: 'NullPointerException' is subclass of 'RuntimeException'.\","]}]}