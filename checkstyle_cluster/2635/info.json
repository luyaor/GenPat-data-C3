{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b792b777c6231deede6fa978ecc684a3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49552682e36474adc60828808339aa99", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private static int getLine(ParseTree aTree)", "signatureAfterChange": "     private static int getLine(ParseTree tree)", "diff": ["-    private static int getLine(ParseTree aTree)", "+    private static int getLine(ParseTree tree)", "-        if (aTree instanceof TerminalNode) {", "-            return ((TerminalNode) aTree).getSymbol().getLine() - 1;", "+        if (tree instanceof TerminalNode) {", "+            return ((TerminalNode) tree).getSymbol().getLine() - 1;", "-            final ParserRuleContext rule = (ParserRuleContext) aTree;", "+            final ParserRuleContext rule = (ParserRuleContext) tree;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5593e5c59173ba214732fc5e85c3a3b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private static int getColumn(ParseTree aTree)", "signatureAfterChange": "     private static int getColumn(ParseTree tree)", "diff": ["-    private static int getColumn(ParseTree aTree)", "+    private static int getColumn(ParseTree tree)", "-        if (aTree instanceof TerminalNode) {", "-            return ((TerminalNode) aTree).getSymbol().getCharPositionInLine();", "+        if (tree instanceof TerminalNode) {", "+            return ((TerminalNode) tree).getSymbol().getCharPositionInLine();", "-            final ParserRuleContext rule = (ParserRuleContext) aTree;", "+            final ParserRuleContext rule = (ParserRuleContext) tree;"]}]}