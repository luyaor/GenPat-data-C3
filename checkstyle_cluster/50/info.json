{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "709a2cc6348a1d8f70c68adb95a73f8c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60fbe6b88f0c106b2e80148b573955a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheckTest.java", "commitBeforeChange": "e3e0c92185f2517de79f58f25be166e636fbd1f2", "commitAfterChange": "47cfb3621da4ea9f9692c79ae284f7433a2e9bda", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testRegexpHeader() throws Exception", "signatureAfterChange": "      @Test     public void testNotMatch() throws Exception", "diff": ["-    @Test", "-    public void testRegexpHeader() throws Exception {", "-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(RegexpHeaderCheck.class);", "-        checkConfig.addAttribute(\"headerFile\", getPath(\"regexp.header\"));", "-        final String[] expected = {", "-            \"3: \" + getCheckMessage(MSG_MISMATCH, \"// Created: 2002\"),", "-        };", "-        verify(checkConfig, getPath(\"InputScopeAnonInner.java\"), expected);", "-    }", "+", "+    @Test", "+    public void testNotMatch() throws Exception {", "+        final DefaultConfiguration checkConfig =", "+                createCheckConfig(HeaderCheck.class);", "+        checkConfig.addAttribute(\"headerFile\", getPath(\"configs/java.header\"));", "+        checkConfig.addAttribute(\"ignoreLines\", \"\");", "+        final String[] expected = {", "+            \"2: \" + getCheckMessage(MSG_MISMATCH,", "+                    \"// checkstyle: Checks Java source code for adherence to a set of rules.\"),", "+        };", "+        verify(checkConfig, getPath(\"configs/java2.header\"), expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d9c261cd173a8a4087933730ae98b9a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/JavadocTypeCheckTest.java", "commitBeforeChange": "a0054eede02fe6109973ab4b94f3657d1ed187a3", "commitAfterChange": "730ade67d5f3f286c1004ce9a772fd4bc3bc9307", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void testAts() throws Exception", "signatureAfterChange": "          public void testAuthorRegularEx()         throws Exception", "diff": ["-    public void testAts() throws Exception", "+    ", "+    public void testAuthorRegularEx()", "+        checkConfig.addAttribute(\"authorFormat\", \"0*\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eee91e269149268ef88f91e8b88817aa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheckTest.java", "commitBeforeChange": "9aa9d751071e0597b268235f2dff4fc6373b2d5f", "commitAfterChange": "67da361a9a70df8baa4264b61c3ad5ea77e57dcc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void test() throws Exception", "signatureAfterChange": "      public void testIllegalClassNames() throws Exception", "diff": ["-    public void test() throws Exception", "+", "+    public void testIllegalClassNames() throws Exception", "+    {", "+        DefaultConfiguration checkConfig = createCheckConfig(IllegalCatchCheck.class);", "+        checkConfig.addAttribute(\"illegalClassNames\", ", "+                                 \"java.lang.Error, java.lang.Exception, java.lang.Throwable\");", "+", "+        String[] expected = {", "+            \"7:11: Catching 'Exception' is not allowed.\",", "+            \"8:11: Catching 'Throwable' is not allowed.\",", "+            \"15:11: Catching 'java.lang.Exception' is not allowed.\",", "+            \"16:11: Catching 'java.lang.Throwable' is not allowed.\",", "+        };", "+", "+        verify(checkConfig, getPath(\"coding\" + File.separator + \"InputIllegalCatchCheck.java\"), expected);", "+    }"]}]}