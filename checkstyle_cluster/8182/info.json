{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30add00b8ff9e79ced552e01ba45766c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6045e83ab3722c9044433f9d3bcbe304", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setAllowedAbbreviations(String aAllowedAbbreviations)", "signatureAfterChange": "     public void setAllowedAbbreviations(String allowedAbbreviations)", "diff": ["-    public void setAllowedAbbreviations(String aAllowedAbbreviations)", "+    public void setAllowedAbbreviations(String allowedAbbreviations)", "-        if (aAllowedAbbreviations != null) {", "-            mAllowedAbbreviations = new HashSet<String>(", "-                    Arrays.asList(aAllowedAbbreviations.split(\",\")));", "+        if (allowedAbbreviations != null) {", "+            this.allowedAbbreviations = new HashSet<String>(", "+                    Arrays.asList(allowedAbbreviations.split(\",\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c71864651cf292d259bd0b6102750e69", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/RegexpCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setDuplicateLimit(int aDuplicateLimit)", "signatureAfterChange": "     public void setDuplicateLimit(int duplicateLimit)", "diff": ["-    public void setDuplicateLimit(int aDuplicateLimit)", "+    public void setDuplicateLimit(int duplicateLimit)", "-        mDuplicateLimit = aDuplicateLimit;", "-        mCheckForDuplicates = (mDuplicateLimit > DEFAULT_DUPLICATE_LIMIT);", "+        this.duplicateLimit = duplicateLimit;", "+        checkForDuplicates = (duplicateLimit > DEFAULT_DUPLICATE_LIMIT);"]}]}