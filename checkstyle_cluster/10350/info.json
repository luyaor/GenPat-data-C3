{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a99a3f5d5b2fd2abb3b56c9f2f539081", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "695429c578e26d52824126a84d228c3f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilterTest.java", "commitBeforeChange": "346387c717048391485fb28f877531aab1095de1", "commitAfterChange": "f020066f8bdfb378df36904af3df8b5bc48858fd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test(expected = ConversionException.class)     public void testInvalidCheckFormat() throws Exception", "signatureAfterChange": "      @Test     public void testInvalidCheckFormat() throws Exception", "diff": ["-    @Test(expected = ConversionException.class)", "+    @Test", "-        verifySuppressed(filterConfig, suppressed);", "+", "+        try {", "+            verifySuppressed(filterConfig, suppressed);", "+        }", "+        catch (CheckstyleException ex) {", "+            final ConversionException cause = (ConversionException) ex.getCause();", "+            assertEquals(\"unable to parse expanded comment e[l\",", "+                    cause.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d8738d83413e26bf784837e36dadf8d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilterTest.java", "commitBeforeChange": "346387c717048391485fb28f877531aab1095de1", "commitAfterChange": "f020066f8bdfb378df36904af3df8b5bc48858fd", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test(expected = ConversionException.class)     public void testInvalidMessageFormat() throws Exception", "signatureAfterChange": "      @Test     public void testInvalidMessageFormat() throws Exception", "diff": ["-    @Test(expected = ConversionException.class)", "+    @Test", "-        verifySuppressed(filterConfig, suppressed);", "+", "+        try {", "+            verifySuppressed(filterConfig, suppressed);", "+        }", "+        catch (CheckstyleException ex) {", "+            final ConversionException cause = (ConversionException) ex.getCause();", "+            assertEquals(\"unable to parse expanded comment e[l\",", "+                    cause.getMessage());", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4d49c08ff48f4cc7893683b35b31399", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilterTest.java", "commitBeforeChange": "346387c717048391485fb28f877531aab1095de1", "commitAfterChange": "f020066f8bdfb378df36904af3df8b5bc48858fd", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test(expected = ConversionException.class)     public void testInvalidInfluenceFormat() throws Exception", "signatureAfterChange": "      @Test     public void testInvalidInfluenceFormat() throws Exception", "diff": ["-    @Test(expected = ConversionException.class)", "+    @Test", "-        verifySuppressed(filterConfig, suppressed);", "+", "+        try {", "+            verifySuppressed(filterConfig, suppressed);", "+        }", "+        catch (CheckstyleException ex) {", "+            final ConversionException cause = (ConversionException) ex.getCause();", "+            assertEquals(\"unable to parse influence\"", "+                            + \" from 'SUPPRESS CHECKSTYLE MemberNameCheck' using a\",", "+                    cause.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4ea3d4fa5e8ae548c52072d90d4bd9b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilterTest.java", "commitBeforeChange": "346387c717048391485fb28f877531aab1095de1", "commitAfterChange": "f020066f8bdfb378df36904af3df8b5bc48858fd", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Test(expected = ConversionException.class)     public void testInvalidCheckFormat() throws Exception", "signatureAfterChange": "      @Test     public void testInvalidCheckFormat() throws Exception", "diff": ["-    @Test(expected = ConversionException.class)", "+    @Test", "-        verifySuppressed(filterConfig, suppressed);", "+", "+        try {", "+            verifySuppressed(filterConfig, suppressed);", "+        }", "+        catch (CheckstyleException ex) {", "+            final ConversionException cause = (ConversionException) ex.getCause();", "+            assertEquals(\"unable to parse expanded comment a[l\",", "+                    cause.getMessage());", "+        }"]}]}