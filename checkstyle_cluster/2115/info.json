{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4b9b70754557d475acc1aac8217f1ad", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "004eaf43f4316a75842a53952c4a1044", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "03f8352479400cd2c80511bfe0242932a4f00f11", "commitAfterChange": "7e570084e62eda58f3c4fa7e75e26a1a41d255cf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void notifyBegin(String[] aLines, String aFilename)", "signatureAfterChange": "     private void notifyBegin(String[] aLines, String aFilename)", "diff": ["-            check.setFilename(aFilename);", "+            check.setFilename(aFilename);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "690869463d3c9f13a69c927614047fca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/InputBraces.java", "commitBeforeChange": "2debda611fe487021711aa4acce56651799a778f", "commitAfterChange": "cb475adb81d2c3242b38ea5cf44fc7c9b9fa09e3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "          void whitespaceAfterSemi()", "signatureAfterChange": "          void whitespaceAfterSemi()", "diff": ["+        //reject", "+        int i = 1;int j = 2;", "+", "-        //reject", "-        int i = 1;int j = 2;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c18f86514658daacba5287e45f8a70ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java", "commitBeforeChange": "fe07d99333284482aad4729ffd17bb94030a3ab4", "commitAfterChange": "3c0c72f96477afb542ee37b3336f4b7b7613ff29", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIllegalAbstractClassName() throws Exception", "signatureAfterChange": "     @Test     public void testIllegalAbstractClassName() throws Exception", "diff": ["-    // abstract --> ^Abstract.*$|^.*Factory$", "+        checkConfig.addAttribute(\"checkName\", \"true\");", "+        checkConfig.addAttribute(\"checkModifier\", \"false\");", "+", "-        checkConfig.addAttribute(\"checkName\", \"true\");", "-        checkConfig.addAttribute(\"checkModifier\", \"false\");", "+"]}]}