{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df0e19be5a0c9df1c8cad35d00baaf8f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5968e2b0d4d768bdc69ce911f190c3cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java", "commitBeforeChange": "59d1b6ad1ff2efe155bc1006a4f7b7b5c88421f8", "commitAfterChange": "9f2bf96b2001eb2e3886950a41e076c8a01d57d8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private Object createObject(String className)         throws CheckstyleException", "signatureAfterChange": "     private Object createObject(String className)         throws CheckstyleException", "diff": ["-            final Class<?> clazz = Class.forName(className, true,", "-                    moduleClassLoader);", "+            final Class<?> clazz = Class.forName(className, true, moduleClassLoader);", "-        catch (final ClassNotFoundException e) {", "-            throw new CheckstyleException(", "-                \"Unable to find class for \" + className, e);", "-        }", "-        catch (final InstantiationException e) {", "-            ///CLOVER:OFF", "-            throw new CheckstyleException(", "-                \"Unable to instantiate \" + className, e);", "-            ///CLOVER:ON", "-        }", "-        catch (final IllegalAccessException e) {", "-            ///CLOVER:OFF", "-            throw new CheckstyleException(", "-                \"Unable to instantiate \" + className, e);", "-            ///CLOVER:ON", "+        catch (final ClassNotFoundException | InstantiationException | IllegalAccessException e) {", "+            throw new CheckstyleException(\"Unable to find class for \" + className, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee6f3029650f79a00204b3970977d5ac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "dcd7085ce2412a00ca97cd4fbaf7e8bf4fd4cfbe", "commitAfterChange": "71c16c55c33b368bf373c60a6daafdd69b0b1abc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public static Configuration loadConfiguration(InputSource configSource,         PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(InputSource configSource,         PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "diff": ["-        catch (final ParserConfigurationException e) {", "-            throw new CheckstyleException(", "-                \"unable to parse configuration stream\", e);", "-        }", "-        catch (final SAXException e) {", "-            throw new CheckstyleException(\"unable to parse configuration stream\"", "-                    + \" - \" + e.getMessage(), e);", "-        }", "-        catch (final IOException e) {", "-            throw new CheckstyleException(\"unable to read from stream\", e);", "+        catch (final ParserConfigurationException | IOException | SAXException e) {", "+            throw new CheckstyleException(\"unable to parse configuration stream\", e);"]}]}