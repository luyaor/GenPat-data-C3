{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "caf741f4ac44fd9e5415669e23f267c2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2197fb475557f44c5f6bd5a15d4bd726", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private int compare(String aCurrentImport, String aPreviousImport)", "signatureAfterChange": "     private int compare(String currentImport, String previousImport)", "diff": ["-    private int compare(String aCurrentImport, String aPreviousImport)", "+    private int compare(String currentImport, String previousImport)", "-        final int currentImportDomainCount = countDomains(aCurrentImport);", "-        final int previousImportDomainCount = countDomains(aPreviousImport);", "+        final int currentImportDomainCount = countDomains(currentImport);", "+        final int previousImportDomainCount = countDomains(previousImport);", "-        while (aCurrentImport.lastIndexOf(\".\") != indexOfPreviousDotCurrent - 1", "-                && aPreviousImport.lastIndexOf(\".\") != indexOfPreviousDotPrevious - 1)", "+        while (currentImport.lastIndexOf(\".\") != indexOfPreviousDotCurrent - 1", "+                && previousImport.lastIndexOf(\".\") != indexOfPreviousDotPrevious - 1)", "-            indexOfNextDotCurrent = aCurrentImport.indexOf(\".\", indexOfPreviousDotCurrent + 1);", "-            indexOfNextDotPrevious = aPreviousImport.indexOf(\".\", indexOfPreviousDotPrevious + 1);", "-            tokenCurrent = aCurrentImport.substring(indexOfPreviousDotCurrent,", "+            indexOfNextDotCurrent = currentImport.indexOf(\".\", indexOfPreviousDotCurrent + 1);", "+            indexOfNextDotPrevious = previousImport.indexOf(\".\", indexOfPreviousDotPrevious + 1);", "+            tokenCurrent = currentImport.substring(indexOfPreviousDotCurrent,", "-            tokenPrevious = aPreviousImport.substring(indexOfPreviousDotPrevious,", "+            tokenPrevious = previousImport.substring(indexOfPreviousDotPrevious,", "-        if (result == 0 && (aCurrentImport.lastIndexOf(\".\") == indexOfPreviousDotCurrent - 1", "-                || aPreviousImport.lastIndexOf(\".\") == indexOfPreviousDotPrevious - 1))", "+        if (result == 0 && (currentImport.lastIndexOf(\".\") == indexOfPreviousDotCurrent - 1", "+                || previousImport.lastIndexOf(\".\") == indexOfPreviousDotPrevious - 1))", "-                getClassName(indexOfNextDotPrevious, aPreviousImport);", "+                getClassName(indexOfNextDotPrevious, previousImport);", "-                getClassName(indexOfNextDotPrevious, aPreviousImport);", "+                getClassName(indexOfNextDotPrevious, previousImport);", "-                        aCurrentImport).compareToIgnoreCase(getClassName(indexOfNextDotPrevious,", "-                                aPreviousImport));", "+                        currentImport).compareToIgnoreCase(getClassName(indexOfNextDotPrevious,", "+                                previousImport));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d277cbc0f2c1ab401037600bd11964c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "3f853ae96a24f2079901c3d47c6e6a7fa0604654", "commitAfterChange": "2ad4b0830d3892f718134e198a0bcbe9fbf5d8c7", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private int compare(String currentImport, String previousImport)", "signatureAfterChange": "     private static int compareImports(String import1, String import2)", "diff": ["-    private int compare(String currentImport, String previousImport)", "+    private static int compareImports(String import1, String import2)", "-        int indexOfPreviousDotCurrent = 0;", "-        int indexOfNextDotCurrent = 0;", "-        String tokenCurrent = \"\";", "-        int indexOfPreviousDotPrevious = 0;", "-        int indexOfNextDotPrevious = 0;", "-        String tokenPrevious = \"\";", "-        final int currentImportDomainCount = countDomains(currentImport);", "-        final int previousImportDomainCount = countDomains(previousImport);", "-", "-        while (currentImport.lastIndexOf(\".\") != indexOfPreviousDotCurrent - 1", "-                && previousImport.lastIndexOf(\".\") != indexOfPreviousDotPrevious - 1)", "-        {", "-            indexOfNextDotCurrent = currentImport.indexOf(\".\", indexOfPreviousDotCurrent + 1);", "-            indexOfNextDotPrevious = previousImport.indexOf(\".\", indexOfPreviousDotPrevious + 1);", "-            tokenCurrent = currentImport.substring(indexOfPreviousDotCurrent,", "-                    indexOfNextDotCurrent);", "-            tokenPrevious = previousImport.substring(indexOfPreviousDotPrevious,", "-                    indexOfNextDotPrevious);", "-            result = tokenCurrent.compareToIgnoreCase(tokenPrevious);", "+        final String[] import1Tokens = import1.split(\"\\\\.\");", "+        final String[] import2Tokens = import2.split(\"\\\\.\");", "+        for (int i = 0; i < import1Tokens.length; i++) {", "+            if (i == import2Tokens.length) {", "+                break;", "+            }", "+            final String import1Token = import1Tokens[i];", "+            final String import2Token = import2Tokens[i];", "+            result = import1Token.compareToIgnoreCase(import2Token);", "-                return result;", "-            }", "-            indexOfPreviousDotCurrent = indexOfNextDotCurrent + 1;", "-            indexOfPreviousDotPrevious = indexOfNextDotPrevious + 1;", "-        }", "-", "-        if (result == 0 && (currentImport.lastIndexOf(\".\") == indexOfPreviousDotCurrent - 1", "-                || previousImport.lastIndexOf(\".\") == indexOfPreviousDotPrevious - 1))", "-        {", "-            if (currentImportDomainCount != previousImportDomainCount) {", "-                getClassName(indexOfNextDotPrevious, previousImport);", "-                return currentImportDomainCount - previousImportDomainCount;", "-            }", "-            else {", "-                getClassName(indexOfNextDotPrevious, previousImport);", "-                return getClassName(indexOfNextDotCurrent,", "-                        currentImport).compareToIgnoreCase(getClassName(indexOfNextDotPrevious,", "-                                previousImport));", "+                break;", "-        return 0;", "+        return result;"]}]}