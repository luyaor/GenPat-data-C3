{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a526c51632e3a999c7729d28677d8349", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2be3326b9b6988c5258645d7eb8a8c90", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ArrayTrailingCommaCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault()         throws Exception", "signatureAfterChange": "     @Test     public void testDefault()         throws Exception", "diff": ["-            \"17: Array should contain trailing comma.\",", "-            \"34: Array should contain trailing comma.\",", "-            \"37: Array should contain trailing comma.\",", "+            \"17: \" + getCheckMessage(MSG_KEY),", "+            \"34: \" + getCheckMessage(MSG_KEY),", "+            \"37: \" + getCheckMessage(MSG_KEY),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60931c914c2a9a7edce758af5c7ff85a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheckTest.java", "commitBeforeChange": "27149f3504a2f350b74f456a9bffbae76a460060", "commitAfterChange": "5ede09997c283b4c418f0f540848e006be04fa87", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefaults()         throws Exception", "signatureAfterChange": "     @Test     public void testDefaults()         throws Exception", "diff": ["-            \"14: Uncommented main method found.\",", "-            \"23: Uncommented main method found.\",", "-            \"32: Uncommented main method found.\",", "+            \"14: \" + getCheckMessage(MSG_KEY),", "+            \"23: \" + getCheckMessage(MSG_KEY),", "+            \"32: \" + getCheckMessage(MSG_KEY),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a526848311f01b4ff2f73380ce7988d6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/AvoidInlineConditionalsCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIt()         throws Exception", "signatureAfterChange": "     @Test     public void testIt()         throws Exception", "diff": ["-            \"97:29: Avoid inline conditionals.\",", "-            \"98:20: Avoid inline conditionals.\",", "-            \"150:34: Avoid inline conditionals.\",", "+            \"97:29: \" + getCheckMessage(MSG_KEY),", "+            \"98:20: \" + getCheckMessage(MSG_KEY),", "+            \"150:34: \" + getCheckMessage(MSG_KEY),"]}]}