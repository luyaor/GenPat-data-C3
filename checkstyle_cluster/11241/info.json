{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e6a0ea3db5896d1238b6fbcf12a4f989", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03f325314f2e1d35655f6970c8f72869", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "4945b82e6d101325b5eff4d38d3855c08aa9cacd", "commitAfterChange": "1aa21343992de65460febdeda528f25a652972d2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     void walk(DetailAST aAST, FileContents aContents)", "signatureAfterChange": "     void walk(DetailAST aAST, FileContents aContents)", "diff": ["-        aAST.setParent(null);", "-        process(aAST);", "+", "+         // empty files are not flagged by javac, will yield aAST == null", "+        if (aAST != null) {", "+            aAST.setParent(null);", "+            process(aAST);", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dda8028806e2112b195b619a214e1f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/CovariantEqualsCheck.java", "commitBeforeChange": "a03dc8c1c9b1a7308be5e92324efab3413f6a771", "commitAfterChange": "d91d824ac797f1901858507d1b7b36b08c499569", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        DetailAST child = (DetailAST) objBlock.getFirstChild();", "-        while (child != null) {", "-            if (child.getType() == TokenTypes.METHOD_DEF) {", "-                if (isEqualsMethod(child)) {", "-                    if (hasObjectParameter(child)) {", "-                        mHasEqualsObject = true;", "-                    }", "-                    else {", "-                        mEqualsMethods.add(child);", "+        if (objBlock != null) {", "+            DetailAST child = (DetailAST) objBlock.getFirstChild();", "+            while (child != null) {", "+                if (child.getType() == TokenTypes.METHOD_DEF) {", "+                    if (isEqualsMethod(child)) {", "+                        if (hasObjectParameter(child)) {", "+                            mHasEqualsObject = true;", "+                        }", "+                        else {", "+                            mEqualsMethods.add(child);", "+                        }", "+                child = (DetailAST) child.getNextSibling();", "-            child = (DetailAST) child.getNextSibling();", "-        }", "-", "-        // report equals method definitions", "-        if (!mHasEqualsObject) {", "-            final Iterator it = mEqualsMethods.iterator();", "-            while (it.hasNext()) {", "-                final DetailAST equalsAST = (DetailAST) it.next();", "-                final DetailAST nameNode =", "-                    equalsAST.findFirstToken(TokenTypes.IDENT);", "-                log(", "-                    nameNode.getLineNo(),", "-                    nameNode.getColumnNo(),", "-                    \"covariant.equals\");", "+    ", "+            // report equals method definitions", "+            if (!mHasEqualsObject) {", "+                final Iterator it = mEqualsMethods.iterator();", "+                while (it.hasNext()) {", "+                    final DetailAST equalsAST = (DetailAST) it.next();", "+                    final DetailAST nameNode =", "+                        equalsAST.findFirstToken(TokenTypes.IDENT);", "+                    log(", "+                        nameNode.getLineNo(),", "+                        nameNode.getColumnNo(),", "+                        \"covariant.equals\");", "+                }"]}]}