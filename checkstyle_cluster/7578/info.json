{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c26ce7387c5e0203fe5735cda536fc7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b834b6c3356d9ed576fbeff17db1196", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "c1b12397d2adadaf4eeb85903465eb2872431cf1", "commitAfterChange": "d1f564190c0e9b57d7534b1a8e2b9d7c35d439e2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public ExpressionHandler getHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "signatureAfterChange": "     public ExpressionHandler getHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "diff": ["-            System.out.println(\"couldn't instantiate constructor for \"", "-                + aAst);", "-            e.printStackTrace();", "+            throw new RuntimeException(\"couldn't instantiate constructor for \"", "+                                       + aAst, e);", "-            System.out.println(\"couldn't access constructor for \" + aAst);", "-            e.printStackTrace();", "+            throw new RuntimeException(\"couldn't access constructor for \"", "+                                       + aAst,", "+                                       e);", "-            System.out.println(\"couldn't instantiate constructor for \"", "-                + aAst);", "-            e.printStackTrace();", "+            throw new RuntimeException(\"couldn't instantiate constructor for \"", "+                                       + aAst, e);", "-            System.err.println(\"no handler for type \" + type);", "+            throw new RuntimeException(\"no handler for type \" + type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f8338ee3afcbe08029ce9b16ef8c05a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "a07cae0aca9f9072256b3a5fd05779e8d69b9748", "commitAfterChange": "8f19f1d70630f210f33ebd51d42d04ca9727ff36", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public AbstractExpressionHandler getHandler(IndentationCheck indentCheck,         DetailAST ast, AbstractExpressionHandler parent)", "signatureAfterChange": "     public AbstractExpressionHandler getHandler(IndentationCheck indentCheck,         DetailAST ast, AbstractExpressionHandler parent)", "diff": ["-        try {", "-            final Constructor<?> handlerCtor =", "-                typeHandlers.get(ast.getType());", "-            if (handlerCtor != null) {", "-                expHandler = (AbstractExpressionHandler) handlerCtor.newInstance(", "-                        indentCheck, ast, parent);", "-            }", "-        }", "-        catch (final InstantiationException | InvocationTargetException e) {", "-            final String message = \"couldn't instantiate constructor for \" + ast;", "-            LOG.debug(message, e);", "-            throw new RuntimeException(message);", "-        }", "-        catch (final IllegalAccessException e) {", "-            final String message = \"couldn't access constructor for \" + ast;", "-            LOG.debug(message, e);", "-            throw new RuntimeException(message);", "-        }", "-        if (expHandler == null) {", "-            throw new RuntimeException(\"no handler for type \" + ast.getType());", "+        final Constructor<?> handlerCtor =", "+            typeHandlers.get(ast.getType());", "+        if (handlerCtor != null) {", "+            expHandler = (AbstractExpressionHandler) Utils.invokeConstructor(", "+                    handlerCtor, indentCheck, ast, parent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d804f35feaa579472e445f05fe9bddd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "efc6142fb04bfdaf04775ea2e61a3885b7ee3861", "commitAfterChange": "ee518dfe86b29d1fa4d76f0dc0c11fb83afafda1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public ExpressionHandler getHandler(IndentationCheck indentCheck,         DetailAST ast, ExpressionHandler parent)", "signatureAfterChange": "     public ExpressionHandler getHandler(IndentationCheck indentCheck,         DetailAST ast, ExpressionHandler parent)", "diff": ["-        catch (final InstantiationException e) {", "-            LOG.debug(\"couldn't instantiate constructor for \" + ast, e);", "-            throw new RuntimeException(\"couldn't instantiate constructor for \"", "-                                       + ast);", "+        catch (final InstantiationException | InvocationTargetException e) {", "+            final String message = \"couldn't instantiate constructor for \" + ast;", "+            LOG.debug(message, e);", "+            throw new RuntimeException(message);", "-            LOG.debug(\"couldn't access constructor for \" + ast, e);", "-            throw new RuntimeException(\"couldn't access constructor for \"", "-                                       + ast);", "-        }", "-        catch (final InvocationTargetException e) {", "-            LOG.debug(\"couldn't instantiate constructor for \" + ast, e);", "-            throw new RuntimeException(\"couldn't instantiate constructor for \"", "-                                       + ast);", "+            final String message = \"couldn't access constructor for \" + ast;", "+            LOG.debug(message, e);", "+            throw new RuntimeException(message);"]}]}