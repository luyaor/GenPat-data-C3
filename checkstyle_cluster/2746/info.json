{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c7198ba813198e7fcb4ff851d9e8e192", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ea0dc7878403da158ce05cae9ee7942", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java", "commitBeforeChange": "bd55b4598158c500333dae2e2194de08a643a3d5", "commitAfterChange": "f8ba0d727928aaa1275758fa09114155faab0b9e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private boolean hasBlockParent()", "signatureAfterChange": "     private boolean hasBlockParent()", "diff": ["-        return parentType == TokenTypes.LITERAL_IF", "-            || parentType == TokenTypes.LITERAL_FOR", "-            || parentType == TokenTypes.LITERAL_WHILE", "-            || parentType == TokenTypes.LITERAL_DO", "-            || parentType == TokenTypes.LITERAL_ELSE", "-            || parentType == TokenTypes.LITERAL_TRY", "-            || parentType == TokenTypes.LITERAL_CATCH", "-            || parentType == TokenTypes.LITERAL_FINALLY", "-            || parentType == TokenTypes.CTOR_DEF", "-            || parentType == TokenTypes.METHOD_DEF", "-            || parentType == TokenTypes.STATIC_INIT", "-            || parentType == TokenTypes.LITERAL_SYNCHRONIZED;", "+        return Arrays.binarySearch(PARENT_TOKEN_TYPES, parentType) >= 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a0ccc5f070bd60d580237dfbfe834a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean isNumericType(int aType)", "signatureAfterChange": "     private boolean isNumericType(int type)", "diff": ["-    private boolean isNumericType(int aType)", "+    private boolean isNumericType(int type)", "-        return ((aType == TokenTypes.LITERAL_BYTE)", "-                || (aType == TokenTypes.LITERAL_SHORT)", "-                || (aType == TokenTypes.LITERAL_INT)", "-                || (aType == TokenTypes.LITERAL_FLOAT)", "-                || (aType == TokenTypes.LITERAL_LONG)", "-                || (aType == TokenTypes.LITERAL_DOUBLE));", "+        return ((type == TokenTypes.LITERAL_BYTE)", "+                || (type == TokenTypes.LITERAL_SHORT)", "+                || (type == TokenTypes.LITERAL_INT)", "+                || (type == TokenTypes.LITERAL_FLOAT)", "+                || (type == TokenTypes.LITERAL_LONG)", "+                || (type == TokenTypes.LITERAL_DOUBLE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a610743454ff5864b36e49b5ad5d6b3a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "659af86ecdbeb36430ecfff1343cb8d6354f6c57", "commitAfterChange": "6985c4758d4a3252951a6a26b8efdd7b5f0adff4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private boolean isEmptyType(DetailAST ast, int parentType)", "signatureAfterChange": "     private boolean isEmptyType(DetailAST ast, int parentType)", "diff": ["-        if ((type == TokenTypes.RCURLY || type == TokenTypes.LCURLY)", "-                && parentType == TokenTypes.OBJBLOCK) {", "-            final DetailAST typeNode = ast.getParent().getParent();", "-            final int matchType = typeNode.getType();", "-            if (matchType == TokenTypes.CLASS_DEF", "-                    || matchType == TokenTypes.INTERFACE_DEF", "-                    || matchType == TokenTypes.ENUM_DEF", "-                    || matchType == TokenTypes.LITERAL_NEW", "-                    || matchType == TokenTypes.ANNOTATION_DEF) {", "-                return true;", "-            }", "-        }", "-        return false;", "+        return (type == TokenTypes.RCURLY || type == TokenTypes.LCURLY)", "+                && parentType == TokenTypes.OBJBLOCK;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c59ecbea035761ae9978f515760f96a0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private boolean isEmptyLoop(DetailAST aAST, int aParentType)", "signatureAfterChange": "     private boolean isEmptyLoop(DetailAST ast, int parentType)", "diff": ["-    private boolean isEmptyLoop(DetailAST aAST, int aParentType)", "+    private boolean isEmptyLoop(DetailAST ast, int parentType)", "-        return mAllowEmptyLoops", "-            && (isEmptyBlock(aAST, aParentType, TokenTypes.LITERAL_FOR)", "-                    || isEmptyBlock(aAST,", "-                            aParentType, TokenTypes.LITERAL_WHILE)", "-                            || isEmptyBlock(aAST,", "-                                    aParentType, TokenTypes.LITERAL_DO));", "+        return allowEmptyLoops", "+            && (isEmptyBlock(ast, parentType, TokenTypes.LITERAL_FOR)", "+                    || isEmptyBlock(ast,", "+                            parentType, TokenTypes.LITERAL_WHILE)", "+                            || isEmptyBlock(ast,", "+                                    parentType, TokenTypes.LITERAL_DO));"]}]}