{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "11ae623c591492789925027b5d1b9f9e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "526b1fd04c944bf67e1f47d481559afd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      protected void verify(Checker aC,                           String aProcessedFilename,                           String aMessageFileName,                           String[] aExpected)             throws Exception", "signatureAfterChange": "      protected void verify(Checker c,                           String processedFilename,                           String messageFileName,                           String[] expected)             throws Exception", "diff": ["-    protected void verify(Checker aC,", "-                          String aProcessedFilename,", "-                          String aMessageFileName,", "-                          String[] aExpected)", "+    protected void verify(Checker c,", "+                          String processedFilename,", "+                          String messageFileName,", "+                          String[] expected)", "-        verify(aC,", "-                new File[]{new File(aProcessedFilename)},", "-                aMessageFileName, aExpected);", "+        verify(c,", "+                new File[]{new File(processedFilename)},", "+                messageFileName, expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a52c62304e05bdbc45fa28a98394f98d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Utils.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static int lengthExpandedTabs(String aString,                                          int aToIdx,                                          int aTabWidth)", "signatureAfterChange": "     public static int lengthExpandedTabs(String string,                                          int toIdx,                                          int tabWidth)", "diff": ["-    public static int lengthExpandedTabs(String aString,", "-                                         int aToIdx,", "-                                         int aTabWidth)", "+    public static int lengthExpandedTabs(String string,", "+                                         int toIdx,", "+                                         int tabWidth)", "-        for (int idx = 0; idx < aToIdx; idx++) {", "-            if (aString.charAt(idx) == '\\t') {", "-                len = (len / aTabWidth + 1) * aTabWidth;", "+        for (int idx = 0; idx < toIdx; idx++) {", "+            if (string.charAt(idx) == '\\t') {", "+                len = (len / tabWidth + 1) * tabWidth;"]}]}