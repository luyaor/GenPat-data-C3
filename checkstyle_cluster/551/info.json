{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23815b6ef154df7c24b8c44cf518495d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f89f733e59d01aa5587d8a2c930243f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "b95ced53e3c47c9a9db5022767a18e714fc3bebd", "commitAfterChange": "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private Vector getJavadocTags(TextBlock aCmt)", "signatureAfterChange": "     private Vector getJavadocTags(TextBlock aCmt)", "diff": ["-                tags.add(new JavadocTag(aCmt.getStartLineNo() + i,", "-                                        tagName,", "-                                        content.trim()));", "+                int col = tagMatcher.start(1) - 1;", "+                if (i == 0) {", "+                    col += aCmt.getStartColNo();", "+                }", "+                tags.add(new JavadocTag(aCmt.getStartLineNo() + i, col,", "+                                        tagName, content.trim()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a2482fea306765a7d7ee614ae2509fc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "fb1407c204a960223f78ec8429a5581773e5578b", "commitAfterChange": "9324fdcf34b60f100b43dd18f52898c6418893eb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-                    log(variable.getLineNo(),", "-                            MSG_KEY, variable.getText(), dist, mAllowedDistance);", "+                    if (mIgnoreFinal) {", "+                        log(variable.getLineNo(),", "+                                MSG_KEY_EXT, variable.getText(), dist, mAllowedDistance);", "+                    }", "+                    else {", "+                        log(variable.getLineNo(),", "+                                MSG_KEY, variable.getText(), dist, mAllowedDistance);", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "735d6caa21c2bce168a68ff78e730cd5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "d2debccc01255ba1a0fe5779968c73a3e666e998", "commitAfterChange": "a2c4566348d41c5eed923c33670cb48bf30c951b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private List<JavadocTag> getJavadocTags(TextBlock aCmt)", "signatureAfterChange": "     private List<JavadocTag> getJavadocTags(TextBlock aCmt)", "diff": ["+", "-                tags.add(new JavadocTag(aCmt.getStartLineNo() + i, col,", "-                                        tagName, content.trim()));", "+", "+                if (JavadocTagInfo.isValidName(tagName)) {", "+                    tags.add(new JavadocTag(aCmt.getStartLineNo() + i, col,", "+                            tagName, content.trim()));", "+                }", "+                else if (!mAllowUnknownTags) {", "+                    log(aCmt.getStartLineNo() + i, col,", "+                            \"javadoc.unknownTag\", tagName);", "+                }"]}]}