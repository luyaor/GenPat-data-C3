{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f778d5d038270681fc6639910e9be091", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ac90d9ab42719e1ae57ddc3242b0cc5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "commitAfterChange": "6125beffc437f970eae276b4a6542265c6547784", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        if (aAST.getType() == TokenTypes.CLASS_DEF) {", "-            //find and push fields", "-            final DetailAST classMods =", "+        //A more thorough check of enum constant class bodies is", "+        //possible (checking for hidden fields against the enum", "+        //class body in addition to enum constant class bodies)", "+        //but not attempted as it seems out of the scope of this", "+        //check.", "+        if ((aAST.getType() == TokenTypes.CLASS_DEF)", "+            || (aAST.getType() == TokenTypes.ENUM_DEF)", "+            || (aAST.getType() == TokenTypes.ENUM_CONSTANT_DEF))", "+        {", "+            final DetailAST typeMods =", "-            final boolean isStaticInnerClass =", "-                classMods.branchContains(TokenTypes.LITERAL_STATIC);", "-            final FieldFrame frame = new FieldFrame(isStaticInnerClass);", "+            final boolean isStaticInnerType =", "+                (typeMods == null)", "+                    ? false", "+                    : typeMods.branchContains(TokenTypes.LITERAL_STATIC);", "+            final FieldFrame frame = new FieldFrame(isStaticInnerType);", "+", "-            DetailAST child = (DetailAST) objBlock.getFirstChild();", "-            while (child != null) {", "-                if (child.getType() == TokenTypes.VARIABLE_DEF) {", "-                    final String name =", "-                        child.findFirstToken(TokenTypes.IDENT).getText();", "-                    final DetailAST mods =", "-                        child.findFirstToken(TokenTypes.MODIFIERS);", "-                    if (mods.branchContains(TokenTypes.LITERAL_STATIC)) {", "-                        frame.addStaticField(name);", "+            // enum constants may not have bodies", "+            if (objBlock != null) {", "+                DetailAST child = (DetailAST) objBlock.getFirstChild();", "+                while (child != null) {", "+                    if (child.getType() == TokenTypes.VARIABLE_DEF) {", "+                        final String name =", "+                            child.findFirstToken(TokenTypes.IDENT).getText();", "+                        final DetailAST mods =", "+                            child.findFirstToken(TokenTypes.MODIFIERS);", "+                        if (mods.branchContains(TokenTypes.LITERAL_STATIC)) {", "+                            frame.addStaticField(name);", "+                        }", "+                        else {", "+                            frame.addInstanceField(name);", "+                        }", "-                    else {", "-                        frame.addInstanceField(name);", "-                    }", "+                    child = (DetailAST) child.getNextSibling();", "-                child = (DetailAST) child.getNextSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4857f5301d43b44ae2e17683a6ba6f92", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "094ffd52eca4f05bfc671f01cb7ad0b7d1bbe77f", "commitAfterChange": "49d100f325752b15bbee56bfcf99dac223144639", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["+        if (aAST.getType() == TokenTypes.VARIABLE_DEF", "+            || aAST.getType() == TokenTypes.PARAMETER_DEF)", "+        {", "+            processVariable(aAST);", "+            return;", "+        }", "+", "-        if ((aAST.getType() == TokenTypes.CLASS_DEF)", "-            || (aAST.getType() == TokenTypes.ENUM_DEF)", "-            || (aAST.getType() == TokenTypes.ENUM_CONSTANT_DEF))", "-        {", "-            final DetailAST typeMods =", "-                aAST.findFirstToken(TokenTypes.MODIFIERS);", "-            final boolean isStaticInnerType =", "-                (typeMods == null)", "-                    ? false", "-                    : typeMods.branchContains(TokenTypes.LITERAL_STATIC);", "-            final FieldFrame frame =", "-                new FieldFrame(mCurrentFrame, isStaticInnerType);", "+        final DetailAST typeMods = aAST.findFirstToken(TokenTypes.MODIFIERS);", "+        final boolean isStaticInnerType =", "+            (typeMods == null)", "+            ? false", "+            : typeMods.branchContains(TokenTypes.LITERAL_STATIC);", "+        final FieldFrame frame =", "+            new FieldFrame(mCurrentFrame, isStaticInnerType);", "-            //add fields to container", "-            final DetailAST objBlock =", "-                aAST.findFirstToken(TokenTypes.OBJBLOCK);", "-            // enum constants may not have bodies", "-            if (objBlock != null) {", "-                DetailAST child = (DetailAST) objBlock.getFirstChild();", "-                while (child != null) {", "-                    if (child.getType() == TokenTypes.VARIABLE_DEF) {", "-                        final String name =", "-                            child.findFirstToken(TokenTypes.IDENT).getText();", "-                        final DetailAST mods =", "-                            child.findFirstToken(TokenTypes.MODIFIERS);", "-                        if (mods.branchContains(TokenTypes.LITERAL_STATIC)) {", "-                            frame.addStaticField(name);", "-                        }", "-                        else {", "-                            frame.addInstanceField(name);", "-                        }", "+        //add fields to container", "+        final DetailAST objBlock = aAST.findFirstToken(TokenTypes.OBJBLOCK);", "+        // enum constants may not have bodies", "+        if (objBlock != null) {", "+            DetailAST child = (DetailAST) objBlock.getFirstChild();", "+            while (child != null) {", "+                if (child.getType() == TokenTypes.VARIABLE_DEF) {", "+                    final String name =", "+                        child.findFirstToken(TokenTypes.IDENT).getText();", "+                    final DetailAST mods =", "+                        child.findFirstToken(TokenTypes.MODIFIERS);", "+                    if (mods.branchContains(TokenTypes.LITERAL_STATIC)) {", "+                        frame.addStaticField(name);", "-                    child = (DetailAST) child.getNextSibling();", "+                    else {", "+                        frame.addInstanceField(name);", "+                    }", "+                child = (DetailAST) child.getNextSibling();", "-            // push container", "-            mCurrentFrame = frame;", "-        else {", "-            //must be VARIABLE_DEF or PARAMETER_DEF", "-            processVariable(aAST);", "-        }", "+        // push container", "+        mCurrentFrame = frame;"]}]}