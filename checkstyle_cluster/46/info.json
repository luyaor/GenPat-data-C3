{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "58da0874961c885e7cd9ae9b061eb5de", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1698e3afb4ba8643f8c998d721fcf7eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "e1d0e7f6361c32c69650ba789c1995e49a94142f", "commitAfterChange": "7dd24c8c35572b5db3e5c905d440e813cfe2538c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void checkHtml(final DetailAST ast, final TextBlock comment)", "signatureAfterChange": "     private void checkHtml(final DetailAST ast, final TextBlock comment)", "diff": ["-                log(tag.getLineno(), INCOMPLETE_TAG,", "-                    text[tag.getLineno() - lineno]);", "+                log(tag.getLineNo(), INCOMPLETE_TAG,", "+                    text[tag.getLineNo() - lineno]);", "-                    log(tag.getLineno(),", "+                    log(tag.getLineNo(),", "-                log(htag.getLineno(), htag.getPosition(), UNCLOSED_HTML, htag);", "+                log(htag.getLineNo(), htag.getPosition(), UNCLOSED_HTML, htag);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c30e7e29844774b40d4e1f95133ece2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/IntRangeFilterTest.java", "commitBeforeChange": "7abbd6af2f63a9e5bfa067f3058b5a3e738971de", "commitAfterChange": "8d242382f8bb77488b6da23bdd0d2d61583703fc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          public void testEquals()", "signatureAfterChange": "          public void testEquals()", "diff": ["-        final Filter filter = new IntRangeFilter(0, 2);", "-        final Filter filter2 = new IntRangeFilter(0, 2);", "-        final Filter filter3 = new IntRangeFilter(0, 1);", "-        final Filter filter4 = new IntRangeFilter(1, 2);", "+        final IntFilter filter = new IntRangeFilter(0, 2);", "+        final IntFilter filter2 = new IntRangeFilter(0, 2);", "+        final IntFilter filter3 = new IntRangeFilter(0, 1);", "+        final IntFilter filter4 = new IntRangeFilter(1, 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c8756dd22b4669b19e05e348820fe9b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractViolationReporter.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public abstract void log(int aLine, String aKey, Object... aArgs);", "signatureAfterChange": "     public abstract void log(int line, String key, Object... args);", "diff": ["-    public abstract void log(int aLine, String aKey, Object... aArgs);", "+    public abstract void log(int line, String key, Object... args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a66898da964ba717d8b2e1ab2eb83fd6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "d814d1352b63136a400cd8f4dffd03d68c9ccd24", "commitAfterChange": "3edd1b53a5d8d407fd33d8c514db8bc1c7274fe5", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Override     public void checkIndentation()", "signatureAfterChange": "      @Override     public void checkIndentation()", "diff": ["-        checkToplevelToken();", "+        checkTopLevelToken();", "-        if (hasCurlys()) {", "+        if (hasCurlies()) {", "-            // NOTE: switch statements usually don't have curlys", "-            if (!hasCurlys() || !areOnSameLine(getLCurly(), getRCurly())) {", "+            // NOTE: switch statements usually don't have curlies", "+            if (!hasCurlies() || !areOnSameLine(getLCurly(), getRCurly())) {", "-            checkNonlistChild();", "+            checkNonListChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1591986c4e310720449e1caf4f4c8f1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public int hashCode()", "signatureAfterChange": "      @Override     public int hashCode()", "diff": ["-        result = mLineNo;", "-        result = HASH_MULT * result + mColNo;", "-        result = HASH_MULT * result + mKey.hashCode();", "-        for (final Object element : mArgs) {", "+        result = lineNo;", "+        result = HASH_MULT * result + colNo;", "+        result = HASH_MULT * result + key.hashCode();", "+        for (final Object element : args) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b280d95068fd10af2f9e74a423f02ad8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "417a132e0e7aa28d7649b930f4336d721a448210", "commitAfterChange": "c4288bb3bca4b5e5871a0243a19b8df9d9fd6124", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public boolean hasIntersectionWithComment(             int aStartLineNo, int aStartColNo, int aEndLineNo, int aEndColNo)", "signatureAfterChange": "     public boolean hasIntersectionWithComment(             int aStartLineNo, int aStartColNo, int aEndLineNo, int aEndColNo)", "diff": ["-                Comment comment = (Comment) rowIterator.next();", "+                TextBlock comment = (TextBlock) rowIterator.next();", "-            Comment comment = (Comment) mCPlusPlusComments.get(", "-                new Integer(lineNumber));", "+            TextBlock comment =", "+                (TextBlock) mCPlusPlusComments.get(new Integer(lineNumber));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9402ccaae4de32125db31156f24e041", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractViolationReporter.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public abstract void log(int aLine, int aCol, String aKey,             Object... aArgs);", "signatureAfterChange": "     public abstract void log(int line, int col, String key,             Object... args);", "diff": ["-    public abstract void log(int aLine, int aCol, String aKey,", "+    public abstract void log(int line, int col, String key,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9872a301438fa0ae5bf81bf57768d9e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/UtilsTest.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testLengthExpandedTabs()         throws Exception", "signatureAfterChange": "     public void testLengthExpandedTabs()         throws Exception", "diff": ["-        final RE r1 = Utils.getRE(\"a\");", "-        final RE r2 = Utils.getRE(\"a\");", "+        final Pattern r1 = Utils.getPattern(\"a\");", "+        final Pattern r2 = Utils.getPattern(\"a\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4deacf76a384197534586afadae39d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "          @Override         public String toString()", "signatureAfterChange": "          @Override         public String toString()", "diff": ["-                + \"final=\" + mDeclaredAsFinal", "-                + \" abstract=\" + mDeclaredAsAbstract", "-                + \" pctor=\" + mHasPrivateCtor", "-                + \" ctor=\" + mHasNonPrivateCtor", "+                + \"final=\" + declaredAsFinal", "+                + \" abstract=\" + declaredAsAbstract", "+                + \" pctor=\" + hasPrivateCtor", "+                + \" ctor=\" + hasNonPrivateCtor"]}]}