{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6677fcf6391d432b0a550880543e7b67", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1737368053a3d01acff635e61e645ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java", "commitBeforeChange": "423ed9e469db620671459827b58c89025d8f6c66", "commitAfterChange": "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void processModifiers(DetailAST ast)", "signatureAfterChange": "     private void processModifiers(DetailAST ast)", "diff": ["-        if (ast.findFirstToken(TokenTypes.LITERAL_STATIC) != null) {", "-            if (state.currentScopeState > STATE_STATIC_VARIABLE_DEF) {", "-                if (!ignoreModifiers", "-                    || state.currentScopeState > STATE_INSTANCE_VARIABLE_DEF) {", "-                    log(ast, MSG_STATIC);", "-                }", "-            }", "-            else {", "-                state.currentScopeState = STATE_STATIC_VARIABLE_DEF;", "-            }", "-        }", "-        else {", "+        if (ast.findFirstToken(TokenTypes.LITERAL_STATIC) == null) {", "+        else {", "+            if (state.currentScopeState > STATE_STATIC_VARIABLE_DEF) {", "+                if (!ignoreModifiers", "+                        || state.currentScopeState > STATE_INSTANCE_VARIABLE_DEF) {", "+                    log(ast, MSG_STATIC);", "+                }", "+            }", "+            else {", "+                state.currentScopeState = STATE_STATIC_VARIABLE_DEF;", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8c1164e224ef2d9c9a041d35d6bc5d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java", "commitBeforeChange": "e8a4ab77aba5f63527b5b64973ab3117e9807908", "commitAfterChange": "5cd16d56a2ef2a3daaf1674666a9a5e6f2ddfe78", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                if (state.scopeState > STATE_CTOR_DEF) {", "+                if (state.currentScopeState > STATE_CTOR_DEF) {", "-                    state.scopeState = STATE_CTOR_DEF;", "+                    state.currentScopeState = STATE_CTOR_DEF;", "-                if (state.scopeState > STATE_METHOD_DEF) {", "+                if (state.currentScopeState > STATE_METHOD_DEF) {", "-                    state.scopeState = STATE_METHOD_DEF;", "+                    state.currentScopeState = STATE_METHOD_DEF;", "-                    if (state.scopeState > STATE_STATIC_VARIABLE_DEF) {", "+                    if (state.currentScopeState > STATE_STATIC_VARIABLE_DEF) {", "-                            || state.scopeState > STATE_INSTANCE_VARIABLE_DEF)", "+                            || state.currentScopeState > STATE_INSTANCE_VARIABLE_DEF)", "-                        state.scopeState = STATE_STATIC_VARIABLE_DEF;", "+                        state.currentScopeState = STATE_STATIC_VARIABLE_DEF;", "-                    if (state.scopeState > STATE_INSTANCE_VARIABLE_DEF) {", "+                    if (state.currentScopeState > STATE_INSTANCE_VARIABLE_DEF) {", "-                    else if (state.scopeState == STATE_STATIC_VARIABLE_DEF) {", "+                    else if (state.currentScopeState == STATE_STATIC_VARIABLE_DEF) {", "-                        state.scopeState = STATE_INSTANCE_VARIABLE_DEF;", "+                        state.currentScopeState = STATE_INSTANCE_VARIABLE_DEF;"]}]}