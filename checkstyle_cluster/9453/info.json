{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2639c62c54207e4802dc1bb0ca10c806", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "438d2907bb23ab648c4df5bb8bfa269e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "e0471bb7f2840ebfa4adaa5fea697b4b3c31f782", "commitAfterChange": "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private boolean hasLineBreakAfter(DetailAST leftCurly)", "signatureAfterChange": "     private boolean hasLineBreakAfter(DetailAST leftCurly)", "diff": ["-        if (nextToken != null && nextToken.getType() != TokenTypes.RCURLY", "-                && leftCurly.getLineNo() == nextToken.getLineNo()) {", "-            return false;", "-        }", "-        return true;", "+        return nextToken == null", "+                || nextToken.getType() == TokenTypes.RCURLY", "+                || leftCurly.getLineNo() != nextToken.getLineNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69061d83581fdebfa664e976f6b5ade4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "da2d75a1780c1691dc4aa45489f9e9674b1c652e", "commitAfterChange": "36b91a59d62c9505b835717f00f470c499cf9b30", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private static DetailAST findClassOrConstructorOrMethodInWhichItIsDefined(DetailAST ast)", "signatureAfterChange": "     private static DetailAST findFirstUpperNamedBlock(DetailAST ast)", "diff": ["-    private static DetailAST findClassOrConstructorOrMethodInWhichItIsDefined(DetailAST ast) {", "+    private static DetailAST findFirstUpperNamedBlock(DetailAST ast) {", "-        while (!(astTraverse.getType() == TokenTypes.METHOD_DEF", "-                || astTraverse.getType() == TokenTypes.CLASS_DEF", "-                || astTraverse.getType() == TokenTypes.ENUM_DEF", "-                || astTraverse.getType() == TokenTypes.CTOR_DEF)) {", "+        while (astTraverse.getType() != TokenTypes.METHOD_DEF", "+                && astTraverse.getType() != TokenTypes.CLASS_DEF", "+                && astTraverse.getType() != TokenTypes.ENUM_DEF", "+                && astTraverse.getType() != TokenTypes.CTOR_DEF) {"]}]}