{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7594dc41ae939684a6d6f249094a9bb8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f20d9b9c9b380fd3b72fd0d513606cf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/GuardTest.java", "commitBeforeChange": "52e2087c404986f8e12cd8579be7b2333961e1a3", "commitAfterChange": "c38185458ab824874b8465c46b4dc42646440aaa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testClassGuard()", "signatureAfterChange": "      public void testClassGuard()", "diff": ["-        assertEquals(AccessResult.UNKNOWN, g.verifyImport(\"asda\", \"ignored\"));", "-        assertEquals(AccessResult.UNKNOWN, g.verifyImport(\"p\", \"ignored\"));", "-        assertEquals(AccessResult.UNKNOWN, g.verifyImport(\"pkga\", \"ignored\"));", "-        assertEquals(AccessResult.ALLOWED, g.verifyImport(\"pkg.a\", \"ignored\"));", "-        assertEquals(AccessResult.UNKNOWN, g.verifyImport(\"pkg.a.b\", \"ignored\"));", "-        assertEquals(AccessResult.UNKNOWN, g.verifyImport(\"pkg\", \"ignored\"));", "+        assertEquals(AccessResult.UNKNOWN, g.verifyImport(\"asda\"));", "+        assertEquals(AccessResult.UNKNOWN, g.verifyImport(\"p\"));", "+        assertEquals(AccessResult.UNKNOWN, g.verifyImport(\"pkga\"));", "+        assertEquals(AccessResult.ALLOWED, g.verifyImport(\"pkg.a\"));", "+        assertEquals(AccessResult.UNKNOWN, g.verifyImport(\"pkg.a.b\"));", "+        assertEquals(AccessResult.UNKNOWN, g.verifyImport(\"pkg\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab4365d47c347834087f760510e37644", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/GuardTest.java", "commitBeforeChange": "52e2087c404986f8e12cd8579be7b2333961e1a3", "commitAfterChange": "c38185458ab824874b8465c46b4dc42646440aaa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testPkgGuard1()", "signatureAfterChange": "     public void testPkgGuard1()", "diff": ["-        assertEquals(AccessResult.UNKNOWN, g.verifyImport(\"asda\", \"ignored\"));", "-        assertEquals(AccessResult.UNKNOWN, g.verifyImport(\"p\", \"ignored\"));", "-        assertEquals(AccessResult.UNKNOWN, g.verifyImport(\"pkga\", \"ignored\"));", "-        assertEquals(AccessResult.ALLOWED, g.verifyImport(\"pkg.a\", \"ignored\"));", "-        assertEquals(AccessResult.ALLOWED, g.verifyImport(\"pkg.a.b\", \"ignored\"));", "-        assertEquals(AccessResult.UNKNOWN, g.verifyImport(\"pkg\", \"ignored\"));", "+        assertEquals(AccessResult.UNKNOWN, g.verifyImport(\"asda\"));", "+        assertEquals(AccessResult.UNKNOWN, g.verifyImport(\"p\"));", "+        assertEquals(AccessResult.UNKNOWN, g.verifyImport(\"pkga\"));", "+        assertEquals(AccessResult.ALLOWED, g.verifyImport(\"pkg.a\"));", "+        assertEquals(AccessResult.ALLOWED, g.verifyImport(\"pkg.a.b\"));", "+        assertEquals(AccessResult.UNKNOWN, g.verifyImport(\"pkg\"));"]}]}