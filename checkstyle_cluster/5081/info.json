{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d899b1428c4424585d0ba07a80c042dc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66cf567f7235a8a6eb386f3a28757be1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "      @Test     public void testCreateListenerWithLocationIllegalStateException() throws Exception", "signatureAfterChange": "      @Test     public void testCreateListenerWithLocationIllegalStateException() throws Exception", "diff": ["-        catch (InvocationTargetException e) {", "-            assertTrue(e.getCause() instanceof IllegalStateException);", "-            assertTrue(e.getCause().getMessage().startsWith(\"Invalid output format. Found\"));", "+        catch (InvocationTargetException ex) {", "+            assertTrue(ex.getCause() instanceof IllegalStateException);", "+            assertTrue(ex.getCause().getMessage().startsWith(\"Invalid output format. Found\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d14a4891bf70cc349d9c9ea74d3dfb53", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "      @Test     public void testCreateListenerIllegalStateException() throws Exception", "signatureAfterChange": "      @Test     public void testCreateListenerIllegalStateException() throws Exception", "diff": ["-        catch (InvocationTargetException e) {", "-            assertTrue(e.getCause() instanceof IllegalStateException);", "-            assertTrue(e.getCause().getMessage().startsWith(\"Invalid output format. Found\"));", "+        catch (InvocationTargetException ex) {", "+            assertTrue(ex.getCause() instanceof IllegalStateException);", "+            assertTrue(ex.getCause().getMessage().startsWith(\"Invalid output format. Found\"));"]}]}