{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f54279a6b4d11ecd6f1c6537eff5707", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03ed7cb6663eef5b55375f719ac6eb50", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "a0d00ea8940acd30064715db04d7a19a99d4cca9", "commitAfterChange": "f52306ff7799ea2b2e4d99fba7040a11b186d68a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static void collectDeclarations(Deque<LexicalFrame> frameStack,         DetailAST ast)", "signatureAfterChange": "     private static void collectDeclarations(Deque<LexicalFrame> frameStack,         DetailAST ast)", "diff": ["-                final DetailAST parameterAST = ast.findFirstToken(TokenTypes.IDENT);", "-                frame.addName(parameterAST.getText());", "+                final DetailAST parameterIdent = ast.findFirstToken(TokenTypes.IDENT);", "+                frame.addIdent(parameterIdent);", "-                final DetailAST classAST = ast.findFirstToken(TokenTypes.IDENT);", "-                frame.addName(classAST.getText());", "+                final DetailAST classIdent = ast.findFirstToken(TokenTypes.IDENT);", "+                frame.addIdent(classIdent);", "-                final String name = ast.findFirstToken(TokenTypes.IDENT).getText();", "+                final DetailAST ident = ast.findFirstToken(TokenTypes.IDENT);", "-                        ((ClassFrame) frame).addStaticMethod(name);", "+                        ((ClassFrame) frame).addStaticMethod(ident);", "-                        ((ClassFrame) frame).addInstanceMethod(name);", "+                        ((ClassFrame) frame).addInstanceMethod(ident);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b61fbe9360261961d583b2aad8647537", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractDeclarationCollector.java", "commitBeforeChange": "782da01103fc7ec8e69a3da7a5ef800dac866a8b", "commitAfterChange": "68959eeefff4d4a5b295cefbec242c643d523c6b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private static void collectDeclarations(Deque<LexicalFrame> frameStack,         DetailAST ast)", "signatureAfterChange": "     private static void collectDeclarations(Deque<LexicalFrame> frameStack,         DetailAST ast)", "diff": ["-            case TokenTypes.VARIABLE_DEF :  {", "+            case TokenTypes.VARIABLE_DEF :", "-            }", "-            case TokenTypes.PARAMETER_DEF : {", "-                final DetailAST nameAST = ast.findFirstToken(TokenTypes.IDENT);", "-                frame.addName(nameAST.getText());", "+            case TokenTypes.PARAMETER_DEF :", "+                final DetailAST parameterAST = ast.findFirstToken(TokenTypes.IDENT);", "+                frame.addName(parameterAST.getText());", "-            }", "-            case TokenTypes.ANNOTATION_DEF : {", "-                final DetailAST nameAST = ast.findFirstToken(TokenTypes.IDENT);", "-                frame.addName(nameAST.getText());", "+            case TokenTypes.ANNOTATION_DEF :", "+                final DetailAST classAST = ast.findFirstToken(TokenTypes.IDENT);", "+                frame.addName(classAST.getText());", "-            }"]}]}