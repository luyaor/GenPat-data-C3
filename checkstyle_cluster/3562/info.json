{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc4a0ff83ec4d2e2dfb8a5c4b49fd1ed", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "029351134d683282102ea05316fa7320", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/NoWhitespaceAfterCheckTest.java", "commitBeforeChange": "672244cf2f75c7425087a69beafe1133a45f130b", "commitAfterChange": "aa1032931c3bcb327e77c5d21f63f48a27e947a5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testDefault() throws Exception", "signatureAfterChange": "      public void testDefault() throws Exception", "diff": ["+        checkConfig.addProperty(\"allowLineBreaks\", \"false\");", "+            \"5:14: '.' is followed by whitespace.\",", "+            \"6:12: '.' is followed by whitespace.\",", "-        };", "-        verify(c, fname, expected);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3eb23a4bf9fdd18f9eb396fb2d5b10a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullTest.java", "commitBeforeChange": "dee1f30bb97acfacf9795700d11521b0e34c37b2", "commitAfterChange": "49862970ac522ae85fa014b5ac4985e56645fcff", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testIt() throws Exception", "signatureAfterChange": "      @Test     public void testEqualsWithoutEqualsIgnoreCase() throws Exception", "diff": ["-    public void testIt() throws Exception", "+", "+    @Test", "+    public void testEqualsWithoutEqualsIgnoreCase() throws Exception", "+    {", "+        final DefaultConfiguration checkConfig =", "+                createCheckConfig(EqualsAvoidNullCheck.class);", "+        checkConfig.addAttribute(\"performEqualsIgnoreCaseCheck\", \"false\");", "+", "+        final String[] expected = {", "+            \"18:17: String literal expressions should be on the left side of an equals comparison.\",", "+            \"20:17: String literal expressions should be on the left side of an equals comparison.\",", "+            \"22:17: String literal expressions should be on the left side of an equals comparison.\",", "+            \"24:17: String literal expressions should be on the left side of an equals comparison.\",", "+            \"26:17: String literal expressions should be on the left side of an equals comparison.\",", "+            \"28:17: String literal expressions should be on the left side of an equals comparison.\",", "+            \"57:17: String literal expressions should be on the left side of an equals comparison.\",", "+            \"59:17: String literal expressions should be on the left side of an equals comparison.\",", "+            \"61:17: String literal expressions should be on the left side of an equals comparison.\",", "+            \"63:17: String literal expressions should be on the left side of an equals comparison.\",", "+            \"65:17: String literal expressions should be on the left side of an equals comparison.\",", "+            \"67:17: String literal expressions should be on the left side of an equals comparison.\","]}]}