{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "87260780f19fe70f8cd35941a32d052b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fb800b8db49f52d9ed4e1a8fa94504b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault()         throws Exception", "signatureAfterChange": "      @Test     public void testDefault()         throws Exception", "diff": ["-            \"15:19: '+' should be on a new line.\",", "-            \"16:15: '-' should be on a new line.\",", "-            \"24:18: '&&' should be on a new line.\",", "-            \"39:30: '&' should be on a new line.\",", "-            \"52:29: '&' should be on a new line.\",", "+            \"15:19: \" + getCheckMessage(LINE_NEW, \"+\"),", "+            \"16:15: \" + getCheckMessage(LINE_NEW, \"-\"),", "+            \"24:18: \" + getCheckMessage(LINE_NEW, \"&&\"),", "+            \"39:30: \" + getCheckMessage(LINE_NEW, \"&\"),", "+            \"52:29: \" + getCheckMessage(LINE_NEW, \"&\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd6e7166ca9d91d01df45cf99e9d21cd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-            \"8:1: '{' should be on the previous line.\",", "-            \"12:5: '{' should be on the previous line.\",", "-            \"21:5: '{' should be on the previous line.\",", "-            \"30:5: '{' should be on the previous line.\",", "-            \"39:5: '{' should be on the previous line.\",", "+            \"8:1: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"12:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"21:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"30:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"39:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),"]}]}