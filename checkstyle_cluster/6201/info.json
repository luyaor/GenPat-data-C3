{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d44a4facdc48200cfbce194744403c0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2efcfca1f9e1c0e5f779f48157765e26", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "b3133035a4fa0e086dfb0dfbefbc7f1540521bbc", "commitAfterChange": "add2bdfb27494bff5fa9c305d9782f57c6170b18", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DefaultLogger(OutputStream aOS)", "signatureAfterChange": "     public DefaultLogger(         OutputStream aInfoStream,         boolean aCloseInfoAfterUse,         OutputStream aErrorStream,         boolean aCloseErrorAfterUse)", "diff": ["-    public DefaultLogger(OutputStream aOS)", "+    public DefaultLogger(", "+        OutputStream aInfoStream,", "+        boolean aCloseInfoAfterUse,", "+        OutputStream aErrorStream,", "+        boolean aCloseErrorAfterUse)", "-        setOutputStream(aOS);", "-    }", "+        mCloseInfo = aCloseInfoAfterUse;", "+        mCloseError = aCloseErrorAfterUse;", "+        mInfoWriter = new PrintWriter(aInfoStream);", "+        if (aInfoStream == aErrorStream) {", "+            mErrorWriter = mInfoWriter;", "+            mErrorWriter = new PrintWriter(aErrorStream);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85e9a3272f4eb29abec6d840a40de8ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "b3133035a4fa0e086dfb0dfbefbc7f1540521bbc", "commitAfterChange": "add2bdfb27494bff5fa9c305d9782f57c6170b18", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public OutputStream getOutputStream()", "signatureAfterChange": "     protected void closeStreams()", "diff": ["-    /** @see AuditListener **/", "-    public OutputStream getOutputStream()", "-    {", "-        return mStream;", "-    }", "+     */", "+    protected void closeStreams()", "+    {", "+        if (mCloseInfo) {", "+            mInfoWriter.flush();", "+        }", "+        else {", "+            mInfoWriter.flush();", "+            mInfoWriter.close();", "+        }", "+", "+        if (mCloseError) {", "+            mErrorWriter.flush();", "+        }", "+        else {", "+            mErrorWriter.flush();", "+            mErrorWriter.close();", "+        }"]}]}