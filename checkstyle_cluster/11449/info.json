{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59d759e10ecea43d64f1238149204cdb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3efd150fff6bf4a8bb6abd71a20a2c5e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TodoCommentCheck.java", "commitBeforeChange": "7c20c36cea276a2b9abb09e8b19eb5825e6a921a", "commitAfterChange": "262209477f39964a63103613f3e2c985da083371", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void checkBadComments(FileContents aContents)", "signatureAfterChange": "     private void checkBadComments(FileContents aContents)", "diff": ["-        final Map allComments = aContents.getCComments();", "-        final Iterator allIter = allComments.keySet().iterator();", "+        final Map<Integer, List<TextBlock>> allComments = aContents", "+                .getCComments();", "+        final Iterator<Integer> allIter = allComments.keySet().iterator();", "-            final Integer key = (Integer) allIter.next();", "-            final List lineComments = (List) allComments.get(key);", "-            final Iterator lineIter = lineComments.iterator();", "+            final Integer key = allIter.next();", "+            final List<TextBlock> lineComments = allComments.get(key);", "+            final Iterator<TextBlock> lineIter = lineComments.iterator();", "-                final String[] cmt = ((TextBlock) lineIter.next()).getText();", "+                final String[] cmt = (lineIter.next()).getText();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0f5f31ecc4618ea94371348e48e09f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TrailingCommentCheck.java", "commitBeforeChange": "7c20c36cea276a2b9abb09e8b19eb5825e6a921a", "commitAfterChange": "262209477f39964a63103613f3e2c985da083371", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "     @Override     public void beginTree(DetailAST aRootAST)", "diff": ["+    @Override", "-        final Map cppComments = getFileContents().getCppComments();", "-        final Map cComments = getFileContents().getCComments();", "-        final Set lines = new HashSet();", "+        final Map<Integer, TextBlock> cppComments = getFileContents()", "+                .getCppComments();", "+        final Map<Integer, List<TextBlock>> cComments = getFileContents()", "+                .getCComments();", "+        final Set<Integer> lines = new HashSet<Integer>();", "-        final Iterator linesIter = lines.iterator();", "+        final Iterator<Integer> linesIter = lines.iterator();", "-            final Integer lineNo = (Integer) linesIter.next();", "+            final Integer lineNo = linesIter.next();", "-                comment = (TextBlock) cppComments.get(lineNo);", "+                comment = cppComments.get(lineNo);", "-                final List commentList = (List) cComments.get(lineNo);", "-                comment = (TextBlock) commentList.get(commentList.size() - 1);", "+                final List<TextBlock> commentList = cComments.get(lineNo);", "+                comment = commentList.get(commentList.size() - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcf2d55bcb9af16a359d46a6aa76ba13", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "d86a9de35b58eeed409ed9fc3cbef252fda4cb84", "commitAfterChange": "5d7063c660b241bce251f1a8c89394619f2791fb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "     public void finishTree(DetailAST aRootAST)", "diff": ["-        Set keys = mStringMap.keySet();", "-        Iterator keyIterator = keys.iterator();", "+        final Set keys = mStringMap.keySet();", "+        final Iterator keyIterator = keys.iterator();", "-            String key = (String) keyIterator.next();", "-            ArrayList hits = (ArrayList) mStringMap.get(key);", "+            final String key = (String) keyIterator.next();", "+            final ArrayList hits = (ArrayList) mStringMap.get(key);", "-                StringInfo firstFinding = (StringInfo) hits.get(0);", "-                int line = firstFinding.getLine();", "+                final StringInfo firstFinding = (StringInfo) hits.get(0);", "+                final int line = firstFinding.getLine();"]}]}