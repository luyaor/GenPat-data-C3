{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd04e2f4912f0b7b8e62512aab9589ea", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dd57e1179b52f5e13d034f68b2e02c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private static ParseTree getNextSibling(ParseTree aNode)", "signatureAfterChange": "     private static ParseTree getNextSibling(ParseTree node)", "diff": ["-    private static ParseTree getNextSibling(ParseTree aNode)", "+    private static ParseTree getNextSibling(ParseTree node)", "-        if (aNode.getParent() == null) {", "+        if (node.getParent() == null) {", "-        final ParseTree parent = aNode.getParent();", "+        final ParseTree parent = node.getParent();", "-            if (currentNode.equals(aNode)) {", "+            if (currentNode.equals(node)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74865d4204b7beb0f857ed99cc41cc7f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private NavigableMap<Integer, DetailAST> collectFirstNodes()", "signatureAfterChange": "     private NavigableMap<Integer, DetailAST> collectFirstNodes()", "diff": ["-        result.put(mFirstNode.getLineNo(), mFirstNode);", "-        DetailAST curNode = mFirstNode.getFirstChild();", "+        result.put(firstNode.getLineNo(), firstNode);", "+        DetailAST curNode = firstNode.getFirstChild();", "-        while (curNode != null && curNode != mLastNode) {", "+        while (curNode != null && curNode != lastNode) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab9e0542d115defee3a9503cc9a1c3ff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private DetailAST getNextCurNode(DetailAST aCurNode)", "signatureAfterChange": "     private DetailAST getNextCurNode(DetailAST curNode)", "diff": ["-    private DetailAST getNextCurNode(DetailAST aCurNode)", "+    private DetailAST getNextCurNode(DetailAST curNode)", "-        DetailAST nodeToVisit = aCurNode.getFirstChild();", "-        DetailAST currentNode = aCurNode;", "+        DetailAST nodeToVisit = curNode.getFirstChild();", "+        DetailAST currentNode = curNode;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0b2246498f272e62e4d8d6de505b56d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private static DetailAST         getNextSubTreeNode(DetailAST aCurrentNodeAst, DetailAST aSubTreeRootAst)", "signatureAfterChange": "     private static DetailAST         getNextSubTreeNode(DetailAST currentNodeAst, DetailAST subTreeRootAst)", "diff": ["-        getNextSubTreeNode(DetailAST aCurrentNodeAst, DetailAST aSubTreeRootAst)", "+        getNextSubTreeNode(DetailAST currentNodeAst, DetailAST subTreeRootAst)", "-        DetailAST currentNode = aCurrentNodeAst;", "+        DetailAST currentNode = currentNodeAst;", "-                if (currentNode.getParent().equals(aSubTreeRootAst)) {", "+                if (currentNode.getParent().equals(subTreeRootAst)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fed009bd07ab18ae5e309d6517f41e50", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private static DetailAST createCommentAstFromToken(Token aToken)", "signatureAfterChange": "     private static DetailAST createCommentAstFromToken(Token token)", "diff": ["-    private static DetailAST createCommentAstFromToken(Token aToken)", "+    private static DetailAST createCommentAstFromToken(Token token)", "-        switch (aToken.getType()) {", "+        switch (token.getType()) {", "-            return createSlCommentNode(aToken);", "+            return createSlCommentNode(token);", "-            return createBlockCommentNode(aToken);", "+            return createBlockCommentNode(token);"]}]}