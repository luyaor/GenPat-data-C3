{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ee5e3783f1c864c52dcbb28c4caa17e5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "511a90b9698561d252e1ec7c7a2b1e74", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-            \"25:17: '}' should be on the same line.\",", "-            \"28:17: '}' should be on the same line.\",", "-            \"40:13: '}' should be on the same line.\",", "-            \"44:13: '}' should be on the same line.\",", "-            \"93:27: '}' should be alone on a line.\",", "-            \"93:27: '}' should be on a new line.\",", "-            \"93:27: '}' should have line break before.\",", "-            \"97:54: '}' should have line break before.\",", "+            \"25:17: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "+            \"28:17: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "+            \"40:13: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "+            \"44:13: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "+            \"93:27: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),", "+            \"93:27: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\"),", "+            \"93:27: \" + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, \"}\"),", "+            \"97:54: \" + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, \"}\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7737cdc92b1f33a89326b15f79ee83a0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testSame() throws Exception", "signatureAfterChange": "     @Test     public void testSame() throws Exception", "diff": ["-            \"25:17: '}' should be on the same line.\",", "-            \"28:17: '}' should be on the same line.\",", "-            \"40:13: '}' should be on the same line.\",", "-            \"44:13: '}' should be on the same line.\",", "-            \"93:27: '}' should be alone on a line.\",", "-            \"93:27: '}' should be on a new line.\",", "-            \"93:27: '}' should have line break before.\",", "-            \"97:54: '}' should have line break before.\",", "+            \"25:17: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "+            \"28:17: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "+            \"40:13: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "+            \"44:13: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "+            \"93:27: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),", "+            \"93:27: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\"),", "+            \"93:27: \" + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, \"}\"),", "+            \"97:54: \" + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, \"}\"),"]}]}