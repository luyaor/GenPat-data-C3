{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed685db1fccce54282c800a54e349835", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12452b9ee3d1e6696c75d9dd681b0afd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/VerifierImpl.java", "commitBeforeChange": "fa128598e1f70bbfb8a953dc8cb8b791a5fa67d2", "commitAfterChange": "d3f39e6b87a10ee26aa8da532b545e54090e7761", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void verifyVariable(MyVariable aVar, boolean aInInterface)", "signatureAfterChange": "     public void verifyVariable(MyVariable aVar, boolean aInInterface)", "diff": ["-            if (mods.containsPrivate()) {", "-                System.out.println(\"Need to check for \" + aVar.getText());", "-            }", "+            // Logic to detect unused variables", "+            //if (mods.containsPrivate()) {", "+            //    System.out.println(\"Need to check for \" + aVar.getText());", "+            //}", "+                else if (mods.containsPublic() &&", "+                         mConfig.getPublicMemberRegexp().match(aVar.getText()))", "+                {", "+                    // silently allow", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae6b1b58d5b0438ebbcaa641c15f55ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "e380ac8df92c051d843d380d5e8a6fe90af9df9d", "commitAfterChange": "ab2f93f9bf61816d84154e636d32c81c05854e24", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static void usage()", "signatureAfterChange": "     private static void usage()", "diff": ["-        hf.printHelp(", "-            \"java \"", "-                + Main.class.getName()", "-                + \" [options] -c <config.xml> file...\",", "-            OPTS);", "-        System.exit(1);", "+        hf.printHelp(String.format(\"java %s [options] -c <config.xml> file...\",", "+                Main.class.getName()), buildOptions());"]}]}