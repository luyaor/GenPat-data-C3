{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "545736a8a4643f1dba4331e0493568cb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ad56c184204bf545657301e7161d68a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/TryHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public TryHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "signatureAfterChange": "     public TryHandler(IndentationCheck indentCheck,         DetailAST ast, ExpressionHandler parent)", "diff": ["-    public TryHandler(IndentationCheck aIndentCheck,", "-        DetailAST aAst, ExpressionHandler aParent)", "+    public TryHandler(IndentationCheck indentCheck,", "+        DetailAST ast, ExpressionHandler parent)", "-        super(aIndentCheck, \"try\", aAst, aParent);", "+        super(indentCheck, \"try\", ast, parent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67c06532b9876678053931c75f605a0f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "82f4a9852de874b4849a67f53f4e541d13db869b", "commitAfterChange": "24c13109a52b0b5085b5db2e8b0ae96655d9480c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public LineWrappingHandler(IndentationCheck instance, DetailAST firstNode)", "signatureAfterChange": "     public LineWrappingHandler(IndentationCheck instance, DetailAST firstNode, DetailAST lastNode)", "diff": ["-    public LineWrappingHandler(IndentationCheck instance, DetailAST firstNode)", "+    public LineWrappingHandler(IndentationCheck instance, DetailAST firstNode, DetailAST lastNode)", "-        lastNode = findLastNode(firstNode);", "+        this.lastNode = lastNode;"]}]}