{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7fa91012a9716b3d03937658cc70c93b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72353944b7a2bfbba702eb271ef90efa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "b090a07e19e1ce8452aa93c370724ef368bf5891", "commitAfterChange": "6a275cabe3de0aebd0e7a390563acf5c494a9a56", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            || (aAST.getType() == TokenTypes.INTERFACE_DEF))", "+            || (aAST.getType() == TokenTypes.INTERFACE_DEF)", "+            || (aAST.getType() == TokenTypes.ENUM_DEF)", "+            || (aAST.getType() == TokenTypes.ANNOTATION_DEF))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74c05e4878d8742baa09205f1fabe7ff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "commitAfterChange": "6125beffc437f970eae276b4a6542265c6547784", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "     public void leaveToken(DetailAST aAST)", "diff": ["-        if (aAST.getType() == TokenTypes.CLASS_DEF) {", "+        if ((aAST.getType() == TokenTypes.CLASS_DEF)", "+            || (aAST.getType() == TokenTypes.ENUM_DEF)", "+            || (aAST.getType() == TokenTypes.ENUM_CONSTANT_DEF))", "+        {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9824ae1958d91f65e595c2122488f55", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/ScopeUtils.java", "commitBeforeChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "commitAfterChange": "6125beffc437f970eae276b4a6542265c6547784", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static boolean isOuterMostType(DetailAST aAST)", "signatureAfterChange": "     public static boolean isOuterMostType(DetailAST aAST)", "diff": ["-                || (parent.getType() == TokenTypes.INTERFACE_DEF))", "+                || (parent.getType() == TokenTypes.INTERFACE_DEF)", "+                || (parent.getType() == TokenTypes.ANNOTATION_DEF)", "+                || (parent.getType() == TokenTypes.ENUM_DEF))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0487e39a5c0ca19548e60338286c3a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "1c1eadb21184c3e8361cacb25a33d927f3a4e8d4", "commitAfterChange": "9cff1673f1d42910c654e0af5365d68591f104f0", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private boolean hasShortCircuitTag(final DetailAST aAST,             final List<JavadocTag> aTags, final Scope aScope)", "signatureAfterChange": "     private boolean hasShortCircuitTag(final DetailAST aAST,             final List<JavadocTag> aTags, final Scope aScope)", "diff": ["-        // Invalid if private or a constructor", "+        // Invalid if private, a constructor, or a static method", "-                || (aScope == Scope.PRIVATE))", "+                || (aScope == Scope.PRIVATE)", "+                || (aAST.getType() == TokenTypes.METHOD_DEF", "+                && aAST.branchContains(TokenTypes.LITERAL_STATIC)))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd3ce1b43e451eaed9e55d6b0aa53e65", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "49ae6cf81b5acd6ad427806ab13629e45f6a5ece", "commitAfterChange": "f0c6c6ad7c33dc8af5a46c6ae2ecdff24f13a70b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void checkCheckClosingParens(final DetailAST aAST)", "signatureAfterChange": "     private void checkCheckClosingParens(final DetailAST aAST)", "diff": ["+            && !aAST.branchContains(TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR)", "+            && !aAST.branchContains(TokenTypes.ANNOTATION_ARRAY_INIT)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5d597c7acfbe15af6fb20b1d0decf94", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "9cbee6a57e6ad5167c3d9406f272fd44350f5e1d", "commitAfterChange": "1214dd0e742fa991b5a7343908e07da59e2354b1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private DetailAST findContainingConstantDef(DetailAST aAST)", "signatureAfterChange": "     private DetailAST findContainingConstantDef(DetailAST aAST)", "diff": ["-                && varDefAST.getType() != TokenTypes.VARIABLE_DEF)", "+                && varDefAST.getType() != TokenTypes.VARIABLE_DEF", "+                && varDefAST.getType() != TokenTypes.ENUM_CONSTANT_DEF)", "-        if (ScopeUtils.inInterfaceOrAnnotationBlock(varDefAST)) {", "+        if (ScopeUtils.inInterfaceOrAnnotationBlock(varDefAST)", "+            || varDefAST.getType() == TokenTypes.ENUM_CONSTANT_DEF)", "+        {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f073e923ea49e7fa5ac7d6939825c5a5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "bd9efb5e66d8a99fb1bd616213e4966d088d6932", "commitAfterChange": "dba6c944cdbf9acfbb40b9a2d8e6315fb14d87f0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private static boolean isInStatic(DetailAST ast)", "signatureAfterChange": "     private static boolean isInStatic(DetailAST ast)", "diff": ["-            else if (parent.getType() == TokenTypes.METHOD_DEF) {", "+            else if (parent.getType() == TokenTypes.METHOD_DEF", "+                        && !ScopeUtils.isInScope(parent, Scope.ANONINNER)", "+                        || parent.getType() == TokenTypes.VARIABLE_DEF) {"]}]}