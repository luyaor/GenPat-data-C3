{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54ab354a0478185b16fd83cc19daa75f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e50d1c485598351feb40b9b71b1d0472", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "6125beffc437f970eae276b4a6542265c6547784", "commitAfterChange": "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Class resolve(String aName) throws ClassNotFoundException", "signatureAfterChange": "     public Class resolve(String aName, String aCurrentClass)         throws ClassNotFoundException", "diff": ["-    public Class resolve(String aName) throws ClassNotFoundException", "+    public Class resolve(String aName, String aCurrentClass)", "+        throws ClassNotFoundException", "+        }", "+        //Perhaps it's fullyqualified inner class", "+        int dotIdx = aName.lastIndexOf(\".\");", "+        if (dotIdx != -1) {", "+            final String cn = aName.substring(0, dotIdx) + \"$\"", "+                + aName.substring(dotIdx + 1);", "+            if (isLoadable(cn)) {", "+                return safeLoad(cn);", "+            }", "+        //inner class of this class???", "+        if (!\"\".equals(aCurrentClass)) {", "+            final String innerClass = ((mPkg != null) ? (mPkg + \".\") : \"\")", "+                + aCurrentClass + \"$\" + aName;", "+            if (isLoadable(innerClass)) {", "+                return safeLoad(innerClass);", "+            }", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0234e6b835a56944fb5167517f7963d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Class<?> resolve(String aName, String aCurrentClass)         throws ClassNotFoundException", "signatureAfterChange": "     public Class<?> resolve(String name, String currentClass)         throws ClassNotFoundException", "diff": ["-    public Class<?> resolve(String aName, String aCurrentClass)", "+    public Class<?> resolve(String name, String currentClass)", "-        Class<?> clazz = resolveQualifiedName(aName);", "+        Class<?> clazz = resolveQualifiedName(name);", "-        for (String imp : mImports) {", "+        for (String imp : imports) {", "-            if (imp.endsWith(\".\" + aName)) {", "+            if (imp.endsWith(\".\" + name)) {", "-        if (!\"\".equals(mPkg)) {", "-            clazz = resolveQualifiedName(mPkg + \".\" + aName);", "+        if (!\"\".equals(pkg)) {", "+            clazz = resolveQualifiedName(pkg + \".\" + name);", "-        if (!\"\".equals(aCurrentClass)) {", "-            final String innerClass = (!\"\".equals(mPkg) ? (mPkg + \".\") : \"\")", "-                + aCurrentClass + \"$\" + aName;", "+        if (!\"\".equals(currentClass)) {", "+            final String innerClass = (!\"\".equals(pkg) ? (pkg + \".\") : \"\")", "+                + currentClass + \"$\" + name;", "-        for (String imp : mImports) {", "+        for (String imp : imports) {", "-                    + aName;", "+                    + name;", "-        return safeLoad(aName);", "+        return safeLoad(name);"]}]}