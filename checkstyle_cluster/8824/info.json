{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e6c90be1fb8bfb752de96b6921dae44", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "414b5448f123b9d545ee55dc4168a8dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "6e96026ec6d95fc5eadd3044cab91c24c73c8e0c", "commitAfterChange": "e00c478dd61d9d883e41b500b780ab217582c2e7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected final void checkLinesIndent(int aStartLine, int aEndLine,                                           IndentLevel aIndentLevel)", "signatureAfterChange": "     protected final void checkLinesIndent(int aStartLine, int aEndLine,         IndentLevel aIndentLevel)", "diff": ["-                                          IndentLevel aIndentLevel)", "+        IndentLevel aIndentLevel)", "-        aIndentLevel = new IndentLevel(aIndentLevel, getBasicOffset());", "+        final IndentLevel offsetLevel =", "+            new IndentLevel(aIndentLevel, getBasicOffset());", "-            checkSingleLine(i, aIndentLevel);", "+            checkSingleLine(i, offsetLevel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c2e38d384779de721aae9f0b8ebfd4c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/CovariantEqualsCheck.java", "commitBeforeChange": "52e2087c404986f8e12cd8579be7b2333961e1a3", "commitAfterChange": "c38185458ab824874b8465c46b4dc42646440aaa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        mHasEqualsObject = false;", "+        boolean hasEqualsObject = false;", "-                            mHasEqualsObject = true;", "+                            hasEqualsObject = true;", "-            if (!mHasEqualsObject) {", "+            if (!hasEqualsObject) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67dd0150b4d419aa70cf46f92a7cf1dc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/DetailASTTest.java", "commitBeforeChange": "9cc86b38df9a086713d1fcdf01b451b41c0d6f65", "commitAfterChange": "e9ec5bfbd5ab91852c3ec1b30492df5c06cdd3b1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private static void checkTree(final DetailAST node,                            final DetailAST parent,                            final DetailAST prev,                            final String filename,                            final DetailAST root)", "signatureAfterChange": "      private static void checkTree(final DetailAST node,                            final DetailAST parent,                            final DetailAST prev,                            final String filename,                            final DetailAST root)", "diff": ["-        String msg = MessageFormat.format(", "+        String badParentMsg = MessageFormat.format(", "-        assertEquals(msg, parent, node.getParent());", "-        msg = MessageFormat.format(", "+        assertEquals(badParentMsg, parent, node.getParent());", "+        String badPrevMsg = MessageFormat.format(", "-        assertEquals(msg, prev, node.getPreviousSibling());", "+        assertEquals(badPrevMsg, prev, node.getPreviousSibling());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a9ba6ea795cd877d41678b6d9def5ac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "c1ce1f8f0c8c9ef84d71fbe47ea671adcd87043a", "commitAfterChange": "e453e5bdb3fb695c78d46aa3a6ad6d54a91df521", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public ParseTreeInfoPanel()", "signatureAfterChange": "     public ParseTreeInfoPanel()", "diff": ["-        treeTable = new JTreeTable(parseTreeModel);", "+        JTreeTable treeTable = new JTreeTable(parseTreeModel);"]}]}