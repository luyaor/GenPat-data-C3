{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18b0ab2d90cd5f5c3ca78930d11387f8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00034231682d8568391c5fed3885fcd6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "de39a36a6b81521c17e3a4afa0e98e30deccf082", "commitAfterChange": "2b4a02d2c8a498a8a1ee38e9396426209fa65fad", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public int process(List<File> files) throws CheckstyleException", "signatureAfterChange": "     public int process(List<File> files) throws CheckstyleException", "diff": ["-                LOG.debug(\"IOException occured.\", ioe);", "+                LOG.debug(\"IOException occurred.\", ioe);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00540d25ee855116297d1347643fb74b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Test     public void testSingleNoUncheckedTokens() throws Exception", "signatureAfterChange": "     @Test     public void testSingleNoUncheckedTokens() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsSingle.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsSingle.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "008e59174c75cb8e5e4e74efddb713cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/PackageNameCheckTest.java", "commitBeforeChange": "11fad553fd96cc00f33e95ae0bc2d6b32a8e1c54", "commitAfterChange": "aa5dbacdcbf20a9b56e2f7ecb577bb47778b0c54", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testSpecified()         throws Exception", "signatureAfterChange": "      public void testSpecified()         throws Exception", "diff": ["-            \"6:1: Name 'com.puppycrawl.tools.checkstyle' must match pattern '[A-Z]+'.\",", "+            \"6:9: Name 'com.puppycrawl.tools.checkstyle' must match pattern '[A-Z]+'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "015818bf3e3a05b887eb74bb55cb3e7b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java", "commitBeforeChange": "eeee00819be1c526aaa6ac0d4fa2259842973b22", "commitAfterChange": "1017cb35e458b0d7d0ee57b9a682a253c9ccbe83", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setTag(String aTag)         throws ConversionException", "signatureAfterChange": "     public void setTag(String aTag)         throws ConversionException", "diff": ["-            mTagRE = Utils.getPattern(aTag + \"\\\\s+(.*$)\");", "+            mTagRE = Utils.getPattern(aTag + \"\\\\s*(.*$)\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0196736d24d7dd81363c6b3417756b61", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule411bracesareused/NeedBracesTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01bf0acd80e152972edf3e31abe523c4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule522typenames/TypeNameTest.java", "commitBeforeChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "commitAfterChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void typeNameTest() throws Exception", "signatureAfterChange": "      @Test     public void typeNameTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"TypeNameInput\");", "+        final String filePath = builder.getFilePath(\"InputTypeName\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01f552497e3e8f287068e82aef9980da", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testFileInUnnamedPackage() throws Exception", "signatureAfterChange": "      @Test     public void testFileInUnnamedPackage() throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputRedundantImportCheck_UnnamedPackage.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputRedundantImport_UnnamedPackage.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "025384e1a541483fa5a3e60c0d7a9500", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheckTest.java", "commitBeforeChange": "524dd2e149045abdfbdb42282c78cf869d1f83d8", "commitAfterChange": "751fb5881113e58f492e3f2130533dca655a838a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testStaticHeader() throws Exception", "signatureAfterChange": "     @Test     public void testStaticHeader() throws Exception", "diff": ["-        checkConfig.addAttribute(\"headerFile\", getPath(\"java.header\"));", "+        checkConfig.addAttribute(\"headerFile\", getPath(\"configs/java.header\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "025d37a3cdd551dc650d2452d5617f53", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java", "commitBeforeChange": "11939b72a5e3c76fe35f13fd6261d6f16fb21c77", "commitAfterChange": "9cbee6a57e6ad5167c3d9406f272fd44350f5e1d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-                log(", "-                    aAST.getLineNo(),", "-                    aAST.getColumnNo(),", "-                    \"Array brackets at illegal position.\");", "+                log(aAST.getLineNo(), aAST.getColumnNo(), \"array.type.style\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02851822080aeaba64bbfbc1f1830adb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testEmptyForIterator() throws Exception", "signatureAfterChange": "      @Test     public void testEmptyForIterator() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputForWhitespace.java\"), expected);", "+        verify(checkConfig, getPath(\"checks/whitespace/InputForWhitespace.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02899f55f184183f3d1e1d52311940da", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-        verify(checkConfig,", "-                getPath(\"whitespace/InputGenericWhitespaceCheck.java\"),", "-                expected);", "+        verify(checkConfig, getPath(\"InputGenericWhitespaceCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02b03720e10260d087b4e066db416be3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void oneStatementNonCompilableInputTest() throws Exception", "signatureAfterChange": "      @Test     public void oneStatementNonCompilableInputTest() throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputOneStatementPerLineCheck.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputOneStatementPerLine.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0334cf01db99b2f8313f1a9128db0078", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAvoidEscapedUnicodeCharactersCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAvoidEscapedUnicodeCharacters.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "036d513ed5922cacb91490b9d31896a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testCheckWithOffset3() throws Exception", "signatureAfterChange": "      @Test     public void testCheckWithOffset3() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputJavaDocTagContinuationIndentationOffset3.java\"),", "+        verify(checkConfig, getPath(\"InputJavaDocTagContinuationIndentationOffset3.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0390cba911717041a9c8b964c9af53e0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 26, "signatureBeforeChange": "      @Test     public void testInvalidLabel() throws Exception", "signatureAfterChange": "      @Test     public void testInvalidLabel() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputInvalidLabelIndent.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputInvalidLabelIndent.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0397aa8ba915c8d36754e02ed19faf84", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheckTest.java", "commitBeforeChange": "3d81ece0258005a3264d550f8cffeedc27a3765c", "commitAfterChange": "47e6c23b4d9cd01731a90e3caeea33ca53a15516", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testParameter() throws Exception", "signatureAfterChange": "      @Test     public void testParameter() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputFinalLocalVariable.java\"), expected);", "+        verify(checkConfig, getPath(\"InputFinalLocalVariable.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03bd865d3575d469241f048e7b6ddecc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testWithMultipleChecks() throws Exception", "signatureAfterChange": "      @Test     public void testWithMultipleChecks() throws Exception", "diff": ["-        verify(checker, getPath(\"InputCorrectJavaDocParagraphCheck.java\"));", "+        verify(checker, getPath(\"InputCorrectJavaDocParagraph.java\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03ebd0eeb0ac206e3477b986f90e4b2e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "      @Test     public void testGenerics1() throws Exception", "signatureAfterChange": "      @Test     public void testGenerics1() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"TestGenerics.java\"), expected);", "+        verify(checkConfig, getPath(\"InputTestGenerics.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0432fdaa13ea082f4d18011e4733396b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputEmptyCatchBlockCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputEmptyCatchBlock.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04529993d1ea261652e7d40651c0d9d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "9dd69b267b626af533ddf8bc0d37b4fd3744fa6e", "commitAfterChange": "57b908199dfa5c2c9bf9388d92925ccfb312812f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testNoFile()", "signatureAfterChange": "      @Test     public void testNoFile()", "diff": ["-                \"unable to parse \" + fn + \" - Attribute \\\"files\\\" is required and must be specified for element type \\\"suppress\\\".\",", "+                \"Unable to parse \" + fn + \" - Attribute \\\"files\\\" is required and must be specified for element type \\\"suppress\\\".\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "045430be20317c348fc9ba236a9827c8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheckTest.java", "commitBeforeChange": "5a00ab2f307813f7acd9a7bcb06267289eb72b24", "commitAfterChange": "b7e931711c6cb6d522c63ae02b350fc7f3f1ab50", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testGeneralLogic() throws Exception", "signatureAfterChange": "      @Test     public void testGeneralLogic() throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"coding/InputVariableDeclarationUsageDistanceCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputVariableDeclarationUsageDistanceCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "046272f9d9c3169e027e8f075e295858", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyRightCurlyTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void leftCurlyAnnotationsTest() throws Exception", "signatureAfterChange": "      @Test     public void leftCurlyAnnotationsTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"LeftCurlyInput_Annotations\");", "+        final String filePath = builder.getFilePath(\"InputLeftCurlyAnnotations\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04c5363b351222120e3c9d4f7211bfd7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ClassCouplingCheckTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputClassCoupling.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04f761cf857b890c3d53f128a1cd2938", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testWIthMultilineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWIthMultilineBody()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest14.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda14.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05177250d5c3846af310ce7cd0405cdc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testAllowMultipleFieldInClass() throws Exception", "signatureAfterChange": "      @Test     public void testAllowMultipleFieldInClass() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputEmptyLineSeparatorMultipleFieldsInClass.java\"), expected);", "+        verify(checkConfig, getPath(\"InputEmptyLineSeparatorMultipleFieldsInClass.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05c653def555472339f79994cce1d7f4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testWithFewArgsWithoutTypeOneLineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithFewArgsWithoutTypeOneLineBody()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest8.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda8.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05c92534215c08e2ae61973afa0d7ba7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule525nonconstantfieldnames/MemberNameTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05eb42b82397b9ccd6e7282e08128dd5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheckTest.java", "commitBeforeChange": "61f8aaca7bcb8750909bcc95eb5c27c72c7d824d", "commitAfterChange": "bf529ef600fa9ef2034d0412c198b2121f2b94f2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCatch()         throws Exception", "signatureAfterChange": "      @Test     public void testCatch()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputLeftCurlyOther.java\"), expected);", "+        verify(checkConfig, getPath(\"checks/naming/InputCatchOnly.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06d6788dee3dcbc2cc3b766c2efff1f4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule333orderingandsoacing/CustomImportOrderTest.java", "commitBeforeChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "commitAfterChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void customImportTest2() throws Exception", "signatureAfterChange": "      @Test     public void customImportTest2() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"CustomImportOrderInput_2\");", "+        final String filePath = builder.getFilePath(\"InputCustomImportOrder2\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0785600e7e93e864da44368d839852a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule487modifiers/ModifierOrderTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07c68578217643013075d8ff679d2db8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testFalsePositive() throws Exception", "signatureAfterChange": "      @Test     public void testFalsePositive() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputFinalLocalVariableCheckFalsePositive.java\"), expected);", "+        verify(checkConfig, getPath(\"InputFinalLocalVariableFalsePositive.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0842daf0ef20505a6264c2a35917ec7d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testWithoutArgsOneLineLambdaBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithoutArgsOneLineLambdaBody()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest2.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08442c71b2989e95afe9d69f94adf362", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/naming/PackageNameCheckTest.java", "commitBeforeChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "commitAfterChange": "6125beffc437f970eae276b4a6542265c6547784", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testSpecified()         throws Exception", "signatureAfterChange": "     public void testSpecified()         throws Exception", "diff": ["-            \"6:9: Name 'com.puppycrawl.tools.checkstyle' must match pattern '[A-Z]+'.\",", "+            \"6:42: Name 'com.puppycrawl.tools.checkstyle' must match pattern '[A-Z]+'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08670e1a17cd87a2d550972a8889f465", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule488numericliterals/UpperEllTest.java", "commitBeforeChange": "dba6c944cdbf9acfbb40b9a2d8e6315fb14d87f0", "commitAfterChange": "daae0431d190cceceee62d7163a4e67e2c622aa2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void upperEllTest() throws Exception", "signatureAfterChange": "      @Test     public void upperEllTest() throws Exception", "diff": ["-        String filePath = builder.getFilePath(\"UpperEllInput\");", "+        String filePath = builder.getFilePath(\"InputUpperEll\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09fa0b247a810488b4c67b61d3336621", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule333orderingandsoacing/CustomImportOrderTest.java", "commitBeforeChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "commitAfterChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void customImportTest1() throws Exception", "signatureAfterChange": "      @Test     public void customImportTest1() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"CustomImportOrderInput_1\");", "+        final String filePath = builder.getFilePath(\"InputCustomImportOrder1\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a0efe5353325dd15c8681b097d34303", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtilsTest.java", "commitBeforeChange": "aef1f36b5a01b0a8da6557fd82c11a07baf350b2", "commitAfterChange": "49a23751eb6bffdfba94d72454d7676c9f85adc5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testInlineTagMethodRef()", "signatureAfterChange": "      @Test     public void testInlineTagMethodRef()", "diff": ["-            \"/** {@link  List#add(Object)}\",", "+            \"/** {@link List#add(Object)}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a33d03a48339cc85404e65e717e4cd1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "96d3aaea19657ac233d9a57b46a52bc0b35eda95", "commitAfterChange": "5f3eced2d85c10407b5ba1f38c06af05715d9bd7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testMinimumDepth()         throws Exception", "signatureAfterChange": "      @Test     public void testMinimumDepth()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputIllegalTokens.java\"), expected);", "+        verify(checkConfig, getPath(\"checks/InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a54e45b008404e728f7ea53f922d2a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void allowedAnnotationsTest() throws Exception", "signatureAfterChange": "      @Test     public void allowedAnnotationsTest() throws Exception", "diff": ["-        verify(config, getPath(\"AllowedAnnotations.java\"), expected);", "+        verify(config, getPath(\"InputAllowedAnnotations.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a7f57c36ffc2d03dc54024dfa4c2b04", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule461verticalwhitespace/EmptyLineSeparatorTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ac6dd9be7492fb20a5a91da297e6444", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheckTest.java", "commitBeforeChange": "7e5e919ce7db115c5893fa23e07a3cf1acfc3f10", "commitAfterChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testEnum() throws Exception", "signatureAfterChange": "      @Test     public void testEnum() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"sizes/MethodCountCheckInput2.java\"), expected);", "+        verify(checkConfig, getPath(\"MethodCountCheckInput2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b7c3138033b9048861f455d7b00f89a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java", "commitBeforeChange": "f0ea60f77bbc5e524320b042d7a90eefbf2bd00d", "commitAfterChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public static int getTokenId(String name)", "signatureAfterChange": "     public static int getTokenId(String name)", "diff": ["-            throw new IllegalArgumentException(\"Unknown javdoc token name. Given name \" + name);", "+            throw new IllegalArgumentException(\"Unknown javadoc token name. Given name \" + name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ba9fb531f8bb902c45ff9dc6b2645e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "4d0adc9deed7f3df296f8016941414ec1600955b", "commitAfterChange": "1edf43ab329e96db26a3ed3a4f4a1abdaa4b1a3a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void testTags()         throws Exception", "signatureAfterChange": "      public void testTags()         throws Exception", "diff": ["-            filepath + \":129: '{' should be on the previous line.\",", "+            filepath + \":129:5: '{' should be on the previous line.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c4e96371e555cf0ffb8952782fa3223", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "commitAfterChange": "7e5e919ce7db115c5893fa23e07a3cf1acfc3f10", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testTypeNamesForFivePermittedCapitalLetters() throws Exception", "signatureAfterChange": "      @Test     public void testTypeNamesForFivePermittedCapitalLetters() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"naming/InputAbbreviationAsWordInTypeNameCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c6e498808ad90d691268adb4d0c2980", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWarningsFilterTest.java", "commitBeforeChange": "df28ab043954d0d4da8b1999ea97d95ccffe8c21", "commitAfterChange": "93b8c38299bcb9a140967ff086b9d2758d66cac0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void verifySuppressed(Configuration aFilterConfig,             String... aSuppressed) throws Exception", "signatureAfterChange": "      private void verifySuppressed(Configuration aFilterConfig,             String... aSuppressed) throws Exception", "diff": ["-            getPath(\"filters/InputSuppressWarningsFilter.java\"),", "+            getPath(\"InputSuppressWarningsFilter.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c75bc5fe5e3bc4a5e432c4bb31a2137", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/HeaderCheckTest.java", "commitBeforeChange": "81dab0c14131c72066f28cf8dbbddd1db3ea3a38", "commitAfterChange": "eb7b7bfd3e63a926c3f3b2801d519caa0e1fffc3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testRegexpHeader()         throws Exception", "signatureAfterChange": "      public void testRegexpHeader()         throws Exception", "diff": ["-            \"3:1: Line does not match expected header line of '// Created: 2002'.\"", "+            \"3: Line does not match expected header line of '// Created: 2002'.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d4c3660f643c489ca26adbe158de2d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsTest.java", "commitBeforeChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "commitAfterChange": "fdc81723bdfd6af2ffc2c901cd8dd5b2fe948267", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r     @Test\r     public void testSingleNoUncheckedTokens() throws Exception", "signatureAfterChange": "\r     @Test\r     public void testSingleNoUncheckedTokens() throws Exception", "diff": ["-            \"82:37: The warning 'unchecked' cannot be suppressed at this location.\",\r", "+            \"82:47: The warning 'unchecked' cannot be suppressed at this location.\",\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d55e3f6982206bd9f63a6769fdb3700", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/NestedTryDepthCheckTest.java", "commitBeforeChange": "e04583198aa79d3769a8995f859e8a27e51695d0", "commitAfterChange": "8373932ee5c17bb9514f6d040f398b1563b7b89b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"coding/InputNestedTryDepth.java\"), expected);", "+        verify(checkConfig, getPath(\"InputNestedTryDepth.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0da4095f3c963d4899edd34e444a48fd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void allowEmptyMethods() throws Exception", "signatureAfterChange": "      @Test     public void allowEmptyMethods() throws Exception", "diff": ["-               getPath(\"whitespace/InputWhitespaceAround.java\"),", "+               getPath(\"checks/whitespace/InputWhitespaceAround.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dd8c4d028bbc0ef1715170df6ceb03f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testWithMultipleChecks() throws Exception", "signatureAfterChange": "      @Test     public void testWithMultipleChecks() throws Exception", "diff": ["-        verify(checker, getPath(\"javadoc/InputCorrectJavaDocParagraphCheck.java\"), expected);", "+        verify(checker, getPath(\"InputCorrectJavaDocParagraphCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e3379de3bca989c5a2781e1271abc9f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/RegexpCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      @Test     public void testIgnoreCommentsInlineEnd() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCommentsInlineEnd() throws Exception", "diff": ["-            \"20: Line matches the illegal pattern '\" + illegal + \"'.\",", "+            \"22: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e7a2dd86db00c3e2abfd60909fb791a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "6970485b88600343de72af03a6bf87cf78e6cf55", "commitAfterChange": "4d0adc9deed7f3df296f8016941414ec1600955b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void testSimple()         throws Exception", "signatureAfterChange": "      public void testSimple()         throws Exception", "diff": ["-            filepath + \":137: method name 'ALL_UPPERCASE_METHOD' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "+            filepath + \":137:10: method name 'ALL_UPPERCASE_METHOD' must match pattern '^[a-z][a-zA-Z0-9]*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e7b55f9ff9621d41321ebd8af53eae9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "647e2e37cbc79c3f5a84ebd722527ce8fb081bfe", "commitAfterChange": "7f0ec275798d5dccae5aa51530415b71f65d30cd", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testForceLineBreakBefore2() throws Exception", "signatureAfterChange": "      @Test     public void testForceLineBreakBefore2() throws Exception", "diff": ["-            \"50:48: '}' should have line break before.\",", "+            \"52:56: '}' should have line break before.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e89387f81f61597be9e294da5c10ff3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "commitAfterChange": "7e5e919ce7db115c5893fa23e07a3cf1acfc3f10", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testTypeNamesForThreePermittedCapitalLettersWithOverriddenMethod() throws Exception", "signatureAfterChange": "      @Test     public void testTypeNamesForThreePermittedCapitalLettersWithOverriddenMethod() throws Exception", "diff": ["-                getPath(\"naming/InputAbbreviationAsWordInTypeNameCheckOverridableMethod.java\"), expected);", "+                getPath(\"InputAbbreviationAsWordInTypeNameCheckOverridableMethod.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ea6eb4d0e44a51a628bd901d4b0bf79", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testStyleCompact() throws Exception", "signatureAfterChange": "      @Test     public void testStyleCompact() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"DifferentUseStyles.java\"), expected);", "+        verify(checkConfig, getPath(\"InputDifferentUseStyles.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ecc34d33b78991da1dd09795fa94de6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java", "commitBeforeChange": "b95ced53e3c47c9a9db5022767a18e714fc3bebd", "commitAfterChange": "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void testTypeParameters() throws Exception", "signatureAfterChange": "      public void testTypeParameters() throws Exception", "diff": ["-            \"7: Unused @param tag for '<D>'.\",", "+            \"7:4: Unused @param tag for '<D>'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0eef4ce6b2af824c72282c90c5b128d5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SingleLineJavadocCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void simpleTest() throws Exception", "signatureAfterChange": "      @Test     public void simpleTest() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputSingleLineJavadocCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSingleLineJavadoc.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0efcedc35625d7405ecf89c845aa66e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingCtorCheckTest.java", "commitBeforeChange": "d74f5bb61c9d8a45af94f5539b2001d25e1f3076", "commitAfterChange": "50a13cf5bd17bf65f82c719fcdc8e7429d59e898", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testMissingSwitchDefault() throws Exception", "signatureAfterChange": "      @Test     public void testMissingSwitchDefault() throws Exception", "diff": ["-            \"3:1: \" + getCheckMessage(MSG_KEY),", "+            \"3: \" + getCheckMessage(MSG_KEY),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f359391a5392c77412f1b31ca66c583", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testIgnoreCommentsInlineEnd() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCommentsInlineEnd() throws Exception", "diff": ["-            \"20: Line matches the illegal pattern '\" + illegal + \"'.\",", "+            \"22: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f4bf054d6c15b592b6c1f3a386a32aa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule332nolinewrap/NoLineWrapTest.java", "commitBeforeChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "commitAfterChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void goodLineLength() throws Exception", "signatureAfterChange": "      @Test     public void goodLineLength() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"LineLengthInput2\");", "+        final String filePath = builder.getFilePath(\"InputLineLength\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fab8fd2b87ccbc86f84debd8682b63c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "      @Test     public void dollarInLink()         throws IOException", "signatureAfterChange": "      @Test     public void dollarInLink()         throws IOException", "diff": ["-        String filename = getDocPath(\"DollarInLink.txt\");", "+        String filename = getDocPath(\"InputDollarInLink.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fc65e92c71c43c26db92d74d7817251", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testAnnotationsWithoutDefaultValues() throws Exception", "signatureAfterChange": "      @Test     public void testAnnotationsWithoutDefaultValues() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"AnnotationsUseStyleParams.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAnnotationsUseStyleParams.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ff4727bee80613611a6e181b64a60a0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheckTest.java", "commitBeforeChange": "10352e146f048c7938af5949925b0eb19781a0b1", "commitAfterChange": "bee6b0a1ec26b04e2d738221bdce4bd159b278d2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testInlineRegexpHeader() throws Exception", "signatureAfterChange": "      @Test     public void testInlineRegexpHeader() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputScopeAnonInner.java\"), expected);", "+        verify(checkConfig, getPath(\"InputRegexpHeader7.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "103fd8d4470509c638a04932ae26e1a9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForIteratorPadCheckTest.java", "commitBeforeChange": "4a0b798adbce23e37a9d2445079503cb8d624eed", "commitAfterChange": "ee8467d36723b5b3562b4f101e84950a4320ecf1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testSpaceOption() throws Exception", "signatureAfterChange": "      public void testSpaceOption() throws Exception", "diff": ["-            \"23:30: ';' is not followed by whitespace.\",", "+            \"23:31: ';' is not followed by whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1094beb8541099bd37e64c5e33fcfc58", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     @Test     public void testCompactNoUncheckedTokens() throws Exception", "signatureAfterChange": "     @Test     public void testCompactNoUncheckedTokens() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsCompact.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsCompact.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "118b95d3a890adf780dda44c0b100155", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule522typenames/TypeNameTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "118cb5337d65dbb36f357f2e750a07be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testThrees() throws Exception", "signatureAfterChange": "      @Test     public void testThrees() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"MethodCountCheckInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputMethodCount.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11a9e4df22fbc4247e13da1224867dcf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d92ceb81a67bb10b98f5ce305f839ba535a1c6ee", "commitAfterChange": "9aa8268e473071cbe26aa9d3a8631f1902e3fef0", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      public void testPackageHtml()         throws Exception", "signatureAfterChange": "      public void testPackageHtml()         throws Exception", "diff": ["-            packageHtmlPath + \":0: missing package documentation file.\",", "+            packageHtmlPath + \":0: Missing package documentation file.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11ae289c34f89929bb0f0fc5881ba5f4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule525nonconstantfieldnames/MemberNameTest.java", "commitBeforeChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "commitAfterChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void simpleTest() throws Exception", "signatureAfterChange": "      @Test     public void simpleTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"MemberNameInput_Simple\");", "+        final String filePath = builder.getFilePath(\"InputMemberNameSimple\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11f4044a03891660228e9d13a86912ce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void test() throws Exception", "signatureAfterChange": "      @Test     public void test() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ComplexityCheckTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputComplexityCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1256d6ab50789c9af7ca8d53c1919587", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testAllowNoEmptyLineBetweenFields() throws Exception", "signatureAfterChange": "      @Test     public void testAllowNoEmptyLineBetweenFields() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputEmptyLineSeparatorCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputEmptyLineSeparator.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12ba0db3a2823fe3d4fb15a2a8d27bea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "79aa188fdfd66a71eb48bb27f48a910da5108221", "commitAfterChange": "4f16cb85a987f5d53b7055f4c96c15c76937c9ce", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "      @Test     public void testStaticOnDemandGroupsOrderAbove() throws Exception", "signatureAfterChange": "      @Test     public void testStaticOnDemandGroupsOrderAbove() throws Exception", "diff": ["-            \"8: \" + getCheckMessage(MSG_ORDERING, \"org.abego.treelayout.Configuration.*\"),", "+            \"8: \" + getCheckMessage(MSG_ORDERING, \"org.antlr.v4.runtime.CommonToken.*\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12d0cd5578adb08f9f7d424b68438971", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void allowEmptyMethods() throws Exception", "signatureAfterChange": "      @Test     public void allowEmptyMethods() throws Exception", "diff": ["-        verify(checkConfig,", "-               getPath(\"checks/whitespace/InputWhitespaceAround.java\"),", "-               expected);", "+        verify(checkConfig, getPath(\"InputWhitespaceAround.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13905f0c854d8b455a47059d8ef17f51", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputVariableDeclarationUsageDistanceCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputVariableDeclarationUsageDistance.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13bd6f2290f11d9f1114fba941562174", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputEmptyLineSeparatorCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputEmptyLineSeparatorCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14ece4433518afc3cf768a0568012650", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule43onestatement/OneStatementPerLineTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "151379a15f99f68ea003eb8ee26156f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/NestedIfDepthCheckTest.java", "commitBeforeChange": "9509710845bf8d8ef67755be7e097d540d43b026", "commitAfterChange": "e04583198aa79d3769a8995f859e8a27e51695d0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"coding/InputNestedIfDepth.java\"), expected);", "+        verify(checkConfig, getPath(\"InputNestedIfDepth.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "153a7044e129ffe0d53202c5fa02c7ff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefaultOperation()         throws Exception", "signatureAfterChange": "      @Test     public void testDefaultOperation()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAvoidStarImportCheck.java\"),", "+        verify(checkConfig, getPath(\"InputAvoidStarImport.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15aa89669423b50362087d8720e700ce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/XMLLoggerTest.java", "commitBeforeChange": "068d52958b713b1ba034b9004b84ef5a21bfaadf", "commitAfterChange": "26c4b0998f72a2bab7a72c8cd5b51bd6889154c6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testAddError()         throws IOException", "signatureAfterChange": "      public void testAddError()         throws IOException", "diff": ["-            {\"<error line=\\\"1\\\" column=\\\"1\\\" severity=\\\"warning\\\" message=\\\"key\\\"/>\"};", "+            {\"<error line=\\\"1\\\" column=\\\"1\\\" severity=\\\"error\\\" message=\\\"key\\\"/>\"};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1699d9dae4c8c686527a29ad8940b543", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule21filename/OuterTypeFilenameTest.java", "commitBeforeChange": "fbd3d53641368f6bcacc7b8015d434625fda116b", "commitAfterChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void outerTypeFilenameTest2() throws Exception", "signatureAfterChange": "      @Test     public void outerTypeFilenameTest2() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"OuterTypeFilenameInput_2\");", "+        final String filePath = builder.getFilePath(\"InputOuterTypeFilename2\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "170fe82b95424c675ec1b67da0632e09", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractTypeAwareCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testWithoutLogErrors() throws Exception", "signatureAfterChange": "      @Test     public void testWithoutLogErrors() throws Exception", "diff": ["-            verify(config, getPath(\"javadoc/InputLoadErrors.java\"), expected);", "+            verify(config, getPath(\"InputLoadErrors.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17a5935f8b118389d98420ddffea92bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Test     public void testAnnotations() throws Exception", "signatureAfterChange": "      @Test     public void testAnnotations() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputFromGuava.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputFromGuava.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17f60ba94dcb2b4b6a784452a40dbe09", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheckTest.java", "commitBeforeChange": "ae3860dcdddada15b09dba876a5b8a06652656c2", "commitAfterChange": "6a8584adbd9ad33ae2b89c0deb6481f62dd14257", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testImmutableSpecifiedSameTypeName() throws Exception", "signatureAfterChange": "      @Test     public void testImmutableSpecifiedSameTypeName() throws Exception", "diff": ["-                 + \"com.puppycrawl.tools.checkstyle.InetSocketAddress\");", "+                 + \"com.puppycrawl.tools.checkstyle.checks.design.InetSocketAddress\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1826c30a70a60be15914d8dc8708dc99", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilterTest.java", "commitBeforeChange": "df28ab043954d0d4da8b1999ea97d95ccffe8c21", "commitAfterChange": "93b8c38299bcb9a140967ff086b9d2758d66cac0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private void verifySuppressed(Configuration filterConfig,             String... suppressed)         throws Exception", "signatureAfterChange": "      private void verifySuppressed(Configuration filterConfig,             String... suppressed)         throws Exception", "diff": ["-               getPath(\"filters/InputSuppressWithNearbyCommentFilter.java\"),", "+               getPath(\"InputSuppressWithNearbyCommentFilter.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1876b61f8068f200636ceed871ecf8b0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testIgnoreEnhancedForColon() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreEnhancedForColon() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputWhitespaceAround.java\"),", "+        verify(checkConfig, getPath(\"checks/whitespace/InputWhitespaceAround.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1886e1236d672dd9d575202158b39d43", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testTokens() throws Exception", "signatureAfterChange": "      @Test     public void testTokens() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputCommentsIndentationCheckSurroundingCode.java\"), expected);", "+        verify(checkConfig, getPath(\"InputCommentsIndentationSurroundingCode.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18e380458971b80fa20cec163e04cac5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "5703b6e33550d6e9706f42e253c2cc7d83a358bf", "commitAfterChange": "1818ae8ab189515f24a711aa3fc520377bd71380", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void testTags()         throws Exception", "signatureAfterChange": "      public void testTags()         throws Exception", "diff": ["-            filepath + \":11:17: Variable 'mMissingJavadoc' missing Javadoc.\",", "+            filepath + \":11:17: Missing a Javadoc comment.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "191f9dc7dd6b74d52dc7ae0570a5b53a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "4d61249805613e93ddd896cde44ba191c65b3f07", "commitAfterChange": "2dec3ca7aec1fc33f66c6864c39aa104739992aa", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws BuildException", "diff": ["-            log(\"Using configuration\" + mConfigLocation, Project.MSG_VERBOSE);", "+            log(\"Using configuration \" + mConfigLocation, Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "196cfa572eda9a501b3ac2fd772f8a01", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/NonEmptyAtclauseDescriptionCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCheck()             throws Exception", "signatureAfterChange": "      @Test     public void testCheck()             throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputNonEmptyAtclauseDescriptionCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputNonEmptyAtclauseDescriptionCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a106b2fbb1dc4183004d8b17eae28d6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 22, "signatureBeforeChange": "      @Test     public void testArrays() throws Exception", "signatureAfterChange": "      @Test     public void testArrays() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputArrays.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputArrays.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a3466b3160ee57e9d71abe88d520062", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testNestedClass() throws Exception", "signatureAfterChange": "      @Test     public void testNestedClass() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputOuterTypeFilenameCheck1.java\"), expected);", "+        verify(checkConfig, getPath(\"InputOuterTypeFilename1.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a7251fff33958e476f623d205b1e1a6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/AnnotationTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testAnnotationOnConstructorCall()         throws Exception", "signatureAfterChange": "      @Test     public void testAnnotationOnConstructorCall()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputAnnotationsTest7.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputAnnotations7.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b102926c7cc86d2e71fc462e6f69425", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheckTest.java", "commitBeforeChange": "e6f4dad587d318233ff9343c5b66d831b7035fcf", "commitAfterChange": "5f047efa20b47b4ff65e42a8f6989832d01d4b34", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "     @Test     public void testDefault() throws Exception", "diff": ["-            \"45:43: \" + getCheckMessage(MSG_KEY, 2, 1),", "+            \"48:43: \" + getCheckMessage(MSG_KEY, 2, 1),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b89770c2d5fc5ba6a9595526885266e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/comments/CommentsTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private static DetailAST buildInput2()", "signatureAfterChange": "     private static DetailAST buildInput2()", "diff": ["-        identClassName.setText(\"InputCommentsTest_2\");", "+        identClassName.setText(\"InputComments2\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bba81d23cd9552b4c9021da8f26d3fc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testHeader() throws Exception", "signatureAfterChange": "      @Test     public void testHeader() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputEmptyLineSeparatorCheckHeader.java\"), expected);", "+        verify(checkConfig, getPath(\"InputEmptyLineSeparatorCheckHeader.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c09fb59953fa658f1d7f4c9bbdf7e69", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/DefaultMethodsTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testSwitch()         throws Exception", "signatureAfterChange": "      @Test     public void testSwitch()         throws Exception", "diff": ["-        verify(checkConfig,", "-                getPath(\"grammars/java8/InputDefaultMethodsTest2.java\"),", "-                expected);", "+        verify(checkConfig, getPath(\"InputDefaultMethodsTest2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c16c1b1203c445aa92cb3b492574ed6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "e4a14e401a5839c6f4fa7238f5ba73255e488dba", "commitAfterChange": "b59648d60599bc197de618af5406c5e46978bbda", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testMissingConfigParent()", "signatureAfterChange": "      public void testMissingConfigParent()", "diff": ["-                        + \"root \\\"module\\\".\"));", "+                        + \"root \\\"module\\\".:7:38\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c1ff794053dba8f9b2e0bbe802df12d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheckTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testDefaultForIterator()         throws Exception", "signatureAfterChange": "      @Test     public void testDefaultForIterator()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/whitespace/InputForWhitespace.java\"), expected);", "+        verify(checkConfig, getPath(\"InputForWhitespace.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c353ebeb2f90976e3d54f24fe612770", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputIllegalCatchCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalCatch.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ca0b49170d73a26471651120cb4b67a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "41758923b8e4dcb9aae1ee967407826bda38d97b", "commitAfterChange": "e464c231eccec72f964131d9aeb5e49982c4b3bb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "       public void testInvalidMethodWithChecker()         throws Exception", "signatureAfterChange": "       public void testInvalidMethodWithChecker()         throws Exception", "diff": ["-            // todo: 152 -- 8 should be 12", "-            \"152: method call child at indentation level 6 not at correct indentation, 8\",", "+            \"152: method call child at indentation level 6 not at correct indentation, 12\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cd6a6aa9b9c338dee62932cad5a5265", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Test     public void testParensAlways() throws Exception", "signatureAfterChange": "     @Test     public void testParensAlways() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"DifferentUseStyles.java\"), expected);", "+        verify(checkConfig, getPath(\"InputDifferentUseStyles.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d1d7c68a554629c2e9eb5d974026aeb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 38, "signatureBeforeChange": "      @Test     public void testValidTryWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testValidTryWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputValidTryIndent.java\");", "+        final String fname = getPath(\"InputValidTryIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d2981153799d803aff3e0838422ff65", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule333orderingandsoacing/CustomImportOrderTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d3526b667abf7168840b4ee7b138ff0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "c977a637ce4d87bd3643420ec52c39e724dbdde3", "commitAfterChange": "ff5ffa96021281519cc087dfd35609a06340f349", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          public void testIntegersOnly()         throws Exception", "signatureAfterChange": "          public void testIntegersOnly()         throws Exception", "diff": ["-            \"131:32: '378' is a magic number.\",", "+            \"131:20: '378' is a magic number.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d4826634c14971fc816f8faf01200a5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefaultTokensLineWrapping() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultTokensLineWrapping() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/NoLineWrapBadInput.java\"), expected);", "+        verify(checkConfig, getPath(\"NoLineWrapBadInput.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d59747bb2d1634be97d3fbd95305cf7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "9dd69b267b626af533ddf8bc0d37b4fd3744fa6e", "commitAfterChange": "57b908199dfa5c2c9bf9388d92925ccfb312812f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testNoCheckNoId()", "signatureAfterChange": "      @Test     public void testNoCheckNoId()", "diff": ["-                \"unable to parse \" + fn + \" - missing checks and id attribute\",", "+                \"Unable to parse \" + fn + \" - missing checks and id attribute\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d833de26f0000d5d8dd40da256d4daf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/PackageNameCheckTest.java", "commitBeforeChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "commitAfterChange": "fa5884271348f0cfaaa1160e18028d37845af4dd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testSpecified()         throws Exception", "signatureAfterChange": "      @Test     public void testSpecified()         throws Exception", "diff": ["-            \"6:9: \" + getCheckMessage(MSG_INVALID_PATTERN, \"com.puppycrawl.tools.checkstyle\", pattern),", "+            \"6:9: \" + getCheckMessage(MSG_INVALID_PATTERN, \"com.puppycrawl.tools.checkstyle.checks.naming\", pattern),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d8a9131726188cdd5fdae4c41dec34b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      public void testInner()         throws Exception", "signatureAfterChange": "      public void testInner()         throws Exception", "diff": ["-            filepath + \":24:16: variable 'data' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\",", "+            filepath + \":24:16: variable name 'data' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1efd1f8db624e8fcb1a9d7a80c2b4cb4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 32, "signatureBeforeChange": "      @Test     public void testInvalidMethodWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testInvalidMethodWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputInvalidMethodIndent.java\");", "+        final String fname = getPath(\"InputInvalidMethodIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f30c9015a75d436b7970e8e51dd9d5c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "93322bd3df79ad1b1763eceebd5205a3d57c7178", "commitAfterChange": "c876d2431e56405371b93c814de33c350766266d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void realExecute()", "signatureAfterChange": "     private void realExecute()", "diff": ["-                    \"Must specify atleast one of 'file' or nested 'fileset'.\",", "+                    \"Must specify at least one of 'file' or nested 'fileset'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f47d69145b609205dd449b176bf06eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheckTest.java", "commitBeforeChange": "3c11c78c126d1cbc0e5efa213ce555467616f091", "commitAfterChange": "3ad60e5742797c5db87de1c8325b001c13543553", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testWithMultipleAnnotations() throws Exception", "signatureAfterChange": "      @Test     public void testWithMultipleAnnotations() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"annotation/InputAnnotationLocationCheckTest2.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAnnotationLocationCheckTest2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fdb9f1e8ff36a70cbeac11f714b5ec9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/grammars/GeneratedJava14LexerTest.java", "commitBeforeChange": "94d1f628659401c5d9cce3a8fdb82958af2be626", "commitAfterChange": "9522d455457b7beb187b9403cfbc57d253379aad", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testUnexpectedChar() throws IOException, Exception", "signatureAfterChange": "     public void testUnexpectedChar() throws IOException, Exception", "diff": ["-            \"8:10: Got an exception - unexpected char: 0xA9\",", "+            \"8:10: Got an exception - Unexpected character 0xa9 in identifier\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ff752b66bdec1bd017770f4d770d9a0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testConditions() throws Exception", "signatureAfterChange": "      @Test     public void testConditions() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputNeedBracesCheckTest.java\"), expected);", "+        verify(checkConfig, getPath(\"InputNeedBraces.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "201044b15ff65f734a68ecb896e1d3ef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheckTest.java", "commitBeforeChange": "96d3aaea19657ac233d9a57b46a52bc0b35eda95", "commitAfterChange": "5f3eced2d85c10407b5ba1f38c06af05715d9bd7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testImmutableSpecifiedSameTypeName() throws Exception", "signatureAfterChange": "      @Test     public void testImmutableSpecifiedSameTypeName() throws Exception", "diff": ["-                 \"com.puppycrawl.tools.checkstyle.coding.GregorianCalendar,\"", "+                 \"com.puppycrawl.tools.checkstyle.checks.coding.GregorianCalendar,\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2025fb389b5c47c2f3446c57cec84f9f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "04483a77e8f20ef67db6467c477a7fcba129eef6", "commitAfterChange": "4564aecb5c1d694591feef433ce067d74e36d823", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void startElement(String aNamespaceURI,                              String aLocalName,                              String aQName,                              Attributes aAtts)             throws SAXException", "signatureAfterChange": "     public void startElement(String aNamespaceURI,                              String aLocalName,                              String aQName,                              Attributes aAtts)             throws SAXException", "diff": ["-        if (aQName.equals(\"config\")) {", "+        if (aQName.equals(\"module\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "202713718591e49b9b312d1f6df81201", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/FileSetCheckLifecycleTest.java", "commitBeforeChange": "44cc8b53c90117295151ea6723f859287f51dda5", "commitAfterChange": "5aacffce41a8f8d6b79f0b4a771e3e5ce03c0d02", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testProcessCallsFinishBeforeCallingDestroy() throws Exception", "signatureAfterChange": "      @Test     public void testProcessCallsFinishBeforeCallingDestroy() throws Exception", "diff": ["-        verify(checker, getPath(\"InputScopeAnonInner.java\"), expected);", "+        verify(checker, getPath(\"checks/InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20e55c992a9fe1aefaa6b1897932260d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceBeforeCheck.java", "commitBeforeChange": "35e4a41c1027d5078cbaf0d3988a21c12a2daf7e", "commitAfterChange": "e55435125ea57e96f0bf876dd13e78b0ae02cd52", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-                log(aAST.getLineNo(), before, \"ws.preceeded\", aAST.getText());", "+                log(aAST.getLineNo(), before, \"ws.preceded\", aAST.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20e7e2c3a9feced746782b38e3267913", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule341onetoplevel/OneTopLevelClassTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2136af7c330eb1be35f169fee5c92e38", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4861blockcommentstyle/CommentsIndentationTest.java", "commitBeforeChange": "4346d41010a729e14991e30706bdb16ff18ff39a", "commitAfterChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCommentIsInsideEmptyBlock() throws Exception", "signatureAfterChange": "      @Test     public void testCommentIsInsideEmptyBlock() throws Exception", "diff": ["-            builder.getFilePath(\"CommentsIndentationInEmptyBlockInput\");", "+            builder.getFilePath(\"InputCommentsIndentationInEmptyBlock\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "217d19e9431296bcf83e7e19dc08e361", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Test     public void testAndroidStyle() throws Exception", "signatureAfterChange": "      @Test     public void testAndroidStyle() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputAndroidStyle.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputAndroidStyle.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21f572d9d6235c100621feeefbced197", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testFirstSentence() throws Exception", "signatureAfterChange": "      @Test     public void testFirstSentence() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputJavadocStyleCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJavadocStyle.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21fb2128c53dde0f521770f0deeb7f3a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalThrowsCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Test     public void testIgnoreMethodNames() throws Exception", "signatureAfterChange": "     @Test     public void testIgnoreMethodNames() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputIllegalThrowsCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalThrows.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2204beccad8232300451b72f1690b3fe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AvoidNestedBlocksCheck.java", "commitBeforeChange": "896b671caa5a43043921186a4e64be2ef876f331", "commitAfterChange": "c1863ec7e27f4e8ad2a0f83b9514a3cea35737c6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            // TODO: i18n", "-            log(aAST.getLineNo(), aAST.getColumnNo(), \"Avoid nested blocks\");", "+            log(aAST.getLineNo(), aAST.getColumnNo(), \"block.nested\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "221516ea7955784e5db65a2d15e0208f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java", "commitBeforeChange": "96d3aaea19657ac233d9a57b46a52bc0b35eda95", "commitAfterChange": "5f3eced2d85c10407b5ba1f38c06af05715d9bd7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAcceptableTokens()         throws Exception", "signatureAfterChange": "      @Test     public void testAcceptableTokens()         throws Exception", "diff": ["-            verify(checkConfig, getPath(\"InputHiddenField.java\"), expected);", "+            verify(checkConfig, getPath(\"InputMain.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2246cc878822f81d3fae884a7735ec0c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PropertyCacheFileTest.java", "commitBeforeChange": "5dffb5a301b2605c730d1de3f312ba4a7f95355e", "commitAfterChange": "4d8d047f465f9eb101390da63ee62a735fbedba5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testInCache() throws IOException", "signatureAfterChange": "      @Test     public void testInCache() throws IOException", "diff": ["-        Configuration config = new DefaultConfiguration(\"myname\");", "+        Configuration config = new DefaultConfiguration(\"myName\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2277f2aa670451b8a76d0d73a1fcc493", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheckTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void test1322879() throws Exception", "signatureAfterChange": "      @Test     public void test1322879() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/whitespace/InputWhitespaceAround.java\"),", "+        verify(checkConfig, getPath(\"InputWhitespaceAround.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22a37381c1550a7dd05428ce2725ca79", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java", "commitBeforeChange": "44cc8b53c90117295151ea6723f859287f51dda5", "commitAfterChange": "5aacffce41a8f8d6b79f0b4a771e3e5ce03c0d02", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testTags() throws Exception", "signatureAfterChange": "      @Test     public void testTags() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/javadoc/InputTags.java\"), expected);", "+        verify(checkConfig, getPath(\"InputTags.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "234ef9f20333359576831e590a192f37", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/MethodParamPadTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void operatorWrapTest() throws Exception", "signatureAfterChange": "      @Test     public void operatorWrapTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"MethodParamPadInput\");", "+        final String filePath = builder.getFilePath(\"InputMethodParamPad\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23ab58243df8af20a76639edb8631cd9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"JavaNCSSCheckTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJavaNCSS.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23d542679683691b83fb3041687ed5c7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     @Test     public void testExpandedAll() throws Exception", "signatureAfterChange": "     @Test     public void testExpandedAll() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsExpanded.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsExpanded.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24add5b8a27593fa141281cc4a732826", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule21filename/OuterTypeFilenameTest.java", "commitBeforeChange": "fbd3d53641368f6bcacc7b8015d434625fda116b", "commitAfterChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void outerTypeFilenameTest3() throws Exception", "signatureAfterChange": "      @Test     public void outerTypeFilenameTest3() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"OuterTypeFilenameInput_3\");", "+        final String filePath = builder.getFilePath(\"InputOuterTypeFilename3\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24ccb53ee3bd5e994e13f20645b674e5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testStyleCompactNoArray() throws Exception", "signatureAfterChange": "      @Test     public void testStyleCompactNoArray() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"DifferentUseStyles.java\"), expected);", "+        verify(checkConfig, getPath(\"InputDifferentUseStyles.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "258fbe471cf2f3bef8d355cecc93b252", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testTypeNamesForThreePermittedCapitalLettersWithOverriddenMethod() throws Exception", "signatureAfterChange": "      @Test     public void testTypeNamesForThreePermittedCapitalLettersWithOverriddenMethod() throws Exception", "diff": ["-                getPath(\"InputAbbreviationAsWordInTypeNameCheckOverridableMethod.java\"), expected);", "+                getPath(\"InputAbbreviationAsWordInTypeNameOverridableMethod.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25afbfddf64e0a0966b7557375871fdd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testDefaultSettings()         throws Exception", "signatureAfterChange": "      @Test     public void testDefaultSettings()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputJavadocStyleCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJavadocStyle.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "260e79041d7567b4c19dfde0ee73f544", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule231filetab/FileTabCharacterTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2624e4342de87923edbfc15c0a688c67", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "79aa188fdfd66a71eb48bb27f48a910da5108221", "commitAfterChange": "4f16cb85a987f5d53b7055f4c96c15c76937c9ce", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      @Test     public void testStaticGroupsOrderBottom() throws Exception", "signatureAfterChange": "      @Test     public void testStaticGroupsOrderBottom() throws Exception", "diff": ["-            \"8: \" + getCheckMessage(MSG_ORDERING, \"org.abego.treelayout.Configuration.AlignmentInLevel\"),", "+            \"8: \" + getCheckMessage(MSG_ORDERING, \"org.antlr.v4.runtime.Recognizer.EOF\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "262c782f20d3402fc1b6cf1e0d23f519", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "f7f377f5065c11d31b29fb8df19a14220ffb8500", "commitAfterChange": "0dbbf3b83a9832eb381db6dc777916e9d7fa676f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testMissingConfigParent()", "signatureAfterChange": "      @Test     public void testMissingConfigParent()", "diff": ["-                        + \"root \\\"module\\\".:7:38\"));", "+                        + \"root \\\"module\\\".:8:38\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26b4facc5c8d0fdae7d98d5d6fbe0596", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtilsTest.java", "commitBeforeChange": "aef1f36b5a01b0a8da6557fd82c11a07baf350b2", "commitAfterChange": "49a23751eb6bffdfba94d72454d7676c9f85adc5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testTags()", "signatureAfterChange": "      @Test     public void testTags()", "diff": ["-            \" * {@link List }, {@link  List link text }\",", "+            \" * {@link List }, {@link List link text }\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26f80b168975fc41795974eb76696e9e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheckTest.java", "commitBeforeChange": "5a00ab2f307813f7acd9a7bcb06267289eb72b24", "commitAfterChange": "b7e931711c6cb6d522c63ae02b350fc7f3f1ab50", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDistance() throws Exception", "signatureAfterChange": "      @Test     public void testDistance() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputVariableDeclarationUsageDistanceCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputVariableDeclarationUsageDistanceCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27140d78772653f38a08f98c13f05224", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     @Test     public void testBadAnnotationOverrideJ5Compatible() throws Exception", "signatureAfterChange": "     @Test     public void testBadAnnotationOverrideJ5Compatible() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"BadAnnotationOverride.java\"), expected);", "+        verify(checkConfig, getPath(\"InputBadAnnotationOverride.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27511bb68ee03d38c94a44f678fe9228", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void testWithSumDefaultMsg() throws Exception", "signatureAfterChange": "      @Test     public void testWithSumDefaultMsg() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputReturnFromFinallyCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputReturnFromFinally.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "275cdee96ce4fe160d5b111e45b29006", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheckTest.java", "commitBeforeChange": "d6b61b75ad66e02e8745eaef9adfbda70fdfda68", "commitAfterChange": "115a5df29dd256bb946c950b8f80d02a28f57edf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testMultiCaseClass() throws Exception", "signatureAfterChange": "      @Test     public void testMultiCaseClass() throws Exception", "diff": ["+", "-            getPath(\"checks/coding/OneStatementPerLineCheckInput.java\"),", "+            getPath(\"OneStatementPerLineCheckInput.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27f2745eda932e664ac8e0943c31dcf7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 66, "signatureBeforeChange": "      @Test     public void testAnonymousClassInMethod() throws Exception", "signatureAfterChange": "      @Test     public void testAnonymousClassInMethod() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputAnonymousClassInMethod.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputAnonymousClassInMethod.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "283744cfd5702939ecd6ca1a6eeb74cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testAllowNewlineParagraph() throws Exception", "signatureAfterChange": "      @Test     public void testAllowNewlineParagraph() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputIncorrectJavaDocParagraphCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIncorrectJavaDocParagraph.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "285d1584d595526d97a6fd030b9b400b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testExcludes()         throws Exception", "signatureAfterChange": "      @Test     public void testExcludes()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAvoidStarImportCheck.java\"),", "+        verify(checkConfig, getPath(\"InputAvoidStarImport.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29616368933400411dfb5f64a8b7aa16", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "         public Tag(int line, int column, String text, boolean on)             throws ConversionException", "signatureAfterChange": "         public Tag(int line, int column, String text, boolean on)             throws ConversionException", "diff": ["-                    \"unable to parse expanded coont \" + format,", "+                    \"unable to parse expanded comment \" + format,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "297094c02f2e396e434be40db39d540e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testEverythingMixed() throws Exception", "signatureAfterChange": "      @Test     public void testEverythingMixed() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"DifferentUseStyles.java\"), expected);", "+        verify(checkConfig, getPath(\"InputDifferentUseStyles.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a5a514f706d72a64b65f80945220440", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputUnusedImportsCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputUnusedImports.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a80f9439540f542231fd631644669dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "commitAfterChange": "78e9ce870170ca3ef88fd78f8e0af0681c958eb3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public TreeWalker()", "signatureAfterChange": "     public TreeWalker()", "diff": ["-            System.getProperty(\"checkstyle.use.recursive.algorithm\", \"true\");", "+            System.getProperty(\"checkstyle.use.recursive.algorithm\", \"false\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a9d0041944b0af36bc4bb3c89b02bb8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheckTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testEmptyForIterator() throws Exception", "signatureAfterChange": "      @Test     public void testEmptyForIterator() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/whitespace/InputForWhitespace.java\"), expected);", "+        verify(checkConfig, getPath(\"InputForWhitespace.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b3f62cf9ae5c0d1a508dbb43885214b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "c977a637ce4d87bd3643420ec52c39e724dbdde3", "commitAfterChange": "ff5ffa96021281519cc087dfd35609a06340f349", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "          public void testIgnoreNegativeOctalHex()          throws Exception", "signatureAfterChange": "          public void testIgnoreNegativeOctalHex()          throws Exception", "diff": ["-              \"131:32: '378' is a magic number.\",", "+              \"131:20: '378' is a magic number.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b55d6ba7b3c1691dd44baa12a26a11c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalThrowsCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     @Test     public void testIgnoreOverriddenMethods() throws Exception", "signatureAfterChange": "     @Test     public void testIgnoreOverriddenMethods() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputIllegalThrowsCheckIgnoreOverriddenMethods.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalThrowsIgnoreOverriddenMethods.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ba1aef86a8241e5a4b664d351858f8c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4861blockcommentstyle/CommentsIndentationTest.java", "commitBeforeChange": "4346d41010a729e14991e30706bdb16ff18ff39a", "commitAfterChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testCommentIsInsideSwitchBlock() throws Exception", "signatureAfterChange": "      @Test     public void testCommentIsInsideSwitchBlock() throws Exception", "diff": ["-            builder.getFilePath(\"CommentsIndentationInSwitchBlockInput\");", "+            builder.getFilePath(\"InputCommentsIndentationInSwitchBlock\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c0485e2228379fb7ff42966f41683b1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testDefaults() throws Exception", "signatureAfterChange": "      @Test     public void testDefaults() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"MethodCountCheckInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputMethodCount.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c1687a36b14e56f8314b992538c91bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheckTest.java", "commitBeforeChange": "a2f74423b6db21eeb1ed1725e6cfc2b83c44113b", "commitAfterChange": "de4485a22bfe8eafc3c2e273fd328a0221d0ff9e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testImmutableStarImportNoWarn() throws Exception", "signatureAfterChange": "      @Test     public void testImmutableStarImportNoWarn() throws Exception", "diff": ["-        checkConfig.addAttribute(\"immutableClassNames\", \"com.google.common.collect.ImmutableSet\");", "+        checkConfig.addAttribute(\"immutableClassCanonicalNames\",", "+                 \"com.google.common.collect.ImmutableSet\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c295acf76765790514a12cf5752db5c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheckTest.java", "commitBeforeChange": "9c488c1f512ffcc58af433842c992bd3f85b2d63", "commitAfterChange": "f47587c9fb66cf46fbd2eb5691449cda6d551ecb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-            \"41:8: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.Input15Extensions\"),", "+            \"41:8: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.checks.Input15Extensions\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c566adfd8bab6f9a4da8f7dc2e79ed4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/HideUtilityClassConstructorCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testProtectedCtor() throws Exception", "signatureAfterChange": "      @Test     public void testProtectedCtor() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"HideUtilityClassConstructor.java\"), expected);", "+        verify(checkConfig, getPath(\"InputHideUtilityClassConstructor.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c708e17e0c039d0691b91cb80415582", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 63, "signatureBeforeChange": "      @Test     public void testSwitchCustom() throws Exception", "signatureAfterChange": "      @Test     public void testSwitchCustom() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputSwitchCustom.java\"),", "+        verifyWarns(checkConfig, getPath(\"InputSwitchCustom.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cac8a2c8e778fdca4aaf47c05cab5f1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": "      @Test     public void testAnonClassesFromGuava() throws Exception", "signatureAfterChange": "      @Test     public void testAnonClassesFromGuava() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputFromGuava2.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputFromGuava2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d4e20eddad0aa6bc1145d28d2630272", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void test1322879() throws Exception", "signatureAfterChange": "      @Test     public void test1322879() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ParenPadWithSpace.java\"),", "+        verify(checkConfig, getPath(\"InputParenPadWithSpace.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2da539460178d960dde43a40f83ec1ed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheckTest.java", "commitBeforeChange": "4ac32a7c0cf72ee35630432ce260293f80d886b8", "commitAfterChange": "b29ca6b5f676e92243186abdba84a7501baea1bd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "     @Test     public void testDefault() throws Exception", "diff": ["-            \"40:8: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.Defn\"),", "+            \"40:8: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.Definitions\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dcb2d21304c7e2042184d2af06487aa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheckTest.java", "commitBeforeChange": "bd8a1a545fd1bc19d5f84c5061c5383796a7c588", "commitAfterChange": "5dfb3f5a9e0206f9f80f9f067faa3dbe7766cef9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r     @Test\r     public void testBadFile() throws Exception", "signatureAfterChange": "\r \r     @Test\r     public void testBadFile() throws Exception", "diff": ["-                + \" (The system cannot find the file specified.)\"\r", "+                + \" (The system cannot find the file specified)\"\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dd32a07399144d369ae230c9a8e3f66", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheckTest.java", "commitBeforeChange": "90a2d8e96aaa6b3d70dd1eb2efa1bb80a367582c", "commitAfterChange": "3520a35d4608730a02bd68808d87b677f26a26d3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testNumberFormatException() throws Exception", "signatureAfterChange": "      @Test     public void testNumberFormatException() throws Exception", "diff": ["-            \"1: Javadoc comment at column 52 has parse error. Details: no viable \"", "+            \"3: Javadoc comment at column 52 has parse error. Details: no viable \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e868e5d29703d6fc04b919d2070c761", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void authorWithMailto()         throws IOException", "signatureAfterChange": "      @Test     public void authorWithMailto()         throws IOException", "diff": ["-        String filename = getDocPath(\"AuthorWithMailto.txt\");", "+        String filename = getDocPath(\"InputAuthorWithMailto.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ea401898a1b2d3c84818b55e263c8d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testIgnoreEnhancedForColon() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreEnhancedForColon() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/whitespace/InputWhitespaceAround.java\"),", "+        verify(checkConfig, getPath(\"InputWhitespaceAround.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2edc889cac26fb685029080f79883fec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "44cc8b53c90117295151ea6723f859287f51dda5", "commitAfterChange": "5aacffce41a8f8d6b79f0b4a771e3e5ce03c0d02", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void allowedAnnotationsTest() throws Exception", "signatureAfterChange": "      @Test     public void allowedAnnotationsTest() throws Exception", "diff": ["-        verify(config, getPath(\"javadoc/AllowedAnnotations.java\"), expected);", "+        verify(config, getPath(\"AllowedAnnotations.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f1d45420cd477b8d9568349f76bdd9a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule21filename/OuterTypeFilenameTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f578ca19eb3f5a3d9383b15d4b90f9b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheckTest.java", "commitBeforeChange": "3d81ece0258005a3264d550f8cffeedc27a3765c", "commitAfterChange": "47e6c23b4d9cd01731a90e3caeea33ca53a15516", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"coding/InputFinalLocalVariable.java\"), expected);", "+        verify(checkConfig, getPath(\"InputFinalLocalVariable.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30ba7fd4a5614b431333b47a4dc63b85", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testAllowNoEmptyLineBetweenFields() throws Exception", "signatureAfterChange": "      @Test     public void testAllowNoEmptyLineBetweenFields() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputEmptyLineSeparatorCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputEmptyLineSeparatorCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30bfa083672e45da101206e4d9df6fac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule72thesummaryfragment/SummaryJavadocTest.java", "commitBeforeChange": "4cdfe5c510b5a9975320aee2f58ebc9357ad6d68", "commitAfterChange": "6eb080a3d20e0b856627b45617bca934845a7ed4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCorrect() throws Exception", "signatureAfterChange": "      @Test     public void testCorrect() throws Exception", "diff": ["-        final Configuration checkConfig = getCheckConfig(\"SummaryJavadocCheck\");", "+        final Configuration checkConfig = getCheckConfig(\"SummaryJavadoc\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3126a2ef8b2c8edcc7fd4122f56da1fc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule332nolinewrap/NoLineWrapTest.java", "commitBeforeChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "commitAfterChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void goodLineWrapTest() throws Exception", "signatureAfterChange": "      @Test     public void goodLineWrapTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"NoLineWrap_Good\");", "+        final String filePath = builder.getFilePath(\"InputNoLineWrapGood\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "314e7c28493f080c1c055b9704f9d756", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "9dd69b267b626af533ddf8bc0d37b4fd3744fa6e", "commitAfterChange": "57b908199dfa5c2c9bf9388d92925ccfb312812f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testBadInt()", "signatureAfterChange": "      @Test     public void testBadInt()", "diff": ["-                ex.getMessage().startsWith(\"number format exception \" + fn + \" - \"));", "+                ex.getMessage().startsWith(\"Number format exception \" + fn + \" - \"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3170cc383b8615541087b185e24273a8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheckTest.java", "commitBeforeChange": "e23953e9e80b2eddfd710eaec97b1357921d756c", "commitAfterChange": "11dc88a9c149838d94f62965004452f3cf98d8cc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testEnhancedForLoopVariableTrue() throws Exception", "signatureAfterChange": "      @Test     public void testEnhancedForLoopVariableTrue() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputModifiedControlVariableEnhancedForLoopVariable.java\"), expected);", "+        verify(checkConfig, getPath(\"InputModifiedControlVariableEnhancedForLoopVariable.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31728ed85293dd302d4e9d394ad1c602", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     @Test     public void testCompactAll() throws Exception", "signatureAfterChange": "     @Test     public void testCompactAll() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsCompact.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsCompact.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31b9681f6a191b04903407ea53913765", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheckTest.java", "commitBeforeChange": "10352e146f048c7938af5949925b0eb19781a0b1", "commitAfterChange": "bee6b0a1ec26b04e2d738221bdce4bd159b278d2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testRegexpHeaderURL() throws Exception", "signatureAfterChange": "      @Test     public void testRegexpHeaderURL() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputScopeAnonInner.java\"), expected);", "+        verify(checkConfig, getPath(\"InputRegexpHeader7.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "322c4520293838118e7953f6501156fc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/Java7DiamondTest.java", "commitBeforeChange": "2fe5ade8b31c0c7b32fab4e25f1ec73c9ab31b8d", "commitAfterChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testCanParse()         throws Exception", "signatureAfterChange": "      @Test     public void testCanParse()         throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"grammars/InputJava7Diamond.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJava7Diamond.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "324bd5c32bb1e07f211630305a95a413", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoaderTest.java", "commitBeforeChange": "4be4abc6360709a49b231277a2513905332f9e50", "commitAfterChange": "f747835b6b4bd894eed2ef17eb059a003fb4d988", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test(expected = CheckstyleException.class)     public void testWrongFormatURI() throws CheckstyleException, URISyntaxException", "signatureAfterChange": "      @Test(expected = CheckstyleException.class)     public void testWrongFormatURI() throws CheckstyleException, URISyntaxException", "diff": ["-                        new URI(\"aaa://src/test/resources/com/puppycrawl/tools/checkstyle/import-control_complete.xml\"));", "+                        new URI(\"aaa://src/test/resources/com/puppycrawl/tools/checkstyle/imports/import-control_complete.xml\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32d66ce4a411c8f1144ab10f35f2720e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/MethodParamPadCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void test1322879() throws Exception", "signatureAfterChange": "      @Test     public void test1322879() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputWhitespaceAround.java\"),", "+        verify(checkConfig, getPath(\"InputWhitespaceAround.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32ea556a175676ebc833dcabddd96fdc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "da5d8c09d268342836be6e6b7b4e45403d542b81", "commitAfterChange": "49314771b622e7e10bde3d13f8c38170da96a3db", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      public void testIgnoreAccess()         throws Exception", "signatureAfterChange": "      public void testIgnoreAccess()         throws Exception", "diff": ["-            filepath + \":24: variable 'data' must match pattern '^[A-Z]([A-Z0-9_]*[A-Z0-9])?$'.\",", "+            filepath + \":24: variable 'data' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32f28f49cef2c5bf6e89b643f579ca8e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheckTest.java", "commitBeforeChange": "96d3aaea19657ac233d9a57b46a52bc0b35eda95", "commitAfterChange": "5f3eced2d85c10407b5ba1f38c06af05715d9bd7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testImmutableDefaultValueSameTypeName() throws Exception", "signatureAfterChange": "      @Test     public void testImmutableDefaultValueSameTypeName() throws Exception", "diff": ["-            \"9:75: \" + getCheckMessage(MSG_KEY, \"calendar3\"),", "+            \"9:82: \" + getCheckMessage(MSG_KEY, \"calendar3\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3319b679cba8ab1f000e5ddeb6e39f98", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "9c488c1f512ffcc58af433842c992bd3f85b2d63", "commitAfterChange": "f47587c9fb66cf46fbd2eb5691449cda6d551ecb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testDefault()         throws Exception", "signatureAfterChange": "      @Test     public void testDefault()         throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"checks/InputIllegalTokens.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "334dee285c1d8bdfeb7fb7d4d3beab93", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputIncorrectSummaryJavaDocCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIncorrectSummaryJavaDocCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3385a1758d53c0192780b2fc5ff210d5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java", "commitBeforeChange": "115a5df29dd256bb946c950b8f80d02a28f57edf", "commitAfterChange": "20d51043cb49e913cae8e72a80434e729419f408", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testOnFileWithCommentOnly() throws Exception", "signatureAfterChange": "      @Test     public void testOnFileWithCommentOnly() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputWithCommentOnly.java\"), expected);", "+        verify(checkConfig, getPath(\"InputWithCommentOnly.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33920575e41f84ffef095b59535c2162", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule44cloumunlimit/LineLengthTest.java", "commitBeforeChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "commitAfterChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void lineLengthTest() throws Exception", "signatureAfterChange": "      @Test     public void lineLengthTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"LineLengthInput2\");", "+        final String filePath = builder.getFilePath(\"InputLineLength\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "355b3c65d2dc3c6dd34e4d0e5e7a152c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/UnusedImportsCheckTest.java", "commitBeforeChange": "e71b877a424e1e6e247a2ef6825c742a94afd68f", "commitAfterChange": "6f4247181beca3530b5c2dc762d9c5c6a018a06c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testDefault()         throws Exception", "signatureAfterChange": "      public void testDefault()         throws Exception", "diff": ["-            \"8:45: Unused import - com.puppycrawl.tools.checkstyle.Configuration.\",", "+            \"8:45: Unused import - com.puppycrawl.tools.checkstyle.GlobalProperties.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "355f78673bb053667ff9d037fa8417c0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule713atclauses/AtclauseOrderTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3588f78c9038d38259478ed06e8d7673", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/MethodParamPadTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35afd111b921ffd4704d7b030216154b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/MissingSwitchDefaultCheckTest.java", "commitBeforeChange": "d3ca2e08b473b7617d8b312904820c6ec16cc903", "commitAfterChange": "9837e5b5c12faeba864f635eda7ffc0f5003aaf5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testMissingSwitchDefault() throws Exception", "signatureAfterChange": "      public void testMissingSwitchDefault() throws Exception", "diff": ["-            \"15: switch without \\\"default\\\" clause.\",", "+            \"15:9: switch without \\\"default\\\" clause.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35caa22e4d17a70d305208b6a30b02de", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testReturnFromFinally() throws Exception", "signatureAfterChange": "      @Test     public void testReturnFromFinally() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputReturnFromFinallyCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputReturnFromFinally.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36decbf8e98c5080bf2ca495910c2c90", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "commitAfterChange": "7e5e919ce7db115c5893fa23e07a3cf1acfc3f10", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testTypeAndVariablesAndMethodNames() throws Exception", "signatureAfterChange": "      @Test     public void testTypeAndVariablesAndMethodNames() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"naming/InputAbbreviationAsWordInTypeNameCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36ecbd35d97549d42076132ae94300d5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/GeneratedJava14LexerTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          @Test     public void testSemicolonBetweenImports() throws Exception", "signatureAfterChange": "          @Test     public void testSemicolonBetweenImports() throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"SemicolonBetweenImports.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputSemicolonBetweenImports.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36f5de787796a6858e6625c076f51167", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheckTest.java", "commitBeforeChange": "8787efc822fd27a4a3f3dd795c34525ccc08d297", "commitAfterChange": "2fe9f501d86b6e70aa64f4474ae0863bb0b928d5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testMethodsOnly() throws Exception", "signatureAfterChange": "      @Test     public void testMethodsOnly() throws Exception", "diff": ["-            \"12:9: Method call to 'method1' needs \\\"this.\\\".\",", "+            \"14:9: Method call to 'method1' needs \\\"this.\\\".\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37099568bdaf1c4fe591506f7af736d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testEnum() throws Exception", "signatureAfterChange": "      @Test     public void testEnum() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"MethodCountCheckInput2.java\"), expected);", "+        verify(checkConfig, getPath(\"InputMethodCount2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "373465a3cc9d6c3aac24fb55f683c7fc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyRightCurlyTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void rightCurlyTestAlone() throws Exception", "signatureAfterChange": "      @Test     public void rightCurlyTestAlone() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"RightCurlyInput_Other\");", "+        final String filePath = builder.getFilePath(\"InputRightCurlyOther\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "376c0e56b2f31609ab40e96218dacfe3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testTypeAndVariablesAndMethodNames() throws Exception", "signatureAfterChange": "      @Test     public void testTypeAndVariablesAndMethodNames() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeName.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37b17becae66930a1c8a74b43e475573", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/TypecastParenPadCheckTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void test1322879() throws Exception", "signatureAfterChange": "      @Test     public void test1322879() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/whitespace/InputWhitespaceAround.java\"),", "+        verify(checkConfig, getPath(\"InputWhitespaceAround.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38138fed2327e6bff5020fe09ea84027", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule32packagestate/LineLengthTest.java", "commitBeforeChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "commitAfterChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void lineLengthTest() throws Exception", "signatureAfterChange": "      @Test     public void lineLengthTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"LineLengthInput2\");", "+        final String filePath = builder.getFilePath(\"InputLineLength\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38217081003e0f8f8c604dc90973a3a4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testIncorrect() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrect() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputIncorrectSummaryJavaDocCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIncorrectSummaryJavaDocCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3826ab3722bb6974bb23eea0da58dbce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "44cc8b53c90117295151ea6723f859287f51dda5", "commitAfterChange": "5aacffce41a8f8d6b79f0b4a771e3e5ce03c0d02", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": "      @Test     public void testSkipCertainMethods() throws Exception", "signatureAfterChange": "      @Test     public void testSkipCertainMethods() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputJavadocMethodIgnoreNameRegex.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJavadocMethodIgnoreNameRegex.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38e4ee7fd67a09261f37656f3edecdf5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/RedundantImportCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testUnnamedPackage()         throws Exception", "signatureAfterChange": "      @Test     public void testUnnamedPackage()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputRedundantImportCheck_UnnamedPackage.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputRedundantImport_UnnamedPackage.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39d0d8d09d220568b4841626741d180f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "c977a637ce4d87bd3643420ec52c39e724dbdde3", "commitAfterChange": "ff5ffa96021281519cc087dfd35609a06340f349", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          public void testIgnoreNone()         throws Exception", "signatureAfterChange": "          public void testIgnoreNone()         throws Exception", "diff": ["-            \"131:32: '378' is a magic number.\",", "+            \"131:20: '378' is a magic number.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a0c03908da117a3e5d39c19318a43f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4841indentation/IndentationTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void correctForTest() throws Exception", "signatureAfterChange": "      @Test     public void correctForTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"IndentationCorrectForAndParameterInput\");", "+        final String filePath = builder.getFilePath(\"InputIndentationCorrectForAndParameter\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a2cb90d2636df5a3d57128cc1056b0a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "96d3aaea19657ac233d9a57b46a52bc0b35eda95", "commitAfterChange": "5f3eced2d85c10407b5ba1f38c06af05715d9bd7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault()         throws Exception", "signatureAfterChange": "     @Test     public void testDefault()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputIllegalTokens.java\"), expected);", "+        verify(checkConfig, getPath(\"checks/InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a38851873e2b1958ea1bd902b25ddbb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/PackageNameCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testSpecified()         throws Exception", "signatureAfterChange": "     @Test     public void testSpecified()         throws Exception", "diff": ["-            \"6:42: Name 'com.puppycrawl.tools.checkstyle' must match pattern '[A-Z]+'.\",", "+            \"6:9: Name 'com.puppycrawl.tools.checkstyle' must match pattern '[A-Z]+'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a5ac7a615c644612e919a2a4345da51", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testStaticInit() throws Exception", "signatureAfterChange": "      @Test     public void testStaticInit() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ExecutableStatementCountInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputExecutableStatementCount.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3aa9af523bb61293aa1a61dbbc3835af", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/OuterTypeNumberCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "     @Test     public void testDefault() throws Exception", "diff": ["-            \"6:34: Outer types defined is 3 (max allowed is 1).\",", "+            \"6:1: Outer types defined is 3 (max allowed is 1).\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3adc632c8617ae4424a162e647ba5a67", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "commitAfterChange": "7e5e919ce7db115c5893fa23e07a3cf1acfc3f10", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testTypeAndVariablesAndMethodNamesWithIgnoresStatic() throws Exception", "signatureAfterChange": "      @Test     public void testTypeAndVariablesAndMethodNamesWithIgnoresStatic() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"naming/InputAbbreviationAsWordInTypeNameCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b2a5069e0f77c27f86a663593e8ecf5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/NestedTryDepthCheckTest.java", "commitBeforeChange": "e04583198aa79d3769a8995f859e8a27e51695d0", "commitAfterChange": "8373932ee5c17bb9514f6d040f398b1563b7b89b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testCustomizedDepth() throws Exception", "signatureAfterChange": "      @Test     public void testCustomizedDepth() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputNestedTryDepth.java\"), expected);", "+        verify(checkConfig, getPath(\"InputNestedTryDepth.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b6d7d875c4f1f355d3d961df46fcc06", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "9c488c1f512ffcc58af433842c992bd3f85b2d63", "commitAfterChange": "f47587c9fb66cf46fbd2eb5691449cda6d551ecb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testMessage()         throws Exception", "signatureAfterChange": "      @Test     public void testMessage()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/InputIllegalTokens.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3be60e069cc03b2e6a9d1450f931d584", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyCatchBlockTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c095ea4be10bea5c0f4bbce0fdd0f77", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     @Test     public void testExpandedNoUncheckedUnusedAll() throws Exception", "signatureAfterChange": "     @Test     public void testExpandedNoUncheckedUnusedAll() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsExpanded.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsExpanded.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c9215b72473be630a7dccdc0ac51ab5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheckTest.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDefault() throws Exception", "signatureAfterChange": "     public void testDefault() throws Exception", "diff": ["-            \"3:17: Variable 'bar' explicitly initialized to 'null' (default value for its type).\",", "+            \"3:20: Variable 'bar' explicitly initialized to 'null' (default value for its type).\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c9402c5b3162642e085dc8f968e1823", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "commitAfterChange": "7e5e919ce7db115c5893fa23e07a3cf1acfc3f10", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testNPE() throws Exception", "signatureAfterChange": "      @Test     public void testNPE() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"naming/AbstractMultisetSetCountTester.java\"), expected);", "+        verify(checkConfig, getPath(\"AbstractMultisetSetCountTester.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ce64cf6b5efbb11f31602c21afcba76", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/HeaderCheckTest.java", "commitBeforeChange": "81dab0c14131c72066f28cf8dbbddd1db3ea3a38", "commitAfterChange": "eb7b7bfd3e63a926c3f3b2801d519caa0e1fffc3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testStaticHeader()             throws Exception", "signatureAfterChange": "      public void testStaticHeader()             throws Exception", "diff": ["-            \"1:1: Missing a header - not enough lines in file.\"", "+            \"1: Missing a header - not enough lines in file.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cef47b2c2aa6b3743fd836ba0058b58", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testSingleDefault() throws Exception", "signatureAfterChange": "     @Test     public void testSingleDefault() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsSingle.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsSingle.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cf62b7894c0e3f6c99d824a8bd10080", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheckTest.java", "commitBeforeChange": "e7547bb7ddccec6737cea118a41864fc349ea1d2", "commitAfterChange": "d220d7c3cc74490c7f2923f2ea85d00133afe98c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testNumberFormatException() throws Exception", "signatureAfterChange": "      @Test     public void testNumberFormatException() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputTestNumberFomatException.java\"), expected);", "+        verify(checkConfig, getPath(\"javadoc/InputTestNumberFormatException.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d0a354402ff3922f1882c8c6866f4f7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/MissingSwitchDefaultCheckTest.java", "commitBeforeChange": "aabcf13ebd3d19c96a71c5f168dd8d6a3e811acb", "commitAfterChange": "87bdf9e553f7e5b622fddf0cb703e99105edd3d7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testMissingSwitchDefault() throws Exception", "signatureAfterChange": "      public void testMissingSwitchDefault() throws Exception", "diff": ["-            \"15: switch without \\\"default\\\" clause\",", "+            \"15: switch without \\\"default\\\" clause.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d41b2c05901101e3a6660b308d67435", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/doclets/CheckDocsDoclet.java", "commitBeforeChange": "93322bd3df79ad1b1763eceebd5205a3d57c7178", "commitAfterChange": "c876d2431e56405371b93c814de33c350766266d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static boolean start(RootDoc aRoot) throws IOException", "signatureAfterChange": "     public static boolean start(RootDoc aRoot) throws IOException", "diff": ["-                + \" apply to your sourcecode. Below is an alphabetical\"", "+                + \" apply to your source code. Below is an alphabetical\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d5c7b7183d4aec7cfb2ba969b28232a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "343e946b076a5344e380c76e5b3ea23438b6fc93", "commitAfterChange": "e3a48d1527341456a798c3f0c1986de6898a8c60", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 37, "signatureBeforeChange": "      @Test     public void testBraceAdjustment() throws Exception", "signatureAfterChange": "      @Test     public void testBraceAdjustment() throws Exception", "diff": ["-            \"24: if rcurly at indentation level 8 not at correct indentation, 10\",", "+            \"24: 'if rcurly' have incorrect indentation level 8, expected level should be 10.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dc5a96fa7f423785f9a7cead856ed43", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheckTest.java", "commitBeforeChange": "d6b61b75ad66e02e8745eaef9adfbda70fdfda68", "commitAfterChange": "115a5df29dd256bb946c950b8f80d02a28f57edf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testWithMultilineStatements() throws Exception", "signatureAfterChange": "      @Test     public void testWithMultilineStatements() throws Exception", "diff": ["-            getPath(\"checks/coding/OneStatementPerLineCheckInput2.java\"),", "+            getPath(\"OneStatementPerLineCheckInput2.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e03552120e72872a440735825024bbd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4842fallthrow/FallThroughTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e2a9a53d09775dbb87dde8c5fd01e96", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/AnnotationTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testAnnotationInGeneric()         throws Exception", "signatureAfterChange": "      @Test     public void testAnnotationInGeneric()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputAnnotationsTest6.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputAnnotations6.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e66739f0a25f8418a476514a3e99cd1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testLegalAbstractClassNames() throws Exception", "signatureAfterChange": "      @Test     public void testLegalAbstractClassNames() throws Exception", "diff": ["-                + \"'com.puppycrawl.tools.checkstyle.checks.coding.InputIllegalType.AbstractClass'\"", "+                + \"'com.puppycrawl.tools.checkstyle.coding.InputIllegalType.AbstractClass'\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e81cf0c72496fd8e165aac3c59a9e45", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule528typevariablenames/MethodTypeParameterNameTest.java", "commitBeforeChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "commitAfterChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testMethodDefault() throws Exception", "signatureAfterChange": "      @Test     public void testMethodDefault() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"MethodTypeParameterNameInput\");", "+        final String filePath = builder.getFilePath(\"InputMethodTypeParameterName\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3eb2e1d7b7e7f0bc9242147bc8d66528", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4842fallthrough/FallThroughTest.java", "commitBeforeChange": "4346d41010a729e14991e30706bdb16ff18ff39a", "commitAfterChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void fallThroughTest() throws Exception", "signatureAfterChange": "      @Test     public void fallThroughTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"FallThroughInput\");", "+        final String filePath = builder.getFilePath(\"InputFallThrough\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ede75e174ef43e1d89354b8e60e70f3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testAllowStaticMemberImports() throws Exception", "signatureAfterChange": "      @Test     public void testAllowStaticMemberImports() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAvoidStarImportCheck.java\"), expected2);", "+        verify(checkConfig, getPath(\"InputAvoidStarImport.java\"), expected2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f5a711103824762aced081cbef702a5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/FileSetCheckLifecycleTest.java", "commitBeforeChange": "9c488c1f512ffcc58af433842c992bd3f85b2d63", "commitAfterChange": "f47587c9fb66cf46fbd2eb5691449cda6d551ecb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testTranslation() throws Exception", "signatureAfterChange": "      @Test     public void testTranslation() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/InputIllegalTokens.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fec17bef5dd7d075f312559c41fe56a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "82d5ab82d8ebb09f5bf79b02130004fb58c02613", "commitAfterChange": "3cb031f767f6635748e05e2bd030d7f2314e981d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testLoadFromURL() throws CheckstyleException", "signatureAfterChange": "      @Test     public void testLoadFromURL() throws CheckstyleException", "diff": ["-        final FilterSet fc = SuppressionsLoader.loadSuppressions(\"https://raw.github.com/checkstyle/checkstyle/master/src/test/resources/com/puppycrawl/tools/checkstyle/suppressions_none.xml\");", "+        final FilterSet fc = SuppressionsLoader.loadSuppressions(\"http://checkstyle.sourceforge.net/files/suppressions_none.xml\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "403b85519805815249c1ea55e1b6560f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/LineCommentAtTheEndOfFileTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCanParse()         throws Exception", "signatureAfterChange": "      @Test     public void testCanParse()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"LineCommentAtTheEndOfFile.java\"),", "+        verify(checkConfig, getPath(\"InputLineCommentAtTheEndOfFile.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "403d100b9f67d2a80f022b190691a9a8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule713atclauses/NonEmptyAtclauseDescriptionTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40517e9aac7a9ff09d76f9b661ac0f79", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java", "commitBeforeChange": "4be4abc6360709a49b231277a2513905332f9e50", "commitAfterChange": "f747835b6b4bd894eed2ef17eb059a003fb4d988", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testOne() throws Exception", "signatureAfterChange": "     @Test     public void testOne() throws Exception", "diff": ["-        checkConfig.addAttribute(\"file\", \"src/test/resources/com/puppycrawl/tools/checkstyle/import-control_one.xml\");", "+        checkConfig.addAttribute(\"file\", \"src/test/resources/com/puppycrawl/tools/checkstyle/imports/import-control_one.xml\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40756b06a5edbda8b15fb73cafeb5254", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testMultiCaseClass() throws Exception", "signatureAfterChange": "      @Test     public void testMultiCaseClass() throws Exception", "diff": ["-            getPath(\"OneStatementPerLineCheckInput.java\"),", "+            getPath(\"InputOneStatementPerLine.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "408c793a49731efed83d3f3ada5363bf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "44cc8b53c90117295151ea6723f859287f51dda5", "commitAfterChange": "5aacffce41a8f8d6b79f0b4a771e3e5ce03c0d02", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testTags() throws Exception", "signatureAfterChange": "      @Test     public void testTags() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/javadoc/InputTags.java\"), expected);", "+        verify(checkConfig, getPath(\"InputTags.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "408faeffb1dc93c8af6f39792e12672b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/doclets/CheckDocsDoclet.java", "commitBeforeChange": "ca1c33e3112d9217e89eec82bbcd589381d48715", "commitAfterChange": "42c035aadd0084b38c8b466ad8c63fed4beffb0f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static boolean start(RootDoc root) throws IOException", "signatureAfterChange": "     public static boolean start(RootDoc root) throws IOException", "diff": ["-        final File checksIndexFile = new File(destDir, \"availablechecks.xml\");", "+        final File checksIndexFile = new File(destDir, \"checks.xml\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40a57030275010842002833d47801cb1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testNoBitwise() throws Exception", "signatureAfterChange": "      @Test     public void testNoBitwise() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"BooleanExpressionComplexityCheckTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputBooleanExpressionComplexity.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40dd896740ffb7d6fd44f7466cfae704", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/DefaultMethodsTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testSwitch()         throws Exception", "signatureAfterChange": "      @Test     public void testSwitch()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputDefaultMethodsTest2.java\"), expected);", "+        verify(checkConfig, getPath(\"InputDefaultMethods2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4146c9cb22e0e0c775ec1fa5024ca694", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void allowNonPrintableEscapes() throws Exception", "signatureAfterChange": "      @Test     public void allowNonPrintableEscapes() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAvoidEscapedUnicodeCharactersCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAvoidEscapedUnicodeCharacters.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41aa01a25e33b61cac89ace9ce4c070e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheckTest.java", "commitBeforeChange": "b8c558e473c0a9a75c41312e31df34b8572a271b", "commitAfterChange": "58ce4c40970fc29d00e5740bc6098eb475668e86", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "          public void testScopeAnonInnerWithResolver()         throws Exception", "signatureAfterChange": "          public void testScopeAnonInnerWithResolver()         throws Exception", "diff": ["-        checkConfig.addAttribute(\"checkUnusedThrows\", \"true\");", "+        checkConfig.addAttribute(\"allowUndeclaredRTE\", \"true\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41b5da76b487e112140fdd55aaf9b70c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/NestedIfDepthCheckTest.java", "commitBeforeChange": "9509710845bf8d8ef67755be7e097d540d43b026", "commitAfterChange": "e04583198aa79d3769a8995f859e8a27e51695d0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testCustomizedDepth() throws Exception", "signatureAfterChange": "      @Test     public void testCustomizedDepth() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputNestedIfDepth.java\"), expected);", "+        verify(checkConfig, getPath(\"InputNestedIfDepth.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42b223c51b8e73f549e4e200876b07d5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractTypeAwareCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testWithSuppressLoadErrors() throws Exception", "signatureAfterChange": "      @Test     public void testWithSuppressLoadErrors() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputLoadErrors.java\"), expected);", "+        verify(checkConfig, getPath(\"InputLoadErrors.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42d25a2a2e741c066c17c8a2fff4352f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testIgnoreCommentsInlineMiddle() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCommentsInlineMiddle() throws Exception", "diff": ["-            \"21: Line matches the illegal pattern '\" + illegal + \"'.\",", "+            \"23: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42f4b36c1a56fb44597805929a0d1c2e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testInnerClass() throws Exception", "signatureAfterChange": "      @Test     public void testInnerClass() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputGenericWhitespaceInnerClassCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputGenericWhitespaceInnerClass.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43071bbc194f3d0370351177f9925894", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule43onestatement/OneStatementPerLineTest.java", "commitBeforeChange": "d6b61b75ad66e02e8745eaef9adfbda70fdfda68", "commitAfterChange": "115a5df29dd256bb946c950b8f80d02a28f57edf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void oneStatementNonCompilableInputTest() throws Exception", "signatureAfterChange": "      @Test     public void oneStatementNonCompilableInputTest() throws Exception", "diff": ["-            + \"com/puppycrawl/tools/checkstyle/coding/\"", "+            + \"com/puppycrawl/tools/checkstyle/checks/coding/\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "430979bb8663c436a926fe0d73267a4b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testAllowNewlineParagraph() throws Exception", "signatureAfterChange": "      @Test     public void testAllowNewlineParagraph() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputIncorrectJavaDocParagraphCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIncorrectJavaDocParagraphCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "433a321000d65631a0262a18255ba3d0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputIncorrectSummaryJavaDocCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIncorrectSummaryJavaDoc.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4377e69a37f88a72e589917941cf538d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheckTest.java", "commitBeforeChange": "7e67d70fb81c9cb82abe7a1506d1352c85316461", "commitAfterChange": "feec78894cedcd1cd3e1f0fc521950569334f1e2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void test() throws Exception", "signatureAfterChange": "     public void test() throws Exception", "diff": ["-            \"6:1: Class Data Abstraction Coupling is 4 (max allowed is 0) classes [AnotherInnerClass, HashMap, InnerClass, HashSet].\",", "+            \"6:1: Class Data Abstraction Coupling is 4 (max allowed is 0) classes [AnotherInnerClass, HashMap, HashSet, InnerClass].\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43dd2b9fe4d03899f3f448c0e5b0fe2f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule521packagenames/PackageNameTest.java", "commitBeforeChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "commitAfterChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void badPackageName3Test() throws Exception", "signatureAfterChange": "      @Test     public void badPackageName3Test() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"PackageBadNameInput3\");", "+        final String filePath = builder.getFilePath(\"InputPackageBadName3\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4404b593308af7812091237f64ba575a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "44cc8b53c90117295151ea6723f859287f51dda5", "commitAfterChange": "5aacffce41a8f8d6b79f0b4a771e3e5ce03c0d02", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testLogLoadErrors() throws Exception", "signatureAfterChange": "      @Test     public void testLogLoadErrors() throws Exception", "diff": ["-        verify(config, getPath(\"checks/javadoc/InputLoadErrors.java\"), expected);", "+        verify(config, getPath(\"InputLoadErrors.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44186c590994a82261ace73f84d9bf78", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/SuperCloneCheckTest.java", "commitBeforeChange": "de60ea7b86b5ea25338dfe8a300db9d179004812", "commitAfterChange": "e24596db9459a3592784a544b213cc7aa919a3f6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testIt() throws Exception", "signatureAfterChange": "      @Test     public void testIt() throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"checks/coding/InputClone.java\"), expected);", "+        verify(checkConfig, getPath(\"InputClone.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "444199573b139d4d60c42f587c2ccd5b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheckTest.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void testReordered()         throws Exception", "signatureAfterChange": "     public void testReordered()         throws Exception", "diff": ["-            \"118:20: 'hidden' hides a field.\",", "+            \"118:21: 'hidden' hides a field.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "446b6095c9665f70eba02e2f457369f0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule527localvariablenames/LocalVariableNameTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44baff11cf47109730956d00e9e2f1b3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 40, "signatureBeforeChange": "      @Test     public void testInvalidClassDefWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testInvalidClassDefWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputInvalidClassDefIndent.java\");", "+        final String fname = getPath(\"InputInvalidClassDefIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "452054c4eb1921c7d2464de2e2d2aa5e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void leadingAsterisks()         throws IOException", "signatureAfterChange": "      @Test     public void leadingAsterisks()         throws IOException", "diff": ["-        String filename = getPath(\"LeadingAsterisks.txt\");", "+        String filename = getPath(\"InputLeadingAsterisks.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4608e8ec6585d9ccae9fc4888a4bb026", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheckTest.java", "commitBeforeChange": "a2f74423b6db21eeb1ed1725e6cfc2b83c44113b", "commitAfterChange": "de4485a22bfe8eafc3c2e273fd328a0221d0ff9e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testUserSpecifiedImmutableClassesList() throws Exception", "signatureAfterChange": "      @Test     public void testUserSpecifiedImmutableClassesList() throws Exception", "diff": ["-        checkConfig.addAttribute(\"immutableClassNames\", \"java.util.List,\"", "+        checkConfig.addAttribute(\"immutableClassCanonicalNames\", \"java.util.List,\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46d0de9b23ec8ddd4fde6a3f606d0d79", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefaultOperation()         throws Exception", "signatureAfterChange": "      @Test     public void testDefaultOperation()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAvoidStaticImportCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAvoidStaticImport.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "475d162e69ea48379a55d157c83c63c6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "de60ea7b86b5ea25338dfe8a300db9d179004812", "commitAfterChange": "e24596db9459a3592784a544b213cc7aa919a3f6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testReturnFromCatch() throws Exception", "signatureAfterChange": "      @Test     public void testReturnFromCatch() throws Exception", "diff": ["-               getPath(\"coding\" + File.separator + \"InputReturnFromCatchCheck.java\"),", "+               getPath(\"checks\" + File.separator + \"InputReturnFromCatchCheck.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47935e5669a09656fc74075e4b343c92", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/SeparatorWrapTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "484a5474606b41105727c4cb7b294edf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheckTest.java", "commitBeforeChange": "3d81ece0258005a3264d550f8cffeedc27a3765c", "commitAfterChange": "47e6c23b4d9cd01731a90e3caeea33ca53a15516", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testEnhancedForLoopVariableTrue() throws Exception", "signatureAfterChange": "      @Test     public void testEnhancedForLoopVariableTrue() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputFinalLocalVariableEnhancedForLoopVariable.java\"), expected);", "+        verify(checkConfig, getPath(\"InputFinalLocalVariableEnhancedForLoopVariable.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4878b8039b0821409611e2acbefc4b89", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 58, "signatureBeforeChange": "      @Test     public void testInvalidAssignWithChecker() throws Exception", "signatureAfterChange": "      @Test     public void testInvalidAssignWithChecker() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputInvalidAssignIndent.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputInvalidAssignIndent.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "488caed4be6465bafe0a0f2aa0c60de0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocVariableCheckTest.java", "commitBeforeChange": "44cc8b53c90117295151ea6723f859287f51dda5", "commitAfterChange": "5aacffce41a8f8d6b79f0b4a771e3e5ce03c0d02", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testDefault()         throws Exception", "signatureAfterChange": "      @Test     public void testDefault()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/javadoc/InputTags.java\"), expected);", "+        verify(checkConfig, getPath(\"InputTags.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48dab9ec4f2a578011499eef1898a4e0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "f8a53831f0fa98f317ea7dbc6490b5e91b6cc5d9", "commitAfterChange": "5703b6e33550d6e9706f42e253c2cc7d83a358bf", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      public void testScopeInnerClassesPublic()         throws Exception", "signatureAfterChange": "      public void testScopeInnerClassesPublic()         throws Exception", "diff": ["-            filepath + \":18: type is missing a Javadoc comment.\",", "+            filepath + \":18: Missing a Javadoc comment.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4992da0572ade14b6d6704974c3e3f91", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheckTest.java", "commitBeforeChange": "5a00ab2f307813f7acd9a7bcb06267289eb72b24", "commitAfterChange": "b7e931711c6cb6d522c63ae02b350fc7f3f1ab50", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputVariableDeclarationUsageDistanceCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputVariableDeclarationUsageDistanceCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49fa97033d4cedd5006ef8037f30c085", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/SimplifyBooleanExpressionCheck.java", "commitBeforeChange": "b8d0a65d5059b806bcf801db797232d4662d340d", "commitAfterChange": "eb522eece2f04cefd75931be5066eaebf2b34b51", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-                        // TODO: i18n", "-                        \"Expression can be simplified.\");", "+                        \"simplify.expression\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b45865ec6c312e9cdff1bb60469378a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheckTest.java", "commitBeforeChange": "3c11c78c126d1cbc0e5efa213ce555467616f091", "commitAfterChange": "3ad60e5742797c5db87de1c8325b001c13543553", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testWithParameters() throws Exception", "signatureAfterChange": "      @Test     public void testWithParameters() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"annotation/InputIncorrectAnnotationLocation.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIncorrectAnnotationLocation.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b603475b0a336798793fda7d62baca9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testTypeNamesForFourPermittedCapitalLetters() throws Exception", "signatureAfterChange": "      @Test     public void testTypeNamesForFourPermittedCapitalLetters() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeName.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b7c2b796e81e579889f9312fbb822e0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     @Test     public void testExpandedNoUnWildcard() throws Exception", "signatureAfterChange": "     @Test     public void testExpandedNoUnWildcard() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsExpanded.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsExpanded.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bbb043d02ca0107d3bdf7112d390ec4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testNoPackage() throws Exception", "signatureAfterChange": "      @Test     public void testNoPackage() throws Exception", "diff": ["-                getNonCompilablePath(\"InputIllegalInstantiationCheckNoPackage.java\"),", "+                getNonCompilablePath(\"InputIllegalInstantiationNoPackage.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bd7b4177284bf82605473f12b9241c3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/DefaultMethodsTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testCanParse()         throws Exception", "signatureAfterChange": "      @Test     public void testCanParse()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputDefaultMethodsTest.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputDefaultMethods.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c3cfaae5684231069f55ccf1986e599", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void textBeforeJavadocTags()         throws IOException", "signatureAfterChange": "      @Test     public void textBeforeJavadocTags()         throws IOException", "diff": ["-        String filename = getDocPath(\"TextBeforeJavadocTags.txt\");", "+        String filename = getDocPath(\"InputTextBeforeJavadocTags.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c6230bc3efa3647542fc54eb2e09fa4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheckTest.java", "commitBeforeChange": "5a00ab2f307813f7acd9a7bcb06267289eb72b24", "commitAfterChange": "b7e931711c6cb6d522c63ae02b350fc7f3f1ab50", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testIgnoreFinalOption() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreFinalOption() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputVariableDeclarationUsageDistanceCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputVariableDeclarationUsageDistanceCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c72f19a5f633ebf29358426f40d371a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testNpe() throws Exception", "signatureAfterChange": "      @Test     public void testNpe() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputNoWhiteSpaceAfterCheckFormerNpe.java\"),", "+        verify(checkConfig, getPath(\"InputNoWhiteSpaceAfterFormerNpe.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c76c2a58bb945740d29ab2fa4fe8f23", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalThrowsCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Test     public void testIllegalClassNamesWithIgnoreMethodNames() throws Exception", "signatureAfterChange": "     @Test     public void testIllegalClassNamesWithIgnoreMethodNames() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputIllegalThrowsCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalThrows.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c8c909b930ecc737705d1a99a44f0fe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/IndentationCheckTest.java", "commitBeforeChange": "0ddd77847de682709b2163f4b2253ef54188d888", "commitAfterChange": "4f892fe43aed58fb447078fb3988c5263a71d60d", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "      public void testBraceAdjustment()             throws Exception", "signatureAfterChange": "      public void testBraceAdjustment()             throws Exception", "diff": ["-            \"24: if rcurly at indentation level 8 not at correct indentation, 8\",", "+            \"24: if rcurly at indentation level 8 not at correct indentation, 10\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c8eda4e36a2565c8cc20b2423b9e0a9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/OuterTypeNumberCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testWithInnerClass() throws Exception", "signatureAfterChange": "      @Test     public void testWithInnerClass() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"OuterTypeNumberCheckInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputOuterTypeNumber.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c92aaa517889f25a92a6829e716bda1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "260d2b935c0b25688a11077ada9405b791857fd8", "commitAfterChange": "ad42ed29799a13b9426a05cc94b4a4aaba709c2c", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Test     public void testStaticGroupsOrderAbove() throws Exception", "signatureAfterChange": "      @Test     public void testStaticGroupsOrderAbove() throws Exception", "diff": ["-        checkConfig.addAttribute(\"groups\", \"org, java\");", "+        checkConfig.addAttribute(\"groups\", \"org, java, sun\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cea08fe78bad71e383a49ca75bf2487", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void newTest() throws Exception", "signatureAfterChange": "      @Test     public void newTest() throws Exception", "diff": ["-        verify(config, getPath(\"InputJavadocMethodCheck_SmallMethods.java\"), expected);", "+        verify(config, getPath(\"InputJavadocMethodSmallMethods.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d7ffe835c4877a6101a98198686aadc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "      @Test     public void testExistingDirectoryWithViolations() throws Exception", "signatureAfterChange": "      @Test     public void testExistingDirectoryWithViolations() throws Exception", "diff": ["-            {\"ComplexityOverflow\", \"1\", \"172\"},", "+            {\"InputComplexityOverflow\", \"1\", \"172\"},"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d8465060da44942cd4aa003c71c6f94", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testCycles() throws Exception", "signatureAfterChange": "      @Test     public void testCycles() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputNeedBracesCheckTest.java\"), expected);", "+        verify(checkConfig, getPath(\"InputNeedBraces.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4db6f409080c2ff7d55e8858c59b941d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testIgnoreCommentsFalseCppStyle() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCommentsFalseCppStyle() throws Exception", "diff": ["-            \"2: Line matches the illegal pattern '\" + illegal + \"'.\",", "+            \"4: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dd445ab2f6649f73b16aa79b9be9c4a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "9c488c1f512ffcc58af433842c992bd3f85b2d63", "commitAfterChange": "f47587c9fb66cf46fbd2eb5691449cda6d551ecb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testMissingSwitchDefault() throws Exception", "signatureAfterChange": "      @Test     public void testMissingSwitchDefault() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/InputMissingSwitchDefault.java\"), expected);", "+        verify(checkConfig, getPath(\"InputMissingSwitchDefault.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4de809ef375153520c4b8d3159688cdf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/MethodLengthCheckTest.java", "commitBeforeChange": "ce177456e7042b22b1842cb0309b6b285dc900d4", "commitAfterChange": "ba8a851e90352e893b7036bec5521b89ab1d37fd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testIt() throws Exception", "signatureAfterChange": "      public void testIt() throws Exception", "diff": ["-            \"80: Method length is 20 lines (max allowed is 19).\"", "+            \"79:5: Method length is 20 lines (max allowed is 19).\"", "+        };", "+        verify(c, fname, expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e02af2da1df978ef49cac5d8c55e958", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingCtorCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testMissingSwitchDefault() throws Exception", "signatureAfterChange": "     @Test     public void testMissingSwitchDefault() throws Exception", "diff": ["-            \"1:1: Class should define a constructor.\",", "+            \"3:1: Class should define a constructor.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e97237fb53dcce635969a1d59acb376", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "b95ced53e3c47c9a9db5022767a18e714fc3bebd", "commitAfterChange": "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      public void testTypeParamsTags() throws Exception", "signatureAfterChange": "      public void testTypeParamsTags() throws Exception", "diff": ["-            \"26: Unused @param tag for '<BB>'.\",", "+            \"26:8: Unused @param tag for '<BB>'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4efc57afa9858d55dbff82d63d16ebb0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testTypeNamesForThreePermittedCapitalLetters() throws Exception", "signatureAfterChange": "      @Test     public void testTypeNamesForThreePermittedCapitalLetters() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeName.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f1e9cf088a95a19b0fa658f4eb55270", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheckTest.java", "commitBeforeChange": "3c11c78c126d1cbc0e5efa213ce555467616f091", "commitAfterChange": "3ad60e5742797c5db87de1c8325b001c13543553", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testWithoutAnnotations() throws Exception", "signatureAfterChange": "      @Test     public void testWithoutAnnotations() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"annotation/InputAnnotationLocationCheckTest1.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAnnotationLocationCheckTest1.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f3c3910f469ec6c8a18f9ef4cd0219e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/JavadocTypeCheckTest.java", "commitBeforeChange": "e8d025321c3d1f5741e860bd96a93e7d2169ca9c", "commitAfterChange": "661274b68096ccd5876abb8eacf7c8d42a939a0b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testAuthorRegularExError()         throws Exception", "signatureAfterChange": "      public void testAuthorRegularExError()         throws Exception", "diff": ["-            \"13: Type Javadoc comment is missing an @author tag.\",", "+            \"13: Type Javadoc tag @author must match pattern 'ABC'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f962761f8a2ded55decc064e512f776", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testImmutableSpecifiedSameTypeName() throws Exception", "signatureAfterChange": "      @Test     public void testImmutableSpecifiedSameTypeName() throws Exception", "diff": ["-                 \"com.puppycrawl.tools.checkstyle.checks.coding.GregorianCalendar,\"", "+                 \"com.puppycrawl.tools.checkstyle.checks.coding.InputGregorianCalendar,\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fee37169bcfce63b957a7bde0a966a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheckTest.java", "commitBeforeChange": "eeee00819be1c526aaa6ac0d4fa2259842973b22", "commitAfterChange": "1017cb35e458b0d7d0ee57b9a682a253c9ccbe83", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "       @Test     public void testMissingTag() throws Exception", "signatureAfterChange": "       @Test     public void testMissingTag() throws Exception", "diff": ["-            \"15: Type Javadoc comment is missing an @missingtag tag.\",", "+            \"16: Type Javadoc comment is missing an @missingtag tag.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "504a41529b1dae16541640e0b3058aa1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule332nolinewrap/NoLineWrapTest.java", "commitBeforeChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "commitAfterChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void badLineWrapTest() throws Exception", "signatureAfterChange": "      @Test     public void badLineWrapTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"NoLineWrap_Bad\");", "+        final String filePath = builder.getFilePath(\"InputNoLineWrapBad\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5070c3989b0cca02ab9f130e5d5c4634", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule461verticalwhitespace/EmptyLineSeparatorTest.java", "commitBeforeChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "commitAfterChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void emptyLineSeparatorTest() throws Exception", "signatureAfterChange": "      @Test     public void emptyLineSeparatorTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"EmptyLineSeparatorInput\");", "+        final String filePath = builder.getFilePath(\"InputEmptyLineSeparator\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "512d00b45db242db992ac7cd56e181a9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94", "commitAfterChange": "d6175fd6c95f64e854c1604e0331d8d1ab9dcaf3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void checkUnusedTypeParamTags(         final Vector aTags,         final List aTypeParamNames)", "signatureAfterChange": "     private void checkUnusedTypeParamTags(         final Vector aTags,         final List aTypeParamNames)", "diff": ["-        Pattern pattern = Utils.getPattern(\"\\\\s*<([^>])+>.*\");", "+        Pattern pattern = Utils.getPattern(\"\\\\s*<([^>]+)>.*\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51f305947dee52187564f72216b89dbb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportTest.java", "commitBeforeChange": "bee6b0a1ec26b04e2d738221bdce4bd159b278d2", "commitAfterChange": "83e685bdac0b1e7e838eded12bfeee93d3ca527a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testExcludes()         throws Exception", "signatureAfterChange": "      @Test     public void testExcludes()         throws Exception", "diff": ["-            \"7: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.imports.*\"),", "+            \"7: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.checks.imports.*\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5290aa942135a1842ccbb883d26c5ec6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void test() throws Exception", "signatureAfterChange": "      @Test     public void test() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ClassCouplingCheckTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputClassCoupling.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52f159084eb35cb7990cd5b36aaff237", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/RegexpCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Test     public void testIgnoreCommentsInlineMiddle() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCommentsInlineMiddle() throws Exception", "diff": ["-            \"21: Line matches the illegal pattern '\" + illegal + \"'.\",", "+            \"23: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53aaea70a94d34f7db3e076a45f5d8be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundTest.java", "commitBeforeChange": "3cb031f767f6635748e05e2bd030d7f2314e981d", "commitAfterChange": "208e0208ca5f1b7966aa82747069b85ddb680c18", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testIgnoreEnhancedForColon() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreEnhancedForColon() throws Exception", "diff": ["-            \"18:20: ':' is not preceded with whitespace.\",", "+            \"19:20: ':' is not preceded with whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5404ed81a0993e1f3d189a125eb84e28", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     @Test     public void testGoodOverrideFromObject() throws Exception", "signatureAfterChange": "     @Test     public void testGoodOverrideFromObject() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"GoodOverrideFromObject.java\"), expected);", "+        verify(checkConfig, getPath(\"InputGoodOverrideFromObject.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "548359d1ce37b3f1b2489002ff990ee8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/PackageAnnotationTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testWithoutAnnotation() throws Exception", "signatureAfterChange": "      @Test     public void testWithoutAnnotation() throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputPackageAnnotationCheckTest2.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputPackageAnnotation2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54a2b09cb3a3c8374cb10dea0b9863f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Test     public void testBadTag() throws Exception", "signatureAfterChange": "      @Test     public void testBadTag() throws Exception", "diff": ["-            \"3:4: Unknown tag 'mytag'.\",", "+            \"5:4: Unknown tag 'mytag'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54a69d47d33a372ae918ad1f735e9ead", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java", "commitBeforeChange": "9414fce5b68820bc579cec71f4463667463bcb16", "commitAfterChange": "bfdf099a6fa37d00c4526b1f6acb4ac0694c3871", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testNonSpecifiedImports() throws Exception", "signatureAfterChange": "     @Test     public void testNonSpecifiedImports() throws Exception", "diff": ["-            \"21: 'org.apache.*'should be separated from previous import group.\",", "+            \"21: 'org.junit.*'should be separated from previous import group.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "551f3c411493b7e7275e09e7fc698929", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/UnnecessaryParenthesesCheckTest.java", "commitBeforeChange": "b9d3a7e995de2d7e77bf1be239a0c36e1337687d", "commitAfterChange": "4687b0b801bdcc50c763268e33eabd370ad8a85d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-            \"82:27: \" + getCheckMessage(MSG_ASSIGN),", "+            \"82:39: \" + getCheckMessage(MSG_ASSIGN),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5642bf95472312b69531c0d254a8fca0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedTest.java", "commitBeforeChange": "dba6c944cdbf9acfbb40b9a2d8e6315fb14d87f0", "commitAfterChange": "daae0431d190cceceee62d7163a4e67e2c622aa2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testBadDeprecatedAnnotation() throws Exception", "signatureAfterChange": "     @Test     public void testBadDeprecatedAnnotation() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"annotation\" + File.separator + \"BadDeprecatedAnnotation.java\"), expected);", "+        verify(checkConfig, getPath(\"annotation\" + File.separator + \"InputBadDeprecatedAnnotation.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56f47bf7f25df5ac6a9ae4843524ba00", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 35, "signatureBeforeChange": "      @Test     public void testValidArrayInitDefaultIndentWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testValidArrayInitDefaultIndentWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputValidArrayInitDefaultIndent.java\");", "+        final String fname = getPath(\"InputValidArrayInitDefaultIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "579938da368975862ec2c86ea1074402", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGroupsRegexp() throws Exception", "signatureAfterChange": "      @Test     public void testGroupsRegexp() throws Exception", "diff": ["-            \"9: Wrong order for 'java.io.File' import.\",", "+            \"11: Wrong order for 'java.io.File' import.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57ee992215ebf2e364e0aece4c9b166e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheckTest.java", "commitBeforeChange": "7e5e919ce7db115c5893fa23e07a3cf1acfc3f10", "commitAfterChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testDefaults() throws Exception", "signatureAfterChange": "      @Test     public void testDefaults() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"sizes/MethodCountCheckInput.java\"), expected);", "+        verify(checkConfig, getPath(\"MethodCountCheckInput.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5824dc61123dbedc0f2ee537cb900752", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     @Test     public void testExpandedNoUncheckedTokens() throws Exception", "signatureAfterChange": "     @Test     public void testExpandedNoUncheckedTokens() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsExpanded.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsExpanded.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58efde2a0ea2358ecb21c52a2c768ddf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     public void testInAssignment()         throws Exception", "signatureAfterChange": "      @Test     public void testInAssignment()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest17.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda17.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "590ac5ab3256493d910b312703c7946b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     @Test     public void testGoodOverrideFromObjectJ5Compatible() throws Exception", "signatureAfterChange": "     @Test     public void testGoodOverrideFromObjectJ5Compatible() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"GoodOverrideFromObject.java\"), expected);", "+        verify(checkConfig, getPath(\"InputGoodOverrideFromObject.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5913d6fee769bf67a7802d019fd26fe5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "03f2be49f7ad3fc9d0143782b020a169f28e50a9", "commitAfterChange": "0c2a64d9f02ab5b94bbf4213cb2978f7b459b6f5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void logIOException(IOException ex, File file)", "signatureAfterChange": "     private void logIOException(IOException ex, File file)", "diff": ["-        LOG.debug(\"IOException occured.\", ex);", "+        LOG.debug(\"IOException occurred.\", ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "597ae52c64453f768f05f86b5823aab5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     @Test     public void testCompactNoUncheckedUnusedAll() throws Exception", "signatureAfterChange": "     @Test     public void testCompactNoUncheckedUnusedAll() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsCompact.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsCompact.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59e109bdd4304b0b2b13e622d87a21af", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule711generalform/SingleLineJavadocTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59ea2b8baff1ad150da3fa3ebe37ab8b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCorrect() throws Exception", "signatureAfterChange": "      @Test     public void testCorrect() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputCorrectSummaryJavaDocCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputCorrectSummaryJavaDoc.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a144bfb4f956abd2e480c13bd2b55cc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testCommaAlwaysNoViolations() throws Exception", "signatureAfterChange": "      @Test     public void testCommaAlwaysNoViolations() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"AnnotationUseWithTrailingComma.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAnnotationUseWithTrailingComma.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a36223a82a6aac72d8034efe12c22cc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyBlockTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void emptyBlockTest() throws Exception", "signatureAfterChange": "      @Test     public void emptyBlockTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"EmptyBlockInput_Basic\");", "+        final String filePath = builder.getFilePath(\"InputEmptyBlockBasic\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a7b96d99f576cd3ed4dc7bea2299bdf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java", "commitBeforeChange": "4be4abc6360709a49b231277a2513905332f9e50", "commitAfterChange": "f747835b6b4bd894eed2ef17eb059a003fb4d988", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testTwo() throws Exception", "signatureAfterChange": "      @Test     public void testTwo() throws Exception", "diff": ["-                \"src/test/resources/com/puppycrawl/tools/checkstyle/import-control_two.xml\");", "+                \"src/test/resources/com/puppycrawl/tools/checkstyle/imports/import-control_two.xml\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ac02b635dd44d1b3444e53ffa9dc70a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/whitespace/TypecastParenPadCheckTest.java", "commitBeforeChange": "35e4a41c1027d5078cbaf0d3988a21c12a2daf7e", "commitAfterChange": "e55435125ea57e96f0bf876dd13e78b0ae02cd52", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDefault()         throws Exception", "signatureAfterChange": "     public void testDefault()         throws Exception", "diff": ["-            \"89:21: ')' is preceeded with whitespace.\",", "+            \"89:21: ')' is preceded with whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ac1a63ea5bef1e997c9e5ccfd95cfac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "9c488c1f512ffcc58af433842c992bd3f85b2d63", "commitAfterChange": "f47587c9fb66cf46fbd2eb5691449cda6d551ecb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testMaximumDepth()         throws Exception", "signatureAfterChange": "      @Test     public void testMaximumDepth()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/InputIllegalTokens.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5af665c1ec20a9c97dd1d3768339907a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/AnnotationTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testAnnotationOnClass()         throws Exception", "signatureAfterChange": "      @Test     public void testAnnotationOnClass()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputAnnotationsTest2.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputAnnotations2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b3b143c45d6e3f10953bd0db2095acf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testNPE() throws Exception", "signatureAfterChange": "      @Test     public void testNPE() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAbstractMultisetSetCountTester.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAbstractMultisetSetCount.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b8835b1a8a69e62590639cb71f60642", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/AnnotationTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testSimpleTypeAnnotation()         throws Exception", "signatureAfterChange": "      @Test     public void testSimpleTypeAnnotation()         throws Exception", "diff": ["-        verify(checkConfig,", "-                getPath(\"grammars/java8/InputAnnotationsTest1.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAnnotationsTest1.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bd5f688e3ff67b20f00fdf5d34e6b3b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierTest.java", "commitBeforeChange": "dfd04eb16b568e1db9200c0d9f5ea6151ccff762", "commitAfterChange": "bad81c81c2be3e67099c512e4e0aada291323566", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testNotPublicClassConstructorHasNotPublicModifier() throws Exception", "signatureAfterChange": "      @Test     public void testNotPublicClassConstructorHasNotPublicModifier() throws Exception", "diff": ["-            \"15:5: \" + getCheckMessage(MSG_KEY, \"public\"),", "+            \"18:5: \"  + getCheckMessage(MSG_KEY, \"public\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c3d528873e8c4b8f22a47fc0aeb4087", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 24, "signatureBeforeChange": "      @Test     public void testClassesAndMethods() throws Exception", "signatureAfterChange": "      @Test     public void testClassesAndMethods() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputClassesMethods.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputClassesMethods.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cbf54f17359f5166513cfbdec776c9a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/NoFinalizerCheckTest.java", "commitBeforeChange": "8a6befb469c60416d1629b5a92e5bf81e07b7cae", "commitAfterChange": "708bb0271d113352a98c3a878b448d6635405694", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testHasNoFinalizer()         throws Exception", "signatureAfterChange": "      @Test     public void testHasNoFinalizer()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputFallThrough.java\"), expected);", "+        verify(checkConfig, getPath(\"InputFallThrough.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d181ca427058370114c27168e3c0f39", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/OperatorWrapTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void operatorWrapTest() throws Exception", "signatureAfterChange": "      @Test     public void operatorWrapTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"OperatorWrapInput\");", "+        final String filePath = builder.getFilePath(\"InputOperatorWrap\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e1a6013cb16eb7be2c33869b9b577ac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/comments/CommentsTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testCompareExpectedTreeWithInput2() throws Exception", "signatureAfterChange": "      @Test     public void testCompareExpectedTreeWithInput2() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputCommentsTest_2.java\"), expected);", "+        verify(checkConfig, getPath(\"InputComments2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e1d7ce7f980202e37d74bd924367ee5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter6programpractice/rule64finalizers/NoFinalizerTest.java", "commitBeforeChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "commitAfterChange": "2a52c00d5de8a6b56df0b9678f831e5814170ca6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void noFinalizerExtendedTest() throws Exception", "signatureAfterChange": "      @Test     public void noFinalizerExtendedTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"NoFinalizeExtendInput\");", "+        final String filePath = builder.getFilePath(\"InputNoFinalizeExtend\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ee553d81632a477751101797b387b6d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testBogusMemberExcludes()         throws Exception", "signatureAfterChange": "      @Test     public void testBogusMemberExcludes()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAvoidStaticImportCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAvoidStaticImport.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5eedf6b108e4336ccf58c2e6e43a416b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule411bracesareused/NeedBracesTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void needBracesTest() throws Exception", "signatureAfterChange": "      @Test     public void needBracesTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"NeedBracesInput\");", "+        final String filePath = builder.getFilePath(\"InputNeedBraces\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5efb10926d73d3f1bf46b8668d87cf95", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoaderTest.java", "commitBeforeChange": "4be4abc6360709a49b231277a2513905332f9e50", "commitAfterChange": "f747835b6b4bd894eed2ef17eb059a003fb4d988", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testLoad() throws CheckstyleException", "signatureAfterChange": "     @Test     public void testLoad() throws CheckstyleException", "diff": ["-                        \"src/test/resources/com/puppycrawl/tools/checkstyle/import-control_complete.xml\").toURI());", "+                        \"src/test/resources/com/puppycrawl/tools/checkstyle/imports/import-control_complete.xml\").toURI());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f05c46bff51f14cf62fd669252f4790", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheckTest.java", "commitBeforeChange": "5a00ab2f307813f7acd9a7bcb06267289eb72b24", "commitAfterChange": "b7e931711c6cb6d522c63ae02b350fc7f3f1ab50", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testVariableRegExp() throws Exception", "signatureAfterChange": "      @Test     public void testVariableRegExp() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputVariableDeclarationUsageDistanceCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputVariableDeclarationUsageDistanceCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f6747cdeba0513ff3ad533c020f64f6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "9dd69b267b626af533ddf8bc0d37b4fd3744fa6e", "commitAfterChange": "57b908199dfa5c2c9bf9388d92925ccfb312812f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testLoadFromURL()         throws CheckstyleException, InterruptedException", "signatureAfterChange": "      @Test     public void testLoadFromURL()         throws CheckstyleException, InterruptedException", "diff": ["-                        && ex.getMessage().contains(\"unable to read\")) {", "+                        && ex.getMessage().contains(\"Unable to read\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fb1123123a2fd5656952a1cbfdf86c5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule521packagenames/PackageNameTest.java", "commitBeforeChange": "b6aabf42b90bfd9e53f00463098e1735602605ca", "commitAfterChange": "febbc986cb25ed460ea601c0a68c7d2597f89ee4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          @Test     public void badPackageNameTest() throws IOException, Exception", "signatureAfterChange": "          @Test     public void badPackageNameTest() throws IOException, Exception", "diff": ["-        String packagePath = \"com.google.checkstyle.test.chapter5naming.rule521packageNames\";", "+        String packagePath =", "+                \"com.google.checkstyle.test.chapter5naming.rule521packageNamesCamelCase\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fc2cf261a0fd0dc37ef303db8986b95", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testWithFewArgsWithoutTypeFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithFewArgsWithoutTypeFullBody()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest9.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda9.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6033a58f113bf15c7cccd348ad18bf3f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     public void testDifficultAnnotations() throws Exception", "signatureAfterChange": "      @Test     public void testDifficultAnnotations() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputDifficultAnnotations.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputDifficultAnnotations.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "611302999c66d88420faecaeaeab231b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java", "commitBeforeChange": "edc4cc9ffc1a5b872398af9d6735b4bde75de385", "commitAfterChange": "a077b7282714b38286a09dcea10b710e5121a246", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testMethodDef() throws Exception", "signatureAfterChange": "      @Test     public void testMethodDef() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ComplexityCheckTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"ExecutableStatementCountInput.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61224fae0d1c05a5dd7222c70c54fa38", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testTypeNamesForFivePermittedCapitalLetters() throws Exception", "signatureAfterChange": "      @Test     public void testTypeNamesForFivePermittedCapitalLetters() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeName.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6124eddabe94b3b94ee2395e685e0353", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule526parameternames/ParameterNameTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6167fab6bbcc58f717302b0eab4c6d89", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "04483a77e8f20ef67db6467c477a7fcba129eef6", "commitAfterChange": "4564aecb5c1d694591feef433ce067d74e36d823", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void endElement(String aNamespaceURI,                            String aLocalName,                            String aQName)", "signatureAfterChange": "     public void endElement(String aNamespaceURI,                            String aLocalName,                            String aQName)", "diff": ["-        if (aQName.equals(\"config\")) {", "+        if (aQName.equals(\"module\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6233363fac9e108d047cb1139367a735", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testStarExcludes()         throws Exception", "signatureAfterChange": "      @Test     public void testStarExcludes()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAvoidStaticImportCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAvoidStaticImport.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62508185c4b2d009c8482257f30a2385", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule488numericliterals/UpperEllTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62baa9b17d7946ffaa12111d83069ca3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testInstanceInit() throws Exception", "signatureAfterChange": "      @Test     public void testInstanceInit() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ExecutableStatementCountInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputExecutableStatementCount.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62dc3ebfbd9f2e15cde3a420d0134701", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     void reportStarImport(int aLineNo, String aPkg)", "signatureAfterChange": "     void reportStarImport(int aLineNo, String aPkg)", "diff": ["-            log(aLineNo, \"Avoid using the '.*' form of import.\");", "+            log(aLineNo, \"import.avoidStar\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "631cc55346c4bca842e24154ef8ee032", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     public void unclosedAndClosedParagraphs()         throws IOException", "signatureAfterChange": "      @Test     public void unclosedAndClosedParagraphs()         throws IOException", "diff": ["-        String filename = getHtmlPath(\"UnclosedAndClosedParagraphs.txt\");", "+        String filename = getHtmlPath(\"InputUnclosedAndClosedParagraphs.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6325de867b5f9bd177d0fdff8c7c712f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 68, "signatureBeforeChange": "      @Test     public void testPackageDeclaration() throws Exception", "signatureAfterChange": "      @Test     public void testPackageDeclaration() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputPackageDeclaration.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputPackageDeclaration.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63fbf8d2983d8e38f77649427c717d17", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/HideUtilityClassConstructorCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testUtilClass() throws Exception", "signatureAfterChange": "      @Test     public void testUtilClass() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"UtilityClassConstructor.java\"), expected);", "+        verify(checkConfig, getPath(\"InputUtilityClassConstructor.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "641786e98c64c2bd4bee797918b673be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testScopeProtected()         throws Exception", "signatureAfterChange": "      @Test     public void testScopeProtected()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputJavadocStyleCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJavadocStyle.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "645a595a26cd1c506a3c846e32e5eccd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule32packagestate/LineLengthTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64a8da4614cd6108aed555f81815a9ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MemberNameCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testPrivateOnly() throws Exception", "signatureAfterChange": "      @Test     public void testPrivateOnly() throws Exception", "diff": ["-            \"6:17: Name 'mPrivate' must match pattern '^_[a-z]*$'.\",", "+            \"8:17: Name 'mPrivate' must match pattern '^_[a-z]*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64dfdf8c6eed9a912bd321b0d1bb52f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 47, "signatureBeforeChange": "      @Test     public void testValidDoWhileWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testValidDoWhileWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputValidDoWhileIndent.java\");", "+        final String fname = getPath(\"InputValidDoWhileIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6508b4d78cbd1ce276ccbf7469b7b690", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule527localvariablenames/LocalVariableNameTest.java", "commitBeforeChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "commitAfterChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void localVariableNameTest() throws Exception", "signatureAfterChange": "      @Test     public void localVariableNameTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"LocalVariableNameInput_Simple\");", "+        final String filePath = builder.getFilePath(\"InputLocalVariableNameSimple\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "651d2a1ca489b83abc112bd9d1742086", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testWithOneArgWithoutTypeFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithoutTypeFullBody()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest7.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda7.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "657b0e29ab47cfdabe2dd47cc3af34aa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyBlockTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "658158dced278d746e0d836076d70b68", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheckTest.java", "commitBeforeChange": "b2cca2d5e91425cfe52c1c59cc8aa907a2e766df", "commitAfterChange": "6d20b67e0f1bfedc2132a887257d72edde4c857b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testSwitchBlockAsSingleDecisionPointSetToTrue() throws Exception", "signatureAfterChange": "      @Test     public void testSwitchBlockAsSingleDecisionPointSetToTrue() throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"metrics/ComplexityCheckSwitchBlocksTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"ComplexityCheckSwitchBlocksTestInput.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66e23beb0623763c45bbdac41fef4c6e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "79a7478e06a5f7068002831ac699d10ba54f038b", "commitAfterChange": "3baf36b6fe8bffe6e6c90f4c001c8494148ff42c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void testAnonClassesFromGuava() throws Exception", "signatureAfterChange": "      @Test     public void testAnonClassesFromGuava() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/FromGuava2.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"indentation/InputFromGuava2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66fbd1b5061316ba59648fed5ed57555", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "f9a1fdc53954220e5d8626814c0d8687febbe84d", "commitAfterChange": "54948c48df7e952adb17caf1519d93a3a0e5c537", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      static String getPath(String aFilename)         throws IOException", "signatureAfterChange": "      static String getPath(String aFilename)         throws IOException", "diff": ["-        final File f = new File(System.getProperty(\"tests.dir\"), aFilename);", "+        final File f = new File(System.getProperty(\"testinputs.dir\"),", "+                                aFilename);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67109750d3e6c92d8a3131ff0739d438", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d92ceb81a67bb10b98f5ce305f839ba535a1c6ee", "commitAfterChange": "9aa8268e473071cbe26aa9d3a8631f1902e3fef0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "       public void testWhitespace()         throws Exception", "signatureAfterChange": "       public void testWhitespace()         throws Exception", "diff": ["-            filepath + \":13: type Javadoc comment is missing an @author tag.\",", "+            filepath + \":13: Type Javadoc comment is missing an @author tag.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "673bf0667336c0d3af7a214de4d60062", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "04483a77e8f20ef67db6467c477a7fcba129eef6", "commitAfterChange": "4564aecb5c1d694591feef433ce067d74e36d823", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testEmptyConfiguration() throws Exception", "signatureAfterChange": "      public void testEmptyConfiguration() throws Exception", "diff": ["-        verifyConfigNode(config, \"configuration\", 0, new Properties());", "+        verifyConfigNode(config, \"Checker\", 0, new Properties());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "675865187fd21726e63ec4f98ba3790c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule487modifiers/ModifierOrderTest.java", "commitBeforeChange": "4346d41010a729e14991e30706bdb16ff18ff39a", "commitAfterChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void modifierOrderTest() throws Exception", "signatureAfterChange": "      @Test     public void modifierOrderTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"ModifierOrderInput\");", "+        final String filePath = builder.getFilePath(\"InputModifierOrder\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "676a2f62a2bb2ccc5928e12eb64e1cad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "79aa188fdfd66a71eb48bb27f48a910da5108221", "commitAfterChange": "4f16cb85a987f5d53b7055f4c96c15c76937c9ce", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Test     public void testStaticGroupsOrderAbove() throws Exception", "signatureAfterChange": "      @Test     public void testStaticGroupsOrderAbove() throws Exception", "diff": ["-            \"8: \" + getCheckMessage(MSG_ORDERING, \"org.abego.treelayout.Configuration.AlignmentInLevel\"),", "+            \"8: \" + getCheckMessage(MSG_ORDERING, \"org.antlr.v4.runtime.Recognizer.EOF\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67d3a8f17ad3088fbe88aa44a7630c8b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/WhitespaceAfterCheckTest.java", "commitBeforeChange": "2debda611fe487021711aa4acce56651799a778f", "commitAfterChange": "cb475adb81d2c3242b38ea5cf44fc7c9b9fa09e3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testSemi() throws Exception", "signatureAfterChange": "      public void testSemi() throws Exception", "diff": ["-            \"110:19: ';' is not followed by whitespace.\",", "+            \"107:19: ';' is not followed by whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "683f2ed3233d4da89b9c2f0100d01c58", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule341onetoplevel/OneTopLevelClassTest.java", "commitBeforeChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "commitAfterChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void badTest() throws Exception", "signatureAfterChange": "      @Test     public void badTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"OneTopLevelClassInput_Basic\");", "+        final String filePath = builder.getFilePath(\"InputOneTopLevelClassBasic\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68b38225a8ac5656cbfe4a9285730528", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "44cc8b53c90117295151ea6723f859287f51dda5", "commitAfterChange": "5aacffce41a8f8d6b79f0b4a771e3e5ce03c0d02", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void newTest() throws Exception", "signatureAfterChange": "      @Test     public void newTest() throws Exception", "diff": ["-        verify(config, getPath(\"javadoc/InputJavadocMethodCheck_SmallMethods.java\"), expected);", "+        verify(config, getPath(\"InputJavadocMethodCheck_SmallMethods.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "694f9bd96e9b39c50e76bf32c49748d2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheckTest.java", "commitBeforeChange": "a2f74423b6db21eeb1ed1725e6cfc2b83c44113b", "commitAfterChange": "de4485a22bfe8eafc3c2e273fd328a0221d0ff9e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testImmutableSpecifiedSameTypeName() throws Exception", "signatureAfterChange": "      @Test     public void testImmutableSpecifiedSameTypeName() throws Exception", "diff": ["-        checkConfig.addAttribute(\"immutableClassNames\",", "+        checkConfig.addAttribute(\"immutableClassCanonicalNames\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69b07534fa67cf30513d53eabf887efd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/LineCommentAtTheEndOfFileTest.java", "commitBeforeChange": "2fe5ade8b31c0c7b32fab4e25f1ec73c9ab31b8d", "commitAfterChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testCanParse()         throws Exception", "signatureAfterChange": "      @Test     public void testCanParse()         throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"grammars/LineCommentAtTheEndOfFile.java\"),", "+        verify(checkConfig, getPath(\"LineCommentAtTheEndOfFile.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a0d299c9ae535861a4db87590b241b7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testSingleAll() throws Exception", "signatureAfterChange": "     @Test     public void testSingleAll() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsSingle.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsSingle.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a15161f5f3004b98fe78835a86bc24d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter6programpractice/rule64finalizers/NoFinalizerTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b3a36d0078eea868cf973a415da51aa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCalculation() throws Exception", "signatureAfterChange": "      @Test     public void testCalculation() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ComplexityCheckTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputComplexityCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b83564d000da49a30d9074b59f1b6ca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java", "commitBeforeChange": "a8b8375b1db65b131938111ff283baed771161ed", "commitAfterChange": "dcb3029c008907edf6aa4b59a51349f0ca94f54b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      protected DefaultConfiguration createCheckerConfig(Configuration aConfig)", "signatureAfterChange": "      protected DefaultConfiguration createCheckerConfig(Configuration aConfig)", "diff": ["-        dc.addAttribute(\"charset\", \"iso-8859-1\");", "+        dc.addAttribute(\"charset\", \"UTF-8\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b8ec89ce6764759ffe6a472061f0b8a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java", "commitBeforeChange": "edc4cc9ffc1a5b872398af9d6735b4bde75de385", "commitAfterChange": "a077b7282714b38286a09dcea10b710e5121a246", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testInstanceInit() throws Exception", "signatureAfterChange": "      @Test     public void testInstanceInit() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ComplexityCheckTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"ExecutableStatementCountInput.java\"), expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ba8f9e38d917f559ffa2b6fc8f9dce0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 25, "signatureBeforeChange": "      @Test     public void testMembers() throws Exception", "signatureAfterChange": "      @Test     public void testMembers() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputMembers.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputMembers.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bc47142753baf019866af4c596e93a8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheckTest.java", "commitBeforeChange": "b8c558e473c0a9a75c41312e31df34b8572a271b", "commitAfterChange": "58ce4c40970fc29d00e5740bc6098eb475668e86", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testTagsWithResolver()         throws Exception", "signatureAfterChange": "      public void testTagsWithResolver()         throws Exception", "diff": ["-        checkConfig.addAttribute(\"checkUnusedThrows\", \"true\");", "+        checkConfig.addAttribute(\"allowUndeclaredRTE\", \"true\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6be93e23269892d86379261be5223a0b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void test() throws Exception", "signatureAfterChange": "      @Test     public void test() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"JavaNCSSCheckTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJavaNCSS.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c9230b13969310297cb2a4cab1ede65", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testDefaultAnnotationPatterns() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultAnnotationPatterns() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"AnnotatedVisibility.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAnnotatedVisibility.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d4119351216c19eb9a0957da8c86961", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testProcessJavadoc() throws Exception", "signatureAfterChange": "      @Test     public void testProcessJavadoc() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputUnusedImportsCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputUnusedImports.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d490b855bea68a0a2df1ddee29e6829", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testWithOneArgWithOneLineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithOneLineBody()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest4.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda4.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6df27f3f20a885306f1753e077a3cc9e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule233nonascii/AvoidEscapedUnicodeCharactersCheckTest.java", "commitBeforeChange": "fbd3d53641368f6bcacc7b8015d434625fda116b", "commitAfterChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void unicodeEscapesTest() throws Exception", "signatureAfterChange": "      @Test     public void unicodeEscapesTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"AvoidEscapedUnicodeCharactersInput\");", "+        final String filePath = builder.getFilePath(\"InputAvoidEscapedUnicodeCharacters\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e2a1aeab39e8ba6b375d0099f467ff1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testWrongDefault() throws Exception", "signatureAfterChange": "      @Test     public void testWrongDefault() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputOuterTypeFilenameCheck5.java\"), expected);", "+        verify(checkConfig, getPath(\"InputOuterTypeFilename5.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e465d1bb496a5dd37955c21c39dd767", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PropertyCacheFileTest.java", "commitBeforeChange": "5dffb5a301b2605c730d1de3f312ba4a7f95355e", "commitAfterChange": "4d8d047f465f9eb101390da63ee62a735fbedba5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCtor() throws IOException", "signatureAfterChange": "      @Test     public void testCtor() throws IOException", "diff": ["-            Configuration config = new DefaultConfiguration(\"myname\");", "+            Configuration config = new DefaultConfiguration(\"myName\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e6efe4e0e0f440f2d1d3a792de7ed7a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "          public void testVersionRegularEx()         throws Exception", "signatureAfterChange": "          public void testVersionRegularEx()         throws Exception", "diff": ["-        checkConfig.addAttribute(\"versionFormat\", \"^[:digit:]+\\\\.[:digit:]+$\");", "+        checkConfig.addAttribute(\"versionFormat\", \"^\\\\p{Digit}+\\\\.\\\\p{Digit}+$\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f252e823adf91373ba8c0efe1735172", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheckTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testNospaceWithComplexInput() throws Exception", "signatureAfterChange": "      @Test     public void testNospaceWithComplexInput() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputParenPad.java\"), expected);", "+        verify(checkConfig, getPath(\"InputParenPad.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f3cfc4759e214e15a1bdd3f92c960ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     @Test     public void testCompactNoUnchecked() throws Exception", "signatureAfterChange": "     @Test     public void testCompactNoUnchecked() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsCompact.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsCompact.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f58bdba057ee0e1d07720bc0ca55966", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/FileLengthCheckTest.java", "commitBeforeChange": "81dab0c14131c72066f28cf8dbbddd1db3ea3a38", "commitAfterChange": "eb7b7bfd3e63a926c3f3b2801d519caa0e1fffc3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testAlarm() throws Exception", "signatureAfterChange": "      public void testAlarm() throws Exception", "diff": ["-            \"1:1: File length is 198 lines (max allowed is 20).\"", "+            \"1: File length is 198 lines (max allowed is 20).\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f782988595ad4e912af17a9f1bc0bab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4841indentation/IndentationTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new IndentationConfigurationBuilder(new File(\"src/\"));", "+        builder = new IndentationConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70240a353b7575613f366dda64cd85d3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testWithoutArgsFullLambdaBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithoutArgsFullLambdaBody()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest3.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda3.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7118b48739026e83d0bc8bb2d9c989ff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testIgnoreCommentsFalseCStyle() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCommentsFalseCStyle() throws Exception", "diff": ["-            \"17: Line matches the illegal pattern '\" + illegal + \"'.\",", "+            \"19: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71bc8e3d604b03396173203a0dc0fe19", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/WhitespaceAroundTest.java", "commitBeforeChange": "4346d41010a729e14991e30706bdb16ff18ff39a", "commitAfterChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void whitespaceAroundEmptyTypesCyclesTest() throws Exception", "signatureAfterChange": "      @Test     public void whitespaceAroundEmptyTypesCyclesTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"WhitespaceAroundInput_EmptyTypesAndCycles\");", "+        final String filePath = builder.getFilePath(\"InputWhitespaceAroundEmptyTypesAndCycles\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "725f1453ca1f5e2c4d1723242ae5d132", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/GenericWhitespaceTest.java", "commitBeforeChange": "4346d41010a729e14991e30706bdb16ff18ff39a", "commitAfterChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void genericWhitespaceTest() throws Exception", "signatureAfterChange": "      @Test     public void genericWhitespaceTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"GenericWhitespaceInput\");", "+        final String filePath = builder.getFilePath(\"InputGenericWhitespace\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "729e915295d5aba1ff6cc3686882811d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCtorDef() throws Exception", "signatureAfterChange": "      @Test     public void testCtorDef() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ExecutableStatementCountInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputExecutableStatementCount.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72a1eaa1c0e732bfd1b7a8844f67f65c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule521packagenames/PackageNameTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "               @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "               @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72f86076c9fdf0879fa596fb5a61ebea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheckTest.java", "commitBeforeChange": "e23953e9e80b2eddfd710eaec97b1357921d756c", "commitAfterChange": "11dc88a9c149838d94f62965004452f3cf98d8cc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testModifiedControlVariable() throws Exception", "signatureAfterChange": "      @Test     public void testModifiedControlVariable() throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"coding/InputModifiedControl.java\"), expected);", "+        verify(checkConfig, getPath(\"InputModifiedControl.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73e18612da166041eec41d5fd81aca42", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testAllowClassImports() throws Exception", "signatureAfterChange": "      @Test     public void testAllowClassImports() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAvoidStarImportCheck.java\"), expected2);", "+        verify(checkConfig, getPath(\"InputAvoidStarImport.java\"), expected2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7405b39557902c754eb3e9b8e09d4b4f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheckTest.java", "commitBeforeChange": "10352e146f048c7938af5949925b0eb19781a0b1", "commitAfterChange": "bee6b0a1ec26b04e2d738221bdce4bd159b278d2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testRegexpHeaderIgnore() throws Exception", "signatureAfterChange": "      @Test     public void testRegexpHeaderIgnore() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputScopeAnonInner.java\"), expected);", "+        verify(checkConfig, getPath(\"InputRegexpHeader7.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "741408b2edf676e513db691d022410c8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefault()         throws Exception", "signatureAfterChange": "      @Test     public void testDefault()         throws Exception", "diff": ["+", "-            \"52:29: \" + getCheckMessage(LINE_NEW, \"&\"),", "+            \"52:30: \" + getCheckMessage(LINE_NEW, \"&\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7426df4d7696cfd9f80dbb4cead29a08", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testEmptyJavadocLine() throws Exception", "signatureAfterChange": "      @Test     public void testEmptyJavadocLine() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputMissingDeprecatedCheckTest2.java\"), expected);", "+        verify(checkConfig, getPath(\"InputMissingDeprecated2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74acf4ae27dcd982643a0fc00d81e3ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      @Test     public void testUncheckedInConstant() throws Exception", "signatureAfterChange": "      @Test     public void testUncheckedInConstant() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsConstants.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsConstants.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74ff35d1e473e79217ff56d07f44e14a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testCommaNeverNoViolations() throws Exception", "signatureAfterChange": "      @Test     public void testCommaNeverNoViolations() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"AnnotationUseNoTrailingComma.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAnnotationUseNoTrailingComma.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7504bfc4f0f9dacd5d381836f95cb947", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/IndentationCheckTest.java", "commitBeforeChange": "bf6758b29dbb6f0e22d4951ea3bd25fdf45299fc", "commitAfterChange": "eaad55fdba73e17e103dc6600867f26fd6a3896b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "               public void testInvalidMethodWithChecker()         throws Exception", "signatureAfterChange": "               public void testInvalidMethodWithChecker()         throws Exception", "diff": ["-            \"158: method def throws at indentation level 6 not at correct indentation, 4\",", "+            \"158: method def throws at indentation level 6 not at correct indentation, 8\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75223d85cf4f89e2c13c07240f4c2d67", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCheck() throws Exception", "signatureAfterChange": "      @Test     public void testCheck() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputJavaDocTagContinuationIndentation.java\"),", "+        verify(checkConfig, getPath(\"InputJavaDocTagContinuationIndentation.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75309d0414b596ea4b7e88c092d3fe08", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testSwitchBlockAsSingleDecisionPointSetToFalse() throws Exception", "signatureAfterChange": "      @Test     public void testSwitchBlockAsSingleDecisionPointSetToFalse() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ComplexityCheckSwitchBlocksTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputComplexityCheckSwitchBlocks.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "754e1a2c45c9a3ff30122aa5193e1067", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefaultTokensLineWrapping() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultTokensLineWrapping() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"NoLineWrapBadInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputNoLineWrapBad.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75a658cb648a513df11ef9304bfce847", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/NewHandlerTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testInvalidLabel() throws Exception", "signatureAfterChange": "      @Test     public void testInvalidLabel() throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"NewHandlerTestInput.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputNewHandler.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75b847fbc018bf960038e7517381431f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/EmptyStatementCheckTest.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testEmptyStatements()         throws Exception", "signatureAfterChange": "     public void testEmptyStatements()         throws Exception", "diff": ["-           \"22:15: Empty statement.\",", "+           \"22:19: Empty statement.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75c18775cc57c0de6a81c28ace1857e6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 48, "signatureBeforeChange": "      @Test     public void testValidBlockWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testValidBlockWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputValidBlockIndent.java\");", "+        final String fname = getPath(\"InputValidBlockIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75c51b300e3a784f356f6a6c326b5026", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ExecutableStatementCountInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputExecutableStatementCount.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75d527dc00784e7a454d4d1df01eb0a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/IllegalImportCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testWithSupplied()         throws Exception", "signatureAfterChange": "      @Test     public void testWithSupplied()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputIllegalImportCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalImport.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75df6065ab20e1a3192615a408ebe4f7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testEmptyStatements()         throws Exception", "signatureAfterChange": "      public void testEmptyStatements()         throws Exception", "diff": ["-           \"22:15: Empty statement.\",", "+           \"22:19: Empty statement.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "762efb9d3f2c2b2865543fc4d25aaa89", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 49, "signatureBeforeChange": "      @Test     public void testValidWhileWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testValidWhileWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputValidWhileIndent.java\");", "+        final String fname = getPath(\"InputValidWhileIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "764e460290dbeaa5a62d6e89010a8d8b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/UnicodeEscapeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCanParse()         throws Exception", "signatureAfterChange": "      @Test     public void testCanParse()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"UnicodeEscape.java\"), expected);", "+        verify(checkConfig, getPath(\"InputUnicodeEscape.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "765de1c1dcc4ce0bf9472edf9a0d40bf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/GenericWhitespaceTest.java", "commitBeforeChange": "4346d41010a729e14991e30706bdb16ff18ff39a", "commitAfterChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void whitespaceAroundGenericsTest() throws Exception", "signatureAfterChange": "      @Test     public void whitespaceAroundGenericsTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"WhitespaceAroundInput_Generics\");", "+        final String filePath = builder.getFilePath(\"InputWhitespaceAroundGenerics\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "768f968d63a0a71534f4830e62246c5b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testWithOneArgWithoutParenthesesWithoutTypeOneLineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithoutParenthesesWithoutTypeOneLineBody()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest10.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda10.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76fb6678c91cb30f21bc76a0e7890628", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "9dbc71956635b56a20780d484454e177897b5788", "commitAfterChange": "71d0a829e42bfcbfa3fd692a29abf8796e467fc9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testNLWithAnnotations() throws Exception", "signatureAfterChange": "      @Test     public void testNLWithAnnotations() throws Exception", "diff": ["-            \"58:32: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"66:32: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77388815e73b09aaf019a238d1b1b882", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessageTest.java", "commitBeforeChange": "252ee0c9e1556c0db37e29f18773d74f374a15b5", "commitAfterChange": "5e40ee669c6c275a4ef14858fda08f36750aadd3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private static LocalizedMessage createSampleLocalizedMessage()", "signatureAfterChange": "      private static LocalizedMessage createSampleLocalizedMessage()", "diff": ["-                \"empty.statement\", new Object[]{}, \"\", LocalizedMessage.class, null);", "+                \"empty.statement\", new Object[]{}, \"module\", LocalizedMessage.class, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7739fb7590210b62a01682558ae40199", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void test() throws Exception", "signatureAfterChange": "      @Test     public void test() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputComplexityCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputComplexity.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7765484fbf58c24b2eaf0499518272bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "de60ea7b86b5ea25338dfe8a300db9d179004812", "commitAfterChange": "e24596db9459a3592784a544b213cc7aa919a3f6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testReturnFromFinally() throws Exception", "signatureAfterChange": "      @Test     public void testReturnFromFinally() throws Exception", "diff": ["-               getPath(\"coding\" + File.separator + \"InputReturnFromFinallyCheck.java\"),", "+               getPath(\"checks\" + File.separator + \"InputReturnFromFinallyCheck.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "779ebadc9c5ae2f3d4358edb18754012", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheckTest.java", "commitBeforeChange": "7e5e919ce7db115c5893fa23e07a3cf1acfc3f10", "commitAfterChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testThrees() throws Exception", "signatureAfterChange": "      @Test     public void testThrees() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"sizes/MethodCountCheckInput.java\"), expected);", "+        verify(checkConfig, getPath(\"MethodCountCheckInput.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77f3d222a0b22002e3b366bbae2e4ca2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/AnnotationTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testAnnotationInCatchParameters()         throws Exception", "signatureAfterChange": "      @Test     public void testAnnotationInCatchParameters()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputAnnotationsTest10.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputAnnotations10.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78399d79c8983521efb235183dada1cf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     @Test     public void testSingleNoUncheckedUnusedAll() throws Exception", "signatureAfterChange": "     @Test     public void testSingleNoUncheckedUnusedAll() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsSingle.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsSingle.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78663c19456d6653e9f6ea24fe2bdafe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java", "commitBeforeChange": "2440fa45b2ccf80b8ba8d044457a87a020832293", "commitAfterChange": "ee6de76ea79d5e8400670dcf441f481e291d40e5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public final void configure(Configuration aConfiguration)         throws CheckstyleException", "signatureAfterChange": "     public final void configure(Configuration aConfiguration)         throws CheckstyleException", "diff": ["-                    \"Cannot set property '\" + key + \"' in module\"", "+                    \"Cannot set property '\" + key + \"' in module \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7883b503273c5a1255a8c98258a8fa2c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "37bc6ba73748aac4ef2aa272c8a8b74b1bf28d10", "commitAfterChange": "76374876692534687016dba762a465bf93039402", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void process(File aFile)", "signatureAfterChange": "     private void process(File aFile)", "diff": ["-                        new String[] {\"\"},", "+                        new String[]", "+                            {\"TokenStreamRecognitionException occured.\"},"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "788b08b094ee93bed1fd3645071c3342", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4841indentation/IndentationTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void correctFieldTest() throws Exception", "signatureAfterChange": "      @Test     public void correctFieldTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"IndentationCorrectFieldAndParameterInput\");", "+        final String filePath = builder.getFilePath(\"InputIndentationCorrectFieldAndParameter\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78a596b64fda070cd5ddbe68e215dca7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      @Test     public void listWithUnclosedItemInUnclosedParagraph()         throws IOException", "signatureAfterChange": "      @Test     public void listWithUnclosedItemInUnclosedParagraph()         throws IOException", "diff": ["-        String filename = getHtmlPath(\"ListWithUnclosedItemInUnclosedParagraph.txt\");", "+        String filename = getHtmlPath(\"InputListWithUnclosedItemInUnclosedParagraph.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79b4e027b3ced912dcf367bafcbb06e4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "2c65534095e444b03bc2665b1fcd9ae3e60a01fc", "commitAfterChange": "2b53548ad0b56562256c824d4a6b5465abc53652", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testNL3() throws Exception", "signatureAfterChange": "      @Test     public void testNL3() throws Exception", "diff": ["-            \"142:36: '{' should be on a new line.\",", "+            \"142:37: '{' should be on a new line.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a30d23a0672b6e9145478b7f632963f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "9c488c1f512ffcc58af433842c992bd3f85b2d63", "commitAfterChange": "f47587c9fb66cf46fbd2eb5691449cda6d551ecb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testMinimumDepth()         throws Exception", "signatureAfterChange": "      @Test     public void testMinimumDepth()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/InputIllegalTokens.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a3630716e356144834edd6d1793c3c7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/RegexpCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testIgnoreCommentsFalseCStyle() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCommentsFalseCStyle() throws Exception", "diff": ["-            \"17: Line matches the illegal pattern '\" + illegal + \"'.\",", "+            \"19: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a4b2891477f0b66c4e279099861aedd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "9c488c1f512ffcc58af433842c992bd3f85b2d63", "commitAfterChange": "f47587c9fb66cf46fbd2eb5691449cda6d551ecb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testMaximumNumber()         throws Exception", "signatureAfterChange": "      @Test     public void testMaximumNumber()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/InputIllegalTokens.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a8f2bff0e01c42bbe5c9372610177ce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/PackageNameCheck.java", "commitBeforeChange": "5dfdce6d5cda0bf8a7b68ee8b6ff348d700c5937", "commitAfterChange": "c97f8557e9bc61e77eda7974b0a832dea9fbe0c8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public PackageNameCheck()", "signatureAfterChange": "     public PackageNameCheck()", "diff": ["-        super(\"^[a-z]+(\\\\.[a-zA-Z_][a-zA-Z_0-9]*)*$\");", "+        super(\"^[a-z]+(\\\\.[a-zA-Z_][a-zA-Z0-9_]*)*$\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b01663f4fe509cb483654a037b2aaf9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ClassCouplingCheckTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputClassCoupling.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bd4938cddbcc0bbc9c6e486783c4178", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheckTest.java", "commitBeforeChange": "ca89807d485f512061d7a7138aa91b454d85d466", "commitAfterChange": "ecd7ee879aa6cbc51fcb41093dbf42843256184f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testMethodsOnly() throws Exception", "signatureAfterChange": "      @Test     public void testMethodsOnly() throws Exception", "diff": ["-            \"14:9: Method call to 'method1' needs \\\"this.\\\".\",", "+            \"17:9: Method call to 'method1' needs \\\"this.\\\".\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7be007c6c755e6f4196802fda67f2a29", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void testIgnoreAnnotationSameName() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreAnnotationSameName() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"AnnotatedVisibilitySameTypeName.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAnnotatedVisibilitySameTypeName.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bfce98842bc292e53ee773f37335a0e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testNoPeriod() throws Exception", "signatureAfterChange": "      @Test     public void testNoPeriod() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputSummaryJavadocCheckNoPeriod.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSummaryJavadocNoPeriod.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bfd649cf26d0b5c20562c709e5f5bd6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 56, "signatureBeforeChange": "      @Test     public void testCaseLevel() throws Exception", "signatureAfterChange": "      @Test     public void testCaseLevel() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputCaseLevel.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputCaseLevel.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c94ea533b7488f3480e896d368fae14", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/MethodReferencesTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCanParse()         throws Exception", "signatureAfterChange": "      @Test     public void testCanParse()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputMethodReferencesTest.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputMethodReferences.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d86d75b4994ba36386abedaa35b0b98", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 54, "signatureBeforeChange": "      @Test     public void testIndentationLevel() throws Exception", "signatureAfterChange": "      @Test     public void testIndentationLevel() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputUseTwoSpaces.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputUseTwoSpaces.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7daa96e23c14c1423b63d08755304b03", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "4905940ea81d7d3747a3a9f466ee5f2bf496ebd3", "commitAfterChange": "c8b42075fe76f67ee744f1b1d3ef24e27ae932d7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testLoadFromURL() throws CheckstyleException", "signatureAfterChange": "      @Test     public void testLoadFromURL() throws CheckstyleException", "diff": ["-        final FilterSet fc = SuppressionsLoader.loadSuppressions(\"http://sourceforge.net/p/checkstyle/code/ci/default/tree/src/testinputs/com/puppycrawl/tools/checkstyle/suppressions_none.xml?format=raw\");", "+        final FilterSet fc = SuppressionsLoader.loadSuppressions(\"https://raw.github.com/checkstyle/checkstyle/master/src/testinputs/com/puppycrawl/tools/checkstyle/suppressions_none.xml\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dc868d5dd01d5ad111e7f62b9967886", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheckTest.java", "commitBeforeChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "commitAfterChange": "6125beffc437f970eae276b4a6542265c6547784", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testAlarm() throws Exception", "signatureAfterChange": "      public void testAlarm() throws Exception", "diff": ["-            \"1: File length is 198 lines (max allowed is 20).\"", "+            \"1: File length is 225 lines (max allowed is 20).\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dcb3f6cc7519006cf3547bad3491fed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyRightCurlyTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void rightCurlyTestSame() throws Exception", "signatureAfterChange": "      @Test     public void rightCurlyTestSame() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"RightCurlyInputSame\");", "+        final String filePath = builder.getFilePath(\"InputRightCurlySame\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dde2eb8404219cd4dc8ad83ca88a8d5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyCatchBlockTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testNoViolations() throws Exception", "signatureAfterChange": "      @Test     public void testNoViolations() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"EmptyCatchBlockNoViolationsInput\");", "+        final String filePath = builder.getFilePath(\"InputEmptyCatchBlockNoViolations\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e1736c74b5234c1a2030bcf8650c3f4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4832nocstylearray/ArrayTypeStyleTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e3ae22ac21421ee1cefecc2b87fa51d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyCatchBlockTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testViolationsByComment() throws Exception", "signatureAfterChange": "      @Test     public void testViolationsByComment() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"EmptyCatchBlockViolationsByCommentInput\");", "+        final String filePath = builder.getFilePath(\"InputEmptyCatchBlockViolationsByComment\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e407c636f02b63be0456ce46097d9c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "3d8c8ae213afba764acb9758dc89d8a613f4ea66", "commitAfterChange": "dc764f3b6ad475854cd0d22655db3f96e7eb7ed3", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      public void testIgnoreAccess()         throws Exception", "signatureAfterChange": "      public void testIgnoreAccess()         throws Exception", "diff": ["-            filepath + \":24: variable 'data' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\",", "+            filepath + \":24:16: variable 'data' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e507697c0359f384d92f0167169f288", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/NonEmptyAtclauseDescriptionCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCheck()             throws Exception", "signatureAfterChange": "      @Test     public void testCheck()             throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputNonEmptyAtclauseDescriptionCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputNonEmptyAtclauseDescription.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ef06025492c8b1e63c0b41538eaae94", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule523methodnames/MethodNameTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7effb468e25375e0d793960f29b0326c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void linkInlineTags()         throws IOException", "signatureAfterChange": "      @Test     public void linkInlineTags()         throws IOException", "diff": ["-        String filename = getDocPath(\"LinkInlineTags.txt\");", "+        String filename = getDocPath(\"InputLinkInlineTags.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ffe61d53fb067da17afca0f3835fb57", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 27, "signatureBeforeChange": "      @Test     public void testInvalidLabelWithWhileLoop() throws Exception", "signatureAfterChange": "      @Test     public void testInvalidLabelWithWhileLoop() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputInvalidLabelWithWhileLoopIndent.java\"),", "+        verifyWarns(checkConfig, getPath(\"InputInvalidLabelWithWhileLoopIndent.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80613ca9f646e7398c8ceb10b1c87fa5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Test     public void testIgnoreAnnotationNoPattern() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreAnnotationNoPattern() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"AnnotatedVisibility.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAnnotatedVisibility.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80894d2650fa93d93f2b062adf8d7d5e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule72thesummaryfragment/SummaryJavadocTest.java", "commitBeforeChange": "4cdfe5c510b5a9975320aee2f58ebc9357ad6d68", "commitAfterChange": "6eb080a3d20e0b856627b45617bca934845a7ed4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIncorrect() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrect() throws Exception", "diff": ["-        final Configuration checkConfig = getCheckConfig(\"SummaryJavadocCheck\");", "+        final Configuration checkConfig = getCheckConfig(\"SummaryJavadoc\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8090b8509ecd02e5b6846bb7f9fa18b1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void testIgnoreAccess()         throws Exception", "signatureAfterChange": "      public void testIgnoreAccess()         throws Exception", "diff": ["-            filepath + \":24:16: variable 'data' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\",", "+            filepath + \":24:16: variable name 'data' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80cb3a2e4bb85f55395f268905e22836", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testSwitchWhitespaceAround() throws Exception", "signatureAfterChange": "      @Test     public void testSwitchWhitespaceAround() throws Exception", "diff": ["-        verify(checkConfig,", "-               getPath(\"whitespace/InputSwitchWhitespaceAround.java\"),", "-               expected);", "+        verify(checkConfig, getPath(\"InputSwitchWhitespaceAround.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80f29ccf4dc3ee64c57ed7aa06a97a0a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule527localvariablenames/LocalVariableNameTest.java", "commitBeforeChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "commitAfterChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void oneCharTest() throws Exception", "signatureAfterChange": "      @Test     public void oneCharTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"LocalVariableNameInput_OneCharVarName\");", "+        final String filePath = builder.getFilePath(\"InputLocalVariableNameOneCharVarName\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "811073fcb432d3e7012952a7c35b63b8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 65, "signatureBeforeChange": "      @Test     public void testSynchronizedMethod() throws Exception", "signatureAfterChange": "      @Test     public void testSynchronizedMethod() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputSynchronizedMethod.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputSynchronizedMethod.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8128f27cb455764ea57cfe80e12d3399", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     public void testStyleNotInList() throws Exception", "signatureAfterChange": "      @Test     public void testStyleNotInList() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAnnotationUseStyleCheckTest.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAnnotationUseStyle.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81ac6a7f8aa317a2b7ba7c2eb2e7da98", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "      @Test     public void testThrowsIndentationLevel() throws Exception", "signatureAfterChange": "      @Test     public void testThrowsIndentationLevel() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"InvalidInputThrowsIndent.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputInvalidThrowsIndent.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81d3409b2466a6f59df658564eac1d5e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void since()         throws IOException", "signatureAfterChange": "      @Test     public void since()         throws IOException", "diff": ["-        String filename = getDocPath(\"Since.txt\");", "+        String filename = getDocPath(\"InputSince.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81d9b5193a1010fffca3bcd18763a99b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheckTest.java", "commitBeforeChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "commitAfterChange": "cb5a59fc6baf5de204e3cc99be6ba9865e44350a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testNonExistingHeaderFile() throws Exception", "signatureAfterChange": "      @Test     public void testNonExistingHeaderFile() throws Exception", "diff": ["-        checkConfig.addAttribute(\"headerFile\", getPath(\"nonexisting.file\"));", "+        checkConfig.addAttribute(\"headerFile\", getPath(\"nonExisting.file\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82656aae09b02cf438120d4051672435", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d92ceb81a67bb10b98f5ce305f839ba535a1c6ee", "commitAfterChange": "9aa8268e473071cbe26aa9d3a8631f1902e3fef0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testWhitespaceCastParenOff()         throws Exception", "signatureAfterChange": "      public void testWhitespaceCastParenOff()         throws Exception", "diff": ["-            filepath + \":13: type Javadoc comment is missing an @author tag.\",", "+            filepath + \":13: Type Javadoc comment is missing an @author tag.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82715e199f4ad963afa207b79af64fd2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/RegexpCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testIgnoreCommentsFalseCppStyle() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCommentsFalseCppStyle() throws Exception", "diff": ["-            \"2: Line matches the illegal pattern '\" + illegal + \"'.\",", "+            \"4: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83027e7ebdc7cf78df1328325f848338", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheckTest.java", "commitBeforeChange": "4cc300a8e53fec7264ecfb5702369de14fd8a242", "commitAfterChange": "2e3654c59be793a9e9d06f38f0624bfae0e075bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault()         throws Exception", "signatureAfterChange": "     @Test     public void testDefault()         throws Exception", "diff": ["-            \"194:10: More than 7 parameters.\",", "+            \"194:10: More than 7 parameters (found 9).\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8339b3935f5ff610af814965b7a337de", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     @Test     public void testGoodAnnotationOverride() throws Exception", "signatureAfterChange": "     @Test     public void testGoodAnnotationOverride() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"GoodAnnotationOverride.java\"), expected);", "+        verify(checkConfig, getPath(\"InputGoodAnnotationOverride.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83857de8acc896c5ccad3b9b5bf5f7a4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testJava8() throws Exception", "signatureAfterChange": "      @Test     public void testJava8() throws Exception", "diff": ["-                getNonCompilablePath(\"InputIllegalInstantiationCheckTest2.java\"),", "+                getNonCompilablePath(\"InputIllegalInstantiation2.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83d87e817a1c8714ba052c6745ea2e1c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MemberNameCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testPackageOnly() throws Exception", "signatureAfterChange": "      @Test     public void testPackageOnly() throws Exception", "diff": ["-            \"5:9: Name 'mPackage' must match pattern '^_[a-z]*$'.\",", "+            \"7:9: Name 'mPackage' must match pattern '^_[a-z]*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "846bd7d41bcd20c132b2ebf18cb458eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SingleLineJavadocCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testIgnoredTags() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoredTags() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputSingleLineJavadocCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSingleLineJavadoc.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84740f2a8ba801183d88d34ed91c47d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheckTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testArrayDeclarations() throws Exception", "signatureAfterChange": "      @Test     public void testArrayDeclarations() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputNoWhitespaceAfterArrayDeclarations.java\"), expected);", "+        verify(checkConfig, getPath(\"InputNoWhitespaceAfterArrayDeclarations.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84dc00e28369883abfdf43824451d9d8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/HideUtilityClassConstructorCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testUtilClassPublicCtor() throws Exception", "signatureAfterChange": "      @Test     public void testUtilClassPublicCtor() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"UtilityClassConstructorPublic.java\"), expected);", "+        verify(checkConfig, getPath(\"InputUtilityClassConstructorPublic.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84f692bade8a7d7ac7bfe842cdf815a7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testPrePreviousLineEmptiness() throws Exception", "signatureAfterChange": "      @Test     public void testPrePreviousLineEmptiness() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputPrePreviousLineEmptiness.java\"), expected);", "+        verify(checkConfig, getPath(\"InputPrePreviousLineEmptiness.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "853053488410108da4785ce097e5270b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testFinePublic() throws Exception", "signatureAfterChange": "      @Test     public void testFinePublic() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputOuterTypeFilenameCheck2.java\"), expected);", "+        verify(checkConfig, getPath(\"InputOuterTypeFilename2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "858fc99be42eeecd63bba2199ca909ab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "4ae4bb3a9c9eec3e79b77b4e3e5651c3d040a36e", "commitAfterChange": "45379946e7cc7bcd45b5b587b7c1232400aea4f6", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      @Test     public void testCorrectIfAndParameters() throws Exception", "signatureAfterChange": "      @Test     public void testCorrectIfAndParameters() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"IndentationCorrectIfAndParameterInput.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputIndentationCorrectIfAndParameter.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85e3d1aad0c32c761156bf9ab31fc3a7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheckTest.java", "commitBeforeChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "commitAfterChange": "fa5884271348f0cfaaa1160e18028d37845af4dd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testCatch()         throws Exception", "signatureAfterChange": "      @Test     public void testCatch()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/naming/InputCatchOnly.java\"), expected);", "+        verify(checkConfig, getPath(\"InputCatchOnly.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86199554990e16c2b2f9b0a91d158523", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testMaxZero() throws Exception", "signatureAfterChange": "      @Test     public void testMaxZero() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ExecutableStatementCountInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputExecutableStatementCount.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "868f6fcb756e60539337ee98d048a764", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      @Test     public void testWithSumLessThenMinCustomMsg() throws Exception", "signatureAfterChange": "      @Test     public void testWithSumLessThenMinCustomMsg() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputReturnFromFinallyCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputReturnFromFinally.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86d481be67c93601dbdefa895c2ce1ce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "44cc8b53c90117295151ea6723f859287f51dda5", "commitAfterChange": "5aacffce41a8f8d6b79f0b4a771e3e5ce03c0d02", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": "      @Test     public void testGenerics3() throws Exception", "signatureAfterChange": "      @Test     public void testGenerics3() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/TestGenerics.java\"), expected);", "+        verify(checkConfig, getPath(\"TestGenerics.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "879e041ed695fd6a09cbe0ec62713577", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "44cc8b53c90117295151ea6723f859287f51dda5", "commitAfterChange": "5aacffce41a8f8d6b79f0b4a771e3e5ce03c0d02", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": "      @Test     public void testGenerics1() throws Exception", "signatureAfterChange": "      @Test     public void testGenerics1() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/TestGenerics.java\"), expected);", "+        verify(checkConfig, getPath(\"TestGenerics.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "881be44a2a33125ac3ed98342848ea7c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/GeneratedJava14LexerTest.java", "commitBeforeChange": "2fe5ade8b31c0c7b32fab4e25f1ec73c9ab31b8d", "commitAfterChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testUnexpectedChar() throws Exception", "signatureAfterChange": "      @Test     public void testUnexpectedChar() throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"grammars/InputGrammar.java\"), expected);", "+        verify(checkConfig, getPath(\"InputGrammar.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "884c788cc4f9f5eef1735cf1898c1e7f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testParsingErrors() throws Exception", "signatureAfterChange": "      @Test     public void testParsingErrors() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputParsingErrors.java\"), expected);", "+        verify(checkConfig, getPath(\"InputParsingErrors.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "886d2e820e8cda69e849c33a595fc5b3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheckTest.java", "commitBeforeChange": "3d81ece0258005a3264d550f8cffeedc27a3765c", "commitAfterChange": "47e6c23b4d9cd01731a90e3caeea33ca53a15516", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testFalsePositive() throws Exception", "signatureAfterChange": "      @Test     public void testFalsePositive() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputFinalLocalVariableCheckFalsePositive.java\"), expected);", "+        verify(checkConfig, getPath(\"InputFinalLocalVariableCheckFalsePositive.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "887e9b88aedcef5733cf0ef7bf81ec2e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "commitAfterChange": "7e5e919ce7db115c5893fa23e07a3cf1acfc3f10", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testTypeAndVariablesAndMethodNamesWithIgnoresFinal() throws Exception", "signatureAfterChange": "      @Test     public void testTypeAndVariablesAndMethodNamesWithIgnoresFinal() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"naming/InputAbbreviationAsWordInTypeNameCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "888709f3fea728153d5a4e223faf610e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      @Test     public void testGenerics3() throws Exception", "signatureAfterChange": "      @Test     public void testGenerics3() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"TestGenerics.java\"), expected);", "+        verify(checkConfig, getPath(\"InputTestGenerics.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88c1a6ac873ae77f6e7c43a17cfc095f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/HideUtilityClassConstructorCheckTest.java", "commitBeforeChange": "64c05f5391bdf55a60da22a685488022827aee84", "commitAfterChange": "1487e5161886d95cb8c82e4fb1a8b447fa7e32d0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testClassWithStaticInnerClass() throws Exception", "signatureAfterChange": "      @Test     public void testClassWithStaticInnerClass() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"HideUtilityClassContructor3041574_3.java\"), expected);", "+        verify(checkConfig, getPath(\"HideUtilityClassConstructor3041574_3.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88c99e708d1d33c83da6e8bc14d66ea6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheckTest.java", "commitBeforeChange": "524dd2e149045abdfbdb42282c78cf869d1f83d8", "commitAfterChange": "751fb5881113e58f492e3f2130533dca655a838a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testInvalidCharset() throws Exception", "signatureAfterChange": "      @Test     public void testInvalidCharset() throws Exception", "diff": ["-        checkConfig.addAttribute(\"headerFile\", getPath(\"java.header\"));", "+        checkConfig.addAttribute(\"headerFile\", getPath(\"config/java.header\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "892ec803d4abb144754c35ebc1712636", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/HexFloatsTest.java", "commitBeforeChange": "2fe5ade8b31c0c7b32fab4e25f1ec73c9ab31b8d", "commitAfterChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testCanParse()         throws Exception", "signatureAfterChange": "      @Test     public void testCanParse()         throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"grammars/InputHexFloat.java\"), expected);", "+        verify(checkConfig, getPath(\"InputHexFloat.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89c152e91c979f612ad461dfb7c040ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d92ceb81a67bb10b98f5ce305f839ba535a1c6ee", "commitAfterChange": "9aa8268e473071cbe26aa9d3a8631f1902e3fef0", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "      public void testNoVersion()         throws Exception", "signatureAfterChange": "      public void testNoVersion()         throws Exception", "diff": ["-            filepath + \":11: type Javadoc comment is missing an @version tag.\"", "+            filepath + \":11: Type Javadoc comment is missing an @version tag.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a2c3d237599e3c47034016d32de8af5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "44cc8b53c90117295151ea6723f859287f51dda5", "commitAfterChange": "5aacffce41a8f8d6b79f0b4a771e3e5ce03c0d02", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void extendAnnotationTest() throws Exception", "signatureAfterChange": "      @Test     public void extendAnnotationTest() throws Exception", "diff": ["-        verify(config, getPath(\"javadoc/ExtendAnnotation.java\"), expected);", "+        verify(config, getPath(\"ExtendAnnotation.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a5ecce4dbab2def469f918b5e367fd4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testMultipleEmptyLinesBetweenClassMembers() throws Exception", "signatureAfterChange": "      @Test     public void testMultipleEmptyLinesBetweenClassMembers() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputEmptyLineSeparatorCheckMultipleEmptyLines.java\"), expected);", "+        verify(checkConfig, getPath(\"InputEmptyLineSeparatorMultipleEmptyLines.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a70882c2ccf11fba9c3f620ad0925dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      @Test     public void negativeNumberInAttribute()         throws IOException", "signatureAfterChange": "      @Test     public void negativeNumberInAttribute()         throws IOException", "diff": ["-        String filename = getHtmlPath(\"NegativeNumberInAttribute.txt\");", "+        String filename = getHtmlPath(\"InputNegativeNumberInAttribute.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a91a8139f243fd48ff9c687c01a7ccf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testWithOneArgWithoutParenthesesWithoutTypeFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithoutParenthesesWithoutTypeFullBody()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest11.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda11.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a95f7e7bd19d247f50ea851db950e02", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheckTest.java", "commitBeforeChange": "7e5e919ce7db115c5893fa23e07a3cf1acfc3f10", "commitAfterChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testWithPackageModifier() throws Exception", "signatureAfterChange": "      @Test     public void testWithPackageModifier() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"sizes/MethodCountCheckInput3.java\"), expected);", "+        verify(checkConfig, getPath(\"MethodCountCheckInput3.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a9aa0df48a16636b6a51b3163faf197", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputGenericWhitespaceCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputGenericWhitespace.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ac24790709fa2da39abfdaa7f71b175", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/TypecastParenPadCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void test1322879() throws Exception", "signatureAfterChange": "      @Test     public void test1322879() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputWhitespaceAround.java\"),", "+        verify(checkConfig, getPath(\"checks/whitespace/InputWhitespaceAround.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b5141a99929867979f043ca7820bef3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testIncorrect() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrect() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputIncorrectSummaryJavaDocCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIncorrectSummaryJavaDoc.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b6a9260833d9d5fb2c0a7e08be89963", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingSwitchDefaultCheckTest.java", "commitBeforeChange": "b10558945cf4b11edfd4829945ae797ff01a6e00", "commitAfterChange": "d0bf96d90dc8b23c5831955bc9f28a5d79dbdb55", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testMissingSwitchDefault() throws Exception", "signatureAfterChange": "      @Test     public void testMissingSwitchDefault() throws Exception", "diff": ["-            \"15:9: switch without \\\"default\\\" clause.\",", "+            \"17:9: switch without \\\"default\\\" clause.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8be5e68c4f217eb75a146333d9e88a7d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testHeader() throws Exception", "signatureAfterChange": "      @Test     public void testHeader() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputEmptyLineSeparatorCheckHeader.java\"), expected);", "+        verify(checkConfig, getPath(\"InputEmptyLineSeparatorHeader.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c6663f75613b986621a8a2a82f48109", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyRightCurlyTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void leftCurlyMethodsTest() throws Exception", "signatureAfterChange": "      @Test     public void leftCurlyMethodsTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"LeftCurlyInput_Method\");", "+        final String filePath = builder.getFilePath(\"InputLeftCurlyMethod\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c995ce06aa45b7f24e282e578303c1a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testIncorrect() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrect() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputIncorrectAtClauseOrderCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIncorrectAtClauseOrder.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ca75312a717b2a7c4ae609eb8bf16d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "      @Test     public void testValuePairAnnotation() throws Exception", "signatureAfterChange": "      @Test     public void testValuePairAnnotation() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsValuePair.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsValuePair.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cdc28a0ca3e1aab8cccf4da1e1b0523", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheckTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testSpaceEmptyForIterator()         throws Exception", "signatureAfterChange": "      @Test     public void testSpaceEmptyForIterator()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/whitespace/InputForWhitespace.java\"), expected);", "+        verify(checkConfig, getPath(\"InputForWhitespace.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cfceebed4a3743b4773b21e58b2368a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void paramWithGeneric()         throws IOException", "signatureAfterChange": "      @Test     public void paramWithGeneric()         throws IOException", "diff": ["-        String filename = getDocPath(\"ParamWithGeneric.txt\");", "+        String filename = getDocPath(\"InputParamWithGeneric.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d0c86332b8d14545bb914a63d158a4d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "3852e12bece8c5770ed1ddd7c002ef9b4e5d175b", "commitAfterChange": "d86329ca8fe253b7b830b77595944d99a7ed4cfd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testLoadFromURL() throws CheckstyleException", "signatureAfterChange": "      @Test     public void testLoadFromURL() throws CheckstyleException", "diff": ["-        final FilterSet fc = SuppressionsLoader.loadSuppressions(\"http://checkstyle.hg.sourceforge.net/hgweb/checkstyle/checkstyle/raw-file/055e288619a5/src/testinputs/com/puppycrawl/tools/checkstyle/suppressions_none.xml\");", "+        final FilterSet fc = SuppressionsLoader.loadSuppressions(\"http://sourceforge.net/p/checkstyle/code/ci/default/tree/src/testinputs/com/puppycrawl/tools/checkstyle/suppressions_none.xml?format=raw\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d433f6440f001cc47688a3d96a1d06d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/IndentationCheckTest.java", "commitBeforeChange": "0eeb5e4fd6aa2c4b8a559e55384bba67d7d695c7", "commitAfterChange": "092e1f69476fc715852035a25b23a11804183a23", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "          public void testTabs()             throws Exception", "signatureAfterChange": "      public void testTabs()             throws Exception", "diff": ["-    ", "+", "-        checkConfig.addAttribute(\"indentationAmount\", new Integer(4).toString());", "+        checkConfig.addAttribute(\"basicOffset\", new Integer(4).toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e5a4e5a997bc66aef03a8464c6137c4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter6programpractice/rule64finalizers/NoFinalizerTest.java", "commitBeforeChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "commitAfterChange": "2a52c00d5de8a6b56df0b9678f831e5814170ca6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void noFinalizerBasicTest() throws Exception", "signatureAfterChange": "      @Test     public void noFinalizerBasicTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"NoFinalizerInput\");", "+        final String filePath = builder.getFilePath(\"InputNoFinalizer\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e6b4148ee8d057a180d4b7510e37928", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MethodNameCheckTest.java", "commitBeforeChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "commitAfterChange": "fa5884271348f0cfaaa1160e18028d37845af4dd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testOverriddenMethods() throws Exception", "signatureAfterChange": "      @Test     public void testOverriddenMethods() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"naming/InputMethodNameOverridenMethods.java\"), expected);", "+        verify(checkConfig, getPath(\"InputMethodNameOverridenMethods.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e6f572ab00089c7377bf7c588be5409", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 28, "signatureBeforeChange": "      @Test     public void testValidLabel() throws Exception", "signatureAfterChange": "      @Test     public void testValidLabel() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputValidLabelIndent.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputValidLabelIndent.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e704a4a2b3b210571a162e03368c100", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "44cc8b53c90117295151ea6723f859287f51dda5", "commitAfterChange": "5aacffce41a8f8d6b79f0b4a771e3e5ce03c0d02", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "      @Test     public void test11684081() throws Exception", "signatureAfterChange": "      @Test     public void test11684081() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/javadoc/Input_01.java\"), expected);", "+        verify(checkConfig, getPath(\"Input_01.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e998b01cb579ae309c7bd70fefdd226", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCorrect() throws Exception", "signatureAfterChange": "      @Test     public void testCorrect() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputCorrectSummaryJavaDocCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputCorrectSummaryJavaDocCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8eac6a2a5378eca6c9d8dfeede2276f9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testValidateBetweenScopesOption() throws Exception", "signatureAfterChange": "      @Test     public void testValidateBetweenScopesOption() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputVariableDeclarationUsageDistanceCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputVariableDeclarationUsageDistance.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f6016dc028f05b3384475d1c61f31b2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testSurroundingCode() throws Exception", "signatureAfterChange": "      @Test     public void testSurroundingCode() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputCommentsIndentationCheckSurroundingCode.java\"), expected);", "+        verify(checkConfig, getPath(\"InputCommentsIndentationSurroundingCode.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fb58a81899c6effdf949c49108cbad5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/AvoidInlineConditionalsCheck.java", "commitBeforeChange": "fcbd40f3ce04fe3011bf0e1b2642ac1fd049f5de", "commitAfterChange": "a054eca6fd6dc3608d344ef179206ef9112f5a4a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        log(aAST.getLineNo(), aAST.getColumnNo(),", "-            \"Avoid inline conditionals.\");", "+        log(aAST.getLineNo(), aAST.getColumnNo(), \"inline.conditional.avoid\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fc26763a02e87e822c6cfb2ba0e691c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/RedundantImportCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testWithChecker()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputRedundantImportCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputRedundantImport.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fd7a19c9dd7296a35ee49ee421ebbd3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtilsTest.java", "commitBeforeChange": "aef1f36b5a01b0a8da6557fd82c11a07baf350b2", "commitAfterChange": "49a23751eb6bffdfba94d72454d7676c9f85adc5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testInlineTagLinkText()", "signatureAfterChange": "      @Test     public void testInlineTagLinkText()", "diff": ["-            \"/** {@link  List link text }\",", "+            \"/** {@link List link text }\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9019f8a16f193dbb423275ab68121303", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testTypeAndVariablesAndMethodNamesWithIgnoresStatic() throws Exception", "signatureAfterChange": "      @Test     public void testTypeAndVariablesAndMethodNamesWithIgnoresStatic() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeName.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "905bf186c8ff0f6496ea60be7baae489", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4821onevariableperline/MultipleVariableDeclarationsTest.java", "commitBeforeChange": "4346d41010a729e14991e30706bdb16ff18ff39a", "commitAfterChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void multipleVariableDeclarationsTest() throws Exception", "signatureAfterChange": "      @Test     public void multipleVariableDeclarationsTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"MultipleVariableDeclarationsInput\");", "+        final String filePath = builder.getFilePath(\"InputMultipleVariableDeclarations\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90df7c3443f204eeca2ca8a9a490411d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/UnicodeEscapeTest.java", "commitBeforeChange": "2fe5ade8b31c0c7b32fab4e25f1ec73c9ab31b8d", "commitAfterChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testCanParse()         throws Exception", "signatureAfterChange": "      @Test     public void testCanParse()         throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"grammars/UnicodeEscape.java\"), expected);", "+        verify(checkConfig, getPath(\"UnicodeEscape.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9275b762fbe2486080ff63f4d8a8c7dc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyRightCurlyTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void leftCurlyBracesTest() throws Exception", "signatureAfterChange": "      @Test     public void leftCurlyBracesTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"LeftCurlyInput_Braces\");", "+        final String filePath = builder.getFilePath(\"InputLeftCurlyBraces\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93188df8cf472e673077268ba9b72b9c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/SeparatorWrapCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDot()         throws Exception", "signatureAfterChange": "      @Test     public void testDot()         throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"whitespace/InputSeparatorWrap.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSeparatorWrap.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "935330b03ef173f3c90b87893c25a683", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "      @Test     public void htmlComments()         throws IOException", "signatureAfterChange": "      @Test     public void htmlComments()         throws IOException", "diff": ["-        String filename = getHtmlPath(\"Comments.txt\");", "+        String filename = getHtmlPath(\"InputComments.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "936995bbe202bc8ba6965816cea676e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheckTest.java", "commitBeforeChange": "e76a439c2b0250808ce2723c43cd872a1761e294", "commitAfterChange": "96d3aaea19657ac233d9a57b46a52bc0b35eda95", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testOnlyModifiers() throws Exception", "signatureAfterChange": "      @Test     public void testOnlyModifiers() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputDeclarationOrder.java\"), expected);", "+        verify(checkConfig, getPath(\"InputDeclarationOrder.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93b6cdc06a7eb8e505da2f968570599a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/MethodReferencesTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testGenericInPostfixExpressionBeforeReference()         throws Exception", "signatureAfterChange": "      @Test     public void testGenericInPostfixExpressionBeforeReference()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputMethodReferencesTest3.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputMethodReferences3.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93e4db5da5dd20e1598962831fcdac26", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/PackageObjectFactoryTest.java", "commitBeforeChange": "03ac7a087862456e949f377e2153c47d310ca61e", "commitAfterChange": "d80cbf61042a3901b2f61de7ad4494ff93ea0e3c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testMakeCheckFromName()         throws CheckstyleException", "signatureAfterChange": "      public void testMakeCheckFromName()         throws CheckstyleException", "diff": ["-                        \"com.puppycrawl.tools.checkstyle.checks.ConstantName\");", "+                        \"com.puppycrawl.tools.checkstyle.checks.naming.ConstantName\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "941774e9b154edc36a855d557a64b722", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java", "commitBeforeChange": "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94", "commitAfterChange": "d6175fd6c95f64e854c1604e0331d8d1ab9dcaf3", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void testAllowMissingTypeParameters() throws Exception", "signatureAfterChange": "     public void testAllowMissingTypeParameters() throws Exception", "diff": ["-            \"7:4: Unused @param tag for '<D>'.\",", "+            \"7:4: Unused @param tag for '<D123>'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "941b9f7524de92e9a51a2fc1519c89da", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/HideUtilityClassConstructorCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testEmptyAbstractClass() throws Exception", "signatureAfterChange": "      @Test     public void testEmptyAbstractClass() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"HideUtilityClassConstructor3041574_1.java\"), expected);", "+        verify(checkConfig, getPath(\"InputHideUtilityClassConstructor3041574_1.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94530eb2a959a93c1e7e25660778821a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MemberNameCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testPublicOnly() throws Exception", "signatureAfterChange": "      @Test     public void testPublicOnly() throws Exception", "diff": ["-            \"3:16: Name 'mPublic' must match pattern '^_[a-z]*$'.\",", "+            \"5:16: Name 'mPublic' must match pattern '^_[a-z]*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "946aeadbbf1b4eb9bcc85673a2f0a42a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule53camelcase/AbbreviationAsWordInNameTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94b499f44bf8d3a645964660b573f81c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     @Test     public void testGoodOverrideFromOther() throws Exception", "signatureAfterChange": "     @Test     public void testGoodOverrideFromOther() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"GoodOverrideFromOther.java\"), expected);", "+        verify(checkConfig, getPath(\"InputGoodOverrideFromOther.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94e5c250d20398dd446632126666a015", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule332nolinewrap/NoLineWrapTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95c88733bd4a4aab0aba5b9f65c5a6f0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 31, "signatureBeforeChange": "      @Test     public void testValidMethodWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testValidMethodWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputValidMethodIndent.java\");", "+        final String fname = getPath(\"InputValidMethodIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95d70b905f3dda63b77493cd1681049e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule528typevariablenames/ClassMethodTypeParameterNameTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "961676e69d58662dc70683469be0ceba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testWithUserSetValues() throws Exception", "signatureAfterChange": "      @Test     public void testWithUserSetValues() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputEmptyCatchBlockCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputEmptyCatchBlock.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "965f5d5ba0d9af28dd59001614680e41", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "     void verifyLongEll(int aLineNo, int aColNo)", "signatureAfterChange": "     void verifyLongEll(int aLineNo, int aColNo)", "diff": ["-            log(aLineNo, aColNo, \"Should use uppercase 'L'.\");", "+            log(aLineNo, aColNo, \"upperEll\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96fd3773adb20651481bcecb7dfeddad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCorrect() throws Exception", "signatureAfterChange": "      @Test     public void testCorrect() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputCorrectJavaDocParagraphCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputCorrectJavaDocParagraph.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96fd79cade11c3aa5135d9174a6441cc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule485annotations/AnnotationLocationTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9702f45024043c679cb077ed7f69d57f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "b10558945cf4b11edfd4829945ae797ff01a6e00", "commitAfterChange": "d0bf96d90dc8b23c5831955bc9f28a5d79dbdb55", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testMissingSwitchDefault() throws Exception", "signatureAfterChange": "      @Test     public void testMissingSwitchDefault() throws Exception", "diff": ["-            \"15:9: switch without \\\"default\\\" clause.\",", "+            \"17:9: switch without \\\"default\\\" clause.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97126cae75e4fc09e0e05d432bffc202", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheckTest.java", "commitBeforeChange": "e23953e9e80b2eddfd710eaec97b1357921d756c", "commitAfterChange": "11dc88a9c149838d94f62965004452f3cf98d8cc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testEnhancedForLoopVariableFalse() throws Exception", "signatureAfterChange": "      @Test     public void testEnhancedForLoopVariableFalse() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputModifiedControlVariableEnhancedForLoopVariable.java\"), expected);", "+        verify(checkConfig, getPath(\"InputModifiedControlVariableEnhancedForLoopVariable.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "974cd09142043aae15831d569c20e6b8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testAllowByTailComment() throws Exception", "signatureAfterChange": "      @Test     public void testAllowByTailComment() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAvoidEscapedUnicodeCharactersCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAvoidEscapedUnicodeCharacters.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "984aa5d715c078be1cf4710ebe6a3cd6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheckTest.java", "commitBeforeChange": "10352e146f048c7938af5949925b0eb19781a0b1", "commitAfterChange": "bee6b0a1ec26b04e2d738221bdce4bd159b278d2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testRegexpHeader() throws Exception", "signatureAfterChange": "      @Test     public void testRegexpHeader() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputScopeAnonInner.java\"), expected);", "+        verify(checkConfig, getPath(\"InputRegexpHeader7.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "986a4c9b1b645d08a49cc1afb8556d45", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testWithMultipleAnnotations() throws Exception", "signatureAfterChange": "      @Test     public void testWithMultipleAnnotations() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAnnotationLocationCheckTest2.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAnnotationLocation2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98736bbe2b88f8104dfa00a54c9c33bb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 64, "signatureBeforeChange": "      @Test     public void testSynchronizedStatement() throws Exception", "signatureAfterChange": "      @Test     public void testSynchronizedStatement() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputSynchronizedStatement.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputSynchronizedStatement.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98ae7bb827685d2cae5486f5e6a7e918", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java", "commitBeforeChange": "95eb2122d5c26aa5c6a00a89f79306b7531bc98a", "commitAfterChange": "6e1b8917c105606e8e03cc58cf893aba9a844f0a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testOnFileWithCommentOnly() throws Exception", "signatureAfterChange": "      @Test     public void testOnFileWithCommentOnly() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputWithCommentOnly.java\"), expected);", "+        verify(checkConfig, getPath(\"coding/InputWithCommentOnly.java\"), expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98bfdd58061f7eb3e78be735bfc8413f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule43onestatement/OneStatementPerLineTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void oneStatementNonCompilableInputTest() throws Exception", "signatureAfterChange": "      @Test     public void oneStatementNonCompilableInputTest() throws Exception", "diff": ["-            + \"InputOneStatementPerLineCheck.java\").getCanonicalPath();", "+            + \"InputOneStatementPerLine.java\").getCanonicalPath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99bbedf133ed1c44f692084ae30e883f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "5f3eced2d85c10407b5ba1f38c06af05715d9bd7", "commitAfterChange": "de60ea7b86b5ea25338dfe8a300db9d179004812", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testMissingSwitchDefault() throws Exception", "signatureAfterChange": "      @Test     public void testMissingSwitchDefault() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputMissingSwitchDefault.java\"), expected);", "+        verify(checkConfig, getPath(\"checks/InputMissingSwitchDefault.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99d4e152bd943156f454c8bbda7cd257", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testGh47() throws Exception", "signatureAfterChange": "      @Test     public void testGh47() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/Gh47.java\"), expected);", "+        verify(checkConfig, getPath(\"Gh47.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99de3d75033333a3e3c82b750c0710be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/comments/CommentsTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     private static DetailAST buildInput1()", "signatureAfterChange": "     private static DetailAST buildInput1()", "diff": ["-        ident.setText(\"InputCommentsTest_1\");", "+        ident.setText(\"InputComments1\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a34db86d1baf8333ed0e7ed02445baa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 61, "signatureBeforeChange": "      @Test     public void test15Extensions() throws Exception", "signatureAfterChange": "      @Test     public void test15Extensions() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/Input15Extensions.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"Input15Extensions.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ad7d81a40da0acb31af41e5769b4462", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testSpaceEmptyForIterator()         throws Exception", "signatureAfterChange": "      @Test     public void testSpaceEmptyForIterator()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputForWhitespace.java\"), expected);", "+        verify(checkConfig, getPath(\"checks/whitespace/InputForWhitespace.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b2add325162bf255800d6514338c9a6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     @Test     public void testGoodDeprecated() throws Exception", "signatureAfterChange": "     @Test     public void testGoodDeprecated() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"GoodDeprecated.java\"), expected);", "+        verify(checkConfig, getPath(\"InputGoodDeprecated.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9baf6d330535d6d3261bffcd45cdb13b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheckTest.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDefault()         throws Exception", "signatureAfterChange": "     public void testDefault()         throws Exception", "diff": ["-            \"229:27: ')' is preceded with whitespace.\",", "+            \"232:27: ')' is preceded with whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bf4936c1f1282c8ccc949063f068b8c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testCustomTag() throws Exception", "signatureAfterChange": "      @Test     public void testCustomTag() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputCustomTag.java\"), expected);", "+        verify(checkConfig, getPath(\"InputCustomTag.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c38264bb111d53a567531bdcd476b14", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "3d8c8ae213afba764acb9758dc89d8a613f4ea66", "commitAfterChange": "dc764f3b6ad475854cd0d22655db3f96e7eb7ed3", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void testInner()         throws Exception", "signatureAfterChange": "      public void testInner()         throws Exception", "diff": ["-            filepath + \":24: variable 'data' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\",", "+            filepath + \":24:16: variable 'data' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c9fcd0a60e9c44d31b800ed2d5672f7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     @Test     public void testExpandedNoUnchecked() throws Exception", "signatureAfterChange": "     @Test     public void testExpandedNoUnchecked() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsExpanded.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsExpanded.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ca86a1593292c88bd812724431790bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4841indentation/IndentationTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void correctClassTest() throws Exception", "signatureAfterChange": "      @Test     public void correctClassTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"IndentationCorrectClassInput\");", "+        final String filePath = builder.getFilePath(\"InputIndentationCorrectClass\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ccd714b9d5c4ee2ae1f1819cd5c2c3e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportTest.java", "commitBeforeChange": "bee6b0a1ec26b04e2d738221bdce4bd159b278d2", "commitAfterChange": "83e685bdac0b1e7e838eded12bfeee93d3ca527a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefaultOperation()         throws Exception", "signatureAfterChange": "      @Test     public void testDefaultOperation()         throws Exception", "diff": ["-            \"7: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.imports.*\"),", "+            \"7: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.checks.imports.*\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d217a9019e18d21cf911ff6cc05895d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyBlockTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void emptyBlockTestCatch() throws Exception", "signatureAfterChange": "      @Test     public void emptyBlockTestCatch() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"EmptyBlockInputCatch\");", "+        final String filePath = builder.getFilePath(\"InputEmptyBlockCatch\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d6017a2a901658248c86b19c37144f9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4843defaultcasepresent/MissingSwitchDefaultTest.java", "commitBeforeChange": "4346d41010a729e14991e30706bdb16ff18ff39a", "commitAfterChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void missingSwitchDefaultTest() throws Exception", "signatureAfterChange": "      @Test     public void missingSwitchDefaultTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"MissingSwitchDefaultInput\");", "+        final String filePath = builder.getFilePath(\"InputMissingSwitchDefault\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dc8a12a225917993ba2a686093b8d60", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void testMethodCallLineWrap() throws Exception", "signatureAfterChange": "      @Test     public void testMethodCallLineWrap() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputMethodCallLineWrap.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputMethodCallLineWrap.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e52bb75d3d4a4edf8a0ce03d15a2a14", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testJavaLangPackage() throws Exception", "signatureAfterChange": "      @Test     public void testJavaLangPackage() throws Exception", "diff": ["-                getNonCompilablePath(\"InputIllegalInstantiationCheckLang.java\"),", "+                getNonCompilablePath(\"InputIllegalInstantiationLang.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ece934053db597c87400affa4c93944", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testContextualize_ConversionException()", "signatureAfterChange": "      @Test     public void testContextualize_ConversionException()", "diff": ["-        context.add(\"intVal\", \"some string\");", "+        context.add(\"val\", \"some string\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ef07b7fed8459ffde104f8520fa8994", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testSwitchBlockAsSingleDecisionPointSetToTrue() throws Exception", "signatureAfterChange": "      @Test     public void testSwitchBlockAsSingleDecisionPointSetToTrue() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputComplexityCheckSwitchBlocks.java\"), expected);", "+        verify(checkConfig, getPath(\"InputComplexitySwitchBlocks.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f1eedf1d5ce9fee19bb2b465ca41c5a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheckTest.java", "commitBeforeChange": "3d81ece0258005a3264d550f8cffeedc27a3765c", "commitAfterChange": "47e6c23b4d9cd01731a90e3caeea33ca53a15516", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testVariableNameShadowing()         throws Exception", "signatureAfterChange": "      @Test     public void testVariableNameShadowing()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputFinalLocalVariableNameShadowing.java\"), expected);", "+        verify(checkConfig, getPath(\"InputFinalLocalVariableNameShadowing.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f356e42eaacdb332c34436c8d389b1b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceBeforeCheckTest.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testDefault() throws Exception", "signatureAfterChange": "      public void testDefault() throws Exception", "diff": ["-            \"208:15: ';' is preceded with whitespace.\",", "+            \"211:15: ';' is preceded with whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f39b59ab53c824f03e887d6c009aa48", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4841indentation/IndentationTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void correctIfTest() throws Exception", "signatureAfterChange": "      @Test     public void correctIfTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"IndentationCorrectIfAndParameterInput\");", "+        final String filePath = builder.getFilePath(\"InputIndentationCorrectIfAndParameter\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f3a5730e6ac5333e8b11dec38a90319", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "5dffb5a301b2605c730d1de3f312ba4a7f95355e", "commitAfterChange": "4d8d047f465f9eb101390da63ee62a735fbedba5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void registerCheck(String token, Check check)", "signatureAfterChange": "     private void registerCheck(String token, Check check)", "diff": ["-                    + \"token ('%s') and should override 'isCommentNodesRequred()' \"", "+                    + \"token ('%s') and should override 'isCommentNodesRequired()' \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f67b7aba2c935c180615f4b9b8c0900", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "de60ea7b86b5ea25338dfe8a300db9d179004812", "commitAfterChange": "e24596db9459a3592784a544b213cc7aa919a3f6", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testWithSumCustomMsg() throws Exception", "signatureAfterChange": "      @Test     public void testWithSumCustomMsg() throws Exception", "diff": ["-               getPath(\"coding\" + File.separator + \"InputReturnFromFinallyCheck.java\"),", "+               getPath(\"checks\" + File.separator + \"InputReturnFromFinallyCheck.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fed0028c3084f779e0047a2066c0072", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/MethodParamPadCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputMethodParamPad.java\"), expected);", "+        verify(checkConfig, getPath(\"InputMethodParamPad.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a03a5cb44778588c79305592116d6ea8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "5703b6e33550d6e9706f42e253c2cc7d83a358bf", "commitAfterChange": "1818ae8ab189515f24a711aa3fc520377bd71380", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void testTagsWithResolver()         throws Exception", "signatureAfterChange": "      public void testTagsWithResolver()         throws Exception", "diff": ["-            filepath + \":11:17: Variable 'mMissingJavadoc' missing Javadoc.\",", "+            filepath + \":11:17: Missing a Javadoc comment.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a04f7d2bd0a0b0dca8646d918119b830", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void customJavadocTags()         throws IOException", "signatureAfterChange": "      @Test     public void customJavadocTags()         throws IOException", "diff": ["-        String filename = getDocPath(\"CustomJavadocTags.txt\");", "+        String filename = getDocPath(\"InputCustomJavadocTags.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0b516cfa071b58b237ee182dc543463", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "f6cb72258856fdae0b89c66a0ba750712674cdee", "commitAfterChange": "07b24800a785cebc31cf6d33834679e71bfbfdaf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private static boolean isInternetReachable()", "signatureAfterChange": "      private static boolean isInternetReachable()", "diff": ["-            URL url = new URL(\"http://www.yahoo.com\");", "+            URL url = new URL(\"http://checkstyle.sourceforge.net/\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0d0c8116026f2bac1f4c8443cc55e6a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/FileTextTest.java", "commitBeforeChange": "58bbf2f19062938523f0b66d6bbb9ad9a8e5266f", "commitAfterChange": "9c488c1f512ffcc58af433842c992bd3f85b2d63", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testSupportedCharset() throws IOException", "signatureAfterChange": "      @Test     public void testSupportedCharset() throws IOException", "diff": ["-                 + \"checkstyle/checks/imports/import-control_complete.xml\"), charsetName);", "+                 + \"checkstyle/api/import-control_complete.xml\"), charsetName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0fc4f12e97a0202f23c5d2b74e7e59f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void test1322879And1649038() throws Exception", "signatureAfterChange": "      @Test     public void test1322879And1649038() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/whitespace/InputWhitespaceAround.java\"),", "+        verify(checkConfig, getPath(\"InputWhitespaceAround.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a12258362cfbe851d31781d86cb1b5de", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testSwitchBlockAsSingleDecisionPointSetToTrue() throws Exception", "signatureAfterChange": "      @Test     public void testSwitchBlockAsSingleDecisionPointSetToTrue() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ComplexityCheckSwitchBlocksTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputComplexityCheckSwitchBlocks.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a15f8d750d25cefb65e4ca3cdd20224b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "79a7478e06a5f7068002831ac699d10ba54f038b", "commitAfterChange": "3baf36b6fe8bffe6e6c90f4c001c8494148ff42c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     public void testAnnotations() throws Exception", "signatureAfterChange": "      @Test     public void testAnnotations() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/FromGuava.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"indentation/InputFromGuava.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1b1f12610397a4a0b6dcd552f7dcee9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4861blockcommentstyle/CommentsIndentationTest.java", "commitBeforeChange": "4346d41010a729e14991e30706bdb16ff18ff39a", "commitAfterChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCommentIsAtTheEndOfBlock() throws Exception", "signatureAfterChange": "      @Test     public void testCommentIsAtTheEndOfBlock() throws Exception", "diff": ["-            builder.getFilePath(\"CommentsIndentationCommentIsAtTheEndOfBlockInput\");", "+            builder.getFilePath(\"InputCommentsIndentationCommentIsAtTheEndOfBlock\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1d87cdd9402c629036eaff48c7c8c9d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SingleLineJavadocCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void simpleTest() throws Exception", "signatureAfterChange": "      @Test     public void simpleTest() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputSingleLineJavadocCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSingleLineJavadocCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a23a6f16a4a26322afae4a0a13bc43a7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testNumberFormatException() throws Exception", "signatureAfterChange": "      @Test     public void testNumberFormatException() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputTestNumberFormatException.java\"), expected);", "+        verify(checkConfig, getPath(\"InputTestNumberFormatException.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a26ecfd9c7e60922989d904415b7f998", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "836e4d1b12158b86ad0cb10505ff09282a39d277", "commitAfterChange": "055aa0cf9da3dc844ca9cc4956570c47bc3e23b2", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     private boolean isGetterMethod(final DetailAST aAST)", "signatureAfterChange": "     private boolean isGetterMethod(final DetailAST aAST)", "diff": ["-        // Check the name matches format getX...", "+        // Check the name matches format of getX or isX. Technically I should", "+        // check that the format isX is only used with a boolean type.", "-        if (!name.matches(\"^get[A-Z].*\")) { // Depends on JDK 1.4", "+        if (!name.matches(\"^(is|get)[A-Z].*\")) { // Depends on JDK 1.4"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2abb35da3caf0f0fe90c8ab27ab40a0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void forbidCStyle() throws Exception", "signatureAfterChange": "      @Test     public void forbidCStyle() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputMethodCStyle.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputMethodCStyle.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a31ae6f4283c7cd6c7a17b3cd79fa092", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefaults() throws Exception", "signatureAfterChange": "      @Test     public void testDefaults() throws Exception", "diff": ["-                + \"'com.puppycrawl.tools.checkstyle.checks.coding.InputIllegalType.AbstractClass'\"", "+                + \"'com.puppycrawl.tools.checkstyle.coding.InputIllegalType.AbstractClass'\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a37f77efee2df399f8a0385e65aafb57", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void shouldIgnoreMethodsWithOverrideAnnotation()             throws Exception", "signatureAfterChange": "      @Test     public void shouldIgnoreMethodsWithOverrideAnnotation()             throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputParameterNumberCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputParameterNumber.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3e71b078f77e4e692e5bbac20348959", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheckTest.java", "commitBeforeChange": "a2f74423b6db21eeb1ed1725e6cfc2b83c44113b", "commitAfterChange": "de4485a22bfe8eafc3c2e273fd328a0221d0ff9e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testImmutableStarImportFalseNegative() throws Exception", "signatureAfterChange": "      @Test     public void testImmutableStarImportFalseNegative() throws Exception", "diff": ["-        checkConfig.addAttribute(\"immutableClassNames\", \"java.util.Arrays\");", "+        checkConfig.addAttribute(\"immutableClassCanonicalNames\", \"java.util.Arrays\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3e752c97ecb1476c3d5e404239eedd2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheckTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testConfigureTokens() throws Exception", "signatureAfterChange": "      @Test     public void testConfigureTokens() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputParenPad.java\"), expected);", "+        verify(checkConfig, getPath(\"InputParenPad.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a43cf02e3243d3f29b1cae8525e4f608", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCaseWithoutLineWrapping() throws Exception", "signatureAfterChange": "      @Test     public void testCaseWithoutLineWrapping() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"NoLineWrapGoodInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputNoLineWrapGood.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a464bdfe6b08ac94538d972c8a9220e0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule341onetoplevel/OneTopLevelClassTest.java", "commitBeforeChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "commitAfterChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void goodTest() throws Exception", "signatureAfterChange": "      @Test     public void goodTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"OneTopLevelClassInputGood\");", "+        final String filePath = builder.getFilePath(\"InputOneTopLevelClassGood\");", "+", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        verify(checkConfig, filePath, expected, warnList);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a46e324c5145bc2fcfa4200faba93cbe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 29, "signatureBeforeChange": "      @Test     public void testValidIfWithChecker() throws Exception", "signatureAfterChange": "      @Test     public void testValidIfWithChecker() throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputValidIfIndent.java\");", "+        final String fname = getPath(\"InputValidIfIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4739625ffe83a54dd21dc26f7688e5a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/HideUtilityClassConstructorCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testUtilClassPrivateCtor() throws Exception", "signatureAfterChange": "      @Test     public void testUtilClassPrivateCtor() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"UtilityClassConstructorPrivate.java\"), expected);", "+        verify(checkConfig, getPath(\"InputUtilityClassConstructorPrivate.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a49d01e215e89ec24fc313b50bdfe437", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "cbb36592d4441a62872ae732117cb7b55ec961e1", "commitAfterChange": "bb399478246e8f4f869daa45ef0be78fb662a3e9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private void setOutputStream(OutputStream aOS)", "signatureAfterChange": "     private void setOutputStream(OutputStream aOS)", "diff": ["-            final OutputStreamWriter osw = new OutputStreamWriter(aOS, \"UTF8\");", "+            final OutputStreamWriter osw = new OutputStreamWriter(aOS, \"UTF-8\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4a25623466ce755f2d208817d9f27c1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalThrowsCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIllegalClassNames() throws Exception", "signatureAfterChange": "      @Test     public void testIllegalClassNames() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputIllegalThrowsCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalThrows.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5b56c0c3c95f173f425d1f5d76122e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "44cc8b53c90117295151ea6723f859287f51dda5", "commitAfterChange": "5aacffce41a8f8d6b79f0b4a771e3e5ce03c0d02", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "      @Test     public void test11684082() throws Exception", "signatureAfterChange": "      @Test     public void test11684082() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/javadoc/Input_02.java\"), expected);", "+        verify(checkConfig, getPath(\"Input_02.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5dd5f365137165eedffc67ed8d6bf33", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule232specialescape/IllegalTokenTextTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder()     \t\tthrows CheckstyleException, MalformedURLException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder()     \t\tthrows CheckstyleException, MalformedURLException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5f00ec94c094e5939ef323ef4a57100", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "cd32cd1ab02fa47192c87af5dcfa9e579681723f", "commitAfterChange": "2effcfd0bcdfa7fc25bfff22e6f893ac6fb4478b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private static void usage()", "signatureAfterChange": "     private static void usage()", "diff": ["-            \"Usage: java \" + Main.class.getName() + \" <options> <file>......\");", "+            \"Usage: java \" + Main.class.getName()", "+            + \" <options> config <file>......\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5fd4f8f45f0b97578cf6607bca2d0d2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void javadocTagDescriptionWithInlineTags()         throws IOException", "signatureAfterChange": "      @Test     public void javadocTagDescriptionWithInlineTags()         throws IOException", "diff": ["-        String filename = getDocPath(\"JavadocTagDescriptionWithInlineTags.txt\");", "+        String filename = getDocPath(\"InputJavadocTagDescriptionWithInlineTags.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a60987bc07169834aa69ad84ab1aefab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 59, "signatureBeforeChange": "      @Test     public void testInvalidImportIndent() throws Exception", "signatureAfterChange": "      @Test     public void testInvalidImportIndent() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputInvalidImportIndent.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputInvalidImportIndent.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a69b58973afb896f8bcff02170d22820", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 21, "signatureBeforeChange": "      @Test     public void testAnonymousClasses() throws Exception", "signatureAfterChange": "      @Test     public void testAnonymousClasses() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputAnonymousClasses.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputAnonymousClasses.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6af759e66822fe81f35d32ade14a980", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule331nowildcard/AvoidStarImportTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6d8667a19788704bad120085631a7a5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheckTest.java", "commitBeforeChange": "3cb031f767f6635748e05e2bd030d7f2314e981d", "commitAfterChange": "208e0208ca5f1b7966aa82747069b85ddb680c18", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void test1322879() throws Exception", "signatureAfterChange": "      @Test     public void test1322879() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputWhitespaceAround.java\"),", "+        verify(checkConfig, getPath(\"whitespace/ParenPadWithSpace.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6e43f6b0f625f87560ac7cefde7fdc1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "0631e2380cc11980daec7eeaf2f3a3e274b95681", "commitAfterChange": "bff2e1754acddcbf199986d8796e88fb7bf7bf25", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testNonExistingOutputFormat()             throws Exception", "signatureAfterChange": "      @Test     public void testNonExistingOutputFormat()             throws Exception", "diff": ["-        Main.main(\"-c\", \"src/test/resources/com/puppycrawl/tools/checkstyle/config-classname.xml\", \"-f\" , \"xmlp\",", "+        Main.main(\"-c\", \"/google_checks.xml\", \"-f\" , \"xmlp\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7a08ddcb9f6b8747370a75977c77fb6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "9b45e78bb5bcf9fc315ab97c6856cdb18a3e7100", "commitAfterChange": "894907814919dee135a21264d80b23bd63560f9f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void extendAnnotationTest() throws Exception", "signatureAfterChange": "      @Test     public void extendAnnotationTest() throws Exception", "diff": ["-            \"54:3: Missing a Javadoc comment.\",", "+            \"46:1: Missing a Javadoc comment.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8069001e85207e5f86d089392b5af5e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/OperatorWrapTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void operatorWrapTestAssign() throws Exception", "signatureAfterChange": "      @Test     public void operatorWrapTestAssign() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"OperatorWrapAssignInput\");", "+        final String filePath = builder.getFilePath(\"InputOperatorWrapAssign\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a816cdb332137e393a0fc7feae8da82c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "260d2b935c0b25688a11077ada9405b791857fd8", "commitAfterChange": "ad42ed29799a13b9426a05cc94b4a4aaba709c2c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testSeparated() throws Exception", "signatureAfterChange": "      @Test     public void testSeparated() throws Exception", "diff": ["-        checkConfig.addAttribute(\"groups\", \"java.awt, javax.swing, java.io\");", "+        checkConfig.addAttribute(\"groups\", \"java.awt, javax.swing, java.io, java.util\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a842779a47b5ed3053b56904a947d97f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "de60ea7b86b5ea25338dfe8a300db9d179004812", "commitAfterChange": "e24596db9459a3592784a544b213cc7aa919a3f6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void testWithSumLessThenMinDefMsg() throws Exception", "signatureAfterChange": "      @Test     public void testWithSumLessThenMinDefMsg() throws Exception", "diff": ["-                getPath(\"coding\" + File.separator + \"InputReturnFromFinallyCheck.java\"),", "+                getPath(\"checks\" + File.separator + \"InputReturnFromFinallyCheck.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a844a685a83b1005dadf7eaa42fbd324", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testFineDefault() throws Exception", "signatureAfterChange": "      @Test     public void testFineDefault() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputOuterTypeFilenameCheck3.java\"), expected);", "+        verify(checkConfig, getPath(\"InputOuterTypeFilename3.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a84a43cadf222403593f8ec566e09a3c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testNoPeriod() throws Exception", "signatureAfterChange": "      @Test     public void testNoPeriod() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputSummaryJavadocCheckNoPeriod.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSummaryJavadocCheckNoPeriod.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a89801761575d8a21d27f35540372e6a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheckTest.java", "commitBeforeChange": "e76a439c2b0250808ce2723c43cd872a1761e294", "commitAfterChange": "96d3aaea19657ac233d9a57b46a52bc0b35eda95", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testBooleanMethods() throws Exception", "signatureAfterChange": "      @Test     public void testBooleanMethods() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputEqualsHashCodeCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputEqualsHashCodeCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa6b4902eae33f1c35b6d8816c8027c0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/VarargTest.java", "commitBeforeChange": "2fe5ade8b31c0c7b32fab4e25f1ec73c9ab31b8d", "commitAfterChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testCanParse()         throws Exception", "signatureAfterChange": "      @Test     public void testCanParse()         throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"grammars/InputVararg.java\"), expected);", "+        verify(checkConfig, getPath(\"InputVararg.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa8363af1878fa3b951bc47d5eadc0c6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 39, "signatureBeforeChange": "      @Test     public void testInvalidTryWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testInvalidTryWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputInvalidTryIndent.java\");", "+        final String fname = getPath(\"InputInvalidTryIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa93a3866986f48a7bc807f3200c0334", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheckTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testNpe() throws Exception", "signatureAfterChange": "      @Test     public void testNpe() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputNoWhiteSpaceAfterCheckFormerNpe.java\"),", "+        verify(checkConfig, getPath(\"InputNoWhiteSpaceAfterCheckFormerNpe.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aabfe7b0cc33267c0657ae0f932b372c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "commitAfterChange": "7e5e919ce7db115c5893fa23e07a3cf1acfc3f10", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testTypeAndVariablesAndMethodNamesWithIgnores() throws Exception", "signatureAfterChange": "      @Test     public void testTypeAndVariablesAndMethodNamesWithIgnores() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"naming/InputAbbreviationAsWordInTypeNameCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abab7a02c552710e16dc5085249d9c69", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter6programpractice/rule62donotignoreexceptions/EmptyBlockTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void emptyBlockTestCatch() throws Exception", "signatureAfterChange": "      @Test     public void emptyBlockTestCatch() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"EmptyBlockInputCatch\");", "+        final String filePath = builder.getFilePath(\"InputEmptyBlockCatch\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ababbff5deb9c8a8cac426cfa7a9802d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "93322bd3df79ad1b1763eceebd5205a3d57c7178", "commitAfterChange": "c876d2431e56405371b93c814de33c350766266d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-        return \"SupressElement[files=\" + mFilePattern + \",checks=\"", "+        return \"SuppressElement[files=\" + mFilePattern + \",checks=\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abf31896ad46e3b1a1f73e96144b97b3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/DefaultComesLastCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIt() throws Exception", "signatureAfterChange": "     @Test     public void testIt() throws Exception", "diff": ["-            \"22:9: Default should be last label in the switch.\",", "+            \"24:9: Default should be last label in the switch.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac09711ef0209c9c4daac40cb3c09ebd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule3sourcefile/EmptyLineSeparatorTest.java", "commitBeforeChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "commitAfterChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void emptyLineSeparatorTest() throws Exception", "signatureAfterChange": "      @Test     public void emptyLineSeparatorTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"EmptyLineSeparatorInput\");", "+        final String filePath = builder.getFilePath(\"InputEmptyLineSeparator\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac51e95e6bdb8289fbc3fe0d855a0462", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/MethodReferencesTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testFromSpec()         throws Exception", "signatureAfterChange": "      @Test     public void testFromSpec()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputMethodReferencesTest2.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputMethodReferences2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac6201eb7d003aad96cc3e3d96927922", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "      @Test     public void mixedCaseOfHtmlTags()         throws IOException", "signatureAfterChange": "      @Test     public void mixedCaseOfHtmlTags()         throws IOException", "diff": ["-        String filename = getHtmlPath(\"MixedCaseOfHtmlTags.txt\");", "+        String filename = getHtmlPath(\"InputMixedCaseOfHtmlTags.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac6f0eef2b4bb7db32e66993bdc749a9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "eb68cde2e314d594ccde45e0716fe75b9770fa37", "commitAfterChange": "d056b3b6bb9f6b88b06cade98b6ab6a4d7760226", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static String[] loadPackageNames(ClassLoader aClassLoader)         throws CheckstyleException", "signatureAfterChange": "     public static String[] loadPackageNames(ClassLoader aClassLoader)         throws CheckstyleException", "diff": ["-        return loadPackageNames(source, \"default map\");", "+        return loadPackageNames(source, \"default package names\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aca2dc0addbee3a2e2ef054f601672e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/EmbeddedNullCharTest.java", "commitBeforeChange": "2fe5ade8b31c0c7b32fab4e25f1ec73c9ab31b8d", "commitAfterChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testCanParse()         throws Exception", "signatureAfterChange": "      @Test     public void testCanParse()         throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"grammars/InputEmbeddedNullChar.java\"), expected);", "+        verify(checkConfig, getPath(\"InputEmbeddedNullChar.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acb1f8d0a9c7555181760ab1fb227487", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testNpe() throws Exception", "signatureAfterChange": "      @Test     public void testNpe() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputCommentsIndentationTestNpe.java\"), expected);", "+        verify(checkConfig, getPath(\"InputCommentsIndentationNpe.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad21583859810a3fdbc116a8ae360697", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule333orderingandsoacing/CustomImportOrderTest.java", "commitBeforeChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "commitAfterChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void customImportTest3() throws Exception", "signatureAfterChange": "      @Test     public void customImportTest3() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"CustomImportOrderInput_3\");", "+        final String filePath = builder.getFilePath(\"InputCustomImportOrder3\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad958a173a3fa7e06e1e319377db7766", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 62, "signatureBeforeChange": "      @Test     public void testTryResources() throws Exception", "signatureAfterChange": "      @Test     public void testTryResources() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputValidTryResourcesIndent.java\"),", "+        verifyWarns(checkConfig, getPath(\"InputValidTryResourcesIndent.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adb86dde73a5830d1a03ea0ee231a4c6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     @Test     public void testCompactNoUncheckedUnused() throws Exception", "signatureAfterChange": "     @Test     public void testCompactNoUncheckedUnused() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsCompact.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsCompact.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae09c4c24a42a945af65e608c97af0b1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void test() throws Exception", "signatureAfterChange": "      @Test     public void test() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ClassCouplingCheckTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputClassCoupling.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae1281dab982ca331cdf81c84891ddeb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "0c8c6f3b456b59b15cfedb463906e7380c9e6f85", "commitAfterChange": "f8eaf47b4eb3eaec1563cd459ba0ae923f86c33a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void testSimple()         throws Exception", "signatureAfterChange": "      public void testSimple()         throws Exception", "diff": ["-            filepath + \":1: file length is 168 lines (max allowed is 20).\",", "+            filepath + \":1: file length is 190 lines (max allowed is 20).\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae139573ce91618e497eed5eba57bf2d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "44cc8b53c90117295151ea6723f859287f51dda5", "commitAfterChange": "5aacffce41a8f8d6b79f0b4a771e3e5ce03c0d02", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 35, "signatureBeforeChange": "      @Test     public void testNotSkipAnythingWhenSkipRegexDoesNotMatch() throws Exception", "signatureAfterChange": "      @Test     public void testNotSkipAnythingWhenSkipRegexDoesNotMatch() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputJavadocMethodIgnoreNameRegex.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJavadocMethodIgnoreNameRegex.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae61b4f53b656a01a69297f4e89c5caa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "9dd69b267b626af533ddf8bc0d37b4fd3744fa6e", "commitAfterChange": "57b908199dfa5c2c9bf9388d92925ccfb312812f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testUnableToReadSuppressions() throws Exception", "signatureAfterChange": "      @Test     public void testUnableToReadSuppressions() throws Exception", "diff": ["-        thrown.expectMessage(\"unable to read \" + sourceName);", "+        thrown.expectMessage(\"Unable to read \" + sourceName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae9ea0e5f113330c41e7620effa70ed2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault()         throws Exception", "signatureAfterChange": "     @Test     public void testDefault()         throws Exception", "diff": ["-            \"185:30: '42' is a magic number.\",", "+            \"185:26: '42' is a magic number.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aeb7243fd0bf9f109a879cb437bac8e0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/IllegalImportCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testWithDefault()         throws Exception", "signatureAfterChange": "      @Test     public void testWithDefault()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputIllegalImportCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalImport.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aec99ec698d88aed66f20b690596b8bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/usage/UnusedPrivateMethodCheckTest.java", "commitBeforeChange": "5f6970f2542204e3f23ac0466f81d9dc981cd3f5", "commitAfterChange": "5efa04e1bbcb5e90f72296f68534f2e626850ceb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDefault() throws Exception", "signatureAfterChange": "     public void testDefault() throws Exception", "diff": ["-            \"7:18: Unused method 'methodUnused0'.\",", "+            \"7:18: Unused private method 'methodUnused0'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aee16b03f1167374a9453180aeaccd7e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testWithMultilineStatements() throws Exception", "signatureAfterChange": "      @Test     public void testWithMultilineStatements() throws Exception", "diff": ["-            getPath(\"OneStatementPerLineCheckInput2.java\"),", "+            getPath(\"InputOneStatementPerLine2.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af614c81ecaee4cdac27c7647a4fe550", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testExcludeScope()         throws Exception", "signatureAfterChange": "      @Test     public void testExcludeScope()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputJavadocStyleCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJavadocStyle.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b036d1fb874517602fb2a79e9cbc159d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testTypeAndVariablesAndMethodNamesWithIgnores() throws Exception", "signatureAfterChange": "      @Test     public void testTypeAndVariablesAndMethodNamesWithIgnores() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeName.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b125abf68cce11512041d768bb906ae1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/HideUtilityClassConstructorCheckTest.java", "commitBeforeChange": "64c05f5391bdf55a60da22a685488022827aee84", "commitAfterChange": "1487e5161886d95cb8c82e4fb1a8b447fa7e32d0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testEmptyAbstractClass() throws Exception", "signatureAfterChange": "      @Test     public void testEmptyAbstractClass() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"HideUtilityClassContructor3041574_1.java\"), expected);", "+        verify(checkConfig, getPath(\"HideUtilityClassConstructor3041574_1.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b12cefbe762bf84add23ed326124ffe3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PropertyCacheFileTest.java", "commitBeforeChange": "5dffb5a301b2605c730d1de3f312ba4a7f95355e", "commitAfterChange": "4d8d047f465f9eb101390da63ee62a735fbedba5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testException_NoSuchAlgorithmException() throws Exception", "signatureAfterChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testException_NoSuchAlgorithmException() throws Exception", "diff": ["-        Configuration config = new DefaultConfiguration(\"myname\");", "+        Configuration config = new DefaultConfiguration(\"myName\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b14b5ab2eef11326cfb3b9ede5ff8c62", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testWithOneArgWithoutTypeOneLineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithoutTypeOneLineBody()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest6.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda6.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1c73677c7c600cae63e4276fd215761", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputComplexityCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputComplexity.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b21acc52d140b495df6e2752286050f1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "187388ac1d88e29711f33b46df7a001142899c4f", "commitAfterChange": "f68cea4d408be0ea3dc85e8dd92482e49e444a85", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "      @Test     public void test15Extensions() throws Exception", "signatureAfterChange": "      @Test     public void test15Extensions() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"Input15Extensions.java\"), expected);", "+        verify(checkConfig, getPath(\"indentation/Input15Extensions.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b26798fc5497037677cf6d2690aa1bc0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "1181c2e17292151b96e4253f01300505fe4153d2", "commitAfterChange": "3004b4d8810fae5956864d1493ea94f183b9442c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testNonExistingTargetFile()             throws Exception", "signatureAfterChange": "      @Test     public void testNonExistingTargetFile()             throws Exception", "diff": ["-        Main.main(\"-c\", \"/google_checks.xml\", \"NonexistingFile.java\");", "+        Main.main(\"-c\", \"src/test/resources/com/puppycrawl/tools/checkstyle/config-classname.xml\",", "+                \"NonexistingFile.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b26c2f60ab651a8868d40fd1e35a71b9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheckTest.java", "commitBeforeChange": "2b53548ad0b56562256c824d4a6b5465abc53652", "commitAfterChange": "b10558945cf4b11edfd4829945ae797ff01a6e00", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testExcludedClasses()         throws Exception", "signatureAfterChange": "      @Test     public void testExcludedClasses()         throws Exception", "diff": ["-        checkConfig.addAttribute(\"excludedClasses\", \"\\\\.Main$\");", "+        checkConfig.addAttribute(\"excludedClasses\", \"\\\\.Main.*$\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b27b52f5c2f8a25cc012f78277205463", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Test     public void testSingleNoUnchecked() throws Exception", "signatureAfterChange": "     @Test     public void testSingleNoUnchecked() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsSingle.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsSingle.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2c022b84961bf64ce0128e3c38d7db1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/HideUtilityClassConstructorCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testEmptyClassWithOnlyPrivateFields() throws Exception", "signatureAfterChange": "      @Test     public void testEmptyClassWithOnlyPrivateFields() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"HideUtilityClassConstructor3041574_2.java\"), expected);", "+        verify(checkConfig, getPath(\"InputHideUtilityClassConstructor3041574_2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2d858fca347f5019cd5f2cfa47a27bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testIncorrect() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrect() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputIncorrectJavaDocParagraphCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIncorrectJavaDocParagraphCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2e994706eeeedd490f1228524c524ee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/HeaderCheck.java", "commitBeforeChange": "b8d0a65d5059b806bcf801db797232d4662d340d", "commitAfterChange": "eb522eece2f04cefd75931be5066eaebf2b34b51", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void beginTree()", "signatureAfterChange": "     public void beginTree()", "diff": ["-            log(1, \"Unable to check as missing lines to check.\");", "+            log(1, \"header.spec.missing\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3885ff88c0ac427b2412bbf3a6afc42", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "35e4a41c1027d5078cbaf0d3988a21c12a2daf7e", "commitAfterChange": "e55435125ea57e96f0bf876dd13e78b0ae02cd52", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-                    \"ws.notPreceeded\", new Object[]{aAST.getText()});", "+                    \"ws.notPreceded\", new Object[]{aAST.getText()});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b39007c3f6068cf3f726377d56daf76e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 23, "signatureBeforeChange": "      @Test     public void testLabels() throws Exception", "signatureAfterChange": "      @Test     public void testLabels() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputLabels.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputLabels.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3d9cc1cb9087c80603caa9f541325be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 34, "signatureBeforeChange": "      @Test     public void testValidSwitchWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testValidSwitchWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputValidSwitchIndent.java\");", "+        final String fname = getPath(\"InputValidSwitchIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3f41ad876cce12ad287b3a6d2a649d1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java", "commitBeforeChange": "949f78ab6084827c8f0027fd0e925133aefdcb70", "commitAfterChange": "cf4f4b535753ad0ae56469e13cec46b51a1553b0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testCustom() throws Exception", "signatureAfterChange": "     @Test     public void testCustom() throws Exception", "diff": ["-        checkConfig.addAttribute(\"standardPackageRegExp\", \"java|javax\");", "+        checkConfig.addAttribute(\"standardPackageRegExp\", \"^(java|javax)\\\\.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b478d81df7894d58fa7b76382c8b5a32", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "commitAfterChange": "83a1c2d3b34bd538da626562126e144cb5bb687d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void testSimple()         throws Exception", "signatureAfterChange": "      public void testSimple()         throws Exception", "diff": ["-            filepath + \":19: line contains a tab character\",", "+            filepath + \":19:25: line contains a tab character\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b489dc8b5f5c73cc8112a60bbb0c7251", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "79aa188fdfd66a71eb48bb27f48a910da5108221", "commitAfterChange": "4f16cb85a987f5d53b7055f4c96c15c76937c9ce", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void testStaticGroupsOrder() throws Exception", "signatureAfterChange": "      @Test     public void testStaticGroupsOrder() throws Exception", "diff": ["-            \"4: \" + getCheckMessage(MSG_ORDERING, \"org.abego.treelayout.Configuration.AlignmentInLevel\"),", "+            \"4: \" + getCheckMessage(MSG_ORDERING, \"org.antlr.v4.runtime.Recognizer.EOF\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b48a497340ddf54ba548b37944190215", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingSwitchDefaultCheckTest.java", "commitBeforeChange": "bca492cc217f781c64091ec00cccf17d60be893c", "commitAfterChange": "d74f5bb61c9d8a45af94f5539b2001d25e1f3076", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testMissingSwitchDefault() throws Exception", "signatureAfterChange": "      @Test     public void testMissingSwitchDefault() throws Exception", "diff": ["-            \"17:9: \" + getCheckMessage(MSG_KEY, \"default\"),", "+            \"17: \" + getCheckMessage(MSG_KEY, \"default\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4ae3b9bc6191f2baee14717c75afb55", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule3421overloadsplit/OverloadMethodsDeclarationOrderTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4b51ea35cd36cad5bc32e7a60608219", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testMemberExcludes()         throws Exception", "signatureAfterChange": "      @Test     public void testMemberExcludes()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAvoidStaticImportCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAvoidStaticImport.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4d123dca0c35216540c69ca7eed36ad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/MethodParamPadCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testAllowLineBreaks() throws Exception", "signatureAfterChange": "      @Test     public void testAllowLineBreaks() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputMethodParamPad.java\"), expected);", "+        verify(checkConfig, getPath(\"InputMethodParamPad.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4d77bf12974118e6e3dbc532ebbd556", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDistance() throws Exception", "signatureAfterChange": "      @Test     public void testDistance() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputVariableDeclarationUsageDistanceCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputVariableDeclarationUsageDistance.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b51224c345cdb15cc57946bd7dc99113", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     @Test     public void testCompactDefault() throws Exception", "signatureAfterChange": "     @Test     public void testCompactDefault() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsCompact.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsCompact.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b54e6a1703882b062ff29ed412f4a16d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/naming/ConstantNameCheck.java", "commitBeforeChange": "984eb8d7427038effd8ee8d2d9c90c74eee57e2b", "commitAfterChange": "861e2af0e1c40c2daf1b7f20f59052603ed832d4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ConstantNameCheck()", "signatureAfterChange": "     public ConstantNameCheck()", "diff": ["-        super(\"^[A-Z](_?[A-Z0-9]+)*$\");", "+        super(\"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b588788e865e9de8ae3c28044e20ddcd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testStyleExpanded() throws Exception", "signatureAfterChange": "      @Test     public void testStyleExpanded() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"DifferentUseStyles.java\"), expected);", "+        verify(checkConfig, getPath(\"InputDifferentUseStyles.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5b213c7c895e253686967db598a1abe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MethodNameCheckTest.java", "commitBeforeChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "commitAfterChange": "fa5884271348f0cfaaa1160e18028d37845af4dd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testForNpe() throws Exception", "signatureAfterChange": "      @Test     public void testForNpe() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"naming/InputMethodNameExtra.java\"), expected);", "+        verify(checkConfig, getPath(\"InputMethodNameExtra.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5ecd01d288434c1c3ed4c3ccb47315a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/WhitespaceAroundTest.java", "commitBeforeChange": "4346d41010a729e14991e30706bdb16ff18ff39a", "commitAfterChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void whitespaceAroundBasicTest() throws Exception", "signatureAfterChange": "      @Test     public void whitespaceAroundBasicTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"WhitespaceAroundInput_Basic\");", "+        final String filePath = builder.getFilePath(\"InputWhitespaceAroundBasic\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b67ac6c50adcc71ee53f2c38f80b4e69", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Test     public void serial()         throws IOException", "signatureAfterChange": "      @Test     public void serial()         throws IOException", "diff": ["-        String filename = getDocPath(\"Serial.txt\");", "+        String filename = getDocPath(\"InputSerial.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6993c976cf147156034910004600aca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Test     public void testCasesFromSpec()         throws Exception", "signatureAfterChange": "      @Test     public void testCasesFromSpec()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest15.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda15.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6f199a4fd333e7a1ee261e1ed5c94eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void seeReferenceWithFewNestedClasses()         throws IOException", "signatureAfterChange": "      @Test     public void seeReferenceWithFewNestedClasses()         throws IOException", "diff": ["-        String filename = getDocPath(\"SeeReferenceWithFewNestedClasses.txt\");", "+        String filename = getDocPath(\"InputSeeReferenceWithFewNestedClasses.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b704f311ce7a8687c197c5a9d49d00f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/api/ScopeTest.java", "commitBeforeChange": "3e05297d53f26f60bd6da0d5c1d715740c2d0f61", "commitAfterChange": "ecc5239c78ca71db775de187b6b70481d8b08284", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test(expected = IllegalArgumentException.class)     public void testMisc()", "signatureAfterChange": "     @Test(expected = IllegalArgumentException.class)     public void testMisc()", "diff": ["-        assertEquals(\"Scope[1 (public)]\", o.toString());", "+        assertEquals(\"public\", o.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b74cdb6d4c1d0af1bca683f3c2ca6b98", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      @Test     public void allJavadocInlineTags()         throws IOException", "signatureAfterChange": "      @Test     public void allJavadocInlineTags()         throws IOException", "diff": ["-        String filename = getDocPath(\"AllJavadocInlineTags.txt\");", "+        String filename = getDocPath(\"InputAllJavadocInlineTags.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7e9312ab7cbd25629f0b49cc93a7edb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 53, "signatureBeforeChange": "      @Test     public void testTabs() throws Exception", "signatureAfterChange": "      @Test     public void testTabs() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputUseTabs.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputUseTabs.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b83bbb87506c8f8c0b8c626ce4358111", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "e4a14e401a5839c6f4fa7238f5ba73255e488dba", "commitAfterChange": "b59648d60599bc197de618af5406c5e46978bbda", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testMissingPropertyValue()", "signatureAfterChange": "      public void testMissingPropertyValue()", "diff": ["-                        + \"for element type \\\"property\\\".\"));", "+                        + \"for element type \\\"property\\\".:8:41\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b85e8d4f96efdfbaf81941dcb7581a3f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testHtmlComment() throws Exception", "signatureAfterChange": "      @Test     public void testHtmlComment() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputJavadocStyleCheckHtmlComment.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJavadocStyleHtmlComment.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8e29ae00234153c3079e3c9ba8534c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "commitAfterChange": "7e5e919ce7db115c5893fa23e07a3cf1acfc3f10", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testTypeNamesForFourPermittedCapitalLetters() throws Exception", "signatureAfterChange": "      @Test     public void testTypeNamesForFourPermittedCapitalLetters() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"naming/InputAbbreviationAsWordInTypeNameCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b90e03e5b304ce2717f4291c818a60b4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionFilterTest.java", "commitBeforeChange": "df28ab043954d0d4da8b1999ea97d95ccffe8c21", "commitAfterChange": "93b8c38299bcb9a140967ff086b9d2758d66cac0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testAccept() throws CheckstyleException", "signatureAfterChange": "      @Test     public void testAccept() throws CheckstyleException", "diff": ["-        filter.setFile(\"src/test/resources/com/puppycrawl/tools/checkstyle/suppressions_none.xml\");", "+        filter.setFile(\"src/test/resources/com/puppycrawl/tools/checkstyle/filters/suppressions_none.xml\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b930803797d3353a1804ed08bd72c623", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheckTest.java", "commitBeforeChange": "3d81ece0258005a3264d550f8cffeedc27a3765c", "commitAfterChange": "47e6c23b4d9cd01731a90e3caeea33ca53a15516", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testEnhancedForLoopVariableFalse() throws Exception", "signatureAfterChange": "      @Test     public void testEnhancedForLoopVariableFalse() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputFinalLocalVariableEnhancedForLoopVariable.java\"), expected);", "+        verify(checkConfig, getPath(\"InputFinalLocalVariableEnhancedForLoopVariable.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b94b80f05293bff4979b03319805c1be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testDoWhileWhitespaceAround() throws Exception", "signatureAfterChange": "      @Test     public void testDoWhileWhitespaceAround() throws Exception", "diff": ["-        verify(checkConfig,", "-               getPath(\"whitespace/InputDoWhileWhitespaceAround.java\"),", "-               expected);", "+        verify(checkConfig, getPath(\"InputDoWhileWhitespaceAround.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b99423ad77ef6f1ab8caa01125181dc4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/HideUtilityClassConstructorCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testClassWithStaticInnerClass() throws Exception", "signatureAfterChange": "      @Test     public void testClassWithStaticInnerClass() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"HideUtilityClassConstructor3041574_3.java\"), expected);", "+        verify(checkConfig, getPath(\"InputHideUtilityClassConstructor3041574_3.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9a1a34c79d1c21c019cd7f46e97293a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 50, "signatureBeforeChange": "      @Test     public void testValidClassDefWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testValidClassDefWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputValidClassDefIndent.java\");", "+        final String fname = getPath(\"InputValidClassDefIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9c7259106b26c5cad6f26a6d009887f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void testWithTypecast()         throws Exception", "signatureAfterChange": "      @Test     public void testWithTypecast()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest16.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda16.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9eb416b39d7022bf4f74aedad05d085", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testMethodReferences() throws Exception", "signatureAfterChange": "      @Test     public void testMethodReferences() throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputMethodReferencesTest3.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputMethodReferences3.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9f3970f227c4beb63e526b47f88a61c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java", "commitBeforeChange": "edc4cc9ffc1a5b872398af9d6735b4bde75de385", "commitAfterChange": "a077b7282714b38286a09dcea10b710e5121a246", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testCtorDef() throws Exception", "signatureAfterChange": "      @Test     public void testCtorDef() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ComplexityCheckTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"ExecutableStatementCountInput.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba1cfad9a722270c3f3c6500f708f4b9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Test     public void testWithSumCustomMsg() throws Exception", "signatureAfterChange": "      @Test     public void testWithSumCustomMsg() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputReturnFromFinallyCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputReturnFromFinally.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba74df4cb350910b2efe09f0bceef688", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "9dd69b267b626af533ddf8bc0d37b4fd3744fa6e", "commitAfterChange": "57b908199dfa5c2c9bf9388d92925ccfb312812f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testInvalidFileFormat()", "signatureAfterChange": "      @Test     public void testInvalidFileFormat()", "diff": ["-                \"unable to parse \" + fn + \" - invalid files or checks format\",", "+                \"Unable to parse \" + fn + \" - invalid files or checks format\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba9ffb1de6c6a31cb04d93bdd507c1d2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testWithoutAnnotations() throws Exception", "signatureAfterChange": "      @Test     public void testWithoutAnnotations() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAnnotationLocationCheckTest1.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAnnotationLocation1.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb2b8ddeda34e002e3d12fd14eb7e89f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 57, "signatureBeforeChange": "      @Test     public void testBraceAdjustment() throws Exception", "signatureAfterChange": "      @Test     public void testBraceAdjustment() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputBraceAdjustment.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputBraceAdjustment.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb432b80dbc8ecc2569243a271614dc2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testWrongPackage() throws Exception", "signatureAfterChange": "      @Test     public void testWrongPackage() throws Exception", "diff": ["-                getNonCompilablePath(\"InputIllegalInstantiationCheckLang.java\"),", "+                getNonCompilablePath(\"InputIllegalInstantiationLang.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb461afe312e9e26d45c4eb8aa664e74", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/NestedTryDepthCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCustomNestingDepth() throws Exception", "signatureAfterChange": "      @Test     public void testCustomNestingDepth() throws Exception", "diff": ["-            \"32:21: Nested try depth is 3 (max allowed is 2).\",", "+            \"34:21: Nested try depth is 3 (max allowed is 2).\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb69e4b8ca3144d452eb9106ba261242", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/WhitespaceAroundTest.java", "commitBeforeChange": "de39a36a6b81521c17e3a4afa0e98e30deccf082", "commitAfterChange": "2b4a02d2c8a498a8a1ee38e9396426209fa65fad", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Test     public void whitespaceAroundEmptyTypesCyclesTest() throws Exception", "signatureAfterChange": "     @Test     public void whitespaceAroundEmptyTypesCyclesTest() throws Exception", "diff": ["-        String filePath = builder.getFilePath(\"WhitespaceAroundnput_EmptyTypesAndCycles\");", "+        String filePath = builder.getFilePath(\"WhitespaceAroundInput_EmptyTypesAndCycles\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb6fee797a3def5a26c9284ba372030e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testTypeAndVariablesAndMethodNamesWithNoIgnores() throws Exception", "signatureAfterChange": "      @Test     public void testTypeAndVariablesAndMethodNamesWithNoIgnores() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeName.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb76e1d55dc1d16e753372607503865e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "1181c2e17292151b96e4253f01300505fe4153d2", "commitAfterChange": "3004b4d8810fae5956864d1493ea94f183b9442c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testNonExistingOutputFormat()             throws Exception", "signatureAfterChange": "      @Test     public void testNonExistingOutputFormat()             throws Exception", "diff": ["-        Main.main(\"-c\", \"/google_checks.xml\", \"-f\" , \"xmlp\",", "+        Main.main(\"-c\", \"src/test/resources/com/puppycrawl/tools/checkstyle/config-classname.xml\", \"-f\" , \"xmlp\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc3e502b17cb639899d1f645abfbf0f6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     @Test     public void testSingleNoUncheckedUnused() throws Exception", "signatureAfterChange": "     @Test     public void testSingleNoUncheckedUnused() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsSingle.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsSingle.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc6599e370cac0fbaaa0307b6b0e1194", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "9c488c1f512ffcc58af433842c992bd3f85b2d63", "commitAfterChange": "f47587c9fb66cf46fbd2eb5691449cda6d551ecb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testIllegalTokenDefault() throws Exception", "signatureAfterChange": "      @Test     public void testIllegalTokenDefault() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/InputIllegalTokens.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc994960e8ccaaee4266ab6f68133545", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testIncorrect() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrect() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputIncorrectJavaDocParagraphCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIncorrectJavaDocParagraph.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd06e192bb9e15946ab8d871ca2235c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/AnnotationTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testSimpleTypeAnnotation()         throws Exception", "signatureAfterChange": "      @Test     public void testSimpleTypeAnnotation()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAnnotationsTest1.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAnnotations1.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd46c66d4150f812cc625ad0ad9684eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "de60ea7b86b5ea25338dfe8a300db9d179004812", "commitAfterChange": "e24596db9459a3592784a544b213cc7aa919a3f6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testNoSum() throws Exception", "signatureAfterChange": "      @Test     public void testNoSum() throws Exception", "diff": ["-               getPath(\"coding\" + File.separator + \"InputReturnFromFinallyCheck.java\"),", "+               getPath(\"checks\" + File.separator + \"InputReturnFromFinallyCheck.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd5191260e9393ab71fb04de38f02787", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule331nowildcard/AvoidStarImportTest.java", "commitBeforeChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "commitAfterChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void starImportTest() throws Exception", "signatureAfterChange": "      @Test     public void starImportTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"AvoidStarImportInput\");", "+        final String filePath = builder.getFilePath(\"InputAvoidStarImport\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bda1c5298910a8947e2ddf0a692a8e69", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/NoFinalizerCheckTest.java", "commitBeforeChange": "7dfac0f667e848d2642ee5b5e8fd11cd908aca62", "commitAfterChange": "3c63c31901ca2e6714fe922f695135718198dd06", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testHasNoFinalizer()         throws Exception", "signatureAfterChange": "      @Test     public void testHasNoFinalizer()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputIllegalThrowsCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"coding/InputFallThrough.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdda207eaf088b8a7a272d103541c7a5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheckTest.java", "commitBeforeChange": "9c488c1f512ffcc58af433842c992bd3f85b2d63", "commitAfterChange": "f47587c9fb66cf46fbd2eb5691449cda6d551ecb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testGood1() throws Exception", "signatureAfterChange": "      @Test     public void testGood1() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/InputIllegalTokens.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be48b538b1b4117be0984d1a6d4279c1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCustomTokensLineWrapping()         throws Exception", "signatureAfterChange": "      @Test     public void testCustomTokensLineWrapping()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"NoLineWrapBadInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputNoLineWrapBad.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be8699e02a8a0a3b45e8ba96478bb533", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     @Test     public void testNotOverride() throws Exception", "signatureAfterChange": "     @Test     public void testNotOverride() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"NotOverride.java\"), expected);", "+        verify(checkConfig, getPath(\"InputNotOverride.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bec14dd6dbd5aa11f1d0743618f750e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4841indentation/IndentationTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void correctWhileTest() throws Exception", "signatureAfterChange": "      @Test     public void correctWhileTest() throws Exception", "diff": ["-            .getFilePath(\"IndentationCorrectWhileDoWhileAndParameterInput\");", "+            .getFilePath(\"InputIndentationCorrectWhileDoWhileAndParameter\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "becb9e9fb0168237a6a3d48e31e29b20", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      @Test     public void testInTernary()         throws Exception", "signatureAfterChange": "      @Test     public void testInTernary()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest18.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda18.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf2572642b0ca576a0ed1d3c0a15fbaa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCalculation() throws Exception", "signatureAfterChange": "      @Test     public void testCalculation() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputComplexityCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputComplexity.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf7db95582e7db17daffbde74770cb4d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDefaults() throws Exception", "signatureAfterChange": "     public void testDefaults() throws Exception", "diff": ["-                + \"'au.com.redhillconsulting.jamaica.tools.checkstyle.InputIllegalType.AbstractClass'\"", "+                + \"'com.puppycrawl.tools.checkstyle.checks.coding.InputIllegalType.AbstractClass'\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf80b0e41c4f94e1e0e4f8bfae001a8f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/HideUtilityClassConstructorCheckTest.java", "commitBeforeChange": "64c05f5391bdf55a60da22a685488022827aee84", "commitAfterChange": "1487e5161886d95cb8c82e4fb1a8b447fa7e32d0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testEmptyClassWithOnlyPrivateFields() throws Exception", "signatureAfterChange": "      @Test     public void testEmptyClassWithOnlyPrivateFields() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"HideUtilityClassContructor3041574_2.java\"), expected);", "+        verify(checkConfig, getPath(\"HideUtilityClassConstructor3041574_2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bff802f8f5372cb5e5bede8e47bada52", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4843defaultcasepresent/MissingSwitchDefaultTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c08a3e16be2f9870a142d2810df3f649", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule233nonascii/AvoidEscapedUnicodeCharactersCheckTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0d6149dc644c35fb65fdb23471e33a7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIgnoreMethodNames() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreMethodNames() throws Exception", "diff": ["-                + \"'com.puppycrawl.tools.checkstyle.checks.coding.InputIllegalType.AbstractClass'\"", "+                + \"'com.puppycrawl.tools.checkstyle.coding.InputIllegalType.AbstractClass'\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0f4cafc65c96c46a6fdfb8a3d2499f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     public void testWithSumLessThenMinDefMsg() throws Exception", "signatureAfterChange": "      @Test     public void testWithSumLessThenMinDefMsg() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputReturnFromFinallyCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputReturnFromFinally.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0f98b1a597e6f88493d6ed02808a34d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d92ceb81a67bb10b98f5ce305f839ba535a1c6ee", "commitAfterChange": "9aa8268e473071cbe26aa9d3a8631f1902e3fef0", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void testTags()         throws Exception", "signatureAfterChange": "      public void testTags()         throws Exception", "diff": ["-            filepath + \":11:17: variable 'mMissingJavadoc' missing Javadoc.\",", "+            filepath + \":11:17: Variable 'mMissingJavadoc' missing Javadoc.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1ecc617cb22a5f65d9ffd774b7264c1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testCommaNeverViolations() throws Exception", "signatureAfterChange": "      @Test     public void testCommaNeverViolations() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"AnnotationUseWithTrailingComma.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAnnotationUseWithTrailingComma.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1fe2d7dca294585a22347d16d8bdf77", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testHtml() throws Exception", "signatureAfterChange": "      @Test     public void testHtml() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputJavadocStyleCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJavadocStyle.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c238b918fe3239ad9cc8503e16e40e96", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyCatchBlockTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testViolationsByVariableName() throws Exception", "signatureAfterChange": "      @Test     public void testViolationsByVariableName() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"EmptyCatchBlockViolationsByVariableNameInput\");", "+        final String filePath = builder.getFilePath(\"InputEmptyCatchBlockViolationsByVariableName\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2b3096c738109398995b8d5bf8a2000", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java", "commitBeforeChange": "a281cc95c44df9b491d227b73b42a09164ecb8f4", "commitAfterChange": "a135b0952a3041e37dfc9b81452bc016a5687e25", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testDefaultPackage() throws Exception", "signatureAfterChange": "     @Test     public void testDefaultPackage() throws Exception", "diff": ["-            \"20: \" + getCheckMessage(MSG_LEX, \"com.google.common.*\"),", "+            \"20: \" + getCheckMessage(MSG_LEX, \"com.google.common.collect.*\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2e3aa20a0967219e4421b851b1d0460", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheckTest.java", "commitBeforeChange": "3c988d95d9bf98e33b764a2b65dba99f4bc2c479", "commitAfterChange": "b519429598906188bdf5aeae44a83a5aa6630e52", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testProcessJavadoc() throws Exception", "signatureAfterChange": "      @Test     public void testProcessJavadoc() throws Exception", "diff": ["-            \"30:8: Unused import - java.awt.Label.\",", "+            \"32:8: Unused import - java.awt.Label.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2f009d0fd347ef13e29fa099032f61c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "44cc8b53c90117295151ea6723f859287f51dda5", "commitAfterChange": "5aacffce41a8f8d6b79f0b4a771e3e5ce03c0d02", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": "      @Test     public void testInheritDoc() throws Exception", "signatureAfterChange": "      @Test     public void testInheritDoc() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputInheritDoc.java\"), expected);", "+        verify(checkConfig, getPath(\"InputInheritDoc.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3066b43e1a92729890b87428f0e01b4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      @Test     public void fewWhiteSpacesAsSeparator()         throws IOException", "signatureAfterChange": "      @Test     public void fewWhiteSpacesAsSeparator()         throws IOException", "diff": ["-        String filename = getDocPath(\"FewWhiteSpacesAsSeparator.txt\");", "+        String filename = getDocPath(\"InputFewWhiteSpacesAsSeparator.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c338ac3c6689b5fac57c7ebd4c2c6a36", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 52, "signatureBeforeChange": "      @Test     public void testValidCommaWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testValidCommaWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputValidCommaIndent.java\");", "+        final String fname = getPath(\"InputValidCommaIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c36b1c819db3e64093f759185fc22678", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testCaseWithoutLineWrapping() throws Exception", "signatureAfterChange": "      @Test     public void testCaseWithoutLineWrapping() throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"whitespace/NoLineWrapGoodInput.java\"), expected);", "+        verify(checkConfig, getPath(\"NoLineWrapGoodInput.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c399ab501cd15c7ec8b98775546945b2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "44cc8b53c90117295151ea6723f859287f51dda5", "commitAfterChange": "5aacffce41a8f8d6b79f0b4a771e3e5ce03c0d02", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 32, "signatureBeforeChange": "      @Test     public void test1379666() throws Exception", "signatureAfterChange": "      @Test     public void test1379666() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/javadoc/Input_1379666.java\"), expected);", "+        verify(checkConfig, getPath(\"Input_1379666.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3b92699079a6617489cb7390c8282eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/SeparatorWrapCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testComma() throws Exception", "signatureAfterChange": "      @Test     public void testComma() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputSeparatorWrap.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSeparatorWrap.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3dc2ce955dee03299322f60eb4db068", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "commitAfterChange": "7e5e919ce7db115c5893fa23e07a3cf1acfc3f10", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testTypeNamesForZeroPermittedCapitalLetter() throws Exception", "signatureAfterChange": "      @Test     public void testTypeNamesForZeroPermittedCapitalLetter() throws Exception", "diff": ["-                getPath(\"naming/InputAbbreviationAsWordInTypeNameCheck.java\"), expected);", "+                getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4030eb987b3e97d69a8e9419f9c3cd2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Test     public void testBadOverrideFromOtherJ5Compatible() throws Exception", "signatureAfterChange": "     @Test     public void testBadOverrideFromOtherJ5Compatible() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"BadOverrideFromOther.java\"), expected);", "+        verify(checkConfig, getPath(\"InputBadOverrideFromOther.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c43385a831fa11a490523b1cfd4ac2a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/AnnotationTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testAnnotationInThrows()         throws Exception", "signatureAfterChange": "      @Test     public void testAnnotationInThrows()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputAnnotationsTest5.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputAnnotations5.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4622a74e239aed129197df1646e3409", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d92ceb81a67bb10b98f5ce305f839ba535a1c6ee", "commitAfterChange": "9aa8268e473071cbe26aa9d3a8631f1902e3fef0", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void testTagsWithResolver()         throws Exception", "signatureAfterChange": "      public void testTagsWithResolver()         throws Exception", "diff": ["-            filepath + \":11:17: variable 'mMissingJavadoc' missing Javadoc.\",", "+            filepath + \":11:17: Variable 'mMissingJavadoc' missing Javadoc.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4e29e363c174739cd66814ff340a22f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule521packagenames/PackageNameTest.java", "commitBeforeChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "commitAfterChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void goodPackageNameTest() throws Exception", "signatureAfterChange": "      @Test     public void goodPackageNameTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"PackageNameInputGood\");", "+        final String filePath = builder.getFilePath(\"InputPackageNameGood\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c518dcf256b6e099df7897c6458c227d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/SuperFinalizeCheckTest.java", "commitBeforeChange": "50d876d93ced43c6cbeeb7891b099a615e848a1a", "commitAfterChange": "5a00ab2f307813f7acd9a7bcb06267289eb72b24", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testIt() throws Exception", "signatureAfterChange": "      @Test     public void testIt() throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"coding/InputFinalize.java\"), expected);", "+        verify(checkConfig, getPath(\"InputFinalize.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c521b14d888d13851b0f9859ab91b34a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheckTest.java", "commitBeforeChange": "4704f9198833e80552a7b2bf900ee9ee6d3d39c9", "commitAfterChange": "05526332666bc5142f8cf29a941435527c20fb9c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testMethodsOnly() throws Exception", "signatureAfterChange": "      public void testMethodsOnly() throws Exception", "diff": ["-            \"10:9: Method call to 'method1' needs \\\"this.\\\".\",", "+            \"12:9: Method call to 'method1' needs \\\"this.\\\".\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c56c147a963cd4ddfbcab1e969ab7145", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "96d3aaea19657ac233d9a57b46a52bc0b35eda95", "commitAfterChange": "5f3eced2d85c10407b5ba1f38c06af05715d9bd7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testMaximumDepth()         throws Exception", "signatureAfterChange": "      @Test     public void testMaximumDepth()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputIllegalTokens.java\"), expected);", "+        verify(checkConfig, getPath(\"checks/InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5abd43db6d0ed1b47bf582ffc682c2f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java", "commitBeforeChange": "115a5df29dd256bb946c950b8f80d02a28f57edf", "commitAfterChange": "20d51043cb49e913cae8e72a80434e729419f408", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testCorrectFile() throws Exception", "signatureAfterChange": "      @Test     public void testCorrectFile() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputPackageDeclaration.java\"), expected);", "+        verify(checkConfig, getPath(\"InputPackageDeclaration.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5e89f57aaeb4bc92e656319e50b5aac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void test() throws Exception", "signatureAfterChange": "      @Test     public void test() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"BooleanExpressionComplexityCheckTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputBooleanExpressionComplexity.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6013ebd7f837f28e0dfcc3458e6c9b8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testIgnoreFinalOption() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreFinalOption() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputVariableDeclarationUsageDistanceCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputVariableDeclarationUsageDistance.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c625a01297ecdf0c107bac9a1549d474", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4821onevariablepreline/MultipleVariableDeclarationsTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c62610c2300474898bf46a8120ce824d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/UpperEllCheckTest.java", "commitBeforeChange": "acc3f40015ffe1263cfa684ca4b29939249e9aed", "commitAfterChange": "c2b22a74a2e85bbb2cfd4e0e2379bb062cb58dd1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testWithChecker()         throws Exception", "signatureAfterChange": "      public void testWithChecker()         throws Exception", "diff": ["-            \"93:43: Should use uppercase 'L'.\",", "+            \"94:43: Should use uppercase 'L'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c688a7fe1df8d7e88f0fd41c3cf7d2ad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PropertyCacheFileTest.java", "commitBeforeChange": "5dffb5a301b2605c730d1de3f312ba4a7f95355e", "commitAfterChange": "4d8d047f465f9eb101390da63ee62a735fbedba5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testNonAccessibleFile() throws IOException", "signatureAfterChange": "      @Test     public void testNonAccessibleFile() throws IOException", "diff": ["-        Configuration config = new DefaultConfiguration(\"myname\");", "+        Configuration config = new DefaultConfiguration(\"myName\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c70bfc3ed8ffa68a68770816685131f6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheckTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void test1322879() throws Exception", "signatureAfterChange": "      @Test     public void test1322879() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/ParenPadWithSpace.java\"),", "+        verify(checkConfig, getPath(\"ParenPadWithSpace.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7235068b12f2671ab14999412776e63", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheckTest.java", "commitBeforeChange": "e76a439c2b0250808ce2723c43cd872a1761e294", "commitAfterChange": "96d3aaea19657ac233d9a57b46a52bc0b35eda95", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testOnlyConstructors() throws Exception", "signatureAfterChange": "      @Test     public void testOnlyConstructors() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputDeclarationOrder.java\"), expected);", "+        verify(checkConfig, getPath(\"InputDeclarationOrder.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c742e9dc667a2f457b0d4fcf06b71214", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/doclets/CheckDocsDoclet.java", "commitBeforeChange": "a8b8375b1db65b131938111ff283baed771161ed", "commitAfterChange": "dcb3029c008907edf6aa4b59a51349f0ca94f54b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static void writeXdocsHeader(             final PrintWriter aPrintWriter,             final String aTitle)", "signatureAfterChange": "     private static void writeXdocsHeader(             final PrintWriter aPrintWriter,             final String aTitle)", "diff": ["-        aPrintWriter.println(\"<?xml version=\\\"1.0\\\" encoding=\\\"ISO-8859-1\\\"?>\");", "+        aPrintWriter.println(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c88157cd0b48d490edfe05bcc890837e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/MultiDimensionalArraysInGenericsTest.java", "commitBeforeChange": "2fe5ade8b31c0c7b32fab4e25f1ec73c9ab31b8d", "commitAfterChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testCanParse()         throws Exception", "signatureAfterChange": "      @Test     public void testCanParse()         throws Exception", "diff": ["+", "-                getPath(\"grammars/MultiDimensionalArraysInGenericsTestInput.java\"),", "+                getPath(\"MultiDimensionalArraysInGenericsTestInput.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c910b6da78669cda89b427e616c5aa3a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/naming/ConstantNameCheckTest.java", "commitBeforeChange": "984eb8d7427038effd8ee8d2d9c90c74eee57e2b", "commitAfterChange": "861e2af0e1c40c2daf1b7f20f59052603ed832d4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testInterface()         throws Exception", "signatureAfterChange": "      public void testInterface()         throws Exception", "diff": ["-            \"24:16: Name 'data' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\"", "+            \"24:16: Name 'data' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c92c321841ed0c16548b0029fd5fbca2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "241c48750b15ba21a37cec34d2beb82a18870f84", "commitAfterChange": "db84febeb5ef585021fa86c3eb9ea30de63b82e7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testWhitespaceOff()         throws Exception", "signatureAfterChange": "      public void testWhitespaceOff()         throws Exception", "diff": ["-            filepath + \":11: type Javadoc comment is missing an @author tag.\",", "+            filepath + \":13: type Javadoc comment is missing an @author tag.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca0594e50528957b4fdf8313c12d6705", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule72thesummaryfragment/SummaryJavadocTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cabfaeef1ec1312bad89e3f7fc1ba413", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MemberNameCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testProtectedOnly() throws Exception", "signatureAfterChange": "      @Test     public void testProtectedOnly() throws Exception", "diff": ["-            \"4:19: Name 'mProtected' must match pattern '^_[a-z]*$'.\",", "+            \"6:19: Name 'mProtected' must match pattern '^_[a-z]*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caf6614420bc12b86ab039828e95d81d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "647e2e37cbc79c3f5a84ebd722527ce8fb081bfe", "commitAfterChange": "7f0ec275798d5dccae5aa51530415b71f65d30cd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testForceLineBreakBefore() throws Exception", "signatureAfterChange": "      @Test     public void testForceLineBreakBefore() throws Exception", "diff": ["-            \"46:25: '}' should be alone on a line.\",", "+            \"47:25: '}' should be alone on a line.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cba69fd324a74753080954ff91c024ee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java", "commitBeforeChange": "fe7f145c442a32b0830b61fb00c58b2897e713b7", "commitAfterChange": "b0bdff0e9b50bbe738bb009b953f0ea5950b00bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-                log(aAST, \"declarationorder.method\");", "+                log(aAST, \"declaration.order.method\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbfac8037bfa6c2374b64c7cf563d202", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/comments/CommentsTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCompareExpectedTreeWithInput1() throws Exception", "signatureAfterChange": "      @Test     public void testCompareExpectedTreeWithInput1() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputCommentsTest_1.java\"), expected);", "+        verify(checkConfig, getPath(\"InputComments1.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc9ab2d3c4c7ddaa95e27575a7ca3d9a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter6programpractice/rule62donotignoreexceptions/EmptyBlockTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccf9a18a8103e5b27b540c03a17a7dd4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testWithFewArgWithTypeFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithFewArgWithTypeFullBody()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest13.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda13.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd86187c17213b86952cbbf44e9b2a79", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/LocalVariableNameCheckTest.java", "commitBeforeChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "commitAfterChange": "fa5884271348f0cfaaa1160e18028d37845af4dd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCatchParameter()         throws Exception", "signatureAfterChange": "      @Test     public void testCatchParameter()         throws Exception", "diff": ["-            \"74:24: \" + getCheckMessage(MSG_INVALID_PATTERN, \"ex\", pattern),", "+            \"69:24: \" + getCheckMessage(MSG_INVALID_PATTERN, \"ex\", pattern),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdcf0b5a357882ce6cea36b6653d506d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/SuperCloneCheckTest.java", "commitBeforeChange": "8ee92d2ab36bc3d1179b7626f958ded0574a9249", "commitAfterChange": "2c7a1ecc107a9faf2b817e8b52a0f1ba84bb2d1f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIt() throws Exception", "signatureAfterChange": "     @Test     public void testIt() throws Exception", "diff": ["-            \"60:23: Method 'clone' should call 'super.clone'.\",", "+            \"60:48: Method 'clone' should call 'super.clone'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdef2ef372cefae3d384259b3923c930", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testNPE() throws Exception", "signatureAfterChange": "      @Test     public void testNPE() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"AbstractMultisetSetCountTester.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAbstractMultisetSetCountTester.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce4479c2f17631766555f15d7dea480b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "9dd69b267b626af533ddf8bc0d37b4fd3744fa6e", "commitAfterChange": "57b908199dfa5c2c9bf9388d92925ccfb312812f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testUnableToFindSuppressions() throws Exception", "signatureAfterChange": "      @Test     public void testUnableToFindSuppressions() throws Exception", "diff": ["-        thrown.expectMessage(\"unable to find \" + sourceName);", "+        thrown.expectMessage(\"Unable to find: \" + sourceName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce6f1b8a31defe13cb42e16891a271e4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 36, "signatureBeforeChange": "      @Test     public void testValidArrayInitWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testValidArrayInitWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputValidArrayInitIndent.java\");", "+        final String fname = getPath(\"InputValidArrayInitIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cef0c22ecc3fdddf0e515248a216bf8d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void extendAnnotationTest() throws Exception", "signatureAfterChange": "      @Test     public void extendAnnotationTest() throws Exception", "diff": ["-        verify(config, getPath(\"ExtendAnnotation.java\"), expected);", "+        verify(config, getPath(\"InputExtendAnnotation.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf9fd2320b10cb4d74efda1ac6aba263", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/MultiDimensionalArraysInGenericsTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCanParse()         throws Exception", "signatureAfterChange": "      @Test     public void testCanParse()         throws Exception", "diff": ["-                getPath(\"MultiDimensionalArraysInGenericsTestInput.java\"),", "+                getPath(\"InputMultiDimensionalArraysInGenerics.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cffb0c5fcc2fdd230f44385758767f41", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/XMLLoggerTest.java", "commitBeforeChange": "5d4dd44322aac232442d224ee28d4b6d7ab17d76", "commitAfterChange": "53197d9be9366ccf9ebccc1e6e31270c1dff8e95", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testAddError()         throws IOException", "signatureAfterChange": "      public void testAddError()         throws IOException", "diff": ["-        final XMLLogger logger = new XMLLogger(outStream, true); ", "+        final XMLLogger logger = new XMLLogger(outStream, true);", "-            {\"<error line=\\\"1\\\" column=\\\"1\\\" message=\\\"key\\\"/>\"};", "+            {\"<error line=\\\"1\\\" column=\\\"1\\\" severity=\\\"warning\\\" message=\\\"key\\\"/>\"};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0b563c3be0ccedc8237758876df7a2e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCustomTokensLineWrapping()         throws Exception", "signatureAfterChange": "      @Test     public void testCustomTokensLineWrapping()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/NoLineWrapBadInput.java\"), expected);", "+        verify(checkConfig, getPath(\"NoLineWrapBadInput.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0c63f31c52a15cf0045ef617b542a11", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     @Test     public void testParensNever() throws Exception", "signatureAfterChange": "     @Test     public void testParensNever() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"DifferentUseStyles.java\"), expected);", "+        verify(checkConfig, getPath(\"InputDifferentUseStyles.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d12f5596b39dcd89e9acdd89002940a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testBooleanMethods() throws Exception", "signatureAfterChange": "      @Test     public void testBooleanMethods() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputEqualsHashCodeCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputEqualsHashCode.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1bd476d23af76fd9f508103d677d1c4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     @Test     public void testExpandedNoUncheckedUnused() throws Exception", "signatureAfterChange": "     @Test     public void testExpandedNoUncheckedUnused() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsExpanded.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsExpanded.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d22aac71faaae1b5eeb8fda1a6a6bd1d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheckTest.java", "commitBeforeChange": "2cf54ade2182e29c413f23e2235a896247d7a2ad", "commitAfterChange": "d282053d9ce02c13c779decfd079a8305086f752", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testIoExceptionWhenLoadingHeaderFile() throws Exception", "signatureAfterChange": "      @Test     public void testIoExceptionWhenLoadingHeaderFile() throws Exception", "diff": ["-        PowerMockito.doThrow(new IOException(\"excpected exception\")).when(check, \"loadHeader\",", "+        PowerMockito.doThrow(new IOException(\"expected exception\")).when(check, \"loadHeader\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2476f99e4dc646738daeae705226010", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilterTest.java", "commitBeforeChange": "df28ab043954d0d4da8b1999ea97d95ccffe8c21", "commitAfterChange": "93b8c38299bcb9a140967ff086b9d2758d66cac0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private void verifySuppressed(Configuration aFilterConfig,             String... aSuppressed)         throws Exception", "signatureAfterChange": "      private void verifySuppressed(Configuration aFilterConfig,             String... aSuppressed)         throws Exception", "diff": ["-               getPath(\"filters/InputSuppressionCommentFilter.java\"),", "+               getPath(\"InputSuppressionCommentFilter.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d25db94dc4263fed19a60e559275ad55", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testBad() throws Exception", "signatureAfterChange": "     @Test     public void testBad() throws Exception", "diff": ["-            \"3: The name of the outer type and the file do not match.\",", "+            \"4: The name of the outer type and the file do not match.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2bafa74e59540e1ee1c1899aa2dca24", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SingleLineJavadocCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testIgnoredTags() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoredTags() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputSingleLineJavadocCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSingleLineJavadocCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3005844ac7a05adf2447ec0d99742f1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "commitAfterChange": "7e5e919ce7db115c5893fa23e07a3cf1acfc3f10", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testTypeAndVariablesAndMethodNamesWithNoIgnores() throws Exception", "signatureAfterChange": "      @Test     public void testTypeAndVariablesAndMethodNamesWithNoIgnores() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"naming/InputAbbreviationAsWordInTypeNameCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3086f923340f5b4ce1cdaa0ce21e9dc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testAllowMultipleImportSeparatedFromPackage() throws Exception", "signatureAfterChange": "      @Test     public void testAllowMultipleImportSeparatedFromPackage() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputEmptyLineSeparatorMultipleImportEmptyClass.java\"), expected);", "+        verify(checkConfig, getPath(\"InputEmptyLineSeparatorMultipleImportEmptyClass.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3747f65ae93ef704f7a473926bcc440", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "f1efb27670a93690577f1bae17fc9dcbd88a795d", "commitAfterChange": "057394fff7aa2bcefbdc6fa824004c164176ea92", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testLoadFromURL() throws CheckstyleException", "signatureAfterChange": "      @Test     public void testLoadFromURL() throws CheckstyleException", "diff": ["-        final FilterSet fc = SuppressionsLoader.loadSuppressions(\"https://raw.github.com/checkstyle/checkstyle/master/src/testinputs/com/puppycrawl/tools/checkstyle/suppressions_none.xml\");", "+        final FilterSet fc = SuppressionsLoader.loadSuppressions(\"https://raw.github.com/checkstyle/checkstyle/master/src/test/resources/com/puppycrawl/tools/checkstyle/suppressions_none.xml\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d398ff84d024b64f2ce26c08a0aff463", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      @Test     public void docRootInheritDoc()         throws IOException", "signatureAfterChange": "      @Test     public void docRootInheritDoc()         throws IOException", "diff": ["-        String filename = getDocPath(\"DocRootInheritDoc.txt\");", "+        String filename = getDocPath(\"InputDocRootInheritDoc.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d39a2be6563b3a9c5953c053960f7738", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testEmptyJavadoc() throws Exception", "signatureAfterChange": "      @Test     public void testEmptyJavadoc() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputJavadocStyleCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJavadocStyle.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d42e0323653329deffe9960f5713bd1c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 60, "signatureBeforeChange": "      @Test     public void testValidAssignWithChecker() throws Exception", "signatureAfterChange": "      @Test     public void testValidAssignWithChecker() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputValidAssignIndent.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputValidAssignIndent.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d42f45de05e4ec531353bb68533ef3de", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCorrect() throws Exception", "signatureAfterChange": "      @Test     public void testCorrect() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputCorrectAtClauseOrderCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputCorrectAtClauseOrderCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4b6c684ced782fa23ef0999660a0e14", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheckTest.java", "commitBeforeChange": "b2cca2d5e91425cfe52c1c59cc8aa907a2e766df", "commitAfterChange": "6d20b67e0f1bfedc2132a887257d72edde4c857b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testSwitchBlockAsSingleDecisionPointSetToFalse() throws Exception", "signatureAfterChange": "      @Test     public void testSwitchBlockAsSingleDecisionPointSetToFalse() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"metrics/ComplexityCheckSwitchBlocksTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"ComplexityCheckSwitchBlocksTestInput.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4ce6fc525b04c5e7d74b15a6b0fdca7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testFirstSentenceFormat() throws Exception", "signatureAfterChange": "      @Test     public void testFirstSentenceFormat() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputJavadocStyleCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJavadocStyle.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4d8c250b1fb545551f6fecbc1bfb252", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "9dd69b267b626af533ddf8bc0d37b4fd3744fa6e", "commitAfterChange": "57b908199dfa5c2c9bf9388d92925ccfb312812f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testloadSuppressionsURISyntaxException() throws Exception", "signatureAfterChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testloadSuppressionsURISyntaxException() throws Exception", "diff": ["-            assertEquals(\"unable to find \" + fileName, ex.getMessage());", "+            assertEquals(\"Unable to find: \" + fileName, ex.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d676ce2022dd8e5ab541d0d6a24629f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/FileSetCheckLifecycleTest.java", "commitBeforeChange": "9c488c1f512ffcc58af433842c992bd3f85b2d63", "commitAfterChange": "f47587c9fb66cf46fbd2eb5691449cda6d551ecb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testProcessCallsFinishBeforeCallingDestroy() throws Exception", "signatureAfterChange": "      @Test     public void testProcessCallsFinishBeforeCallingDestroy() throws Exception", "diff": ["-        verify(checker, getPath(\"checks/InputIllegalTokens.java\"), expected);", "+        verify(checker, getPath(\"InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6b9c20857f59df502bed1fa873e5562", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testHtmlAllowed() throws Exception", "signatureAfterChange": "      @Test     public void testHtmlAllowed() throws Exception", "diff": ["-            getPath(\"pkghtml\" + File.separator + \"Ignored.java\"),", "+            getPath(\"pkghtml\" + File.separator + \"InputIgnored.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6ca1c0e349e2c455e9bb7abc734bcbc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 46, "signatureBeforeChange": "      @Test     public void testValidForWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testValidForWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputValidForIndent.java\");", "+        final String fname = getPath(\"InputValidForIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6e55b2de6a84047ca4fe54ead504e9a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 51, "signatureBeforeChange": "      @Test     public void testValidInterfaceDefWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testValidInterfaceDefWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputValidInterfaceDefIndent.java\");", "+        final String fname = getPath(\"InputValidInterfaceDefIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6e72199f2c7ee13566eb03cc8dc22cc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheckTest.java", "commitBeforeChange": "96d3aaea19657ac233d9a57b46a52bc0b35eda95", "commitAfterChange": "5f3eced2d85c10407b5ba1f38c06af05715d9bd7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGood1() throws Exception", "signatureAfterChange": "      @Test     public void testGood1() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputIllegalTokens.java\"), expected);", "+        verify(checkConfig, getPath(\"checks/InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6f24b2c63cf588c16c6190d14b14dd5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/PackageAnnotationTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testAnnotationNotInPackageInfo() throws Exception", "signatureAfterChange": "      @Test     public void testAnnotationNotInPackageInfo() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputPackageAnnotationCheckTest.java\"), expected);", "+        verify(checkConfig, getPath(\"InputPackageAnnotation.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6f48f1742ec0af91be14380ac2802ff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "44cc8b53c90117295151ea6723f859287f51dda5", "commitAfterChange": "5aacffce41a8f8d6b79f0b4a771e3e5ce03c0d02", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": "      @Test     public void testGenerics2() throws Exception", "signatureAfterChange": "      @Test     public void testGenerics2() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/TestGenerics.java\"), expected);", "+        verify(checkConfig, getPath(\"TestGenerics.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d703630c61999ed69e05b9418241a76d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testAllowAllCharactersEscaped() throws Exception", "signatureAfterChange": "      @Test     public void testAllowAllCharactersEscaped() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAvoidEscapedUnicodeCharactersCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAvoidEscapedUnicodeCharacters.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d711d2e4a3cc28e8c7d4d7ed6814be7e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 67, "signatureBeforeChange": "      @Test     public void testAnnotationDefinition() throws Exception", "signatureAfterChange": "      @Test     public void testAnnotationDefinition() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputAnnotationDefinition.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputAnnotationDefinition.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d712ac655c3d8bcd9b30639091c32f18", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testScopePublic()         throws Exception", "signatureAfterChange": "      @Test     public void testScopePublic()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputJavadocStyleCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJavadocStyle.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d797a642e44bb6652d9532e5394818eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testWithOneArgWithFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithFullBody()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest5.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda5.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7d031c02c093c24119b8ff84b7c1c2d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCorrect() throws Exception", "signatureAfterChange": "      @Test     public void testCorrect() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputCorrectAtClauseOrderCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputCorrectAtClauseOrder.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7e392e3b9dc91b9efa80dfa21e582b4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheckTest.java", "commitBeforeChange": "3d81ece0258005a3264d550f8cffeedc27a3765c", "commitAfterChange": "47e6c23b4d9cd01731a90e3caeea33ca53a15516", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testNativeMethods() throws Exception", "signatureAfterChange": "      @Test     public void testNativeMethods() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputFinalLocalVariableNativeMethods.java\"), expected);", "+        verify(checkConfig, getPath(\"InputFinalLocalVariableNativeMethods.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d81e07bd13b3e43652d7c672393966f1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4861blockcommentstyle/CommentsIndentationTest.java", "commitBeforeChange": "4346d41010a729e14991e30706bdb16ff18ff39a", "commitAfterChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testSurroundingCode() throws Exception", "signatureAfterChange": "      @Test     public void testSurroundingCode() throws Exception", "diff": ["-            builder.getFilePath(\"CommentsIndentationSurroundingCodeInput\");", "+            builder.getFilePath(\"InputCommentsIndentationSurroundingCode\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d872facbcad4deee96ad2666009e9376", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/LocalVariableNameCheckTest.java", "commitBeforeChange": "e7547bb7ddccec6737cea118a41864fc349ea1d2", "commitAfterChange": "d220d7c3cc74490c7f2923f2ea85d00133afe98c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testLoopVariables()         throws Exception", "signatureAfterChange": "      @Test     public void testLoopVariables()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputOneCharInintVarName.java\"), expected);", "+        verify(checkConfig, getPath(\"InputOneCharInitVarName.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d87731b8a0a3f401d6b461e0a23d2a3e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule528typevariablenames/ClassTypeParameterNameTest.java", "commitBeforeChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "commitAfterChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testClassDefault() throws Exception", "signatureAfterChange": "      @Test     public void testClassDefault() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"ClassTypeParameterNameInput\");", "+        final String filePath = builder.getFilePath(\"InputClassTypeParameterName\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d88837e704495f9dc897ef91272dc58c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4832nocstylearray/ArrayTypeStyleTest.java", "commitBeforeChange": "4346d41010a729e14991e30706bdb16ff18ff39a", "commitAfterChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void arrayTypeStyleTest() throws Exception", "signatureAfterChange": "      @Test     public void arrayTypeStyleTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"ArrayTypeStyleInput\");", "+        final String filePath = builder.getFilePath(\"InputArrayTypeStyle\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8acf14c5db36581978e9938c851b46f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/JavadocTypeCheckTest.java", "commitBeforeChange": "e8d025321c3d1f5741e860bd96a93e7d2169ca9c", "commitAfterChange": "661274b68096ccd5876abb8eacf7c8d42a939a0b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "          public void testVersionRegularExError()         throws Exception", "signatureAfterChange": "          public void testVersionRegularExError()         throws Exception", "diff": ["-            \"13: Type Javadoc comment is missing an @version tag.\"", "+            \"13: Type Javadoc tag @version must match pattern '\\\\$Revision.*\\\\$'.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8e1a1bc298deb0bc0aa8747ce743683", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testPossibleIndexOutOfBoundsException() throws Exception", "signatureAfterChange": "      @Test     public void testPossibleIndexOutOfBoundsException() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"DOMSource.java\"), expected);", "+        verify(checkConfig, getPath(\"InputDOMSource.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8eeded60846674a32eb690f3bd569dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testNoSum() throws Exception", "signatureAfterChange": "      @Test     public void testNoSum() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputReturnFromFinallyCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputReturnFromFinally.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d95258a1e172ad7ccd964362d180e206", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule526parameternames/ParameterNameTest.java", "commitBeforeChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "commitAfterChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void parameterNameTest() throws Exception", "signatureAfterChange": "      @Test     public void parameterNameTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"ParameterNameInput_Simple\");", "+        final String filePath = builder.getFilePath(\"InputParameterNameSimple\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9a1e24abf7640caee85b8e1ee6b5e46", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedTest.java", "commitBeforeChange": "dba6c944cdbf9acfbb40b9a2d8e6315fb14d87f0", "commitAfterChange": "daae0431d190cceceee62d7163a4e67e2c622aa2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Test     public void testSpecialCaseDeprecated() throws Exception", "signatureAfterChange": "     @Test     public void testSpecialCaseDeprecated() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"annotation\" + File.separator + \"SpecialCaseDeprecated.java\"), expected);", "+        verify(checkConfig, getPath(\"annotation\" + File.separator + \"InputSpecialCaseDeprecated.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9d948f6fd9a06b44f94d9164b09eec5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "343e946b076a5344e380c76e5b3ea23438b6fc93", "commitAfterChange": "e3a48d1527341456a798c3f0c1986de6898a8c60", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 33, "signatureBeforeChange": "      @Test     public void testTabs() throws Exception", "signatureAfterChange": "      @Test     public void testTabs() throws Exception", "diff": ["-            \"25: ctor def child at indentation level 9 not at correct indentation, 8\",", "+            \"25: 'ctor def' child have incorrect indentation level 9, expected level should be 8.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da87ca2196f04f30b868f9f318dace74", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     @Test     public void testGoodOverrideFromOtherJ5Compatible() throws Exception", "signatureAfterChange": "     @Test     public void testGoodOverrideFromOtherJ5Compatible() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"GoodOverrideFromOther.java\"), expected);", "+        verify(checkConfig, getPath(\"InputGoodOverrideFromOther.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db06855140a2bef43d0a7375f7e0a50c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testTypeNamesForZeroPermittedCapitalLetter() throws Exception", "signatureAfterChange": "      @Test     public void testTypeNamesForZeroPermittedCapitalLetter() throws Exception", "diff": ["-                getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\"), expected);", "+                getPath(\"InputAbbreviationAsWordInTypeName.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db48157eed6daad45f15f41196f9dbd5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule525nonconstantfieldnames/MemberNameTest.java", "commitBeforeChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "commitAfterChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void memberNameTest() throws Exception", "signatureAfterChange": "      @Test     public void memberNameTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"MemberNameInput_Basic\");", "+        final String filePath = builder.getFilePath(\"InputMemberNameBasic\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db7c97d15055826e6b4c06dac4e281f3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheckTest.java", "commitBeforeChange": "d814d1352b63136a400cd8f4dffd03d68c9ccd24", "commitAfterChange": "3edd1b53a5d8d407fd33d8c514db8bc1c7274fe5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testIoExceptionWhenLoadingHeader() throws Exception", "signatureAfterChange": "      @Test     public void testIoExceptionWhenLoadingHeader() throws Exception", "diff": ["-        PowerMockito.doThrow(new IOException(\"excpected exception\")).when(check, \"loadHeader\",", "+        PowerMockito.doThrow(new IOException(\"expected exception\")).when(check, \"loadHeader\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db9fe1b86c5f7ce7b5742f917392bc89", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "      @Test     public void testGenerics2() throws Exception", "signatureAfterChange": "      @Test     public void testGenerics2() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"TestGenerics.java\"), expected);", "+        verify(checkConfig, getPath(\"InputTestGenerics.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbd093f92a0152195deae7562c4be5e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testMultipleEmptyLinesBetweenClassMembers() throws Exception", "signatureAfterChange": "      @Test     public void testMultipleEmptyLinesBetweenClassMembers() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputEmptyLineSeparatorCheckMultipleEmptyLines.java\"), expected);", "+        verify(checkConfig, getPath(\"InputEmptyLineSeparatorCheckMultipleEmptyLines.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc038e121bbc83268eabda54dd5b462e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "c977a637ce4d87bd3643420ec52c39e724dbdde3", "commitAfterChange": "ff5ffa96021281519cc087dfd35609a06340f349", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public void testIgnoreSome()         throws Exception", "signatureAfterChange": "          public void testIgnoreSome()         throws Exception", "diff": ["-            \"131:32: '378' is a magic number.\",", "+            \"131:20: '378' is a magic number.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc0f2f40524a95c7293d524cac6b8ded", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/SuperCloneCheckTest.java", "commitBeforeChange": "5f3eced2d85c10407b5ba1f38c06af05715d9bd7", "commitAfterChange": "de60ea7b86b5ea25338dfe8a300db9d179004812", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIt() throws Exception", "signatureAfterChange": "     @Test     public void testIt() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputClone.java\"), expected);", "+        verify(checkConfig, getPath(\"checks/coding/InputClone.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc3bce293229cf29ca713e19810da7ee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testEmptyLoops() throws Exception", "signatureAfterChange": "      @Test     public void testEmptyLoops() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputEmptyTypesAndCycles.java\"),", "+        verify(checkConfig, getPath(\"InputEmptyTypesAndCycles.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dce0a876b8b824c5caec15da14520755", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule44cloumunlimit/LineLengthTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd39289ad3af5999b857c6d3ea400370", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/RedundantImportCheckTest.java", "commitBeforeChange": "e71b877a424e1e6e247a2ef6825c742a94afd68f", "commitAfterChange": "6f4247181beca3530b5c2dc762d9c5c6a018a06c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testWithChecker()         throws Exception", "signatureAfterChange": "      public void testWithChecker()         throws Exception", "diff": ["-            \"8:38: Redundant import from the same package - com.puppycrawl.tools.checkstyle.Configuration.\",", "+            \"8:38: Redundant import from the same package - com.puppycrawl.tools.checkstyle.GlobalProperties.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd837c610e1457ee334ac92387e6afd3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/IndentationCheckTest.java", "commitBeforeChange": "0eeb5e4fd6aa2c4b8a559e55384bba67d7d695c7", "commitAfterChange": "092e1f69476fc715852035a25b23a11804183a23", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "          public void testIndentationLevel()             throws Exception", "signatureAfterChange": "      public void testIndentationLevel()             throws Exception", "diff": ["-    ", "+", "-        checkConfig.addAttribute(\"indentationAmount\", new Integer(2).toString());", "+        checkConfig.addAttribute(\"basicOffset\", new Integer(2).toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd9f5580b96eda98adf937efa652c057", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 33, "signatureBeforeChange": "      @Test     public void testInvalidSwitchWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testInvalidSwitchWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputInvalidSwitchIndent.java\");", "+        final String fname = getPath(\"InputInvalidSwitchIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddd1a958885f57d93e6bed9d7c50bc71", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheckTest.java", "commitBeforeChange": "5a00ab2f307813f7acd9a7bcb06267289eb72b24", "commitAfterChange": "b7e931711c6cb6d522c63ae02b350fc7f3f1ab50", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testValidateBetweenScopesOption() throws Exception", "signatureAfterChange": "      @Test     public void testValidateBetweenScopesOption() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputVariableDeclarationUsageDistanceCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputVariableDeclarationUsageDistanceCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df1246c0c436a63ad47edd732665421d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testFormerArrayIndexOutOfBounds() throws Exception", "signatureAfterChange": "      @Test     public void testFormerArrayIndexOutOfBounds() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputEmptyLineSeparatorFormerException.java\"), expected);", "+        verify(checkConfig, getPath(\"InputEmptyLineSeparatorFormerException.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df4507447fe316c02a034816675161b7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AllChecksTest.java", "commitBeforeChange": "de39a36a6b81521c17e3a4afa0e98e30deccf082", "commitAfterChange": "2b4a02d2c8a498a8a1ee38e9396426209fa65fad", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testAllChecksAreReferencedInConfigFile() throws Exception", "signatureAfterChange": "      @Test     public void testAllChecksAreReferencedInConfigFile() throws Exception", "diff": ["-                String errorMessage = String.format(\"%s is not refferenced in checkstyle_checks.xml\", check);", "+                String errorMessage = String.format(\"%s is not referenced in checkstyle_checks.xml\", check);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df464ec2822936ac76efd4fd10a2e271", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java", "commitBeforeChange": "4be4abc6360709a49b231277a2513905332f9e50", "commitAfterChange": "f747835b6b4bd894eed2ef17eb059a003fb4d988", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testWrong() throws Exception", "signatureAfterChange": "      @Test     public void testWrong() throws Exception", "diff": ["-                \"src/test/resources/com/puppycrawl/tools/checkstyle/import-control_wrong.xml\");", "+                \"src/test/resources/com/puppycrawl/tools/checkstyle/imports/import-control_wrong.xml\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e04c9e05bb6b8957ff1958dbe8381933", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "da5d8c09d268342836be6e6b7b4e45403d542b81", "commitAfterChange": "49314771b622e7e10bde3d13f8c38170da96a3db", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void testInner()         throws Exception", "signatureAfterChange": "      public void testInner()         throws Exception", "diff": ["-            filepath + \":24: variable 'data' must match pattern '^[A-Z]([A-Z0-9_]*[A-Z0-9])?$'.\",", "+            filepath + \":24: variable 'data' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0579bdeafbd6ec1f1cd46914683d65c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "d814d1352b63136a400cd8f4dffd03d68c9ccd24", "commitAfterChange": "3edd1b53a5d8d407fd33d8c514db8bc1c7274fe5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testSameOmitOneLiners() throws Exception", "signatureAfterChange": "      @Test     public void testSameOmitOneLiners() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputRightCurlySameForOneLiners.java\"), expected);", "+        verify(checkConfig, getPath(\"InputRightCurlyNameForOneLiners.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e06807f9e0e6e17d7753b2542759cb57", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "44cc8b53c90117295151ea6723f859287f51dda5", "commitAfterChange": "5aacffce41a8f8d6b79f0b4a771e3e5ce03c0d02", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void testTagsWithSubclassesAllowed() throws Exception", "signatureAfterChange": "      @Test     public void testTagsWithSubclassesAllowed() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/javadoc/InputTags.java\"), expected);", "+        verify(checkConfig, getPath(\"InputTags.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e07119f32b9c1761dbd408a9a21849eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "     @Test     public void testDefault() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputUniquePropertiesCheck.properties\"), expected);", "+        verify(checkConfig, getPath(\"InputUniqueProperties.properties\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e073faa8cce89a947b0ba5d9c0b351d6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testBadOverrideFromObjectJ5Compatible() throws Exception", "signatureAfterChange": "     @Test     public void testBadOverrideFromObjectJ5Compatible() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"BadOverrideFromObject.java\"), expected);", "+        verify(checkConfig, getPath(\"InputBadOverrideFromObject.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0eb71d6480b40fd547b87e208ac4bcc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIntegerOverflow() throws Exception", "signatureAfterChange": "      @Test     public void testIntegerOverflow() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ComplexityOverflow.java\"), expected);", "+        verify(checkConfig, getPath(\"InputComplexityOverflow.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e10c30b3095dada3b34ef4405e3853ff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/IllegalImportCheckTest.java", "commitBeforeChange": "f5a30b80e7154498d2d0734fe4f60a79cf943979", "commitAfterChange": "9c944ecd228c7920d2a82c65d58d903de21f36a3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testWithSupplied()         throws Exception", "signatureAfterChange": "     @Test     public void testWithSupplied()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"imports\" + File.separator + \"InputImport.java\"), expected);", "+        verify(checkConfig, getPath(\"imports\" + File.separator + \"InputIllegalImportCheck.java\"),", "+                expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e17b7155cde30b779abe1a26e29a46fc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "de60ea7b86b5ea25338dfe8a300db9d179004812", "commitAfterChange": "e24596db9459a3592784a544b213cc7aa919a3f6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Test     public void testWithSumDefaultMsg() throws Exception", "signatureAfterChange": "      @Test     public void testWithSumDefaultMsg() throws Exception", "diff": ["-               getPath(\"coding\" + File.separator + \"InputReturnFromFinallyCheck.java\"),", "+               getPath(\"checks\" + File.separator + \"InputReturnFromFinallyCheck.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e18c69805f6c35966c8a612e0ea63e62", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheckTest.java", "commitBeforeChange": "e76a439c2b0250808ce2723c43cd872a1761e294", "commitAfterChange": "96d3aaea19657ac233d9a57b46a52bc0b35eda95", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"coding/InputDeclarationOrder.java\"), expected);", "+        verify(checkConfig, getPath(\"InputDeclarationOrder.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e18f10b8e2240541c51fc3b43c79304e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/OverloadMethodsDeclarationOrderCheckTest.java", "commitBeforeChange": "8373932ee5c17bb9514f6d040f398b1563b7b89b", "commitAfterChange": "28d56756c033980cfc2f1d35272a541691d68b09", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"coding/InputOverloadMethodsDeclarationOrder.java\"), expected);", "+        verify(checkConfig, getPath(\"InputOverloadMethodsDeclarationOrder.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1b48f572a16dc34ef25d945b2294e3c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testBadOverrideFromObject() throws Exception", "signatureAfterChange": "     @Test     public void testBadOverrideFromObject() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"BadOverrideFromObject.java\"), expected);", "+        verify(checkConfig, getPath(\"InputBadOverrideFromObject.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2505cea5995a54ebdc109c309123c25", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/GenericIllegalRegexpCheckTest.java", "commitBeforeChange": "acc3f40015ffe1263cfa684ca4b29939249e9aed", "commitAfterChange": "c2b22a74a2e85bbb2cfd4e0e2379bb062cb58dd1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testIt()             throws Exception", "signatureAfterChange": "      public void testIt()             throws Exception", "diff": ["-            \"68: Line matches the illegal pattern '\" + illegal + \"'.\"", "+            \"69: Line matches the illegal pattern '\" + illegal + \"'.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2681ebcf0550e6ead10922962444c5a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Test     public void testBadOverrideFromOther() throws Exception", "signatureAfterChange": "     @Test     public void testBadOverrideFromOther() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"BadOverrideFromOther.java\"), expected);", "+        verify(checkConfig, getPath(\"InputBadOverrideFromOther.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e299b9b472c2c086dc7cc34e836d9699", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/AnnotationTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testMethodParametersTypeAnnotation()         throws Exception", "signatureAfterChange": "      @Test     public void testMethodParametersTypeAnnotation()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputAnnotationsTest4.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputAnnotations4.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e31466f52712e8c6787f687185b1a59e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java", "commitBeforeChange": "edc4cc9ffc1a5b872398af9d6735b4bde75de385", "commitAfterChange": "a077b7282714b38286a09dcea10b710e5121a246", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testStaticInit() throws Exception", "signatureAfterChange": "      @Test     public void testStaticInit() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ComplexityCheckTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"ExecutableStatementCountInput.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3866a8b9ed175d412fa9a4fa3139217", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyRightCurlyTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e38b7f983fdbf1770a97b294f1665f57", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "0631e2380cc11980daec7eeaf2f3a3e274b95681", "commitAfterChange": "bff2e1754acddcbf199986d8796e88fb7bf7bf25", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testNonExistingTargetFile()             throws Exception", "signatureAfterChange": "      @Test     public void testNonExistingTargetFile()             throws Exception", "diff": ["-        Main.main(\"-c\", \"src/test/resources/com/puppycrawl/tools/checkstyle/config-classname.xml\",", "-                \"NonexistingFile.java\");", "+        Main.main(\"-c\", \"/google_checks.xml\", \"NonexistingFile.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3d9d603161e27010bb98c29dea57ac5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/GeneratedJava14LexerTest.java", "commitBeforeChange": "2f9b0f057c489d074967575696a0d53a34fec6b7", "commitAfterChange": "96954e13ae3377b1f79c2dcb17ce852df5bd285f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testUnexpectedChar() throws IOException, Exception", "signatureAfterChange": "     @Test     public void testUnexpectedChar() throws IOException, Exception", "diff": ["-            \"8:9: Name '\u00e9' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "+            \"7:9: Name '\u00c3\u042f' must match pattern '^[a-z][a-zA-Z0-9]*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e41403e662526667882bfb2ed9df8ad3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testIgnoreMethodNames() throws Exception", "signatureAfterChange": "      public void testIgnoreMethodNames() throws Exception", "diff": ["-                + \"'au.com.redhillconsulting.jamaica.tools.checkstyle.InputIllegalType.AbstractClass'\"", "+                + \"'com.puppycrawl.tools.checkstyle.checks.coding.InputIllegalType.AbstractClass'\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e47bf8c2ecbb20a6b412dc0e6ad69f46", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/FileSetCheckLifecycleTest.java", "commitBeforeChange": "44cc8b53c90117295151ea6723f859287f51dda5", "commitAfterChange": "5aacffce41a8f8d6b79f0b4a771e3e5ce03c0d02", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testTranslation() throws Exception", "signatureAfterChange": "      @Test     public void testTranslation() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputScopeAnonInner.java\"), expected);", "+        verify(checkConfig, getPath(\"checks/InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4802f16f359d3d5054a73d655370b3e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testSwitchBlockAsSingleDecisionPointSetToFalse() throws Exception", "signatureAfterChange": "      @Test     public void testSwitchBlockAsSingleDecisionPointSetToFalse() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputComplexityCheckSwitchBlocks.java\"), expected);", "+        verify(checkConfig, getPath(\"InputComplexitySwitchBlocks.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e480aef998a2e66dea7f76baf8b972d3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "9c488c1f512ffcc58af433842c992bd3f85b2d63", "commitAfterChange": "f47587c9fb66cf46fbd2eb5691449cda6d551ecb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testMinimumNumber()         throws Exception", "signatureAfterChange": "      @Test     public void testMinimumNumber()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/InputIllegalTokens.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4ebac528f237c7706435b3320f63598", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/AnnotationTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testAnnotationNestedCall()         throws Exception", "signatureAfterChange": "      @Test     public void testAnnotationNestedCall()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputAnnotationsTest8.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputAnnotations8.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4f38302828509f0c5b6bb7c1cf8d9b8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoaderTest.java", "commitBeforeChange": "4be4abc6360709a49b231277a2513905332f9e50", "commitAfterChange": "f747835b6b4bd894eed2ef17eb059a003fb4d988", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testExtraElementInConfig() throws CheckstyleException, URISyntaxException", "signatureAfterChange": "      @Test     public void testExtraElementInConfig() throws CheckstyleException, URISyntaxException", "diff": ["-                        \"src/test/resources/com/puppycrawl/tools/checkstyle/import-control_WithNewElement.xml\").toURI());", "+                        \"src/test/resources/com/puppycrawl/tools/checkstyle/imports/import-control_WithNewElement.xml\").toURI());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4fc02e5c14b2e774d78ea5854b4d7b4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "79aa188fdfd66a71eb48bb27f48a910da5108221", "commitAfterChange": "4f16cb85a987f5d53b7055f4c96c15c76937c9ce", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      @Test     public void testStaticOnDemandGroupsOrderBottom() throws Exception", "signatureAfterChange": "      @Test     public void testStaticOnDemandGroupsOrderBottom() throws Exception", "diff": ["-            \"8: \" + getCheckMessage(MSG_ORDERING, \"org.abego.treelayout.Configuration.*\"),", "+            \"8: \" + getCheckMessage(MSG_ORDERING, \"org.antlr.v4.runtime.CommonToken.*\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e54356597903562483342de9280094d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "e4a14e401a5839c6f4fa7238f5ba73255e488dba", "commitAfterChange": "b59648d60599bc197de618af5406c5e46978bbda", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testMissingConfigName()", "signatureAfterChange": "      public void testMissingConfigName()", "diff": ["-                        + \"for element type \\\"module\\\".\"));", "+                        + \"for element type \\\"module\\\".:7:23\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e54c63c565f10711cf3e74851b14aef8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 37, "signatureBeforeChange": "      @Test     public void testInvalidArrayInitWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testInvalidArrayInitWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputInvalidArrayInitIndent.java\");", "+        final String fname = getPath(\"InputInvalidArrayInitIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e63b84dc30f2a5d5e9fc534761e33580", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testTypeAndVariablesAndMethodNamesWithIgnoresFinal() throws Exception", "signatureAfterChange": "      @Test     public void testTypeAndVariablesAndMethodNamesWithIgnoresFinal() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeName.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e67c3d4040dfeb42c345f60b6ca03592", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java", "commitBeforeChange": "b95ced53e3c47c9a9db5022767a18e714fc3bebd", "commitAfterChange": "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void testAllowMissingTypeParameters() throws Exception", "signatureAfterChange": "     public void testAllowMissingTypeParameters() throws Exception", "diff": ["-            \"7: Unused @param tag for '<D>'.\",", "+            \"7:4: Unused @param tag for '<D>'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6a720a21393450837baf1313faff3af", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testReturnFromCatch() throws Exception", "signatureAfterChange": "      @Test     public void testReturnFromCatch() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputReturnFromCatchCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputReturnFromCatch.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6d1fe009c6238cc8a96c254857f565b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/Java7StringSwitchTest.java", "commitBeforeChange": "2fe5ade8b31c0c7b32fab4e25f1ec73c9ab31b8d", "commitAfterChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testCanParse()         throws Exception", "signatureAfterChange": "      @Test     public void testCanParse()         throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"grammars/InputJava7StringSwitch.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJava7StringSwitch.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e79217a013627b32eef8bb33efee4ad5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "79aa188fdfd66a71eb48bb27f48a910da5108221", "commitAfterChange": "4f16cb85a987f5d53b7055f4c96c15c76937c9ce", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      @Test     public void testStaticOnDemandGroupsOrder() throws Exception", "signatureAfterChange": "      @Test     public void testStaticOnDemandGroupsOrder() throws Exception", "diff": ["-            \"4: \" + getCheckMessage(MSG_ORDERING, \"org.abego.treelayout.Configuration.*\"),", "+            \"4: \" + getCheckMessage(MSG_ORDERING, \"org.antlr.v4.runtime.CommonToken.*\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7c00333c7aac2a587d96ebc6793fa9c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule43onestatement/OneStatementPerLineTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void oneStatementTest() throws Exception", "signatureAfterChange": "      @Test     public void oneStatementTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"OneStatementPerLineInput\");", "+        final String filePath = builder.getFilePath(\"InputOneStatementPerLine\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8073e8e3ad50fe211a3c49a8fcc330f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java", "commitBeforeChange": "edc4cc9ffc1a5b872398af9d6735b4bde75de385", "commitAfterChange": "a077b7282714b38286a09dcea10b710e5121a246", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testMaxZero() throws Exception", "signatureAfterChange": "     @Test     public void testMaxZero() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ComplexityCheckTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"ExecutableStatementCountInput.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e88bec7444460ed46ecc63454c1bd2e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalThrowsCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputIllegalThrowsCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalThrows.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8977019b3b3d44ee6ccf126dab74862", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testGh47() throws Exception", "signatureAfterChange": "      @Test     public void testGh47() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"Gh47.java\"), expected);", "+        verify(checkConfig, getPath(\"InputGh47.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8ad8e6a1606ad5c9aa85ec8c8b903b9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "0cf971e37bc86697dbb3e38bfc18b3b55d5aa8e7", "commitAfterChange": "526c9d0cbabd8ed8f3a26c45a7a6bc0a5c158c0c", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "      @Test     public void testLoadConfigurationWrongURL() throws CheckstyleException", "signatureAfterChange": "      @Test     public void testLoadConfigurationWrongURL() throws CheckstyleException", "diff": ["-            assertEquals(\"unable to find ;config_with_ignore.xml\", ex.getMessage());", "-        }", "-    }", "+            assertEquals(\"Unable to find: ;config_with_ignore.xml\", ex.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8fdd1bf58498289a6808b7c73e7dd5f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule731selfexplanatory/JavadocMethodTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e926fbeefba3a77843f33947f4466a6d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testIncorrectCustom() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrectCustom() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputIncorrectAtClauseOrderCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIncorrectAtClauseOrderCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e96c449cfd1e2dd6fbaecdf45f275790", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/NestedForDepthCheckTest.java", "commitBeforeChange": "bff0f959627099ae2b1be6e441741dc331979416", "commitAfterChange": "9509710845bf8d8ef67755be7e097d540d43b026", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testNestedTooDeep() throws Exception", "signatureAfterChange": "     @Test     public void testNestedTooDeep() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputNestedForDepth.java\"),", "+        verify(checkConfig, getPath(\"InputNestedForDepth.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e98b6ce9abbf9fcfbc38665496e34194", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/AnnotationTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testAnnotationOnWildcards()         throws Exception", "signatureAfterChange": "      @Test     public void testAnnotationOnWildcards()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputAnnotationsTest9.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputAnnotations9.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e99d64c2951f6766c5e1c4164ba34dba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Test     public void testBadDeprecatedJavadoc() throws Exception", "signatureAfterChange": "     @Test     public void testBadDeprecatedJavadoc() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"BadDeprecatedJavadoc.java\"), expected);", "+        verify(checkConfig, getPath(\"InputBadDeprecatedJavadoc.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9e6ed72be77c3b3a371941e20c116e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/NestedForDepthCheckTest.java", "commitBeforeChange": "bff0f959627099ae2b1be6e441741dc331979416", "commitAfterChange": "9509710845bf8d8ef67755be7e097d540d43b026", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testNestedOk() throws Exception", "signatureAfterChange": "     @Test     public void testNestedOk() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputNestedForDepth.java\"),", "+        verify(checkConfig, getPath(\"InputNestedForDepth.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea1cb5e76eddda3726b5ac60445e9bb1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefaultForIterator()         throws Exception", "signatureAfterChange": "      @Test     public void testDefaultForIterator()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputForWhitespace.java\"), expected);", "+        verify(checkConfig, getPath(\"checks/whitespace/InputForWhitespace.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea2344593e13fa109d1f5e503949ed62", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void htmlTagsInParagraph()         throws IOException", "signatureAfterChange": "      @Test     public void htmlTagsInParagraph()         throws IOException", "diff": ["-        String filename = getHtmlPath(\"HtmlTagsInParagraph.txt\");", "+        String filename = getHtmlPath(\"InputHtmlTagsInParagraph.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea276003f7572a4e6d623d3f5a37c0cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheckTest.java", "commitBeforeChange": "3c11c78c126d1cbc0e5efa213ce555467616f091", "commitAfterChange": "3ad60e5742797c5db87de1c8325b001c13543553", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testCorrect() throws Exception", "signatureAfterChange": "      @Test     public void testCorrect() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"annotation/InputCorrectAnnotationLocation.java\"), expected);", "+        verify(checkConfig, getPath(\"InputCorrectAnnotationLocation.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea6e81b020118378323f30a1a5854f0a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d92ceb81a67bb10b98f5ce305f839ba535a1c6ee", "commitAfterChange": "9aa8268e473071cbe26aa9d3a8631f1902e3fef0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testWhitespaceOff()         throws Exception", "signatureAfterChange": "      public void testWhitespaceOff()         throws Exception", "diff": ["-            filepath + \":13: type Javadoc comment is missing an @author tag.\",", "+            filepath + \":13: Type Javadoc comment is missing an @author tag.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea78d1994375623a6c9ab1ec44e57cc6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "d4f1261a61913b28d746aeb929bd23f372372a4c", "commitAfterChange": "fdd9ae82975be0bf0d8df991a50bad10b660aa2c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     void verifyWSAroundBegin(int aLineNo, int aColNo, String aText)", "signatureAfterChange": "     void verifyWSAroundBegin(int aLineNo, int aColNo, String aText)", "diff": ["-            log(aLineNo, \"'\" + aText + \"' is not proceeded with whitespace.\");", "+            log(aLineNo, \"'\" + aText + \"' is not followed by whitespace.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaa40febdc08ff5515c3dcbac7d55837", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/SimplifyBooleanReturnCheck.java", "commitBeforeChange": "b8d0a65d5059b806bcf801db797232d4662d340d", "commitAfterChange": "eb522eece2f04cefd75931be5066eaebf2b34b51", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            // TODO: i18n", "-            log(aAST.getLineNo(),", "-                aAST.getColumnNo(),", "-                \"Remove conditional logic.\");", "+            log(aAST.getLineNo(), aAST.getColumnNo(), \"simplify.boolreturn\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ead26621d20aca09908f88a96a4ba530", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 42, "signatureBeforeChange": "      @Test     public void testInvalidIfWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testInvalidIfWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputInvalidIfIndent.java\");", "+        final String fname = getPath(\"InputInvalidIfIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ead3ffc734bb94c61ab349b86d1dc8d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "e4a14e401a5839c6f4fa7238f5ba73255e488dba", "commitAfterChange": "b59648d60599bc197de618af5406c5e46978bbda", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testMissingPropertyName()", "signatureAfterChange": "      public void testMissingPropertyName()", "diff": ["-                        + \"for element type \\\"property\\\".\"));", "+                        + \"for element type \\\"property\\\".:8:41\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eadb8bc4c72da15d488fdaa69fd90b55", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "de60ea7b86b5ea25338dfe8a300db9d179004812", "commitAfterChange": "e24596db9459a3592784a544b213cc7aa919a3f6", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     public void testWithSumLessThenMinCustomMsg() throws Exception", "signatureAfterChange": "      @Test     public void testWithSumLessThenMinCustomMsg() throws Exception", "diff": ["-                getPath(\"coding\" + File.separator + \"InputReturnFromFinallyCheck.java\"),", "+                getPath(\"checks\" + File.separator + \"InputReturnFromFinallyCheck.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eae201b3744a8a6b767ef47534b651aa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/MethodParamPadCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testSpaceOption() throws Exception", "signatureAfterChange": "      @Test     public void testSpaceOption() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputMethodParamPad.java\"), expected);", "+        verify(checkConfig, getPath(\"InputMethodParamPad.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb43331251fd0df6943408ffc7eb39ca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/RedundantThrowsCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testRejectDuplicatesOnly() throws Exception", "signatureAfterChange": "      @Test     public void testRejectDuplicatesOnly() throws Exception", "diff": ["-            \"19:29: Redundant throws: 'java.io.IOException' listed more then one time.\",", "+            \"21:29: Redundant throws: 'java.io.IOException' listed more then one time.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb715d75fbeb933658bca22531c1d6e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCorrect() throws Exception", "signatureAfterChange": "      @Test     public void testCorrect() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputCorrectJavaDocParagraphCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputCorrectJavaDocParagraphCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebd158f5cd02496600f2140afdabcf75", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule485annotations/AnnotationLocationTest.java", "commitBeforeChange": "4346d41010a729e14991e30706bdb16ff18ff39a", "commitAfterChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void annotationTest() throws Exception", "signatureAfterChange": "      @Test     public void annotationTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"AnnotationLocationInput\");", "+        final String filePath = builder.getFilePath(\"InputAnnotationLocation\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec19e514b8f1e17f369274a05b6eecdc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 55, "signatureBeforeChange": "      @Test     public void testThrowsIndentationLevel() throws Exception", "signatureAfterChange": "      @Test     public void testThrowsIndentationLevel() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InvalidInputThrowsIndent.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InvalidInputThrowsIndent.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec22d2e20662eb447ea7d08a81d51821", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule712paragraphs/JavadocParagraphTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec5ee781991ba163faed4fedac75557c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule521packagenames/PackageNameTest.java", "commitBeforeChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "commitAfterChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void badPackageNameTest() throws Exception", "signatureAfterChange": "      @Test     public void badPackageNameTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"PackageNameInputBad\");", "+        final String filePath = builder.getFilePath(\"InputPackageNameBad\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec7e8d1c2f1b0549bbcaf1a039d0bcab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testScopePackage()         throws Exception", "signatureAfterChange": "      @Test     public void testScopePackage()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputJavadocStyleCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJavadocStyle.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec9c78d7707bac1a1746a4a9d1a67d0e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/SuperCloneCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testAnotherInputFile() throws Exception", "signatureAfterChange": "      @Test     public void testAnotherInputFile() throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputSuperCloneCheck.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputSuperClone.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eca87f4be6f4b232fbd4224c7f88d50d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "93322bd3df79ad1b1763eceebd5205a3d57c7178", "commitAfterChange": "c876d2431e56405371b93c814de33c350766266d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public FileText(File aFile, String aCharsetName) throws IOException", "signatureAfterChange": "     public FileText(File aFile, String aCharsetName) throws IOException", "diff": ["-            final String message = \"Unsuppored charset: \" + aCharsetName;", "+            final String message = \"Unsupported charset: \" + aCharsetName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecdc8448b49ad41518913b3411197d6f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testMultipleTypes() throws Exception", "signatureAfterChange": "      @Test     public void testMultipleTypes() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputIllegalCatchCheck2.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalCatch2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed1c5301a2184ca3b5f5650d125854be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 20, "signatureBeforeChange": "      @Test     public void testCorrectIfAndParameters() throws Exception", "signatureAfterChange": "      @Test     public void testCorrectIfAndParameters() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/IndentationCorrectIfAndParameterInput.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"IndentationCorrectIfAndParameterInput.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed4db9f303db06de31a785205222e4b0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "ba4d62dc78cf7a648771b1be9646cac4bab27676", "commitAfterChange": "677acc1e8491acffd24c859e553b06362da0d471", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIgnoreMethodNames() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreMethodNames() throws Exception", "diff": ["-            \"16:13: Declaring variables, return values or parameters of type 'java.util.Hashtable' is not allowed.\",", "+            \"16:13: Declaring variables, return values or parameters of type 'java.util.TreeSet' is not allowed.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed7f29ad4dc0da08c7bdfe0c4deb1189", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "44cc8b53c90117295151ea6723f859287f51dda5", "commitAfterChange": "5aacffce41a8f8d6b79f0b4a771e3e5ce03c0d02", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testTagsWithResolver() throws Exception", "signatureAfterChange": "      @Test     public void testTagsWithResolver() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/javadoc/InputTags.java\"), expected);", "+        verify(checkConfig, getPath(\"InputTags.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eec44ba1a7463e213ab2b9217e5c33e8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule521packagenames/PackageNameTest.java", "commitBeforeChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "commitAfterChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void badPackageName2Test() throws Exception", "signatureAfterChange": "      @Test     public void badPackageName2Test() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"BadPackageNameInput2\");", "+        final String filePath = builder.getFilePath(\"InputBadPackageName2\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eecf18f11e7bf4fb2dea1a46edd1be0f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/HideUtilityClassConstructorCheckTest.java", "commitBeforeChange": "3925906faee1cf9310942708e2946d3e598f5f71", "commitAfterChange": "9bb2ad91c98b3d590579f34abff774c4375581fc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testNonUtilClass() throws Exception", "signatureAfterChange": "     public void testNonUtilClass() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputDesignForInheritance.java\"), expected);", "+        verify(checkConfig, getPath(\"InputDesignForExtension.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eee4eb178ce2b258e36eb784ffaf3f18", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testCommaAlwaysViolations() throws Exception", "signatureAfterChange": "      @Test     public void testCommaAlwaysViolations() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"AnnotationUseNoTrailingComma.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAnnotationUseNoTrailingComma.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef2153e546dfde7beb2c88577719f95d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testFP() throws Exception", "signatureAfterChange": "      @Test     public void testFP() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputGuavaFalsePositive.java\"), expected);", "+        verify(checkConfig, getPath(\"InputGuavaFalsePositive.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef29fe9c3dcb99cffc49dd9eb384451b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/WhitespaceAroundTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efd49c110a841d826ab56b3b416f5f23", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputEmptyLineSeparatorCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputEmptyLineSeparator.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efde345d098e0702136bbcd86fbd2805", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testMethodDef() throws Exception", "signatureAfterChange": "      @Test     public void testMethodDef() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ExecutableStatementCountInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputExecutableStatementCount.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efebdee08b57cfccb66ed1da096de8bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule713atclauses/JavadocTagContinuationIndentationTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eff5da1c59ae9381e85098358e93e0f6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testIncorrect() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrect() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputIncorrectAtClauseOrderCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIncorrectAtClauseOrderCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f069c25fffba4161e897d121ebde0c76", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule21filename/OuterTypeFilenameTest.java", "commitBeforeChange": "fbd3d53641368f6bcacc7b8015d434625fda116b", "commitAfterChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void outerTypeFilenameTest1() throws Exception", "signatureAfterChange": "      @Test     public void outerTypeFilenameTest1() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"OuterTypeFilenameInput_1\");", "+        final String filePath = builder.getFilePath(\"InputOuterTypeFilename1\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f06ba9c4a0cee656966e0d55fc5575ef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/Java7TryWithResourcesTest.java", "commitBeforeChange": "2fe5ade8b31c0c7b32fab4e25f1ec73c9ab31b8d", "commitAfterChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testCanParse()         throws Exception", "signatureAfterChange": "      @Test     public void testCanParse()         throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"grammars/InputJava7TryWithResources.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJava7TryWithResources.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0d4fded655ad244df3141a62e36fc44", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 41, "signatureBeforeChange": "      @Test     public void testInvalidBlockWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testInvalidBlockWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputInvalidBlockIndent.java\");", "+        final String fname = getPath(\"InputInvalidBlockIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f11962000a0086147734ae88bc7075d8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 45, "signatureBeforeChange": "      @Test     public void testInvalidForWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testInvalidForWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputInvalidForIndent.java\");", "+        final String fname = getPath(\"InputInvalidForIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f124d160f815e07f1b3bd1501a00fe7c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testZeroCaseLevel() throws Exception", "signatureAfterChange": "      @Test     public void testZeroCaseLevel() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputZeroCaseLevel.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputZeroCaseLevel.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1401d26e52a8f924f1a90405325b09b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/Java7NumericalLiteralsTest.java", "commitBeforeChange": "2fe5ade8b31c0c7b32fab4e25f1ec73c9ab31b8d", "commitAfterChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testCanParse()         throws Exception", "signatureAfterChange": "      @Test     public void testCanParse()         throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"grammars/InputJava7NumericalLiterals.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJava7NumericalLiterals.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f14965962d7a7ba6051ad8def77522ad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheckTest.java", "commitBeforeChange": "79a7478e06a5f7068002831ac699d10ba54f038b", "commitAfterChange": "3baf36b6fe8bffe6e6c90f4c001c8494148ff42c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testFP() throws Exception", "signatureAfterChange": "      @Test     public void testFP() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/GuavaFP.java\"), expected);", "+        verify(checkConfig, getPath(\"javadoc/InputGuavaFalsePositive.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f194c3eccf6ed7a94915514867ccfdbf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "d4f1261a61913b28d746aeb929bd23f372372a4c", "commitAfterChange": "fdd9ae82975be0bf0d8df991a50bad10b660aa2c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     void verifyNoWSAfter(MyCommonAST aAST)", "signatureAfterChange": "     void verifyNoWSAfter(MyCommonAST aAST)", "diff": ["-                \"'\" + aAST.getText() + \"' is proceeded with whitespace.\");", "+                \"'\" + aAST.getText() + \"' is followed by whitespace.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1ea3f4b2874488e2630df04eb8d9903", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/OperatorWrapTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2001c80405d162c7a3ba804b819a606", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyBlockTest.java", "commitBeforeChange": "c29af9d03619dfbf64f68185f8b1f1720f2f9676", "commitAfterChange": "63668c23e4fc6803b3161430f1d52fed67741c0f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void emptyBlockTestCatch() throws Exception", "signatureAfterChange": "      @Test     public void emptyBlockTestCatch() throws Exception", "diff": ["-        final String filePath = getPath(\"InputEmptyBlockCatch.java\");", "+        final String filePath = getPath(\"InputEmptyBlock.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2414cafc3a8ddfc60171bdbf1e5dbda", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Utils.java", "commitBeforeChange": "b20532ed1873b670ef04a37704f2a324ac23df6d", "commitAfterChange": "97f0829897b9000236489295f89d57a77d8006b4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static Pattern createPattern(String pattern)         throws ConversionException", "signatureAfterChange": "     public static Pattern createPattern(String pattern)         throws ConversionException", "diff": ["-                \"Failed to initialise regexp expression \" + pattern, e);", "+                \"Failed to initialise regular expression \" + pattern, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f24c6ea7089bbc2ac5a17e9ec67ed5f6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule333orderingandsoacing/CustomImportOrderTest.java", "commitBeforeChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "commitAfterChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void validTest() throws Exception", "signatureAfterChange": "      @Test     public void validTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"CustomImportOrderValidInput\");", "+        final String filePath = builder.getFilePath(\"InputCustomImportOrderValid\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f25d0de0786d688246ce90db0fe985ad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ComplexityCheckTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputComplexityCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f27e6a93095195683723a6a0b9b69de3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testPeriod() throws Exception", "signatureAfterChange": "      @Test     public void testPeriod() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputSummaryJavadocCheckPeriod.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSummaryJavadocPeriod.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f331b4ec6bb0ec380193b471714f676d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testTwoInJavadocWithoutAnnotation() throws Exception", "signatureAfterChange": "      @Test     public void testTwoInJavadocWithoutAnnotation() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputMissingDeprecatedCheckTest1.java\"), expected);", "+        verify(checkConfig, getPath(\"InputMissingDeprecated1.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f353a5848439a69d7cabcf16d39b3658", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4822variabledistance/VariableDeclarationUsageDistanceTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f37c3f443b532e2c65bf8096abbc68b1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testWithFewArgWIthTypeOneLine()         throws Exception", "signatureAfterChange": "      @Test     public void testWithFewArgWIthTypeOneLine()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest12.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda12.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f388bec0150aa745a6fc6634dd0eff23", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d92ceb81a67bb10b98f5ce305f839ba535a1c6ee", "commitAfterChange": "9aa8268e473071cbe26aa9d3a8631f1902e3fef0", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "      public void testNoAuthor()         throws Exception", "signatureAfterChange": "      public void testNoAuthor()         throws Exception", "diff": ["-            filepath + \":11: type Javadoc comment is missing an @author tag.\"", "+            filepath + \":11: Type Javadoc comment is missing an @author tag.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f409a5aa6f045d89cf4b137d2dc06f96", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIllegalClassNames() throws Exception", "signatureAfterChange": "      @Test     public void testIllegalClassNames() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputIllegalCatchCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalCatch.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f424bac7322f89dc3742fc7e9ae6e832", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/FileTextTest.java", "commitBeforeChange": "bee6b0a1ec26b04e2d738221bdce4bd159b278d2", "commitAfterChange": "83e685bdac0b1e7e838eded12bfeee93d3ca527a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testSupportedCharset() throws IOException", "signatureAfterChange": "      @Test     public void testSupportedCharset() throws IOException", "diff": ["-                 + \"checkstyle/imports/import-control_complete.xml\"), charsetName);", "+                 + \"checkstyle/checks/imports/import-control_complete.xml\"), charsetName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f444a486235683fc68484304ab7fc153", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void test1322879And1649038() throws Exception", "signatureAfterChange": "      @Test     public void test1322879And1649038() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputWhitespaceAround.java\"),", "+        verify(checkConfig, getPath(\"checks/whitespace/InputWhitespaceAround.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4793ae61b6a875e000e6e9ea9104d6a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheckTest.java", "commitBeforeChange": "3c11c78c126d1cbc0e5efa213ce555467616f091", "commitAfterChange": "3ad60e5742797c5db87de1c8325b001c13543553", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testIncorrect() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrect() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"annotation/InputIncorrectAnnotationLocation.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIncorrectAnnotationLocation.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f479707e16afb9b5709ac321d1691def", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "c977a637ce4d87bd3643420ec52c39e724dbdde3", "commitAfterChange": "ff5ffa96021281519cc087dfd35609a06340f349", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDefault()         throws Exception", "signatureAfterChange": "     public void testDefault()         throws Exception", "diff": ["-            \"131:32: '378' is a magic number.\",", "+            \"131:20: '378' is a magic number.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f47998c96f0abb672c6f771856894254", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java", "commitBeforeChange": "4be4abc6360709a49b231277a2513905332f9e50", "commitAfterChange": "f747835b6b4bd894eed2ef17eb059a003fb4d988", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testBroken() throws Exception", "signatureAfterChange": "      @Test     public void testBroken() throws Exception", "diff": ["-                \"src/test/resources/com/puppycrawl/tools/checkstyle/import-control_broken.xml\");", "+                \"src/test/resources/com/puppycrawl/tools/checkstyle/imports/import-control_broken.xml\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5450d6c2ef6a148476650250320f871", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "44cc8b53c90117295151ea6723f859287f51dda5", "commitAfterChange": "5aacffce41a8f8d6b79f0b4a771e3e5ce03c0d02", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": "      @Test     public void test11684083() throws Exception", "signatureAfterChange": "      @Test     public void test11684083() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/javadoc/Input_03.java\"), expected);", "+        verify(checkConfig, getPath(\"Input_03.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f598cafd9065e5f46a67fcd8f3f420af", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "9dd69b267b626af533ddf8bc0d37b4fd3744fa6e", "commitAfterChange": "57b908199dfa5c2c9bf9388d92925ccfb312812f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testNoCheck()", "signatureAfterChange": "      @Test     public void testNoCheck()", "diff": ["-                \"unable to parse \" + fn + \" - Attribute \\\"checks\\\" is required and must be specified for element type \\\"suppress\\\".\",", "+                \"Unable to parse \" + fn + \" - Attribute \\\"checks\\\" is required and must be specified for element type \\\"suppress\\\".\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5d404613d722f8e4c1451d7fc3e2066", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/AnnotationTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testClassCastTypeAnnotation()         throws Exception", "signatureAfterChange": "      @Test     public void testClassCastTypeAnnotation()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputAnnotationsTest3.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputAnnotations3.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f665e11928a3936f731d4f000e964461", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheckTest.java", "commitBeforeChange": "03c3efabf3b36fd1b8dd4da30678365c7506370c", "commitAfterChange": "cb0ecb590e68105c366df456ff08d59997188b58", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDefault() throws Exception", "signatureAfterChange": "     public void testDefault() throws Exception", "diff": ["-               getPath(\"coding\" + File.separator + \"InputExpliciInit.java\"),", "+               getPath(\"coding\" + File.separator + \"InputExplicitInit.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6783c2b281aed6d0566af28ad6b0df4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 44, "signatureBeforeChange": "      @Test     public void testInvalidInvalidAnonymousClass() throws Exception", "signatureAfterChange": "      @Test     public void testInvalidInvalidAnonymousClass() throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputInvalidAnonymousClassIndent.java\");", "+        final String fname = getPath(\"InputInvalidAnonymousClassIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f69235ab37a9307604ad3e6a27e5c07c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule231filetab/FileTabCharacterTest.java", "commitBeforeChange": "fbd3d53641368f6bcacc7b8015d434625fda116b", "commitAfterChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void fileTabTest() throws Exception", "signatureAfterChange": "      @Test     public void fileTabTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"FileTabCharacterInput\");", "+        final String filePath = builder.getFilePath(\"InputFileTabCharacter\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6b6af37014e8d3fc4a3759558fb2ed8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testInnerClassMemberExcludesStar()         throws Exception", "signatureAfterChange": "      @Test     public void testInnerClassMemberExcludesStar()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAvoidStaticImportCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAvoidStaticImport.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6d70711dacee644ace3308694a6c825", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     @Test     public void testExpandedDefault() throws Exception", "signatureAfterChange": "     @Test     public void testExpandedDefault() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsExpanded.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsExpanded.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f716130ad44c35449a1c0179555c77ae", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     @Test     public void testBadAnnotationOverride() throws Exception", "signatureAfterChange": "     @Test     public void testBadAnnotationOverride() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"BadAnnotationOverride.java\"), expected);", "+        verify(checkConfig, getPath(\"InputBadAnnotationOverride.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f73b66ae95f865d0228a064d12941897", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     @Test     public void testGoodAnnotationOverrideJ5Compatible() throws Exception", "signatureAfterChange": "     @Test     public void testGoodAnnotationOverrideJ5Compatible() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"GoodAnnotationOverride.java\"), expected);", "+        verify(checkConfig, getPath(\"InputGoodAnnotationOverride.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f73eef6ffe87a6caac75e0297e439167", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheckTest.java", "commitBeforeChange": "de60ea7b86b5ea25338dfe8a300db9d179004812", "commitAfterChange": "e24596db9459a3592784a544b213cc7aa919a3f6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testIt() throws Exception", "signatureAfterChange": "      @Test     public void testIt() throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"checks/coding/InputSemantic.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSemantic.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7a824ab640e099cdbce10583403762b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testNullClassLoader() throws Exception", "signatureAfterChange": "      @Test     public void testNullClassLoader() throws Exception", "diff": ["-        File inputFile = new File(getNonCompilablePath(\"InputIllegalInstantiationCheckLang.java\"));", "+        File inputFile = new File(getNonCompilablePath(\"InputIllegalInstantiationLang.java\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7ac9dfd62383ead3d76dc5ea16d0eec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/InputAvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "3a51c61b4aa4b8feaa7eae8648a28d94d62bab0c", "commitAfterChange": "39f40e57858c8a5c6310bf35e6649b03188b6996", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic Object fooString()", "signatureAfterChange": "  \tpublic Object fooString()", "diff": ["-\tpublic Object fooString()", "-\t{", "-\t\tString unitAbbrev = \"\u03bcs\";", "+\tpublic Object fooString() {", "+\t\tString unitAbbrev = \"\u00ce\u00bcs\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f84e4dd0aad3795782d3a1f0588b33f9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Test     public void unclosedParagraphFollowedByJavadocTag()         throws IOException", "signatureAfterChange": "      @Test     public void unclosedParagraphFollowedByJavadocTag()         throws IOException", "diff": ["-        String filename = getHtmlPath(\"UnclosedParagraphFollowedByJavadocTag.txt\");", "+        String filename = getHtmlPath(\"InputUnclosedParagraphFollowedByJavadocTag.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f85f1386cb2abce6f3520a5a3ba1a971", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void oneSimpleHtmlTag()         throws IOException", "signatureAfterChange": "      @Test     public void oneSimpleHtmlTag()         throws IOException", "diff": ["-        String filename = getHtmlPath(\"OneSimpleHtmlTag.txt\");", "+        String filename = getHtmlPath(\"InputOneSimpleHtmlTag.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f87771b21ee1058a7e4d4b107521c024", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     @Test     public void testCompactNoUnWildcard() throws Exception", "signatureAfterChange": "     @Test     public void testCompactNoUnWildcard() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsCompact.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsCompact.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f87d404862a5a705c3cccd3de50dcb8c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     @Test     public void testSingleNoUnWildcard() throws Exception", "signatureAfterChange": "     @Test     public void testSingleNoUnWildcard() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"SuppressWarningsSingle.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSuppressWarningsSingle.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8812783dd7e6dbfa7d70df032ca247a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/InnerTypeLastCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testMembersBeforeInner() throws Exception", "signatureAfterChange": "      @Test     public void testMembersBeforeInner() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputInnerClassCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputInnerClass.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f91c858de551ff2b46e225948c066359", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/HeaderCheckTest.java", "commitBeforeChange": "23c8b2a1072e186652e186b5a06b21dee8fcd2fe", "commitAfterChange": "e0651ea2fb8cae32a66bd141a0be0783c5de5cb4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testNoHeader()         throws Exception", "signatureAfterChange": "      public void testNoHeader()         throws Exception", "diff": ["-            \"1: Unable to check as missing lines to check.\"", "+            \"1: Unable to check header as missing lines to check.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f97c195652ac070c82ad4a472beb0917", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/Java7MultiCatchTest.java", "commitBeforeChange": "2fe5ade8b31c0c7b32fab4e25f1ec73c9ab31b8d", "commitAfterChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testCanParse()         throws Exception", "signatureAfterChange": "      @Test     public void testCanParse()         throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"grammars/InputJava7MultiCatch.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJava7MultiCatch.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f99bbc2998d2710484409dd70e19a350", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testWithPackageModifier() throws Exception", "signatureAfterChange": "      @Test     public void testWithPackageModifier() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"MethodCountCheckInput3.java\"), expected);", "+        verify(checkConfig, getPath(\"InputMethodCount3.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9c3ed52fc7e270f82b05578a6e59057", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "ec83f8e883dcf563afa2db2cfe36b22efc2fd0da", "commitAfterChange": "aeef83ee58cce5b5bf0f10a8793fc37514751ef5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-        final String msg = \"%s occurred during the analysis of file %s .\";", "+        final String msg = \"%s occurred during the analysis of file %s.\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9f3702ce61889a15f9992c51db31800", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testIncorrectCustom() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrectCustom() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputIncorrectAtClauseOrderCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIncorrectAtClauseOrder.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa88f0ff229aac859f3f53b4d751c7ad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportTest.java", "commitBeforeChange": "bee6b0a1ec26b04e2d738221bdce4bd159b278d2", "commitAfterChange": "83e685bdac0b1e7e838eded12bfeee93d3ca527a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testAllowStaticMemberImports() throws Exception", "signatureAfterChange": "      @Test     public void testAllowStaticMemberImports() throws Exception", "diff": ["-            \"7: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.imports.*\"),", "+            \"7: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.checks.imports.*\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fab9c82b30b12fcbb4d7bb466a40fb2f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testAllowEscapesForControlCharacterSet() throws Exception", "signatureAfterChange": "      @Test     public void testAllowEscapesForControlCharacterSet() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAvoidEscapedUnicodeCharactersCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAvoidEscapedUnicodeCharacters.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fad5de376a23d26b21a8fe78ba1d9676", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testEmptyTypes() throws Exception", "signatureAfterChange": "      @Test     public void testEmptyTypes() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputEmptyTypesAndCycles.java\"),", "+        verify(checkConfig, getPath(\"InputEmptyTypesAndCycles.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fae0218a4707e9bc2875763fc529c903", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "90178ab2e4bfac216cf861188006818ebce10293", "commitAfterChange": "1b5c3936f53b0dd9f149faef9ead6fce20a4cb31", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private String getConfigHashCode(Serializable configuration)", "signatureAfterChange": "     private String getConfigHashCode(Serializable configuration)", "diff": ["-            final MessageDigest md = MessageDigest.getInstance(\"SHA\");", "+            final MessageDigest md = MessageDigest.getInstance(\"SHA-1\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb316b56540018771c2e9628ebcb6b99", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule232specialescape/IllegalTokenTextTest.java", "commitBeforeChange": "fbd3d53641368f6bcacc7b8015d434625fda116b", "commitAfterChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void illegalTokensTest() throws Exception", "signatureAfterChange": "      @Test     public void illegalTokensTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"IllegalTokenTextInput\");", "+        final String filePath = builder.getFilePath(\"InputIllegalTokenText\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb3d228a18e2dd3ded3f93d3a787213b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testStaticHeader() throws Exception", "signatureAfterChange": "      @Test     public void testStaticHeader() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"inputHeader.java\"), expected);", "+        verify(checkConfig, getPath(\"InputHeader.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb5fc0d3b4670aa4a8bbdce79b9db2b4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsTest.java", "commitBeforeChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "commitAfterChange": "fdc81723bdfd6af2ffc2c901cd8dd5b2fe948267", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r     @Test\r     public void testSingleNoUnchecked() throws Exception", "signatureAfterChange": "\r     @Test\r     public void testSingleNoUnchecked() throws Exception", "diff": ["-            \"82:37: The warning 'unchecked' cannot be suppressed at this location.\",\r", "+            \"82:47: The warning 'unchecked' cannot be suppressed at this location.\",\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb6b2cccdbacab46557d58ab2a39f2b4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4841indentation/IndentationTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void correctReturnTest() throws Exception", "signatureAfterChange": "      @Test     public void correctReturnTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"IndentationCorrectReturnAndParameterInput\");", "+        final String filePath = builder.getFilePath(\"InputIndentationCorrectReturnAndParameter\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb78ff15cada2cbb73cd2a587d6cb25f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testVariableRegExp() throws Exception", "signatureAfterChange": "      @Test     public void testVariableRegExp() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputVariableDeclarationUsageDistanceCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputVariableDeclarationUsageDistance.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb980d8851202bde86ff215ce047096c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "343e946b076a5344e380c76e5b3ea23438b6fc93", "commitAfterChange": "e3a48d1527341456a798c3f0c1986de6898a8c60", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 36, "signatureBeforeChange": "      @Test     public void testCaseLevel() throws Exception", "signatureAfterChange": "      @Test     public void testCaseLevel() throws Exception", "diff": ["-            \"23: case child at indentation level 10 not at correct indentation, 8\",", "+            \"23: 'case' child have incorrect indentation level 10, expected level should be 8.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fba18c1691a9bd30b535aeaacb57e9f7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportTest.java", "commitBeforeChange": "35006bcd796ec5787fe6c5a4b44816cae1824a05", "commitAfterChange": "c998dc8d90485ee5810d81c2ce472c5a43b54a13", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testStarExcludes()         throws Exception", "signatureAfterChange": "      @Test     public void testStarExcludes()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"imports\" + File.separator + \"InputImport.java\"), expected);", "+        verify(checkConfig, getPath(\"imports\" + File.separator + \"InputAvoidStaticImportCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc34249f67763b51b0729cadb8688366", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 43, "signatureBeforeChange": "      @Test     public void testInvalidWhileWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testInvalidWhileWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputInvalidWhileIndent.java\");", "+        final String fname = getPath(\"InputInvalidWhileIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc37cf43263d18e057a886c6a54ec779", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testPeriod() throws Exception", "signatureAfterChange": "      @Test     public void testPeriod() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputSummaryJavadocCheckPeriod.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSummaryJavadocCheckPeriod.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc678819a618aa07c341fc6f78d267ec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AllChecksTest.java", "commitBeforeChange": "bee6b0a1ec26b04e2d738221bdce4bd159b278d2", "commitAfterChange": "83e685bdac0b1e7e838eded12bfeee93d3ca527a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testAllChecksWithDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testAllChecksWithDefaultConfiguration() throws Exception", "diff": ["-                        \"src/test/resources/com/puppycrawl/tools/checkstyle/imports/import-control_complete.xml\");", "+                        \"src/test/resources/com/puppycrawl/tools/checkstyle/checks/imports/import-control_complete.xml\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc8e1aa6bb6d351370e9005747b1bdd5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule3sourcefile/EmptyLineSeparatorTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fca85d3198382830b312a818a721e9aa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void test1322879() throws Exception", "signatureAfterChange": "      @Test     public void test1322879() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputWhitespaceAround.java\"),", "+        verify(checkConfig, getPath(\"checks/whitespace/InputWhitespaceAround.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcab74d7011ef98c41ea2106147c34a8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGeneralLogic() throws Exception", "signatureAfterChange": "      @Test     public void testGeneralLogic() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputVariableDeclarationUsageDistanceCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputVariableDeclarationUsageDistance.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd1950abe4544044933c5d7946ab910e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testLambdaInVariableInitialization()         throws Exception", "signatureAfterChange": "      @Test     public void testLambdaInVariableInitialization()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest1.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda1.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd1f05dec54199232bb5f23009919df3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheckTest.java", "commitBeforeChange": "8a3ccee4918bc1ce5f6bc2dfea51389a59684eb0", "commitAfterChange": "500bf308fac4adc61bd3087a664779c8622efb3b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "     @Test     public void testDefault() throws Exception", "diff": ["-            \"43:8: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.CheckStyleTask\"),", "+            \"43:8: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.PackageNamesLoader\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd5f613c662dacab9599141f67efc9fe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "contrib/j2ee/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/j2ee/EntityBeanCheck.java", "commitBeforeChange": "3c4a10ca035802820e7260164b72438da404ccd7", "commitAfterChange": "304ca8487a300560058a0e2abe67a78aa0458b51", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            checkBean(aAST, \"Entity\");", "+            checkBean(aAST, \"Entity bean\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd6833cdb6fc26aa39c32f7444de73c0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "commitAfterChange": "7e5e919ce7db115c5893fa23e07a3cf1acfc3f10", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testTypeNamesForThreePermittedCapitalLetters() throws Exception", "signatureAfterChange": "      @Test     public void testTypeNamesForThreePermittedCapitalLetters() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"naming/InputAbbreviationAsWordInTypeNameCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd9898b96242418f326ef77b7284db19", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalThrowsCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     @Test     public void testNotIgnoreOverriddenMethods() throws Exception", "signatureAfterChange": "     @Test     public void testNotIgnoreOverriddenMethods() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputIllegalThrowsCheckIgnoreOverriddenMethods.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalThrowsIgnoreOverriddenMethods.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdad48c1b74bcbaadffa5ed24c326aef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testLogLoadErrors() throws Exception", "signatureAfterChange": "      @Test     public void testLogLoadErrors() throws Exception", "diff": ["-        verify(config, getPath(\"javadoc/InputLoadErrors.java\"), expected);", "+        verify(config, getPath(\"checks/javadoc/InputLoadErrors.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdd88d1bac47850a3c240ee87d782197", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyCatchBlockTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void emptyBlockTestCatch() throws Exception", "signatureAfterChange": "      @Test     public void emptyBlockTestCatch() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"EmptyBlockInputCatch\");", "+        final String filePath = builder.getFilePath(\"InputEmptyBlockCatch\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fddb0a9f00fa6c69f4918e7a18bf4251", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "93322bd3df79ad1b1763eceebd5205a3d57c7178", "commitAfterChange": "c876d2431e56405371b93c814de33c350766266d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private String safeGet(final Attributes aAtts, final String aName)         throws SAXException", "signatureAfterChange": "     private String safeGet(final Attributes aAtts, final String aName)         throws SAXException", "diff": ["-            throw new SAXException(\"missing attibute \" + aName);", "+            throw new SAXException(\"missing attribute \" + aName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe3283e492ff451e3d3c37bba27eb0f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/SeparatorWrapTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void separatorWrapTest() throws Exception", "signatureAfterChange": "      @Test     public void separatorWrapTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"SeparatorWrapInput\");", "+        final String filePath = builder.getFilePath(\"InputSeparatorWrap\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe61977035523bf175924bfe3789a126", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "2cf54ade2182e29c413f23e2235a896247d7a2ad", "commitAfterChange": "d282053d9ce02c13c779decfd079a8305086f752", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testNonExistingTargetFile()             throws Exception", "signatureAfterChange": "      @Test     public void testNonExistingTargetFile()             throws Exception", "diff": ["-        Main.main(\"-c\", \"/google_checks.xml\", \"NonexistingFile.java\");", "+        Main.main(\"-c\", \"/google_checks.xml\", \"NonExistingFile.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe70443359fbec64e88a5ade0894d202", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/NoFinalizerCheckTest.java", "commitBeforeChange": "8a6befb469c60416d1629b5a92e5bf81e07b7cae", "commitAfterChange": "708bb0271d113352a98c3a878b448d6635405694", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testHasFinalizer()         throws Exception", "signatureAfterChange": "      @Test     public void testHasFinalizer()         throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"coding/InputHasFinalizer.java\"), expected);", "+        verify(checkConfig, getPath(\"InputHasFinalizer.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fea36eb2e303a3a3d9bbe9bedfe4f89a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 30, "signatureBeforeChange": "      @Test     public void testValidDotWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testValidDotWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputValidDotIndent.java\");", "+        final String fname = getPath(\"InputValidDotIndent.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fec02d9c8b93f2a25c1f271a98dabd6e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4841indentation/IndentationTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void correctTest() throws Exception", "signatureAfterChange": "      @Test     public void correctTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"IndentationCorrectInput\");", "+        final String filePath = builder.getFilePath(\"InputIndentationCorrect\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff94917ac7341893015709ef98689a0b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "9c488c1f512ffcc58af433842c992bd3f85b2d63", "commitAfterChange": "f47587c9fb66cf46fbd2eb5691449cda6d551ecb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testIllegalTokenNative() throws Exception", "signatureAfterChange": "      @Test     public void testIllegalTokenNative() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"checks/InputIllegalTokens.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalTokens.java\"), expected);"]}]}