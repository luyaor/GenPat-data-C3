{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d164fe9990097f10de3b1135be827ee2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b0beaac28ddd8bf6d4fd26f99a9397e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void seeReferenceWithFewNestedClasses()         throws IOException", "signatureAfterChange": "      @Test     public void seeReferenceWithFewNestedClasses()         throws IOException", "diff": ["-        String filename = getDocPath(\"InputSeeReferenceWithFewNestedClasses.txt\");", "-        ParseTree generatedTree = parseJavadoc(getFileContent(new File(filename)));", "-        ParseTree expectedTree = ParseTreeBuilder.treeSeeReferenceWithFewNestedClasses();", "+        final String filename = getDocPath(\"InputSeeReferenceWithFewNestedClasses.txt\");", "+        final ParseTree generatedTree = parseJavadoc(getFileContent(new File(filename)));", "+        final ParseTree expectedTree = ParseTreeBuilder.treeSeeReferenceWithFewNestedClasses();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c43ff277d9738149ce83449f62db7969", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      @Test     public void fewWhiteSpacesAsSeparator()         throws IOException", "signatureAfterChange": "      @Test     public void fewWhiteSpacesAsSeparator()         throws IOException", "diff": ["-        String filename = getDocPath(\"InputFewWhiteSpacesAsSeparator.txt\");", "-        ParseTree generatedTree = parseJavadoc(getFileContent(new File(filename)));", "-        ParseTree expectedTree = ParseTreeBuilder.treeFewWhiteSpacesAsSeparator();", "+        final String filename = getDocPath(\"InputFewWhiteSpacesAsSeparator.txt\");", "+        final ParseTree generatedTree = parseJavadoc(getFileContent(new File(filename)));", "+        final ParseTree expectedTree = ParseTreeBuilder.treeFewWhiteSpacesAsSeparator();"]}]}