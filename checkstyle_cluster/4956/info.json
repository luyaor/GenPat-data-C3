{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a7fbd8060fe77938ccb1f434bb211b0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78be8f5468b001d2a67d2c133a762734", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testNL2() throws Exception", "signatureAfterChange": "      @Test     public void testNL2() throws Exception", "diff": ["-            \"14:39: '{' should be on a new line.\",", "-            \"21:20: '{' should be on a new line.\",", "-            \"34:31: '{' should be on a new line.\",", "-            \"43:24: '{' should be on a new line.\",", "-            \"56:35: '{' should be on a new line.\",", "-            \"60:24: '{' should be on a new line.\",", "-            \"74:20: '{' should be on a new line.\",", "-            \"87:31: '{' should be on a new line.\",", "+            \"14:39: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"21:20: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"34:31: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"43:24: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"56:35: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"60:24: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"74:20: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"87:31: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7ba4d53139ae1dd36783ad92ad961d2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheckTest.java", "commitBeforeChange": "da2d75a1780c1691dc4aa45489f9e9674b1c652e", "commitAfterChange": "36b91a59d62c9505b835717f00f470c499cf9b30", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["+            \"185:13: \" + getCheckMessage(MSG_KEY, \"x\"),", "+            \"190:17: \" + getCheckMessage(MSG_KEY, \"x\"),", "+            \"210:17: \" + getCheckMessage(MSG_KEY, \"n\"),", "+            \"216:13: \" + getCheckMessage(MSG_KEY, \"q\"),", "+            \"217:13: \" + getCheckMessage(MSG_KEY, \"w\"),", "+            \"226:21: \" + getCheckMessage(MSG_KEY, \"w\"),", "+            \"227:21: \" + getCheckMessage(MSG_KEY, \"e\"),", "+            \"247:17: \" + getCheckMessage(MSG_KEY, \"n\"),", "+            \"259:17: \" + getCheckMessage(MSG_KEY, \"t\"),"]}]}