{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31501bb6b96a85e20ff4f2208c6f7904", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af50fab321381d8ca37b856b603e9701", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 66, "signatureBeforeChange": "     private void checkImports()", "signatureAfterChange": "     private void checkImports()", "diff": ["-                log(imp.getLineNo(),", "-                    \"Redundant import from the java.lang package.\");", "+                log(imp.getLineNo(), \"import.lang\");", "-                log(imp.getLineNo(), \"Redundant import from the same package.\");", "+                log(imp.getLineNo(), \"import.same\");", "-                log(imp.getLineNo(), \"Unused import - \" + imp.getText());", "+                log(imp.getLineNo(), \"import.unused\", imp.getText());", "-                log(imp.getLineNo(),", "-                    \"Import from illegal package - \" + imp.getText());", "+                log(imp.getLineNo(), \"import.illegal\", imp.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb7348fc76d42245478e7ac36cfb3fbc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 60, "signatureBeforeChange": "     private void checkParamTags(List aTags, List aParams)", "signatureAfterChange": "     private void checkParamTags(List aTags, List aParams)", "diff": ["-                log(tag.getLineNo(),", "-                    \"Unused @param tag for '\" + tag.getArg1() + \"'.\");", "+                log(tag.getLineNo(), \"javadoc.unusedTag\",", "+                    \"@param\", tag.getArg1());", "-                \"Expected @param tag for '\" + param.getText() + \"'.\");", "+                \"javadoc.expectedTag\", \"@param\", param.getText());"]}]}