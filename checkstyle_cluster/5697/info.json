{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d03943c45ea7c6c493bc0c0eb9638def", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "252dc01e3bac94cdb7fba94f0b1d95e1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "63fc2b75aae255f9e552d034944dac6ac6829dd4", "commitAfterChange": "e5ad46010b48faba1367b8384dcd9f55d9ed10b7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean isConstantDefinition(DetailAST aAST)", "signatureAfterChange": "     private boolean isConstantDefinition(DetailAST aAST)", "diff": ["-        //UNARY_MINUS or UNARY_PLUS should be ignored", "-        if ((parent.getType() == TokenTypes.UNARY_MINUS)", "-            || (parent.getType() == TokenTypes.UNARY_PLUS))", "+        //skip TYPECAST, UNARY_MINUS, UNARY_PLUS", "+        while ((parent.getType() == TokenTypes.UNARY_MINUS)", "+            || (parent.getType() == TokenTypes.UNARY_PLUS)", "+            || (parent.getType() == TokenTypes.TYPECAST))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df6a75458190b06de1a3be12ad38c22f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java", "commitBeforeChange": "b07beaaae4086e5245a309a2957f90461559a9b7", "commitAfterChange": "b30ed9fc87c0a74860cc355af259fc29f6d1b76f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-                    if (!mIgnoreModifiers) {", "+                    if (!mIgnoreModifiers", "+                        || state.mScopeState > STATE_INSTANCE_VARIABLE_DEF)", "+                    {", "-                    if (!mIgnoreModifiers) {", "-                        log(aAST, \"declaration.order.instance\");", "-                    }", "+                    log(aAST, \"declaration.order.instance\");"]}]}