{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5327d6ffdcefa9babfa621a9bf406b24", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52bbc98f4dad58514632f59afff48c5e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processVariable(DetailAST aAST)", "signatureAfterChange": "     private void processVariable(DetailAST ast)", "diff": ["-    private void processVariable(DetailAST aAST)", "+    private void processVariable(DetailAST ast)", "-        if (ScopeUtils.inInterfaceOrAnnotationBlock(aAST)", "-            || (!ScopeUtils.isLocalVariableDef(aAST)", "-            && (aAST.getType() != TokenTypes.PARAMETER_DEF)))", "+        if (ScopeUtils.inInterfaceOrAnnotationBlock(ast)", "+            || (!ScopeUtils.isLocalVariableDef(ast)", "+            && (ast.getType() != TokenTypes.PARAMETER_DEF)))", "-        //local variable or parameter. Does it shadow a field?", "-        final DetailAST nameAST = aAST.findFirstToken(TokenTypes.IDENT);", "+        //local variable or pnameter. Does it shadow a field?", "+        final DetailAST nameAST = ast.findFirstToken(TokenTypes.IDENT);", "-        if ((mCurrentFrame.containsStaticField(name)", "-             || (!inStatic(aAST) && mCurrentFrame.containsInstanceField(name)))", "-            && ((mRegexp == null) || (!getRegexp().matcher(name).find()))", "-            && !isIgnoredSetterParam(aAST, name)", "-            && !isIgnoredConstructorParam(aAST)", "-            && !isIgnoredParamOfAbstractMethod(aAST))", "+        if ((currentFrame.containsStaticField(name)", "+             || (!inStatic(ast) && currentFrame.containsInstanceField(name)))", "+            && ((regexp == null) || (!getRegexp().matcher(name).find()))", "+            && !isIgnoredSetterParam(ast, name)", "+            && !isIgnoredConstructorParam(ast)", "+            && !isIgnoredParamOfAbstractMethod(ast))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beca7a772608dec6eb7f1d0c96884025", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "204c073294cdca6756bcd546d6af85a797ad7d79", "commitAfterChange": "6784e5bcd5baa6b5086bf8b63709856d685a74c8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void processVariable(DetailAST ast)", "signatureAfterChange": "     private void processVariable(DetailAST ast)", "diff": ["-        if (ScopeUtils.inInterfaceOrAnnotationBlock(ast)", "-            || (!ScopeUtils.isLocalVariableDef(ast)", "-            && (ast.getType() != TokenTypes.PARAMETER_DEF)))", "+        if (!ScopeUtils.inInterfaceOrAnnotationBlock(ast)", "+            && (ScopeUtils.isLocalVariableDef(ast)", "+                || (ast.getType() == TokenTypes.PARAMETER_DEF)))", "-            // do nothing", "-            return;", "-        }", "-        //local variable or pnameter. Does it shadow a field?", "-        final DetailAST nameAST = ast.findFirstToken(TokenTypes.IDENT);", "-        final String name = nameAST.getText();", "-        if ((currentFrame.containsStaticField(name)", "-             || (!inStatic(ast) && currentFrame.containsInstanceField(name)))", "-            && ((regexp == null) || (!getRegexp().matcher(name).find()))", "-            && !isIgnoredSetterParam(ast, name)", "-            && !isIgnoredConstructorParam(ast)", "-            && !isIgnoredParamOfAbstractMethod(ast))", "-        {", "-            log(nameAST, \"hidden.field\", name);", "+            // local variable or parameter. Does it shadow a field?", "+            final DetailAST nameAST = ast.findFirstToken(TokenTypes.IDENT);", "+            final String name = nameAST.getText();", "+", "+            if ((currentFrame.containsStaticField(name)", "+                || (!inStatic(ast) && currentFrame.containsInstanceField(name)))", "+                && ((regexp == null) || (!getRegexp().matcher(name).find()))", "+                && !isIgnoredSetterParam(ast, name)", "+                && !isIgnoredConstructorParam(ast)", "+                && !isIgnoredParamOfAbstractMethod(ast))", "+            {", "+                log(nameAST, \"hidden.field\", name);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6a660d6cae87f21e4250e63a46a01b9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "094ffd52eca4f05bfc671f01cb7ad0b7d1bbe77f", "commitAfterChange": "49d100f325752b15bbee56bfcf99dac223144639", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processVariable(DetailAST aAST)", "signatureAfterChange": "     private void processVariable(DetailAST aAST)", "diff": ["-        if (!ScopeUtils.inInterfaceOrAnnotationBlock(aAST)) {", "-            if (ScopeUtils.isLocalVariableDef(aAST)", "-                || (aAST.getType() == TokenTypes.PARAMETER_DEF))", "-            {", "-                //local variable or parameter. Does it shadow a field?", "-                final DetailAST nameAST = aAST.findFirstToken(TokenTypes.IDENT);", "-                final String name = nameAST.getText();", "-                if ((mCurrentFrame.containsStaticField(name)", "-                     || (!inStatic(aAST)", "-                         && mCurrentFrame.containsInstanceField(name)))", "-                    && ((mRegexp == null)", "-                        || (!getRegexp().matcher(name).find()))", "-                    && !isIgnoredSetterParam(aAST, name)", "-                    && !isIgnoredConstructorParam(aAST))", "-                {", "-                    log(nameAST, \"hidden.field\", name);", "-                }", "-            }", "+        if (ScopeUtils.inInterfaceOrAnnotationBlock(aAST)", "+            || !ScopeUtils.isLocalVariableDef(aAST)", "+            && (aAST.getType() != TokenTypes.PARAMETER_DEF))", "+        {", "+            // do nothing", "+            return;", "+        }", "+        //local variable or parameter. Does it shadow a field?", "+        final DetailAST nameAST = aAST.findFirstToken(TokenTypes.IDENT);", "+        final String name = nameAST.getText();", "+        if ((mCurrentFrame.containsStaticField(name)", "+             || (!inStatic(aAST) && mCurrentFrame.containsInstanceField(name)))", "+            && ((mRegexp == null) || (!getRegexp().matcher(name).find()))", "+            && !isIgnoredSetterParam(aAST, name)", "+            && !isIgnoredConstructorParam(aAST))", "+        {", "+            log(nameAST, \"hidden.field\", name);"]}]}