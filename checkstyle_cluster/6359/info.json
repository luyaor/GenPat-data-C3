{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "daf43d124e78a422243e0578746dfa7e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ceaa6dcd5530c0a57dde4a875895c16", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "e2329c7a98dadb9e2717aae92216964a6ab40329", "commitAfterChange": "073d09569f471061fd82899efac4f823269dd265", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static Configuration loadConfiguration(InputStream aConfigStream,         PropertyResolver aOverridePropsResolver, boolean aOmitIgnoredModules)         throws CheckstyleException", "signatureAfterChange": "     @Deprecated     public static Configuration loadConfiguration(InputStream aConfigStream,         PropertyResolver aOverridePropsResolver, boolean aOmitIgnoredModules)         throws CheckstyleException", "diff": ["+    @Deprecated", "+        PropertyResolver aOverridePropsResolver, boolean aOmitIgnoredModules)", "+        throws CheckstyleException", "+    {", "+        return loadConfiguration(new InputSource(aConfigStream),", "+                                 aOverridePropsResolver, aOmitIgnoredModules);", "+    }", "-            loader.parseInputStream(aConfigStream);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9ecf80d3c61999ad3886127dbb601d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "fdc564f6b276225d86a4ab7281a6a91e42f779f4", "commitAfterChange": "49eb0e934ee82cf33c6643a4a15eb74ad471a6a9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void setProperties(File aProps)", "signatureAfterChange": "     public void setProperties(File aProps)", "diff": ["-        final Properties mProperties = new Properties();", "-        try {", "-            mProperties.load(new FileInputStream(aProps));", "-        }", "-        catch (FileNotFoundException e) {", "-            throw new BuildException(", "-                    \"Could not find Properties file '\" + aProps + \"'\",", "-                    e, getLocation());", "-        }", "-        catch (IOException e) {", "-            throw new BuildException(", "-                    \"Error loading Properties file '\" + aProps + \"'\",", "-                    e, getLocation());", "-        }", "-", "-        try {", "-            mConfig = new Configuration(mProperties, System.out);", "-        }", "-        catch (RESyntaxException e) {", "-            throw new BuildException(", "-                    \"An regular expression error exists in '\" + aProps + \"'\",", "-                    e, getLocation());", "-        }", "-        catch (IOException e) {", "-            throw new BuildException(", "-                    \"An error loading the file '\" + e.getMessage() + \"'\",", "-                    e, getLocation());", "-        }", "+        mPropertiesFile = aProps;"]}]}