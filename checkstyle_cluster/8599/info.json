{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "38a65fa28c124e22c69ccf16e27b6470", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f15f0878af6ee26e15fa2d6dac2a5a5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/MethodCountCheck.java", "commitBeforeChange": "afa1c0d8cd66b51f02b750594cbb9c9855e3e74a", "commitAfterChange": "fead6ef45a093f2a4ffbff013802959c89e7a6c6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST aAST)", "diff": ["-            checkCounters(aAST);", "-            cleanupTypeDef();", "+            final MethodCounter counter = mCounters.pop();", "+            checkCounters(counter, aAST);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f614c6dd12cf6bbd88abe30dfa12d48", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "be9f461d577983e7deeed909852cee3fb5d784f6", "commitAfterChange": "06e8a4eaa00e548f52b2483864a31ba9defd0989", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-            final int size = mCounters.size();", "-            for (int i = 0; i < size; i++) {", "-                (mCounters.get(i)).increment();", "+            for (final Counter c : mCounters) {", "+                c.increment();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9106947a490c381fc7c29497a205a7fe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/coding/InputFallThrough.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     void method(int i, int j)", "signatureAfterChange": "     void method(int i, int j, boolean cond)", "diff": ["-    void method(int i, int j) {", "+    void method(int i, int j, boolean cond) {", "-                for (int j = 0; j < 10; j++) {", "+                for (int j1 = 0; j1 < 10; j1++) {", "-                while(false) {", "+                while(cond) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a54c9414692a84b9bbef5b9df126838b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "546f336e25b26d072f96e2cda139b885858ed5b0", "commitAfterChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            for (final Counter c : counters) {", "-                c.increment();", "+            for (final Counter counter : counters) {", "+                counter.increment();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd9e074a49feabc8f1c7fa6e0272aa3c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "commitBeforeChange": "0dc308ff69bce4d52ef76002bc4fe3988955ceb6", "commitAfterChange": "e6538f822f3fb690d01b3f27aabb6785d9732a29", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static boolean isInContext(DetailAST ast, int[]... contextSet)", "signatureAfterChange": "     private static boolean isInContext(DetailAST ast, int[]... contextSet)", "diff": ["-            final int len = element.length;", "-            for (int j = 0; j < len; j++) {", "+            for (int anElement : element) {", "-                final int expectedType = element[j];", "+                final int expectedType = anElement;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd5e216f5dac0cbeb5b1aa7f6959528d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "80ab48f859c1f16835dbd41afe42414b41969e2f", "commitAfterChange": "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            if (processingJavadoc) {", "-                processJavadoc(ast);", "+            if (processJavadoc) {", "+                collectReferecesFromJavadoc(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff1069a1d1809bafea86684a9d32e63f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static boolean isInContext(DetailAST aAST, int[][] aContextSet)", "signatureAfterChange": "     private static boolean isInContext(DetailAST aAST, int[][] aContextSet)", "diff": ["-        for (int i = 0; i < aContextSet.length; i++) {", "+        for (int[] element : aContextSet) {", "-            final int len = aContextSet[i].length;", "+            final int len = element.length;", "-                final int expectedType = aContextSet[i][j];", "+                final int expectedType = element[j];"]}]}