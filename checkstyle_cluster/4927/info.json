{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d89b3bcff5b8036bbff16e72f19b9d28", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "026c4880d2cd6ccb9604e86b3fdfeb83", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "       private void makeDropTarget(final Component c, boolean recursive)             throws TooManyListenersException", "signatureAfterChange": "       private void makeDropTarget(final Component c, boolean recursive)             throws TooManyListenersException", "diff": ["-                Component parent = c.getParent();", "+                final Component parent = c.getParent();", "-            Container cont = (Container) c;", "-            Component[] comps = cont.getComponents();", "+            final Container cont = (Container) c;", "+            final Component[] comps = cont.getComponents();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6668b71b8bc471c9b652d383c596d885", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/FullIdentTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testNonValidCoordinates()", "signatureAfterChange": "      @Test     public void testNonValidCoordinates()", "diff": ["-        DetailAST ast = new DetailAST();", "+        final DetailAST ast = new DetailAST();", "-        DetailAST ast2 = new DetailAST();", "+        final DetailAST ast2 = new DetailAST();", "-        DetailAST ast1 = new DetailAST();", "+        final DetailAST ast1 = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85d5f6e59ab6ff25a139ea45c0192450", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtilsTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testInEnumBlockWithEnum() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testInEnumBlockWithEnum() throws ReflectiveOperationException", "diff": ["-        DetailAST ast0 = new DetailAST();", "+        final DetailAST ast0 = new DetailAST();", "-        DetailAST ast1 = new DetailAST();", "+        final DetailAST ast1 = new DetailAST();", "-        DetailAST ast2 = new DetailAST();", "+        final DetailAST ast2 = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8aa06d3a3b685f6222d878e4b6df2d61", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "546f336e25b26d072f96e2cda139b885858ed5b0", "commitAfterChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     FileDrop(             final Component c,             final Border dragBorder,             final boolean recursive,             final Listener listener)             throws TooManyListenersException", "signatureAfterChange": "     FileDrop(             final Component component,             final Border dragBorder,             final boolean recursive,             final Listener listener)             throws TooManyListenersException", "diff": ["-            final Component c,", "+            final Component component,", "-        dropListener = new FileDropTargetListener(c, dragBorder, listener);", "-        makeDropTarget(c, recursive);", "+        dropListener = new FileDropTargetListener(component, dragBorder, listener);", "+        makeDropTarget(component, recursive);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97f88356eacc6677c5f2fae9f1f5ada0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/AnnotationUtilityTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testContainsAnnotationTrue() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testContainsAnnotationTrue() throws ReflectiveOperationException", "diff": ["-        DetailAST ast = new DetailAST();", "+        final DetailAST ast = new DetailAST();", "-        DetailAST ast2 = new DetailAST();", "+        final DetailAST ast2 = new DetailAST();", "-        DetailAST ast3 = new DetailAST();", "+        final DetailAST ast3 = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faace7a506f0c21e0494b7062d7341a4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public ExpressionHandler getHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "signatureAfterChange": "     public ExpressionHandler getHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "diff": ["-            (ExpressionHandler) mCreatedHandlers.get(aAst);", "+            mCreatedHandlers.get(aAst);", "-            final Constructor handlerCtor =", "-                (Constructor) mTypeHandlers.get(type);", "+            final Constructor<?> handlerCtor =", "+                mTypeHandlers.get(type);"]}]}