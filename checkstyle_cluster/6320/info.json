{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0db5f61a02296073ded8dc8be1e2f86", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "219da17d18334ec0e0217a3d889216ec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "c2c34c8408d8ef5b92b7e87c671e392765f6c3d0", "commitAfterChange": "ebd4afdebe8ee09c0e6c7d1239e2ca982f87e51c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setPublicMemberPattern(String pattern)", "signatureAfterChange": "     public void setPublicMemberPattern(String pattern)", "diff": ["-        try {", "-            publicMemberPattern = Utils.getPattern(pattern);", "-            publicMemberFormat = pattern;", "-        }", "-        catch (final PatternSyntaxException e) {", "-            throw new ConversionException(\"unable to parse \" + pattern, e);", "-        }", "+        publicMemberPattern = Utils.createPattern(pattern);", "+        publicMemberFormat = pattern;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1d650e7b2ea8a9f3116a39cdfbc0662", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/CheckUtilsTest.java", "commitBeforeChange": "6370bd4a8ad7f2affeece4bcfcfa0dcd9b13a01d", "commitAfterChange": "a15aacf77a4fd9c678ac7f28b90d9eaadd244af8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testIsProperUtilsClass() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testIsProperUtilsClass() throws ReflectiveOperationException", "diff": ["-        try {", "-            assertUtilsClassHasPrivateConstructor(CheckUtils.class);", "-            Assert.fail();", "-        }", "-        catch (InvocationTargetException ex) {", "-            Assert.assertTrue(ex.getCause() instanceof UnsupportedOperationException);", "-        }", "+        assertUtilsClassHasPrivateConstructor(CheckUtils.class);"]}]}