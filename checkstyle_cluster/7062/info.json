{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d264da5fbd623f9bf17ca6fdc258c12f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e135ba6d6e00c527a567af3fb18825e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TrailingCommentCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setLegalComment(final String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setLegalComment(final String format)         throws ConversionException", "diff": ["-    public void setLegalComment(final String aFormat)", "+    public void setLegalComment(final String format)", "-            mLegalComment = Utils.getPattern(aFormat);", "+            legalComment = Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76b101c34d225bf395d035463af71aeb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setCommentFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setCommentFormat(String format)         throws ConversionException", "diff": ["-    public void setCommentFormat(String aFormat)", "+    public void setCommentFormat(String format)", "-            mCommentRegexp = Utils.getPattern(aFormat);", "+            commentRegexp = Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}]}