{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4128183ae618da10ff989f59e74ab85d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b7ca8c66832d98abee3096d15b0204a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "6f937bff1da1183d58b20f48e3cc401dc9eb06f4", "commitAfterChange": "0024de5711531372850e883c970414563ab8e3ad", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public int[] getAcceptableTokens()", "signatureAfterChange": "      @Override     public int[] getAcceptableTokens()", "diff": ["-        return getDefaultTokens();", "+        return new int[] {", "+            TokenTypes.METHOD_CALL,", "+            TokenTypes.CLASS_DEF,", "+            TokenTypes.METHOD_DEF,", "+            TokenTypes.LITERAL_IF,", "+            TokenTypes.LITERAL_FOR,", "+            TokenTypes.LITERAL_WHILE,", "+            TokenTypes.LITERAL_DO,", "+            TokenTypes.LITERAL_CATCH,", "+            TokenTypes.LITERAL_TRY,", "+            TokenTypes.VARIABLE_DEF,", "+            TokenTypes.PARAMETER_DEF,", "+            TokenTypes.CTOR_DEF,", "+            TokenTypes.SLIST,", "+            TokenTypes.ENUM_DEF,", "+            TokenTypes.ENUM_CONSTANT_DEF,", "+            TokenTypes.LITERAL_NEW,", "+        };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e41bbfe7550742c56fe6db518578cbd0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "da2d75a1780c1691dc4aa45489f9e9674b1c652e", "commitAfterChange": "36b91a59d62c9505b835717f00f470c499cf9b30", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public int[] getRequiredTokens()", "signatureAfterChange": "      @Override     public int[] getRequiredTokens()", "diff": ["+    public int[] getRequiredTokens() {", "+        return new int[] {", "+            TokenTypes.IDENT,", "+            TokenTypes.CTOR_DEF,", "+            TokenTypes.METHOD_DEF,", "+            TokenTypes.SLIST,", "+            TokenTypes.OBJBLOCK,", "+        };", "+    }", "-", "-    @Override", "-    public int[] getRequiredTokens() {", "-        return new int[] {", "-            TokenTypes.IDENT,", "-            TokenTypes.CTOR_DEF,", "-            TokenTypes.METHOD_DEF,", "-            TokenTypes.INSTANCE_INIT,", "-            TokenTypes.STATIC_INIT,", "-            TokenTypes.LITERAL_FOR,", "-            TokenTypes.SLIST,", "-            TokenTypes.OBJBLOCK,"]}]}