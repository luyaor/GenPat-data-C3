{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc969df2dbb1d632d8784860e00d8c7b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e1985937f8e7c2a1a299d7999659e34", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "10f348bbfd91fd8c2bd7776aff3c03f549380a44", "commitAfterChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 24, "signatureBeforeChange": "         protected LexicalFrame getIfContains(DetailAST nameToFind, boolean lookForMethod)", "signatureAfterChange": "         protected AbstractFrame getIfContains(DetailAST nameToFind, boolean lookForMethod)", "diff": ["-        protected LexicalFrame getIfContains(DetailAST nameToFind, boolean lookForMethod) {", "-            LexicalFrame frame = null;", "+        protected AbstractFrame getIfContains(DetailAST nameToFind, boolean lookForMethod) {", "+            AbstractFrame frame;", "-            else if (parent != null) {", "+            else {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6a76b92ab73cffda01d1e1069f6e639", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "10f348bbfd91fd8c2bd7776aff3c03f549380a44", "commitAfterChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 40, "signatureBeforeChange": "          @Override         protected LexicalFrame getIfContains(DetailAST nameToFind, boolean lookForMethod)", "signatureAfterChange": "          @Override         protected AbstractFrame getIfContains(DetailAST nameToFind, boolean lookForMethod)", "diff": ["-        protected LexicalFrame getIfContains(DetailAST nameToFind, boolean lookForMethod) {", "-            LexicalFrame frame;", "+        protected AbstractFrame getIfContains(DetailAST nameToFind, boolean lookForMethod) {", "+            AbstractFrame frame = null;", "-            else {", "+            else if (getParent() != null) {"]}]}