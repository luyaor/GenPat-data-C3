{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "035ee8eef6cc0871472fd83c450e45fb", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4847490671838d5fd15355a5f716d5a0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java", "commitBeforeChange": "b9cfa0969468d97aade2ec022dfff34dc33e7b1a", "commitAfterChange": "9d11682be9f541bcc21cfc533ede5e0b5a7862f4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIllegalAbstractClassName() throws Exception", "signatureAfterChange": "     @Test     public void testIllegalAbstractClassName() throws Exception", "diff": ["+    // abstract --> ^Abstract.*$|^.*Factory$", "+        checkConfig.addAttribute(\"checkName\", \"true\");", "+        checkConfig.addAttribute(\"checkModifier\", \"false\");", "+        verify(checkConfig, getPath(\"naming\" + File.separator + \"InputAbstractClassName.java\"), expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5456164a98386c29b32691d451a7c24e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule528typevariablenames/ClassMethodTypeParameterNameTest.java", "commitBeforeChange": "0c75b3af7443afa5a3130bdbd1220fd1076117ed", "commitAfterChange": "230cd73883c40bf535cfca2d745f1f98564753db", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        checkConfig = builder.getCheckConfig(\"ClassTypeParameterName\");", "-        format = checkConfig.getAttribute(\"format\");", "+        configuration = builder.getCheckConfig(\"ClassTypeParameterName\");", "+        format = configuration.getAttribute(\"format\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d9b306bcee88849e4a9d8d9233a8333", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Before     public void setUp()", "signatureAfterChange": "      @Before     public void setUp()", "diff": ["-        mCheckConfig = createCheckConfig(JavadocMethodCheck.class);", "-        mCheckConfig.addAttribute(\"validateThrows\", \"true\");", "+        checkConfig = createCheckConfig(JavadocMethodCheck.class);", "+        checkConfig.addAttribute(\"validateThrows\", \"true\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a12a1201d8b46ed552ecf69ec2dd160f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/OperatorWrapCheckTest.java", "commitBeforeChange": "639f75a49f8e8710edb96d2c454ce2c61fa7d2a2", "commitAfterChange": "4aa0a51fb420ce93790b399e0b6214a51714cd03", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testAssignEOL()         throws Exception", "signatureAfterChange": "      public void testAssignEOL()         throws Exception", "diff": ["-        checkConfig.addTokens(\"ASSIGN\");", "-        checkConfig.addProperty(\"option\", OperatorWrapOption.EOL.toString());", "+        checkConfig.addAttribute(\"tokens\", \"ASSIGN\");", "+        checkConfig.addAttribute(\"option\", OperatorWrapOption.EOL.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0f84eb5d9a1c66f6f81924d5f010a14", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java", "commitBeforeChange": "3c0c72f96477afb542ee37b3336f4b7b7613ff29", "commitAfterChange": "6f0a3dee5efc6217383f9bfd6d7a3a116b1c885b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIllegalAbstractClassName() throws Exception", "signatureAfterChange": "     @Test     public void testIllegalAbstractClassName() throws Exception", "diff": ["-        checkConfig.addAttribute(\"checkName\", \"true\");", "-        checkConfig.addAttribute(\"checkModifier\", \"false\");", "+        checkConfig.addAttribute(\"ignoreName\", \"false\");", "+        checkConfig.addAttribute(\"ignoreModifier\", \"true\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c18f86514658daacba5287e45f8a70ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java", "commitBeforeChange": "fe07d99333284482aad4729ffd17bb94030a3ab4", "commitAfterChange": "3c0c72f96477afb542ee37b3336f4b7b7613ff29", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIllegalAbstractClassName() throws Exception", "signatureAfterChange": "     @Test     public void testIllegalAbstractClassName() throws Exception", "diff": ["-    // abstract --> ^Abstract.*$|^.*Factory$", "+        checkConfig.addAttribute(\"checkName\", \"true\");", "+        checkConfig.addAttribute(\"checkModifier\", \"false\");", "+", "-        checkConfig.addAttribute(\"checkName\", \"true\");", "-        checkConfig.addAttribute(\"checkModifier\", \"false\");", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f58e4b503cd8a0266b5c0d4bef5ed213", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "267ba659ac62583f14c8c25d3cf4587070e1966c", "commitAfterChange": "95f7a7cde50ceac50d41c2bff65b6983c888bea3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGroups() throws Exception", "signatureAfterChange": "      @Test     public void testGroups() throws Exception", "diff": ["-        checkConfig.addAttribute(\"groups\", \"java.awt, javax.swing, java.io\");", "+        checkConfig.addAttribute(\"groups\", \"java.awt\");", "+        checkConfig.addAttribute(\"groups\", \"javax.swing\");", "+        checkConfig.addAttribute(\"groups\", \"java.io\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f81966d71627c7a54978fb16d631bad7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/NoWhitespaceBeforeCheckTest.java", "commitBeforeChange": "639f75a49f8e8710edb96d2c454ce2c61fa7d2a2", "commitAfterChange": "4aa0a51fb420ce93790b399e0b6214a51714cd03", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "       public void testDotAllowLineBreaks() throws Exception", "signatureAfterChange": "       public void testDotAllowLineBreaks() throws Exception", "diff": ["-        checkConfig.addTokens(\"DOT\");", "-        checkConfig.addProperty(\"allowLineBreaks\", \"yes\");", "+        checkConfig.addAttribute(\"tokens\", \"DOT\");", "+        checkConfig.addAttribute(\"allowLineBreaks\", \"yes\");"]}]}