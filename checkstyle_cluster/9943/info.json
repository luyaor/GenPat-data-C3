{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ce3a6f6f81b4edc3af0c6478661af25", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1475cc4361f9b63f7d95092786b800de", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "d972822d63ee8eb60207e6de53632335dfbc4d52", "commitAfterChange": "e4282ad407f1d025c26b85c0709f2ff418b74f57", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public int getColumnNo()", "signatureAfterChange": "     public int getColumnNo()", "diff": ["+        int resultNo = -1;", "+", "-            DetailAST child = getFirstChild();", "-            while (child != null) {", "-                // comment node can't be start of any java statement/definition", "-                if (TokenUtils.isCommentType(child.getType())) {", "-                    child = child.getNextSibling();", "-                }", "-                else {", "-                    return child.getColumnNo();", "-                }", "-            }", "+            resultNo = findColumnNo(getFirstChild());", "-            DetailAST sibling = getNextSibling();", "-            while (sibling != null) {", "-                // comment node can't be start of any java statement/definition", "-                if (TokenUtils.isCommentType(sibling.getType())) {", "-                    sibling = sibling.getNextSibling();", "-                }", "-                else {", "-                    return sibling.getColumnNo();", "-                }", "+            if (resultNo < 0) {", "+                resultNo = findColumnNo(getNextSibling());", "-        return columnNo;", "+        if (resultNo < 0) {", "+            resultNo = columnNo;", "+        }", "+        return resultNo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ad94731ca22950459d3024a0e0e4057", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "bb1db4938ccae0f7149461ea372398fb8a53f2a8", "commitAfterChange": "15b8debf99b3b0c600084fccde54d9562bd48b71", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void checkThrowsTags(List aTags, List aThrows)", "signatureAfterChange": "     private void checkThrowsTags(List aTags, List aThrows)", "diff": ["-            if (!found", "-                && (mAllowThrowsTagsForSubclasses || mAllowUndeclaredRTE))", "-            {", "-                documentedClass = resolveClass(documentedEx);", "-                if (documentedClass == null) {", "-                    log(tag.getLineNo(), \"javadoc.classInfo\",", "-                        \"@throws\", documentedEx);", "-                }", "-            }", "+            boolean classLoaded = false;", "-                else if (mAllowThrowsTagsForSubclasses", "-                         && documentedClass != null)", "-                {", "-                    if (ei.isLoadable() && ei.getClazz() == null) {", "-                        // if the class is not loaded yet.", "-                        // try to load it.", "-                        ei.setClazz(resolveClass(declaredEx));", "-                        if (!ei.isLoadable()) {", "-                            log(fi.getLineNo(), \"javadoc.classInfo\",", "-                                \"@throws\", declaredEx);", "-                        }", "+                else if (mAllowThrowsTagsForSubclasses) {", "+                    if (!classLoaded) {", "+                        documentedClass = loadClassForTag(tag);", "+                        classLoaded = true;", "-", "-                if (mAllowUndeclaredRTE && documentedClass != null) {", "+                if (mAllowUndeclaredRTE) {", "+                    if (!classLoaded) {", "+                        documentedClass = loadClassForTag(tag);", "+                        classLoaded = true;", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b33886e93d19becaeda84801dd8c4ada", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "d972822d63ee8eb60207e6de53632335dfbc4d52", "commitAfterChange": "e4282ad407f1d025c26b85c0709f2ff418b74f57", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public int getLineNo()", "signatureAfterChange": "     public int getLineNo()", "diff": ["+        int resultNo = -1;", "+", "-            DetailAST child = getFirstChild();", "-            while (child != null) {", "-                // comment node can't be start of any java statement/definition", "-                if (TokenUtils.isCommentType(child.getType())) {", "-                    child = child.getNextSibling();", "-                }", "-                else {", "-                    return child.getLineNo();", "-                }", "-            }", "+            resultNo = findLineNo(getFirstChild());", "-            DetailAST sibling = getNextSibling();", "-            while (sibling != null) {", "-                // comment node can't be start of any java statement/definition", "-                if (TokenUtils.isCommentType(sibling.getType())) {", "-                    sibling = sibling.getNextSibling();", "-                }", "-                else {", "-                    return sibling.getLineNo();", "-                }", "+            if (resultNo < 0) {", "+                resultNo = findLineNo(getNextSibling());", "-        return lineNo;", "+        if (resultNo < 0) {", "+            resultNo = lineNo;", "+        }", "+        return resultNo;"]}]}