{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96ad7d23003d942638c8f1cae48161ae", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e827c2b2755986a0f981de18bb8cb33", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "commitAfterChange": "6125beffc437f970eae276b4a6542265c6547784", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void checkComment(DetailAST aAST, TextBlock aComment)", "signatureAfterChange": "     private void checkComment(DetailAST aAST, TextBlock aComment)", "diff": ["-        // Check for inheritDoc", "-        boolean hasInheritDocTag = false;", "-        while (it.hasNext() && !hasInheritDocTag) {", "-            hasInheritDocTag |=", "-                ((JavadocTag) it.next()).isInheritDocTag();", "-        }", "+        if (aAST.getType() != TokenTypes.ANNOTATION_FIELD_DEF) {", "+            // Check for inheritDoc", "+            boolean hasInheritDocTag = false;", "+            while (it.hasNext() && !hasInheritDocTag) {", "+                hasInheritDocTag |=", "+                    ((JavadocTag) it.next()).isInheritDocTag();", "+            }", "-        checkParamTags(tags, getParameters(aAST), !hasInheritDocTag);", "-        checkThrowsTags(tags, getThrows(aAST), !hasInheritDocTag);", "-        if (isFunction(aAST)) {", "-            checkReturnTag(tags, aAST.getLineNo(), !hasInheritDocTag);", "+            checkParamTags(tags, getParameters(aAST), !hasInheritDocTag);", "+            checkThrowsTags(tags, getThrows(aAST), !hasInheritDocTag);", "+            if (isFunction(aAST)) {", "+                checkReturnTag(tags, aAST.getLineNo(), !hasInheritDocTag);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1b626e76aa1aa1e000fdd0f360afada", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/DefaultComesLastCheck.java", "commitBeforeChange": "836bb79348590f1a473f66553ea2ce3c9dec2786", "commitAfterChange": "fab025f0d1561155fc05e1b1d4156e5b219517fc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        final DetailAST switchAST = defaultGroupAST.getParent();", "-        final DetailAST lastGroupAST =", "-            switchAST.getLastChild().getPreviousSibling();", "-", "-        if (defaultGroupAST.getLineNo() != lastGroupAST.getLineNo()", "-            || defaultGroupAST.getColumnNo() != lastGroupAST.getColumnNo())", "+        //default keywords used in annotations too - not what we're", "+        //interested in", "+        if (defaultGroupAST.getType() != TokenTypes.ANNOTATION_FIELD_DEF)", "-            log(aAST, \"default.comes.last\");", "+            final DetailAST switchAST = defaultGroupAST.getParent();", "+            final DetailAST lastGroupAST =", "+                switchAST.getLastChild().getPreviousSibling();", "+", "+            if (defaultGroupAST.getLineNo() != lastGroupAST.getLineNo()", "+                || defaultGroupAST.getColumnNo() != lastGroupAST.getColumnNo())", "+            {", "+                log(aAST, \"default.comes.last\");", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f13fbbb1cbf726df0c120a94c74d9417", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/HtmlTag.java", "commitBeforeChange": "a7bede3cb47427c4853b0375b873d541b99a38f3", "commitAfterChange": "30a895e5893ae99b41c5f8cdb56abafdbeeb3712", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public boolean isCloseTag()", "signatureAfterChange": "     public boolean isCloseTag()", "diff": ["+        if (mPosition == (mText.length() - 1)) {", "+            return false;", "+        }"]}]}