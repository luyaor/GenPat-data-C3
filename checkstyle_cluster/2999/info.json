{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eabac87d6cc66f6f3ac5c5ba34a3e9c6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39d0d8d09d220568b4841626741d180f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "c977a637ce4d87bd3643420ec52c39e724dbdde3", "commitAfterChange": "ff5ffa96021281519cc087dfd35609a06340f349", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          public void testIgnoreNone()         throws Exception", "signatureAfterChange": "          public void testIgnoreNone()         throws Exception", "diff": ["-            \"131:32: '378' is a magic number.\",", "+            \"131:20: '378' is a magic number.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75df6065ab20e1a3192615a408ebe4f7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testEmptyStatements()         throws Exception", "signatureAfterChange": "      public void testEmptyStatements()         throws Exception", "diff": ["-           \"22:15: Empty statement.\",", "+           \"22:19: Empty statement.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ef07b7fed8459ffde104f8520fa8994", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testSwitchBlockAsSingleDecisionPointSetToTrue() throws Exception", "signatureAfterChange": "      @Test     public void testSwitchBlockAsSingleDecisionPointSetToTrue() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputComplexityCheckSwitchBlocks.java\"), expected);", "+        verify(checkConfig, getPath(\"InputComplexitySwitchBlocks.java\"), expected);"]}]}