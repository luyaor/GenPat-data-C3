{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "977fb29f09537b3244774460bae0d2fd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f9b1b3fe31b0d490a2c2e348948af3c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "d622cf7e4255dd35e2592a71653c51e7c2b698f0", "commitAfterChange": "44e3d33fc25d44157486288d5c77de75156984cb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void process(File aFile)", "signatureAfterChange": "     private void process(File aFile)", "diff": ["-                    0,", "+                    re.getLine(),", "+                    re.getColumn(),", "+        catch (TokenStreamRecognitionException tre) {", "+            Utils.getExceptionLogger()", "+                .debug(\"TokenStreamRecognitionException occured.\", tre);", "+            final RecognitionException re = tre.recog;", "+            if (re != null) {", "+                getMessageCollector().add(", "+                    new LocalizedMessage(", "+                        re.getLine(),", "+                        re.getColumn(),", "+                        Defn.CHECKSTYLE_BUNDLE,", "+                        \"general.exception\",", "+                        new String[] {re.getMessage()},", "+                        this.getClass()));", "+            }", "+            else {", "+                getMessageCollector().add(", "+                    new LocalizedMessage(", "+                        0,", "+                        Defn.CHECKSTYLE_BUNDLE,", "+                        \"general.exception\",", "+                        new String[] {re.getMessage()},", "+                        this.getClass()));", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbfc1feab3b6e43c67e7edf50a6cc8c7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "1a7694f787314c10700fb3d038c524e33542b950", "commitAfterChange": "503677ccb90a0068fefba773dd04c534359aec18", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "     private void checkThrowsTags(List aTags, List aThrows)", "signatureAfterChange": "     private void checkThrowsTags(List aTags, List aThrows)", "diff": ["-            // Handle extra JavadocTag", "+            // Handle extra JavadocTag.", "-                log(tag.getLineNo(),", "-                    \"Unused @throws tag for '\" + tag.getArg1() + \"'.\");", "+                // TODO: Need write unit tests.", "+                boolean reqd = true;", "+                if (mConfig.isEnableCheckUnusedThrows()) {", "+                    try {", "+                        reqd = !Utils.isRuntimeException(", "+                            tag.getArg1(),", "+                            this.getClass().getClassLoader());", "+                    }", "+                    catch (ClassNotFoundException e) {", "+                        log(tag.getLineNo(),", "+                            \"Unable to get class information for @throws tag '\"", "+                            + tag.getArg1() + \"'.\");", "+                    }", "+                }", "+", "+                if (reqd) {", "+                    log(tag.getLineNo(),", "+                        \"Unused @throws tag for '\" + tag.getArg1() + \"'.\");", "+                }"]}]}