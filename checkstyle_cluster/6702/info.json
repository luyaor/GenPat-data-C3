{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3cf707764ab27d02854f831bcf329611", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d73490d8f6334d51d71d2f17c0439c89", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private boolean checkSwitch(final DetailAST aAST, boolean aUseContinue)", "signatureAfterChange": "     private boolean checkSwitch(final DetailAST ast, boolean useContinue)", "diff": ["-    private boolean checkSwitch(final DetailAST aAST, boolean aUseContinue)", "+    private boolean checkSwitch(final DetailAST ast, boolean useContinue)", "-        DetailAST caseGroup = aAST.findFirstToken(TokenTypes.CASE_GROUP);", "+        DetailAST caseGroup = ast.findFirstToken(TokenTypes.CASE_GROUP);", "-            isTerminated &= isTerminated(caseBody, false, aUseContinue);", "+            isTerminated &= isTerminated(caseBody, false, useContinue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc63e1f532f62ee0ad4eca645a592351", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean checkSlist(final DetailAST aAST, boolean aUseBreak,                                boolean aUseContinue)", "signatureAfterChange": "     private boolean checkSlist(final DetailAST ast, boolean useBreak,                                boolean useContinue)", "diff": ["-    private boolean checkSlist(final DetailAST aAST, boolean aUseBreak,", "-                               boolean aUseContinue)", "+    private boolean checkSlist(final DetailAST ast, boolean useBreak,", "+                               boolean useContinue)", "-        DetailAST lastStmt = aAST.getLastChild();", "+        DetailAST lastStmt = ast.getLastChild();", "-            && isTerminated(lastStmt, aUseBreak, aUseContinue);", "+            && isTerminated(lastStmt, useBreak, useContinue);"]}]}