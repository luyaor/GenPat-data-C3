{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f9f8406a57323fba7ff73bbdf47a1e6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67ceb2bea507295821a5b047249a135a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/VerifierImpl.java", "commitBeforeChange": "20caaeb1488a4dacc770f22d463228eeb213d9ad", "commitAfterChange": "3ded7a11556a6258bcddd3ebe2d69a2058675601", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setLines(String[] aLines)", "signatureAfterChange": "     public void setLines(String[] aLines)", "diff": ["-            if (mLines[i].length() > mMaxLineLength) {", "+            if (mLines[i].length() > mConfig.getMaxLineLength()) {", "-                    \"line longer than \" + mMaxLineLength + \" characters\");", "+                    \"line longer than \" + mConfig.getMaxLineLength() +", "+                    \" characters\");", "-            if (!mAllowTabs && (mLines[i].indexOf('\\t') != -1)) {", "+            if (!mConfig.isAllowTabs() && (mLines[i].indexOf('\\t') != -1)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7db82896c67fe99c141da21809d0e138", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/VerifierImpl.java", "commitBeforeChange": "20caaeb1488a4dacc770f22d463228eeb213d9ad", "commitAfterChange": "3ded7a11556a6258bcddd3ebe2d69a2058675601", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void verifyType(MyModifierSet aMods, MyCommonAST aType)", "signatureAfterChange": "     public void verifyType(MyModifierSet aMods, MyCommonAST aType)", "diff": ["-        else if (!mAllowNoAuthor && (MATCH_JAVADOC_AUTHOR.grep(jd).length == 0))", "+        else if (!mConfig.isAllowNoAuthor() &&", "+                 (MATCH_JAVADOC_AUTHOR.grep(jd).length == 0))", "-        if (!mTypeRegexp.match(aType.getText())) {", "+        if (!mConfig.getTypeRegexp().match(aType.getText())) {", "-                \"' must match pattern '\" + mTypePat + \"'.\");", "+                \"' must match pattern '\" + mConfig.getTypePat() + \"'.\");"]}]}