{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4cab37df6cac7ddc61c0cc02f0968e0c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7b23f24eaf1bbdac80b898bf7b52697", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/RedundantModifierTest.java", "commitBeforeChange": "e3134ab9b1e8b2eabe29d8dbdb668656b077e86f", "commitAfterChange": "49b2c723738d731c903c471ba41fceb8837ecf65", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testIt()             throws Exception", "signatureAfterChange": "      public void testIt()             throws Exception", "diff": ["-        final LocalizedMessages msgs = new LocalizedMessages(8);", "-        final TreeWalker walker = new TreeWalker(msgs);", "-        final CheckConfiguration config = new CheckConfiguration();", "-        config.setClassname(RedundantModifierCheck.class.getName());", "-        final Check c = config.createInstance(", "-            Thread.currentThread().getContextClassLoader());", "-        walker.registerCheck(c, config);", "-        final String fname = CheckerTest.getPath(\"InputModifier.java\");", "-        final String[] lines = getLines(fname);", "-        walker.walk(getAST(fname, lines), lines, fname);", "-        assertEquals(2, msgs.getMessages().length);", "-        int idx = 0;", "-        verifyMessage(msgs, idx++, 32, 9, \"Redundant 'public' modifier.\");", "-        verifyMessage(msgs, idx++, 38, 9, \"Redundant 'abstract' modifier.\");", "+        final CheckConfiguration checkConfig = new CheckConfiguration();", "+        checkConfig.setClassname(RedundantModifierCheck.class.getName());", "+        final Checker c = createChecker(checkConfig);", "+        final String fname = getPath(\"InputModifier.java\");", "+        final String[] expected = {", "+            \"32:9: Redundant 'public' modifier.\",", "+            \"38:9: Redundant 'abstract' modifier.\",", "+        };", "+        verify(c, fname, expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e76644753afa251907ce0424fbb729a0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java", "commitBeforeChange": "89668d2a611b5bd56cebad4ba662ee9d688aaa40", "commitAfterChange": "0b4c120056f3b1f0a1780fe19932f4015223d0a8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["+        if (aAST.getType() == TokenTypes.LITERAL_CATCH) {", "+            visitCatch(aAST);", "+        }", "+        else {", "+            visitMethod(aAST);", "+        }", "+    }", "-        if (!aAST.branchContains(TokenTypes.PARAMETER_DEF)) {", "-", "-        DetailAST parameters = aAST.findFirstToken(TokenTypes.PARAMETERS);", "-            if (child.getType() == TokenTypes.PARAMETER_DEF", "-                    && !child.branchContains(TokenTypes.FINAL))", "-                DetailAST paramName = child.findFirstToken(TokenTypes.IDENT);", "-                // TODO: i18n", "-                log(child.getLineNo(), child.getColumnNo(),", "-                    \"Parameter \" + paramName.getText() + \" should be final.\");", "-"]}]}