{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad657926ef3a5e1c0d1159ce1abbc0dd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9926b78b3412345eded7328833222882", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "339a7f5475169e8c9c492d000938059a4ea24785", "commitAfterChange": "c85ec6f26ade692103ac27383a87c3402b4d66ca", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void destroy()", "signatureAfterChange": "     public void destroy()", "diff": ["-        // close all streamable listeners", "+        // close all listeners", "-            final Object obj = it.next();", "-            if (obj instanceof Streamable) {", "-                final Streamable str = (Streamable) obj;", "-                final OutputStream os = str.getOutputStream();", "-                // close only those that can be closed...", "-                if ((os != System.out) && (os != System.err) && (os != null)) {", "-                    try  {", "-                        os.flush();", "-                        os.close();", "-                    }", "-                    catch (IOException ignored) {", "-                    }", "+            final AuditListener listener = (AuditListener) it.next();", "+            final OutputStream os = listener.getOutputStream();", "+            // close only those that can be closed...", "+            if ((os != System.out) && (os != System.err) && (os != null)) {", "+                try  {", "+                    os.flush();", "+                    os.close();", "+                }", "+                catch (IOException ignored) {", "-            it.remove();", "+        it.remove();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdcbd2303cde8acdd736b27fca585342", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "f8f6ded7b447d5136ae01ad878966e2955ca730a", "commitAfterChange": "3c0608f33a6c41cf96056c52ae99070cbe5062d5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void startElement(String aNamespaceURI,                              String aLocalName,                              String aQName,                              Attributes aAtts)", "signatureAfterChange": "     public void startElement(String aNamespaceURI,                              String aLocalName,                              String aQName,                              Attributes aAtts)", "diff": ["-        if (\"check\".equals(aQName)) {", "+        if (\"global\".equals(aQName)) {", "+            isInGlobalElement = true;", "+        }", "+        else if (\"check\".equals(aQName)) {", "-            mCurrent.addProperty(aAtts.getValue(\"name\"),", "-                                 aAtts.getValue(\"value\"));", "+            final String name = aAtts.getValue(\"name\");", "+            String value = aAtts.getValue(\"value\");", "+            ", "+            if (value == null) {", "+                //global?", "+                String globalKey = aAtts.getValue(\"from-global\");", "+                value = (String) mProps.get(globalKey); ", "+            }", "+                ", "+            if (isInGlobalElement) {", "+                mProps.setProperty(name, value);", "+            }", "+            else {", "+                mCurrent.addProperty(name, value);", "+            }", "+"]}]}