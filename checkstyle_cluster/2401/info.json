{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "745f5af79350fb587f43b93df060995e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "033058b3fc1116f6c02033523cae3211", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/EmptyBlockCheck.java", "commitBeforeChange": "da628acc0dd903c7a84565ae82b9c93766443031", "commitAfterChange": "ad0a4e637ab838ab39b27276d949c96fac8ab29a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public int[] getDefaultTokens()", "signatureAfterChange": "     public int[] getDefaultTokens()", "diff": ["-            TokenTypes.LITERAL_SYNCHRONIZED,", "-            //TokenTypes.LITERAL_SWITCH,      ", "+            //TokenTypes.LITERAL_SWITCH,", "+            //TODO: does this handle TokenTypes.LITERAL_SYNCHRONIZED?      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b35781820e8e9cab384594c74044bb2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "6985c4758d4a3252951a6a26b8efdd7b5f0adff4", "commitAfterChange": "b405880b6e79f143c3ba3651fe6c8b68324fca51", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public int[] getAcceptableTokens()", "signatureAfterChange": "      @Override     public int[] getAcceptableTokens()", "diff": ["-        return new int[] {", "-            TokenTypes.EXPR, TokenTypes.SEMI, TokenTypes.FOR_INIT,", "+        return new int[]{", "+            TokenTypes.SEMI, TokenTypes.FOR_INIT,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59becdfd55d482aa399444734b7faffb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheck.java", "commitBeforeChange": "88696d39221ad75cfc19e082de33a34e21d2d58e", "commitAfterChange": "516b0df8c4cef67ef175fb8cab2365e4e978c721", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public int[] getDefaultTokens()", "signatureAfterChange": "      @Override     public int[] getDefaultTokens()", "diff": ["+            TokenTypes.LITERAL_FINALLY,", "+            TokenTypes.LITERAL_DO,", "+            TokenTypes.LITERAL_IF,", "+            TokenTypes.LITERAL_ELSE,", "+            TokenTypes.LITERAL_FOR,", "+            TokenTypes.INSTANCE_INIT,", "+            TokenTypes.STATIC_INIT,", "+            TokenTypes.LITERAL_SWITCH,", "+            //TODO: does this handle TokenTypes.LITERAL_SYNCHRONIZED?", "+        };", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b246a99af3eb911ee74d723638bd2375", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LocalVariableNameCheck.java", "commitBeforeChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "commitAfterChange": "137a6d4175967155c3e8f37c6d9b4fd496d0cec6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public int[] getAcceptableTokens()", "signatureAfterChange": "      @Override     public int[] getAcceptableTokens()", "diff": ["-            TokenTypes.PARAMETER_DEF,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f70d6e0dcd7b1988325efd0450506fbd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/CovariantEqualsCheck.java", "commitBeforeChange": "cc822a77b4846b180eef883288627aff2d85384d", "commitAfterChange": "a03dc8c1c9b1a7308be5e92324efab3413f6a771", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public int[] getDefaultTokens()", "signatureAfterChange": "     public int[] getDefaultTokens()", "diff": ["-        return new int[] {", "-            TokenTypes.CLASS_DEF,", "-            TokenTypes.LITERAL_NEW,", "-            TokenTypes.METHOD_DEF,", "-        };", "+        return new int[] {TokenTypes.CLASS_DEF, TokenTypes.LITERAL_NEW, };"]}]}