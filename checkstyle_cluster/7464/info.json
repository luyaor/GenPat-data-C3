{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aafd3d777c90566f098f31ddcd316dbc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fec3869bc34f74b7adce30e1d07314e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "1f33757f8fc4f5f6f52620658b7665dda5f03387", "commitAfterChange": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines) throws CheckstyleException", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines) throws CheckstyleException", "diff": ["-            final String exceptionMsg = String.format(msg, \"TokenStreamRecognitionException\",", "-                     fileName);", "+            final String exceptionMsg = String.format(Locale.ROOT, msg,", "+                    \"TokenStreamRecognitionException\", fileName);", "-            final String exceptionMsg = String.format(msg, ex.getClass().getSimpleName(), fileName);", "+            final String exceptionMsg = String.format(Locale.ROOT, msg,", "+                    ex.getClass().getSimpleName(), fileName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6522be4289f1c2ce9114599648709443", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/IndentationConfigurationBuilder.java", "commitBeforeChange": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c", "commitAfterChange": "7d5db23ad528c95e0fbdfcd1293424c6240db07b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private static Integer[] getLinesWithWarnAndCheckComments(String aFileName,             final int tabWidth)                     throws IOException", "signatureAfterChange": "      private static Integer[] getLinesWithWarnAndCheckComments(String aFileName,             final int tabWidth)                     throws IOException", "diff": ["-                        throw new IllegalStateException(String.format(", "+                        throw new IllegalStateException(String.format(Locale.ROOT,", "-                        throw new IllegalStateException(String.format(", "+                        throw new IllegalStateException(String.format(Locale.ROOT,", "-                    throw new IllegalStateException(String.format(", "+                    throw new IllegalStateException(String.format(Locale.ROOT,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "741cb18caac773289fbaf0c230f28e44", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c", "commitAfterChange": "7d5db23ad528c95e0fbdfcd1293424c6240db07b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      private static Integer[] getLinesWithWarnAndCheckComments(String aFileName,             final int tabWidth)                     throws IOException", "signatureAfterChange": "      private static Integer[] getLinesWithWarnAndCheckComments(String aFileName,             final int tabWidth)                     throws IOException", "diff": ["-                        throw new IllegalStateException(String.format(", "+                        throw new IllegalStateException(String.format(Locale.ROOT,", "-                        throw new IllegalStateException(String.format(", "+                        throw new IllegalStateException(String.format(Locale.ROOT,", "-                    throw new IllegalStateException(String.format(", "+                    throw new IllegalStateException(String.format(Locale.ROOT,"]}]}