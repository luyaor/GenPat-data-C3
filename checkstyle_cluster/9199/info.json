{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "739bb0952be5acd3bcdd04af4d4aafee", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "226a0b4f7238d75654a6e61904383c3c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "d3aa5da76d137f8ab6c1238b02285fc16d29079f", "commitAfterChange": "00447a8fe3741b163901128b01ab7087392fc7c6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "signatureAfterChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "diff": ["+        setIllegalImports(", "+            aProps.getProperty(ILLEGAL_IMPORTS_PROP, ILLEGAL_IMPORTS));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2721f5ac817c6319fc0a8a7a123e45bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/transmogrify/TableMaker.java", "commitBeforeChange": "0bef5991348beca2e84a2b711d734b689c494f15", "commitAfterChange": "3f09770c89ed82c8157fbb11047a52e4c5c2a75e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void walkTree(SymTabAST tree, boolean makeAnonymousScopes)", "signatureAfterChange": "   public void walkTree(SymTabAST tree, boolean makeAnonymousScopes)", "diff": ["+        //walk parameters, in case of anonymous inner class", "+        walkTree(symtabTree.findFirstToken(TokenTypes.ELIST),", "+          makeAnonymousScopes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "281cb35f56db966b84a2f941999a7bd0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigSerializationTest.java", "commitBeforeChange": "d8d9269bbc4bf33c9a28a33576f4ac47e5659548", "commitAfterChange": "37e181d6dcb58b97503bf435408d418b9dd6216f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testRegexpDesrialization()         throws Exception", "signatureAfterChange": "     public void testRegexpDeserialization()         throws Exception", "diff": ["-    public void testRegexpDesrialization()", "+    public void testRegexpDeserialization()", "+        assertNotNull(configCopy.getClassLoader());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a92b827e48930c4bd73d3ace2ace31b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "c9db9f82e2311350bba5fd7e4042ae69f503e60b", "commitAfterChange": "faf76530d87662e93197f00d1d818f3f6a481763", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     void verifyMethod(MethodSignature aSig)", "signatureAfterChange": "     void verifyMethod(MethodSignature aSig)", "diff": ["+        // Always check that the order of modifiers follows the JLS suggestion", "+        checkModOrder(aSig.getModSet());", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a7a79f27a8931b3cf8cf0285c6f76ee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "65989e76a40bf085059ee2bf9c695c6b45a771fb", "commitAfterChange": "fca8c918043974fcf6cc59e5d4161ada0b7c4c76", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "signatureAfterChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "diff": ["+        setTodoPat(aProps.getProperty(TODO_PATTERN_PROP, TODO_PATTERN));", "-        setStaticPat(aProps.getProperty(STATIC_PATTERN_PROP,", "-                                        STATIC_PATTERN));", "+        setStaticPat(aProps.getProperty(STATIC_PATTERN_PROP, STATIC_PATTERN));", "-        setMemberPat(aProps.getProperty(MEMBER_PATTERN_PROP,", "-                                        MEMBER_PATTERN));", "+        setMemberPat(aProps.getProperty(MEMBER_PATTERN_PROP, MEMBER_PATTERN));", "-        setTypePat(aProps.getProperty(TYPE_PATTERN_PROP,", "-                                      TYPE_PATTERN));", "+        setTypePat(aProps.getProperty(TYPE_PATTERN_PROP, TYPE_PATTERN));", "-        setMethodPat(aProps.getProperty(METHOD_PATTERN_PROP,", "-                                        METHOD_PATTERN));", "+        setMethodPat(aProps.getProperty(METHOD_PATTERN_PROP, METHOD_PATTERN));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51d3c26456626c6e2084b2949acaa668", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "66b07f10afe9882ba16db9bf66c7cb3c508b278b", "commitAfterChange": "f7698ed23b365bce680b6ec8cd00b78e148582ac", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     private void checkComment(DetailAST ast, TextBlock comment)", "signatureAfterChange": "     private void checkComment(DetailAST ast, TextBlock comment)", "diff": ["-        if (ast.getType() != TokenTypes.ANNOTATION_FIELD_DEF) {", "+        if (ast.getType() == TokenTypes.ANNOTATION_FIELD_DEF) {", "+            checkReturnTag(tags, ast.getLineNo(), true);", "+        }", "+        else {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9197b42882f6eb702ad5b70b0039212c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "ba60fc038fcea18546b532064596149bcd5effe2", "commitAfterChange": "139609ac5d073ecb04381466f075f174b0aec8c9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setGroups(String[] aGroups)", "signatureAfterChange": "     public void setGroups(String[] aGroups)", "diff": ["+        // set the default wildcard group to be after the last named group.", "+        mWildcardGroupIndex = aGroups.length;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "920398813e9f7b8c5bfc5599edb1e9d3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "fa128598e1f70bbfb8a953dc8cb8b791a5fa67d2", "commitAfterChange": "d3f39e6b87a10ee26aa8da532b545e54090e7761", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "signatureAfterChange": "     Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "diff": ["+        setPublicMemberPat(aProps.getProperty(PUBLIC_MEMBER_PATTERN_PROP,", "+                                              PUBLIC_MEMBER_PATTERN));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "922e9a5b322b433d68acc23fedc00fce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "ed3e6a24280557d3142d1feb18363e7f3b7bfc3f", "commitAfterChange": "62e2b65b9e6d948a39006aaa9a88e61e3ed0df53", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "signatureAfterChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "diff": ["+        setIgnoreLineLengthPat(aProps.getProperty(", "+            IGNORE_LINE_LENGTH_PATTERN_PROP, IGNORE_LINE_LENGTH_PATTERN));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a51bcf12a305384b8d6d655d8eb33f9a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "0e62f23a10fc00f43cd84d5e169336911fdf27aa", "commitAfterChange": "bbe51f6884ac0a961f55310e15ec90411709d970", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "signatureAfterChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "diff": ["+        setBasedir(aProps.getProperty(Defn.BASEDIR_PROP));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8f4b1fcaaec25653a9002b676c4a470", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "b3373646ee85fc7905c3e4f41a0f3929f0e0e822", "commitAfterChange": "6c304950f62f06cb3c72e46869c3fa3fbdc1e7d7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "signatureAfterChange": "     Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "diff": ["+        setCacheFile(aProps.getProperty(CACHE_FILE_PROP));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9e5c6d4d7eaf47e0a6e71bd5b3c3723", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "34770c3eaa9ad06297c13fd43a55739c02c7d67d", "commitAfterChange": "da940af3627944ad412904c15187627151e834e5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "signatureAfterChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "diff": ["+        setIllegalInstantiations(aProps.getProperty(ILLEGAL_INSTANTIATIONS_PROP,", "+                                                   ILLEGAL_INSTANTIATIONS));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c64f5ded4857050341ef6d7d97bb1d68", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "9acdd1b97e561748ae8cc61e11dcc145885ecb6d", "commitAfterChange": "c617457933a978f5fd861d7ea43d05bccf045c16", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public int process(String[] aFiles)", "signatureAfterChange": "     public int process(String[] aFiles)", "diff": ["-        for (int i = 0; i < aFiles.length; i++) {", "+", "+        /*", "+", "+          If you move checkPackageHtml() around beware of the caching", "+          functionality of checkstyle. Make sure that package.html", "+          checks are not skipped because of caching. Otherwise you", "+          might e.g. have a package.html file, check all java files", "+          without errors, delete package.html and then recheck without", "+          errors because the html file is not covered by the cache.", "+", "+        */", "+", "+        total += checkPackageHtml(aFiles);", "+        ", "+        for (int i = 0; i < aFiles.length; i++)", "+        {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caa186ba10d343e1c7a5e58f009d5ec1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "db76ce49052f7b63b1c3743b81c0068ef3f039d8", "commitAfterChange": "95a5040ccc98d1138a82c9e0ebcfe983651219b6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void registerCheck(Check aCheck)         throws CheckstyleException", "signatureAfterChange": "     private void registerCheck(Check aCheck)         throws CheckstyleException", "diff": ["+        int[] tokens = aCheck.getDefaultTokens();", "+            tokens = aCheck.getRequiredTokens();", "+", "+            //register configured tokens", "-        else {", "-            final int[] tokens = aCheck.getDefaultTokens();", "-            for (int i = 0; i < tokens.length; i++) {", "-                registerCheck(tokens[i], aCheck);", "-            }", "+        for (int i = 0; i < tokens.length; i++) {", "+            registerCheck(tokens[i], aCheck);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbd9be02c2551fc520a0a8a8202def73", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "dc4e97d024fea774cecfd8d9501bf3dac4faf45c", "commitAfterChange": "6a9e1b3f93b487b86be7def11a0c9880f01ac29f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public LineWrappingHandler(IndentationCheck aInstance, DetailAST aFirstNode)", "signatureAfterChange": "     public LineWrappingHandler(IndentationCheck aInstance, DetailAST aFirstNode)", "diff": ["+        mForceStrictCondition = mIndentCheck.getForceStrictCondition();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daf506de8b4c0eb2233b61962e4c006b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/MyModifierSet.java", "commitBeforeChange": "dc764f3b6ad475854cd0d22655db3f96e7eb7ed3", "commitAfterChange": "a1cecb5e0658862f957e60a8d5b2ade13b592101", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     void addModifier(MyCommonAST aMCA)", "signatureAfterChange": "     void addModifier(MyCommonAST aMCA)", "diff": ["+            mFirstColNo = aMCA.getColumnNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7bcf452be2476d8a3c91a2cfb84f065", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "contrib/bcel/src/checkstyle/com/puppycrawl/tools/checkstyle/bcel/ReferenceVisitor.java", "commitBeforeChange": "ed7fc0e632848e74d78992a9081ad689fa85e855", "commitAfterChange": "3da302031b2db9966ce7791053e2c0dba095083d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private ReferenceVisitor()", "signatureAfterChange": "     private ReferenceVisitor()", "diff": ["-    private ReferenceVisitor() {", "+    private ReferenceVisitor()", "+    {", "+        addFieldScope(Scope.PRIVATE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f24079e9203d25a2b0029f6a72777a2d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/MethodCountCheck.java", "commitBeforeChange": "5320065461ca38393ab2402c7402cc8f65c331d4", "commitAfterChange": "45b1afd66692e017852016b7148c44ee4760f5d6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void checkCounters(MethodCounter aCounter, DetailAST aAst)", "signatureAfterChange": "     private void checkCounters(MethodCounter aCounter, DetailAST aAst)", "diff": ["+        checkMax(mMaxTotal, aCounter.getTotal(), \"too.many.methods\", aAst);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9e7a553fd2128f9ee13a20004d1cfd1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "commitBeforeChange": "260490c05b6a483ab3b340825dceb64415cdb55a", "commitAfterChange": "949f78ab6084827c8f0027fd0e925133aefdcb70", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["+        publicTypeFound = false;", "+        lineNumberTypeMap.clear();", "+", "-"]}]}