{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5b81d5dea7c761d32ed215c232c14808", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16e9cda352b53307d115b9f0fa27b20d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "52e2087c404986f8e12cd8579be7b2333961e1a3", "commitAfterChange": "c38185458ab824874b8465c46b4dc42646440aaa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setIgnoreStringsRegexp(String aIgnoreStringsRegexp)", "signatureAfterChange": "     public void setIgnoreStringsRegexp(String aIgnoreStringsRegexp)", "diff": ["-        mIgnoreStringsRegexp = aIgnoreStringsRegexp;", "-        if ((mIgnoreStringsRegexp != null)", "-            && (mIgnoreStringsRegexp.length() > 0))", "+        if ((aIgnoreStringsRegexp != null)", "+            && (aIgnoreStringsRegexp.length() > 0))", "-            mPattern = Utils.getPattern(mIgnoreStringsRegexp);", "+            mPattern = Utils.getPattern(aIgnoreStringsRegexp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b8bf951283dc13b739c0abd5982c59b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setIgnoreStringsRegexp(String aIgnoreStringsRegexp)", "signatureAfterChange": "     public void setIgnoreStringsRegexp(String ignoreStringsRegexp)", "diff": ["-    public void setIgnoreStringsRegexp(String aIgnoreStringsRegexp)", "+    public void setIgnoreStringsRegexp(String ignoreStringsRegexp)", "-        if ((aIgnoreStringsRegexp != null)", "-            && (aIgnoreStringsRegexp.length() > 0))", "+        if ((ignoreStringsRegexp != null)", "+            && (ignoreStringsRegexp.length() > 0))", "-            mPattern = Utils.getPattern(aIgnoreStringsRegexp);", "+            pattern = Utils.getPattern(ignoreStringsRegexp);", "-            mPattern = null;", "+            pattern = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50e1a2c7e6d7e9e025e9126e3c1e6317", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "423ed9e469db620671459827b58c89025d8f6c66", "commitAfterChange": "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final void setIgnoreStringsRegexp(String ignoreStringsRegexp)", "signatureAfterChange": "     public final void setIgnoreStringsRegexp(String ignoreStringsRegexp)", "diff": ["-        if (ignoreStringsRegexp != null", "-            && !ignoreStringsRegexp.isEmpty()) {", "-            pattern = CommonUtils.createPattern(ignoreStringsRegexp);", "+        if (ignoreStringsRegexp == null || ignoreStringsRegexp.isEmpty()) {", "+            pattern = null;", "-            pattern = null;", "+            pattern = CommonUtils.createPattern(ignoreStringsRegexp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1c88beea4e2507e655ce50f32773ddc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocVariableCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setIgnoreNamePattern(String aRegexp)", "signatureAfterChange": "     public void setIgnoreNamePattern(String regexp)", "diff": ["-    public void setIgnoreNamePattern(String aRegexp)", "+    public void setIgnoreNamePattern(String regexp)", "-        mIgnoreNameRegexp = aRegexp;", "-        if (!(aRegexp == null || aRegexp.length() == 0)) {", "-            mIgnoreNamePattern = Pattern.compile(aRegexp);", "+        ignoreNameRegexp = regexp;", "+        if (!(regexp == null || regexp.length() == 0)) {", "+            ignoreNamePattern = Pattern.compile(regexp);", "-            mIgnoreNamePattern = null;", "+            ignoreNamePattern = null;"]}]}