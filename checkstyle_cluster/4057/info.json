{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "172947b1feefe266ba8e71df0b15b5b0", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "116992ddaa8dd11362db35002821ba37", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/PackageHtmlCheck.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void process(File[] aFiles)", "signatureAfterChange": "     public void process(File[] aFiles)", "diff": ["-        for (final Iterator<File> it = directories.iterator(); it.hasNext();) {", "-            final File dir = it.next();", "+        for (File dir : directories) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca98883019a16ad985b9517a23ab0dde", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public void destroy()", "signatureAfterChange": "     @Override     public void destroy()", "diff": ["+    @Override", "-        for (final Iterator it = mAllChecks.iterator(); it.hasNext();) {", "-            final Check c = (Check) it.next();", "+        for (Check c : mAllChecks) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddd14118f98e0355b300bb12dcfcd389", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "12acba75f487de0313bb34e02a69081d5a592792", "commitAfterChange": "b3caa3b7ad0a135038c2c1c5bda4fccb897a00c4", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void destroy()", "signatureAfterChange": "     public void destroy()", "diff": ["-        super.destroy();", "+        for (Iterator it = mAllChecks.iterator(); it.hasNext();) {", "+            final Check c = (Check) it.next();", "+            c.destroy();", "+        }", "+        super.destroy();"]}]}