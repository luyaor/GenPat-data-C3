{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ae166da9dca6aa4b29dac974af04d92", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "506c0c79df206adaf4608f43c5d62601", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void logWarningMessage(DetailAST aCurrentNode, int aCurrentIndent)", "signatureAfterChange": "     private void logWarningMessage(DetailAST currentNode, int currentIndent)", "diff": ["-    private void logWarningMessage(DetailAST aCurrentNode, int aCurrentIndent)", "+    private void logWarningMessage(DetailAST currentNode, int currentIndent)", "-        if (mForceStrictCondition) {", "-            if (aCurrentNode.getColumnNo() != aCurrentIndent) {", "-                mIndentCheck.indentationLog(aCurrentNode.getLineNo(),", "-                        \"indentation.error\", aCurrentNode.getText(),", "-                        aCurrentNode.getColumnNo(), aCurrentIndent);", "+        if (forceStrictCondition) {", "+            if (currentNode.getColumnNo() != currentIndent) {", "+                indentCheck.indentationLog(currentNode.getLineNo(),", "+                        \"indentation.error\", currentNode.getText(),", "+                        currentNode.getColumnNo(), currentIndent);", "-            if (aCurrentNode.getColumnNo() < aCurrentIndent) {", "-                mIndentCheck.indentationLog(aCurrentNode.getLineNo(),", "-                        \"indentation.error\", aCurrentNode.getText(),", "-                        aCurrentNode.getColumnNo(), aCurrentIndent);", "+            if (currentNode.getColumnNo() < currentIndent) {", "+                indentCheck.indentationLog(currentNode.getLineNo(),", "+                        \"indentation.error\", currentNode.getText(),", "+                        currentNode.getColumnNo(), currentIndent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88d26591d0bdfec09843ab7f183f7574", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "dc4e97d024fea774cecfd8d9501bf3dac4faf45c", "commitAfterChange": "6a9e1b3f93b487b86be7def11a0c9880f01ac29f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void logWarningMessage(DetailAST aCurrentNode, int aCurrentIndent)", "signatureAfterChange": "     private void logWarningMessage(DetailAST aCurrentNode, int aCurrentIndent)", "diff": ["-        if (aCurrentNode.getColumnNo() < aCurrentIndent) {", "-            mIndentCheck.indentationLog(aCurrentNode.getLineNo(),", "-                    \"indentation.error\", aCurrentNode.getText(),", "-                    aCurrentNode.getColumnNo(), aCurrentIndent);", "+        if (mForceStrictCondition) {", "+            if (aCurrentNode.getColumnNo() != aCurrentIndent) {", "+                mIndentCheck.indentationLog(aCurrentNode.getLineNo(),", "+                        \"indentation.error\", aCurrentNode.getText(),", "+                        aCurrentNode.getColumnNo(), aCurrentIndent);", "+            }", "+        }", "+        else {", "+            if (aCurrentNode.getColumnNo() < aCurrentIndent) {", "+                mIndentCheck.indentationLog(aCurrentNode.getLineNo(),", "+                        \"indentation.error\", aCurrentNode.getText(),", "+                        aCurrentNode.getColumnNo(), aCurrentIndent);", "+            }"]}]}