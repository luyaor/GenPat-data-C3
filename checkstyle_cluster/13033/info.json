{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88bc3dbd2b8f205ee4db7cd62b1b5cac", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "061717801b5c558dce76e8984581b2b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/HeaderInfo.java", "commitBeforeChange": "4542d7c95e17741da7aaedd0dc7d63a73c460cd5", "commitAfterChange": "bd8a1a545fd1bc19d5f84c5061c5383796a7c588", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     final void setHeader(String aHeader)", "signatureAfterChange": "     final void setHeader(String aHeader)", "diff": ["-            throw new ConversionException(", "-                    \"unable to load header\", ex);", "+            throw new ConversionException(\"unable to load header\", ex);", "-            try {", "-                headerReader.close();", "-            }", "-            catch (final IOException ex) {", "-                // shouldn't happen with StringReader", "-                throw new ConversionException(", "-                        \"unable to close header\", ex);", "-            }", "+            Utils.closeQuietly(headerReader);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d49319d3810d0f390ce72d2d907807bb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck.java", "commitBeforeChange": "9cff1673f1d42910c654e0af5365d68591f104f0", "commitAfterChange": "b83c9aceef9577eaada5cfd78bc7b2cd04a176d1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setHeader(String aHeader)", "signatureAfterChange": "     public void setHeader(String aHeader)", "diff": ["-        mHeaderInfo.setHeader(aHeader);", "+        if ((aHeader == null) || (aHeader.trim().length() == 0)) {", "+            return;", "+        }", "+", "+        checkHeaderNotInitialized();", "+", "+        final String headerExpandedNewLines = aHeader.replaceAll(\"\\\\\\\\n\", \"\\n\");", "+", "+        final Reader headerReader = new StringReader(headerExpandedNewLines);", "+        try {", "+            loadHeader(headerReader);", "+        }", "+        catch (final IOException ex) {", "+            throw new ConversionException(\"unable to load header\", ex);", "+        }", "+        finally {", "+            Utils.closeQuietly(headerReader);", "+        }", "+    }"]}]}