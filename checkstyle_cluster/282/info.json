{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3cf21797a71e31928667d8b80c5a675", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "080a541411cce24f1ffb616f242519e2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "6bfb6b7b1a711e3bea8ac47e81045794460c877c", "commitAfterChange": "22d0ed9d4cf3c92e70d6315637ce36d572e91e98", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     static String replaceProperties(String aValue, PropertyResolver aProps)         throws CheckstyleException", "signatureAfterChange": "     static String replaceProperties(             String aValue, PropertyResolver aProps, String aDefaultValue)         throws CheckstyleException", "diff": ["-    static String replaceProperties(String aValue, PropertyResolver aProps)", "+    // Package visible for testing purposes", "+    static String replaceProperties(", "+            String aValue, PropertyResolver aProps, String aDefaultValue)", "+                if (fragment == null) {", "+                    if (aDefaultValue != null) {", "+                        return aDefaultValue;", "+                    }", "+                    throw new CheckstyleException(", "+                        \"Property ${\" + propertyName + \"} has not been set\");", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6de65702c2d08ea9bed9a14d42607b21", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java", "commitBeforeChange": "4010f97130bfd93d769afb5dcfa34cf4804d822b", "commitAfterChange": "e1761d121db0df2f9e31d7f3ab4337c9584adc71", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private boolean endsWithNewline(RandomAccessFile aRandomAccessFile)         throws IOException", "signatureAfterChange": "     private boolean endsWithNewline(RandomAccessFile aRandomAccessFile)         throws IOException", "diff": ["-        aRandomAccessFile.read(lastBytes);", "+        final int readBytes = aRandomAccessFile.read(lastBytes);", "+        if (readBytes != len) {", "+            throw new IOException(\"Unable to read \" + len + \" bytes, got \"", "+                    + readBytes);", "+        }"]}]}