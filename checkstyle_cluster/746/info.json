{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5783cf7eeae148f76f2ca34ef0e4394d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db2fc917024efc16b588526dbed40f84", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static boolean branchContains(DetailNode aNode, int aType)", "signatureAfterChange": "     public static boolean branchContains(DetailNode node, int type)", "diff": ["-    public static boolean branchContains(DetailNode aNode, int aType)", "+    public static boolean branchContains(DetailNode node, int type)", "-        DetailNode curNode = aNode;", "+        DetailNode curNode = node;", "-            if (aType == curNode.getType()) {", "+            if (type == curNode.getType()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df481bcdb1ef3c33a1ebf798d731b1bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static DetailNode findFirstToken(DetailNode aNode, int aType)", "signatureAfterChange": "     public static DetailNode findFirstToken(DetailNode node, int type)", "diff": ["-    public static DetailNode findFirstToken(DetailNode aNode, int aType)", "+    public static DetailNode findFirstToken(DetailNode node, int type)", "-        for (DetailNode i = getFirstChild(aNode); i != null; i = getNextSibling(i)) {", "-            if (i.getType() == aType) {", "+        for (DetailNode i = getFirstChild(node); i != null; i = getNextSibling(i)) {", "+            if (i.getType() == type) {"]}]}