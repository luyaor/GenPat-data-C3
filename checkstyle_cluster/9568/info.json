{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b44dbd37db2c031aca4bca72e2e5dd9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9525c5f24d859d81e372b4e5f7de227a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "88edaa84fdcd29fe5cce6c3497cb326244b14197", "commitAfterChange": "067896807847df81ba6e65195e4f39069dc3aea7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testRemoveListener() throws Exception", "signatureAfterChange": "      @Test     public void testRemoveListener() throws Exception", "diff": ["-        final DebugAuditAdapter aa = new DebugAuditAdapter();", "+        final DebugAuditAdapter auditAdapter = new DebugAuditAdapter();", "-        c.addListener(aa);", "+        c.addListener(auditAdapter);", "-        c.removeListener(aa);", "+        c.removeListener(auditAdapter);", "-        assertFalse(\"Checker.fireAuditStarted() does call removed listener\", aa.wasCalled());", "+        assertFalse(\"Checker.fireAuditStarted() does call removed listener\", auditAdapter.wasCalled());", "-        assertFalse(\"Checker.fireAuditFinished() does call removed listener\", aa.wasCalled());", "+        assertFalse(\"Checker.fireAuditFinished() does call removed listener\", auditAdapter.wasCalled());", "-        assertFalse(\"Checker.fireFileStarted() does call removed listener\", aa.wasCalled());", "+        assertFalse(\"Checker.fireFileStarted() does call removed listener\", auditAdapter.wasCalled());", "-        assertFalse(\"Checker.fireFileFinished() does call removed listener\", aa.wasCalled());", "+        assertFalse(\"Checker.fireFileFinished() does call removed listener\", auditAdapter.wasCalled());", "-        assertFalse(\"Checker.fireErrors() does call removed listener\", aa.wasCalled());", "+        assertFalse(\"Checker.fireErrors() does call removed listener\", auditAdapter.wasCalled());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a027a97bb25da57fd7f584a3f5bef0ad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "88edaa84fdcd29fe5cce6c3497cb326244b14197", "commitAfterChange": "067896807847df81ba6e65195e4f39069dc3aea7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testAddListener() throws Exception", "signatureAfterChange": "      @Test     public void testAddListener() throws Exception", "diff": ["-        final DebugAuditAdapter aa = new DebugAuditAdapter();", "-        c.addListener(aa);", "+        final DebugAuditAdapter auditAdapter = new DebugAuditAdapter();", "+        c.addListener(auditAdapter);", "-        assertTrue(\"Checker.fireAuditStarted() doesn't call listener\", aa.wasCalled());", "+        assertTrue(\"Checker.fireAuditStarted() doesn't call listener\", auditAdapter.wasCalled());", "-        aa.resetListener();", "+        auditAdapter.resetListener();", "-        assertTrue(\"Checker.fireAuditFinished() doesn't call listener\", aa.wasCalled());", "+        assertTrue(\"Checker.fireAuditFinished() doesn't call listener\", auditAdapter.wasCalled());", "-        aa.resetListener();", "+        auditAdapter.resetListener();", "-        assertTrue(\"Checker.fireFileStarted() doesn't call listener\", aa.wasCalled());", "+        assertTrue(\"Checker.fireFileStarted() doesn't call listener\", auditAdapter.wasCalled());", "-        aa.resetListener();", "+        auditAdapter.resetListener();", "-        assertTrue(\"Checker.fireFileFinished() doesn't call listener\", aa.wasCalled());", "+        assertTrue(\"Checker.fireFileFinished() doesn't call listener\", auditAdapter.wasCalled());", "-        aa.resetListener();", "+        auditAdapter.resetListener();", "-        assertTrue(\"Checker.fireErrors() doesn't call listener\", aa.wasCalled());", "+        assertTrue(\"Checker.fireErrors() doesn't call listener\", auditAdapter.wasCalled());"]}]}