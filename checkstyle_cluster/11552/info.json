{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "400be41055b78c87c1158989621e332b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6b5521ab8896c14365ee1369f6dd052", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "59aa66c3cc43db0a7cd8bb0ea3a39b6f4339fe88", "commitAfterChange": "a24df47cafeab03fd65cf72b460aad3d2fafce3d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public int getColumnNo()", "signatureAfterChange": "     public int getColumnNo()", "diff": ["-            final DetailAST child = getFirstChild();", "-            final DetailAST sibling = getNextSibling();", "-            if (child != null) {", "-                return child.getColumnNo();", "+            DetailAST child = getFirstChild();", "+            while (child != null) {", "+                // comment node can't be start of any java statement/definition", "+                if (TokenTypes.isCommentType(child.getType())) {", "+                    child = child.getNextSibling();", "+                }", "+                else {", "+                    return child.getColumnNo();", "+                }", "-            else if (sibling != null) {", "-                return sibling.getColumnNo();", "+", "+            DetailAST sibling = getNextSibling();", "+            while (sibling != null) {", "+                // comment node can't be start of any java statement/definition", "+                if (TokenTypes.isCommentType(sibling.getType())) {", "+                    sibling = sibling.getNextSibling();", "+                }", "+                else {", "+                    return sibling.getColumnNo();", "+                }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c99b71902881f4862702c1148bf3d98d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "59aa66c3cc43db0a7cd8bb0ea3a39b6f4339fe88", "commitAfterChange": "a24df47cafeab03fd65cf72b460aad3d2fafce3d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public int getLineNo()", "signatureAfterChange": "     public int getLineNo()", "diff": ["-            final DetailAST child = getFirstChild();", "-            final DetailAST sibling = getNextSibling();", "-            if (child != null) {", "-                return child.getLineNo();", "+            DetailAST child = getFirstChild();", "+            while (child != null) {", "+                // comment node can't be start of any java statement/definition", "+                if (TokenTypes.isCommentType(child.getType())) {", "+                    child = child.getNextSibling();", "+                }", "+                else {", "+                    return child.getLineNo();", "+                }", "-            else if (sibling != null) {", "-                return sibling.getLineNo();", "+", "+            DetailAST sibling = getNextSibling();", "+            while (sibling != null) {", "+                // comment node can't be start of any java statement/definition", "+                if (TokenTypes.isCommentType(sibling.getType())) {", "+                    sibling = sibling.getNextSibling();", "+                }", "+                else {", "+                    return sibling.getLineNo();", "+                }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb4bf9701f405fae9b05dd6b63203168", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/RedundantImportCheck.java", "commitBeforeChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "commitAfterChange": "6125beffc437f970eae276b4a6542265c6547784", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            final DetailAST nameAST = (DetailAST) aAST.getFirstChild();", "-            mPkgName = FullIdent.createFullIdent(nameAST).getText();", "+            mPkgName =", "+                FullIdent.createFullIdent(", "+                    (DetailAST) aAST.getLastChild()", "+                        .getPreviousSibling()).getText();", "-        else {", "+        else if (aAST.getType() == TokenTypes.IMPORT) {", "+        else {", "+            // Check for a duplicate static import", "+            final FullIdent imp =", "+                FullIdent.createFullIdent(", "+                    aAST.getLastChild().getPreviousSibling());", "+            final Iterator it = mStaticImports.iterator();", "+            while (it.hasNext()) {", "+                final FullIdent full = (FullIdent) it.next();", "+                if (imp.getText().equals(full.getText())) {", "+                    log(aAST.getLineNo(),", "+                        aAST.getColumnNo(),", "+                        \"import.duplicate\",", "+                        new Integer(full.getLineNo()),", "+                        imp.getText());", "+                }", "+            }", "+", "+            mStaticImports.add(imp);", "+        }"]}]}