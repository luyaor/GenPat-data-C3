{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ec64b5b71da236de52648c47acb9b65", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d9981f214ff2a3e63fcdd9ba218d86d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java", "commitBeforeChange": "2282f82cb7fd2055245d3bcb4b76c6c27fdd5455", "commitAfterChange": "f1dc9b205d1ccdba85e34f4cb7adf9ffd4af2361", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static Details getDetails(DetailAST ast)", "signatureAfterChange": "     private static Details getDetails(DetailAST ast)", "diff": ["-            case TokenTypes.METHOD_DEF:", "-            case TokenTypes.LITERAL_FOR:", "-            case TokenTypes.LITERAL_WHILE:", "-            case TokenTypes.LITERAL_DO:", "+            default:", "+//              ATTENTION! We have default here, but we expect case TokenTypes.METHOD_DEF,", "+//              TokenTypes.LITERAL_FOR, TokenTypes.LITERAL_WHILE, TokenTypes.LITERAL_DO only.", "+//              It has been done to improve coverage to 100%. I couldn't replace it with", "+//              if-else-if block because code was ugly and didn't pass pmd check.", "+", "-            default:", "-                throw new IllegalStateException(\"Unexpected token type (\"", "-                        + Utils.getTokenName(ast.getType()) + \")\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec1a90629ac7cbf08b9678ce488af194", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java", "commitBeforeChange": "8ef4a669c0ac0cc625c2396c8166037019f51ac9", "commitAfterChange": "c2ca14da23eff6cc1a89b4d5f2ff3da7d4f8afbc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (TokenTypes.CLASS_DEF == ast.getType()", "-            || TokenTypes.INTERFACE_DEF == ast.getType()", "-            || TokenTypes.ENUM_CONSTANT_DEF == ast.getType()", "-            || TokenTypes.ENUM_DEF == ast.getType()) {", "+        if (TokenTypes.METHOD_DEF == ast.getType()) {", "+            raiseCounter(ast);", "+        }", "+        else {", "-        }", "-        else if (TokenTypes.METHOD_DEF == ast.getType()) {", "-            raiseCounter(ast);"]}]}