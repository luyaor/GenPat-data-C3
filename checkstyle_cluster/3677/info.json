{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1265cfeaf7955ade0bc00ad0da047c80", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15072990170022624e2fb6830738e6cc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheckTest.java", "commitBeforeChange": "18570b7a08376b5b823bd67bfd93b79e0c4fbb1b", "commitAfterChange": "fab2296f6259c55589b4b93c5cea2eb4a90b3569", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testMax() throws Exception", "signatureAfterChange": "      @Test     public void testMax() throws Exception", "diff": ["-        checkConfig.addAttribute(\"max\", \"2\");", "+        checkConfig.addAttribute(\"max\", \"5\");", "-            \"22:20: \" + getCheckMessage(MSG_KEY, 3, 2),", "+            \"27:20: \" + getCheckMessage(MSG_KEY, 6, 5),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45895c182b9985c242902629a060003f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheckTest.java", "commitBeforeChange": "3c988d95d9bf98e33b764a2b65dba99f4bc2c479", "commitAfterChange": "b519429598906188bdf5aeae44a83a5aa6630e52", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "     @Test     public void testDefault() throws Exception", "diff": ["-            \"30:8: Unused import - java.awt.Label.\",", "-            \"31:8: Unused import - java.util.Date.\",", "-            \"32:8: Unused import - java.util.Calendar.\",", "-            \"33:8: Unused import - java.util.BitSet.\",", "+            \"30:8: Unused import - java.awt.Graphics2D.\",", "+            \"31:8: Unused import - java.awt.HeadlessException.\",", "+            \"32:8: Unused import - java.awt.Label.\",", "+            \"33:8: Unused import - java.util.Date.\",", "+            \"34:8: Unused import - java.util.Calendar.\",", "+            \"35:8: Unused import - java.util.BitSet.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c01ce8a383bb235f97a3b11c04f4fe4a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "fa128598e1f70bbfb8a953dc8cb8b791a5fa67d2", "commitAfterChange": "d3f39e6b87a10ee26aa8da532b545e54090e7761", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void testInner()         throws Exception", "signatureAfterChange": "      public void testInner()         throws Exception", "diff": ["-            \"InputInner.java:17: variable 'data' missing Javadoc.\",", "-            \"InputInner.java:17: variable 'data' must be private and have accessor methods.\",", "+            \"InputInner.java:17: variable 'fData' missing Javadoc.\",", "-            \"InputInner.java:30: variable 'data' missing Javadoc.\",", "-            \"InputInner.java:30: variable 'data' must be private and have accessor methods.\"", "+            \"InputInner.java:30: variable 'rData' missing Javadoc.\",", "+            \"InputInner.java:30: variable 'rData' must be private and have accessor methods.\"", "+        };", "+        verify(c, \"InputInner.java\", expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f029bc6f0beddc255c103b2d49f428d5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "343e946b076a5344e380c76e5b3ea23438b6fc93", "commitAfterChange": "e3a48d1527341456a798c3f0c1986de6898a8c60", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 38, "signatureBeforeChange": "      @Test     public void testInvalidAssignWithChecker() throws Exception", "signatureAfterChange": "      @Test     public void testInvalidAssignWithChecker() throws Exception", "diff": ["-            \"8: method call child at indentation level 10 not at correct indentation, 12\",", "-            \"10: method call child at indentation level 10 not at correct indentation, 12\",", "-            \"12: method call child at indentation level 10 not at correct indentation, 12\",", "-            \"14: assign at indentation level 9 not at correct indentation, 12\",", "-            \"15: assign child at indentation level 10 not at correct indentation, 12\",", "+            \"8: 'getLineNo' have incorrect indentation level 10, expected level should be 12.\",", "+            \"10: 'getLine' have incorrect indentation level 10, expected level should be 12.\",", "+            \"14: '=' have incorrect indentation level 9, expected level should be 12.\",", "+            \"15: '1' have incorrect indentation level 10, expected level should be 12.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8eb70a6884c6d9bf93a62dbb44a3512", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "adce874628730a881c533bb04db2688d03a60fc6", "commitAfterChange": "33b703a724ddd2090f771cb9834c85e0ccb569e1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void testInvalidClassDefWithChecker()         throws Exception", "signatureAfterChange": "     public void testInvalidClassDefWithChecker()         throws Exception", "diff": ["-            \"92: class def child at indentation level 6 not at correct indentation, 8\",", "-            \"98: class def child at indentation level 10 not at correct indentation, 12\",", "-            \"103: class def child at indentation level 6 not at correct indentation, 8\",", "+            \"92: member def modifier at indentation level 6 not at correct indentation, 8\",", "+            \"93: member def type at indentation level 12 not at correct indentation, 8\",", "+            \"98: member def type at indentation level 10 not at correct indentation, 8\",", "+            \"103: member def modifier at indentation level 6 not at correct indentation, 8\",", "-            \"124: class def child at indentation level 10 not at correct indentation, 12\",", "+            \"124: member def type at indentation level 10 not at correct indentation, 12\","]}]}