{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0016b1ad6f02911fb713a9bf89832e20", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb23c0560a7162831a0b6ba50274506b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "commitBeforeChange": "4f73fffde83e584afeec17f39935078d656b7e21", "commitAfterChange": "aaf606ee0268f140c3694baba4c13b03f7839522", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static boolean isSingleLineFor(DetailAST literalFor)", "signatureAfterChange": "     private static boolean isSingleLineFor(DetailAST literalFor)", "diff": ["-            result = literalFor.getLineNo() == block.getLineNo();", "+            if (block == null) {", "+                result = literalFor.getLineNo() == literalFor.getLastChild().getLineNo();", "+            }", "+            else {", "+                result = literalFor.getLineNo() == block.getLineNo();", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d22cb74816985faa36a5e07a98c1644e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "commitBeforeChange": "db642355f8888d294815c7be72b09e2e61459c00", "commitAfterChange": "ee5d8ec0360a1e7f9790a050bc7a00ac362e2015", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private static boolean isSingleLineFor(DetailAST literalFor)", "signatureAfterChange": "     private static boolean isSingleLineFor(DetailAST literalFor)", "diff": ["-            final DetailAST block = findExpressionBlockInForLoop(literalFor);", "-            if (block == null) {", "-                result = literalFor.getLineNo() == literalFor.getLastChild().getLineNo();", "-            }", "-            else {", "-                result = literalFor.getLineNo() == block.getLineNo();", "-            }", "+            result = literalFor.getLineNo() == literalFor.getLastChild().getLineNo();", "-    }"]}]}