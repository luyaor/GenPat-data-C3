{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9762c09e79cd196997f43ddc1226f335", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20fd665ab7ceaf382b34f5b7b708400d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/doclets/TokenTypesDoclet.java", "commitBeforeChange": "0e7ff063f8a07d9a5bf13a8b2c22bb8b8abf8162", "commitAfterChange": "9fe85771081f675ffba46da219957c3450801c92", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static boolean start(RootDoc root)             throws FileNotFoundException, UnsupportedEncodingException", "signatureAfterChange": "     public static boolean start(RootDoc root)             throws FileNotFoundException, UnsupportedEncodingException", "diff": ["-            if (classes.length != 1", "-                || !\"TokenTypes\".equals(classes[0].name())) {", "-                final String message =", "-                    \"The doclet should be used for TokenTypes only\";", "-                throw new IllegalArgumentException(message);", "-            }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "406d3e0247c4759facf3b0d7a6cb04a4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "5fc3ff2bfbed94f88e1af95f38e970a832e4dbe6", "commitAfterChange": "1321eda54e2ffc4fe1755228b1bf8d02681ae79c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     void reportCComment(int aStartLineNo, int aStartColNo,                         int aEndLineNo, int aEndColNo)", "signatureAfterChange": "     void reportCComment(int aStartLineNo, int aStartColNo,                         int aEndLineNo, int aEndColNo)", "diff": ["-        // Remember if possible Javadoc comment", "-        if (mLines[aStartLineNo - 1].indexOf(\"/**\", aStartColNo) != -1) {", "-            mComments.put(new Integer(aEndLineNo - 1), cc);", "-        }", "-"]}]}