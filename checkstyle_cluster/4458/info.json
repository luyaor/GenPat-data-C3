{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7535da0117b4a6930e30807d104d51c0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18250eaea4d75b7b6c9c12faf0144b28", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FilterSet.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     @Override     public boolean accept(AuditEvent aEvent)", "signatureAfterChange": "     @Override     public boolean accept(AuditEvent event)", "diff": ["-    public boolean accept(AuditEvent aEvent)", "+    public boolean accept(AuditEvent event)", "-        for (Filter filter : mFilters) {", "-            if (!filter.accept(aEvent)) {", "+        for (Filter filter : filters) {", "+            if (!filter.accept(event)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ab6a171052c4aa59b4f8b085ff1c076", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "         public void addStaticField(String aField)", "signatureAfterChange": "         public void addStaticField(String field)", "diff": ["-        public void addStaticField(String aField)", "+        public void addStaticField(String field)", "-            mStaticFields.add(aField);", "+            staticFields.add(field);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "246bd812b32ad29c645e974e884f17d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/IllegalImportCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean isIllegalImport(String aImportText)", "signatureAfterChange": "     private boolean isIllegalImport(String importText)", "diff": ["-    private boolean isIllegalImport(String aImportText)", "+    private boolean isIllegalImport(String importText)", "-        for (String element : mIllegalPkgs) {", "-            if (aImportText.startsWith(element + \".\")) {", "+        for (String element : illegalPkgs) {", "+            if (importText.startsWith(element + \".\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28c13bc79130b729504a4b5882361fb4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocNodeImpl.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void setIndex(int aIndex)", "signatureAfterChange": "      public void setIndex(int index)", "diff": ["-    public void setIndex(int aIndex)", "+    public void setIndex(int index)", "-        this.mIndex = aIndex;", "+        this.index = index;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2924c18484da58b5e808ddac735e68d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "         public void addInstanceField(String aField)", "signatureAfterChange": "         public void addInstanceField(String field)", "diff": ["-        public void addInstanceField(String aField)", "+        public void addInstanceField(String field)", "-            mInstanceFields.add(aField);", "+            instanceFields.add(field);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f7bae3f84d25db35546e79b63073e9a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "         public void setImportGroup(String aImportGroup)", "signatureAfterChange": "         public void setImportGroup(String importGroup)", "diff": ["-        public void setImportGroup(String aImportGroup)", "+        public void setImportGroup(String importGroup)", "-            this.mImportGroup = aImportGroup;", "+            this.importGroup = importGroup;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "387226ef202867cb065d74db339cffa2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setIgnoreEnhancedForColon(boolean aIgnore)", "signatureAfterChange": "     public void setIgnoreEnhancedForColon(boolean ignore)", "diff": ["-    public void setIgnoreEnhancedForColon(boolean aIgnore)", "+    public void setIgnoreEnhancedForColon(boolean ignore)", "-        mIgnoreEnhancedForColon = aIgnore;", "+        ignoreEnhancedForColon = ignore;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4683a6c9808d084264b42cf87c1b99b6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Override     public boolean accept(AuditEvent aEvent)", "signatureAfterChange": "     @Override     public boolean accept(AuditEvent event)", "diff": ["-    public boolean accept(AuditEvent aEvent)", "+    public boolean accept(AuditEvent event)", "-        return mFilters.accept(aEvent);", "+        return filters.accept(event);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c1584d44102868a5b009c1844d7a7ff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/OuterTypeNumberCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setMax(int aTo)", "signatureAfterChange": "     public void setMax(int to)", "diff": ["-    public void setMax(int aTo)", "+    public void setMax(int to)", "-        mMax = aTo;", "+        max = to;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "809dda93ce36531d7abced226d7a2d4d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public String getLine(int aIndex)", "signatureAfterChange": "     public String getLine(int index)", "diff": ["-    public String getLine(int aIndex)", "+    public String getLine(int index)", "-        return mText.get(aIndex);", "+        return text.get(index);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dcb68e2a0b75a71eb586a8b07f73bf2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public DetectorOptions setIgnoreCase(boolean aIgnore)", "signatureAfterChange": "     public DetectorOptions setIgnoreCase(boolean ignore)", "diff": ["-    public DetectorOptions setIgnoreCase(boolean aIgnore)", "+    public DetectorOptions setIgnoreCase(boolean ignore)", "-        mIgnoreCase = aIgnore;", "+        ignoreCase = ignore;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf92e1de0d58709285c04434cd547fe7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void processLines(FileText text)", "signatureAfterChange": "     public void processLines(FileText fileText)", "diff": ["-    public void processLines(FileText text) {", "-        this.text = new FileText(text);", "+    public void processLines(FileText fileText) {", "+        this.text = new FileText(fileText);", "-            matcher = options.getPattern().matcher(text.getFullText());", "+            matcher = options.getPattern().matcher(fileText.getFullText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2b3a054a476c4d7211c4ece9a91dcd5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void beginProcessing(String aCharset)", "signatureAfterChange": "      @Override     public void beginProcessing(String charset)", "diff": ["-    public void beginProcessing(String aCharset)", "+    public void beginProcessing(String charset)", "-        super.beginProcessing(aCharset);", "-        mPropertyFiles.clear();", "+        super.beginProcessing(charset);", "+        propertyFiles.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dae43176ae7ce50e28bab8220d4634a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void beginProcessing(String aCharset)", "signatureAfterChange": "      @Override     public void beginProcessing(String charset)", "diff": ["-    public void beginProcessing(String aCharset)", "+    public void beginProcessing(String charset)", "-        super.beginProcessing(aCharset);", "-        mDirectoriesChecked.clear();", "+        super.beginProcessing(charset);", "+        directoriesChecked.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd047ddfaeaea7d26f0392e79b6aeb95", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "         public void setTofile(File aTo)", "signatureAfterChange": "         public void setTofile(File to)", "diff": ["-        public void setTofile(File aTo)", "+        public void setTofile(File to)", "-            mToFile = aTo;", "+            toFile = to;"]}]}