{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c7932af99dd83496851ce2729a26bed", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "132f2f83b2ba089b0738b7c9f441b55a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "commitBeforeChange": "e029c0077f4bea3685bba62ea8e96a61f6ad32d4", "commitAfterChange": "db19bd67dcea375b1b94d76b7267ccbc1a5ecc0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            log(ident.getLineNo(), ident.getColumnNo(),", "-                \"explicit.init\", ident.getText(), \"null\");", "+            log(ident, \"explicit.init\", ident.getText(), \"null\");", "-            log(ident.getLineNo(), ident.getColumnNo(),", "-                \"explicit.init\", ident.getText(), \"false\");", "+            log(ident, \"explicit.init\", ident.getText(), \"false\");", "-            log(ident.getLineNo(), ident.getColumnNo(),", "-                \"explicit.init\", ident.getText(), \"0\");", "+            log(ident, \"explicit.init\", ident.getText(), \"0\");", "-            log(ident.getLineNo(), ident.getColumnNo(),", "-                \"explicit.init\", ident.getText(), \"\\\\0\");", "+            log(ident, \"explicit.init\", ident.getText(), \"\\\\0\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fae9859d02387b87ee2bc314c933bc8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "3831aa913e25d2bd424ccbeb239bd06439867a58", "commitAfterChange": "a265fee823c473d632b83c446b2e6bc82960b2c0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void processVariable(DetailAST ast)", "signatureAfterChange": "     private void processVariable(DetailAST ast)", "diff": ["-            if ((currentFrame.containsStaticField(name)", "-                || !inStatic(ast) && currentFrame.containsInstanceField(name))", "-                && (regexp == null || !getRegexp().matcher(name).find())", "+            if (isStaticOrOnstanceField(ast, name)", "+                && !isMatchingRegexp(name)"]}]}