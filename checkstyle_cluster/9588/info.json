{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a641d637c0e53a29a0b32d9942cfbb7d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "710b5bf330b6a1af3ef75590450ca790", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/RedundantThrowsCheckTest.java", "commitBeforeChange": "fa7617c2223dae31f3ad486002f60201667e7a95", "commitAfterChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void test_generics_params() throws Exception", "signatureAfterChange": "      public void test_generics_params() throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(RedundantThrowsCheck.class);", "-            \"41:56: Redundant throws: 'RE' is subclass of 'java.lang.RuntimeException'.\",", "+            \"42:13: Redundant throws: 'java.lang.RuntimeException' listed more then one time.\",", "-        verify(checkConfig, getPath(\"javadoc/TestGenerics.java\"), expected);", "+        verify(mCheckConfig, getPath(\"javadoc/TestGenerics.java\"), expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e8e8ee3c141c0c4135bd68b695e19d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheckTest.java", "commitBeforeChange": "c5dfb268770999ece0efcab2f47f007dec339264", "commitAfterChange": "5f0f6d3929dc2c7f1570c03f24a652bffe61db6f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testIt()             throws Exception", "signatureAfterChange": "      public void testIt()             throws Exception", "diff": ["+", "-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(GenericIllegalRegexpCheck.class);", "-        checkConfig.addAttribute(\"format\", illegal);", "+        mCheckConfig.addAttribute(\"format\", illegal);", "-        verify(checkConfig, getPath(\"InputSemantic.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputSemantic.java\"), expected);"]}]}