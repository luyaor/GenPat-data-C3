{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a97464b904d8989a2807a95eb36b8ba0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e2f9d7adfb980f0910aa5758b10e1b0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(final DetailAST aMethodCall)", "signatureAfterChange": "      @Override     public void visitToken(final DetailAST methodCall)", "diff": ["-    public void visitToken(final DetailAST aMethodCall)", "+    public void visitToken(final DetailAST methodCall)", "-        final DetailAST dot = aMethodCall.getFirstChild();", "+        final DetailAST dot = methodCall.getFirstChild();", "-            log(aMethodCall.getLineNo(), aMethodCall.getColumnNo(),", "+            log(methodCall.getLineNo(), methodCall.getColumnNo(),", "-        if (!mIgnoreEqualsIgnoreCase", "+        if (!ignoreEqualsIgnoreCase", "-            log(aMethodCall.getLineNo(), aMethodCall.getColumnNo(),", "+            log(methodCall.getLineNo(), methodCall.getColumnNo(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "943e96938b031f06624784e36a0bd77f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private String removeQuotes(final String aWarning)", "signatureAfterChange": "     private String removeQuotes(final String warning)", "diff": ["-    private String removeQuotes(final String aWarning)", "+    private String removeQuotes(final String warning)", "-        assert aWarning != null : \"the aWarning was null\";", "-        assert aWarning.charAt(0) == '\"';", "-        assert aWarning.charAt(aWarning.length() - 1) == '\"';", "+        assert warning != null : \"the warning was null\";", "+        assert warning.charAt(0) == '\"';", "+        assert warning.charAt(warning.length() - 1) == '\"';", "-        return aWarning.substring(1, aWarning.length() - 1);", "+        return warning.substring(1, warning.length() - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdb40466b3f104c9e2469dbca9cbd98b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setColumns(String aColumns)", "signatureAfterChange": "     public void setColumns(String columns)", "diff": ["-    public void setColumns(String aColumns)", "+    public void setColumns(String columns)", "-        mColumnsCSV = aColumns;", "-        if (aColumns != null) {", "-            mColumnFilter = new CSVFilter(aColumns);", "+        columnsCSV = columns;", "+        if (columns != null) {", "+            columnFilter = new CSVFilter(columns);", "-            mColumnFilter = null;", "+            columnFilter = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc0482cb016bcbc4ec759eb975244438", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean hasLineBreakAfter(DetailAST aLeftCurly)", "signatureAfterChange": "     private boolean hasLineBreakAfter(DetailAST leftCurly)", "diff": ["-    private boolean hasLineBreakAfter(DetailAST aLeftCurly)", "+    private boolean hasLineBreakAfter(DetailAST leftCurly)", "-        if (aLeftCurly.getType() == TokenTypes.SLIST) {", "-            nextToken = aLeftCurly.getFirstChild();", "+        if (leftCurly.getType() == TokenTypes.SLIST) {", "+            nextToken = leftCurly.getFirstChild();", "-            if (aLeftCurly.getParent().getParent().getType() == TokenTypes.ENUM_DEF)", "+            if (leftCurly.getParent().getParent().getType() == TokenTypes.ENUM_DEF)", "-                if (!mIgnoreEnums) {", "-                    nextToken = aLeftCurly.getNextSibling();", "+                if (!ignoreEnums) {", "+                    nextToken = leftCurly.getNextSibling();", "-            if (aLeftCurly.getLineNo() == nextToken.getLineNo()) {", "+            if (leftCurly.getLineNo() == nextToken.getLineNo()) {"]}]}