{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d862d1940645dfc049a0253515044e8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1151677e141ae4bf2cf0332036509e9d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     private static String createSamePackageRegexp(int aCount, DetailAST aPackageNode)", "signatureAfterChange": "     private static String createSamePackageRegexp(int firstPackageDomainsCount,              DetailAST packageNode)", "diff": ["-    private static String createSamePackageRegexp(int aCount, DetailAST aPackageNode)", "+    private static String createSamePackageRegexp(int firstPackageDomainsCount,", "+             DetailAST packageNode)", "-        final String packageFullPath = getFullImportIdent(aPackageNode);", "+        final String packageFullPath = getFullImportIdent(packageNode);", "-        int count = aCount;", "+        int count = firstPackageDomainsCount;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96e07993fa349877832f08b2939d48f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static boolean isInitializationSequence(             DetailAST aVariableUsageAst, String aVariableName)", "signatureAfterChange": "     private static boolean isInitializationSequence(             DetailAST variableUsageAst, String variableName)", "diff": ["-            DetailAST aVariableUsageAst, String aVariableName)", "+            DetailAST variableUsageAst, String variableName)", "-        DetailAST currentSiblingAst = aVariableUsageAst;", "+        DetailAST currentSiblingAst = variableUsageAst;", "-                isUsedVariableDeclarationFound = aVariableName.equals(currentVariableName);", "+                isUsedVariableDeclarationFound = variableName.equals(currentVariableName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0b2246498f272e62e4d8d6de505b56d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private static DetailAST         getNextSubTreeNode(DetailAST aCurrentNodeAst, DetailAST aSubTreeRootAst)", "signatureAfterChange": "     private static DetailAST         getNextSubTreeNode(DetailAST currentNodeAst, DetailAST subTreeRootAst)", "diff": ["-        getNextSubTreeNode(DetailAST aCurrentNodeAst, DetailAST aSubTreeRootAst)", "+        getNextSubTreeNode(DetailAST currentNodeAst, DetailAST subTreeRootAst)", "-        DetailAST currentNode = aCurrentNodeAst;", "+        DetailAST currentNode = currentNodeAst;", "-                if (currentNode.getParent().equals(aSubTreeRootAst)) {", "+                if (currentNode.getParent().equals(subTreeRootAst)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea7b5a3c8d6f235e9b66e525e6ca4352", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/doclets/CheckDocsDoclet.java", "commitBeforeChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "commitAfterChange": "319f297e13e5c175a62489ff555cff7c463d3c7b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "         public int compare(ClassDoc aObject1, ClassDoc aObject2)", "signatureAfterChange": "         public int compare(ClassDoc object1, ClassDoc object2)", "diff": ["-        public int compare(ClassDoc aObject1, ClassDoc aObject2)", "+        public int compare(ClassDoc object1, ClassDoc object2)", "-            final String checkName1 = getCheckName(aObject1);", "-            final String checkName2 = getCheckName(aObject2);", "+            final String checkName1 = getCheckName(object1);", "+            final String checkName2 = getCheckName(object2);"]}]}