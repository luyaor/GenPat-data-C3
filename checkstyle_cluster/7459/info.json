{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ce625a8e851e102437e5128fd404f2d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "543cf49521ea488b97f213a26e5a8162", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void setCheckFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setCheckFormat(String format)         throws ConversionException", "diff": ["-    public void setCheckFormat(String aFormat)", "+    public void setCheckFormat(String format)", "-            mCheckRegexp = Utils.getPattern(aFormat);", "-            mCheckFormat = aFormat;", "+            checkRegexp = Utils.getPattern(format);", "+            checkFormat = format;", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c9aafd1e1c36e6005038aecf75f3fb5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void setCheckFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setCheckFormat(String format)         throws ConversionException", "diff": ["-    public void setCheckFormat(String aFormat)", "+    public void setCheckFormat(String format)", "-            mCheckRegexp = Utils.getPattern(aFormat);", "-            mCheckFormat = aFormat;", "+            checkRegexp = Utils.getPattern(format);", "+            checkFormat = format;", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}]}