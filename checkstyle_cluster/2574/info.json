{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9763abc70fba2215a7706e3d3c7bc316", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cf51c2e3d82454d046b9f72077f3be8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "a0d00ea8940acd30064715db04d7a19a99d4cca9", "commitAfterChange": "f52306ff7799ea2b2e4d99fba7040a11b186d68a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void processField(DetailAST ast, int parentType)", "signatureAfterChange": "     private void processField(DetailAST ast, int parentType)", "diff": ["-                && !isDeclarationToken(parentType)) {", "-", "-            final String name = ast.getText();", "-", "-            if (isClassField(name)) {", "-                log(ast, MSG_VARIABLE, name);", "-            }", "+                && !isDeclarationToken(parentType)", "+                && isClassField(ast)) {", "+            log(ast, MSG_VARIABLE, ast.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a5944bc87d3c5915cea653509d66452", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TrailingCommentCheck.java", "commitBeforeChange": "7b8a3aa5bba1323a7bbb85b6dbd86835215a48fc", "commitAfterChange": "603c5bb53ea12900f6a1c8af0c4a765af36786e3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-                if (comment.getText().length == 1) {", "-                    final String lineAfter =", "-                        line.substring(comment.getEndColNo() + 1).trim();", "-                    if (!lineAfter.isEmpty()) {", "-                        // do not check comment which doesn't end line", "-                        continue;", "-                    }", "+", "+                // do not check comment which doesn't end line", "+                if (comment.getText().length == 1", "+                        && !line.substring(comment.getEndColNo() + 1).trim().isEmpty()) {", "+                    continue;"]}]}