{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2cd86465c63c6d25c85bb400524490fd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2b1c6f4ac3b4821f75bfab2c5f911c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "6985c4758d4a3252951a6a26b8efdd7b5f0adff4", "commitAfterChange": "b405880b6e79f143c3ba3651fe6c8b68324fca51", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void visitExpr(DetailAST ast)", "signatureAfterChange": "     private static boolean isOnTheSameLine(DetailAST ast, int lastStatementEnd,                                            int forStatementEnd)", "diff": ["-    private void visitExpr(DetailAST ast) {", "-        exprDepth++;", "-        if (exprDepth == 1", "-                && !inForHeader", "-                && lastStatementEnd == ast.getLineNo()) {", "-            log(ast, MSG_KEY);", "+    private static boolean isOnTheSameLine(DetailAST ast, int lastStatementEnd,", "+                                           int forStatementEnd) {", "+        final boolean onTheSameLine;", "+        if (lastStatementEnd == ast.getLineNo()", "+                && forStatementEnd != ast.getLineNo()) {", "+            onTheSameLine = true;", "+        else {", "+            onTheSameLine = false;", "+        }", "+        return onTheSameLine;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0a620fc3cbeee430a1973a5fa5c3ade", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "6985c4758d4a3252951a6a26b8efdd7b5f0adff4", "commitAfterChange": "b405880b6e79f143c3ba3651fe6c8b68324fca51", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void visitSemi(DetailAST ast)", "signatureAfterChange": "     private static boolean isMultilineStatement(DetailAST ast)", "diff": ["-    private void visitSemi(DetailAST ast) {", "-        if (exprDepth == 0) {", "-            lastStatementEnd = ast.getLineNo();", "+    private static boolean isMultilineStatement(DetailAST ast) {", "+        final boolean multiline;", "+        if (ast.getPreviousSibling() != null) {", "+            final DetailAST prevSibling = ast.getPreviousSibling();", "+            if (prevSibling.getLineNo() != ast.getLineNo()", "+                    && ast.getParent() != null) {", "+                multiline = true;", "+            }", "+            else {", "+                multiline = false;", "+            }", "+        else {", "+            multiline = false;", "+        }", "+        return multiline;"]}]}