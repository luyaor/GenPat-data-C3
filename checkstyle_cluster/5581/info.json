{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a88a662923c75a341e6b8c21bb25152f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72eee2d84a5c66b43b82db39f4a01bee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "commitBeforeChange": "2a3be6769c4a97d090970ed52ca2333cb9aea706", "commitAfterChange": "fb1407c204a960223f78ec8429a5581773e5578b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static boolean hasOverrideAnnotation(DetailAST aMethodModifiersAST)", "signatureAfterChange": "     private static boolean hasOverrideAnnotation(DetailAST aMethodModifiersAST)", "diff": ["-                final String annotationText =", "-                        child.findFirstToken(TokenTypes.IDENT).getText();", "-                if (\"Override\".equals(annotationText)) {", "+                final DetailAST annotationIdent = child.findFirstToken(TokenTypes.IDENT);", "+                if (annotationIdent != null && \"Override\".equals(annotationIdent.getText())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d34157a073b37a9caff415e721c6c6a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "0ce872d7cc6b0b1564655b9e3119f72911f4dddd", "commitAfterChange": "ea9ff3965d9c657b5b7bd2d969e075f430635c47", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-        if (cache.alreadyChecked(fileName, timestamp)", "-                 || !Utils.fileExtensionMatches(file, getFileExtensions())) {", "+        if (cache != null", "+                && (cache.inCache(fileName, timestamp)", "+                    || !Utils.fileExtensionMatches(file, getFileExtensions()))) {", "-        if (getMessageCollector().size() == 0) {", "-            cache.checkedOk(fileName, timestamp);", "+        if (cache != null && getMessageCollector().size() == 0) {", "+            cache.put(fileName, timestamp);"]}]}