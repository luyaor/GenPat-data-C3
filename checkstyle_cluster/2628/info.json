{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c27d42481c452c05ad99aa5350e20629", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aeeba0f0dd9d209289a253198dae99e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "dd477210aefeabb265e105a9fe8120c8310605e8", "commitAfterChange": "57ea0b6a1151ec75189f9ee12d29f9b226767fd5", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void setBasedir(String aBasedir)", "signatureAfterChange": "     public void setBasedir(String aBasedir)", "diff": ["-        mBasedir = aBasedir;", "+        // we use getAbsolutePath() instead of getCanonicalPath()", "+        // because normalize() removes all . and .. so path", "+        // will be canonical by default.", "+        mBasedir =", "+            FileUtils.newFileUtils().normalize(aBasedir).getAbsolutePath();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8791bf503f5b1488e094a074444c80f9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilterTest.java", "commitBeforeChange": "79404974eff1458f4243f8acd6a08b6a8b869342", "commitAfterChange": "fe9057366308642868c25d427c3ee94411b37170", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Override     protected Checker createChecker(Configuration aFilterConfig)             throws CheckstyleException", "signatureAfterChange": "      @Override     protected Checker createChecker(Configuration aFilterConfig)             throws CheckstyleException", "diff": ["+        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9829d213308c399248abc34975af8bef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java", "commitBeforeChange": "79404974eff1458f4243f8acd6a08b6a8b869342", "commitAfterChange": "fe9057366308642868c25d427c3ee94411b37170", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      protected Checker createChecker(Configuration aCheckConfig)         throws Exception", "signatureAfterChange": "      protected Checker createChecker(Configuration aCheckConfig)         throws Exception", "diff": ["+        c.setModuleClassLoader(Thread.currentThread().getContextClassLoader());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c33397fa28abda7a5eed2c487cfd3bca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "d8d9269bbc4bf33c9a28a33576f4ac47e5659548", "commitAfterChange": "37e181d6dcb58b97503bf435408d418b9dd6216f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void readObject(ObjectInputStream aStream)         throws IOException, ClassNotFoundException", "signatureAfterChange": "     private void readObject(ObjectInputStream aStream)         throws IOException, ClassNotFoundException", "diff": ["+        mLoader = Thread.currentThread().getContextClassLoader();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c41cf2e5113c7d3a79b3c94060189029", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/ClassResolverTest.java", "commitBeforeChange": "68959eeefff4d4a5b295cefbec242c643d523c6b", "commitAfterChange": "7d513f08c27c741105f712dc882fd4c3553f71e7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testMisc() throws ClassNotFoundException", "signatureAfterChange": "     @Test     public void testMisc() throws ClassNotFoundException", "diff": ["+        cr = new ClassResolver(Thread.currentThread().getContextClassLoader(), null, imps);"]}]}