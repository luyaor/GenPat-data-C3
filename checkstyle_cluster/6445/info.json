{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b81a91c3c577b1f923cf21bc66a30b5c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19a32f5cd60f879dd1d10feee2613f0f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static void parsePropertyString(String value,                                            List<String> fragments,                                            List<String> propertyRefs)         throws CheckstyleException", "signatureAfterChange": "     private static void parsePropertyString(String value,                                            List<String> fragments,                                            List<String> propertyRefs)         throws CheckstyleException", "diff": ["-        int pos = value.indexOf('$', prev);", "+        int pos = value.indexOf(DOLLAR_SIGN, prev);", "-                fragments.add(\"$\");", "+                fragments.add(String.valueOf(DOLLAR_SIGN));", "-                if (value.charAt(pos + 1) == '$') {", "+                if (value.charAt(pos + 1) == DOLLAR_SIGN) {", "-                    fragments.add(\"$\");", "+                    fragments.add(String.valueOf(DOLLAR_SIGN));", "-            pos = value.indexOf('$', prev);", "+            pos = value.indexOf(DOLLAR_SIGN, prev);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6782ab44120ec54b829354c6708acbbc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "2a77329c4f45c42b1e9f49773522349193f83338", "commitAfterChange": "a75c64efe39a5c4391faf8ec2fba07ae76411a0e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private static ParseTree getNextSibling(ParseTree node)", "signatureAfterChange": "     private static ParseTree getNextSibling(ParseTree node)", "diff": ["-            int i = 0;", "+            int index = 0;", "-                final ParseTree currentNode = parent.getChild(i);", "+                final ParseTree currentNode = parent.getChild(index);", "-                    if (i != childCount - 1) {", "-                        nextSibling = parent.getChild(i + 1);", "+                    if (index != childCount - 1) {", "+                        nextSibling = parent.getChild(index + 1);", "-                i++;", "+                index++;"]}]}