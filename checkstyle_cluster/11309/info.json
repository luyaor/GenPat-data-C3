{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0006a95bea38777bfc8ed22a4c96b35b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3219455c6ea595d93313fbba9d5d4832", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void checkStyleType(final DetailAST aAnnotation)", "signatureAfterChange": "     private void checkStyleType(final DetailAST annotation)", "diff": ["-    private void checkStyleType(final DetailAST aAnnotation)", "+    private void checkStyleType(final DetailAST annotation)", "-        if (ElementStyle.IGNORE.equals(this.mStyle)", "-            || this.mStyle == null)", "+        if (ElementStyle.IGNORE.equals(this.style)", "+            || this.style == null)", "-        if (ElementStyle.COMPACT_NO_ARRAY.equals(this.mStyle)) {", "-            this.checkCompactNoArrayStyle(aAnnotation);", "+        if (ElementStyle.COMPACT_NO_ARRAY.equals(this.style)) {", "+            this.checkCompactNoArrayStyle(annotation);", "-        else if (ElementStyle.COMPACT.equals(this.mStyle)) {", "-            this.checkCompactStyle(aAnnotation);", "+        else if (ElementStyle.COMPACT.equals(this.style)) {", "+            this.checkCompactStyle(annotation);", "-        else if (ElementStyle.EXPANDED.equals(this.mStyle)) {", "-            this.checkExpandedStyle(aAnnotation);", "+        else if (ElementStyle.EXPANDED.equals(this.style)) {", "+            this.checkExpandedStyle(annotation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfd9556ac71e7caa8ddade1edae49363", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "d91c50c1ae41793e2a2ecb84a0f66042a18e59dd", "commitAfterChange": "dce9c0687bdf0e40982e2afc49186626367beadb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void checkStyleType(final DetailAST annotation)", "signatureAfterChange": "     private void checkStyleType(final DetailAST annotation)", "diff": ["-        if (ElementStyle.IGNORE == this.style", "-            || this.style == null) {", "-            return;", "-        }", "-        if (ElementStyle.COMPACT_NO_ARRAY == this.style) {", "-            this.checkCompactNoArrayStyle(annotation);", "-        }", "-        else if (ElementStyle.COMPACT == this.style) {", "-            this.checkCompactStyle(annotation);", "-        }", "-        else if (ElementStyle.EXPANDED == this.style) {", "-            this.checkExpandedStyle(annotation);", "+        switch (this.style) {", "+", "+            case COMPACT_NO_ARRAY: {", "+                checkCompactNoArrayStyle(annotation);", "+                break;", "+            }", "+", "+            case COMPACT: {", "+                checkCompactStyle(annotation);", "+                break;", "+            }", "+", "+            case EXPANDED: {", "+                checkExpandedStyle(annotation);", "+                break;", "+            }", "+            default:", "+                break;"]}]}