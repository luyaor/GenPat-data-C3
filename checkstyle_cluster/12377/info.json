{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f632ff15539cf9ea540052eec1b88a4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05b5278d1fe94ebb6c94eae5b32803e8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "0db81f33e13f9829ee7de0b261f042017084b78f", "commitAfterChange": "70a6e2e6d34fa5a404e88e45cd62a20a06e19556", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static AuditListener createListener(String format,                                                 String outputLocation)             throws FileNotFoundException", "signatureAfterChange": "     private static AuditListener createListener(String format,                                                 String outputLocation)             throws FileNotFoundException", "diff": ["-            listener = new DefaultLogger(out, closeOutputStream, out, false, true);", "+            listener = new DefaultLogger(out, closeOutputStream, out, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "557f560ede64336149a6766c282130e4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "d44cb066cbd89ce3c8d99c04d2fd28dbae68a6d9", "commitAfterChange": "e36ae750f6378b9a3cd8e5171c6e6b710bf10959", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected AuditListener[] getListeners() throws ClassNotFoundException,             InstantiationException, IllegalAccessException, IOException", "signatureAfterChange": "     protected AuditListener[] getListeners() throws ClassNotFoundException,             InstantiationException, IllegalAccessException, IOException", "diff": ["-            listeners[0] = new DefaultLogger(debug, true, err, true, true);", "+            listeners[0] = new DefaultLogger(debug, true, err, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88930e8744166564b79af102dc4ea6e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "0db81f33e13f9829ee7de0b261f042017084b78f", "commitAfterChange": "70a6e2e6d34fa5a404e88e45cd62a20a06e19556", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private AuditListener[] getListeners()", "signatureAfterChange": "     private AuditListener[] getListeners()", "diff": ["-                listeners[0] = new DefaultLogger(debug, true, err, true, true);", "+                listeners[0] = new DefaultLogger(debug, true, err, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1b0031df33418cecdea294e5c90d3d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "d44cb066cbd89ce3c8d99c04d2fd28dbae68a6d9", "commitAfterChange": "e36ae750f6378b9a3cd8e5171c6e6b710bf10959", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "         private AuditListener createDefaultLogger(Task task)             throws IOException", "signatureAfterChange": "         private AuditListener createDefaultLogger(Task task)             throws IOException", "diff": ["-                    true, new LogOutputStream(task, Project.MSG_ERR), true, true);", "+                    true, new LogOutputStream(task, Project.MSG_ERR), true);", "-            return new DefaultLogger(new FileOutputStream(toFile), true, true);", "+            return new DefaultLogger(new FileOutputStream(toFile), true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5e8074145f93a99a1996abb55ea0783", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "04ceb4b91f4e66439479406834f42014c5be62ed", "commitAfterChange": "89b6af6a05d3c7820afac94137ae105cf800c457", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-        currentFrame = new FieldFrame(null, true, null, null);", "+        currentFrame = new FieldFrame(null, true, null);"]}]}