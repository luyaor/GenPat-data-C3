{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "697c3067eb2f3539a1d0ff48fcbce4dd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0479f90e0a3a7168922024dd6dfa0ab8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "62522f91ef75d0a838b4e2041dff87e3ea8d5997", "commitAfterChange": "3a55941f33dcd9111d6b61b0505217f47973a39d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setCheckCPP(boolean checkCPP)", "signatureAfterChange": "     public void setCheckCPP(boolean checkCpp)", "diff": ["-    public void setCheckCPP(boolean checkCPP) {", "-        this.checkCPP = checkCPP;", "+    public void setCheckCPP(boolean checkCpp) {", "+        this.checkCPP = checkCpp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b43c5ab6432460377de54f676e30c9c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private boolean isEmptyLine(DetailNode aNewLine)", "signatureAfterChange": "     private boolean isEmptyLine(DetailNode newLine)", "diff": ["-    private boolean isEmptyLine(DetailNode aNewLine)", "+    private boolean isEmptyLine(DetailNode newLine)", "-        DetailNode previousSibling = JavadocUtils.getPreviousSibling(aNewLine);", "+        DetailNode previousSibling = JavadocUtils.getPreviousSibling(newLine);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e94162946c6be9832b998ee6535f018", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWarningsFilterTest.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public static DefaultConfiguration createFilterConfig(Class<?> aClass)", "signatureAfterChange": "      public static DefaultConfiguration createFilterConfig(Class<?> classObj)", "diff": ["-    public static DefaultConfiguration createFilterConfig(Class<?> aClass)", "+    public static DefaultConfiguration createFilterConfig(Class<?> classObj)", "-        return new DefaultConfiguration(aClass.getName());", "+        return new DefaultConfiguration(classObj.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1184a5bd4ad4fff24049a83e10bbd52d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Utils.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static Pattern getPattern(String aPattern)         throws PatternSyntaxException", "signatureAfterChange": "     public static Pattern getPattern(String pattern)         throws PatternSyntaxException", "diff": ["-    public static Pattern getPattern(String aPattern)", "+    public static Pattern getPattern(String pattern)", "-        return getPattern(aPattern, 0);", "+        return getPattern(pattern, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "252ef5408592656b82a7ebbe3863a7db", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java", "commitBeforeChange": "29027109bf962f47b6a6000fdca69b5679ce4b43", "commitAfterChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     DetailAST checkOrderSuggestedByJLS(List<DetailAST> aModifiers)", "signatureAfterChange": "     DetailAST checkOrderSuggestedByJLS(List<DetailAST> modifiers)", "diff": ["-    DetailAST checkOrderSuggestedByJLS(List<DetailAST> aModifiers)", "+    DetailAST checkOrderSuggestedByJLS(List<DetailAST> modifiers)", "-        final Iterator<DetailAST> it = aModifiers.iterator();", "+        final Iterator<DetailAST> it = modifiers.iterator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e4ff4e02ded49ed2efaf81c5810b970", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/CSVFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public CSVFilter(String aPattern)         throws NumberFormatException", "signatureAfterChange": "     public CSVFilter(String pattern)         throws NumberFormatException", "diff": ["-    public CSVFilter(String aPattern)", "+    public CSVFilter(String pattern)", "-        final StringTokenizer tokenizer = new StringTokenizer(aPattern, \",\");", "+        final StringTokenizer tokenizer = new StringTokenizer(pattern, \",\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3eb33dee6a191252dc42eb5a59a7fa79", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static String getBlockCommentContent(DetailAST aBlockCommentBegin)", "signatureAfterChange": "     public static String getBlockCommentContent(DetailAST blockCommentBegin)", "diff": ["-    public static String getBlockCommentContent(DetailAST aBlockCommentBegin)", "+    public static String getBlockCommentContent(DetailAST blockCommentBegin)", "-        final DetailAST commentContent = aBlockCommentBegin.getFirstChild();", "+        final DetailAST commentContent = blockCommentBegin.getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b4abd2d538350d747bdf1d60ac916c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private String getVisibilityScope(Set<String> aModifiers)", "signatureAfterChange": "     private String getVisibilityScope(Set<String> modifiers)", "diff": ["-    private String getVisibilityScope(Set<String> aModifiers)", "+    private String getVisibilityScope(Set<String> modifiers)", "-            if (aModifiers.contains(candidate)) {", "+            if (modifiers.contains(candidate)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6532f1062baeca8247f57e1f7ebb9287", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean isLastEmptyLine(DetailNode aNewLine)", "signatureAfterChange": "     private boolean isLastEmptyLine(DetailNode newLine)", "diff": ["-    private boolean isLastEmptyLine(DetailNode aNewLine)", "+    private boolean isLastEmptyLine(DetailNode newLine)", "-        DetailNode nextNode = JavadocUtils.getNextSibling(aNewLine);", "+        DetailNode nextNode = JavadocUtils.getNextSibling(newLine);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "728378c26108558f3daeeb8de9eb9d21", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/doclets/TokenTypesDoclet.java", "commitBeforeChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "commitAfterChange": "319f297e13e5c175a62489ff555cff7c463d3c7b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static String getDestFileName(String[][] aOptions)", "signatureAfterChange": "     private static String getDestFileName(String[][] options)", "diff": ["-    private static String getDestFileName(String[][] aOptions)", "+    private static String getDestFileName(String[][] options)", "-        for (final String[] opt : aOptions) {", "+        for (final String[] opt : options) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b62f70715f62a6ee72c84acc84363f6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilterTest.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "       public static DefaultConfiguration createFilterConfig(Class<?> aClass)", "signatureAfterChange": "       public static DefaultConfiguration createFilterConfig(Class<?> classObj)", "diff": ["-    public static DefaultConfiguration createFilterConfig(Class<?> aClass)", "+    public static DefaultConfiguration createFilterConfig(Class<?> classObj)", "-        return new DefaultConfiguration(aClass.getName());", "+        return new DefaultConfiguration(classObj.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "826192e78e295c7cf0cc3de2c96e2c22", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      protected static DefaultConfiguration createCheckConfig(Class<?> aClazz)", "signatureAfterChange": "      protected static DefaultConfiguration createCheckConfig(Class<?> clazz)", "diff": ["-    protected static DefaultConfiguration createCheckConfig(Class<?> aClazz) {", "-        return new DefaultConfiguration(aClazz.getName());", "+    protected static DefaultConfiguration createCheckConfig(Class<?> clazz) {", "+        return new DefaultConfiguration(clazz.getName());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "843b22471f36f47aeae64ddb5d8b3188", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static boolean isArrayInstantiation(DetailAST aArrayDeclaration)", "signatureAfterChange": "     private static boolean isArrayInstantiation(DetailAST arrayDeclaration)", "diff": ["-    private static boolean isArrayInstantiation(DetailAST aArrayDeclaration)", "+    private static boolean isArrayInstantiation(DetailAST arrayDeclaration)", "-        return aArrayDeclaration.getParent().getType() == TokenTypes.LITERAL_NEW;", "+        return arrayDeclaration.getParent().getType() == TokenTypes.LITERAL_NEW;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8778975d74f15a9555d4f59bfcaa7cc6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "62522f91ef75d0a838b4e2041dff87e3ea8d5997", "commitAfterChange": "3a55941f33dcd9111d6b61b0505217f47973a39d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setCheckCPP(boolean checkCPP)", "signatureAfterChange": "     public void setCheckCPP(boolean checkCpp)", "diff": ["-    public void setCheckCPP(boolean checkCPP) {", "-        this.checkCPP = checkCPP;", "+    public void setCheckCPP(boolean checkCpp) {", "+        this.checkCPP = checkCpp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d3dd8adb292983a917de815bba33e75", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private static boolean isCstyleMultiDimensionalArrayDeclaration(DetailAST aArrayDeclaration)", "signatureAfterChange": "     private static boolean isCstyleMultiDimensionalArrayDeclaration(DetailAST arrayDeclaration)", "diff": ["-    private static boolean isCstyleMultiDimensionalArrayDeclaration(DetailAST aArrayDeclaration)", "+    private static boolean isCstyleMultiDimensionalArrayDeclaration(DetailAST arrayDeclaration)", "-        DetailAST parentArrayDeclaration = aArrayDeclaration;", "+        DetailAST parentArrayDeclaration = arrayDeclaration;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2913d386225e019267cc5ae5023a93c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static boolean isJavadocComment(DetailAST aBlockCommentBegin)", "signatureAfterChange": "     public static boolean isJavadocComment(DetailAST blockCommentBegin)", "diff": ["-    public static boolean isJavadocComment(DetailAST aBlockCommentBegin)", "+    public static boolean isJavadocComment(DetailAST blockCommentBegin)", "-        final String commentContent = getBlockCommentContent(aBlockCommentBegin);", "+        final String commentContent = getBlockCommentContent(blockCommentBegin);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca8ca96d424195503a5567ea83c815a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/doclets/CheckDocsDoclet.java", "commitBeforeChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "commitAfterChange": "319f297e13e5c175a62489ff555cff7c463d3c7b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public static String getDestDir(String[][] aOptions)", "signatureAfterChange": "     public static String getDestDir(String[][] options)", "diff": ["-    public static String getDestDir(String[][] aOptions)", "+    public static String getDestDir(String[][] options)", "-        for (final String[] opt : aOptions) {", "+        for (final String[] opt : options) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1398da305f452f160c4382d3ac6fe40", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public static DefaultConfiguration createCheckConfig(Class<?> aClazz)", "signatureAfterChange": "      public static DefaultConfiguration createCheckConfig(Class<?> clazz)", "diff": ["-    public static DefaultConfiguration createCheckConfig(Class<?> aClazz) {", "+    public static DefaultConfiguration createCheckConfig(Class<?> clazz) {", "-                new DefaultConfiguration(aClazz.getName());", "+                new DefaultConfiguration(clazz.getName());"]}]}