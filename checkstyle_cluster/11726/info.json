{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3025e46a5109ca85a61dcb272f4b7f94", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4b6cc6dc59fc8886fe5a728ac096f16", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public static DetailAST parse(FileContents contents)         throws RecognitionException, TokenStreamException", "signatureAfterChange": "     public static DetailAST parse(FileContents contents)         throws RecognitionException, TokenStreamException", "diff": ["-        final Reader sr = new StringReader(fullText);", "-        final GeneratedJavaLexer lexer = new GeneratedJavaLexer(sr);", "+        final Reader reader = new StringReader(fullText);", "+        final GeneratedJavaLexer lexer = new GeneratedJavaLexer(reader);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ada2c49f38fb06a72f2732a29c623110", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "546f336e25b26d072f96e2cda139b885858ed5b0", "commitAfterChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private AuditListener[] getListeners() throws ClassNotFoundException,             InstantiationException, IllegalAccessException, IOException", "signatureAfterChange": "     private AuditListener[] getListeners() throws ClassNotFoundException,             InstantiationException, IllegalAccessException, IOException", "diff": ["-                final Formatter f = formatters.get(i);", "-                listeners[i] = f.createListener(this);", "+                final Formatter formatter = formatters.get(i);", "+                listeners[i] = formatter.createListener(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be37926fc47fa61f2188a26081db789c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public FileText(File file, String charsetName) throws IOException", "signatureAfterChange": "     public FileText(File file, String charsetName) throws IOException", "diff": ["-        final BufferedReader br =", "+        final BufferedReader reader =", "-            final String line = br.readLine();", "+            final String line = reader.readLine();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6b3f6069c70c79fc9c6336b38caf111", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private static void printUsage()", "signatureAfterChange": "     private static void printUsage()", "diff": ["-        final HelpFormatter hf = new HelpFormatter();", "-        hf.printHelp(String.format(\"java %s [options] -c <config.xml> file...\",", "+        final HelpFormatter formatter = new HelpFormatter();", "+        formatter.printHelp(String.format(\"java %s [options] -c <config.xml> file...\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8dfd4ca4b26e01d3fb108a738af5b11", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "25badc206f9b8fdce3391992cec951235250a3d2", "commitAfterChange": "aab0718232e060bd8f289770ab81780b3a2705a2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private static boolean isExtraHtml(String token, Deque<HtmlTag> htmlStack)", "signatureAfterChange": "     private static boolean isExtraHtml(String token, Deque<HtmlTag> htmlStack)", "diff": ["-        for (final HtmlTag td : htmlStack) {", "+        for (final HtmlTag tag : htmlStack) {", "-            if (token.equalsIgnoreCase(td.getId())) {", "+            if (token.equalsIgnoreCase(tag.getId())) {"]}]}