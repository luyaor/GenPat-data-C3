{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f70085139d58f25ea1b0cf26ead5094", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0045dfac3f0225b3d858bec192714eea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void processStart(DetailAST ast)", "signatureAfterChange": "     private void processStart(DetailAST ast)", "diff": ["-            if (TokenTypes.TYPE_PARAMETERS == parent.getType()", "-                && (TokenTypes.CTOR_DEF == grandparent.getType()", "-                    || TokenTypes.METHOD_DEF == grandparent.getType())) {", "+            if (parent.getType() == TokenTypes.TYPE_PARAMETERS", "+                && (grandparent.getType() == TokenTypes.CTOR_DEF", "+                    || grandparent.getType() == TokenTypes.METHOD_DEF)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3729a8ad80e46c6f9aa68d4e7028fe2c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private BitSet getBranchTokenTypes()", "signatureAfterChange": "     private BitSet getBranchTokenTypes()", "diff": ["-        if (mBranchTokenTypes == null) {", "+        if (branchTokenTypes == null) {", "-            mBranchTokenTypes = new BitSet();", "-            mBranchTokenTypes.set(getType());", "+            branchTokenTypes = new BitSet();", "+            branchTokenTypes.set(getType());", "-                mBranchTokenTypes.or(childTypes);", "+                branchTokenTypes.or(childTypes);", "-        return mBranchTokenTypes;", "+        return branchTokenTypes;"]}]}