{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa5d258f313c45437781050577fa5720", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "253de14d0a0854672a5fe9408a60c3f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "6125beffc437f970eae276b4a6542265c6547784", "commitAfterChange": "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processVariable(DetailAST aAST)", "signatureAfterChange": "     private void processVariable(DetailAST aAST)", "diff": ["-                final ListIterator it =", "-                    mFieldsStack.listIterator(mFieldsStack.size());", "-                while (it.hasPrevious()) {", "-                    final FieldFrame frame = (FieldFrame) it.previous();", "-                    inStatic |= frame.isStaticType();", "-                    if ((frame.containsStaticField(name)", "-                        || (!inStatic && frame.containsInstanceField(name)))", "-                        && ((mRegexp == null) || (!getRegexp().match(name)))", "-                        && !isIgnoredSetterParam(aAST, name)", "-                        && !isIgnoredConstructorParam(aAST))", "-                    {", "-                        log(nameAST.getLineNo(), nameAST.getColumnNo(),", "-                            \"hidden.field\", name);", "-                        break;", "-                    }", "+                if ((mCurrentFrame.containsStaticField(name)", "+                     || (!inStatic(aAST)", "+                         && mCurrentFrame.containsInstanceField(name)))", "+                    && ((mRegexp == null) || (!getRegexp().match(name)))", "+                    && !isIgnoredSetterParam(aAST, name)", "+                    && !isIgnoredConstructorParam(aAST))", "+                {", "+                    log(nameAST, \"hidden.field\", name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6a660d6cae87f21e4250e63a46a01b9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "094ffd52eca4f05bfc671f01cb7ad0b7d1bbe77f", "commitAfterChange": "49d100f325752b15bbee56bfcf99dac223144639", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processVariable(DetailAST aAST)", "signatureAfterChange": "     private void processVariable(DetailAST aAST)", "diff": ["-        if (!ScopeUtils.inInterfaceOrAnnotationBlock(aAST)) {", "-            if (ScopeUtils.isLocalVariableDef(aAST)", "-                || (aAST.getType() == TokenTypes.PARAMETER_DEF))", "-            {", "-                //local variable or parameter. Does it shadow a field?", "-                final DetailAST nameAST = aAST.findFirstToken(TokenTypes.IDENT);", "-                final String name = nameAST.getText();", "-                if ((mCurrentFrame.containsStaticField(name)", "-                     || (!inStatic(aAST)", "-                         && mCurrentFrame.containsInstanceField(name)))", "-                    && ((mRegexp == null)", "-                        || (!getRegexp().matcher(name).find()))", "-                    && !isIgnoredSetterParam(aAST, name)", "-                    && !isIgnoredConstructorParam(aAST))", "-                {", "-                    log(nameAST, \"hidden.field\", name);", "-                }", "-            }", "+        if (ScopeUtils.inInterfaceOrAnnotationBlock(aAST)", "+            || !ScopeUtils.isLocalVariableDef(aAST)", "+            && (aAST.getType() != TokenTypes.PARAMETER_DEF))", "+        {", "+            // do nothing", "+            return;", "+        }", "+        //local variable or parameter. Does it shadow a field?", "+        final DetailAST nameAST = aAST.findFirstToken(TokenTypes.IDENT);", "+        final String name = nameAST.getText();", "+        if ((mCurrentFrame.containsStaticField(name)", "+             || (!inStatic(aAST) && mCurrentFrame.containsInstanceField(name)))", "+            && ((mRegexp == null) || (!getRegexp().matcher(name).find()))", "+            && !isIgnoredSetterParam(aAST, name)", "+            && !isIgnoredConstructorParam(aAST))", "+        {", "+            log(nameAST, \"hidden.field\", name);"]}]}