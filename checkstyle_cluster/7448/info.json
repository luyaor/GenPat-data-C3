{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12fb093933e45931de9b3d20698fc83f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "026c4880d2cd6ccb9604e86b3fdfeb83", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "       private void makeDropTarget(final Component c, boolean recursive)             throws TooManyListenersException", "signatureAfterChange": "       private void makeDropTarget(final Component c, boolean recursive)             throws TooManyListenersException", "diff": ["-                Component parent = c.getParent();", "+                final Component parent = c.getParent();", "-            Container cont = (Container) c;", "-            Component[] comps = cont.getComponents();", "+            final Container cont = (Container) c;", "+            final Component[] comps = cont.getComponents();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "374cc38d2b616981cc7a94eff964516d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "d814d1352b63136a400cd8f4dffd03d68c9ccd24", "commitAfterChange": "3edd1b53a5d8d407fd33d8c514db8bc1c7274fe5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected boolean hasLabelBefore()", "signatureAfterChange": "     protected boolean hasLabelBefore()", "diff": ["-        final DetailAST parent = getToplevelAST().getParent();", "+        final DetailAST parent = getTopLevelAst().getParent();", "-            && parent.getLineNo() == getToplevelAST().getLineNo();", "+            && parent.getLineNo() == getTopLevelAst().getLineNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8aa06d3a3b685f6222d878e4b6df2d61", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "546f336e25b26d072f96e2cda139b885858ed5b0", "commitAfterChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     FileDrop(             final Component c,             final Border dragBorder,             final boolean recursive,             final Listener listener)             throws TooManyListenersException", "signatureAfterChange": "     FileDrop(             final Component component,             final Border dragBorder,             final boolean recursive,             final Listener listener)             throws TooManyListenersException", "diff": ["-            final Component c,", "+            final Component component,", "-        dropListener = new FileDropTargetListener(c, dragBorder, listener);", "-        makeDropTarget(c, recursive);", "+        dropListener = new FileDropTargetListener(component, dragBorder, listener);", "+        makeDropTarget(component, recursive);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91d74e503874d22c4948a9a7d2945634", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java", "commitBeforeChange": "9f93c2258ef0512b743f5927be201ff55a9d5c57", "commitAfterChange": "23c8774d2e2fd245de1e5df02758fd23702c565e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static boolean isInterfaceOrAnnotationMember(DetailAST ast)", "signatureAfterChange": "     private static boolean isInterfaceOrAnnotationMember(DetailAST ast)", "diff": ["-        final DetailAST parentTypeDef =", "-                ast.getParent() != null ? ast.getParent().getParent() : null;", "+        DetailAST parentTypeDef = ast.getParent();", "+", "+        if (parentTypeDef != null) {", "+            parentTypeDef = parentTypeDef.getParent();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8ed17e7b97cd62a7d6625b562c2defa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/InnerAssignmentCheck.java", "commitBeforeChange": "40496d0f8c01bf1f9718e6925b76f13db5b2ae3d", "commitAfterChange": "675c037c85af8347d5b95b0b45f166b8599a9b27", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        DetailAST parent1 = aAST.getParent();", "-        DetailAST parent2 = parent1.getParent();", "-        DetailAST parent3 = parent2.getParent();", "+        final DetailAST parent1 = aAST.getParent();", "+        final DetailAST parent2 = parent1.getParent();", "+        final DetailAST parent3 = parent2.getParent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faace7a506f0c21e0494b7062d7341a4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public ExpressionHandler getHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "signatureAfterChange": "     public ExpressionHandler getHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "diff": ["-            (ExpressionHandler) mCreatedHandlers.get(aAst);", "+            mCreatedHandlers.get(aAst);", "-            final Constructor handlerCtor =", "-                (Constructor) mTypeHandlers.get(type);", "+            final Constructor<?> handlerCtor =", "+                mTypeHandlers.get(type);"]}]}