{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b26761ed887d43e010ee19af290bc5e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3935b36448bf4ec1b994ad83f6d115bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testStyleCompactNoArray() throws Exception", "signatureAfterChange": "      @Test     public void testStyleCompactNoArray() throws Exception", "diff": ["-            \"5: Annotation style must be 'COMPACT_NO_ARRAY'.\",", "-            \"20: Annotation style must be 'COMPACT_NO_ARRAY'.\",", "-            \"41: Annotation style must be 'COMPACT_NO_ARRAY'.\",", "-            \"43: Annotation style must be 'COMPACT_NO_ARRAY'.\",", "-            \"47: Annotation style must be 'COMPACT_NO_ARRAY'.\",", "+            \"5: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"COMPACT_NO_ARRAY\"),", "+            \"20: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"COMPACT_NO_ARRAY\"),", "+            \"41: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"COMPACT_NO_ARRAY\"),", "+            \"43: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"COMPACT_NO_ARRAY\"),", "+            \"47: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"COMPACT_NO_ARRAY\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8439f0502236bd70f6466e9855cee36f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testStyleExpanded() throws Exception", "signatureAfterChange": "      @Test     public void testStyleExpanded() throws Exception", "diff": ["-            \"5: Annotation style must be 'EXPANDED'.\",", "-            \"12: Annotation style must be 'EXPANDED'.\",", "-            \"20: Annotation style must be 'EXPANDED'.\",", "-            \"26: Annotation style must be 'EXPANDED'.\",", "-            \"39: Annotation style must be 'EXPANDED'.\",", "-            \"41: Annotation style must be 'EXPANDED'.\",", "-            \"58: Annotation style must be 'EXPANDED'.\",", "+            \"5: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"EXPANDED\"),", "+            \"12: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"EXPANDED\"),", "+            \"20: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"EXPANDED\"),", "+            \"26: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"EXPANDED\"),", "+            \"39: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"EXPANDED\"),", "+            \"41: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"EXPANDED\"),", "+            \"58: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"EXPANDED\"),"]}]}