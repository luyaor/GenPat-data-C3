{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "99763264bcf7ad27385c0113f09597aa", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05de3b243d83deb081b35e614f3f53db", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 62, "signatureBeforeChange": "     public void setIgnorePublicInInterface(boolean aIgnore)", "signatureAfterChange": "     public void setIgnorePublicInInterface(final boolean aIgnore)", "diff": ["-    public void setIgnorePublicInInterface(boolean aIgnore)", "+    public void setIgnorePublicInInterface(final boolean aIgnore)", "-        mConfig.setIgnorePublicInInterface(aIgnore);", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setIgnorePublicInInterface(aIgnore);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "155dcb521ab9b1ef3321f1e70d247def", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public void setIgnoreImportLen(boolean aIgnore)", "signatureAfterChange": "     public void setIgnoreImportLen(final boolean aIgnore)", "diff": ["-    public void setIgnoreImportLen(boolean aIgnore)", "+    public void setIgnoreImportLen(final boolean aIgnore)", "-        mConfig.setIgnoreImportLength(aIgnore);", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setIgnoreImportLength(aIgnore);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58b3fdb94884a03c9c76cb264c5cb327", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setAllowTabs(boolean aAllowed)", "signatureAfterChange": "     public void setAllowTabs(final boolean aAllowed)", "diff": ["-    /** @param aAllowed whether tabs are allowed **/", "-    public void setAllowTabs(boolean aAllowed)", "-        mConfig.setAllowTabs(aAllowed);", "+    /** @param aAllowed whether tabs are allowed **/", "+    public void setAllowTabs(final boolean aAllowed)", "+    {", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setAllowTabs(aAllowed);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a056739a1cb117c6d1e6e57a7ee3e54d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public void setMemberPattern(String aPat)", "signatureAfterChange": "     public void setMemberPattern(final String aPat)", "diff": ["-    public void setMemberPattern(String aPat)", "+    public void setMemberPattern(final String aPat)", "-        try {", "-            mConfig.setMemberPat(aPat);", "-        }", "-        catch (RESyntaxException ex) {", "-            throw new BuildException(\"Unable to parse memberPattern - \", ex);", "-        }", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    try {", "+                        mConfig.setMemberPat(aPat);", "+                    }", "+                    catch (RESyntaxException ex) {", "+                        throw new BuildException(", "+                            \"Unable to parse memberPattern - \", ex);", "+                    }", "+                }", "+            });", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abec8d8b2939eba5e3cd1ba0935d6d20", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 52, "signatureBeforeChange": "     public void setIgnoreImports(boolean aIgnore)", "signatureAfterChange": "     public void setIgnoreImports(final boolean aIgnore)", "diff": ["-    public void setIgnoreImports(boolean aIgnore)", "+    public void setIgnoreImports(final boolean aIgnore)", "-        mConfig.setIgnoreImports(aIgnore);", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setIgnoreImports(aIgnore);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d336fb5348ced5a49d754b7947645d06", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 54, "signatureBeforeChange": "     public void setIllegalImports(String aPkgPrefixList)", "signatureAfterChange": "     public void setIllegalImports(final String aPkgPrefixList)", "diff": ["-    public void setIllegalImports(String aPkgPrefixList)", "+    public void setIllegalImports(final String aPkgPrefixList)", "-        mConfig.setIllegalImports(aPkgPrefixList);", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setIllegalImports(aPkgPrefixList);", "+                }", "+            });"]}]}