{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c4ce36587fe6de4298fdd2c2a65ece1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "322c4520293838118e7953f6501156fc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/Java7DiamondTest.java", "commitBeforeChange": "2fe5ade8b31c0c7b32fab4e25f1ec73c9ab31b8d", "commitAfterChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testCanParse()         throws Exception", "signatureAfterChange": "      @Test     public void testCanParse()         throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"grammars/InputJava7Diamond.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJava7Diamond.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3588f78c9038d38259478ed06e8d7673", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/MethodParamPadTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41b5da76b487e112140fdd55aaf9b70c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/NestedIfDepthCheckTest.java", "commitBeforeChange": "9509710845bf8d8ef67755be7e097d540d43b026", "commitAfterChange": "e04583198aa79d3769a8995f859e8a27e51695d0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testCustomizedDepth() throws Exception", "signatureAfterChange": "      @Test     public void testCustomizedDepth() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputNestedIfDepth.java\"), expected);", "+        verify(checkConfig, getPath(\"InputNestedIfDepth.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94530eb2a959a93c1e7e25660778821a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MemberNameCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testPublicOnly() throws Exception", "signatureAfterChange": "      @Test     public void testPublicOnly() throws Exception", "diff": ["-            \"3:16: Name 'mPublic' must match pattern '^_[a-z]*$'.\",", "+            \"5:16: Name 'mPublic' must match pattern '^_[a-z]*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2681ebcf0550e6ead10922962444c5a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Test     public void testBadOverrideFromOther() throws Exception", "signatureAfterChange": "     @Test     public void testBadOverrideFromOther() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"BadOverrideFromOther.java\"), expected);", "+        verify(checkConfig, getPath(\"InputBadOverrideFromOther.java\"), expected);"]}]}