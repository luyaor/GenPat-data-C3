{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92e617b0ae2b859931986455eb040489", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d9a248bb0ccc2fa2cbb7d2baaf1e25a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/CommonUtilsTest.java", "commitBeforeChange": "904de34fcd984edce3d6042a5a17e2a969254588", "commitAfterChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testFileExtensions()", "signatureAfterChange": "      @Test     public void testFileExtensions()", "diff": ["-        assertFalse(CommonUtils.fileExtensionMatches(file, fileExtensions));", "-        assertTrue(CommonUtils.fileExtensionMatches(file, (String[]) null));", "+        assertFalse(CommonUtils.matchesFileExtension(file, fileExtensions));", "+        assertTrue(CommonUtils.matchesFileExtension(file, (String[]) null));", "-        assertTrue(CommonUtils.fileExtensionMatches(file, fileExtensions));", "+        assertTrue(CommonUtils.matchesFileExtension(file, fileExtensions));", "-        assertTrue(CommonUtils.fileExtensionMatches(file, \"\"));", "+        assertTrue(CommonUtils.matchesFileExtension(file, \"\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea409ea6196bbec06e8a900b1e993058", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/UtilsTest.java", "commitBeforeChange": "8da777a68ad936f1a4e07d59cee17ecab2fc293e", "commitAfterChange": "7f740b18c9b4d3cd596dcf06d70785c3362fabd5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testFileExtensions()", "signatureAfterChange": "      @Test     public void testFileExtensions()", "diff": ["-        assertFalse(fileExtensionMatches(file, fileExtensions));", "-        assertTrue(fileExtensionMatches(file, null));", "+        assertFalse(Utils.fileExtensionMatches(file, fileExtensions));", "+        assertTrue(Utils.fileExtensionMatches(file, null));", "-        assertTrue(fileExtensionMatches(file, fileExtensions));", "+        assertTrue(Utils.fileExtensionMatches(file, fileExtensions));", "-        assertTrue(fileExtensionMatches(file, \"\"));", "+        assertTrue(Utils.fileExtensionMatches(file, \"\"));"]}]}