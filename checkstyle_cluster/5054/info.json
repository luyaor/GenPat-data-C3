{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be016115ea42bcd23857c75e6a4c52f0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06b8bebd214bd94a45235f0706b40e90", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheckTest.java", "commitBeforeChange": "c5dfb268770999ece0efcab2f47f007dec339264", "commitAfterChange": "5f0f6d3929dc2c7f1570c03f24a652bffe61db6f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testMessageProperty()         throws Exception", "signatureAfterChange": "      public void testMessageProperty()         throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(GenericIllegalRegexpCheck.class);", "-        checkConfig.addAttribute(\"format\", illegal);", "-        checkConfig.addAttribute(\"message\", message);", "+        mCheckConfig.addAttribute(\"format\", illegal);", "+        mCheckConfig.addAttribute(\"message\", message);", "-        verify(checkConfig, getPath(\"InputSemantic.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputSemantic.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1920b976337f91c5864592ff3321ffa3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheckTest.java", "commitBeforeChange": "c5dfb268770999ece0efcab2f47f007dec339264", "commitAfterChange": "5f0f6d3929dc2c7f1570c03f24a652bffe61db6f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testIgnoreCommentsFalseCppStyle()             throws Exception", "signatureAfterChange": "      public void testIgnoreCommentsFalseCppStyle()             throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(GenericIllegalRegexpCheck.class);", "-        checkConfig.addAttribute(\"format\", illegal);", "-        checkConfig.addAttribute(\"ignoreComments\", \"false\");", "+        mCheckConfig.addAttribute(\"format\", illegal);", "+        mCheckConfig.addAttribute(\"ignoreComments\", \"false\");", "-        verify(checkConfig, getPath(\"InputTrailingComment.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputTrailingComment.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8625d6755b82da478709cff4e85b9d3a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheckTest.java", "commitBeforeChange": "c5dfb268770999ece0efcab2f47f007dec339264", "commitAfterChange": "5f0f6d3929dc2c7f1570c03f24a652bffe61db6f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void testIgnoreCommentsMultipleCStyle()             throws Exception", "signatureAfterChange": "      public void testIgnoreCommentsMultipleCStyle()             throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(GenericIllegalRegexpCheck.class);", "-        checkConfig.addAttribute(\"format\", illegal);", "-        checkConfig.addAttribute(\"ignoreComments\", \"true\");", "+        mCheckConfig.addAttribute(\"format\", illegal);", "+        mCheckConfig.addAttribute(\"ignoreComments\", \"true\");", "-        verify(checkConfig, getPath(\"InputTrailingComment.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputTrailingComment.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e04f7a4b52cf4c8c90d5ff02e5ee7db", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheckTest.java", "commitBeforeChange": "c5dfb268770999ece0efcab2f47f007dec339264", "commitAfterChange": "5f0f6d3929dc2c7f1570c03f24a652bffe61db6f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testIgnoreCaseTrue()             throws Exception", "signatureAfterChange": "      public void testIgnoreCaseTrue()             throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(GenericIllegalRegexpCheck.class);", "-        checkConfig.addAttribute(\"format\", illegal);", "-        checkConfig.addAttribute(\"ignoreCase\", \"true\");", "+        mCheckConfig.addAttribute(\"format\", illegal);", "+        mCheckConfig.addAttribute(\"ignoreCase\", \"true\");", "-        verify(checkConfig, getPath(\"InputSemantic.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputSemantic.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b24e1d9ca318c4b0dd09915e422e221c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheckTest.java", "commitBeforeChange": "c5dfb268770999ece0efcab2f47f007dec339264", "commitAfterChange": "5f0f6d3929dc2c7f1570c03f24a652bffe61db6f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testIgnoreCommentsInlineStart()             throws Exception", "signatureAfterChange": "      public void testIgnoreCommentsInlineStart()             throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(GenericIllegalRegexpCheck.class);", "-        checkConfig.addAttribute(\"format\", illegal);", "-        checkConfig.addAttribute(\"ignoreComments\", \"true\");", "+        mCheckConfig.addAttribute(\"format\", illegal);", "+        mCheckConfig.addAttribute(\"ignoreComments\", \"true\");", "-        verify(checkConfig, getPath(\"InputTrailingComment.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputTrailingComment.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf935fd6f0447335a1846bac34b71dcd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheckTest.java", "commitBeforeChange": "c5dfb268770999ece0efcab2f47f007dec339264", "commitAfterChange": "5f0f6d3929dc2c7f1570c03f24a652bffe61db6f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void testIgnoreCommentsFalseCStyle()             throws Exception", "signatureAfterChange": "      public void testIgnoreCommentsFalseCStyle()             throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(GenericIllegalRegexpCheck.class);", "-        checkConfig.addAttribute(\"format\", illegal);", "-        checkConfig.addAttribute(\"ignoreComments\", \"false\");", "+        mCheckConfig.addAttribute(\"format\", illegal);", "+        mCheckConfig.addAttribute(\"ignoreComments\", \"false\");", "-        verify(checkConfig, getPath(\"InputTrailingComment.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputTrailingComment.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4f583aa4f488efc60dd63db3cff3011", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheckTest.java", "commitBeforeChange": "c5dfb268770999ece0efcab2f47f007dec339264", "commitAfterChange": "5f0f6d3929dc2c7f1570c03f24a652bffe61db6f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void testIgnoreCommentsInlineEnd()             throws Exception", "signatureAfterChange": "      public void testIgnoreCommentsInlineEnd()             throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(GenericIllegalRegexpCheck.class);", "-        checkConfig.addAttribute(\"format\", illegal);", "-        checkConfig.addAttribute(\"ignoreComments\", \"true\");", "+        mCheckConfig.addAttribute(\"format\", illegal);", "+        mCheckConfig.addAttribute(\"ignoreComments\", \"true\");", "-        verify(checkConfig, getPath(\"InputTrailingComment.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputTrailingComment.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e16225f14ba0908f28843d42f5ade321", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheckTest.java", "commitBeforeChange": "c5dfb268770999ece0efcab2f47f007dec339264", "commitAfterChange": "5f0f6d3929dc2c7f1570c03f24a652bffe61db6f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testIgnoreCommentsCStyle()             throws Exception", "signatureAfterChange": "      public void testIgnoreCommentsCStyle()             throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(GenericIllegalRegexpCheck.class);", "-        checkConfig.addAttribute(\"format\", illegal);", "-        checkConfig.addAttribute(\"ignoreComments\", \"true\");", "+        mCheckConfig.addAttribute(\"format\", illegal);", "+        mCheckConfig.addAttribute(\"ignoreComments\", \"true\");", "-        verify(checkConfig, getPath(\"InputTrailingComment.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputTrailingComment.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6cfefcdc8fac4761d714436195f2741", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheckTest.java", "commitBeforeChange": "c5dfb268770999ece0efcab2f47f007dec339264", "commitAfterChange": "5f0f6d3929dc2c7f1570c03f24a652bffe61db6f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testIgnoreCommentsCppStyle()             throws Exception", "signatureAfterChange": "      public void testIgnoreCommentsCppStyle()             throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(GenericIllegalRegexpCheck.class);", "-        checkConfig.addAttribute(\"format\", illegal);", "-        checkConfig.addAttribute(\"ignoreComments\", \"true\");", "+        mCheckConfig.addAttribute(\"format\", illegal);", "+        mCheckConfig.addAttribute(\"ignoreComments\", \"true\");", "-        verify(checkConfig, getPath(\"InputTrailingComment.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputTrailingComment.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efe516893dfe6d3b547d73f03038ea7c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheckTest.java", "commitBeforeChange": "c5dfb268770999ece0efcab2f47f007dec339264", "commitAfterChange": "5f0f6d3929dc2c7f1570c03f24a652bffe61db6f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void testIgnoreCommentsNoSpaces()             throws Exception", "signatureAfterChange": "      public void testIgnoreCommentsNoSpaces()             throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(GenericIllegalRegexpCheck.class);", "-        checkConfig.addAttribute(\"format\", illegal);", "-        checkConfig.addAttribute(\"ignoreComments\", \"true\");", "+        mCheckConfig.addAttribute(\"format\", illegal);", "+        mCheckConfig.addAttribute(\"ignoreComments\", \"true\");", "-        verify(checkConfig, getPath(\"InputTrailingComment.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputTrailingComment.java\"), expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fca3e3016c0b191a7bc110ce64eaaef4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheckTest.java", "commitBeforeChange": "c5dfb268770999ece0efcab2f47f007dec339264", "commitAfterChange": "5f0f6d3929dc2c7f1570c03f24a652bffe61db6f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testIgnoreCommentsInlineMiddle() throws Exception", "signatureAfterChange": "      public void testIgnoreCommentsInlineMiddle() throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(GenericIllegalRegexpCheck.class);", "-        checkConfig.addAttribute(\"format\", illegal);", "-        checkConfig.addAttribute(\"ignoreComments\", \"true\");", "+        mCheckConfig.addAttribute(\"format\", illegal);", "+        mCheckConfig.addAttribute(\"ignoreComments\", \"true\");", "-        verify(checkConfig, getPath(\"InputTrailingComment.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputTrailingComment.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd605e36fbcaf690c545cb8c7814094d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheckTest.java", "commitBeforeChange": "c5dfb268770999ece0efcab2f47f007dec339264", "commitAfterChange": "5f0f6d3929dc2c7f1570c03f24a652bffe61db6f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testIgnoreCommentsMultiLine()             throws Exception", "signatureAfterChange": "      public void testIgnoreCommentsMultiLine()             throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(GenericIllegalRegexpCheck.class);", "-        checkConfig.addAttribute(\"format\", illegal);", "-        checkConfig.addAttribute(\"ignoreComments\", \"true\");", "+        mCheckConfig.addAttribute(\"format\", illegal);", "+        mCheckConfig.addAttribute(\"ignoreComments\", \"true\");", "-        verify(checkConfig, getPath(\"InputTrailingComment.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputTrailingComment.java\"), expected);"]}]}