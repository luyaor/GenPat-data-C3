{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "75e07d44a9a0458f6fd8155a65c6b5b9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab8a1957dd4adae7f6a428da589a38cd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/transmogrify/Resolver.java", "commitBeforeChange": "f0be1ede99878862d9dc12bdb32bc4d6447b2426", "commitAfterChange": "21d2edeffda955f71d7b9e545b3b18252363252a", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "     private IClass resolveArithmeticExpression(         SymTabAST expression,         Scope location,         IClass context,         boolean referencePhase)", "signatureAfterChange": "     private IClass resolveArithmeticExpression(         SymTabAST expression,         Scope location,         IClass context,         boolean referencePhase)", "diff": ["-            (IClass) (resolveExpression(leftChild,", "-                location,", "-                context,", "-                referencePhase));", "+            (resolveExpression(leftChild,", "+\t\t    location,", "+\t\t    context,", "+\t\t    referencePhase));", "-                    (IClass) (resolveExpression(rightChild,", "-                        location,", "-                        context,", "-                        referencePhase));", "+                    (resolveExpression(rightChild,", "+\t\t    location,", "+\t\t    context,", "+\t\t    referencePhase));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faace7a506f0c21e0494b7062d7341a4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public ExpressionHandler getHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "signatureAfterChange": "     public ExpressionHandler getHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "diff": ["-            (ExpressionHandler) mCreatedHandlers.get(aAst);", "+            mCreatedHandlers.get(aAst);", "-            final Constructor handlerCtor =", "-                (Constructor) mTypeHandlers.get(type);", "+            final Constructor<?> handlerCtor =", "+                mTypeHandlers.get(type);"]}]}