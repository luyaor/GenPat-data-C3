{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b679da48f35106f59e4e1570f1e5c76", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8fe9dfc2d4a8e6481ab0f581873ded2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheckTest.java", "commitBeforeChange": "c56dce9222a819b4741b4c0cd664d38c58b31050", "commitAfterChange": "866daeeb2ad31e6a5a78235aa46819d9f966ee1c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testTokens() throws Exception", "signatureAfterChange": "      @Test     public void testCheckOnlyBlockComments() throws Exception", "diff": ["-    public void testTokens() throws Exception {", "-            \"136: \" + getCheckMessage(MSG_KEY_SINGLE, 137, 20, 16),", "-        verify(checkConfig, getPath(\"InputCommentsIndentationSurroundingCode.java\"), expected);", "+", "+    @Test", "+    public void testCheckOnlyBlockComments() throws Exception {", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(CommentsIndentationCheck.class);", "+        checkConfig.addAttribute(\"tokens\", \"BLOCK_COMMENT_BEGIN\");", "+        final String[] expected = {", "+            \"23: \" + getCheckMessage(MSG_KEY_BLOCK, 24, 16, 12),", "+            \"25: \" + getCheckMessage(MSG_KEY_BLOCK, 27, 16, 12),", "+            \"28: \" + getCheckMessage(MSG_KEY_BLOCK, 31, 16, 12),", "+            \"51: \" + getCheckMessage(MSG_KEY_BLOCK, 53, 23, 36),", "+            };", "+        final String testInputFile = \"InputCommentsIndentationSurroundingCode.java\";", "+        verify(checkConfig, getPath(testInputFile), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3277b88ffe4e80b077f3ddf3a809699", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "69976b5365b7c33a602dd814337e2db1136288fc", "commitAfterChange": "ac8eadea0b1fb183d56cd809a34a7b9047b47d47", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Test     public void testMembers() throws Exception", "signatureAfterChange": "      @Test     public void testMembers() throws Exception", "diff": ["+", "+        checkConfig.addAttribute(\"arrayInitIndent\", \"4\");", "+        checkConfig.addAttribute(\"braceAdjustment\", \"0\");", "+        checkConfig.addAttribute(\"caseIndent\", \"4\");", "+        checkConfig.addAttribute(\"forceStrictCondition\", \"false\");", "+        checkConfig.addAttribute(\"tabWidth\", \"4\");", "+        checkConfig.addAttribute(\"throwsIndent\", \"4\");", "-            \"10: \" + getCheckMessage(MSG_ERROR, \"=\", 5, 6),", "-            \"45: \" + getCheckMessage(MSG_ERROR, \"class def rcurly\", 3, 2),", "+            \"22: \" + getCheckMessage(MSG_ERROR, \"=\", 5, 6),", "+            \"57: \" + getCheckMessage(MSG_ERROR, \"class def rcurly\", 3, 2),", "-        verify(checkConfig, getPath(\"indentation/InputMembers.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"indentation/InputMembers.java\"), expected);"]}]}