{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "efd0280ab98d2c1ead8641b10005ae05", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a0fc9d8cec32a6d03c2dcae166c3774", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "dad4fa599aa3570980fcaff4cb5f37941847a7a1", "commitAfterChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testloadSuppressionsURISyntaxException() throws Exception", "signatureAfterChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testloadSuppressionsURISyntaxException() throws Exception", "diff": ["-        String fileName = \"suppressions_none.xml\";", "+        String fileName = \"suppressions_none.xml\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "218c7afd38cb6a6ef63532930542fcc7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheck.java", "commitBeforeChange": "dad4fa599aa3570980fcaff4cb5f37941847a7a1", "commitAfterChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected boolean hasText(final DetailAST slistAST)", "signatureAfterChange": "     protected boolean hasText(final DetailAST slistAST)", "diff": ["-        boolean retVal = false;", "-", "+        boolean retVal = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4afd3bf323f33495ec7e4ba66e8725db", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "commitAfterChange": "dba746ba9387bee04ed362254abb5d9ed35169cd", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void checkHtml(final DetailAST ast, final TextBlock comment)", "signatureAfterChange": "     private void checkHtml(final DetailAST ast, final TextBlock comment)", "diff": ["-        final List<String> typeParameters =", "-            CheckUtils.getTypeParameterNames(ast);", "+        final List<String> typeParameters = CheckUtils.getTypeParameterNames(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96d8b9bc168f6493bb8d0ca78d5f2cf9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "ba9639e5decde52e38fbc1a048be7501dc701ac3", "commitAfterChange": "c4928f486c67afa62e7e8fbd5d8f731be7186985", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private static DetailAST getFirstNodeInsideSwitchBlock(             DetailAST block, DetailAST variable)", "signatureAfterChange": "     private static DetailAST getFirstNodeInsideSwitchBlock(             DetailAST block, DetailAST variable)", "diff": ["-        DetailAST firstNodeInsideBlock = null;", "+        DetailAST firstNodeInsideBlock = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4f08338edb18a6f73d3f01b100d58ec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpCheckTest.java", "commitBeforeChange": "0da1e4d980420f6abb465af441e5ced254698273", "commitAfterChange": "4a56989f8ea633b6dfacd1f1ef0a12f5ef6358ba", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testMessagePropertyGood()         throws Exception", "signatureAfterChange": "      @Test     public void testMessagePropertyGood()         throws Exception", "diff": ["-        final String message = \"Bad line :(\";", "+        final String message = \"Bad line :(\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d611aaf22e9493728096bbb649013003", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "d49eaaf2e42538bc7f01510eb3ca2812b253c98a", "commitAfterChange": "2880edd6554400955fb950bf8127311c436d2a7a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private boolean hasTrailComment(DetailAST ast)", "signatureAfterChange": "     private boolean hasTrailComment(DetailAST ast)", "diff": ["-        boolean result = false;", "+        boolean result = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8970ab33f1d0a16873822955cc56e99", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheck.java", "commitBeforeChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "commitAfterChange": "dba746ba9387bee04ed362254abb5d9ed35169cd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitJavadocToken(DetailNode ast)", "signatureAfterChange": "      @Override     public void visitJavadocToken(DetailNode ast)", "diff": ["-        final List<DetailNode> textNodes = getAllNewlineNodes(ast);", "+        final List<DetailNode> textNodes = getAllNewlineNodes(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8c310d468d9d5cdca957064ee123dbe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java", "commitBeforeChange": "fe07d99333284482aad4729ffd17bb94030a3ab4", "commitAfterChange": "3c0c72f96477afb542ee37b3336f4b7b7613ff29", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAllVariants() throws Exception", "signatureAfterChange": "      @Test     public void testAllVariants() throws Exception", "diff": ["-    //all variants", "-    public void testAllVariants() throws Exception {", "+    public void testAllVariants() throws Exception", "+    {", "-        final String[] expected = {", "-                \"3:1: Name 'InputAbstractClassName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-                \"6:1: Name 'NonAbstractClassName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-                \"9:1: Name 'FactoryWithBadName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-                \"13:5: Name 'NonAbstractInnerClass' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-                \"26:1: Class 'AbstractClass' must has abstract modifier.\",", "-                \"29:1: Class 'Class1Factory' must has abstract modifier.\",", "-                \"33:5: Class 'AbstractInnerClass' must has abstract modifier.\",", "-                \"38:5: Class 'WellNamedFactory' must has abstract modifier.\",", "-        };", "+", "+        final String[] expected = {", "+            \"3:1: Name 'InputAbstractClassName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "+            \"6:1: Name 'NonAbstractClassName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "+            \"9:1: Name 'FactoryWithBadName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "+            \"13:5: Name 'NonAbstractInnerClass' must match pattern '^Abstract.*$|^.*Factory$'.\",", "+            \"26:1: Class 'AbstractClass' must has abstract modifier.\",", "+            \"29:1: Class 'Class1Factory' must has abstract modifier.\",", "+            \"33:5: Class 'AbstractInnerClass' must has abstract modifier.\",", "+            \"38:5: Class 'WellNamedFactory' must has abstract modifier.\",};", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd8fde03f7f1b2bbd21e8f5ca970f9f0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheckTest.java", "commitBeforeChange": "3b6beec969a5a9f560c1ddf1142a1693f562e7d7", "commitAfterChange": "39f752cd88cee4ff894846a6c58469e363f65175", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testParents()", "signatureAfterChange": "      @Test     public void testParents()", "diff": ["-        DeclarationOrderCheck check = new DeclarationOrderCheck();", "+        DeclarationOrderCheck check = new DeclarationOrderCheck();"]}]}