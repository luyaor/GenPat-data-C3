{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a438df4c9d5df5fb7e19c89b76b89b84", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d55040c24bf02845ac9ed6cd457814c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpMultilineCheckTest.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testIgnoreCaseTrue() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCaseTrue() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"format\", illegal);", "-        mCheckConfig.addAttribute(\"ignoreCase\", \"true\");", "+        checkConfig.addAttribute(\"format\", illegal);", "+        checkConfig.addAttribute(\"ignoreCase\", \"true\");", "-        verify(mCheckConfig, getPath(\"InputSemantic.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSemantic.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b30d68bc24d18cd4ad792a42bff52806", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheckTest.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testIgnoreCaseTrue() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCaseTrue() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"format\", illegal);", "-        mCheckConfig.addAttribute(\"ignoreCase\", \"true\");", "+        checkConfig.addAttribute(\"format\", illegal);", "+        checkConfig.addAttribute(\"ignoreCase\", \"true\");", "-        verify(mCheckConfig, getPath(\"InputSemantic.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSemantic.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dabd896378b9cac757670360cf14852e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testIgnoreCaseTrue() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCaseTrue() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"format\", illegal);", "-        mCheckConfig.addAttribute(\"ignoreCase\", \"true\");", "+        checkConfig.addAttribute(\"format\", illegal);", "+        checkConfig.addAttribute(\"ignoreCase\", \"true\");", "-        verify(mCheckConfig, getPath(\"InputSemantic.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSemantic.java\"), expected);"]}]}