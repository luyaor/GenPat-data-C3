{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c2a180484a570a911a106b55ffcb9754", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61a283cb488c44de2ed8149498cce04a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final DetailAST modifiers = aAST.getFirstChild();", "-        final AST type = aAST.findFirstToken(TokenTypes.TYPE);", "-        final AST methodName = aAST.findFirstToken(TokenTypes.IDENT);", "-        final DetailAST parameters = aAST.findFirstToken(TokenTypes.PARAMETERS);", "+        final DetailAST modifiers = ast.getFirstChild();", "+        final AST type = ast.findFirstToken(TokenTypes.TYPE);", "+        final AST methodName = ast.findFirstToken(TokenTypes.IDENT);", "+        final DetailAST parameters = ast.findFirstToken(TokenTypes.PARAMETERS);", "-            mObjBlockEquals.put(aAST.getParent(), aAST);", "+            objBlockEquals.put(ast.getParent(), ast);", "-            mObjBlockWithHashCode.add(aAST.getParent());", "+            objBlockWithHashCode.add(ast.getParent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69f6cff43490cbd54f85151f643666c4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (ScopeUtils.isLocalVariableDef(aAST)", "-            || ScopeUtils.inInterfaceOrAnnotationBlock(aAST))", "+        if (ScopeUtils.isLocalVariableDef(ast)", "+            || ScopeUtils.inInterfaceOrAnnotationBlock(ast))", "-        final DetailAST assign = aAST.findFirstToken(TokenTypes.ASSIGN);", "+        final DetailAST assign = ast.findFirstToken(TokenTypes.ASSIGN);", "-        final DetailAST modifiers = aAST.findFirstToken(TokenTypes.MODIFIERS);", "+        final DetailAST modifiers = ast.findFirstToken(TokenTypes.MODIFIERS);", "-        final DetailAST type = aAST.findFirstToken(TokenTypes.TYPE);", "-        final DetailAST ident = aAST.findFirstToken(TokenTypes.IDENT);", "+        final DetailAST type = ast.findFirstToken(TokenTypes.TYPE);", "+        final DetailAST ident = ast.findFirstToken(TokenTypes.IDENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad30942106e513daf35de95440104106", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/MethodNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAst)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAst)", "+    public void visitToken(DetailAST ast)", "-        if (!AnnotationUtility.containsAnnotation(aAst, OVERRIDE)", "-            && !AnnotationUtility.containsAnnotation(aAst, CANONICAL_OVERRIDE))", "+        if (!AnnotationUtility.containsAnnotation(ast, OVERRIDE)", "+            && !AnnotationUtility.containsAnnotation(ast, CANONICAL_OVERRIDE))", "-            super.visitToken(aAst); // Will check the name against the format.", "+            super.visitToken(ast); // Will check the name against the format.", "-        if (!mAllowClassName) {", "+        if (!allowClassName) {", "-                aAst.findFirstToken(TokenTypes.IDENT);", "+                ast.findFirstToken(TokenTypes.IDENT);", "-            final DetailAST classDefOrNew = aAst.getParent().getParent();", "+            final DetailAST classDefOrNew = ast.getParent().getParent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea3053a61a410ddd3dcda05171fc56e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if ((aAST.getType() == TokenTypes.VARIABLE_DEF)", "-            || (aAST.getType() == TokenTypes.PARAMETER_DEF))", "+        if ((ast.getType() == TokenTypes.VARIABLE_DEF)", "+            || (ast.getType() == TokenTypes.PARAMETER_DEF))", "-            processVariable(aAST);", "+            processVariable(ast);", "-        final DetailAST typeMods = aAST.findFirstToken(TokenTypes.MODIFIERS);", "+        final DetailAST typeMods = ast.findFirstToken(TokenTypes.MODIFIERS);", "-                new FieldFrame(mCurrentFrame, isStaticInnerType);", "+                new FieldFrame(currentFrame, isStaticInnerType);", "-        final DetailAST objBlock = aAST.findFirstToken(TokenTypes.OBJBLOCK);", "+        final DetailAST objBlock = ast.findFirstToken(TokenTypes.OBJBLOCK);", "-        mCurrentFrame = frame;", "+        currentFrame = frame;"]}]}