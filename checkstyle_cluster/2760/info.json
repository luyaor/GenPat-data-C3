{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb07d6443432e522ed796aeb00ad90d3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95784949aa18f9d69e331c595ee26550", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "26d7dd555a9d64b0682e1fb08de7a181cdb97b12", "commitAfterChange": "43cdf3d62b35408cf11257af0c33c49a47c9daf9", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": "         public boolean containsInstanceField(String aField)", "signatureAfterChange": "         public boolean containsInstanceField(String aField)", "diff": ["-            if (mInstanceFields.contains(aField)) {", "-                return true;", "-            }", "-            if (isStaticType()) {", "-                return false;", "-            }", "+            return mInstanceFields.contains(aField)", "+                    || !isStaticType()", "+                    && (mParent != null)", "+                    && mParent.containsInstanceField(aField);", "-            return (mParent != null) && mParent.containsInstanceField(aField);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f99a820c86e709bbd7c96438a3ccaa80", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "commitBeforeChange": "03f41815802b1ce6a0ca906c9f28c5a98344a932", "commitAfterChange": "0da1e4d980420f6abb465af441e5ced254698273", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (isInContext(ast, ALLOWED_ASSIGMENT_CONTEXT)) {", "-            return;", "+        if (!isInContext(ast, ALLOWED_ASSIGMENT_CONTEXT)", "+                && !isInNoBraceControlStatement(ast)", "+                && !isInWhileIdiom(ast)) {", "+            log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY);", "-", "-        if (isInNoBraceControlStatement(ast)) {", "-            return;", "-        }", "-", "-        if (isInWhileIdiom(ast)) {", "-            return;", "-        }", "-", "-        log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY);"]}]}