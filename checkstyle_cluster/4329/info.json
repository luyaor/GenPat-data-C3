{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89dae8dc48c8ceacef1e38ba5b78714b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dbbf95440d544581d21fadae2a57446", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "af52963008a800390e8b356db5811886572f37a3", "commitAfterChange": "3a5a73d5c110418f712f5a9a838c6b4106506fdd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testNewLine() throws Exception", "signatureAfterChange": "      @Test     public void testNewLine() throws Exception", "diff": ["+        checkConfig.addAttribute(\"shouldStartLine\", \"true\");", "-            \"111:9: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),", "-            \"111:10: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\"),", "-            \"122:9: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),", "-            \"122:10: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\"),", "-            \"136:10: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\"),", "+            \"111:5: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\", 5),", "+            \"111:6: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\", 6),", "+            \"122:5: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\", 5),", "+            \"122:6: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\", 6),", "+            \"136:6: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\", 6),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4139580bb39af07b7e99ce9897f926f1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "af52963008a800390e8b356db5811886572f37a3", "commitAfterChange": "3a5a73d5c110418f712f5a9a838c6b4106506fdd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void testCoverageIncrease() throws Exception", "signatureAfterChange": "      @Test     public void testCoverageIncrease() throws Exception", "diff": ["-            \"53:14: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "-            \"58:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "-            \"62:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "-            \"67:12: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "-            \"72:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"53:14: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\", 14),", "+            \"58:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\", 18),", "+            \"62:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\", 18),", "+            \"67:12: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\", 12),", "+            \"72:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\", 18),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50f18124ac2be8c23801b71d1eb2c9f4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "af52963008a800390e8b356db5811886572f37a3", "commitAfterChange": "3a5a73d5c110418f712f5a9a838c6b4106506fdd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-            \"8:1: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "-            \"12:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "-            \"21:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "-            \"30:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "-            \"39:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"8:1: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\", 1),", "+            \"12:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"21:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"30:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"39:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\", 5),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "641747c87915c1d14403dcc08cbe9b65", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheckTest.java", "commitBeforeChange": "61f8aaca7bcb8750909bcc95eb5c27c72c7d824d", "commitAfterChange": "bf529ef600fa9ef2034d0412c198b2121f2b94f2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testText()         throws Exception", "signatureAfterChange": "      @Test     public void testText()         throws Exception", "diff": ["-            \"75:13: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"try\"),", "-            \"77:17: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"finally\"),", "-            \"178:5: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"INSTANCE_INIT\"),", "-            \"206:29: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"synchronized\"),", "-            \"219:12: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"STATIC_INIT\"),", "+            \"33:13: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"try\"),", "+            \"35:17: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"finally\"),", "+            \"63:5: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"INSTANCE_INIT\"),", "+            \"71:29: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"synchronized\"),", "+            \"84:12: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"STATIC_INIT\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e34131b3cc7fcfcc46dbdd503b9e0b6b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheckTest.java", "commitBeforeChange": "d814d1352b63136a400cd8f4dffd03d68c9ccd24", "commitAfterChange": "3edd1b53a5d8d407fd33d8c514db8bc1c7274fe5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testStaticVisibilityFromAnonymousClasses() throws Exception", "signatureAfterChange": "      @Test     public void testStaticVisibilityFromAnonymousClasses() throws Exception", "diff": ["-            \"10:95: \" + getCheckMessage(MSG_KEY, \"other\"),", "-            \"16:92: \" + getCheckMessage(MSG_KEY, \"other\"),", "-            \"24:99: \" + getCheckMessage(MSG_KEY, \"other\"),", "-            \"34:103: \" + getCheckMessage(MSG_KEY, \"other\"),", "+            \"10:97: \" + getCheckMessage(MSG_KEY, \"other\"),", "+            \"16:94: \" + getCheckMessage(MSG_KEY, \"other\"),", "+            \"24:101: \" + getCheckMessage(MSG_KEY, \"other\"),", "+            \"34:105: \" + getCheckMessage(MSG_KEY, \"other\"),", "-        verify(checkConfig, getPath(\"InputHidenFieldStaticVisibility.java\"), expected);", "+        verify(checkConfig, getPath(\"InputHiddenFieldStaticVisibility.java\"), expected);"]}]}