{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eece3e5a19b512aa7348413ec90f6568", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70832ced97ea0931e748d437139ba43e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ForHandler.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private void checkForParams()", "signatureAfterChange": "     private void checkForParams()", "diff": ["-        IndentLevel expected = new IndentLevel(getLevel(), getBasicOffset());", "+        final IndentLevel expected =", "+            new IndentLevel(getLevel(), getBasicOffset());", "+        final DetailAST init = getMainAst().findFirstToken(TokenTypes.FOR_INIT);", "-        DetailAST init = getMainAst().findFirstToken(TokenTypes.FOR_INIT);", "-            DetailAST cond =", "+            final DetailAST cond =", "-            DetailAST iter =", "+            final DetailAST iter =", "-            DetailAST forEach =", "+            final DetailAST forEach ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df155a7c44d9aaba656859241f5cbfb6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/CovariantEqualsCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        mEqualsMethods.clear();", "+        equalsMethods.clear();", "-        final DetailAST objBlock = aAST.findFirstToken(TokenTypes.OBJBLOCK);", "+        final DetailAST objBlock = ast.findFirstToken(TokenTypes.OBJBLOCK);", "-                        mEqualsMethods.add(child);", "+                        equalsMethods.add(child);", "-                for (DetailAST equalsAST : mEqualsMethods) {", "+                for (DetailAST equalsAST : equalsMethods) {"]}]}