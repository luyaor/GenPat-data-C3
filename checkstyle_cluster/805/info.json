{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc4191edd68f1cbd1bdd987efc5b1743", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a2d213d2539d26b6d1d6f60a6184276", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean isCheckedMethod(DetailAST aAST)", "signatureAfterChange": "     private boolean isCheckedMethod(DetailAST ast)", "diff": ["-    private boolean isCheckedMethod(DetailAST aAST)", "+    private boolean isCheckedMethod(DetailAST ast)", "-            aAST.findFirstToken(TokenTypes.IDENT).getText();", "-        return !mIgnoredMethodNames.contains(methodName);", "+            ast.findFirstToken(TokenTypes.IDENT).getText();", "+        return !ignoredMethodNames.contains(methodName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7ca067cbc617b3f05ba06b1ae6e5395", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocVariableCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private boolean isIgnored(DetailAST aAST)", "signatureAfterChange": "     private boolean isIgnored(DetailAST ast)", "diff": ["-    private boolean isIgnored(DetailAST aAST)", "+    private boolean isIgnored(DetailAST ast)", "-        final String name = aAST.findFirstToken(TokenTypes.IDENT).getText();", "-        return mIgnoreNamePattern != null", "-                && mIgnoreNamePattern.matcher(name).matches();", "+        final String name = ast.findFirstToken(TokenTypes.IDENT).getText();", "+        return ignoreNamePattern != null", "+                && ignoreNamePattern.matcher(name).matches();"]}]}