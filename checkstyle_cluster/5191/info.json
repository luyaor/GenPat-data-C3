{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f325f0095732142b351119dc4d8711c8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01431c9f2f00295c9445225ecfee5fc7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void verifyBrace(final DetailAST aBrace,                              final DetailAST aStartToken)", "signatureAfterChange": "     private void verifyBrace(final DetailAST aBrace,                              final DetailAST aStartToken)", "diff": ["-                    \"line.new\", \"{\");", "+                        MSG_KEY_LINE_NEW, \"{\");", "-                    \"line.previous\", \"{\");", "+                        MSG_KEY_LINE_PREVIOUS, \"{\");", "-                log(aBrace.getLineNo(), aBrace.getColumnNo(), \"line.break.after\");", "+                log(aBrace.getLineNo(), aBrace.getColumnNo(), MSG_KEY_LINE_BREAK_AFTER);", "-                        \"line.new\", \"{\");", "+                        MSG_KEY_LINE_NEW, \"{\");", "-                        \"line.previous\", \"{\");", "+                        MSG_KEY_LINE_PREVIOUS, \"{\");", "-                    \"line.new\", \"{\");", "+                    MSG_KEY_LINE_NEW, \"{\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "185ee4c8911a4fbe7f4eb07ee296260d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-            log(rcurly, \"line.break.before\");", "+            log(rcurly, MSG_KEY_LINE_BREAK_BEFORE);", "-                log(rcurly, \"line.alone\", \"}\");", "+                log(rcurly, MSG_KEY_LINE_ALONE, \"}\");", "-            log(rcurly, \"line.same\", \"}\");", "+            log(rcurly, MSG_KEY_LINE_SAME, \"}\");", "-            log(rcurly, \"line.alone\", \"}\");", "+            log(rcurly, MSG_KEY_LINE_ALONE, \"}\");", "-            log(rcurly, \"line.new\", \"}\");", "+            log(rcurly, MSG_KEY_LINE_NEW, \"}\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ce42653d2bda9d14f5f8bbbe22b2335", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "af52963008a800390e8b356db5811886572f37a3", "commitAfterChange": "3a5a73d5c110418f712f5a9a838c6b4106506fdd", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void validateNewLinePosion(DetailAST brace, DetailAST startToken,                                        String braceLine, int prevLineLen)", "signatureAfterChange": "     private void validateNewLinePosion(DetailAST brace, DetailAST startToken,                                        String braceLine, int prevLineLen)", "diff": ["-                log(brace.getLineNo(), brace.getColumnNo(),", "-                        MSG_KEY_LINE_NEW, \"{\");", "+                log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);", "-                log(brace.getLineNo(), brace.getColumnNo(),", "-                        MSG_KEY_LINE_PREVIOUS, \"{\");", "+                log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);", "-            log(brace.getLineNo(), brace.getColumnNo(),", "-                    MSG_KEY_LINE_NEW, \"{\");", "+            log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58ddcfd0cb4d3448146e953f08d231a4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "d1f4e8d40014f53f40f045c6f8bea7ead44761c1", "commitAfterChange": "27375d081517bbf69110f3c37f73583a5d3c60fb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void validateNewLinePosion(DetailAST brace, DetailAST startToken,                                        String braceLine)", "signatureAfterChange": "     private void validateNewLinePosion(DetailAST brace, DetailAST startToken,                                        String braceLine)", "diff": ["-            if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {", "-                log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);", "+            if (Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {", "+                log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);", "-                log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);", "+                log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da7ba0d9a81490e73b17f2f453d36347", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void validateNewLinePosion(DetailAST brace, DetailAST startToken,                                        String braceLine)", "signatureAfterChange": "     private void validateNewLinePosion(DetailAST brace, DetailAST startToken,                                        String braceLine)", "diff": ["-                log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);", "+                log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);", "-                log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);", "+                log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);", "-            log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);", "+            log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebe1c8d3a01092b8f8e03f9d8a0c0843", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "cefc92307ed110e14257c47e123426fb88e21a9b", "commitAfterChange": "2b32b003ab81c9bfcb8205b512eb4ea313e529af", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void verifyBrace(final DetailAST brace,                              final DetailAST startToken)", "signatureAfterChange": "     private void verifyBrace(final DetailAST brace,                              final DetailAST startToken)", "diff": ["-                if (Utils.whitespaceBefore(brace.getColumnNo(), braceLine)", "-                    && prevLineLen + 2 <= maxLineLength) {", "-                    log(brace.getLineNo(), brace.getColumnNo(),", "-                        MSG_KEY_LINE_PREVIOUS, \"{\");", "-                }", "-                if (!hasLineBreakAfter(brace)) {", "-                    log(brace.getLineNo(), brace.getColumnNo(), MSG_KEY_LINE_BREAK_AFTER);", "-                }", "+", "+                validateEol(brace, braceLine, prevLineLen);"]}]}