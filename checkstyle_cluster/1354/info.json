{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f164edf08375c7ca7fb88fdf087d8d2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66f85e256b1448fdffee2c750ffe2194", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "098124a60184d272c580db0dbeb71a8181cf4127", "commitAfterChange": "7552a0b72e07c9a0070e84789b5abe6d293de6e0", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void notifyVisit(DetailAST aAST)", "signatureAfterChange": "     private void notifyVisit(DetailAST aAST)", "diff": ["-        final List<Check> visitors = mTokenToChecks.get(TokenTypes", "-                .getTokenName(aAST.getType()));", "-        if (visitors != null) {", "-            for (Check c : visitors) {", "-                c.visitToken(aAST);", "-            }", "+        final Collection<Check> visitors =", "+            mTokenToChecks.get(TokenTypes.getTokenName(aAST.getType()));", "+        for (Check c : visitors) {", "+            c.visitToken(aAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1cd3b326b742cae7daa0c88c1211146", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "098124a60184d272c580db0dbeb71a8181cf4127", "commitAfterChange": "7552a0b72e07c9a0070e84789b5abe6d293de6e0", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void notifyLeave(DetailAST aAST)", "signatureAfterChange": "     private void notifyLeave(DetailAST aAST)", "diff": ["-        final List<Check> visitors = mTokenToChecks.get(TokenTypes", "-                .getTokenName(aAST.getType()));", "-        if (visitors != null) {", "-            for (Check ch : visitors) {", "-                ch.leaveToken(aAST);", "-            }", "+        final Collection<Check> visitors =", "+            mTokenToChecks.get(TokenTypes.getTokenName(aAST.getType()));", "+        for (Check ch : visitors) {", "+            ch.leaveToken(aAST);"]}]}