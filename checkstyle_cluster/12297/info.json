{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dcb10052806f0181e561c2faf1b101cf", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ff68a8cbbfff7289623302dc56aa3d1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractOptionCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setOption(String aOption) throws ConversionException", "signatureAfterChange": "     public void setOption(String optionStr) throws ConversionException", "diff": ["-    public void setOption(String aOption) throws ConversionException", "+    public void setOption(String optionStr) throws ConversionException", "-            mOption = Enum.valueOf(mOptionClass, aOption.trim().toUpperCase());", "+            option = Enum.valueOf(optionClass, optionStr.trim().toUpperCase());", "-            throw new ConversionException(\"unable to parse \" + aOption, iae);", "+            throw new ConversionException(\"unable to parse \" + option, iae);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f7368669aef9baeb2904c638ba7dbc1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setLineSeparator(String aLineSeparator)", "signatureAfterChange": "     public void setLineSeparator(String lineSeparatorParam)", "diff": ["-    public void setLineSeparator(String aLineSeparator)", "+    public void setLineSeparator(String lineSeparatorParam)", "-            mLineSeparator =", "-                Enum.valueOf(LineSeparatorOption.class, aLineSeparator.trim()", "+            lineSeparator =", "+                Enum.valueOf(LineSeparatorOption.class, lineSeparatorParam.trim()", "-            throw new ConversionException(\"unable to parse \" + aLineSeparator,", "+            throw new ConversionException(\"unable to parse \" + lineSeparatorParam,"]}]}