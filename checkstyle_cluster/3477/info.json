{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4fc3616954eec120e0accbcaa3ca89e6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ec245d16422d329b8e4e52edf0e7d84", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "3dbb4e095db52128468a241ce9bc2bcf4bc848af", "commitAfterChange": "d28871069bb3461cbf277858fbf9696340957506", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public AbstractExpressionHandler getHandler(IndentationCheck indentCheck,         DetailAST ast, AbstractExpressionHandler parent)", "signatureAfterChange": "     public AbstractExpressionHandler getHandler(IndentationCheck indentCheck,         DetailAST ast, AbstractExpressionHandler parent)", "diff": ["-        if (handlerCtor != null) {", "-            expHandler = (AbstractExpressionHandler) Utils.invokeConstructor(", "-                    handlerCtor, indentCheck, ast, parent);", "-        }", "+        expHandler = (AbstractExpressionHandler) Utils.invokeConstructor(", "+                handlerCtor, indentCheck, ast, parent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21436adc18af7e3b35b1695d294fc727", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "ce4df1ec00d6eaa2547b9c1bdcbeec2b22f0fe0f", "commitAfterChange": "e8d0f037a2a300da55df6ab28d3459a6af9990d8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private static DetailAST getNthChild(DetailAST ast, int index)", "signatureAfterChange": "     private static DetailAST getNthChild(DetailAST ast, int index)", "diff": ["-        if (child != null) {", "-            for (int i = 0; i < index && child != null; ++i) {", "-                child = child.getNextSibling();", "-            }", "+        for (int i = 0; i < index && child != null; ++i) {", "+            child = child.getNextSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fb510470818cb362aa43fad6867ded8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "commitBeforeChange": "b9936d973566f62a6989e7909f713abc7ff9cdb0", "commitAfterChange": "eb29e863de490162290425654a7fdcbd41d084df", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static boolean isSingleLineFor(DetailAST literalFor)", "signatureAfterChange": "     private static boolean isSingleLineFor(DetailAST literalFor)", "diff": ["-            if (block != null) {", "-                result = literalFor.getLineNo() == block.getLineNo();", "-            }", "+            result = literalFor.getLineNo() == block.getLineNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a40027df7afc3c8fd896ddff4b76bff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "d9415ac10cfda8adb3eb3fb729f6334369ad931d", "commitAfterChange": "e1d0e7f6361c32c69650ba789c1995e49a94142f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void processImport(DetailAST ast)", "signatureAfterChange": "     private void processImport(DetailAST ast)", "diff": ["-        if (name != null) {", "-            imports.add(name.getText());", "-        }", "+        imports.add(name.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7477e582b2052d1b3bd287cdf48bf116", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "ce4df1ec00d6eaa2547b9c1bdcbeec2b22f0fe0f", "commitAfterChange": "e8d0f037a2a300da55df6ab28d3459a6af9990d8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            if (entries != null) {", "-                for (String value : values) {", "-                    String checkName = value;", "-                    // strip off the checkstyle-only prefix if present", "-                    checkName = removeCheckstylePrefixIfExists(checkName);", "-                    entries.add(new Entry(checkName, firstLine, firstColumn,", "+            for (String value : values) {", "+                String checkName = value;", "+                // strip off the checkstyle-only prefix if present", "+                checkName = removeCheckstylePrefixIfExists(checkName);", "+                entries.add(new Entry(checkName, firstLine, firstColumn,", "-                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4ae3b9ed494f7a93d06bd53451aabd5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java", "commitBeforeChange": "d9415ac10cfda8adb3eb3fb729f6334369ad931d", "commitAfterChange": "e1d0e7f6361c32c69650ba789c1995e49a94142f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void processImport(DetailAST ast)", "signatureAfterChange": "     private void processImport(DetailAST ast)", "diff": ["-        if (name != null) {", "-            // Note: different from UnusedImportsCheck.processImport(),", "-            // '.*' imports are also added here", "-            imports.add(name);", "-        }", "+        // Note: different from UnusedImportsCheck.processImport(),", "+        // '.*' imports are also added here", "+        imports.add(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6ab7c354fe8faa35d9e0485ef362cf6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "63b127c70d40d927958546452f89833ce9ab871d", "commitAfterChange": "4ffb4d7f1b6b16e9e3cda5a7afd816cc16152433", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static boolean isSuppressed(String sourceName, int line,         int column)", "signatureAfterChange": "     public static boolean isSuppressed(String sourceName, int line,         int column)", "diff": ["-        if (checkAlias != null) {", "-            for (Entry entry : entries) {", "-                final boolean afterStart =", "-                    entry.getFirstLine() < line", "-                        || entry.getFirstLine() == line && entry", "-                            .getFirstColumn() <= column;", "-                final boolean beforeEnd =", "-                    entry.getLastLine() > line", "-                        || entry.getLastLine() == line && entry", "-                            .getLastColumn() >= column;", "-                final boolean nameMatches =", "-                    entry.getCheckName().equals(checkAlias);", "-                if (afterStart && beforeEnd && nameMatches) {", "-                    return true;", "-                }", "+        for (Entry entry : entries) {", "+            final boolean afterStart =", "+                entry.getFirstLine() < line", "+                    || entry.getFirstLine() == line && entry", "+                        .getFirstColumn() <= column;", "+            final boolean beforeEnd =", "+                entry.getLastLine() > line", "+                    || entry.getLastLine() == line && entry", "+                        .getLastColumn() >= column;", "+            final boolean nameMatches =", "+                entry.getCheckName().equals(checkAlias);", "+            if (afterStart && beforeEnd && nameMatches) {", "+                return true;"]}]}