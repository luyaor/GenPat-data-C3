{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6380845d2b7bb40151d744483bf382d8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8155063a4efe6a14abfc802475600cb7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/IntMatchFilterTest.java", "commitBeforeChange": "ff6c49e6a715d8372ac77a34aa77d9eaff6db154", "commitAfterChange": "911065320fb39299f442ea08f775cfe08ba2a2ed", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDecide()", "signatureAfterChange": "     @Test     public void testDecide()", "diff": ["-        assertFalse(\"less than\", filter.accept(new Integer(-1)));", "-        assertTrue(\"equal\", filter.accept(new Integer(0)));", "-        assertFalse(\"greater than\", filter.accept(new Integer(1)));", "+        assertFalse(\"less than\", filter.accept(Integer.valueOf(-1)));", "+        assertTrue(\"equal\", filter.accept(Integer.valueOf(0)));", "+        assertFalse(\"greater than\", filter.accept(Integer.valueOf(1)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d55139677d38110ffa0061f2cb65db3d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/CSVFilterTest.java", "commitBeforeChange": "ff6c49e6a715d8372ac77a34aa77d9eaff6db154", "commitAfterChange": "911065320fb39299f442ea08f775cfe08ba2a2ed", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDecideSingle()", "signatureAfterChange": "     @Test     public void testDecideSingle()", "diff": ["-        assertFalse(\"less than\", filter.accept(new Integer(-1)));", "-        assertTrue(\"equal\", filter.accept(new Integer(0)));", "-        assertFalse(\"greater than\", filter.accept(new Integer(1)));", "+        assertFalse(\"less than\", filter.accept(Integer.valueOf(-1)));", "+        assertTrue(\"equal\", filter.accept(Integer.valueOf(0)));", "+        assertFalse(\"greater than\", filter.accept(Integer.valueOf(1)));"]}]}