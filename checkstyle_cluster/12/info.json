{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd5598cda51bfff52db88c4bcf0165ac", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04afcad958ae27358110a16f25b332d2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/TodoCommentCheckTest.java", "commitBeforeChange": "15c91c8ec20f1349e6f8eea2beb16e922bb03a89", "commitAfterChange": "8a276f35fd82a6d1d129b9db5d284e8ec474bac8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        assertTrue(actual.length == 1);", "+        assertEquals(1, actual.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cef41c9de182d4a0a63f5b69a7e6a6e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/UpperEllCheckTest.java", "commitBeforeChange": "15c91c8ec20f1349e6f8eea2beb16e922bb03a89", "commitAfterChange": "8a276f35fd82a6d1d129b9db5d284e8ec474bac8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAcceptableTockens()", "signatureAfterChange": "      @Test     public void testAcceptableTockens()", "diff": ["-        assertTrue(actual.length == 1);", "+        assertEquals(1, actual.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e2c62213e0e793926de77512ddab854", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "15c91c8ec20f1349e6f8eea2beb16e922bb03a89", "commitAfterChange": "8a276f35fd82a6d1d129b9db5d284e8ec474bac8", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      @Test     public void testConfigCheckerWithIgnore() throws CheckstyleException", "signatureAfterChange": "      @Test     public void testConfigCheckerWithIgnore() throws CheckstyleException", "diff": ["-        assertTrue(children.length == 0);", "+        assertEquals(0, children.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f603184329caef807fdd1b18e3f0e03", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "15c91c8ec20f1349e6f8eea2beb16e922bb03a89", "commitAfterChange": "8a276f35fd82a6d1d129b9db5d284e8ec474bac8", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "      @Test     public void testLoadConfiguration_WrongURL() throws CheckstyleException", "signatureAfterChange": "      @Test     public void testLoadConfiguration_WrongURL() throws CheckstyleException", "diff": ["-            assertTrue(children[0].getChildren().length == 0);", "+            assertEquals(0, children[0].getChildren().length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6238f468eeae8d3f15721db6c3538f1d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheckTest.java", "commitBeforeChange": "15c91c8ec20f1349e6f8eea2beb16e922bb03a89", "commitAfterChange": "8a276f35fd82a6d1d129b9db5d284e8ec474bac8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testGetAcceptableTockens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTockens()", "diff": ["-        assertTrue(actual.length == 1);", "+        assertEquals(1, actual.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87cc05474c6d3fe6fcc0165951c176a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "15c91c8ec20f1349e6f8eea2beb16e922bb03a89", "commitAfterChange": "8a276f35fd82a6d1d129b9db5d284e8ec474bac8", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      @Test     public void testLoadConfiguration_Deprecated() throws CheckstyleException", "signatureAfterChange": "      @Test     public void testLoadConfiguration_Deprecated() throws CheckstyleException", "diff": ["-            assertTrue(children[0].getChildren().length == 0);", "+            assertEquals(0, children[0].getChildren().length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b17934f768fdb1e3d1050014a3ac7a57", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "15c91c8ec20f1349e6f8eea2beb16e922bb03a89", "commitAfterChange": "8a276f35fd82a6d1d129b9db5d284e8ec474bac8", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "      @Test     public void testLoadConfigurationFromClassPath() throws CheckstyleException", "signatureAfterChange": "      @Test     public void testLoadConfigurationFromClassPath() throws CheckstyleException", "diff": ["-            assertTrue(children[0].getChildren().length == 0);", "+            assertEquals(0, children[0].getChildren().length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c720801e77ad4901375a4b0d8711d9ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "15c91c8ec20f1349e6f8eea2beb16e922bb03a89", "commitAfterChange": "8a276f35fd82a6d1d129b9db5d284e8ec474bac8", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      @Test     public void testConfigWithIgnore() throws CheckstyleException", "signatureAfterChange": "      @Test     public void testConfigWithIgnore() throws CheckstyleException", "diff": ["-        assertTrue(children[0].getChildren().length == 0);", "+        assertEquals(0, children[0].getChildren().length);"]}]}