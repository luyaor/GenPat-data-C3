{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a5749d66d37197ba8cc85c56dd70b524", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89e18ace2a8e5123691cb6fc67a6219d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule485annotations/AnnotationLocationTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void annotationTest() throws Exception", "signatureAfterChange": "      @Test     public void annotationTest() throws Exception", "diff": ["-        Class<AnnotationLocationCheck> clazz = AnnotationLocationCheck.class;", "+        final Class<AnnotationLocationCheck> clazz = AnnotationLocationCheck.class;", "-        Configuration checkConfig = builder.getCheckConfig(\"AnnotationLocation\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"AnnotationLocation\");", "-        String msgLocationAlone = \"annotation.location.alone\";", "-        String msgLocation = \"annotation.location\";", "+        final String msgLocationAlone = \"annotation.location.alone\";", "+        final String msgLocation = \"annotation.location\";", "-        String filePath = builder.getFilePath(\"AnnotationLocationInput\");", "+        final String filePath = builder.getFilePath(\"AnnotationLocationInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c206ed06afc04cc3c49f6ccf0f2028fe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/WhitespaceAroundTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void genericWhitespaceTest() throws Exception", "signatureAfterChange": "      @Test     public void genericWhitespaceTest() throws Exception", "diff": ["-        String msgPreceded = \"ws.preceded\";", "-        String msgFollowed = \"ws.followed\";", "-        String msgNotPreceded = \"ws.notPreceded\";", "-        String msgIllegalFollow = \"ws.illegalFollow\";", "-        Configuration checkConfig = builder.getCheckConfig(\"GenericWhitespace\");", "+        final String msgPreceded = \"ws.preceded\";", "+        final String msgFollowed = \"ws.followed\";", "+        final String msgNotPreceded = \"ws.notPreceded\";", "+        final String msgIllegalFollow = \"ws.illegalFollow\";", "+        final Configuration checkConfig = builder.getCheckConfig(\"GenericWhitespace\");", "-        String filePath = builder.getFilePath(\"GenericWhitespaceInput\");", "+        final String filePath = builder.getFilePath(\"GenericWhitespaceInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}]}