{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e52848ff06cb1275856026d1c6329c55", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d8ffa66593701759a2c6806b04913fb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "4795a2b48559bb4609ae0ed8d55679fdb59b7ef3", "commitAfterChange": "253622ab83a78434d28d050df40cdedcec303713", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        ArrayList hitList = (ArrayList) mStringMap.get(currentString);", "-        if (hitList == null) {", "-            hitList = new ArrayList();", "-            mStringMap.put(currentString, hitList);", "+        if ((mPattern == null) || !mPattern.matcher(currentString).find()) {", "+            ArrayList hitList = (ArrayList) mStringMap.get(currentString);", "+            if (hitList == null) {", "+                hitList = new ArrayList();", "+                mStringMap.put(currentString, hitList);", "+            }", "+            final int line = aAST.getLineNo();", "+            final int col = aAST.getColumnNo();", "+            hitList.add(new StringInfo(line, col));", "-        final int line = aAST.getLineNo();", "-        final int col = aAST.getColumnNo();", "-        hitList.add(new StringInfo(line, col));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "780b36378f09e8b2cd1f46b181d63a71", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/HiddenFieldCheck.java", "commitBeforeChange": "78faabd14fb354fc0017c59b7be70dec496a39f3", "commitAfterChange": "ca5c92f2e784f66533b1074269a5226e99af6157", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processVariable(DetailAST aAST)", "signatureAfterChange": "     private void processVariable(DetailAST aAST)", "diff": ["-                        log(nameAST.getLineNo(), nameAST.getColumnNo(),", "-                            \"hidden.field\", name);", "-                        break;", "+                        if ((mRegexp == null) || (!getRegexp().match(name))) {", "+                            log(nameAST.getLineNo(), nameAST.getColumnNo(),", "+                                \"hidden.field\", name);", "+                            break;", "+                        }"]}]}