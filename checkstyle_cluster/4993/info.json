{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7b175e21a3e70b7bb64cc124bc9c683", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6444bbc7a0debee8b19aaec1c3589b9d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/TokenTypes.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static String getShortDescription(String aName)", "signatureAfterChange": "     public static String getShortDescription(String name)", "diff": ["-    public static String getShortDescription(String aName)", "+    public static String getShortDescription(String name)", "-        if (!TOKEN_NAME_TO_VALUE.containsKey(aName)) {", "-            throw new IllegalArgumentException(\"given name \" + aName);", "+        if (!TOKEN_NAME_TO_VALUE.containsKey(name)) {", "+            throw new IllegalArgumentException(\"given name \" + name);", "-        return bundle.getString(aName);", "+        return bundle.getString(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ca09bafaf33ab2f6081c58400f65fc3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Override     public Object createModule(String aName)         throws CheckstyleException", "signatureAfterChange": "     @Override     public Object createModule(String name)         throws CheckstyleException", "diff": ["-    public Object createModule(String aName)", "+    public Object createModule(String name)", "-            return doMakeObject(aName);", "+            return doMakeObject(name);", "-                return doMakeObject(aName + \"Check\");", "+                return doMakeObject(name + \"Check\");", "-                    \"Unable to instantiate \" + aName, ex2);", "+                    \"Unable to instantiate \" + name, ex2);"]}]}