{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5574c86355dc8a5fa6fcdb8361474584", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c64cb12fb75e42835dece536aa9ffcd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final int tokenType = aAST.getType();", "+        final int tokenType = ast.getType();", "-            mCounters.push(new Counter());", "+            counters.push(new Counter());", "-        if (isCountable(aAST)) {", "+        if (isCountable(ast)) {", "-            for (final Counter c : mCounters) {", "+            for (final Counter c : counters) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75950be677ebd66b6d16de0514789acc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private boolean isCountable(DetailAST aAST)", "signatureAfterChange": "     private boolean isCountable(DetailAST ast)", "diff": ["-    private boolean isCountable(DetailAST aAST)", "+    private boolean isCountable(DetailAST ast)", "-        final int tokenType = aAST.getType();", "+        final int tokenType = ast.getType();", "-            countable = isExpressionCountable(aAST);", "+            countable = isExpressionCountable(ast);", "-            countable = isVariableDefCountable(aAST);", "+            countable = isVariableDefCountable(ast);"]}]}