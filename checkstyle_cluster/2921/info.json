{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "91b3a46247b58c8f9fcb8e5ebd42bd17", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a9e65b66d278d8ecaff40809c038357", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "27149f3504a2f350b74f456a9bffbae76a460060", "commitAfterChange": "5ede09997c283b4c418f0f540848e006be04fa87", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                        (null == minimumMessage) ? \"descendant.token.sum.min\"", "+                        (null == minimumMessage) ? MSG_KEY_SUM_MIN", "-                        (null == maximumMessage) ? \"descendant.token.sum.max\"", "+                        (null == maximumMessage) ? MSG_KEY_SUM_MAX", "-                            (null == minimumMessage) ? \"descendant.token.min\"", "+                            (null == minimumMessage) ? MSG_KEY_MIN", "-                            (null == maximumMessage) ? \"descendant.token.max\"", "+                            (null == maximumMessage) ? MSG_KEY_MAX"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cbe7e7d38b09e0dd53ad95972249df3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/UnnecessaryParenthesesCheck.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            log(ast, \"unnecessary.paren.ident\", ast.getText());", "+            log(ast, MSG_IDENT, ast.getText());", "-                log(ast, \"unnecessary.paren.string\",", "+                log(ast, MSG_STRING,", "-                log(ast, \"unnecessary.paren.literal\", ast.getText());", "+                log(ast, MSG_LITERAL, ast.getText());", "-                log(ast, \"unnecessary.paren.assign\");", "+                log(ast, MSG_ASSIGN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b84bd178b96cfcbe051944559680cacc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedCheck.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean containsJavadocTag(final TextBlock aJavadoc)", "signatureAfterChange": "     private boolean containsJavadocTag(final TextBlock aJavadoc)", "diff": ["-                    this.log(currentLine, \"javadoc.duplicateTag\",", "+                    this.log(currentLine, MSG_KEY_JAVADOC_DUPLICATE_TAG,", "-                                this.log(currentLine, \"javadoc.duplicateTag\",", "+                                this.log(currentLine, MSG_KEY_JAVADOC_DUPLICATE_TAG,", "-                            this.log(currentLine, \"javadoc.missing\");", "+                            this.log(currentLine, MSG_KEY_JAVADOC_MISSING);", "-                                this.log(currentLine, \"javadoc.duplicateTag\",", "+                                this.log(currentLine, MSG_KEY_JAVADOC_DUPLICATE_TAG,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8984380109d49a45032d4dc47d5a164", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/RedundantImportCheck.java", "commitBeforeChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "commitAfterChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                log(ast.getLineNo(), ast.getColumnNo(), \"import.lang\",", "+                log(ast.getLineNo(), ast.getColumnNo(), MSG_LANG,", "-                log(ast.getLineNo(), ast.getColumnNo(), \"import.same\",", "+                log(ast.getLineNo(), ast.getColumnNo(), MSG_SAME,", "-                            \"import.duplicate\", full.getLineNo(),", "+                            MSG_DUPLICATE, full.getLineNo(),", "-                        \"import.duplicate\", full.getLineNo(), imp.getText());", "+                        MSG_DUPLICATE, full.getLineNo(), imp.getText());"]}]}