{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d195a8eeac5de1482962268fed8ff80", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1865be3508d629ba66bfe65ead4fe622", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Class<?> resolve(String aName, String aCurrentClass)         throws ClassNotFoundException", "signatureAfterChange": "     public Class<?> resolve(String aName, String aCurrentClass)         throws ClassNotFoundException", "diff": ["-        Iterator<String> it = mImports.iterator();", "-        while (it.hasNext()) {", "-            final String imp = it.next();", "+        for (String imp : mImports) {", "-        it = mImports.iterator();", "-        while (it.hasNext()) {", "-            final String imp = it.next();", "+        for (String imp : mImports) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eac0de3e03340607943c0ea831643968", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Override     public int[] getAcceptableTokens()", "signatureAfterChange": "     @Override     public int[] getAcceptableTokens()", "diff": ["-        final Iterator<String> it = tokenNames.iterator();", "-        while (it.hasNext()) {", "-            final String name = it.next();", "-            result[i] = TokenTypes.getTokenId(name);", "-            i++;", "+        for (String name : tokenNames) {", "+            result[i++] = TokenTypes.getTokenId(name);"]}]}