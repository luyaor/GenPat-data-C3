{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35fe6c40a7b429835e8e36c57f00edc3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "008d64a4fd2afd4310eabeb1bdc78470", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/Main.java", "commitBeforeChange": "546f336e25b26d072f96e2cda139b885858ed5b0", "commitAfterChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main(String... args)", "signatureAfterChange": "     public static void main(String... args)", "diff": ["-            final File f = new File(args[0]);", "-            panel.openFile(f, frame);", "+            final File file = new File(args[0]);", "+            panel.openFile(file, frame);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04f611268464f441886fbbf716e2f09c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/BaseCheckTestCase.java", "commitBeforeChange": "a1706551793b62548d9dcc93731b656f07b125a4", "commitAfterChange": "00fb7f0c1852eb015933c7c121284597de29caad", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      protected void verify(Checker aC,                           String aProcessedFilename,                           String aMessageFileName,                           String[] aExpected)         throws Exception", "signatureAfterChange": "      protected void verify(Checker aC,                           String aProcessedFilename,                           String aMessageFileName,                           String[] aExpected)         throws Exception", "diff": ["+        verify(aC,", "+            new File[] {new File(aProcessedFilename)},", "+            aMessageFileName, aExpected);", "+    }", "-        final int errs = aC.process(new File[] {new File(aProcessedFilename)});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cfda55ab72f7a2fe1b170d035c2f650", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheck.java", "commitBeforeChange": "e287c5e741ce8b13d19e7f0885977792a0d0fcc9", "commitAfterChange": "f38d8abd42c3e824635e542e6031b3da1997c02e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void findDuplicates()", "signatureAfterChange": "     private void findDuplicates()", "diff": ["-        final int len = mFiles.length;", "+        final int len = mFiles.size();", "-            final String path = mFiles[i].getPath();", "+            final String path = mFiles.get(i).getPath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e8737548154e17dd73e67f3633ee021", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "61dcaf5f512b026e4aad1d61946e48905d6016d4", "commitAfterChange": "88f75f5413914bea5b39ba318edf912ee706226d", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "      @Test     public void testExistingTargetFilePlainOutputToFileWithoutRwPermissions()             throws Exception", "signatureAfterChange": "      @Test     public void testExistingTargetFilePlainOutputToFileWithoutRwPermissions()             throws Exception", "diff": ["-        file.setReadable(true, true);", "-        file.setWritable(false, false);", "+        assertTrue(file.setReadable(true, true));", "+        assertTrue(file.setWritable(false, false));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74326be09aa9ba065dae8c90ce15b6b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheck.java", "commitBeforeChange": "e287c5e741ce8b13d19e7f0885977792a0d0fcc9", "commitAfterChange": "f38d8abd42c3e824635e542e6031b3da1997c02e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private int verifiyDuplicateLines(         int aI, int aJ, int aIStartLine, int aJStartLine)", "signatureAfterChange": "     private int verifiyDuplicateLines(         int aI, int aJ, int aIStartLine, int aJStartLine)", "diff": ["-        final File iFile = mFiles[aI];", "-        final File jFile = mFiles[aJ];", "+        final File iFile = mFiles.get(aI);", "+        final File jFile = mFiles.get(aJ);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9872a301438fa0ae5bf81bf57768d9e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/UtilsTest.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testLengthExpandedTabs()         throws Exception", "signatureAfterChange": "     public void testLengthExpandedTabs()         throws Exception", "diff": ["-        final RE r1 = Utils.getRE(\"a\");", "-        final RE r2 = Utils.getRE(\"a\");", "+        final Pattern r1 = Utils.getPattern(\"a\");", "+        final Pattern r2 = Utils.getPattern(\"a\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc11cdba494d5d2dc3fc5868f11d8f51", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "eaad55fdba73e17e103dc6600867f26fd6a3896b", "commitAfterChange": "5cf355fad4b8bc613962aac2f52b48d5726f2acc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static String hexEncode(byte[] aByteArray)", "signatureAfterChange": "     private static String hexEncode(byte[] aByteArray)", "diff": ["-            final int low = b & 0x0F;", "-            final int high = (b >> 4) & 0x0F;", "+            final int low = b & MASK_0X0F;", "+            final int high = (b >> SHIFT_4) & MASK_0X0F;"]}]}