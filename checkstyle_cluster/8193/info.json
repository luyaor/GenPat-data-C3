{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "780559ff3e15f8fafa9b04c2b43847fe", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7242b589b04b9d2343ac0b6a5cdfadf9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "commitAfterChange": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static <T extends Enum<T>> T getOption(final Class<T> enuclass,         final String value)", "signatureAfterChange": "     private static <T extends Enum<T>> T getOption(final Class<T> enumClass,         final String value)", "diff": ["-    private static <T extends Enum<T>> T getOption(final Class<T> enuclass,", "+    private static <T extends Enum<T>> T getOption(final Class<T> enumClass,", "-            return Enum.valueOf(enuclass, value.trim().toUpperCase(Locale.ENGLISH));", "+            return Enum.valueOf(enumClass, value.trim().toUpperCase(Locale.ENGLISH));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a921e59c2c39d23fb75bae5d6c31e739", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private <T extends Enum<T>> T getOption(final Class<T> aEnumClass,         final String aString)", "signatureAfterChange": "     private <T extends Enum<T>> T getOption(final Class<T> enuclass,         final String string)", "diff": ["-    private <T extends Enum<T>> T getOption(final Class<T> aEnumClass,", "-        final String aString)", "+    private <T extends Enum<T>> T getOption(final Class<T> enuclass,", "+        final String string)", "-            return Enum.valueOf(aEnumClass, aString.trim().toUpperCase());", "+            return Enum.valueOf(enuclass, string.trim().toUpperCase());", "-            throw new ConversionException(\"unable to parse \" + aString, iae);", "+            throw new ConversionException(\"unable to parse \" + string, iae);"]}]}