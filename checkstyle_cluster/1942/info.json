{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a8d41887817835f4d5ea89fb142d9c2", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3587bb53e79778bbe7f0fa25d9008792", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheckTest.java", "commitBeforeChange": "6db0b3effd48f02d741b2202338d710b1b254910", "commitAfterChange": "59de966a7e8a2225da2b1e12624ca24beab509ac", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testIt()         throws Exception", "signatureAfterChange": "      public void testAllowSwitchInCase()         throws Exception", "diff": ["-    public void testIt()", "-            \"38:17: Avoid nested blocks.\",", "+", "+    public void testAllowSwitchInCase()", "+        throws Exception", "+    {", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(AvoidNestedBlocksCheck.class);", "+        checkConfig.addAttribute(\"allowInSwitchCase\", Boolean.TRUE.toString());", "+", "+        final String[] expected = {", "+            \"22:9: Avoid nested blocks.\",", "+            \"44:17: Avoid nested blocks.\",", "+            \"58:17: Avoid nested blocks.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82d3b24453dffc307449bb6d2e0ce898", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheckTest.java", "commitBeforeChange": "a501b8d95ac2840ce201549e552f2cc540fde4ce", "commitAfterChange": "5a6be4c757437373caf8e7d675f5bc1aa6a9ae38", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void test() throws Exception", "signatureAfterChange": "      public void testIntegerOverflow() throws Exception", "diff": ["-    public void test() throws Exception {", "+", "+    public void testIntegerOverflow() throws Exception {", "+        DefaultConfiguration checkConfig =", "+            createCheckConfig(NPathComplexityCheck.class);", "+", "+        checkConfig.addAttribute(\"max\", \"0\");", "+        String[] expected = {", "+            \"9:5: NPath Complexity is 3,486,784,401 (max allowed is 0).\" // larger than MAXINT", "+        };", "+", "+        verify(checkConfig, getPath(\"ComplexityOverflow.java\"), expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e506b448bfe6d5a679aa21138e1302b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportTest.java", "commitBeforeChange": "32f5f97181f9049af5411a5b8f151b51f1c5f165", "commitAfterChange": "731b581a1c0406506266226c50be8796179464e5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testWithChecker()         throws Exception", "signatureAfterChange": "      public void testExcludes()         throws Exception", "diff": ["-    public void testWithChecker()", "+", "+    public void testExcludes()", "+        throws Exception", "+    {", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(AvoidStarImportCheck.class);", "+        checkConfig.addAttribute(\"excludes\", \"java.io,java.lang\");", "+        // allow the java.io/java.lang star imports", "+        final String[] expected2 = new String[] {", "+            \"7: Using the '.*' form of import should be avoided - com.puppycrawl.tools.checkstyle.*.\"", "+        };", "+        verify(checkConfig, getPath(\"InputImport.java\"), expected2);", "+    }"]}]}