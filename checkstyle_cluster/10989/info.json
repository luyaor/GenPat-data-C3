{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e82d3b3e6f721a781cf98bbc9de7d6b9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "053e67128f23517816dcb689a5cce0f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java", "commitBeforeChange": "e024f6fd18874714f8f900be854a50b6bb23db16", "commitAfterChange": "958d0dae4d97b4122c7e54ce1b1bc23c0b00e6a0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static Object makeObject(String[] aPackages, ClassLoader aLoader,         String aName)         throws CheckstyleException", "signatureAfterChange": "     public static Object makeObject(String[] aPackages, ClassLoader aLoader,         String aName)         throws CheckstyleException", "diff": ["-        return factory.doMakeObject(aPackages, aLoader, aName);", "+        try {", "+            return factory.doMakeObject(aPackages, aLoader, aName);", "+        }", "+        catch (CheckstyleException ex) {", "+            //try again with suffix \"Check\"", "+            try {", "+                return factory.", "+                    doMakeObject(aPackages, aLoader, aName + \"Check\");", "+            }", "+            catch (CheckstyleException ex2) {", "+                throw new CheckstyleException(", "+                    \"Unable to instantiate \" + aName);", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4490749131775f24e1e527310516bb93", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractOptionCheck.java", "commitBeforeChange": "d2af4accdde3eac0a2103353f490e97bf62f61d2", "commitAfterChange": "d4b933799af120cf4a8490db98f396b6348430e9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setOption(String aOption)         throws ConversionException", "signatureAfterChange": "     public void setOption(String aOption) throws ConversionException", "diff": ["-    public void setOption(String aOption)", "-        throws ConversionException", "+    public void setOption(String aOption) throws ConversionException", "-        mOption = mOption.decode(aOption);", "-        if (mOption == null) {", "-            throw new ConversionException(\"unable to parse \" + aOption);", "+        try {", "+            mOption = Enum.valueOf(mOptionClass, aOption.trim().toUpperCase());", "+        }", "+        catch (IllegalArgumentException iae) {", "+            throw new ConversionException(\"unable to parse \" + aOption, iae);"]}]}