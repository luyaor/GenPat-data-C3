{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69742c3d2f1335f3bf9d1527b4b39879", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42bd48ea7e531cee682910cbd5b80a5c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "e380ac8df92c051d843d380d5e8a6fe90af9df9d", "commitAfterChange": "ab2f93f9bf61816d84154e636d32c81c05854e24", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static AuditListener createListener(CommandLine line,                                                 OutputStream out,                                                 boolean closeOut)             throws UnsupportedEncodingException", "signatureAfterChange": "     private static AuditListener createListener(String format,                                                 OutputStream out,                                                 boolean closeOut)             throws UnsupportedEncodingException, CheckstyleException", "diff": ["-    private static AuditListener createListener(CommandLine line,", "+    private static AuditListener createListener(String format,", "-            throws UnsupportedEncodingException", "+            throws UnsupportedEncodingException, CheckstyleException", "-        final String format =", "-            line.hasOption(\"f\") ? line.getOptionValue(\"f\") : \"plain\";", "-", "-        if (\"xml\".equals(format)) {", "-            listener = new XMLLogger(out, closeOut);", "+        switch (format) {", "+            case \"xml\":", "+                listener = new XMLLogger(out, closeOut);", "+                break;", "+", "+            case \"plain\":", "+                listener = new DefaultLogger(out, closeOut);", "+                break;", "+", "+            default:", "+                throw new CheckstyleException(\"Invalid output format. Found '\" + format", "+                        + \"' but expected 'plain' or 'xml'.\");", "-        else if (\"plain\".equals(format)) {", "-            listener = new DefaultLogger(out, closeOut);", "-        }", "-        else {", "-            System.out.println(\"Invalid format: (\" + format", "-                               + \"). Must be 'plain' or 'xml'.\");", "-            usage();", "-        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9af946deffdcd0fba95fcb6b70b0722", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "777a4e04d85611a1e857ea92cdb6f155c21c28a0", "commitAfterChange": "aaf39002ac7fa00b95f4719beca058f6f7445574", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static AuditListener createListener(String format,                                                 String outputLocation)             throws UnsupportedEncodingException, FileNotFoundException", "signatureAfterChange": "     private static AuditListener createListener(String format,                                                 String outputLocation)             throws UnsupportedEncodingException, FileNotFoundException", "diff": ["-        switch (format) {", "-            case \"xml\":", "-                listener = new XMLLogger(out, closeOut);", "-                break;", "+        if (\"xml\".equals(format)) {", "+            listener = new XMLLogger(out, closeOut);", "-            case \"plain\":", "-                listener = new DefaultLogger(out, closeOut);", "-                break;", "+        }", "+        else if (\"plain\".equals(format)) {", "+            listener = new DefaultLogger(out, closeOut);", "-            default:", "-                throw new IllegalStateException(\"Invalid output format. Found '\" + format", "-                        + \"' but expected 'plain' or 'xml'.\");", "+        }", "+        else {", "+            throw new IllegalStateException(\"Invalid output format. Found '\" + format", "+                    + \"' but expected 'plain' or 'xml'.\");"]}]}