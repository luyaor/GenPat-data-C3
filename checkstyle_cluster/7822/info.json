{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82d48336ebe56311fcbc11b11a8f51d6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3162c60f3891e0e9d50b5115c2db3afd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Comment.java", "commitBeforeChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "commitAfterChange": "abfc952fd0ed88f6246b1d969a8a980ea63f0bd6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public boolean intersects(int startLineNo, int startColNo,                               int endLineNo, int endColNo)", "signatureAfterChange": "      @Override     public boolean intersects(int startLine, int startCol,                               int endLine, int endCol)", "diff": ["-    public boolean intersects(int startLineNo, int startColNo,", "-                              int endLineNo, int endColNo) {", "+    public boolean intersects(int startLine, int startCol,", "+                              int endLine, int endCol) {", "-        final long thisStart = firstLine * multiplier + firstCol;", "-        final long thisEnd = lastLine * multiplier + lastCol;", "-        final long inStart = startLineNo * multiplier + startColNo;", "-        final long inEnd = endLineNo * multiplier + endColNo;", "+        final long thisStart = startLineNo * multiplier + startColNo;", "+        final long thisEnd = endLineNo * multiplier + endColNo;", "+        final long inStart = startLine * multiplier + startCol;", "+        final long inEnd = endLine * multiplier + endCol;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67edfa452e9b9f68db15c188d1a4c266", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected final void checkLinesIndent(int aStartLine, int aEndLine,         IndentLevel aIndentLevel)", "signatureAfterChange": "     protected final void checkLinesIndent(int startLine, int endLine,         IndentLevel indentLevel)", "diff": ["-    protected final void checkLinesIndent(int aStartLine, int aEndLine,", "-        IndentLevel aIndentLevel)", "+    protected final void checkLinesIndent(int startLine, int endLine,", "+        IndentLevel indentLevel)", "-        checkSingleLine(aStartLine, aIndentLevel);", "+        checkSingleLine(startLine, indentLevel);", "-            new IndentLevel(aIndentLevel, getBasicOffset());", "-        for (int i = aStartLine + 1; i <= aEndLine; i++) {", "+            new IndentLevel(indentLevel, getBasicOffset());", "+        for (int i = startLine + 1; i <= endLine; i++) {"]}]}