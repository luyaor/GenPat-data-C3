{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a2af343fa5309d41ce9a23597709bf89", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26277bfaf3c75a892d6e0f1b295a53a7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "b78f144ee4613e1d503624067b4a03d10b3515a8", "commitAfterChange": "342ae1315c775fa512a5278d901bbd4fb23fd7c1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     ExpressionHandler createMethodCallHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "signatureAfterChange": "     ExpressionHandler createMethodCallHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "diff": ["-        ExpressionHandler handler =", "-            (ExpressionHandler) mCreatedHandlers.get(aAst);", "-        if (handler != null) {", "-            return handler;", "-        }", "-", "-        if (ast != null && ast.getType() == TokenTypes.METHOD_CALL) {", "-            aParent = createMethodCallHandler(aIndentCheck, ast, aParent);", "+        if (ast != null && isHandledType(ast.getType())) {", "+            aParent = getHandler(aIndentCheck, ast, aParent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffb99bfe446de7cc0bdd0e502e529485", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "c85ec6f26ade692103ac27383a87c3402b4d66ca", "commitAfterChange": "fd24216f46eef6dfaaedd957d30d6935c5a0606d", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     public void setLCurlyMethod(String aTo)", "signatureAfterChange": "     public void setLCurlyMethod(String aTo)", "diff": ["-        final LeftCurlyOption opt = LeftCurlyOption.decode(aTo);", "-        if (opt == null) {", "-            throw new BuildException(\"Unable to parse lcurlyMethod parameter,\",", "-                                     location);", "-        }", "-        mConfig.setLCurlyMethod(opt);", "+        mConfig.setLCurlyMethod(extractLeftCurlyOption(aTo));", "+    }"]}]}