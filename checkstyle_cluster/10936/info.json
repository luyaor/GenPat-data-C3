{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "610842e544f4eea96ac5f90d3f7b733e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "278ef5f4e7981b242ece22607bfd1b74", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "af095344e1501d55b2dfbbd18deaf305e814601c", "commitAfterChange": "e3366844c45fb800a290c0d30ed956f1d249de29", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void setMessageFormat(String format)         throws ConversionException", "signatureAfterChange": "     public void setMessageFormat(String format)", "diff": ["-    public void setMessageFormat(String format)", "-        throws ConversionException {", "-        Utils.createPattern(format);", "+    public void setMessageFormat(String format) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f1c1801b8dbde5e692c8cc1b3c403ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "4b754899a4f2cec3d241adcddadc438cbfeb8e1b", "commitAfterChange": "75f0ef8a42d405d5a4e95cf931c019ef1d09696e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     void reset()", "signatureAfterChange": "     void reset()", "diff": ["-        mInInterface.clear();", "-        mMethodBlockLevel = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d570bf16c7b251c9d5a4cfe5d75aca39", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheck.java", "commitBeforeChange": "28a4f2fe029422414814eeb6858f0b9c0cef7039", "commitAfterChange": "40f4c37a21b1c8444f39f12c5f92e79af10be34f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void findDuplicates()", "signatureAfterChange": "     private void findDuplicates()", "diff": ["-        // somewhere near O(mMax * LOC^2).", "+        // somewhere near O(LOC^2).", "-        // OK, prepare for some nested loops... :-(", "-", "-", "-            mLoc += mLineChecksums[i].length;"]}]}