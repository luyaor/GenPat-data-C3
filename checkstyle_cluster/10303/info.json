{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf5d7337b5fa90c9f8dab9c896080f74", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0176a4ac68ed0f5cc5852d00dbaaf826", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java", "commitBeforeChange": "c6edc74a2cf7a5e2c9affef6d0e1e931f783b462", "commitAfterChange": "795234dba5ed1ba32827051748d3c92657ad287d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static FilterSet loadSuppressions(String aFilename)         throws CheckstyleException", "signatureAfterChange": "     public static FilterSet loadSuppressions(String aFilename)         throws CheckstyleException", "diff": ["-        InputStream fis;", "-            fis = new FileInputStream(aFilename);", "+            // figure out if this is a File or a URL", "+            URI uri;", "+            try {", "+                final URL url = new URL(aFilename);", "+                uri = url.toURI();", "+            }", "+            catch (final MalformedURLException ex) {", "+                uri = null;", "+            }", "+            catch (final URISyntaxException ex) {", "+                // URL violating RFC 2396", "+                uri = null;", "+            }", "+            if (uri == null) {", "+                final File file = new File(aFilename);", "+                if (file.exists()) {", "+                    uri = file.toURI();", "+                }", "+                else {", "+                    // check to see if the file is in the classpath", "+                    try {", "+                        final URL configUrl = SuppressionsLoader.class", "+                                .getResource(aFilename);", "+                        if (configUrl == null) {", "+                            throw new FileNotFoundException(aFilename);", "+                        }", "+                        uri = configUrl.toURI();", "+                    }", "+                    catch (final URISyntaxException e) {", "+                        throw new FileNotFoundException(aFilename);", "+                    }", "+                }", "+            }", "+            final InputSource source = new InputSource(uri.toString());", "+            return loadSuppressions(source, aFilename);", "-            if (aFilename.matches(\"^https?://.+\")) {", "-                // this is a URL, load it as such", "-                try {", "-                    fis = new URL(aFilename).openStream();", "-                }", "-                catch (MalformedURLException e1) {", "-                    throw new CheckstyleException(", "-                        \"Invalid URL: \" + aFilename, e1);", "-                }", "-                catch (IOException e1) {", "-                    throw new CheckstyleException(", "-                        \"unable to read \" + aFilename, e1);", "-                }", "-            }", "-            else {", "-                // check for the file in the classpath", "-                fis = SuppressionsLoader.class.getResourceAsStream(aFilename);", "-            }", "-            if (fis == null) {", "-                throw new CheckstyleException(\"unable to find \" + aFilename, e);", "-            }", "+            throw new CheckstyleException(\"unable to find \" + aFilename, e);", "-        final InputSource source = new InputSource(fis);", "-        return loadSuppressions(source, aFilename);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdca11104dc3be3d0c8b9521dfd3e833", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "e2329c7a98dadb9e2717aae92216964a6ab40329", "commitAfterChange": "073d09569f471061fd82899efac4f823269dd265", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static Configuration loadConfiguration(String aConfig,         PropertyResolver aOverridePropsResolver, boolean aOmitIgnoredModules)         throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(String aConfig,         PropertyResolver aOverridePropsResolver, boolean aOmitIgnoredModules)         throws CheckstyleException", "diff": ["-        InputStream bufferedStream = null;", "-            InputStream configStream;", "+            URI uri;", "-                configStream = url.openStream();", "+                uri = url.toURI();", "-                configStream = new FileInputStream(aConfig);", "+                uri = null;", "-            bufferedStream = new BufferedInputStream(configStream);", "-", "-            return loadConfiguration(bufferedStream, aOverridePropsResolver,", "+            catch (final URISyntaxException ex) {", "+                // URL violating RFC 2396", "+                uri = null;", "+            }", "+            if (uri == null) {", "+                final File file = new File(aConfig);", "+                if (!file.exists()) {", "+                    throw new FileNotFoundException(aConfig);", "+                }", "+                uri = file.toURI();", "+            }", "+            final InputSource source = new InputSource(uri.toString());", "+            return loadConfiguration(source, aOverridePropsResolver,", "-        catch (final IOException e) {", "-            throw new CheckstyleException(\"unable to read \" + aConfig, e);", "-        }", "-        }", "-        finally {", "-            Utils.closeQuietly(bufferedStream);"]}]}