{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e2c262a64fb28126c686cea8e739395", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c98591aad601df12d5ba8f4e9c6558b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsTest.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     @Test     public void testCompactNoUnchecked() throws Exception", "signatureAfterChange": "     @Test     public void testCompactNoUnchecked() throws Exception", "diff": ["-            \"5:20: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"11:28: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"29:36: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"56:28: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"59:49: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"64:34: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"64:62: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"67:43: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"72:66: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"72:117: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"77:38: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"82:48: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"82:135: The warning 'unchecked' cannot be suppressed at this location.\",", "+            \"5:20: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"11:28: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"29:36: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"56:28: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"59:49: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"64:34: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"64:62: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"67:43: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"72:66: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"72:117: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"77:38: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"82:48: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"82:135: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d8cae26abfa3501f2c9057722733ac5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testVersionRegularExError()         throws Exception", "signatureAfterChange": "      @Test     public void testVersionRegularExError()         throws Exception", "diff": ["-            \"13: Type Javadoc tag @version must match pattern '\\\\$Revision.*\\\\$'.\",", "-            \"22: Type Javadoc comment is missing an @version tag.\",", "-            \"31: Type Javadoc tag @version must match pattern '\\\\$Revision.*\\\\$'.\",", "-            \"40: Type Javadoc tag @version must match pattern '\\\\$Revision.*\\\\$'.\",", "-            \"49: Type Javadoc tag @version must match pattern '\\\\$Revision.*\\\\$'.\",", "-            \"58: Type Javadoc comment is missing an @version tag.\",", "-            \"67: Type Javadoc tag @version must match pattern '\\\\$Revision.*\\\\$'.\",", "-            \"76: Type Javadoc tag @version must match pattern '\\\\$Revision.*\\\\$'.\",", "-            \"85: Type Javadoc tag @version must match pattern '\\\\$Revision.*\\\\$'.\",", "-            \"94: Type Javadoc comment is missing an @version tag.\",", "-            \"103: Type Javadoc tag @version must match pattern '\\\\$Revision.*\\\\$'.\",", "-            \"112: Type Javadoc tag @version must match pattern '\\\\$Revision.*\\\\$'.\",", "+            \"13: \" + getCheckMessage(TAG_FORMAT, \"@version\", \"\\\\$Revision.*\\\\$\"),", "+            \"22: \" + getCheckMessage(MISSING_TAG, \"@version\"),", "+            \"31: \" + getCheckMessage(TAG_FORMAT, \"@version\", \"\\\\$Revision.*\\\\$\"),", "+            \"40: \" + getCheckMessage(TAG_FORMAT, \"@version\", \"\\\\$Revision.*\\\\$\"),", "+            \"49: \" + getCheckMessage(TAG_FORMAT, \"@version\", \"\\\\$Revision.*\\\\$\"),", "+            \"58: \" + getCheckMessage(MISSING_TAG, \"@version\"),", "+            \"67: \" + getCheckMessage(TAG_FORMAT, \"@version\", \"\\\\$Revision.*\\\\$\"),", "+            \"76: \" + getCheckMessage(TAG_FORMAT, \"@version\", \"\\\\$Revision.*\\\\$\"),", "+            \"85: \" + getCheckMessage(TAG_FORMAT, \"@version\", \"\\\\$Revision.*\\\\$\"),", "+            \"94: \" + getCheckMessage(MISSING_TAG, \"@version\"),", "+            \"103: \" + getCheckMessage(TAG_FORMAT, \"@version\", \"\\\\$Revision.*\\\\$\"),", "+            \"112: \" + getCheckMessage(TAG_FORMAT, \"@version\", \"\\\\$Revision.*\\\\$\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4335adfdd622290de51836623d3d230", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsTest.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     @Test     public void testExpandedNoUnchecked() throws Exception", "signatureAfterChange": "     @Test     public void testExpandedNoUnchecked() throws Exception", "diff": ["-            \"5:26: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"11:34: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"29:42: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"56:34: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"59:55: The warning 'unchecked' cannot be suppressed at this location.\",", "+            \"5:26: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"11:34: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"29:42: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"56:34: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"59:55: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "-            \"64:40: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"64:68: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"67:49: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"72:72: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"72:123: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"77:44: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"82:54: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"82:141: The warning 'unchecked' cannot be suppressed at this location.\",", "+            \"64:40: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"64:68: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"67:49: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"72:72: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"72:123: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"77:44: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"82:54: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"82:141: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e002b7d07281c4a6e99f94203851d910", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MethodNameCheckTest.java", "commitBeforeChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "commitAfterChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testMethodEqClass() throws Exception", "signatureAfterChange": "      @Test     public void testMethodEqClass() throws Exception", "diff": ["+        final String pattern = \"^[a-z][a-zA-Z0-9]*$\";", "+", "-            \"12:16: Method Name 'InputMethNameEqualClsName' must not equal the enclosing class name.\",", "-            \"12:16: Name 'InputMethNameEqualClsName' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            \"17:17: Name 'PRIVATEInputMethNameEqualClsName' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            \"23:20: Method Name 'Inner' must not equal the enclosing class name.\",", "-            \"23:20: Name 'Inner' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            \"28:20: Name 'InputMethNameEqualClsName' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            \"37:24: Method Name 'InputMethNameEqualClsName' must not equal the enclosing class name.\",", "-            \"37:24: Name 'InputMethNameEqualClsName' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            \"47:9: Method Name 'SweetInterface' must not equal the enclosing class name.\",", "-            \"47:9: Name 'SweetInterface' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            \"53:17: Method Name 'Outter' must not equal the enclosing class name.\",", "-            \"53:17: Name 'Outter' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "+            \"12:16: \" + getCheckMessage(MSG_KEY, \"InputMethNameEqualClsName\"),", "+            \"12:16: \" + getCheckMessage(MSG_INVALID_PATTERN, \"InputMethNameEqualClsName\", pattern),", "+            \"17:17: \" + getCheckMessage(MSG_INVALID_PATTERN, \"PRIVATEInputMethNameEqualClsName\", pattern),", "+            \"23:20: \" + getCheckMessage(MSG_KEY, \"Inner\"),", "+            \"23:20: \" + getCheckMessage(MSG_INVALID_PATTERN, \"Inner\", pattern),", "+            \"28:20: \" + getCheckMessage(MSG_INVALID_PATTERN, \"InputMethNameEqualClsName\", pattern),", "+            \"37:24: \" + getCheckMessage(MSG_KEY, \"InputMethNameEqualClsName\"),", "+            \"37:24: \" + getCheckMessage(MSG_INVALID_PATTERN, \"InputMethNameEqualClsName\", pattern),", "+            \"47:9: \" + getCheckMessage(MSG_KEY, \"SweetInterface\"),", "+            \"47:9: \" + getCheckMessage(MSG_INVALID_PATTERN, \"SweetInterface\", pattern),", "+            \"53:17: \" + getCheckMessage(MSG_KEY, \"Outter\"),", "+            \"53:17: \" + getCheckMessage(MSG_INVALID_PATTERN, \"Outter\", pattern),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9ddbce4e06060ceb604b60f654bc1a0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierTest.java", "commitBeforeChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "commitAfterChange": "0b98c0389e2cf745cb125a89dece57538fc672b7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIt() throws Exception", "signatureAfterChange": "     @Test     public void testIt() throws Exception", "diff": ["-            \"54:12: Redundant 'static' modifier.\",", "-            \"57:9: Redundant 'public' modifier.\",", "-            \"63:9: Redundant 'abstract' modifier.\",", "-            \"66:9: Redundant 'public' modifier.\",", "+            \"54:12: \" + getCheckMessage(MSG_KEY, \"static\"),", "+            \"57:9: \" + getCheckMessage(MSG_KEY, \"public\"),", "+            \"63:9: \" + getCheckMessage(MSG_KEY, \"abstract\"),", "+            \"66:9: \" + getCheckMessage(MSG_KEY, \"public\"),", "-            \"72:9: Redundant 'final' modifier.\",", "-            \"79:13: Redundant 'final' modifier.\",", "-            \"88:12: Redundant 'final' modifier.\",", "-            \"99:1: Redundant 'abstract' modifier.\",", "-            \"116:5: Redundant 'public' modifier.\",", "-            \"117:5: Redundant 'final' modifier.\",", "-            \"118:5: Redundant 'static' modifier.\",", "-            \"120:5: Redundant 'public' modifier.\",", "-            \"121:5: Redundant 'abstract' modifier.\",", "+            \"72:9: \" + getCheckMessage(MSG_KEY, \"final\"),", "+            \"79:13: \" + getCheckMessage(MSG_KEY, \"final\"),", "+            \"88:12: \" + getCheckMessage(MSG_KEY, \"final\"),", "+            \"99:1: \" + getCheckMessage(MSG_KEY, \"abstract\"),", "+            \"116:5: \" + getCheckMessage(MSG_KEY, \"public\"),", "+            \"117:5: \" + getCheckMessage(MSG_KEY, \"final\"),", "+            \"118:5: \" + getCheckMessage(MSG_KEY, \"static\"),", "+            \"120:5: \" + getCheckMessage(MSG_KEY, \"public\"),", "+            \"121:5: \" + getCheckMessage(MSG_KEY, \"abstract\"),"]}]}