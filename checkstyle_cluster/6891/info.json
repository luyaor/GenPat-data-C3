{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be725e75715f3d79725ce60ea0bb3efd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "136cdca1e0e883f1f5beaf0fa399c754", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 63, "signatureBeforeChange": "     private void checkHeader()", "signatureAfterChange": "     private void checkHeader()", "diff": ["-            log(1, \"Missing a header - not enough lines in file.\");", "+            log(1, \"header.missing\");", "-                        log(i + 1,", "-                            \"Line does not match expected header line of '\"", "-                            + mConfig.getHeaderLines()[i] + \"'.\");", "+                        log(i + 1, \"header.mismatch\",", "+                            mConfig.getHeaderLines()[i]);", "-                    log(i + 1,", "-                        \"Unable to parse regular expression '\"", "-                        + headerLine + \"'.\");", "+                    log(i + 1, \"regexp.parseError\", headerLine);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "332cd3730cdc9a167637eaedd7a448b0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     void verifyWSAroundBegin(int aLineNo, int aColNo, String aText)", "signatureAfterChange": "     void verifyWSAroundBegin(int aLineNo, int aColNo, String aText)", "diff": ["-            log(aLineNo, before + 1,", "-                \"'\" + aText + \"' is not preceeded with whitespace.\");", "+            log(aLineNo, before + 1, \"ws.notPreceeded\", aText);", "-            log(aLineNo, after,", "-                \"'\" + aText + \"' is not followed by whitespace.\");", "+            log(aLineNo, after, \"ws.notFollowed\", aText);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a328c2622820bba9e642a14a73b36e51", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 75, "signatureBeforeChange": "     void checkBlock(String aType, BlockOption aOption,                     MyCommonAST[] aBraces, boolean aNoStmt)", "signatureAfterChange": "     void checkBlock(String aType, BlockOption aOption,                     MyCommonAST[] aBraces, boolean aNoStmt)", "diff": ["-            log(aBraces[0].getLineNo(),", "-                aBraces[0].getColumnNo(),", "-                \"Must have at least one statement.\");", "+            log(aBraces[0].getLineNo(), aBraces[0].getColumnNo(),", "+                \"block.noStmt\");", "-                    log(aBraces[0].getLineNo(),", "-                        aBraces[0].getColumnNo(),", "-                        \"Empty \" + aType + \" block.\");", "+                    log(aBraces[0].getLineNo(), aBraces[0].getColumnNo(),", "+                        \"block.empty\", aType);", "-                        log(aBraces[0].getLineNo(),", "-                            aBraces[0].getColumnNo(),", "-                            \"Empty \" + aType + \" block.\");", "+                        log(aBraces[0].getLineNo(), aBraces[0].getColumnNo(),", "+                            \"block.empty\", aType);"]}]}