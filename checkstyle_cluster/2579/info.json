{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c128c1741abe839b260987a75fc111c2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15c992210f8ac10ef5f1b6ae201b4222", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "c38185458ab824874b8465c46b4dc42646440aaa", "commitAfterChange": "275f47aa0f91d635ab853b939d869896ccdb3f0f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "     protected final void logLoadErrorImpl(int aLineNo, int aColumnNo,                                           String aMsgKey, Object[] aValues)", "signatureAfterChange": "     protected final void logLoadErrorImpl(int aLineNo, int aColumnNo,                                           String aMsgKey, Object[] aValues)", "diff": ["-        LocalizedMessage msg = new LocalizedMessage(aLineNo,", "+        System.out.println(mLogLoadErrors);", "+        if (!mLogLoadErrors) {", "+            LocalizedMessage msg = new LocalizedMessage(aLineNo,", "-        throw new RuntimeException(msg.getMessage());", "+            throw new RuntimeException(msg.getMessage());", "+        }", "+        log(aLineNo, aColumnNo, aMsgKey, aValues);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9a02c9c80d2ed5675e8b3aba8089f92", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/MethodCountCheck.java", "commitBeforeChange": "5320065461ca38393ab2402c7402cc8f65c331d4", "commitAfterChange": "45b1afd66692e017852016b7148c44ee4760f5d6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "         void increment(Scope aScope)", "signatureAfterChange": "         void increment(Scope aScope)", "diff": ["-            mCounts.put(aScope, 1 + value(aScope));", "+            mTotal++;", "+            if (mInInterface) {", "+                mCounts.put(Scope.PUBLIC, 1 + value(Scope.PUBLIC));", "+            }", "+            else {", "+                mCounts.put(aScope, 1 + value(aScope));", "+            }"]}]}