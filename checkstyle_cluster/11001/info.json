{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f71764ccb98971b79bc7411e7d05ab6e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7095d66b3a928b7a38569b4182b90b4c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java", "commitBeforeChange": "aa581847fe5e1c7ff4ded4387fa3dbc781fac513", "commitAfterChange": "d693562ab7d124a1a71332e2c234ac0efcd0620e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["+            case TokenTypes.MODIFIERS:", "+                if (parentType == TokenTypes.VARIABLE_DEF", "+                    && ast.getParent().getParent().getType() == TokenTypes.OBJBLOCK) {", "+                    processModifiers(ast);", "+                }", "+                break;", "-                }", "-                break;", "-            case TokenTypes.MODIFIERS:", "-                if (parentType == TokenTypes.VARIABLE_DEF", "-                        && ast.getParent().getParent().getType() == TokenTypes.OBJBLOCK) {", "-                    processModifiers(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1b0031df33418cecdea294e5c90d3d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "d44cb066cbd89ce3c8d99c04d2fd28dbae68a6d9", "commitAfterChange": "e36ae750f6378b9a3cd8e5171c6e6b710bf10959", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "         private AuditListener createDefaultLogger(Task task)             throws IOException", "signatureAfterChange": "         private AuditListener createDefaultLogger(Task task)             throws IOException", "diff": ["-                    true, new LogOutputStream(task, Project.MSG_ERR), true, true);", "+                    true, new LogOutputStream(task, Project.MSG_ERR), true);", "-            return new DefaultLogger(new FileOutputStream(toFile), true, true);", "+            return new DefaultLogger(new FileOutputStream(toFile), true);"]}]}