{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "655f17179746916c39b009992d093ac2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d18468f94eb279d2a50994063c6efaa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "e4a14e401a5839c6f4fa7238f5ba73255e488dba", "commitAfterChange": "b59648d60599bc197de618af5406c5e46978bbda", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static Configuration loadConfiguration(         String aConfig, PropertyResolver aOverridePropsResolver)         throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(         String aConfig, PropertyResolver aOverridePropsResolver)         throws CheckstyleException", "diff": ["+        catch (SAXParseException e) {", "+            throw new CheckstyleException(\"unable to parse \"", "+                    + aConfig + \" - \" + e.getMessage() + \":\" + e.getLineNumber()", "+                    + \":\" + e.getColumnNumber(), e);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8da2aa98fa070cbf2683988510566ba5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java", "commitBeforeChange": "e77eef412fe4b41d89fa21b790d7dc00eacb726f", "commitAfterChange": "8ec36bc770a78f423f6c0d0c37b9efd7981815ed", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public final void configure(Configuration aConfiguration)         throws CheckstyleException", "signatureAfterChange": "     public final void configure(Configuration aConfiguration)         throws CheckstyleException", "diff": ["+            catch (IllegalArgumentException e) {", "+                throw new CheckstyleException(", "+                    \"illegal value '\" + value + \"' for property '\" + key", "+                    + \"' of module \" + aConfiguration.getName());", "+            }", "+            catch (ConversionException e) {", "+                throw new CheckstyleException(", "+                    \"illegal value '\" + value + \"' for property '\" + key", "+                    + \"' of module \" + aConfiguration.getName());", "+            }", "+"]}]}