{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c6b83b91297731a8740f995ce830647c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82354242190d6203ee9183e566fcce53", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void checkUnusedTypeParamTags(         final Vector aTags,         final List aTypeParamNames)", "signatureAfterChange": "     private void checkUnusedTypeParamTags(         final Vector aTags,         final List aTypeParamNames)", "diff": ["-        Pattern pattern = Utils.getPattern(\"\\\\s*<([^>]+)>.*\");", "+        final Pattern pattern = Utils.getPattern(\"\\\\s*<([^>]+)>.*\");", "-                    Matcher matcher = pattern.matcher(tag.getArg1());", "+                    final Matcher matcher = pattern.matcher(tag.getArg1());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e288a0dfe0060d78834a774a1009125", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private boolean isVariableMatchesIgnorePattern(String aVariable)", "signatureAfterChange": "     private boolean isVariableMatchesIgnorePattern(String variable)", "diff": ["-    private boolean isVariableMatchesIgnorePattern(String aVariable)", "+    private boolean isVariableMatchesIgnorePattern(String variable)", "-        final Matcher matcher = mIgnoreVariablePattern.matcher(aVariable);", "+        final Matcher matcher = ignoreVariablePattern.matcher(variable);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a70921778b35839fff48e5f818f7309e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private void tagCommentLine(String aText, int aLine, int aColumn)", "signatureAfterChange": "     private void tagCommentLine(String aText, int aLine, int aColumn)", "diff": ["-        Matcher offMatcher = mOffRegexp.matcher(aText);", "+        final Matcher offMatcher = mOffRegexp.matcher(aText);", "-            Matcher onMatcher = mOnRegexp.matcher(aText);", "+            final Matcher onMatcher = mOnRegexp.matcher(aText);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b08d795bec10a8df00bacdf268c9154f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "dc92fd1b89e33067adc5b2bf51df76b8d488b0bf", "commitAfterChange": "4018efa9fefa66e599369ace1cb189b02ae64fa7", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 101, "signatureBeforeChange": "     private CatchBlockOption extractCatchBlockOption(String aFrom)         throws BuildException", "signatureAfterChange": "     private BlockOption extractBlockOption(String aFrom)         throws BuildException", "diff": ["-    private CatchBlockOption extractCatchBlockOption(String aFrom)", "+    private BlockOption extractBlockOption(String aFrom)", "-        final CatchBlockOption opt = CatchBlockOption.decode(aFrom);", "+        final BlockOption opt = BlockOption.decode(aFrom);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9188070ca1c29fbd19f17aa8179db10", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private Set<String> matchPattern(String aIdentifier, Pattern aPattern)", "signatureAfterChange": "     private Set<String> matchPattern(String identifier, Pattern pattern)", "diff": ["-    private Set<String> matchPattern(String aIdentifier, Pattern aPattern)", "+    private Set<String> matchPattern(String identifier, Pattern pattern)", "-        final Matcher matcher = aPattern.matcher(aIdentifier);", "+        final Matcher matcher = pattern.matcher(identifier);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de16c33e8d60ee51e2fcbdda37ff52f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private int countMatches(Pattern aPattern, String aTarget)", "signatureAfterChange": "     private int countMatches(Pattern pattern, String target)", "diff": ["-    private int countMatches(Pattern aPattern, String aTarget)", "+    private int countMatches(Pattern pattern, String target)", "-        final Matcher matcher = aPattern.matcher(aTarget);", "+        final Matcher matcher = pattern.matcher(target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9906c133220cd489f9170bd03aa8575", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private Vector getJavadocTags(TextBlock aCmt)", "signatureAfterChange": "     private Vector getJavadocTags(TextBlock aCmt)", "diff": ["-        Vector tags = new Vector();", "+        final Vector tags = new Vector();", "-            Matcher tagMatcher = tagPattern.matcher(s);", "+            final Matcher tagMatcher = tagPattern.matcher(s);"]}]}