{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e88a55508c025d177d4a3583fc49a8fc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a50f6411659e17003aa49469f7baebab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/TrailingCommentCheckTest.java", "commitBeforeChange": "78e9ce870170ca3ef88fd78f8e0af0681c958eb3", "commitAfterChange": "ea4085cd15fefe1e70a495798187c425295c74b6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testDefaults()             throws Exception", "signatureAfterChange": "      public void testDefaults() throws Exception", "diff": ["-    public void testDefaults()", "-            throws Exception", "+", "+    public void testDefaults() throws Exception", "-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(TrailingCommentCheck.class);", "+        final String[] expected = {", "+            \"2: Don't use trailing comments.\",", "+            \"5: Don't use trailing comments.\",", "+            \"6: Don't use trailing comments.\",", "+            \"16: Don't use trailing comments.\",", "+            \"17: Don't use trailing comments.\",", "+            \"27: Don't use trailing comments.\",", "+        };", "+        verify(mCheckConfig, getPath(\"InputTrailingComment.java\"), expected);", "+    }", "-        verify(checkConfig, getPath(\"InputTrailingComment.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da024a8e2146bb9dca023c911d7ada9a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "commitAfterChange": "78e9ce870170ca3ef88fd78f8e0af0681c958eb3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void testDefault3()         throws Exception", "signatureAfterChange": "     public void testDefault3() throws Exception", "diff": ["-    public void testDefault3()", "-        throws Exception", "+    public void testDefault3() throws Exception", "-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(LeftCurlyCheck.class);", "+            \"89:5: '{' should be on the previous line.\",", "-        verify(checkConfig, getPath(\"InputLeftCurlyOther.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputLeftCurlyOther.java\"), expected);"]}]}