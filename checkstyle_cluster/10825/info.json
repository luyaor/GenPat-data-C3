{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9db1a2b7ae277adcc9f795641fd6dac4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "390532d3264064cfe9ee83e6c2c08add", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/NonEmptyAtclauseDescriptionCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitJavadocToken(DetailNode aAst)", "signatureAfterChange": "      @Override     public void visitJavadocToken(DetailNode ast)", "diff": ["-    public void visitJavadocToken(DetailNode aAst)", "+    public void visitJavadocToken(DetailNode ast)", "-        if (isEmptyTag(aAst.getParent())) {", "-            log(aAst.getLineNumber(), \"non.empty.atclause\", aAst.getText());", "+        if (isEmptyTag(ast.getParent())) {", "+            log(ast.getLineNumber(), \"non.empty.atclause\", ast.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "403eb4209b76ded173a72b6ec83ee966", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (aAST.getLineNo() != aAST.getLastChild().getLineNo()) {", "-            log(aAST.getLineNo(), \"no.line.wrap\", aAST.getText());", "+        if (ast.getLineNo() != ast.getLastChild().getLineNo()) {", "+            log(ast.getLineNo(), \"no.line.wrap\", ast.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4669e5dd3a59ace7056789802c58b034", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UpperEllCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (aAST.getText().endsWith(\"l\")) {", "-            log(aAST.getLineNo(),", "-                aAST.getColumnNo() + aAST.getText().length() - 1,", "+        if (ast.getText().endsWith(\"l\")) {", "+            log(ast.getLineNo(),", "+                ast.getColumnNo() + ast.getText().length() - 1,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c76f73ac2b97f1ddedf2ea9dd6368bea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/PackageAnnotationCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Override     public void visitToken(final DetailAST aAST)", "signatureAfterChange": "     @Override     public void visitToken(final DetailAST ast)", "diff": ["-    public void visitToken(final DetailAST aAST)", "+    public void visitToken(final DetailAST ast)", "-            AnnotationUtility.containsAnnotation(aAST);", "+            AnnotationUtility.containsAnnotation(ast);", "-            this.log(aAST.getLine(), \"annotation.package.location\");", "+            this.log(ast.getLine(), \"annotation.package.location\");"]}]}