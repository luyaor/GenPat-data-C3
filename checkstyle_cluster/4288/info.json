{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4099e0b5955fb8d51f3a0583678ddc6b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "874654fe638af7c27fcd88dbac44d4e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "8376cd4108a78a8ab6a6c0385fd5ea21b46e1d90", "commitAfterChange": "c977c274a7de782889fc83531a3f58ec0fadfad8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Class resolve(String aName, String aCurrentClass)         throws ClassNotFoundException", "signatureAfterChange": "     public Class resolve(String aName, String aCurrentClass)         throws ClassNotFoundException", "diff": ["-        //Perhaps it's fullyqualified inner class", "+        //Perhaps it's fully-qualified inner class", "-        if (mPkg != null) {", "+        if (!\"\".equals(mPkg)) {", "-            final String innerClass = ((mPkg != null) ? (mPkg + \".\") : \"\")", "+            final String innerClass = (!\"\".equals(mPkg) ? (mPkg + \".\") : \"\")"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c0bd82ae0ced525e0e6583fb86c3b02", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheck.java", "commitBeforeChange": "60ae95a6219d0e0765040ece0c3a8d439e1375ad", "commitAfterChange": "738c7f184d7e8b7c9d11dcb3cc47e0895945d1e3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected static int getLineNumber(List<String> lines, String keyName)", "signatureAfterChange": "     protected static int getLineNumber(List<String> lines, String keyName)", "diff": ["-        final String keyPatternString =", "-                \"^\" + keyName.replace(\" \", \"\\\\\\\\ \") + \"[\\\\s:=].*$\";", "+        final String keyPatternString = \"^\" + SPACE_PATTERN.matcher(keyName)", "+                        .replaceAll(Matcher.quoteReplacement(\"\\\\\\\\ \")) + \"[\\\\s:=].*$\";"]}]}