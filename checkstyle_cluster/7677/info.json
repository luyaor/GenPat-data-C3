{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d9e78650e6fac8723168acefcd77b18", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "420293352df556bcfafe0ea58db975da", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "         protected void updateSelectedPathsFromSelectedRows()", "signatureAfterChange": "         protected void updateSelectedPathsFromSelectedRows()", "diff": ["-                    int min = listSelectionModel.getMinSelectionIndex();", "-                    int max = listSelectionModel.getMaxSelectionIndex();", "+                    final int min = listSelectionModel.getMinSelectionIndex();", "+                    final int max = listSelectionModel.getMaxSelectionIndex();", "-                                TreePath selPath = tree.getPathForRow", "+                                final TreePath selPath = tree.getPathForRow"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6782ab44120ec54b829354c6708acbbc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "2a77329c4f45c42b1e9f49773522349193f83338", "commitAfterChange": "a75c64efe39a5c4391faf8ec2fba07ae76411a0e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private static ParseTree getNextSibling(ParseTree node)", "signatureAfterChange": "     private static ParseTree getNextSibling(ParseTree node)", "diff": ["-            int i = 0;", "+            int index = 0;", "-                final ParseTree currentNode = parent.getChild(i);", "+                final ParseTree currentNode = parent.getChild(index);", "-                    if (i != childCount - 1) {", "-                        nextSibling = parent.getChild(i + 1);", "+                    if (index != childCount - 1) {", "+                        nextSibling = parent.getChild(index + 1);", "-                i++;", "+                index++;"]}]}