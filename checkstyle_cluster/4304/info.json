{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "944d46d25f48f0b5e5ad3ea565efb9bb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a43fa6855da053f92df08d1240f96dea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CatchHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public CatchHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "signatureAfterChange": "     public CatchHandler(IndentationCheck indentCheck,         DetailAST ast, ExpressionHandler parent)", "diff": ["-    public CatchHandler(IndentationCheck aIndentCheck,", "-        DetailAST aAst, ExpressionHandler aParent)", "+    public CatchHandler(IndentationCheck indentCheck,", "+        DetailAST ast, ExpressionHandler parent)", "-        super(aIndentCheck, \"catch\", aAst, aParent);", "+        super(indentCheck, \"catch\", ast, parent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b421b6e6866c0a617f6c0312ef9233a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/SwitchHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public SwitchHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "signatureAfterChange": "     public SwitchHandler(IndentationCheck indentCheck,         DetailAST ast, ExpressionHandler parent)", "diff": ["-    public SwitchHandler(IndentationCheck aIndentCheck,", "-        DetailAST aAst, ExpressionHandler aParent)", "+    public SwitchHandler(IndentationCheck indentCheck,", "+        DetailAST ast, ExpressionHandler parent)", "-        super(aIndentCheck, \"switch\", aAst, aParent);", "+        super(indentCheck, \"switch\", ast, parent);"]}]}