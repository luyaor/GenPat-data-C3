{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e833f64b7b90fef139270e85eb33b5f0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25a5faf3942686a050ae9e1b93b2799b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "3852e12bece8c5770ed1ddd7c002ef9b4e5d175b", "commitAfterChange": "d86329ca8fe253b7b830b77595944d99a7ed4cfd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void processEnd(DetailAST aAST)", "signatureAfterChange": "     private void processEnd(DetailAST aAST)", "diff": ["-                int indexOfAmp = line.indexOf('&', after);", "-                if ((indexOfAmp != -1) && whitespaceBetween(after, indexOfAmp, line))", "+                final int indexOfAmp = line.indexOf('&', after);", "+                if ((indexOfAmp != -1)", "+                    && whitespaceBetween(after, indexOfAmp, line))", "-                    if (indexOfAmp - after == 0)", "-                    {", "+                    if (indexOfAmp - after == 0) {", "-                    else if (indexOfAmp - after != 1)", "-                    {", "+                    else if (indexOfAmp - after != 1) {", "-                else if ((line.charAt(after) != '>') && (line.charAt(after) != ','))", "+                else if ((line.charAt(after) != '>')", "+                         && (line.charAt(after) != ','))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "532fb4bb7ffe1337f3c318de266048eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java", "commitBeforeChange": "dc3ac39a9a3ad80a11c8c30e09c0e59640dc317b", "commitAfterChange": "3fe3fc67cb39111116eab03f9c91c5dfb1cdbd4f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void checkOrderInTagSection(DetailNode javadoc)", "signatureAfterChange": "     private void checkOrderInTagSection(DetailNode javadoc)", "diff": ["-        int indexOrderOfPreviousTag = 0;", "+        int maxIndexOfPreviousTag = 0;", "-                final int indexOrderOfCurrentTag = tagOrder.indexOf(tagText);", "+                final int indexOfCurrentTag = tagOrder.indexOf(tagText);", "-                if (tagOrder.contains(tagText)", "-                        && indexOrderOfCurrentTag < indexOrderOfPreviousTag) {", "-                    log(node.getLineNumber(), MSG_KEY, tagOrder.toString());", "+                if (indexOfCurrentTag != -1) {", "+                    if (indexOfCurrentTag < maxIndexOfPreviousTag) {", "+                        log(node.getLineNumber(), MSG_KEY, tagOrder.toString());", "+                    }", "+                    else {", "+                        maxIndexOfPreviousTag = indexOfCurrentTag;", "+                    }", "-                indexOrderOfPreviousTag = indexOrderOfCurrentTag;"]}]}