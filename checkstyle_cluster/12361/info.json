{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "078dbc6df51dce830354bebd92277623", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a8729b1a0274e726794f9e9be51a420", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "13c022282b849f0e04925fbdf1b6a7010bdcd397", "commitAfterChange": "80ab48f859c1f16835dbd41afe42414b41969e2f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public boolean isLoadable(String name)", "signatureAfterChange": "     public boolean isLoadable(String name)", "diff": ["-        catch (final ClassNotFoundException | NoClassDefFoundError ignored) {", "+        catch (final ClassNotFoundException ignored) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3ca2395f3e209a6f3dc30a309753aa8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "ca634f7cafbf0d8f21eac1c4badacbe2f3cf8832", "commitAfterChange": "ff5cbc39c4882b3a3dcdbedcad9393e170148725", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-        counters = new FastStack<Counter>();", "+        counters = new FastStack<>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4a96844b00c0077a74e0a0bd2bb5b63", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheck.java", "commitBeforeChange": "ca634f7cafbf0d8f21eac1c4badacbe2f3cf8832", "commitAfterChange": "ff5cbc39c4882b3a3dcdbedcad9393e170148725", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private List<DetailNode> getAllNewlineNodes(DetailNode descriptionNode)", "signatureAfterChange": "     private List<DetailNode> getAllNewlineNodes(DetailNode descriptionNode)", "diff": ["-        final List<DetailNode> textNodes = new ArrayList<DetailNode>();", "+        final List<DetailNode> textNodes = new ArrayList<>();"]}]}