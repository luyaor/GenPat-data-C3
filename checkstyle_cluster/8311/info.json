{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ce060614ad4f3435b83c3ce88137bd8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4281ba17fc58e48049f29b8e8075c81", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "74738cea30770d34f8555381f666e079fe6b54f6", "commitAfterChange": "2c23e07558b15944638601a2620fa6aefd12ec2a", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      @Test(expected = IllegalStateException.class)     public void testVisitTokenSwitchReflection() throws Exception", "signatureAfterChange": "      @Test(expected = IllegalStateException.class)     public void testVisitTokenSwitchReflection() throws Exception", "diff": ["-        final ImportOrderOption importOrderOptionMock = PowerMockito.mock(ImportOrderOption.class);", "-        Whitebox.setInternalState(importOrderOptionMock, \"name\", \"NEW_OPTION_FOR_UT\");", "-        Whitebox.setInternalState(importOrderOptionMock, \"ordinal\", 5);", "-", "+        // Create mock ast", "-        final ImportOrderCheck check = new ImportOrderCheck() {", "-            @Override", "-            public ImportOrderOption getAbstractOption() {", "-                final ImportOrderOption importOrderOption = PowerMockito", "-                    .mock(ImportOrderOption.class);", "-                Whitebox.setInternalState(importOrderOption, \"name\", \"NEW_OPTION_FOR_UT\");", "-                Whitebox.setInternalState(importOrderOption, \"ordinal\", 5);", "-                return importOrderOption;", "-                }", "-        };", "+        // Set unsupported option", "+        final ImportOrderCheck mock = new ImportOrderCheck();", "+        final ImportOrderOption importOrderOptionMock = PowerMockito.mock(ImportOrderOption.class);", "+        Whitebox.setInternalState(importOrderOptionMock, \"name\", \"NEW_OPTION_FOR_UT\");", "+        Whitebox.setInternalState(importOrderOptionMock, \"ordinal\", 5);", "+        Whitebox.setInternalState(mock, \"option\", importOrderOptionMock);", "+", "-        check.visitToken(astImport);", "+        mock.visitToken(astImport);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbd905b7a8c460bff927c0da470510d8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      @Test(expected = IllegalStateException.class)     public void testVisitTokenSwitchReflection() throws Exception", "signatureAfterChange": "      @Test(expected = IllegalStateException.class)     public void testVisitTokenSwitchReflection() throws Exception", "diff": ["-        ImportOrderOption importOrderOptionMock = PowerMockito.mock(ImportOrderOption.class);", "+        final ImportOrderOption importOrderOptionMock = PowerMockito.mock(ImportOrderOption.class);", "-        DetailAST astImport = mockAST(TokenTypes.IMPORT, \"import\", \"mockfile\", 0, 0);", "-        DetailAST astIdent = mockAST(TokenTypes.IDENT, \"myTestImport\", \"mockfile\", 0, 0);", "+        final DetailAST astImport = mockAST(TokenTypes.IMPORT, \"import\", \"mockfile\", 0, 0);", "+        final DetailAST astIdent = mockAST(TokenTypes.IDENT, \"myTestImport\", \"mockfile\", 0, 0);", "-        DetailAST astSemi = mockAST(TokenTypes.SEMI, \";\", \"mockfile\", 0, 0);", "+        final DetailAST astSemi = mockAST(TokenTypes.SEMI, \";\", \"mockfile\", 0, 0);", "-        ImportOrderCheck check = new ImportOrderCheck() {", "+        final ImportOrderCheck check = new ImportOrderCheck() {", "-                ImportOrderOption importOrderOption = PowerMockito.mock(ImportOrderOption.class);", "+                final ImportOrderOption importOrderOption = PowerMockito", "+                    .mock(ImportOrderOption.class);"]}]}