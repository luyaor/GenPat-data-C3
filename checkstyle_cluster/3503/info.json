{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7af2a0163fdd65909585ed34a5f5008", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23d9133394eb5af8f9478bf3cb0c8692", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AllChecksTest.java", "commitBeforeChange": "bf9325be913ce46a1427232c455f4830b574ba44", "commitAfterChange": "745e21f1e4d202dd8dba577585f35f7d3f10d839", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private static Set<String> getCheckStyleChecksReferencedInConfig(String configFilePath)         throws ParserConfigurationException, IOException, SAXException", "signatureAfterChange": "     private static Set<String> getCheckStyleChecksReferencedInConfig(String configFilePath)         throws ParserConfigurationException, IOException, SAXException", "diff": ["-        final Set<String> checksReferencedInCheckstyleChecksXML = new HashSet<>();", "+        final Set<String> checksReferencedInCheckstyleChecksXml = new HashSet<>();", "-                    checksReferencedInCheckstyleChecksXML.add(checkName);", "+                    checksReferencedInCheckstyleChecksXml.add(checkName);", "-        return checksReferencedInCheckstyleChecksXML;", "+        return checksReferencedInCheckstyleChecksXml;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66193fa62539478d857a5c4473ac72eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AllChecksTest.java", "commitBeforeChange": "3ebddae1b928b69793717d4e207b660b31fefdb5", "commitAfterChange": "63f01249f8da8e1454492e04106bc14075fe4dbd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static Set<Class<?>> getCheckstyleChecks() throws IOException", "signatureAfterChange": "     private static Set<Class<?>> getCheckstyleChecks() throws IOException", "diff": ["-        Set<Class<?>> checkstyleChecks = new HashSet<>();", "+        final Set<Class<?>> checkstyleChecks = new HashSet<>();", "-            if (!Modifier.isAbstract(loadedClass.getModifiers())", "-                && !className.contains(\"Input\")", "-                && className.endsWith(\"Check\")) {", "-", "+            if (isCheckstyleNonAbstractCheck(loadedClass, className)) {", "+    }"]}]}