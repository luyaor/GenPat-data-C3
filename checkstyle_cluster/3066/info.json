{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a99ff6a4b7fc11e1d71662a125b180b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47e25158ae7baf91cd9d560eb813ece0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "22136c67e9c83494e7aa977ffe7a79beee1b4175", "commitAfterChange": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r     private boolean containsAllSafeTokens(final AST aExpr)", "signatureAfterChange": "\r     private boolean containsAllSafeTokens(final DetailAST aExpr)", "diff": ["-    private boolean containsAllSafeTokens(final AST aExpr)\r", "+    private boolean containsAllSafeTokens(final DetailAST aExpr)\r", "-        AST arg = aExpr.getFirstChild();\r", "+        DetailAST arg = aExpr.getFirstChild();\r", "-        if (((DetailAST) arg).branchContains(TokenTypes.METHOD_CALL)) {\r", "+        if (arg.branchContains(TokenTypes.METHOD_CALL)) {\r", "-        if (((DetailAST) arg).branchContains(TokenTypes.PLUS_ASSIGN)\r", "-                || ((DetailAST) arg).branchContains(TokenTypes.IDENT))\r", "+        if ((arg).branchContains(TokenTypes.PLUS_ASSIGN)\r", "+                || (arg).branchContains(TokenTypes.IDENT))\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "696b138944ea0e629bbe6bbedd9a1ada", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "211e2414ae57765ee25e99ab89372ee293f59e38", "commitAfterChange": "ad34b2a35eff0dba70ef5b27a0ff361520b66bea", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-            startToken = aAST;", "+            // Orig", "+            //startToken = aAST;", "+            // New", "+            startToken = skipAnnotationOnlyLines(aAST);", "+            // End", "-            startToken = aAST.getFirstChild();", "+            startToken = (DetailAST) skipAnnotationOnlyLines(aAST);", "-                : objBlock.getFirstChild();", "+                : (DetailAST) objBlock.getFirstChild();", "-            final DetailAST candidate = aAST.getFirstChild();", "+            final DetailAST candidate = (DetailAST) aAST.getFirstChild();"]}]}