{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e2a71c71ff0a7360723d52107f09cae", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bc2977cfba8f3ec13ad7c5aaefb9471", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                if (!inLambda(ast)", "+                if (!isInLambda(ast)", "-                        && !inAbstractOrNativeMethod(ast)", "-                        && !ScopeUtils.inInterfaceBlock(ast)) {", "+                        && !isInAbstractOrNativeMethod(ast)", "+                        && !ScopeUtils.isInInterfaceBlock(ast)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d47856c5a80ab171ff1eafa6587df12c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ConstantNameCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     protected final boolean mustCheckName(DetailAST ast)", "signatureAfterChange": "      @Override     protected final boolean mustCheckName(DetailAST ast)", "diff": ["-                || ScopeUtils.inAnnotationBlock(ast)", "-                || ScopeUtils.inInterfaceOrAnnotationBlock(ast)", "-                        && !ScopeUtils.inCodeBlock(ast)) {", "+                || ScopeUtils.isInAnnotationBlock(ast)", "+                || ScopeUtils.isInInterfaceOrAnnotationBlock(ast)", "+                        && !ScopeUtils.isInCodeBlock(ast)) {"]}]}