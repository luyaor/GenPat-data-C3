{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad9cb4997c3ac5d07af60d7cb30019f4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "162b1e57880fc44062da6a331d261b52", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocVariableCheck.java", "commitBeforeChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "commitAfterChange": "6125beffc437f970eae276b4a6542265c6547784", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean shouldCheck(final DetailAST aAST)", "signatureAfterChange": "     private boolean shouldCheck(final DetailAST aAST)", "diff": ["-        final DetailAST mods = aAST.findFirstToken(TokenTypes.MODIFIERS);", "-        final Scope declaredScope = ScopeUtils.getScopeFromMods(mods);", "-        final Scope scope =", "-            ScopeUtils.inInterfaceBlock(aAST) ? Scope.PUBLIC : declaredScope;", "+        final Scope scope;", "+        if (aAST.getType() == TokenTypes.ENUM_CONSTANT_DEF) {", "+            scope = Scope.PUBLIC;", "+        }", "+        else {", "+            final DetailAST mods = aAST.findFirstToken(TokenTypes.MODIFIERS);", "+            final Scope declaredScope = ScopeUtils.getScopeFromMods(mods);", "+            scope =", "+                ScopeUtils.inInterfaceOrAnnotationBlock(aAST)", "+                    ? Scope.PUBLIC : declaredScope;", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f62e8ee0328e0aca0b08848a0ba80de", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "06b377b34cb81a6ba3fe48880c31a9a093b2a473", "commitAfterChange": "c83b8eeeacc1d425089c1b315bd2ec9d7fb3fff0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private boolean shouldCheck(final DetailAST aAST)", "signatureAfterChange": "     private boolean shouldCheck(final DetailAST aAST)", "diff": ["-        final DetailAST mods = aAST.findFirstToken(TokenTypes.MODIFIERS);", "-        final Scope declaredScope = ScopeUtils.getScopeFromMods(mods);", "+        final Scope declaredScope;", "+        if (aAST.getType() == TokenTypes.ENUM_CONSTANT_DEF)", "+        {", "+            declaredScope = Scope.PUBLIC;", "+        }", "+        else", "+        {", "+            declaredScope = ScopeUtils.getScopeFromMods(", "+                aAST.findFirstToken(TokenTypes.MODIFIERS));", "+        }", "+"]}]}