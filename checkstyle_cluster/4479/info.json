{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a503fa79063a4e6ef871a01408260a8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "204c9c08259dfe7fb509d40060dea2cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule72thesummaryfragment/SummaryJavadocTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCorrect() throws Exception", "signatureAfterChange": "      @Test     public void testCorrect() throws Exception", "diff": ["-        Configuration checkConfig = builder.getCheckConfig(\"SummaryJavadocCheck\");", "-        String filePath = builder.getFilePath(\"InputCorrectSummaryJavaDocCheck\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"SummaryJavadocCheck\");", "+        final String filePath = builder.getFilePath(\"InputCorrectSummaryJavaDocCheck\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "409f12519c2a6e84014f246d27b890bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testListFilesDirectoryWithNull() throws Exception", "signatureAfterChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testListFilesDirectoryWithNull() throws Exception", "diff": ["-        Method method = Main.class.getDeclaredMethod(\"listFiles\", File.class);", "+        final Method method = Main.class.getDeclaredMethod(\"listFiles\", File.class);", "-        File fileMock = mock(File.class);", "+        final File fileMock = mock(File.class);", "-        List<File> result = (List<File>) method.invoke(null, fileMock);", "+        final List<File> result = (List<File>) method.invoke(null, fileMock);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b85381cbb337cc0ae5fe8d334743ee6d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule232specialescape/IllegalTokenTextTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void illegalTokensTest() throws Exception", "signatureAfterChange": "      @Test     public void illegalTokensTest() throws Exception", "diff": ["-        Configuration checkConfig = builder.getCheckConfig(\"IllegalTokenText\");", "-        String filePath = builder.getFilePath(\"IllegalTokenTextInput\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"IllegalTokenText\");", "+        final String filePath = builder.getFilePath(\"IllegalTokenTextInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfa3f37407367533460b541924349245", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CommitValidationTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCommitMessageHasProperStructure() throws Exception", "signatureAfterChange": "      @Test     public void testCommitMessageHasProperStructure() throws Exception", "diff": ["-            String commitId = commit.getId().getName();", "-            String commitMessage = commit.getFullMessage();", "-            Matcher matcher = ACCEPTED_COMMIT_MESSAGE_PATTERN.matcher(commitMessage);", "+            final String commitId = commit.getId().getName();", "+            final String commitMessage = commit.getFullMessage();", "+            final Matcher matcher = ACCEPTED_COMMIT_MESSAGE_PATTERN.matcher(commitMessage);"]}]}