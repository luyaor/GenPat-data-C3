{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f37e79b56017d1781d6e6a23bc44946", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d8d545e60d47bd37ea8cbcd4f745cac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "343b75b252db9492ace4c4e5bfb36016e631c7a5", "commitAfterChange": "f9f60d3142533c3eebff775e8eb1159935faaba1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private Set<String> getModifiers(DetailAST variableDefAST)", "signatureAfterChange": "     private static Set<String> getModifiers(DetailAST defAST)", "diff": ["-    private Set<String> getModifiers(DetailAST variableDefAST)", "+    private static Set<String> getModifiers(DetailAST defAST)", "-        final AST modifiersAST = variableDefAST.getFirstChild();", "-        if (modifiersAST.getType() != TokenTypes.MODIFIERS) {", "-            throw new IllegalStateException(\"Strange parse tree\");", "+        final AST modifiersAST = defAST.findFirstToken(TokenTypes.MODIFIERS);", "+        final Set<String> modifiersSet = new HashSet<>();", "+        if (modifiersAST != null) {", "+            AST modifier = modifiersAST.getFirstChild();", "+            while (modifier != null) {", "+                modifiersSet.add(modifier.getText());", "+                modifier = modifier.getNextSibling();", "+            }", "-        final Set<String> retVal = Sets.newHashSet();", "-        AST modifier = modifiersAST.getFirstChild();", "-        while (modifier != null) {", "-            retVal.add(modifier.getText());", "-            modifier = modifier.getNextSibling();", "-        }", "-        return retVal;", "+        return modifiersSet;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3089ce2efd80fcbfe130e2e936ec57f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private static String getIdentifier(DetailAST aAST)", "signatureAfterChange": "     private static String getIdentifier(DetailAST ast)", "diff": ["-    private static String getIdentifier(DetailAST aAST)", "+    private static String getIdentifier(DetailAST ast)", "-        if (aAST != null) {", "-            if (aAST.getType() == TokenTypes.IDENT) {", "-                return aAST.getText();", "+        if (ast != null) {", "+            if (ast.getType() == TokenTypes.IDENT) {", "+                return ast.getText();", "-            else if (aAST.getType() == TokenTypes.DOT) {", "-                return getIdentifier(aAST.getFirstChild()) + \".\"", "-                    + getIdentifier(aAST.getLastChild());", "+            else if (ast.getType() == TokenTypes.DOT) {", "+                return getIdentifier(ast.getFirstChild()) + \".\"", "+                    + getIdentifier(ast.getLastChild());", "-        throw new IllegalArgumentException(\"Identifier AST expected: \" + aAST);", "+        throw new IllegalArgumentException(\"Identifier AST expected: \" + ast);"]}]}