{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "26608bfa8e61fc804338b1ca1aaf9724", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30aa1c2b0e6d5930eaa69ab10b717d53", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final DetailAST params = aAST.findFirstToken(TokenTypes.PARAMETERS);", "+        final DetailAST params = ast.findFirstToken(TokenTypes.PARAMETERS);", "-        if (count > mMax && !ignoreNumberOfParameters(aAST)) {", "-            final DetailAST name = aAST.findFirstToken(TokenTypes.IDENT);", "-            log(name.getLineNo(), name.getColumnNo(), \"maxParam\", mMax, count);", "+        if (count > max && !ignoreNumberOfParameters(ast)) {", "+            final DetailAST name = ast.findFirstToken(TokenTypes.IDENT);", "+            log(name.getLineNo(), name.getColumnNo(), \"maxParam\", max, count);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7454bf08f8f6da2ff5ae1d9e5fabf229", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/HideUtilityClassConstructorCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (isAbstract(aAST)) {", "+        if (isAbstract(ast)) {", "-        final DetailAST objBlock = aAST.findFirstToken(TokenTypes.OBJBLOCK);", "+        final DetailAST objBlock = ast.findFirstToken(TokenTypes.OBJBLOCK);", "-        final boolean hasStaticModifier = isStatic(aAST);", "+        final boolean hasStaticModifier = isStatic(ast);", "-            aAST.findFirstToken(TokenTypes.EXTENDS_CLAUSE) == null;", "+            ast.findFirstToken(TokenTypes.EXTENDS_CLAUSE) == null;", "-            log(aAST.getLineNo(), aAST.getColumnNo(), \"hide.utility.class\");", "+            log(ast.getLineNo(), ast.getColumnNo(), \"hide.utility.class\");"]}]}