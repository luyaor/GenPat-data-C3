{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7ee9cc326321a1c2964dca5d6410fb9c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2441c51a90757013e7b19221d0893372", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PackageNamesLoaderTest.java", "commitBeforeChange": "5dffb5a301b2605c730d1de3f312ba4a7f95355e", "commitAfterChange": "4d8d047f465f9eb101390da63ee62a735fbedba5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testPackagesWithSaxException() throws Exception", "signatureAfterChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testPackagesWithSaxException() throws Exception", "diff": ["-        Enumeration<URL> enumer = (Enumeration<URL>) mock(Enumeration.class);", "-        when(enumer.hasMoreElements()).thenReturn(true);", "-        when(enumer.nextElement()).thenReturn(url);", "+        Enumeration<URL> enumeration = (Enumeration<URL>) mock(Enumeration.class);", "+        when(enumeration.hasMoreElements()).thenReturn(true);", "+        when(enumeration.nextElement()).thenReturn(url);", "-        when(classLoader.getResources(\"checkstyle_packages.xml\")).thenReturn(enumer);", "+        when(classLoader.getResources(\"checkstyle_packages.xml\")).thenReturn(enumeration);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ad7ec9a19573b95a2eebf77d596a4c5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testWrongSeparatorLength() throws Exception", "signatureAfterChange": "      @Test     public void testWrongSeparatorLength() throws Exception", "diff": ["-        NewlineAtEndOfFileCheck check = new NewlineAtEndOfFileCheck();", "+        final NewlineAtEndOfFileCheck check = new NewlineAtEndOfFileCheck();", "-        Method method = NewlineAtEndOfFileCheck.class", "+        final Method method = NewlineAtEndOfFileCheck.class", "-        RandomAccessFile file = mock(RandomAccessFile.class);", "+        final RandomAccessFile file = mock(RandomAccessFile.class);"]}]}