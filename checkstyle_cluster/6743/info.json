{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71f18b658d5962f628d991970c960ccb", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e5957614346a14b4625ec7ac7478c20", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "25badc206f9b8fdce3391992cec951235250a3d2", "commitAfterChange": "aab0718232e060bd8f289770ab81780b3a2705a2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Override     public final void visitToken(DetailAST blockCommentNode)", "signatureAfterChange": "      @Override     public final void visitToken(DetailAST blockCommentNode)", "diff": ["-            ParseStatus ps;", "+            ParseStatus result;", "-                ps = TREE_CACHE.get().get(treeCacheKey);", "+                result = TREE_CACHE.get().get(treeCacheKey);", "-                ps = parseJavadocAsDetailNode(blockCommentNode);", "-                TREE_CACHE.get().put(treeCacheKey, ps);", "+                result = parseJavadocAsDetailNode(blockCommentNode);", "+                TREE_CACHE.get().put(treeCacheKey, result);", "-            if (ps.getParseErrorMessage() == null) {", "-                processTree(ps.getTree());", "+            if (result.getParseErrorMessage() == null) {", "+                processTree(result.getTree());", "-                final ParseErrorMessage parseErrorMessage = ps.getParseErrorMessage();", "+                final ParseErrorMessage parseErrorMessage = result.getParseErrorMessage();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "734bcf25756b82cc7aa4eb99835a7a70", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void initialize(AST ast)", "signatureAfterChange": "      @Override     public void initialize(AST ast)", "diff": ["-        final DetailAST da = (DetailAST) ast;", "-        setText(da.getText());", "-        setType(da.getType());", "-        lineNo = da.getLineNo();", "-        columnNo = da.getColumnNo();", "-        hiddenAfter = da.getHiddenAfter();", "-        hiddenBefore = da.getHiddenBefore();", "+        final DetailAST detailAst = (DetailAST) ast;", "+        setText(detailAst.getText());", "+        setType(detailAst.getType());", "+        lineNo = detailAst.getLineNo();", "+        columnNo = detailAst.getColumnNo();", "+        hiddenAfter = detailAst.getHiddenAfter();", "+        hiddenBefore = detailAst.getHiddenBefore();"]}]}