{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "58def171d76eaf024aa384afb28592aa", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e0be0fc0d922cbda1bfe8f4b5b5988c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "1c8180d74fbed939e5de56ee87760032f42f8df6", "commitAfterChange": "04ceb4b91f4e66439479406834f42014c5be62ed", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void verifyBrace(final DetailAST brace,                              final DetailAST startToken)", "signatureAfterChange": "     private void verifyBrace(final DetailAST brace,                              final DetailAST startToken)", "diff": ["-        if (braceLine.length() > brace.getColumnNo() + 1", "-            && braceLine.charAt(brace.getColumnNo() + 1) == '}')", "+        if (braceLine.length() <= brace.getColumnNo() + 1", "+                || braceLine.charAt(brace.getColumnNo() + 1) != '}')", "-            // ignore", "-        }", "-        else if (getAbstractOption() == LeftCurlyOption.NL) {", "-            if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {", "-                log(brace.getLineNo(), brace.getColumnNo(),", "-                    MSG_KEY_LINE_NEW, \"{\");", "-            }", "-        }", "-        else if (getAbstractOption() == LeftCurlyOption.EOL) {", "-            if (Utils.whitespaceBefore(brace.getColumnNo(), braceLine)", "-                && prevLineLen + 2 <= maxLineLength)", "-            {", "-                log(brace.getLineNo(), brace.getColumnNo(),", "-                    MSG_KEY_LINE_PREVIOUS, \"{\");", "-            }", "-            if (!hasLineBreakAfter(brace)) {", "-                log(brace.getLineNo(), brace.getColumnNo(), MSG_KEY_LINE_BREAK_AFTER);", "-            }", "-        }", "-        else if (getAbstractOption() == LeftCurlyOption.NLOW) {", "-            if (startToken.getLineNo() == brace.getLineNo()) {", "-                // all ok as on the same line", "-            }", "-            else if (startToken.getLineNo() + 1 == brace.getLineNo()) {", "+            if (getAbstractOption() == LeftCurlyOption.NL) {", "-                else if (prevLineLen + 2 <= maxLineLength) {", "+            }", "+            else if (getAbstractOption() == LeftCurlyOption.EOL) {", "+                if (Utils.whitespaceBefore(brace.getColumnNo(), braceLine)", "+                    && prevLineLen + 2 <= maxLineLength)", "+                {", "+                if (!hasLineBreakAfter(brace)) {", "+                    log(brace.getLineNo(), brace.getColumnNo(), MSG_KEY_LINE_BREAK_AFTER);", "+                }", "-            else if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {", "-                log(brace.getLineNo(), brace.getColumnNo(),", "-                    MSG_KEY_LINE_NEW, \"{\");", "+            else if (getAbstractOption() == LeftCurlyOption.NLOW", "+                    && startToken.getLineNo() != brace.getLineNo())", "+            {", "+                // not on the same line", "+                if (startToken.getLineNo() + 1 == brace.getLineNo()) {", "+                    if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {", "+                        log(brace.getLineNo(), brace.getColumnNo(),", "+                                MSG_KEY_LINE_NEW, \"{\");", "+                    }", "+                    else if (prevLineLen + 2 <= maxLineLength) {", "+                        log(brace.getLineNo(), brace.getColumnNo(),", "+                                MSG_KEY_LINE_PREVIOUS, \"{\");", "+                    }", "+                }", "+                else if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {", "+                    log(brace.getLineNo(), brace.getColumnNo(),", "+                            MSG_KEY_LINE_NEW, \"{\");", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "576aaad7cb16acab5f81e0bb70455df5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractSuperCheck.java", "commitBeforeChange": "6e775898e7d1ac179bcb6550f3023ee9b9d70bc3", "commitAfterChange": "8607274a9205c5f15c33820b0efa6dc4c5ea9a23", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean isSuperCallInOverridingMethod(DetailAST ast)", "signatureAfterChange": "     private boolean isSuperCallInOverridingMethod(DetailAST ast)", "diff": ["-        while (dotAst != null) {", "+        while (dotAst != null", "+                && dotAst.getType() != TokenTypes.CTOR_DEF", "+                && dotAst.getType() != TokenTypes.INSTANCE_INIT) {", "+", "-            if (dotAst.getType() == TokenTypes.CTOR_DEF", "-                || dotAst.getType() == TokenTypes.INSTANCE_INIT) {", "-                break;", "-            }", "+"]}]}