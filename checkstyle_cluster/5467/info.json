{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f32fab884e1346295af11cac562ede3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dfa6dd60a0191ddccd6a27cc6cca016", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "d0939d3bc93819ebc1f42642806c0265fc7908b3", "commitAfterChange": "86826e1fa3fe3d793ee4723bb84ee0fc4ca38df1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static void main(String... args) throws UnsupportedEncodingException,             FileNotFoundException", "signatureAfterChange": "     public static void main(String... args) throws UnsupportedEncodingException,             FileNotFoundException", "diff": ["-                if (!cliViolations) {", "-                    // create config helper object", "-                    final CliOptions config = convertCliToPojo(commandLine);", "-                    // run Checker", "-                    errorCounter = runCheckstyle(config);", "-                    exitStatus = errorCounter;", "-                }", "-                else {", "+                if (cliViolations) {", "+                }", "+                else {", "+                    // create config helper object", "+                    final CliOptions config = convertCliToPojo(commandLine);", "+                    // run Checker", "+                    errorCounter = runCheckstyle(config);", "+                    exitStatus = errorCounter;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e80b69760d477bea798c41353c3a2597", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "commitAfterChange": "6ee4a0f805d528cdee03cfc175502d15b5722dab", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void doVisitTokenInSameGroup(boolean isStatic,             boolean previous, String name, int line)", "signatureAfterChange": "     private void doVisitTokenInSameGroup(boolean isStatic,             boolean previous, String name, int line)", "diff": ["-                // current and previous static or current and", "-                // previous non-static", "-                lastImportStatic == isStatic", "-                &&", "-                        // and out of lexicographic order", "-                        compare(lastImport, name, caseSensitive) > 0", "-                ||", "-                previous;", "+                previous", "+                    ||", "+                    // current and previous static or current and", "+                    // previous non-static", "+                    lastImportStatic == isStatic", "+                &&", "+                // and out of lexicographic order", "+                compare(lastImport, name, caseSensitive) > 0;"]}]}