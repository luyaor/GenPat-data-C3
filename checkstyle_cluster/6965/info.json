{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a08a3fba255b39d6362570aff187f47d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1bf6dba3dc8a6f62d92b1e525f859e8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private ParseTree parseJavadocAsParseTree(String aBlockComment)         throws IOException", "signatureAfterChange": "     private ParseTree parseJavadocAsParseTree(String blockComment)         throws IOException", "diff": ["-    private ParseTree parseJavadocAsParseTree(String aBlockComment)", "+    private ParseTree parseJavadocAsParseTree(String blockComment)", "-        final InputStream in = new ByteArrayInputStream(aBlockComment.getBytes(utf8Charset));", "+        final InputStream in = new ByteArrayInputStream(blockComment.getBytes(utf8Charset));", "-        lexer.addErrorListener(mErrorListener);", "+        lexer.addErrorListener(errorListener);", "-        parser.addErrorListener(mErrorListener);", "+        parser.addErrorListener(errorListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da737a905559141395bb0d5381eeb8cd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "6a977155274fa6ff7e3055ca3701c206d9e0d34d", "commitAfterChange": "2c41aaf844d3206775c0a8c9e78aabf3a6d85a36", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private ParseTree parseJavadocAsParseTree(String blockComment)         throws IOException", "signatureAfterChange": "     private ParseTree parseJavadocAsParseTree(String blockComment)", "diff": ["-    private ParseTree parseJavadocAsParseTree(String blockComment)", "-        throws IOException {", "-        final Charset utf8Charset = Charset.forName(\"UTF-8\");", "-        final InputStream in = new ByteArrayInputStream(blockComment.getBytes(utf8Charset));", "-", "-        final ANTLRInputStream input = new ANTLRInputStream(in);", "+    private ParseTree parseJavadocAsParseTree(String blockComment) {", "+        final ANTLRInputStream input = new ANTLRInputStream(blockComment);"]}]}