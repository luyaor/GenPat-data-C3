{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "72b65ff0819c5045c02030736256761f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "306ba21dc9fe895504bacec7fcabd019", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/MyModifierSet.java", "commitBeforeChange": "22885be800d66237f4447184acdf669224d6d8e0", "commitAfterChange": "048d0cdaf4492a4c1b122320143b9d5339e5ac3b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     boolean hasOrderSuggestedByJLS()", "signatureAfterChange": "     String checkOrderSuggestedByJLS()", "diff": ["-    boolean hasOrderSuggestedByJLS()", "+    String checkOrderSuggestedByJLS()", "-        Iterator it = mModifiers.iterator();", "-        do", "-        {", "-            if (!it.hasNext())", "-            {", "-                return true;", "+        String modifier;", "+        final Iterator it = mModifiers.iterator();", "+        do {", "+            if (!it.hasNext()) {", "+                return null;", "-            final String modifier = (String) it.next();", "-            while (i < JLS_ORDER.length && !JLS_ORDER[i].equals(modifier))", "-            {", "+", "+            modifier = (String) it.next();", "+            while ((i < JLS_ORDER.length) && !JLS_ORDER[i].equals(modifier)) {", "-        return false;", "+", "+        return \"'\" + modifier", "+            + \"' modifier out of order with the JLS suggestions.\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fe2d5bdd946a2c84b62b64dfffbceba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/MyModifierSet.java", "commitBeforeChange": "2d315277b6e1c152fd78da9fb91f214c43b31996", "commitAfterChange": "4d8f0c80663bb4015475669e6b85c6f3e1a1aec7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     String checkOrderSuggestedByJLS()", "signatureAfterChange": "     MyCommonAST checkOrderSuggestedByJLS()", "diff": ["-    String checkOrderSuggestedByJLS()", "+    MyCommonAST checkOrderSuggestedByJLS()", "-        String modifier;", "-        final Iterator it = mModifiers.iterator();", "+        MyCommonAST modifier;", "+        final Iterator it = mModifierASTs.iterator();", "-            modifier = (String) it.next();", "-            while ((i < JLS_ORDER.length) && !JLS_ORDER[i].equals(modifier)) {", "+            modifier = (MyCommonAST) it.next();", "+            while ((i < JLS_ORDER.length)", "+                   && !JLS_ORDER[i].equals(modifier.getText()))", "+            {", "-        return \"'\" + modifier", "-            + \"' modifier out of order with the JLS suggestions.\";", "+        return modifier;"]}]}