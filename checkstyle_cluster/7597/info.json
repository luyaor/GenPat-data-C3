{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cdd8767bbec1eeac6dc96bbe2e33a071", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2590386e6e747e01cb902ef64abb4113", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "7614f726f9fc398468be154d1d8a3f61ea833728", "commitAfterChange": "a25d3f86b30087d62c82f023b4f2630e734b673f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testLoadFromURL() throws CheckstyleException", "signatureAfterChange": "      @Test     public void testLoadFromURL() throws CheckstyleException, InterruptedException", "diff": ["-    public void testLoadFromURL() throws CheckstyleException", "+    public void testLoadFromURL() throws CheckstyleException, InterruptedException", "-        final FilterSet fc = SuppressionsLoader.loadSuppressions(\"http://checkstyle.sourceforge.net/files/suppressions_none.xml\");", "+    \tFilterSet fc = null;", "+    \t", "+    \tint attemptCount = 0;", "+    \twhile (attemptCount < 5)", "+    \ttry{", "+    \t\t", "+    \t\tfc = SuppressionsLoader.loadSuppressions(\"http://checkstyle.sourceforge.net/files/suppressions_none.xml\");", "+    \t\tbreak;", "+    \t\t", "+    \t} catch (CheckstyleException ex) {", "+    \t\t// for some reason Travis CI failed some times(unstable) on reading this file", "+    \t\tif (ex.getMessage().contains(\"unable to read\")) {", "+    \t\t\tattemptCount++;", "+    \t\t\t// wait for bad/disconnection time to pass", "+    \t\t\tThread.sleep(1000);", "+    \t\t} else {", "+    \t\t\tthrow ex;", "+    \t\t}", "+    \t}", "+    \t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e1a6a3bae5edf46e02420187ed4aaaf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "1eda2807c85e7cd80f538bf1ac7c9288a1b59240", "commitAfterChange": "960d7d03b0dd7d1070ff218d5b27d21db7b0f0da", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     PropertyCacheFile(Configuration aCurrentConfig, String aFileName)", "signatureAfterChange": "     PropertyCacheFile(Configuration aCurrentConfig, String aFileName)", "diff": ["+            FileInputStream inStream = null;", "-                mDetails.load(new FileInputStream(fileName));", "+                inStream = new FileInputStream(fileName);", "+                mDetails.load(inStream);", "+            finally {", "+                if (inStream != null) {", "+                    try {", "+                        inStream.close();", "+                    }", "+                    catch (IOException ex) {", "+                        // TODO: use logger", "+                        System.out.println(\"Unable to close cache file.\");", "+                        ex.printStackTrace(System.out);", "+                    }", "+                }", "+            }"]}]}