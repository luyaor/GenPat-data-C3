{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68f256eaf898946d0e4f8a5c8e3fd81b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06661994ad6878999443e723ea49d314", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "206ff56be6d052ebd15d06bffeba31dd14947119", "commitAfterChange": "91a4d48af703bfb26ff08273a6a520c6f4c709f6", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     private void checkThrowsTags(List aTags, List aThrows)", "signatureAfterChange": "     private void checkThrowsTags(List aTags, List aThrows)", "diff": ["+        final Set foundThrows = new HashSet();", "-            boolean found = false;", "+            final String documentedEx = tag.getArg1();", "+            boolean found = foundThrows.contains(documentedEx);", "-            while (throwIt.hasNext()) {", "+            while (!found && throwIt.hasNext()) {", "-                if (t.getText().equals(tag.getArg1())) {", "+                if (t.getText().equals(documentedEx)) {", "-                    break;", "+                    foundThrows.add(documentedEx);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b126fd6e1b5e9d63b53cec1e98e468dc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "65ca7775ba7d0b649c16cfdc8a1447f41867c870", "commitAfterChange": "6ffc8dd26075456b055ffcd35d3915c23049bfbb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws BuildException", "diff": ["-                config.setClassLoader(new AntClassLoader(getProject(),", "-                                      mClasspath));", "-                c = new Checker(config);", "+", "+                DefaultContext context = new DefaultContext();", "+                ClassLoader loader = new AntClassLoader(getProject(), mClasspath);", "+                context.add(\"classloader\", loader);", "+", "+                c = new Checker();", "+                c.contextualize(context);", "+                c.configure(config);", "+"]}]}