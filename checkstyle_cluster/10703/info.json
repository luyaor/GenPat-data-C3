{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36fc9ac7f3dd5e1fc8a01cc3078a1e5b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8eec4b2964210cd6fa62488451d2072e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java", "commitBeforeChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "commitAfterChange": "6ee4a0f805d528cdee03cfc175502d15b5722dab", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child)", "signatureAfterChange": "      @Override     public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child)", "diff": ["-            || getParent() instanceof CaseHandler", "-                && child instanceof SlistHandler) {", "+            || child instanceof SlistHandler", "+                && getParent() instanceof CaseHandler) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e80b69760d477bea798c41353c3a2597", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "commitAfterChange": "6ee4a0f805d528cdee03cfc175502d15b5722dab", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void doVisitTokenInSameGroup(boolean isStatic,             boolean previous, String name, int line)", "signatureAfterChange": "     private void doVisitTokenInSameGroup(boolean isStatic,             boolean previous, String name, int line)", "diff": ["-                // current and previous static or current and", "-                // previous non-static", "-                lastImportStatic == isStatic", "-                &&", "-                        // and out of lexicographic order", "-                        compare(lastImport, name, caseSensitive) > 0", "-                ||", "-                previous;", "+                previous", "+                    ||", "+                    // current and previous static or current and", "+                    // previous non-static", "+                    lastImportStatic == isStatic", "+                &&", "+                // and out of lexicographic order", "+                compare(lastImport, name, caseSensitive) > 0;"]}]}