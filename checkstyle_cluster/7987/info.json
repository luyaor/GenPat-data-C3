{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fea25c3c08dcc6107c0c67f67db57869", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "094460f81059ea4122ea3e5ddff70c92", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/DefaultComesLastCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final DetailAST defaultGroupAST = aAST.getParent();", "+        final DetailAST defaultGroupAST = ast.getParent();", "-                log(aAST, \"default.comes.last\");", "+                log(ast, \"default.comes.last\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "143f18302f868f1ae22fce91af4f6ef6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForIteratorPadCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (aAST.getChildCount() == 0) {", "+        if (ast.getChildCount() == 0) {", "-            final DetailAST semi = aAST.getPreviousSibling();", "+            final DetailAST semi = ast.getPreviousSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19ad1a4fc38f2d382088b54d50d96dc8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean isPreceedsEmptyForInit(DetailAST aAST)", "signatureAfterChange": "     private boolean isPreceedsEmptyForInit(DetailAST ast)", "diff": ["-    private boolean isPreceedsEmptyForInit(DetailAST aAST)", "+    private boolean isPreceedsEmptyForInit(DetailAST ast)", "-        final DetailAST parent = aAST.getParent();", "+        final DetailAST parent = ast.getParent();", "-                    && (aAST == forIterator.getPreviousSibling());", "+                    && (ast == forIterator.getPreviousSibling());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "231525acebe77507a731134eeceff2d3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForInitializerPadCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (aAST.getChildCount() == 0) {", "+        if (ast.getChildCount() == 0) {", "-            final DetailAST semi = aAST.getNextSibling();", "+            final DetailAST semi = ast.getNextSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "253977331a0cbcb1352249e97e9fcfd3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-    public void leaveToken(DetailAST aAST)", "+    public void leaveToken(DetailAST ast)", "-        switch (aAST.getType()) {", "+        switch (ast.getType()) {", "-            leaveExpr(aAST);", "+            leaveExpr(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3716457c7d47dda0008a2d83a6c9d592", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NestedTryDepthCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-    public void leaveToken(DetailAST aAST)", "+    public void leaveToken(DetailAST ast)", "-        switch (aAST.getType()) {", "+        switch (ast.getType()) {", "-            throw new IllegalStateException(aAST.toString());", "+            throw new IllegalStateException(ast.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fb376ae7065c6d2846c8a6fa2861f11", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private static boolean isInNoBraceControlStatement(DetailAST aAST)", "signatureAfterChange": "     private static boolean isInNoBraceControlStatement(DetailAST ast)", "diff": ["-    private static boolean isInNoBraceControlStatement(DetailAST aAST)", "+    private static boolean isInNoBraceControlStatement(DetailAST ast)", "-        if (!isInContext(aAST, CONTROL_CONTEXT)) {", "+        if (!isInContext(ast, CONTROL_CONTEXT)) {", "-        final DetailAST expr = aAST.getParent();", "+        final DetailAST expr = ast.getParent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41778c98cbc235b2912ea63a41f4c9f7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ParameterAssignmentCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-    public void leaveToken(DetailAST aAST)", "+    public void leaveToken(DetailAST ast)", "-        switch (aAST.getType()) {", "+        switch (ast.getType()) {", "-            throw new IllegalStateException(aAST.toString());", "+            throw new IllegalStateException(ast.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47adae4cf6467054cbb58c5d7bd7b52e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private boolean isVariableDefCountable(DetailAST aAST)", "signatureAfterChange": "     private boolean isVariableDefCountable(DetailAST ast)", "diff": ["-    private boolean isVariableDefCountable(DetailAST aAST)", "+    private boolean isVariableDefCountable(DetailAST ast)", "-        final int parentType = aAST.getParent().getType();", "+        final int parentType = ast.getParent().getType();", "-            final DetailAST prevSibling = aAST.getPreviousSibling();", "+            final DetailAST prevSibling = ast.getPreviousSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ec993ac7d08a04711b3db0a8aacd667", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-    public void leaveToken(DetailAST aAST)", "+    public void leaveToken(DetailAST ast)", "-        switch (aAST.getType()) {", "+        switch (ast.getType()) {", "-            super.leaveToken(aAST);", "+            super.leaveToken(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a5611ad02d8a8388a7c1b09c36806a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LocalFinalVariableNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     protected final boolean mustCheckName(DetailAST aAST)", "signatureAfterChange": "      @Override     protected final boolean mustCheckName(DetailAST ast)", "diff": ["-    protected final boolean mustCheckName(DetailAST aAST)", "+    protected final boolean mustCheckName(DetailAST ast)", "-            aAST.findFirstToken(TokenTypes.MODIFIERS);", "+            ast.findFirstToken(TokenTypes.MODIFIERS);", "-        return (isFinal && ScopeUtils.isLocalVariableDef(aAST));", "+        return (isFinal && ScopeUtils.isLocalVariableDef(ast));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f5c45a9358b0e070beb24bf8e8c62fe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/StaticVariableNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     protected final boolean mustCheckName(DetailAST aAST)", "signatureAfterChange": "      @Override     protected final boolean mustCheckName(DetailAST ast)", "diff": ["-    protected final boolean mustCheckName(DetailAST aAST)", "+    protected final boolean mustCheckName(DetailAST ast)", "-            aAST.findFirstToken(TokenTypes.MODIFIERS);", "+            ast.findFirstToken(TokenTypes.MODIFIERS);", "-                && !ScopeUtils.inInterfaceOrAnnotationBlock(aAST));", "+                && !ScopeUtils.inInterfaceOrAnnotationBlock(ast));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "923389e88452e497c142543bccfcbb58", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean isInHashCodeMethod(DetailAST aAST)", "signatureAfterChange": "     private boolean isInHashCodeMethod(DetailAST ast)", "diff": ["-    private boolean isInHashCodeMethod(DetailAST aAST)", "+    private boolean isInHashCodeMethod(DetailAST ast)", "-        if (!ScopeUtils.inCodeBlock(aAST)) {", "+        if (!ScopeUtils.inCodeBlock(ast)) {", "-        DetailAST methodDefAST = aAST.getParent();", "+        DetailAST methodDefAST = ast.getParent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9838a7dbb48fb99c02e32b4892e2d993", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingCtorCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final DetailAST modifiers = aAST.findFirstToken(TokenTypes.MODIFIERS);", "+        final DetailAST modifiers = ast.findFirstToken(TokenTypes.MODIFIERS);", "-        super.visitToken(aAST);", "+        super.visitToken(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a64b828c416ef2a4caefad84e6223e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractComplexityCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        switch (aAST.getType()) {", "+        switch (ast.getType()) {", "-            visitTokenHook(aAST);", "+            visitTokenHook(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d88871f7ad5f432e5a86173b6b180d6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private static boolean returnsOnlyBooleanLiteral(AST aAST)", "signatureAfterChange": "     private static boolean returnsOnlyBooleanLiteral(AST ast)", "diff": ["-    private static boolean returnsOnlyBooleanLiteral(AST aAST)", "+    private static boolean returnsOnlyBooleanLiteral(AST ast)", "-        if (isBooleanLiteralReturnStatement(aAST)) {", "+        if (isBooleanLiteralReturnStatement(ast)) {", "-        final AST firstStmnt = aAST.getFirstChild();", "+        final AST firstStmnt = ast.getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0d6dc61c78e52a4784602e02a794866", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EmptyStatementCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        log(aAST.getLineNo(), aAST.getColumnNo(), \"empty.statement\");", "+        log(ast.getLineNo(), ast.getColumnNo(), \"empty.statement\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a62468d7a421a4ffa22a9cc16bf25e75", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     private Scope calculateScope(final DetailAST aAST)", "signatureAfterChange": "     private Scope calculateScope(final DetailAST ast)", "diff": ["-    private Scope calculateScope(final DetailAST aAST)", "+    private Scope calculateScope(final DetailAST ast)", "-        final DetailAST mods = aAST.findFirstToken(TokenTypes.MODIFIERS);", "+        final DetailAST mods = ast.findFirstToken(TokenTypes.MODIFIERS);", "-        return ScopeUtils.inInterfaceOrAnnotationBlock(aAST) ? Scope.PUBLIC", "+        return ScopeUtils.inInterfaceOrAnnotationBlock(ast) ? Scope.PUBLIC"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8f269fc929d02bad9dcb33a407eba0e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private boolean isFollowsEmptyForIterator(DetailAST aAST)", "signatureAfterChange": "     private boolean isFollowsEmptyForIterator(DetailAST ast)", "diff": ["-    private boolean isFollowsEmptyForIterator(DetailAST aAST)", "+    private boolean isFollowsEmptyForIterator(DetailAST ast)", "-        final DetailAST parent = aAST.getParent();", "+        final DetailAST parent = ast.getParent();", "-                && (aAST == forIterator.getNextSibling());", "+                && (ast == forIterator.getNextSibling());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b50927748898bfd125e4a65daa09e633", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private DetailAST getSuppressWarnings(DetailAST aAST)", "signatureAfterChange": "     private DetailAST getSuppressWarnings(DetailAST ast)", "diff": ["-    private DetailAST getSuppressWarnings(DetailAST aAST)", "+    private DetailAST getSuppressWarnings(DetailAST ast)", "-            aAST, SuppressWarningsCheck.SUPPRESS_WARNINGS);", "+            ast, SuppressWarningsCheck.SUPPRESS_WARNINGS);", "-                aAST, SuppressWarningsCheck.FQ_SUPPRESS_WARNINGS);", "+                ast, SuppressWarningsCheck.FQ_SUPPRESS_WARNINGS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5d8f194ec9d6dae248ce476b8b8eed0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/CheckUtils.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static boolean isElseIf(DetailAST aAST)", "signatureAfterChange": "     public static boolean isElseIf(DetailAST ast)", "diff": ["-    public static boolean isElseIf(DetailAST aAST)", "+    public static boolean isElseIf(DetailAST ast)", "-        final DetailAST parentAST = aAST.getParent();", "+        final DetailAST parentAST = ast.getParent();", "-        return (aAST.getType() == TokenTypes.LITERAL_IF)", "+        return (ast.getType() == TokenTypes.LITERAL_IF)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7a0c57f080de868e31c8b80ba40a279", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (TokenTypes.CLASS_DEF == aAST.getType()) {", "-            visitClassDef(aAST);", "+        if (TokenTypes.CLASS_DEF == ast.getType()) {", "+            visitClassDef(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfa63867ac81d0b9e608f4186f8c2960", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NestedForDepthCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (TokenTypes.LITERAL_FOR == aAST.getType()) {", "-            nestIn(aAST, \"nested.for.depth\");", "+        if (TokenTypes.LITERAL_FOR == ast.getType()) {", "+            nestIn(ast, \"nested.for.depth\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c76f73ac2b97f1ddedf2ea9dd6368bea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/PackageAnnotationCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Override     public void visitToken(final DetailAST aAST)", "signatureAfterChange": "     @Override     public void visitToken(final DetailAST ast)", "diff": ["-    public void visitToken(final DetailAST aAST)", "+    public void visitToken(final DetailAST ast)", "-            AnnotationUtility.containsAnnotation(aAST);", "+            AnnotationUtility.containsAnnotation(ast);", "-            this.log(aAST.getLine(), \"annotation.package.location\");", "+            this.log(ast.getLine(), \"annotation.package.location\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7a3a100b5d8e5b7206f062def7dbae1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OverloadMethodsDeclarationOrderCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final int parentType = aAST.getParent().getType();", "+        final int parentType = ast.getParent().getType();", "-            checkOverloadMethodsGrouping(aAST);", "+            checkOverloadMethodsGrouping(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8a20dad9a67c674219d6e0b1873dae7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private boolean isExpressionCountable(DetailAST aAST)", "signatureAfterChange": "     private boolean isExpressionCountable(DetailAST ast)", "diff": ["-    private boolean isExpressionCountable(DetailAST aAST)", "+    private boolean isExpressionCountable(DetailAST ast)", "-        final int parentType = aAST.getParent().getType();", "+        final int parentType = ast.getParent().getType();", "-            final DetailAST prevSibling = aAST.getPreviousSibling();", "+            final DetailAST prevSibling = ast.getPreviousSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc7cc05e3c5a04cbb364aa280071a4a5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        switch (aAST.getType()) {", "+        switch (ast.getType()) {", "-            super.visitToken(aAST);", "+            super.visitToken(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5321438490fc897e95fee363e61bb4e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     protected boolean mustCheckName(DetailAST aAST)", "signatureAfterChange": "      @Override     protected boolean mustCheckName(DetailAST ast)", "diff": ["-    protected boolean mustCheckName(DetailAST aAST)", "+    protected boolean mustCheckName(DetailAST ast)", "-            (aAST.getParent() != null)", "-                && (aAST.getParent().getType() == TokenTypes.LITERAL_CATCH));", "+            (ast.getParent() != null)", "+                && (ast.getParent().getType() == TokenTypes.LITERAL_CATCH));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e87b0fbf4829ca17d6d9e88f782e982c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (mustCheckName(aAST)) {", "-            final DetailAST nameAST = aAST.findFirstToken(TokenTypes.IDENT);", "+        if (mustCheckName(ast)) {", "+            final DetailAST nameAST = ast.findFirstToken(TokenTypes.IDENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8f73938506136e8c1977eb7bf130eb4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     static DetailAST getFirstToken(DetailAST aAST)", "signatureAfterChange": "     static DetailAST getFirstToken(DetailAST ast)", "diff": ["-    static DetailAST getFirstToken(DetailAST aAST)", "+    static DetailAST getFirstToken(DetailAST ast)", "-        DetailAST first = aAST;", "-        DetailAST child = aAST.getFirstChild();", "+        DetailAST first = ast;", "+        DetailAST child = ast.getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2602682911d96d7b430c05531f153ad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     private boolean isFunction(DetailAST aAST)", "signatureAfterChange": "     private boolean isFunction(DetailAST ast)", "diff": ["-    private boolean isFunction(DetailAST aAST)", "+    private boolean isFunction(DetailAST ast)", "-        if (aAST.getType() == TokenTypes.METHOD_DEF) {", "-            final DetailAST typeAST = aAST.findFirstToken(TokenTypes.TYPE);", "+        if (ast.getType() == TokenTypes.METHOD_DEF) {", "+            final DetailAST typeAST = ast.findFirstToken(TokenTypes.TYPE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5d48170235475253b6974d8f270f2b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/UnnecessaryParenthesesCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean isSurrounded(DetailAST aAST)", "signatureAfterChange": "     private boolean isSurrounded(DetailAST ast)", "diff": ["-    private boolean isSurrounded(DetailAST aAST)", "+    private boolean isSurrounded(DetailAST ast)", "-        final DetailAST prev = aAST.getPreviousSibling();", "-        final DetailAST next = aAST.getNextSibling();", "+        final DetailAST prev = ast.getPreviousSibling();", "+        final DetailAST next = ast.getNextSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa5192b846433a437b797656b687db47", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AvoidInlineConditionalsCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        log(aAST.getLineNo(), aAST.getColumnNo(), \"inline.conditional.avoid\");", "+        log(ast.getLineNo(), ast.getColumnNo(), \"inline.conditional.avoid\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd09ad0825e9eac17a7154a9e165e971", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean isInWhileIdiom(DetailAST aAST)", "signatureAfterChange": "     private boolean isInWhileIdiom(DetailAST ast)", "diff": ["-    private boolean isInWhileIdiom(DetailAST aAST)", "+    private boolean isInWhileIdiom(DetailAST ast)", "-        if (!isComparison(aAST.getParent())) {", "+        if (!isComparison(ast.getParent())) {", "-                aAST.getParent(), ALLOWED_ASSIGMENT_IN_COMPARISON_CONTEXT);", "+                ast.getParent(), ALLOWED_ASSIGMENT_IN_COMPARISON_CONTEXT);"]}]}