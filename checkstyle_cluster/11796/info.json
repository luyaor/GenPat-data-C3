{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "26f7703e399e1f45223c8c8fcb3cc8ff", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33379be750df37d2569143349502d9be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "bd503e1576ded224169c1f15b9ca6cb8d08f9cb2", "commitAfterChange": "f2b01a44a216e88957eb6cb22e4b0e39429a6c84", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected AuditListener[] getListeners()         throws ClassNotFoundException, InstantiationException,         IllegalAccessException, IOException", "signatureAfterChange": "     protected AuditListener[] getListeners()         throws ClassNotFoundException, InstantiationException,         IllegalAccessException, IOException", "diff": ["-        final int listenerCount = Math.max(1, mFormatters.size());", "+        final int formatterCount = Math.max(1, mFormatters.size());", "+        final int listenerCount = mCustomListeners.size();", "-        final AuditListener[] listeners = new AuditListener[listenerCount];", "+        final AuditListener[] listeners =", "+            new AuditListener[formatterCount + listenerCount];", "+        // formatters", "-            return listeners;", "-", "-        for (int i = 0; i < listeners.length; i++) {", "-            final Formatter f = (Formatter) mFormatters.get(i);", "-            listeners[i] = f.createListener(this);", "+        else {", "+            for (int i = 0; i < formatterCount; i++) {", "+                final Formatter f = (Formatter) mFormatters.get(i);", "+                listeners[i] = f.createListener(this);", "+            }", "+        }", "+        //custom listeners", "+        for (int i = 0; i < listenerCount; i++) {", "+            final Listener listener = (Listener) mCustomListeners.get(i);", "+            listeners[formatterCount + i] = createCustomListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62a75a8cad0c6c0f5a7a9007f97f53f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/MethodLengthCheck.java", "commitBeforeChange": "ee8467d36723b5b3562b4f101e84950a4320ecf1", "commitAfterChange": "8a12b000f238052a19f41c2d00affdf5cbb69a8e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            final int length =", "+            int length =", "+", "+            if (!mCountEmpty) {", "+                final FileContents contents = getFileContents();", "+                final int lastLine = closingBrace.getLineNo();", "+                for (int i = openingBrace.getLineNo() - 1; i < lastLine; i++) {", "+                    if (contents.lineIsBlank(i) || contents.lineIsComment(i)) {", "+                        length--;", "+                    }", "+                }", "+            }"]}]}