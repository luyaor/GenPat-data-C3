{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4a711adb98b9b89cb641c16fc867eac", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a00035fb209e8fc641d57012214543e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "a0d00ea8940acd30064715db04d7a19a99d4cca9", "commitAfterChange": "f52306ff7799ea2b2e4d99fba7040a11b186d68a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private static void collectVariableDeclarations(DetailAST ast, LexicalFrame frame)", "signatureAfterChange": "     private static void collectVariableDeclarations(DetailAST ast, LexicalFrame frame)", "diff": ["-        final String name =", "-                ast.findFirstToken(TokenTypes.IDENT).getText();", "+        final DetailAST ident =", "+                ast.findFirstToken(TokenTypes.IDENT);", "-                ((ClassFrame) frame).addStaticMember(name);", "+                ((ClassFrame) frame).addStaticMember(ident);", "-                ((ClassFrame) frame).addInstanceMember(name);", "+                ((ClassFrame) frame).addInstanceMember(ident);", "-            frame.addName(name);", "+            frame.addIdent(ident);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c4ffc7ea691f18855d488cb3516e5e6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/doclets/TokenTypesDoclet.java", "commitBeforeChange": "3fe3fc67cb39111116eab03f9c91c5dfb1cdbd4f", "commitAfterChange": "b6d9344d1c152f225a22ce9ce09341b3cc9488af", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static boolean start(RootDoc root)             throws FileNotFoundException, UnsupportedEncodingException", "signatureAfterChange": "     public static boolean start(RootDoc root)             throws FileNotFoundException", "diff": ["-            throws FileNotFoundException, UnsupportedEncodingException {", "+            throws FileNotFoundException {", "-        PrintStream ps = null;", "+        final Writer osw = new OutputStreamWriter(fos, StandardCharsets.UTF_8);", "+        final PrintWriter pw = new PrintWriter(osw, false);", "+", "-            ps = new PrintStream(fos, false, \"UTF-8\");", "-                    ps.println(field.name() + \"=\"", "+                    pw.println(field.name() + \"=\"", "-            if (ps != null) {", "-                ps.close();", "-            }", "+            pw.close();"]}]}