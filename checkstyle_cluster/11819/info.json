{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3da1022a56be36fcb2d4472ba0924cc1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13c3336411aac7c1de24a2e1993a3426", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "34770c3eaa9ad06297c13fd43a55739c02c7d67d", "commitAfterChange": "da940af3627944ad412904c15187627151e834e5", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "      public void testSemantic2()         throws Exception", "signatureAfterChange": "      public void testSemantic2()         throws Exception", "diff": ["+        mConfig.setIgnoreImports(true);", "+        mConfig.setIllegalInstantiations(\"\");", "-            filepath + \":15:21: Avoid instantiation of java.lang.Boolean\",", "-            filepath + \":20:21: Avoid instantiation of java.lang.Boolean\",", "-            filepath + \":26:16: Avoid instantiation of java.lang.Boolean\",", "-            filepath + \":34:65: Empty catch block.\",", "-            filepath + \":54:52: Empty catch block.\",", "-            filepath + \":55:45: Empty catch block.\",", "+            filepath + \":51:65: Empty catch block.\",", "+            filepath + \":71:52: Empty catch block.\",", "+            filepath + \":72:45: Empty catch block.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ae8155fa58968b705d93e3b5ac51eed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "0957b67c1d234c1fb48acc67abff802e8e12874f", "commitAfterChange": "637bf620e5b62ceb04dfbbe0a2b83b7c012b7941", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      public void testSimple()         throws Exception", "signatureAfterChange": "      public void testSimple()         throws Exception", "diff": ["+        mConfig.setMaxMethodLength(19);", "+        mConfig.setMaxConstructorLength(9);", "-            filepath + \":69: parameter 'badFormat3' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.\"", "+            filepath + \":69: parameter 'badFormat3' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.\",", "+            filepath + \":77: method length is 20 lines (max allowed is 19).\",", "+            filepath + \":100: constructor length is 10 lines (max allowed is 9).\","]}]}