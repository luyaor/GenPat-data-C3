{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "301434c96ef8902347108c1a9f5e3427", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20271d901bb1cd258732fbfcae00c9fd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "69976b5365b7c33a602dd814337e2db1136288fc", "commitAfterChange": "ac8eadea0b1fb183d56cd809a34a7b9047b47d47", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 48, "signatureBeforeChange": "      @Test     public void testCaseLevel() throws Exception", "signatureAfterChange": "      @Test     public void testCaseLevel() throws Exception", "diff": ["-        checkConfig.addAttribute(\"caseIndent\", Integer.valueOf(0).toString());", "+", "+        checkConfig.addAttribute(\"arrayInitIndent\", \"4\");", "+        checkConfig.addAttribute(\"basicOffset\", \"4\");", "+        checkConfig.addAttribute(\"braceAdjustment\", \"0\");", "+        checkConfig.addAttribute(\"caseIndent\", \"0\");", "+        checkConfig.addAttribute(\"forceStrictCondition\", \"false\");", "+        checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\");", "+        checkConfig.addAttribute(\"tabWidth\", \"4\");", "+        checkConfig.addAttribute(\"throwsIndent\", \"4\");", "-            \"23: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 10, 8),", "+            \"27: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 10, 8),", "-        verify(checkConfig, getPath(\"indentation/InputCaseLevel.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"indentation/InputCaseLevel.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7b5965d6469bf03b022de4e9ef565d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "69976b5365b7c33a602dd814337e2db1136288fc", "commitAfterChange": "ac8eadea0b1fb183d56cd809a34a7b9047b47d47", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 49, "signatureBeforeChange": "      @Test     public void testBraceAdjustment() throws Exception", "signatureAfterChange": "      @Test     public void testBraceAdjustment() throws Exception", "diff": ["-        checkConfig.addAttribute(\"braceAdjustment\", Integer.valueOf(2).toString());", "+", "+        checkConfig.addAttribute(\"arrayInitIndent\", \"4\");", "+        checkConfig.addAttribute(\"basicOffset\", \"4\");", "+        checkConfig.addAttribute(\"braceAdjustment\", \"2\");", "+        checkConfig.addAttribute(\"caseIndent\", \"4\");", "+        checkConfig.addAttribute(\"forceStrictCondition\", \"false\");", "+        checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\");", "+        checkConfig.addAttribute(\"tabWidth\", \"4\");", "+        checkConfig.addAttribute(\"throwsIndent\", \"4\");", "-            \"24: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 8, 10),", "+            \"28: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 8, 10),", "-        verify(checkConfig, getPath(\"indentation/InputBraceAdjustment.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"indentation/InputBraceAdjustment.java\"), expected);"]}]}