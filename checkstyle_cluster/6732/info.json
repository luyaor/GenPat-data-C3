{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a59bc36141d0091ed4ba2097ab34a683", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd1df42ec39dd2552ecb4c0bfd5741c1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "987da3a4c5fac3476a4461892c919c0f6d9248bd", "commitAfterChange": "08d6efe49d2960d9bd61bfb9cca65910f0c19b58", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void configure(Configuration aConfig)             throws CheckstyleException", "signatureAfterChange": "     protected void setupChild(Configuration aChildConf)             throws CheckstyleException", "diff": ["-    public void configure(Configuration aConfig)", "-        super.configure(aConfig);", "-", "-        final Configuration[] fileSetChecks = aConfig.getChildren();", "-        for (int i = 0; i < fileSetChecks.length; i++) {", "-            final Configuration fscConf = fileSetChecks[i];", "-            final String name = fscConf.getName();", "-            try {", "-                final FileSetCheck fsc =", "+     */", "+    protected void setupChild(Configuration aChildConf)", "+            throws CheckstyleException", "+    {", "+        final String name = aChildConf.getName();", "+        try {", "+            final FileSetCheck fsc =", "-                        getPackageNames(),", "-                        getClass().getClassLoader(),", "-                        name);", "-                fsc.setPackageNames(getPackageNames());", "-                fsc.contextualize(context);", "-                fsc.configure(fscConf);", "-                addFileSetCheck(fsc);", "-            }", "-            catch (Exception ex) {", "-                // TODO i18n", "-                throw new CheckstyleException(", "-                        \"cannot initialize filesetcheck with name \"", "-                        + name + \" - \" + ex.getMessage());", "-            }", "+                            getPackageNames(),", "+                            getClass().getClassLoader(),", "+                            name);", "+            fsc.setPackageNames(getPackageNames());", "+            fsc.contextualize(mChildContext);", "+            fsc.configure(aChildConf);", "+            addFileSetCheck(fsc);", "+        }", "+        catch (Exception ex) {", "+            // TODO i18n", "+            throw new CheckstyleException(", "+                    \"cannot initialize filesetcheck with name \"", "+                    + name + \" - \" + ex.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1576a0d054b52a3a05dd30cd9a2adb9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "987da3a4c5fac3476a4461892c919c0f6d9248bd", "commitAfterChange": "08d6efe49d2960d9bd61bfb9cca65910f0c19b58", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void configure(Configuration aConfiguration)             throws CheckstyleException", "signatureAfterChange": "     public void setupChild(Configuration aChildConf)             throws CheckstyleException", "diff": ["-    public void configure(Configuration aConfiguration)", "-            throws CheckstyleException", "-        super.configure(aConfiguration);", "-        mConfig = aConfiguration;", "-", "+     */", "+    public void setupChild(Configuration aChildConf)", "+            throws CheckstyleException", "+    {", "-        Configuration[] checkConfigs = aConfiguration.getChildren();", "-        for (int i = 0; i < checkConfigs.length; i++) {", "-            final Configuration config = checkConfigs[i];", "-            // IMPORTANT! Need to use the same class loader that created this", "-            // class. Otherwise can get ClassCastException problems.", "-            final String name = config.getName();", "-            final String[] packageNames = getPackageNames();", "-            final Check check =", "-                    (Check) PackageObjectFactory.makeObject(", "+", "+        // IMPORTANT! Need to use the same class loader that created this", "+        // class. Otherwise can get ClassCastException problems.", "+        final String name = aChildConf.getName();", "+        final String[] packageNames = getPackageNames();", "+        final Check check =", "+                (Check) PackageObjectFactory.makeObject(", "-            check.contextualize(checkContext);", "-            check.configure(config);", "+        check.contextualize(mChildContext);", "+        check.configure(aChildConf);", "-            registerCheck(check);", "-        }", "+        registerCheck(check);"]}]}