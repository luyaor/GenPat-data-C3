{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d42107860961f010e174f3c8e16164b5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f1bb325e3aa92ee027291dfe82e6f82", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "commitAfterChange": "4c1148db9982918e65f8d1156e8fb9c07b206fc9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public boolean equals(Object object)", "signatureAfterChange": "      @Override     public boolean equals(Object object)", "diff": ["-        final LocalizedMessage that = (LocalizedMessage) object;", "-        return Objects.equals(lineNo, that.lineNo)", "-                && Objects.equals(colNo, that.colNo)", "-                && Objects.equals(severityLevel, that.severityLevel)", "-                && Objects.equals(moduleId, that.moduleId)", "-                && Objects.equals(key, that.key)", "-                && Objects.equals(bundle, that.bundle)", "-                && Objects.equals(sourceClass, that.sourceClass)", "-                && Objects.equals(customMessage, that.customMessage)", "-                && Arrays.equals(args, that.args);", "+        final LocalizedMessage localizedMessage = (LocalizedMessage) object;", "+        return Objects.equals(lineNo, localizedMessage.lineNo)", "+                && Objects.equals(colNo, localizedMessage.colNo)", "+                && Objects.equals(severityLevel, localizedMessage.severityLevel)", "+                && Objects.equals(moduleId, localizedMessage.moduleId)", "+                && Objects.equals(key, localizedMessage.key)", "+                && Objects.equals(bundle, localizedMessage.bundle)", "+                && Objects.equals(sourceClass, localizedMessage.sourceClass)", "+                && Objects.equals(customMessage, localizedMessage.customMessage)", "+                && Arrays.equals(args, localizedMessage.args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2486244d953a81d643ca4bbc3e0d8ca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "f786378e2325aaa95974d70b7df07f8dc109648e", "commitAfterChange": "291cde4801ed627f52b4fc97851d5177f6a1385d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public boolean equals(Object object)", "signatureAfterChange": "      @Override     public boolean equals(Object object)", "diff": ["-        if (!(object instanceof LocalizedMessage)) {", "+        if (object == null || getClass() != object.getClass()) {", "-", "-        final LocalizedMessage localizedMessage = (LocalizedMessage) object;", "-", "-        if (colNo != localizedMessage.colNo) {", "-            return false;", "-        }", "-        if (lineNo != localizedMessage.lineNo) {", "-            return false;", "-        }", "-        if (!key.equals(localizedMessage.key)) {", "-            return false;", "-        }", "-", "-        if (!Arrays.equals(args, localizedMessage.args)) {", "-            return false;", "-        }", "-        // ignoring bundle for perf reasons.", "-", "-        // we currently never load the same error from different bundles.", "-", "-        return true;", "+        final LocalizedMessage that = (LocalizedMessage) object;", "+        return Objects.equals(lineNo, that.lineNo)", "+                && Objects.equals(colNo, that.colNo)", "+                && Objects.equals(severityLevel, that.severityLevel)", "+                && Objects.equals(moduleId, that.moduleId)", "+                && Objects.equals(key, that.key)", "+                && Objects.equals(bundle, that.bundle)", "+                && Objects.equals(sourceClass, that.sourceClass)", "+                && Objects.equals(customMessage, that.customMessage)", "+                && Arrays.equals(args, that.args);"]}]}