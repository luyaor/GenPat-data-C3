{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "662b6d57198cdf0ade91ce54530531d9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c63d73c3ace00b364df048cb6a394116", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "113ea8405c8b753540ee3423d7e37e383f269155", "commitAfterChange": "7f7db38a097a95c264307123924779380fb40077", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected final void findSubtreeLines(LineSet aLines, DetailAST aTree,         boolean aAllowNesting)", "signatureAfterChange": "     protected final void findSubtreeLines(LineSet aLines, DetailAST aTree,         boolean aAllowNesting)", "diff": ["-//        if (allowNesting && tree.getColumnNo() != getLineStart(tree)) {", "-//            return;", "-//        }", "+//          if (aAllowNesting && aTree.getColumnNo() != getLineStart(aTree)) {", "+//              return;", "+//          }", "-        if (colNum == null) {", "+        if (colNum == null || (thisLineColumn < colNum.intValue())) {", "-        }", "-        else {", "-            if (expandedTabsColumnNo(aTree) < colNum.intValue()) {", "-                aLines.addLineAndCol(lineNum, thisLineColumn);", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6f36ce74b27f20f71f84bc7b43554dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java", "commitBeforeChange": "8aa747f8ac92b55212445789548369dd628cb260", "commitAfterChange": "54ed230519fc78c7a5ca48d9dd05cce4f4ff4b1b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private DetailNode getNearestToken(DetailNode aNode)", "signatureAfterChange": "     private DetailNode getNearestNode(DetailNode aNode)", "diff": ["-    private DetailNode getNearestToken(DetailNode aNode)", "+    private DetailNode getNearestNode(DetailNode aNode)", "-        while (tag != null) {", "-            if (tag.getType() == JavadocTokenTypes.HTML_ELEMENT", "-                && JavadocUtils.getFirstChild(tag).getType() == JavadocTokenTypes.P_TAG_OPEN)", "-            {", "-                break;", "-            }", "+        while (tag != null && (tag.getType() == JavadocTokenTypes.LEADING_ASTERISK", "+                || tag.getType() == JavadocTokenTypes.NEWLINE))", "+        {", "+    }"]}]}