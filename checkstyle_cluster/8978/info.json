{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c729b329011b836490d3552f6bb7eb8b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a98536f07fc2f2c7fda1bb0e1a2033ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "0cf971e37bc86697dbb3e38bfc18b3b55d5aa8e7", "commitAfterChange": "526c9d0cbabd8ed8f3a26c45a7a6bc0a5c158c0c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static Configuration loadConfiguration(String config,         PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(String config,         PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "diff": ["-        URI uri;", "-        try {", "-            final URL url = new URL(config);", "-            uri = url.toURI();", "-        }", "-        catch (final URISyntaxException | MalformedURLException ignored) {", "-            uri = null;", "-        }", "-", "-        if (uri == null) {", "-            final File file = new File(config);", "-            if (file.exists()) {", "-                uri = file.toURI();", "-            }", "-            else {", "-                // check to see if the file is in the classpath", "-                try {", "-                    final URL configUrl = ConfigurationLoader.class", "-                            .getResource(config);", "-                    if (configUrl == null) {", "-                        throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + config);", "-                    }", "-                    uri = configUrl.toURI();", "-                }", "-                catch (final URISyntaxException e) {", "-                    throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + config, e);", "-                }", "-            }", "-        }", "+        final URI uri = CommonUtils.getUriByFilename(config);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4e1a55a38c8742edb33a8ec5ae1f6e2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.java", "commitBeforeChange": "c75c9f00ac9e34031b88f097a9f436ec261e3b82", "commitAfterChange": "a244f057057913003dd17e952ee76a844f0fb76b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Override     public final void log(int lineNo, int colNo, String key,             Object... args)", "signatureAfterChange": "      @Override     public final void log(int lineNo, int colNo, String key,             Object... args)", "diff": ["-        getMessageCollector().add(", "-            new LocalizedMessage(lineNo,", "-                                 colNo,", "-                                 getMessageBundle(),", "-                                 key,", "-                                 args,", "-                                 getSeverityLevel(),", "-                                 getId(),", "-                                 getClass(),", "-                                 getCustomMessages().get(key)));", "+        messageCollector.add(", "+                new LocalizedMessage(lineNo,", "+                        colNo,", "+                        getMessageBundle(),", "+                        key,", "+                        args,", "+                        getSeverityLevel(),", "+                        getId(),", "+                        getClass(),", "+                        getCustomMessages().get(key)));"]}]}