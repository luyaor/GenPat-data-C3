{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d64b92dfda52a02eaf4e029cfef2e989", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57932931d08c1103e33d3edcb2bbde84", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java", "commitBeforeChange": "12ee114154db31636306c50bbefe82f47d79179e", "commitAfterChange": "4a1fc903352ce5a849ab05c556a6fe3ad6b01226", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "    public void testScopePackage()       throws Exception", "signatureAfterChange": "      public void testScopePackage()         throws Exception", "diff": ["-  public void testScopePackage()", "-      throws Exception", "-  {", "-      final DefaultConfiguration checkConfig =", "-          createCheckConfig(JavadocStyleCheck.class);", "-     checkConfig.addAttribute(\"checkFirstSentence\", \"true\");", "-     checkConfig.addAttribute(\"checkHtml\", \"true\");", "-     checkConfig.addAttribute(\"scope\", \"package\");", "-    final String[] expected =", "-       {", "-          \"74: First sentence should end with a period.\",", "-          \"75:23: Unclosed HTML tag found: <b>should fail\",", "-          \"81: First sentence should end with a period.\",", "-          \"82:31: Unclosed HTML tag found: <b>should fail\",", "-          \"88: First sentence should end with a period.\",", "-          \"89:31: Extra HTML tag found: </code>\",", "-          \"90: Incomplete HTML tag found:     * should fail <\",", "-       };", "+    public void testScopePackage()", "+        throws Exception", "+    {", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(JavadocStyleCheck.class);", "+        checkConfig.addAttribute(\"checkFirstSentence\", \"true\");", "+        checkConfig.addAttribute(\"checkHtml\", \"true\");", "+        checkConfig.addAttribute(\"checkEmptyJavadoc\", \"true\");", "+        checkConfig.addAttribute(\"scope\", \"package\");", "+        final String[] expected =", "+        {", "+            \"74: First sentence should end with a period.\",", "+            \"75:23: Unclosed HTML tag found: <b>should fail\",", "+            \"81: First sentence should end with a period.\",", "+            \"82:31: Unclosed HTML tag found: <b>should fail\",", "+            \"88: First sentence should end with a period.\",", "+            \"89:31: Extra HTML tag found: </code>\",", "+            \"90: Incomplete HTML tag found:     * should fail <\",", "+            \"205: Javadoc has empty description section.\",", "+            \"211: Javadoc has empty description section.\",", "+            \"218: Javadoc has empty description section.\",", "+        };", "-      verify(checkConfig, getPath(\"InputJavadocStyleCheck.java\"), expected);", "-  }", "+        verify(checkConfig, getPath(\"InputJavadocStyleCheck.java\"), expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "720f5847244c90009023a484f8314715", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java", "commitBeforeChange": "12ee114154db31636306c50bbefe82f47d79179e", "commitAfterChange": "4a1fc903352ce5a849ab05c556a6fe3ad6b01226", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    public void testScopeProtected()       throws Exception", "signatureAfterChange": "      public void testScopeProtected()         throws Exception", "diff": ["-  public void testScopeProtected()", "-      throws Exception", "-  {", "-      final DefaultConfiguration checkConfig =", "-          createCheckConfig(JavadocStyleCheck.class);", "-     checkConfig.addAttribute(\"checkFirstSentence\", \"true\");", "-     checkConfig.addAttribute(\"checkHtml\", \"true\");", "-     checkConfig.addAttribute(\"scope\", \"protected\");", "-    final String[] expected =", "-       {", "-          \"74: First sentence should end with a period.\",", "-          \"75:23: Unclosed HTML tag found: <b>should fail\",", "-          \"88: First sentence should end with a period.\",", "-          \"89:31: Extra HTML tag found: </code>\",", "-          \"90: Incomplete HTML tag found:     * should fail <\",", "-       };", "+    public void testScopeProtected()", "+        throws Exception", "+    {", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(JavadocStyleCheck.class);", "+        checkConfig.addAttribute(\"checkFirstSentence\", \"true\");", "+        checkConfig.addAttribute(\"checkHtml\", \"true\");", "+        checkConfig.addAttribute(\"checkEmptyJavadoc\", \"true\");", "+        checkConfig.addAttribute(\"scope\", \"protected\");", "+        final String[] expected =", "+        {", "+            \"74: First sentence should end with a period.\",", "+            \"75:23: Unclosed HTML tag found: <b>should fail\",", "+            \"88: First sentence should end with a period.\",", "+            \"89:31: Extra HTML tag found: </code>\",", "+            \"90: Incomplete HTML tag found:     * should fail <\",", "+            \"205: Javadoc has empty description section.\",", "+            \"211: Javadoc has empty description section.\",", "+        };", "-      verify(checkConfig, getPath(\"InputJavadocStyleCheck.java\"), expected);", "-  }", "+        verify(checkConfig, getPath(\"InputJavadocStyleCheck.java\"), expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff759c32136d93223a27ace303350754", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheckTest.java", "commitBeforeChange": "4795a2b48559bb4609ae0ed8d55679fdb59b7ef3", "commitAfterChange": "253622ab83a78434d28d050df40cdedcec303713", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testIt() throws Exception", "signatureAfterChange": "     public void testIt() throws Exception", "diff": ["+        checkConfig.addAttribute(\"ignoreStringsRegexp\", \"\");", "+", "+        final String[] expected = {", "+            \"5:16: The String \\\"StringContents\\\" appears 3 times in the file.\",", "+            \"8:17: The String \\\"\\\" appears 4 times in the file.\",", "+            \"10:23: The String \\\", \\\" appears 3 times in the file.\",", "+            };", "+", "+        verify(checkConfig,", "+               getPath(\"coding\" + File.separator + \"InputMultipleStringLiterals.java\"),", "+               expected);", "+    }"]}]}