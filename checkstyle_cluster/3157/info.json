{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5868fd1fa2ffa3cfbe6ce88856571dcb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc5e287339f2fcf37c422034f8eb6337", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheckTest.java", "commitBeforeChange": "5f68bb50fd191fec409f5edb90755a18fce3e0ac", "commitAfterChange": "b436b3cd9860529718b95c36dafe565fe68f6293", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testSigleLineIfBlock() throws Exception", "signatureAfterChange": "      @Test     public void testSigleLineLambda() throws Exception", "diff": ["-    public void testSigleLineIfBlock() throws Exception", "-        checkConfig.addAttribute(\"allowSingleLineIf\", \"true\");", "-        verify(checkConfig, getPath(\"InputBracesSingleLineIfBlock.java\"), expected);", "+", "+    @Test", "+    public void testSigleLineLambda() throws Exception", "+    {", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(NeedBracesCheck.class);", "+        checkConfig.addAttribute(\"tokens\", \"LAMBDA\");", "+        checkConfig.addAttribute(\"allowSingleLineStatement\", \"true\");", "+        final String[] expected = {", "+        };", "+        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "+                + \"tools/checkstyle/blocks/InputSingleLineLambda.java\").getCanonicalPath(),", "+                expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f91321f2632202bb49c066417ecb4b95", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheckTest.java", "commitBeforeChange": "17ebdc5c3740d37f29b8dc09c4ce4a42d2982b1e", "commitAfterChange": "4297ca50a95bd01c236ee1f4aeb13488298b104f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void test() throws Exception", "signatureAfterChange": "      @Test     public void testFormat() throws Exception", "diff": ["-    public void test() throws Exception", "-            \"6:9: The field '_errorCode' must be declared final.\",", "-            \"23:9: The field '_errorCode' must be declared final.\",", "+", "+    @Test", "+    public void testFormat() throws Exception", "+    {", "+        DefaultConfiguration checkConfig = createCheckConfig(MutableExceptionCheck.class);", "+        checkConfig.addAttribute(\"format\", \"^.*Failure$\");", "+        checkConfig.addAttribute(\"extendedClassNameFormat\", \"^.*ThreadDeath$\");", "+        String[] expected = {", "+            \"34:13: The field 'errorCode' must be declared final.\","]}]}