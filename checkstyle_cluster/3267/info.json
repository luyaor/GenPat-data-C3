{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a74ba944549711682ad4c9f2e8335a8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "002f3e22f2d5fbcd49584d3ce4c6f204", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForIteratorPadCheck.java", "commitBeforeChange": "eeb20e6c8cc86d2d283c254ddcddf89f46aa5190", "commitAfterChange": "d56a2a366c6f9e3e8639d492d548ae562b75dc81", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public int[] getAcceptableTokens()", "signatureAfterChange": "      @Override     public int[] getAcceptableTokens()", "diff": ["-        return new int[] {TokenTypes.FOR_ITERATOR,", "-        };", "+        return new int[] {TokenTypes.FOR_ITERATOR};", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "029f1796be3f6326a2265de2a0df2ff9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/sizes/OuterTypeNumberCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "     @Test     public void testDefault() throws Exception", "diff": ["-            \"6:34: Outer types defined is 3 (max allowed is 1).\"", "+            \"6:34: Outer types defined is 3 (max allowed is 1).\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0333b4c6174ee1b1d8629c68409c13cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testStrictJavadoc() throws Exception", "signatureAfterChange": "      @Test     public void testStrictJavadoc() throws Exception", "diff": ["-            \"94:32: Expected @param tag for 'aA'.\" };", "+            \"94:32: Expected @param tag for 'aA'.\",", "+        };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "034f57a6bc23b88d8a277ea530919c74", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/DefaultComesLastCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIt() throws Exception", "signatureAfterChange": "     @Test     public void testIt() throws Exception", "diff": ["-            \"22:9: Default should be last label in the switch.\"", "+            \"22:9: Default should be last label in the switch.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0803ea19a0ad2891030d28073aa4c9fb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testIgnoreCommentsInlineEnd()             throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCommentsInlineEnd() throws Exception", "diff": ["-    public void testIgnoreCommentsInlineEnd()", "-            throws Exception", "+    public void testIgnoreCommentsInlineEnd() throws Exception", "-            \"20: Line matches the illegal pattern '\" + illegal + \"'.\"", "+            \"20: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "091d548925fa016648bd5c8c2818e0a0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpMultilineCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testIgnoreCaseTrue()             throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCaseTrue() throws Exception", "diff": ["-    public void testIgnoreCaseTrue()", "-            throws Exception", "+    public void testIgnoreCaseTrue() throws Exception", "-            \"69: Line matches the illegal pattern '\" + illegal + \"'.\"", "+            \"69: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a2c1a3e8800f554dbfe4732934507a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      @Test     public void testMissing()             throws Exception", "signatureAfterChange": "      @Test     public void testMissing() throws Exception", "diff": ["-    public void testMissing()", "-            throws Exception", "+    public void testMissing() throws Exception", "-            \"0: File does not contain at least 1 matches for pattern '\"", "-                + required + \"'.\"", "+            \"0: File does not contain at least 1 matches for pattern '\" + required + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ccd7cf739fe24f2a9d85a47758bf7ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testIgnoreCommentsFalseCppStyle()             throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCommentsFalseCppStyle() throws Exception", "diff": ["-    public void testIgnoreCommentsFalseCppStyle()", "-            throws Exception", "+    public void testIgnoreCommentsFalseCppStyle() throws Exception", "-            \"2: Line matches the illegal pattern '\" + illegal + \"'.\"", "+            \"2: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ecdd39f8d3b4091425b10c948a614aa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testVerbose() throws Exception", "signatureAfterChange": "      @Test     public void testVerbose() throws Exception", "diff": ["-            \"158:3: Line contains a tab character.\"", "+            \"158:3: Line contains a tab character.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10202265f6d6017d2766004f14aabaeb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpMultilineCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testIt()             throws Exception", "signatureAfterChange": "      @Test     public void testIt() throws Exception", "diff": ["-    public void testIt()", "-            throws Exception", "+    public void testIt() throws Exception", "-            \"69: Line matches the illegal pattern '\" + illegal + \"'.\"", "+            \"69: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1215c185d07290bb8b4be6e4da0fb6b4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testInlineRegexpHeader()             throws Exception", "signatureAfterChange": "      @Test     public void testInlineRegexpHeader() throws Exception", "diff": ["-    public void testInlineRegexpHeader()", "-            throws Exception", "+    public void testInlineRegexpHeader() throws Exception", "-            \"3: Line does not match expected header line of '// Created: 2002'.\"", "+            \"3: Line does not match expected header line of '// Created: 2002'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "167f16ba2a772dd803581732eaf3df08", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/naming/ConstantNameCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAccessControlTuning()         throws Exception", "signatureAfterChange": "      @Test     public void testAccessControlTuning()         throws Exception", "diff": ["-            \"142:30: Name 'BAD__NAME' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\"", "+            \"142:30: Name 'BAD__NAME' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16dd50b5254125043e6d36475b7ba762", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java", "commitBeforeChange": "2cd7daccf25f7d48c904f3170589319c64fa9504", "commitAfterChange": "40de78da0f8a89b3bd5b49a396b69ff928aeb3d8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public int[] getAcceptableTokens()", "signatureAfterChange": "     public int[] getAcceptableTokens()", "diff": ["-            TokenTypes.CTOR_DEF};", "+            TokenTypes.CTOR_DEF,", "+        };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18044dccd6190415a2892ba12db2c751", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpMultilineCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     @Ignore @Test     public void testCarriageReturn()             throws Exception", "signatureAfterChange": "     @Ignore @Test     public void testCarriageReturn() throws Exception", "diff": ["-    public void testCarriageReturn()", "-            throws Exception", "+    public void testCarriageReturn() throws Exception", "-            \"21: Line matches the illegal pattern '\" + illegal + \"'.\"", "+            \"21: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e2ef3404b9d40757af2a02dbf2981b2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RedundantThrowsCheck.java", "commitBeforeChange": "2cd7daccf25f7d48c904f3170589319c64fa9504", "commitAfterChange": "40de78da0f8a89b3bd5b49a396b69ff928aeb3d8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public int[] getDefaultTokens()", "signatureAfterChange": "     public int[] getDefaultTokens()", "diff": ["-            TokenTypes.CTOR_DEF};", "+            TokenTypes.CTOR_DEF,", "+        };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f566c363e72bfd7796de9a7ac5af7d1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/RegexpCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Test     public void testIgnoreCommentsInlineMiddle()             throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCommentsInlineMiddle() throws Exception", "diff": ["-    public void testIgnoreCommentsInlineMiddle()", "-            throws Exception", "+    public void testIgnoreCommentsInlineMiddle() throws Exception", "-            \"21: Line matches the illegal pattern '\" + illegal + \"'.\"", "+            \"21: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2077d2a67b3612f0cc2fffa967f1af0c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/RegexpCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testIgnoreCommentsFalseCppStyle()             throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCommentsFalseCppStyle() throws Exception", "diff": ["-    public void testIgnoreCommentsFalseCppStyle()", "-            throws Exception", "+    public void testIgnoreCommentsFalseCppStyle() throws Exception", "-            \"2: Line matches the illegal pattern '\" + illegal + \"'.\"", "+            \"2: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23fa15a9182939be6d36cc3e6372f46e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testWildcard() throws Exception", "signatureAfterChange": "      @Test     public void testWildcard() throws Exception", "diff": ["-                \"9: Wrong order for 'javax.crypto.Cipher' import.\"", "+            \"9: Wrong order for 'javax.crypto.Cipher' import.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25601088f2f59c195dd06af5c4a5e34a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java", "commitBeforeChange": "89668d2a611b5bd56cebad4ba662ee9d688aaa40", "commitAfterChange": "0b4c120056f3b1f0a1780fe19932f4015223d0a8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public int[] getDefaultTokens()", "signatureAfterChange": "     public int[] getDefaultTokens()", "diff": ["-        return new int[] {TokenTypes.METHOD_DEF, TokenTypes.CTOR_DEF};", "+        return new int[] {", "+            TokenTypes.METHOD_DEF,", "+            TokenTypes.CTOR_DEF,", "+        };", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "268dae6e6e27a7df26eaf8ab0ef3b4b7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/UnusedImportsCheck.java", "commitBeforeChange": "2cd7daccf25f7d48c904f3170589319c64fa9504", "commitAfterChange": "40de78da0f8a89b3bd5b49a396b69ff928aeb3d8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public int[] getDefaultTokens()", "signatureAfterChange": "     public int[] getDefaultTokens()", "diff": ["-        return new int[] {TokenTypes.IMPORT,", "-                          TokenTypes.CLASS_DEF,", "-                          TokenTypes.INTERFACE_DEF,", "-                          TokenTypes.IDENT};", "+        return new int[] {", "+            TokenTypes.IMPORT,", "+            TokenTypes.CLASS_DEF,", "+            TokenTypes.INTERFACE_DEF,", "+            TokenTypes.IDENT,", "+        };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fd908a25c746a8ff1987c3cfb06ad00", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "32ef3116363e00ddb75238c0f0206c95735b3d16", "commitAfterChange": "94d7b67c30f2119815f106b822089adacd2fd4d1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public int[] getRequiredTokens()", "signatureAfterChange": "     public int[] getRequiredTokens()", "diff": ["-            TokenTypes.CLASS_DEF, TokenTypes.ENUM_DEF};", "+            TokenTypes.CLASS_DEF, TokenTypes.ENUM_DEF, };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "341322fc2e377fa15cc195322f2e8ae0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testRegexpHeader() throws Exception", "signatureAfterChange": "      @Test     public void testRegexpHeader() throws Exception", "diff": ["-            \"3: Line does not match expected header line of '// Created: 2002'.\"", "+            \"3: Line does not match expected header line of '// Created: 2002'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "349dd6b2ca8d630728efd3a62371406e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault()         throws Exception", "signatureAfterChange": "      @Test     public void testDefault()         throws Exception", "diff": ["-            \"1:48: Name 'inputHeader' must match pattern '^[A-Z][a-zA-Z0-9]*$'.\"", "+            \"1:48: Name 'inputHeader' must match pattern '^[A-Z][a-zA-Z0-9]*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38dddf2377405210a51032684af5bb3d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testBadFile() throws Exception", "signatureAfterChange": "      @Test     public void testBadFile() throws Exception", "diff": ["-            \"0: File not found!\"", "+            \"0: File not found!\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39e145cec3426c1d3ca5fd7c9b48c99a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testReplacePropertiesNoReplace()         throws CheckstyleException", "signatureAfterChange": "      @Test     public void testReplacePropertiesNoReplace()         throws CheckstyleException", "diff": ["-                                       \"{a}\", \"a}\", \"$a}\", \"$\", \"a$b\"};", "+                                     \"{a}\", \"a}\", \"$a}\", \"$\", \"a$b\", };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e4624eeb69e89d5a37dc665b6029d48", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testInFlow() throws Exception", "signatureAfterChange": "      @Test     public void testInFlow() throws Exception", "diff": ["-            \"16: Wrong order for 'java.io.File' import.\"", "+            \"16: Wrong order for 'java.io.File' import.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f4218b70f454b9d0c0cd2f7a7efe89f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullTest.java", "commitBeforeChange": "76b3486c0ace5fc31e500bfda8a91c16de378825", "commitAfterChange": "ca8fcd42047b2637e0027ff6aec79edd3656ba56", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testEqualsWithDefault() throws Exception", "signatureAfterChange": "     @Test     public void testEqualsWithDefault() throws Exception", "diff": ["-            \"79:27: String literal expressions should be on the left side of an equalsIgnoreCase comparison.\"", "+            \"79:27: String literal expressions should be on the left side of an equalsIgnoreCase comparison.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42061f548e8e501332fc58c1e67fe4b8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testEmptyFileFile()          throws Exception", "signatureAfterChange": "      @Test     public void testEmptyFileFile() throws Exception", "diff": ["-    public void testEmptyFileFile()", "-         throws Exception", "+    public void testEmptyFileFile() throws Exception", "-            \"0: File does not end with a newline.\"", "+            \"0: File does not end with a newline.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42e42866f34b6675199a95e4158fbc9a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/RegexpCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testMessagePropertyGood()         throws Exception", "signatureAfterChange": "      @Test     public void testMessagePropertyGood()         throws Exception", "diff": ["-            \"69: Line matches the illegal pattern '\" + message + \"'.\"", "+            \"69: Line matches the illegal pattern '\" + message + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "470e875cdf21ed2bff510c741e3d0e6b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForInitializerPadCheck.java", "commitBeforeChange": "eeb20e6c8cc86d2d283c254ddcddf89f46aa5190", "commitAfterChange": "d56a2a366c6f9e3e8639d492d548ae562b75dc81", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public int[] getAcceptableTokens()", "signatureAfterChange": "      @Override     public int[] getAcceptableTokens()", "diff": ["-        return new int[] {TokenTypes.FOR_INIT,", "-        };", "+        return new int[] {TokenTypes.FOR_INIT};", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4be75a797b81d4ed32bc3b57782624e0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/RegexpCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testIgnoreCommentsFalseCStyle()             throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCommentsFalseCStyle() throws Exception", "diff": ["-    public void testIgnoreCommentsFalseCStyle()", "-            throws Exception", "+    public void testIgnoreCommentsFalseCStyle() throws Exception", "-            \"17: Line matches the illegal pattern '\" + illegal + \"'.\"", "+            \"17: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "552ba3592faca79fdb5d617953aa878a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/RegexpCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testIgnoreCaseFalse()             throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCaseFalse() throws Exception", "diff": ["-    public void testIgnoreCaseFalse()", "-            throws Exception", "+    public void testIgnoreCaseFalse() throws Exception", "-            \"69: Line matches the illegal pattern '\" + illegalTrue + \"'.\"};", "+            \"69: Line matches the illegal pattern '\" + illegalTrue + \"'.\",", "+        };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56838813eb95f08b6f8440a443cae77a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testBottom() throws Exception", "signatureAfterChange": "      @Test     public void testBottom() throws Exception", "diff": ["-                \"15: Wrong order for 'java.io.File' import.\",", "-                \"18: Wrong order for 'java.awt.Button.ABORT' import.\",", "-                \"21: Wrong order for 'java.io.Reader' import.\"", "+            \"15: Wrong order for 'java.io.File' import.\",", "+            \"18: Wrong order for 'java.awt.Button.ABORT' import.\",", "+            \"21: Wrong order for 'java.io.Reader' import.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57367b09aaec131ffbcf578c74318ffe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/naming/MethodNameCheck.java", "commitBeforeChange": "b81ed9788d68b90f7b8eac665ea548552f078acc", "commitAfterChange": "7cb8afb266fbada9792b9e04eeb9cef3ec10a3cc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public int[] getDefaultTokens()", "signatureAfterChange": "      @Override     public int[] getDefaultTokens()", "diff": ["-        return new int[] {TokenTypes.METHOD_DEF};", "+        return new int[] {TokenTypes.METHOD_DEF, };", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f7f44adc8daf40cbb856b8a4d3b5446", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpMultilineCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testIllegalFailBelowErrorLimit()             throws Exception", "signatureAfterChange": "      @Test     public void testIllegalFailBelowErrorLimit() throws Exception", "diff": ["-    public void testIllegalFailBelowErrorLimit()", "-            throws Exception", "+    public void testIllegalFailBelowErrorLimit() throws Exception", "-            \"9: Line matches the illegal pattern '\" + illegal + \"'.\"", "+            \"9: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6707ce8bd24ff2996ba76ed286fa5eec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "2cd7daccf25f7d48c904f3170589319c64fa9504", "commitAfterChange": "40de78da0f8a89b3bd5b49a396b69ff928aeb3d8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     private void register(int aType, Class aHandlerClass)", "signatureAfterChange": "     private void register(int aType, Class aHandlerClass)", "diff": ["-                DetailAST.class,            // current AST", "-                ExpressionHandler.class     // parent", "+                DetailAST.class,             // current AST", "+                ExpressionHandler.class,     // parent"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69ca0db97f3fd06ca9c48abd94813e1c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testHtml() throws Exception", "signatureAfterChange": "      @Test     public void testHtml() throws Exception", "diff": ["-            \"335:33: Extra HTML tag found: </string>\"", "+            \"335:33: Extra HTML tag found: </string>\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6be5e603003b2b9f806ec2f33e47d43a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java", "commitBeforeChange": "2cd7daccf25f7d48c904f3170589319c64fa9504", "commitAfterChange": "40de78da0f8a89b3bd5b49a396b69ff928aeb3d8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public int[] getRequiredTokens()", "signatureAfterChange": "     public int[] getRequiredTokens()", "diff": ["-            TokenTypes.IMPORT};", "+            TokenTypes.IMPORT,", "+        };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "702f73c9fd15c8cdd9edbe020446cedf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RightCurlyCheck.java", "commitBeforeChange": "2cd7daccf25f7d48c904f3170589319c64fa9504", "commitAfterChange": "40de78da0f8a89b3bd5b49a396b69ff928aeb3d8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int[] getDefaultTokens()", "signatureAfterChange": "     public int[] getDefaultTokens()", "diff": ["-        return new int[] {TokenTypes.LITERAL_TRY,", "-                          TokenTypes.LITERAL_CATCH,", "-                          TokenTypes.LITERAL_ELSE};", "+        return new int[] {", "+            TokenTypes.LITERAL_TRY,", "+            TokenTypes.LITERAL_CATCH,", "+            TokenTypes.LITERAL_ELSE,", "+        };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7339779f01d19a91b2e3fb3d01ecd49d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ReturnCountCheck.java", "commitBeforeChange": "9f88ca32866cb35ef15c6a809873e63acd7d0525", "commitAfterChange": "5fecdf11bc60480f9b1dedfcfd49478af2cfa94f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public int[] getRequiredTokens()", "signatureAfterChange": "      @Override     public int[] getRequiredTokens()", "diff": ["-        return new int[]{", "-            TokenTypes.LITERAL_RETURN,", "-        };", "+        return new int[] {TokenTypes.LITERAL_RETURN};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75213c2257ced2041cd00abf3e2149fd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testUnder() throws Exception", "signatureAfterChange": "      @Test     public void testUnder() throws Exception", "diff": ["-            \"14: Wrong order for 'java.io.File' import.\"", "+            \"14: Wrong order for 'java.io.File' import.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "767cb43fa57327935c214c75584a6601", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IllegalInstantiationCheck.java", "commitBeforeChange": "f3153d339870e619464499c226fc571b9386f9aa", "commitAfterChange": "b106dad438f25db9e82dfd4009bd385f933d829a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public int[] getDefaultTokens()", "signatureAfterChange": "     public int[] getDefaultTokens()", "diff": ["-            TokenTypes.PACKAGE_DEF", "+            TokenTypes.PACKAGE_DEF,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "775bd583d4dfdd6e1b6d7440895b8b6d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/RegexpCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testIllegalFailBelowErrorLimit()             throws Exception", "signatureAfterChange": "      @Test     public void testIllegalFailBelowErrorLimit() throws Exception", "diff": ["-    public void testIllegalFailBelowErrorLimit()", "-            throws Exception", "+    public void testIllegalFailBelowErrorLimit() throws Exception", "-            \"9: Line matches the illegal pattern '\" + illegal + \"'.\"", "+            \"9: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78367199323ee1bd891eb96ef4d1ed71", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/WhitespaceAroundCheck.java", "commitBeforeChange": "2cd7daccf25f7d48c904f3170589319c64fa9504", "commitAfterChange": "40de78da0f8a89b3bd5b49a396b69ff928aeb3d8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public int[] getDefaultTokens()", "signatureAfterChange": "     public int[] getDefaultTokens()", "diff": ["-            TokenTypes.LITERAL_ASSERT", "+            TokenTypes.LITERAL_ASSERT,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "814700991baf4f4e238b4ef3e403383a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "          @Test     public void testDefaultWithAnnotations() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultWithAnnotations() throws Exception", "diff": ["-    ", "+", "-            \"21:5: '{' should be on the previous line.\"", "+            \"21:5: '{' should be on the previous line.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8938a533e8505afb1be0b0ae982191c0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault1() throws Exception", "signatureAfterChange": "      @Test     public void testDefault1() throws Exception", "diff": ["-            \"1:9: Package declaration does not match directory '\" + dname + \"'.\"", "+            \"1:9: Package declaration does not match directory '\" + dname + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a2941cb9242c1f6dd58207b601739bf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testIgnoreCommentsFalseCStyle()             throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCommentsFalseCStyle() throws Exception", "diff": ["-    public void testIgnoreCommentsFalseCStyle()", "-            throws Exception", "+    public void testIgnoreCommentsFalseCStyle() throws Exception", "-            \"17: Line matches the illegal pattern '\" + illegal + \"'.\"", "+            \"17: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ac7c2f870f05118b390babc30631e58", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testAbove() throws Exception", "signatureAfterChange": "      @Test     public void testAbove() throws Exception", "diff": ["-            \"14: Wrong order for 'java.io.File.createTempFile' import.\"", "+            \"14: Wrong order for 'java.io.File.createTempFile' import.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c9c41f29d04b9bcc0253b1fb457b854", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "2cd7daccf25f7d48c904f3170589319c64fa9504", "commitAfterChange": "40de78da0f8a89b3bd5b49a396b69ff928aeb3d8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public ExpressionHandler getHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "signatureAfterChange": "     public ExpressionHandler getHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "diff": ["-                        aParent", "+                        aParent,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e9d9c628bc205facfe7a48ba2eee91e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testIgnoreCommentsInlineMiddle() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCommentsInlineMiddle() throws Exception", "diff": ["-            \"21: Line matches the illegal pattern '\" + illegal + \"'.\"", "+            \"21: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fb67c483e7e38fec12f06534bf4e7ff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IllegalInstantiationCheck.java", "commitBeforeChange": "f3153d339870e619464499c226fc571b9386f9aa", "commitAfterChange": "b106dad438f25db9e82dfd4009bd385f933d829a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public int[] getRequiredTokens()", "signatureAfterChange": "     public int[] getRequiredTokens()", "diff": ["-            TokenTypes.PACKAGE_DEF", "+            TokenTypes.PACKAGE_DEF,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "928d1df9f57d0ee2ac4ead3ed310dfa1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckRegExTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testTwo() throws Exception", "signatureAfterChange": "      @Test     public void testTwo() throws Exception", "diff": ["-        final String[] expected = {\"3:1: Disallowed import - java.awt.Image.\",", "-                \"4:1: Disallowed import - javax.swing.border.*.\",", "-                \"6:1: Disallowed import - java.awt.Button.ABORT.\"};", "+        final String[] expected = {", "+            \"3:1: Disallowed import - java.awt.Image.\",", "+            \"4:1: Disallowed import - javax.swing.border.*.\",", "+            \"6:1: Disallowed import - java.awt.Button.ABORT.\",", "+        };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c8076d949daa16f5f00e1dafabc88ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testScopeProtected()         throws Exception", "signatureAfterChange": "      @Test     public void testScopeProtected()         throws Exception", "diff": ["-            \"335:33: Extra HTML tag found: </string>\"", "+            \"335:33: Extra HTML tag found: </string>\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dacbc825042e91b4712927da40c2a0f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/RegexpCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testMessagePropertyBad()         throws Exception", "signatureAfterChange": "      @Test     public void testMessagePropertyBad()         throws Exception", "diff": ["-            \"69: Line matches the illegal pattern '\" + illegal + \"'.\"", "+            \"69: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a31635a59b546971ecad6df2d4f9a47d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testIntegerOverflow() throws Exception", "signatureAfterChange": "      @Test     public void testIntegerOverflow() throws Exception", "diff": ["-    public void testIntegerOverflow() throws Exception {", "+    public void testIntegerOverflow() throws Exception", "+    {", "-            \"9:5: NPath Complexity is \" + expectedComplexity + \" (max allowed is 0).\"", "+            \"9:5: NPath Complexity is \" + expectedComplexity + \" (max allowed is 0).\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a450961fe6dd9c2218e3d2111386aed3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testScopeInnerInterfacesPublic() throws Exception", "signatureAfterChange": "      @Test     public void testScopeInnerInterfacesPublic() throws Exception", "diff": ["-            \"44:9: Missing a Javadoc comment.\" };", "+            \"44:9: Missing a Javadoc comment.\",", "+        };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a462b5f9373f9f608464fb0b7c91c0ac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "     @Test     public void testDefault() throws Exception", "diff": ["-            \"11: Wrong order for 'java.io.IOException' import.\"", "+            \"11: Wrong order for 'java.io.IOException' import.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6da8e92eece94b89df6cd8be88ded03", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/XMLLoggerTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testAddError() throws IOException", "signatureAfterChange": "      @Test     public void testAddError() throws IOException", "diff": ["-    public void testAddError() throws IOException {", "+    public void testAddError() throws IOException", "+    {", "-        final String[] expectedLines =", "-            {\"<error line=\\\"1\\\" column=\\\"1\\\" severity=\\\"error\\\" message=\\\"key\\\" source=\\\"com.puppycrawl.tools.checkstyle.XMLLoggerTest\\\"/>\"};", "+        final String[] expectedLines = {", "+            \"<error line=\\\"1\\\" column=\\\"1\\\" severity=\\\"error\\\" message=\\\"key\\\" source=\\\"com.puppycrawl.tools.checkstyle.XMLLoggerTest\\\"/>\",", "+        };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8f94e95d380b871caf95c3bea781fa5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testRegexpHeaderMulti5() throws Exception", "signatureAfterChange": "      @Test     public void testRegexpHeaderMulti5() throws Exception", "diff": ["-            \"1: Missing a header - not enough lines in file.\"", "+            \"1: Missing a header - not enough lines in file.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a904ef0e9f1e8d41baaee736bd08ed97", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testSeparated() throws Exception", "signatureAfterChange": "      @Test     public void testSeparated() throws Exception", "diff": ["-            \"14: Wrong order for 'javax.swing.WindowConstants.*' import.\"", "+            \"14: Wrong order for 'javax.swing.WindowConstants.*' import.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab32c2a271902f362022c124e5ad4cd5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TypeNameCheck.java", "commitBeforeChange": "2cd7daccf25f7d48c904f3170589319c64fa9504", "commitAfterChange": "40de78da0f8a89b3bd5b49a396b69ff928aeb3d8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int[] getDefaultTokens()", "signatureAfterChange": "     public int[] getDefaultTokens()", "diff": ["-                          TokenTypes.INTERFACE_DEF};", "+                          TokenTypes.INTERFACE_DEF, };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b06b1f85c9dc9dc0c48fa3bcb92e229d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RedundantModifierCheck.java", "commitBeforeChange": "2cd7daccf25f7d48c904f3170589319c64fa9504", "commitAfterChange": "40de78da0f8a89b3bd5b49a396b69ff928aeb3d8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public int[] getDefaultTokens()", "signatureAfterChange": "     public int[] getDefaultTokens()", "diff": ["-        return new int[] {TokenTypes.METHOD_DEF,", "-                          TokenTypes.VARIABLE_DEF};", "+        return new int[] {", "+            TokenTypes.METHOD_DEF,", "+            TokenTypes.VARIABLE_DEF,", "+        };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b16d9b8a878600764fc5b66d14457cad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java", "commitBeforeChange": "897c4164bd289ea45d5c600f11816f4379bd4421", "commitAfterChange": "9ce0ceb04ae90185f95643fb4484e525bcb0d3df", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testVersionRequired()         throws Exception", "signatureAfterChange": "      public void testVersionRequired()         throws Exception", "diff": ["-            \"13: Type Javadoc comment is missing an @version tag.\"", "+            \"13: Type Javadoc comment is missing an @version tag.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b660366f8dc70bda69940d38478d4edf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testScopePublic()         throws Exception", "signatureAfterChange": "      @Test     public void testScopePublic()         throws Exception", "diff": ["-            \"335:33: Extra HTML tag found: </string>\"", "+            \"335:33: Extra HTML tag found: </string>\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b694745625a3aa88d128abe1187f4710", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java", "commitBeforeChange": "2cd7daccf25f7d48c904f3170589319c64fa9504", "commitAfterChange": "40de78da0f8a89b3bd5b49a396b69ff928aeb3d8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public int[] getDefaultTokens()", "signatureAfterChange": "     public int[] getDefaultTokens()", "diff": ["-            TokenTypes.CTOR_DEF};", "+            TokenTypes.CTOR_DEF,", "+        };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b860c6d0cc9e8bc5ae1b4dce568561b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefaultSettings()         throws Exception", "signatureAfterChange": "     @Test     public void testDefaultSettings()         throws Exception", "diff": ["-            \"335:33: Extra HTML tag found: </string>\"", "+            \"335:33: Extra HTML tag found: </string>\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba7abfa9f7e592133536937c419cc074", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDotAllowLineBreaks() throws Exception", "signatureAfterChange": "      @Test     public void testDotAllowLineBreaks() throws Exception", "diff": ["-            \"136:12: '.' is followed by whitespace.\"", "+            \"136:12: '.' is followed by whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c072743b69df2675f1f6abe8d261a584", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testIt()             throws Exception", "signatureAfterChange": "      @Test     public void testIt() throws Exception", "diff": ["-    public void testIt()", "-            throws Exception", "+    public void testIt() throws Exception", "-            \"69: Line matches the illegal pattern '\" + illegal + \"'.\"", "+            \"69: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c394c1fe17bca7d33b7882d0264f4da0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/RegexpCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testRequiredFail()             throws Exception", "signatureAfterChange": "      @Test     public void testRequiredFail() throws Exception", "diff": ["-    public void testRequiredFail()", "-            throws Exception", "+    public void testRequiredFail() throws Exception", "-            \"0: Required pattern '\" + required + \"' missing in file.\"", "+            \"0: Required pattern '\" + required + \"' missing in file.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c512e8c74196d16690417151e6602372", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testReturnFromCatch() throws Exception", "signatureAfterChange": "      @Test     public void testReturnFromCatch() throws Exception", "diff": ["-            \"15:11: Return from catch is not allowed.\"", "+            \"15:11: Return from catch is not allowed.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8964dc758a4fcb521b3482bafb5195f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testStaticHeader()             throws Exception", "signatureAfterChange": "     @Test     public void testStaticHeader() throws Exception", "diff": ["-    public void testStaticHeader()", "-            throws Exception", "+    public void testStaticHeader() throws Exception", "-            \"1: Missing a header - not enough lines in file.\"", "+            \"1: Missing a header - not enough lines in file.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd90962e2ad854b4351725b89b693d24", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testNoNewlineAtEndOfFile()          throws Exception", "signatureAfterChange": "      @Test     public void testNoNewlineAtEndOfFile() throws Exception", "diff": ["-    public void testNoNewlineAtEndOfFile()", "-         throws Exception", "+    public void testNoNewlineAtEndOfFile() throws Exception", "-            \"0: File does not end with a newline.\"", "+            \"0: File does not end with a newline.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf1b502ad80c038df717ef095039769e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testBad() throws Exception", "signatureAfterChange": "     @Test     public void testBad() throws Exception", "diff": ["-    public void testBad() throws Exception {", "+    public void testBad() throws Exception", "+    {", "-            \"3: The name of the outer type and the file do not match.\"", "+            \"3: The name of the outer type and the file do not match.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d14f829f7fd74e2fa3e5bc0f3aefa5f4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testIgnoreCaseTrue()             throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCaseTrue() throws Exception", "diff": ["-    public void testIgnoreCaseTrue()", "-            throws Exception", "+    public void testIgnoreCaseTrue() throws Exception", "-            \"69: Line matches the illegal pattern '\" + illegal + \"'.\"", "+            \"69: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7a23c2546c50a3de1d333f07ce290f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/naming/ConstantNameCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault()         throws Exception", "signatureAfterChange": "      @Test     public void testDefault()         throws Exception", "diff": ["-            \"142:30: Name 'BAD__NAME' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\"", "+            \"142:30: Name 'BAD__NAME' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e258fff3a1b989f9806193e04050ee6a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/RedundantImportCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testWithChecker()         throws Exception", "signatureAfterChange": "     @Test     public void testWithChecker()         throws Exception", "diff": ["-            \"26:1: Duplicate import to line 25 - javax.swing.WindowConstants.*.\"", "+            \"26:1: Duplicate import to line 25 - javax.swing.WindowConstants.*.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5cc7ae950bd4ee6bb844834fb4caa8e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/RegexpCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testIllegalFailAboveErrorLimit()             throws Exception", "signatureAfterChange": "      @Test     public void testIllegalFailAboveErrorLimit() throws Exception", "diff": ["-    public void testIllegalFailAboveErrorLimit()", "-            throws Exception", "+    public void testIllegalFailAboveErrorLimit() throws Exception", "-        + \"the check is aborting, there may be more unreported errors.\";", "+            + \"the check is aborting, there may be more unreported errors.\";", "-            \"9: Line matches the illegal pattern '\" + error + illegal + \"'.\"", "+            \"9: Line matches the illegal pattern '\" + error + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e823f36b7d0863c99656b2bbd2055528", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIt() throws Exception", "signatureAfterChange": "     @Test     public void testIt() throws Exception", "diff": ["-            \"38:21: Instantiation of \" +", "-                \"com.puppycrawl.tools.checkstyle.InputModifier \" +", "-                \"should be avoided.\",", "+            \"38:21: Instantiation of \"", "+                + \"com.puppycrawl.tools.checkstyle.InputModifier \"", "+                + \"should be avoided.\",", "-            \"44:21: Instantiation of java.awt.Color should be avoided.\"", "+            \"44:21: Instantiation of java.awt.Color should be avoided.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebcb5d304e71281935ba684afc7ccd6c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testReturnFromFinally() throws Exception", "signatureAfterChange": "      @Test     public void testReturnFromFinally() throws Exception", "diff": ["-            \"15:11: Return from finally is not allowed.\"", "+            \"15:11: Return from finally is not allowed.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec218325886f8e09082255ddbd7e9c9c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     @Test     public void testRelaxedJavadoc() throws Exception", "signatureAfterChange": "     @Test     public void testRelaxedJavadoc() throws Exception", "diff": ["-            \"84:5: Missing a Javadoc comment.\" };", "+            \"84:5: Missing a Javadoc comment.\",", "+        };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec80f38794abf522c575066b1a7852c9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testScopePackage()         throws Exception", "signatureAfterChange": "      @Test     public void testScopePackage()         throws Exception", "diff": ["-            \"335:33: Extra HTML tag found: </string>\"", "+            \"335:33: Extra HTML tag found: </string>\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed4c183eaee947f09f91c5c70f5f7190", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "          @Test     public void testNLWithAnnotations() throws Exception", "signatureAfterChange": "      @Test     public void testNLWithAnnotations() throws Exception", "diff": ["-    ", "+", "-        final String[] expected = { ", "+        final String[] expected = {", "-            \"58:32: '{' should be on a new line.\"", "+            \"58:32: '{' should be on a new line.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edaa4a246b7c6d522dceacd09f8f72d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void packageInfoMissing() throws Exception", "signatureAfterChange": "      @Test     public void packageInfoMissing() throws Exception", "diff": ["-        final String[] expected =", "-        {", "-        \t\"1: Missing a Javadoc comment.\"", "+        final String[] expected = {", "+            \"1: Missing a Javadoc comment.\",", "-        String basePath = \"javadoc\" + File.separator +", "-    \t\"bothfiles\" + File.separator;", "+        String basePath = \"javadoc\" + File.separator", "+            + \"bothfiles\" + File.separator;", "-        \tgetPath(basePath + \"package-info.java\"),", "-        \texpected);", "+               getPath(basePath + \"package-info.java\"),", "+               expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef000d39b738c62aae80594ce1c45be8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testTwo() throws Exception", "signatureAfterChange": "      @Test     public void testTwo() throws Exception", "diff": ["-        final String[] expected = {\"3:1: Disallowed import - java.awt.Image.\",", "-                \"4:1: Disallowed import - javax.swing.border.*.\",", "-                \"6:1: Disallowed import - java.awt.Button.ABORT.\"};", "+        final String[] expected = {", "+            \"3:1: Disallowed import - java.awt.Image.\",", "+            \"4:1: Disallowed import - javax.swing.border.*.\",", "+            \"6:1: Disallowed import - java.awt.Button.ABORT.\",", "+        };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef15499bde76bd690b1d47594a46ad33", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testAlarm() throws Exception", "signatureAfterChange": "      @Test     public void testAlarm() throws Exception", "diff": ["-            \"1: File length is 225 lines (max allowed is 20).\"", "+            \"1: File length is 225 lines (max allowed is 20).\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef841fc6a4e4aa0aced70b7445e16779", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testIgnoreCaseTrue()             throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCaseTrue() throws Exception", "diff": ["-    public void testIgnoreCaseTrue()", "-            throws Exception", "+    public void testIgnoreCaseTrue() throws Exception", "-            \"69: Line matches the illegal pattern '\" + illegal + \"'.\"", "+            \"69: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f076f7acfebb90b2591cdcbf57ae7318", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testExcludes()         throws Exception", "signatureAfterChange": "      @Test     public void testExcludes()         throws Exception", "diff": ["-            \"7: Using the '.*' form of import should be avoided - com.puppycrawl.tools.checkstyle.imports.*.\"", "+            \"7: Using the '.*' form of import should be avoided - com.puppycrawl.tools.checkstyle.imports.*.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0919b63ce7822c02a2f05868074fca4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGroups() throws Exception", "signatureAfterChange": "      @Test     public void testGroups() throws Exception", "diff": ["-            \"14: Wrong order for 'javax.swing.WindowConstants.*' import.\"", "+            \"14: Wrong order for 'javax.swing.WindowConstants.*' import.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4aef6e0cd1e7df3974925b5cafcf0be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/naming/ConstantNameCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testInterfaceAndAnnotation()         throws Exception", "signatureAfterChange": "      @Test     public void testInterfaceAndAnnotation()         throws Exception", "diff": ["-            \"64:16: Name 'data' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\"", "+            \"64:16: Name 'data' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5889fb4571a72afd59e639969d97d98", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/sizes/MethodLengthCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIt() throws Exception", "signatureAfterChange": "     @Test     public void testIt() throws Exception", "diff": ["-            \"79:5: Method length is 20 lines (max allowed is 19).\"", "+            \"79:5: Method length is 20 lines (max allowed is 19).\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f86bf832c578c2c2d363cf75dfa5dae0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testIt()             throws Exception", "signatureAfterChange": "      @Test     public void testIt() throws Exception", "diff": ["-    public void testIt()", "-            throws Exception", "+    public void testIt() throws Exception", "-            \"69: Line matches the illegal pattern '\" + illegal + \"'.\"", "+            \"69: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8b95fb513017486147340529083dbb5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/RegexpCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testRequiredNoDuplicatesFail()             throws Exception", "signatureAfterChange": "      @Test     public void testRequiredNoDuplicatesFail() throws Exception", "diff": ["-    public void testRequiredNoDuplicatesFail()", "-            throws Exception", "+    public void testRequiredNoDuplicatesFail() throws Exception", "-            \"24: Found duplicate pattern '\" + required + \"'.\"", "+            \"24: Found duplicate pattern '\" + required + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9182c20026529a26dcf275736c5ca03", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testTop() throws Exception", "signatureAfterChange": "      @Test     public void testTop() throws Exception", "diff": ["-            \"18: Wrong order for 'java.io.File.*' import.\"", "+            \"18: Wrong order for 'java.io.File.*' import.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb733b588e550cc2c9e7ab992bf6a007", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/RegexpCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testIgnoreCaseTrue()             throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCaseTrue() throws Exception", "diff": ["-    public void testIgnoreCaseTrue()", "-            throws Exception", "+    public void testIgnoreCaseTrue() throws Exception", "-            \"69: Line matches the illegal pattern '\" + illegal + \"'.\"", "+            \"69: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffaf394107b5723f06df409bcbd1e18a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/RegexpCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      @Test     public void testIgnoreCommentsInlineEnd()             throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCommentsInlineEnd() throws Exception", "diff": ["-    public void testIgnoreCommentsInlineEnd()", "-            throws Exception", "+    public void testIgnoreCommentsInlineEnd() throws Exception", "-            \"20: Line matches the illegal pattern '\" + illegal + \"'.\"", "+            \"20: Line matches the illegal pattern '\" + illegal + \"'.\","]}]}