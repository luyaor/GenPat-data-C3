{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "50b069ab3f69389c0a1870c730672c39", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c576665f5aa9cc3e6a22028d394581f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/JavadocMethodCheckTest.java", "commitBeforeChange": "d8793fc1f6ee23d0c4d571b1fb181b005abd3b5c", "commitAfterChange": "4289f26b6a3f20df6d055b8675aefe49ed09dbad", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testNoJavadoc()         throws Exception", "signatureAfterChange": "      public void testNoJavadoc()         throws Exception", "diff": ["-        final CheckConfiguration checkConfig = new CheckConfiguration();", "-        checkConfig.setClassname(JavadocMethodCheck.class.getName());", "-        checkConfig.addProperty(\"scope\", Scope.NOTHING.getName());", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(JavadocMethodCheck.class);", "+        checkConfig.addAttribute(\"scope\", Scope.NOTHING.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87781f63e3f38568c1109d245c73d4a9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/IllegalImportCheckTest.java", "commitBeforeChange": "69735778f83c901ac367d14c301bb82b754020e0", "commitAfterChange": "d8793fc1f6ee23d0c4d571b1fb181b005abd3b5c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testWithSupplied()         throws Exception", "signatureAfterChange": "     public void testWithSupplied()         throws Exception", "diff": ["-        final CheckConfiguration checkConfig = new CheckConfiguration();", "-        checkConfig.setClassname(IllegalImportCheck.class.getName());", "-        checkConfig.addProperty(\"illegalPkgs\", \"java.io\");", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(IllegalImportCheck.class);", "+        checkConfig.addAttribute(\"illegalPkgs\", \"java.io\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98f356884c07bb7f1c195e803c5bdf8c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/HeaderCheckTest.java", "commitBeforeChange": "79a25c2edca12c2c1baa9ddf86ccf0406a3c8e2e", "commitAfterChange": "69735778f83c901ac367d14c301bb82b754020e0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testIllegalArgs()             throws Exception", "signatureAfterChange": "      public void testIllegalArgs()             throws Exception", "diff": ["-        final CheckConfiguration checkConfig = new CheckConfiguration();", "-        checkConfig.setClassname(HeaderCheck.class.getName());", "-        checkConfig.addProperty(\"headerFile\", getPath(\"nonexisting.file\"));", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(HeaderCheck.class);", "+        checkConfig.addAttribute(\"headerFile\", getPath(\"nonexisting.file\"));"]}]}