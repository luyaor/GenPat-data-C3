{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e33dc450e8d19eebc66527c16ae1aa1c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b39dcac300dca12389bf900f9c0c066", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "commitBeforeChange": "a1ad6dbd260c4293be469801021f371e60fc9ae8", "commitAfterChange": "1c42e3eeb9aeebc47b2373541c1cc8d311d8b671", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            && !text.equals(currentLine.trim())", "-            && currentLine.substring(colNo + text.length())", "-                .trim().length() == 0)", "+                && !text.equals(currentLine.trim())", "+                && StringUtils.isBlank(currentLine.substring(colNo + text.length())))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa1320cf73653ce891c81fe472e03392", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "commitBeforeChange": "42484a32cd4e1319134cec9a14b30f36f95383f6", "commitAfterChange": "d7df762a65d0b123331588b5da385ac00c40b598", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        if (CheckUtils.isOperatorTokenPartOfGenericDeclaration(aAST)) {", "-            return;", "-        }", "-        else if (wOp == OperatorWrapOption.NL", "-                && !text.equals(currentLine.trim())", "-                && (currentLine.substring(colNo + text.length())", "-                    .trim().length() == 0))", "+        if (wOp == OperatorWrapOption.NL", "+            && !text.equals(currentLine.trim())", "+            && (currentLine.substring(colNo + text.length())", "+                .trim().length() == 0))"]}]}