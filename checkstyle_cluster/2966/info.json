{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef84f315e7d3ee54c3c77d6ee7f9e823", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64cb7e93067a7afe77679a87b52bb168", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheck.java", "commitBeforeChange": "e287c5e741ce8b13d19e7f0885977792a0d0fcc9", "commitAfterChange": "f38d8abd42c3e824635e542e6031b3da1997c02e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public synchronized void process(File[] aFiles)", "signatureAfterChange": "     public synchronized void process(List<File> aFiles)", "diff": ["-    public synchronized void process(File[] aFiles)", "+    public synchronized void process(List<File> aFiles)", "-        mLineBlockChecksums = new int[mFiles.length][];", "-        mChecksumInfo = new ChecksumInfo[mFiles.length];", "+        mLineBlockChecksums = new int[mFiles.size()][];", "+        mChecksumInfo = new ChecksumInfo[mFiles.size()];", "-            LOG.debug(\"Reading \" + mFiles.length + \" input files\");", "+            LOG.debug(\"Reading \" + mFiles.size() + \" input files\");", "-        for (int i = 0; i < mFiles.length; i++) {", "-            final File file = mFiles[i];", "+        for (int i = 0; i < mFiles.size(); i++) {", "+            final File file = mFiles.get(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dba5d43eea5419c8c366f8800d198de4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderChecker.java", "commitBeforeChange": "fc8a5ae78cffc8f6d5951a72fc722c52dedc1d04", "commitAfterChange": "bf16d371dab210594755d04afc4697269ed088c0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     void checkLines(final String[] aLines)", "signatureAfterChange": "     void checkLines(final List<String> aLines)", "diff": ["-    void checkLines(final String[] aLines)", "+    void checkLines(final List<String> aLines)", "-        final int headerSize = mHeaderLines.length;", "-        final int fileSize = aLines.length;", "+        final int headerSize = mHeaderLines.size();", "+        final int fileSize = aLines.size();", "-                final String line = aLines[i];", "+                final String line = aLines.get(i);", "-                            i + 1, mHeaderLines[headerLineNo]);", "+                            i + 1, mHeaderLines.get(headerLineNo));"]}]}