{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e29d00e9af195440fa995035272eb96", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6141d68b8b516d11cb185a2ddf2b5812", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/IntRangeFilterTest.java", "commitBeforeChange": "ff6c49e6a715d8372ac77a34aa77d9eaff6db154", "commitAfterChange": "911065320fb39299f442ea08f775cfe08ba2a2ed", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDecide()", "signatureAfterChange": "     @Test     public void testDecide()", "diff": ["-        assertFalse(\"less than\", filter.accept(new Integer(-1)));", "-        assertTrue(\"in range\", filter.accept(new Integer(0)));", "-        assertTrue(\"in range\", filter.accept(new Integer(5)));", "-        assertTrue(\"in range\", filter.accept(new Integer(10)));", "-        assertFalse(\"greater than\", filter.accept(new Integer(11)));", "+        assertFalse(\"less than\", filter.accept(Integer.valueOf(-1)));", "+        assertTrue(\"in range\", filter.accept(Integer.valueOf(0)));", "+        assertTrue(\"in range\", filter.accept(Integer.valueOf(5)));", "+        assertTrue(\"in range\", filter.accept(Integer.valueOf(10)));", "+        assertFalse(\"greater than\", filter.accept(Integer.valueOf(11)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c9d9d7dad270d49b9f7ba92acc59b8d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/IntRangeFilterTest.java", "commitBeforeChange": "ff6c49e6a715d8372ac77a34aa77d9eaff6db154", "commitAfterChange": "911065320fb39299f442ea08f775cfe08ba2a2ed", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDecideEmpty()", "signatureAfterChange": "      @Test     public void testDecideEmpty()", "diff": ["-        assertFalse(\"out\", filter.accept(new Integer(-1)));", "-        assertFalse(\"out\", filter.accept(new Integer(0)));", "-        assertFalse(\"out\", filter.accept(new Integer(5)));", "-        assertFalse(\"out\", filter.accept(new Integer(10)));", "-        assertFalse(\"out\", filter.accept(new Integer(11)));", "+        assertFalse(\"out\", filter.accept(Integer.valueOf(-1)));", "+        assertFalse(\"out\", filter.accept(Integer.valueOf(0)));", "+        assertFalse(\"out\", filter.accept(Integer.valueOf(5)));", "+        assertFalse(\"out\", filter.accept(Integer.valueOf(10)));", "+        assertFalse(\"out\", filter.accept(Integer.valueOf(11)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77f33aa8473c2ea13675262e4abbd6d1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/CSVFilterTest.java", "commitBeforeChange": "ff6c49e6a715d8372ac77a34aa77d9eaff6db154", "commitAfterChange": "911065320fb39299f442ea08f775cfe08ba2a2ed", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testDecideEmptyRange()", "signatureAfterChange": "      @Test     public void testDecideEmptyRange()", "diff": ["-        assertFalse(\"less than\", filter.accept(new Integer(-1)));", "-        assertFalse(\"equal 0\", filter.accept(new Integer(0)));", "-        assertFalse(\"equal 1\", filter.accept(new Integer(1)));", "-        assertFalse(\"equal 2\", filter.accept(new Integer(2)));", "-        assertFalse(\"greater than\", filter.accept(new Integer(3)));", "+        assertFalse(\"less than\", filter.accept(Integer.valueOf(-1)));", "+        assertFalse(\"equal 0\", filter.accept(Integer.valueOf(0)));", "+        assertFalse(\"equal 1\", filter.accept(Integer.valueOf(1)));", "+        assertFalse(\"equal 2\", filter.accept(Integer.valueOf(2)));", "+        assertFalse(\"greater than\", filter.accept(Integer.valueOf(3)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1c00cf34bb6622e0f4505f858e26670", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/CSVFilterTest.java", "commitBeforeChange": "ff6c49e6a715d8372ac77a34aa77d9eaff6db154", "commitAfterChange": "911065320fb39299f442ea08f775cfe08ba2a2ed", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDecideRange()", "signatureAfterChange": "      @Test     public void testDecideRange()", "diff": ["-        assertFalse(\"less than\", filter.accept(new Integer(-1)));", "-        assertTrue(\"equal 0\", filter.accept(new Integer(0)));", "-        assertTrue(\"equal 1\", filter.accept(new Integer(1)));", "-        assertTrue(\"equal 2\", filter.accept(new Integer(2)));", "-        assertFalse(\"greater than\", filter.accept(new Integer(3)));", "+        assertFalse(\"less than\", filter.accept(Integer.valueOf(-1)));", "+        assertTrue(\"equal 0\", filter.accept(Integer.valueOf(0)));", "+        assertTrue(\"equal 1\", filter.accept(Integer.valueOf(1)));", "+        assertTrue(\"equal 2\", filter.accept(Integer.valueOf(2)));", "+        assertFalse(\"greater than\", filter.accept(Integer.valueOf(3)));"]}]}