{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8dca66079717213c06c9203d21e22f9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14642e3a455617abff9a1e8655b43349", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java", "commitBeforeChange": "79404974eff1458f4243f8acd6a08b6a8b869342", "commitAfterChange": "fe9057366308642868c25d427c3ee94411b37170", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     PackageObjectFactory()", "signatureAfterChange": "     public PackageObjectFactory(Set<String> aPackageNames,             ClassLoader aModuleClassLoader)", "diff": ["-    PackageObjectFactory()", "+    public PackageObjectFactory(Set<String> aPackageNames,", "+            ClassLoader aModuleClassLoader)", "-    }", "+        if (aModuleClassLoader == null) {", "+            throw new IllegalArgumentException(", "+                    \"aModuleClassLoader must not be null\");", "+        }", "+        //create a copy of the given set, but retain ordering", "+        mPackages = new LinkedHashSet<String>(aPackageNames);", "+        mModuleClassLoader = aModuleClassLoader;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15d0fc267ff29b4e9019659e46d35eea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public PackageObjectFactory(Set<String> aPackageNames,             ClassLoader aModuleClassLoader)", "signatureAfterChange": "     public PackageObjectFactory(Set<String> packageNames,             ClassLoader moduleClassLoader)", "diff": ["-    public PackageObjectFactory(Set<String> aPackageNames,", "-            ClassLoader aModuleClassLoader)", "+    public PackageObjectFactory(Set<String> packageNames,", "+            ClassLoader moduleClassLoader)", "-        if (aModuleClassLoader == null) {", "+        if (moduleClassLoader == null) {", "-                    \"aModuleClassLoader must not be null\");", "+                    \"moduleClassLoader must not be null\");", "-        mPackages = Sets.newLinkedHashSet(aPackageNames);", "-        mModuleClassLoader = aModuleClassLoader;", "+        packages = Sets.newLinkedHashSet(packageNames);", "+        this.moduleClassLoader = moduleClassLoader;"]}]}