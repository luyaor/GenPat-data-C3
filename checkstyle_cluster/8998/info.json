{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d17919fe3f9ec8967c7420efe923bd8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "342f6be7f49eb25c79c8acc79a15779a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void addPreviousSibling(DetailAST aAST)", "signatureAfterChange": "     public void addPreviousSibling(DetailAST ast)", "diff": ["-    public void addPreviousSibling(DetailAST aAST)", "+    public void addPreviousSibling(DetailAST ast)", "-        if (aAST != null) {", "-            aAST.setParent(mParent);", "+        if (ast != null) {", "+            ast.setParent(parent);", "-                aAST.setPreviousSibling(previousSibling);", "-                previousSibling.setNextSibling(aAST);", "+                ast.setPreviousSibling(previousSibling);", "+                previousSibling.setNextSibling(ast);", "-            else if (mParent != null) {", "-                mParent.setFirstChild(aAST);", "+            else if (parent != null) {", "+                parent.setFirstChild(ast);", "-            aAST.setNextSibling(this);", "-            this.setPreviousSibling(aAST);", "+            ast.setNextSibling(this);", "+            this.setPreviousSibling(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52b2113e8374741318ec2ed870b213f7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        switch (aAST.getType()) {", "+        switch (ast.getType()) {", "-            visitPackageDef(aAST);", "+            visitPackageDef(ast);", "-            visitClassDef(aAST);", "+            visitClassDef(ast);", "-            mContext.visitType(aAST);", "+            context.visitType(ast);", "-            mContext.visitLiteralNew(aAST);", "+            context.visitLiteralNew(ast);", "-            mContext.visitLiteralThrows(aAST);", "+            context.visitLiteralThrows(ast);", "-            throw new IllegalStateException(aAST.toString());", "+            throw new IllegalStateException(ast.toString());"]}]}