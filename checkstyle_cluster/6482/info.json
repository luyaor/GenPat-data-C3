{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e82229f6fe63420f4cfcc4c4e8d81e4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9af946deffdcd0fba95fcb6b70b0722", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "777a4e04d85611a1e857ea92cdb6f155c21c28a0", "commitAfterChange": "aaf39002ac7fa00b95f4719beca058f6f7445574", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static AuditListener createListener(String format,                                                 String outputLocation)             throws UnsupportedEncodingException, FileNotFoundException", "signatureAfterChange": "     private static AuditListener createListener(String format,                                                 String outputLocation)             throws UnsupportedEncodingException, FileNotFoundException", "diff": ["-        switch (format) {", "-            case \"xml\":", "-                listener = new XMLLogger(out, closeOut);", "-                break;", "+        if (\"xml\".equals(format)) {", "+            listener = new XMLLogger(out, closeOut);", "-            case \"plain\":", "-                listener = new DefaultLogger(out, closeOut);", "-                break;", "+        }", "+        else if (\"plain\".equals(format)) {", "+            listener = new DefaultLogger(out, closeOut);", "-            default:", "-                throw new IllegalStateException(\"Invalid output format. Found '\" + format", "-                        + \"' but expected 'plain' or 'xml'.\");", "+        }", "+        else {", "+            throw new IllegalStateException(\"Invalid output format. Found '\" + format", "+                    + \"' but expected 'plain' or 'xml'.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb1abc4130b207d66c2c98035349ec28", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "b5f92edbe545596878aa10bd50742b5f2c43c08a", "commitAfterChange": "8da777a68ad936f1a4e07d59cee17ecab2fc293e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private static DetailAST createCommentAstFromToken(Token token)", "signatureAfterChange": "     private static DetailAST createCommentAstFromToken(Token token)", "diff": ["-        switch (token.getType()) {", "-            case TokenTypes.SINGLE_LINE_COMMENT:", "-                return createSlCommentNode(token);", "-            case TokenTypes.BLOCK_COMMENT_BEGIN:", "-                return createBlockCommentNode(token);", "-            default:", "-                throw new IllegalArgumentException(\"Unknown comment type\");", "+        if (token.getType() == TokenTypes.SINGLE_LINE_COMMENT) {", "+            return createSlCommentNode(token);", "+        }", "+        else {", "+            return createBlockCommentNode(token);"]}]}