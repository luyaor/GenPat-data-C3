{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7ad09e7cacdc61af6b4cf23f078982c6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f486304fc7b69e107ed7e1a666bc44e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "e4282ad407f1d025c26b85c0709f2ff418b74f57", "commitAfterChange": "c9346746dc9a27d40eaa453e0afb4b0d1391665d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public boolean hasIntersectionWithComment(int startLineNo,             int startColNo, int endLineNo, int endColNo)", "signatureAfterChange": "     public boolean hasIntersectionWithComment(int startLineNo,             int startColNo, int endLineNo, int endColNo)", "diff": ["-        // Check C comments (all comments should be checked)", "-        final Collection<List<TextBlock>> values = clangComments.values();", "-        for (final List<TextBlock> row : values) {", "-            for (final TextBlock comment : row) {", "-                if (comment.intersects(startLineNo, startColNo, endLineNo,", "-                        endColNo)) {", "-                    return true;", "-                }", "-            }", "-        }", "-", "-        // Check CPP comments (line searching is possible)", "-        for (int lineNumber = startLineNo; lineNumber <= endLineNo;", "-             lineNumber++) {", "-            final TextBlock comment = cppComments.get(lineNumber);", "-            if (comment != null", "-                    && comment.intersects(startLineNo, startColNo,", "-                            endLineNo, endColNo)) {", "-                return true;", "-            }", "-        }", "-        return false;", "+        return hasIntersectionWithCComment(startLineNo, startColNo, endLineNo, endColNo)", "+                || hasIntersectionWithCppComment(startLineNo, startColNo, endLineNo, endColNo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee30c943047a71484c5850506664c1e0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public boolean hasIntersectionWithComment(int aStartLineNo,             int aStartColNo, int aEndLineNo, int aEndColNo)", "signatureAfterChange": "     public boolean hasIntersectionWithComment(int startLineNo,             int startColNo, int endLineNo, int endColNo)", "diff": ["-    public boolean hasIntersectionWithComment(int aStartLineNo,", "-            int aStartColNo, int aEndLineNo, int aEndColNo)", "+    public boolean hasIntersectionWithComment(int startLineNo,", "+            int startColNo, int endLineNo, int endColNo)", "-        final Collection<List<TextBlock>> values = mCComments.values();", "+        final Collection<List<TextBlock>> values = cComments.values();", "-                if (comment.intersects(aStartLineNo, aStartColNo, aEndLineNo,", "-                        aEndColNo))", "+                if (comment.intersects(startLineNo, startColNo, endLineNo,", "+                        endColNo))", "-        for (int lineNumber = aStartLineNo; lineNumber <= aEndLineNo;", "+        for (int lineNumber = startLineNo; lineNumber <= endLineNo;", "-            final TextBlock comment = mCPlusPlusComments.get(lineNumber);", "+            final TextBlock comment = cPlusPlusComments.get(lineNumber);", "-                    && comment.intersects(aStartLineNo, aStartColNo,", "-                            aEndLineNo, aEndColNo))", "+                    && comment.intersects(startLineNo, startColNo,", "+                            endLineNo, endColNo))"]}]}