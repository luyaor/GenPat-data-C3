{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f5f0f8ac813abe15aec0339ce7377e5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c35fb61420658157d5cae806e4717ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheckTest.java", "commitBeforeChange": "839778122441a69ad3607375d9fe5a320499c1cd", "commitAfterChange": "b930ba24beb9c8c165b4ba1bf530cee4c2d87b0f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIncorrectCustom() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrectCustom() throws Exception", "diff": ["-        final String tagOrder = \"[@author, @version, @param, @return, @throws, @exception, @see,\"", "-                + \" @since, @serial, @serialField, @serialData, @deprecated]\";", "+        final String tagOrder = \"[@since, @version, @param, @return, @throws, @exception,\"", "+                + \" @deprecated, @see, @serial, @serialField, @serialData, @author]\";", "+        final String customOrder = \" @since,  @version, @param,@return,@throws, @exception,\"", "+                + \"@deprecated, @see,@serial,   @serialField,  @serialData,@author\";", "+", "+        checkConfig.addAttribute(\"tagOrder\", customOrder);", "-            \"9: \" + getCheckMessage(MSG_KEY, tagOrder),", "-            \"11: \" + getCheckMessage(MSG_KEY, tagOrder),", "-            \"12: \" + getCheckMessage(MSG_KEY, tagOrder),", "-            \"115: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"113: \" + getCheckMessage(MSG_KEY, tagOrder),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aea897c764113230dc9f9fb5ac0752b7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIncorrectCustom() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrectCustom() throws Exception", "diff": ["-        final String tagOrder = \"'[@author, @version, @param, @return, @throws, @exception, @see,\"", "-                + \" @since, @serial, @serialField, @serialData, @deprecated]'.\";", "+        final String tagOrder = \"[@author, @version, @param, @return, @throws, @exception, @see,\"", "+                + \" @since, @serial, @serialField, @serialData, @deprecated]\";", "-            \"9: At-clauses have to appear in the order \" + tagOrder,", "-            \"11: At-clauses have to appear in the order \" + tagOrder,", "-            \"12: At-clauses have to appear in the order \" + tagOrder,", "-            \"115: At-clauses have to appear in the order \" + tagOrder,", "+            \"9: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"11: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"12: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"115: \" + getCheckMessage(MSG_KEY, tagOrder),"]}]}