{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0cde84877d87bb96dd5765437bafd709", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53de4db70173951bd4171bc21a505986", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "2effcfd0bcdfa7fc25bfff22e6f893ac6fb4478b", "commitAfterChange": "a2fded8ed742d341c47b818d79aaa90cc849273e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     void registerCheck(Check aCheck, CheckConfiguration aConfig)", "signatureAfterChange": "     void registerCheck(Check aCheck, CheckConfiguration aConfig)", "diff": ["+            int acceptableTokens[] = aCheck.getAcceptableTokens();", "+            Arrays.sort(acceptableTokens);", "-                registerCheck((String) it.next(), aCheck);", "+                String token = (String) it.next();", "+                int tokenId = TokenTypes.getTokenId(token);", "+                if (Arrays.binarySearch(acceptableTokens, tokenId) >= 0) {", "+                    registerCheck(token, aCheck);", "+                }", "+                // TODO: else error message?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caa186ba10d343e1c7a5e58f009d5ec1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "db76ce49052f7b63b1c3743b81c0068ef3f039d8", "commitAfterChange": "95a5040ccc98d1138a82c9e0ebcfe983651219b6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void registerCheck(Check aCheck)         throws CheckstyleException", "signatureAfterChange": "     private void registerCheck(Check aCheck)         throws CheckstyleException", "diff": ["+        int[] tokens = aCheck.getDefaultTokens();", "+            tokens = aCheck.getRequiredTokens();", "+", "+            //register configured tokens", "-        else {", "-            final int[] tokens = aCheck.getDefaultTokens();", "-            for (int i = 0; i < tokens.length; i++) {", "-                registerCheck(tokens[i], aCheck);", "-            }", "+        for (int i = 0; i < tokens.length; i++) {", "+            registerCheck(tokens[i], aCheck);"]}]}