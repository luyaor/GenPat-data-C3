{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "037da8d904aa92760250aeaa07dcb023", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e31774ad5ba7610d5bd31755b86a6c7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "d7142fd15f57063dc380863c7493aa9179b739bf", "commitAfterChange": "d077a402da51bb238a7da99d5e2542437b145192", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     void verifyMethod(MethodSignature aSig)", "signatureAfterChange": "     void verifyMethod(MethodSignature aSig)", "diff": ["-        // no need to check constructor names", "-        if (!aSig.isConstructor()", "-            && !mConfig.getMethodRegexp().match(aSig.getName().getText()))", "-        {", "-            mMessages.add(aSig.getName().getLineNo(),", "-                          aSig.getName().getColumnNo(),", "-                          \"name.invalidPattern\",", "-                          aSig.getName().getText(),", "-                          mConfig.getMethodPat());", "-        }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b336f773fccd314889408b341c79f34c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "021d6344b68b3fe5317a43079c89ab91f047fd47", "commitAfterChange": "553a1aec9f8f90a28443c05090279aae922d7e8a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     void verifyMethod(MethodSignature aSig)", "signatureAfterChange": "     void verifyMethod(MethodSignature aSig)", "diff": ["-        // JLS, chapter 9.4 - public in interface is strongly discouraged", "-        if (!mConfig.isIgnorePublicInInterface() && inInterfaceBlock()", "-            && aSig.getModSet().containsPublic())", "-        {", "-            mMessages.add(aSig.getModSet().getFirstLineNo(),", "-                          aSig.getModSet().getFirstColNo(),", "-                          \"redundantModifier\", \"public\");", "-        }", "-        // Check for redunant abstract", "-        if (inInterfaceBlock() && aSig.getModSet().containsAbstract()) {", "-            mMessages.add(aSig.getModSet().getFirstLineNo(),", "-                          aSig.getModSet().getFirstColNo(),", "-                          \"redundantModifier\", \"abstract\");", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cffa2f2b8b58d7f657b2c25a5fc968cc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "da940af3627944ad412904c15187627151e834e5", "commitAfterChange": "474e266acdfd9320c999fd12df4e53293a9587b6", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     void verifyOpBegin(int aLineNo, int aColNo, String aText)", "signatureAfterChange": "     void verifyOpBegin(int aLineNo, int aColNo, String aText)", "diff": ["-        if (!aText.equals(mLines[aLineNo - 1].trim())", "-            &&", "-            (mLines[aLineNo - 1].substring(aColNo + aText.length() - 1)", "-             .trim().length() == 0))", "-        {", "-            log(aLineNo, aColNo - 1,", "-                \"'\" + aText + \"' should be on a new line.\");", "-        }", "+//        if (!aText.equals(mLines[aLineNo - 1].trim())", "+//            &&", "+//            (mLines[aLineNo - 1].substring(aColNo + aText.length() - 1)", "+//             .trim().length() == 0))", "+//        {", "+//            log(aLineNo, aColNo - 1,", "+//                \"'\" + aText + \"' should be on a new line.\");", "+//        }"]}]}