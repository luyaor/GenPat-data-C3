{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "98aaf61d42a5ebbfe95db7ba71d824f8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d6d19650cfa1531c49da83981b548dc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "69976b5365b7c33a602dd814337e2db1136288fc", "commitAfterChange": "ac8eadea0b1fb183d56cd809a34a7b9047b47d47", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 26, "signatureBeforeChange": "      @Test     public void testInvalidSwitchWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testInvalidSwitchWithChecker()         throws Exception", "diff": ["+", "-        final Checker c = createChecker(checkConfig);", "+", "+        checkConfig.addAttribute(\"arrayInitIndent\", \"4\");", "+        checkConfig.addAttribute(\"basicOffset\", \"4\");", "+        checkConfig.addAttribute(\"braceAdjustment\", \"0\");", "+        checkConfig.addAttribute(\"caseIndent\", \"4\");", "+        checkConfig.addAttribute(\"forceStrictCondition\", \"false\");", "+        checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\");", "+        checkConfig.addAttribute(\"tabWidth\", \"4\");", "+        checkConfig.addAttribute(\"throwsIndent\", \"4\");", "-            \"26: \" + getCheckMessage(MSG_ERROR, \"switch\", 6, 8),", "-            \"28: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 10, 12),", "-            \"29: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 14, 16),", "-            \"29: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 14, 16),", "+            \"30: \" + getCheckMessage(MSG_ERROR, \"switch\", 6, 8),", "+            \"32: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 10, 12),", "-            \"35: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 14, 12),", "-            \"36: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 10, 12),", "-            \"39: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 10, 12),", "-            \"40: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 14, 16),", "-            \"40: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 14, 16),", "-            \"41: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 14, 16),", "-            \"49: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 14, 16),", "-            \"49: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 14, 16),", "-            \"50: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 18, 16),", "-            \"51: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 10, 12),", "-            \"55: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 10, 12),", "-            \"58: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 14, 12),", "-            \"62: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 14, 12),", "-            \"65: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 10, 12),", "-            \"72: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 14, 16),", "-            \"77: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 14, 16),", "-            \"85: \" + getCheckMessage(MSG_ERROR, \"switch rcurly\", 6, 8),", "-            \"88: \" + getCheckMessage(MSG_ERROR, \"switch lcurly\", 6, 8),", "-            \"89: \" + getCheckMessage(MSG_ERROR, \"switch rcurly\", 10, 8),", "-            \"91: \" + getCheckMessage(MSG_ERROR, \"switch lcurly\", 10, 8),", "-            \"92: \" + getCheckMessage(MSG_ERROR, \"switch rcurly\", 6, 8),", "+            \"33: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 14, 16),", "+            \"37: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 14, 16),", "+            \"39: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 14, 12),", "+            \"40: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 10, 12),", "+            \"43: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 10, 12),", "+            \"44: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 14, 16),", "+            \"44: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 14, 16),", "+            \"45: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 14, 16),", "+            \"53: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 14, 16),", "+            \"53: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 14, 16),", "+            \"54: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 18, 16),", "+            \"55: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 10, 12),", "+            \"59: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 10, 12),", "+            \"62: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 14, 12),", "+            \"66: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 14, 12),", "+            \"69: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 10, 12),", "+            \"76: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 14, 16),", "+            \"81: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 14, 16),", "+            \"89: \" + getCheckMessage(MSG_ERROR, \"switch rcurly\", 6, 8),", "+            \"92: \" + getCheckMessage(MSG_ERROR, \"switch lcurly\", 6, 8),", "+            \"93: \" + getCheckMessage(MSG_ERROR, \"switch rcurly\", 10, 8),", "+            \"95: \" + getCheckMessage(MSG_ERROR, \"switch lcurly\", 10, 8),", "+            \"96: \" + getCheckMessage(MSG_ERROR, \"switch rcurly\", 6, 8),", "-        verify(c, fname, expected);", "+        verifyWarns(checkConfig, fname, expected, 3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d03c2c912c8b73ed192fb286366168ac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "69976b5365b7c33a602dd814337e2db1136288fc", "commitAfterChange": "ac8eadea0b1fb183d56cd809a34a7b9047b47d47", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 36, "signatureBeforeChange": "      @Test     public void testInvalidWhileWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testInvalidWhileWithChecker()         throws Exception", "diff": ["-        final Checker c = createChecker(checkConfig);", "+", "+        checkConfig.addAttribute(\"arrayInitIndent\", \"4\");", "+        checkConfig.addAttribute(\"basicOffset\", \"4\");", "+        checkConfig.addAttribute(\"braceAdjustment\", \"0\");", "+        checkConfig.addAttribute(\"caseIndent\", \"4\");", "+        checkConfig.addAttribute(\"forceStrictCondition\", \"false\");", "+        checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\");", "+        checkConfig.addAttribute(\"tabWidth\", \"4\");", "+        checkConfig.addAttribute(\"throwsIndent\", \"4\");", "-            \"21: \" + getCheckMessage(MSG_ERROR, \"while\", 9, 8),", "-            \"22: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 7, 8),", "-            \"24: \" + getCheckMessage(MSG_ERROR, \"while\", 7, 8),", "-            \"25: \" + getCheckMessage(MSG_ERROR, \"while lcurly\", 9, 8),", "-            \"26: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 9, 8),", "-            \"28: \" + getCheckMessage(MSG_ERROR, \"while\", 9, 8),", "-            \"29: \" + getCheckMessage(MSG_ERROR, \"while lcurly\", 6, 8),", "-            \"30: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 14, 12),", "-            \"31: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 6, 8),", "-            \"33: \" + getCheckMessage(MSG_ERROR, \"while\", 10, 8),", "-            \"35: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 10, 8),", "+            \"25: \" + getCheckMessage(MSG_ERROR, \"while\", 9, 8),", "+            \"26: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 7, 8),", "+            \"28: \" + getCheckMessage(MSG_ERROR, \"while\", 7, 8),", "+            \"29: \" + getCheckMessage(MSG_ERROR, \"while lcurly\", 9, 8),", "+            \"30: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 9, 8),", "+", "+            \"32: \" + getCheckMessage(MSG_ERROR, \"while\", 9, 8),", "+            \"33: \" + getCheckMessage(MSG_ERROR, \"while lcurly\", 6, 8),", "+            \"34: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 14, 12),", "+            \"35: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 6, 8),", "+", "-            \"40: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 10, 8),", "-            \"42: \" + getCheckMessage(MSG_ERROR, \"while\", 6, 8),", "-            \"43: \" + getCheckMessage(MSG_ERROR, \"while lcurly\", 10, 8),", "-            \"46: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 6, 8),", "-            \"49: \" + getCheckMessage(MSG_ERROR, \"if\", 14, 12),", "-            \"50: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 18, 16),", "-            \"51: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 14, 12),", "-            \"52: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 14, 12),", "-            \"53: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 10, 8),", "-            \"56: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 10, 12),", "-            \"62: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 10, 12),", "-            \"67: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 10, 12),", "-            \"74: \" + getCheckMessage(MSG_ERROR, \"while rparen\", 5, 8),", "-            \"81: \" + getCheckMessage(MSG_ERROR, \"while rparen\", 10, 8),", "-            \"88: \" + getCheckMessage(MSG_ERROR, \"while rparen\", 10, 8),", "-            \"95: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 8, 12),", "+            \"39: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 10, 8),", "+            \"41: \" + getCheckMessage(MSG_ERROR, \"while\", 10, 8),", "+            \"44: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 10, 8),", "+", "+            \"46: \" + getCheckMessage(MSG_ERROR, \"while\", 6, 8),", "+            \"47: \" + getCheckMessage(MSG_ERROR, \"while lcurly\", 10, 8),", "+            \"50: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 6, 8),", "+            \"53: \" + getCheckMessage(MSG_ERROR, \"if\", 14, 12),", "+            \"54: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 18, 16),", "+            \"55: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 14, 12),", "+            \"56: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 14, 12),", "+            \"57: \" + getCheckMessage(MSG_ERROR, \"while rcurly\", 10, 8),", "+", "+            \"60: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 10, 12),", "+            \"66: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 10, 12),", "+            \"71: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 10, 12),", "+            \"78: \" + getCheckMessage(MSG_ERROR, \"while rparen\", 5, 8),", "+            \"85: \" + getCheckMessage(MSG_ERROR, \"while rparen\", 10, 8),", "+            \"92: \" + getCheckMessage(MSG_ERROR, \"while rparen\", 10, 8),", "+            \"99: \" + getCheckMessage(MSG_CHILD_ERROR, \"while\", 8, 12),", "-        verify(c, fname, expected);", "+        verifyWarns(checkConfig, fname, expected);"]}]}