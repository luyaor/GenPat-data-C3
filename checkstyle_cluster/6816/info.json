{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "74ec02c20726fa5d7c2b7bacc8ad5096", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2d93d6d2f516b68caa7e59ad179112f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "204c073294cdca6756bcd546d6af85a797ad7d79", "commitAfterChange": "6784e5bcd5baa6b5086bf8b63709856d685a74c8", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private boolean isIgnoredConstructorParam(DetailAST ast)", "signatureAfterChange": "     private boolean isIgnoredConstructorParam(DetailAST ast)", "diff": ["-        if ((ast.getType() != TokenTypes.PARAMETER_DEF)", "-            || !ignoreConstructorParameter)", "+        boolean result = false;", "+        if ((ast.getType() == TokenTypes.PARAMETER_DEF)", "+            && ignoreConstructorParameter)", "-            return false;", "+            final DetailAST parametersAST = ast.getParent();", "+            final DetailAST constructorAST = parametersAST.getParent();", "+            result = (constructorAST.getType() == TokenTypes.CTOR_DEF);", "-        final DetailAST parametersAST = ast.getParent();", "-        final DetailAST constructorAST = parametersAST.getParent();", "-        return (constructorAST.getType() == TokenTypes.CTOR_DEF);", "+        return result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cba789f5275a72186fa323bb33b674ae", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "204c073294cdca6756bcd546d6af85a797ad7d79", "commitAfterChange": "6784e5bcd5baa6b5086bf8b63709856d685a74c8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean isIgnoredParamOfAbstractMethod(DetailAST ast)", "signatureAfterChange": "     private boolean isIgnoredParamOfAbstractMethod(DetailAST ast)", "diff": ["-        if ((ast.getType() != TokenTypes.PARAMETER_DEF)", "-            || !ignoreAbstractMethods)", "+        boolean result = false;", "+        if ((ast.getType() == TokenTypes.PARAMETER_DEF)", "+            && ignoreAbstractMethods)", "-            return false;", "+            final DetailAST method = ast.getParent().getParent();", "+            if (method.getType() == TokenTypes.METHOD_DEF) {", "+                final DetailAST mods = method.findFirstToken(TokenTypes.MODIFIERS);", "+                result = ((mods != null) && mods.branchContains(TokenTypes.ABSTRACT));", "+            }", "-        final DetailAST method = ast.getParent().getParent();", "-        if (method.getType() != TokenTypes.METHOD_DEF) {", "-            return false;", "-        }", "-        final DetailAST mods = method.findFirstToken(TokenTypes.MODIFIERS);", "-        return ((mods != null) && mods.branchContains(TokenTypes.ABSTRACT));", "+        return result;"]}]}