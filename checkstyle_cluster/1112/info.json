{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ddf0eb7680ae7360638cd2a378eaac31", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57437942b33f535a09f14823ecfbe0eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public final void setFileExtensions(String[] aExtensions)", "signatureAfterChange": "     public final void setFileExtensions(String[] extensions)", "diff": ["-    public final void setFileExtensions(String[] aExtensions)", "+    public final void setFileExtensions(String[] extensions)", "-        if (aExtensions == null) {", "-            mFileExtensions = null;", "+        if (extensions == null) {", "+            fileExtensions = null;", "-        mFileExtensions = new String[aExtensions.length];", "-        for (int i = 0; i < aExtensions.length; i++) {", "-            final String extension = aExtensions[i];", "+        fileExtensions = new String[extensions.length];", "+        for (int i = 0; i < extensions.length; i++) {", "+            final String extension = extensions[i];", "-                mFileExtensions[i] = extension;", "+                fileExtensions[i] = extension;", "-                mFileExtensions[i] = \".\" + extension;", "+                fileExtensions[i] = \".\" + extension;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c81974c2e7898425130cb26f5d8aa365", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "f34eba11cbd8559d4d06f96e19affa70abaf86ff", "commitAfterChange": "0e3fe5643667a53079dbd114e5b1e9aa91fde083", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void displayErrors(String aFileName, LineText[] aErrors)", "signatureAfterChange": "     protected void fireErrors(String aFileName, LineText[] aErrors)", "diff": ["-     **/", "-    private void displayErrors(String aFileName, LineText[] aErrors)", "-    {", "-        for (int i = 0; i < aErrors.length; i++) {", "-            mLog.println(aFileName + \":\" + aErrors[i].getLineNo() +", "-                         \": \" + aErrors[i].getText());", "-        }", "-    }", "+     */", "+    protected void fireErrors(String aFileName, LineText[] aErrors)", "+    {", "+        for (int i = 0; i < aErrors.length; i++) {", "+            final AuditEvent evt =", "+                new AuditEvent(this, aFileName, aErrors[i].getLineNo(),", "+                               aErrors[i].getText());", "+            final Iterator it = mListeners.iterator();", "+            while (it.hasNext()) {", "+                final AuditListener listener = (AuditListener) it.next();", "+                listener.addError(evt);", "+            }", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4d5c66aa6381dd8c829e3df0169f751", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/XMLLoggerTest.java", "commitBeforeChange": "1079f0ab995bc25218f9e38af7968552f26a5df5", "commitAfterChange": "f45fee0aa4ba2f6f286c9e0336543c20e311a681", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testIsReference()         throws IOException", "signatureAfterChange": "      @Test     public void testIsReference()         throws IOException", "diff": ["-        final String[] reference = {", "+        final String[] references = {", "-        for (int i = 0; i < reference.length; i++) {", "-            assertTrue(\"reference: \" + reference[i],", "-                       XMLLogger.isReference(reference[i]));", "+        for (String reference : references) {", "+            assertTrue(\"reference: \" + reference,", "+                    XMLLogger.isReference(reference));", "-        final String[] noReference = {", "+        final String[] noReferences = {", "-        for (int i = 0; i < noReference.length; i++) {", "-            assertFalse(\"no reference: \" + noReference[i],", "-                       XMLLogger.isReference(noReference[i]));", "+        for (String noReference : noReferences) {", "+            assertFalse(\"no reference: \" + noReference,", "+                    XMLLogger.isReference(noReference));"]}]}