{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "26c80b63f09843b773cbb1a9de0ba5c9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f133f47f0242bac324f0bd5a604ee85d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (isInContext(aAST, ALLOWED_ASSIGMENT_CONTEXT)) {", "+        if (isInContext(ast, ALLOWED_ASSIGMENT_CONTEXT)) {", "-        if (isInNoBraceControlStatement(aAST)) {", "+        if (isInNoBraceControlStatement(ast)) {", "-        if (isInWhileIdiom(aAST)) {", "+        if (isInWhileIdiom(ast)) {", "-        log(aAST.getLineNo(), aAST.getColumnNo(), \"assignment.inner.avoid\");", "+        log(ast.getLineNo(), ast.getColumnNo(), \"assignment.inner.avoid\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f99a820c86e709bbd7c96438a3ccaa80", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "commitBeforeChange": "03f41815802b1ce6a0ca906c9f28c5a98344a932", "commitAfterChange": "0da1e4d980420f6abb465af441e5ced254698273", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (isInContext(ast, ALLOWED_ASSIGMENT_CONTEXT)) {", "-            return;", "+        if (!isInContext(ast, ALLOWED_ASSIGMENT_CONTEXT)", "+                && !isInNoBraceControlStatement(ast)", "+                && !isInWhileIdiom(ast)) {", "+            log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY);", "-", "-        if (isInNoBraceControlStatement(ast)) {", "-            return;", "-        }", "-", "-        if (isInWhileIdiom(ast)) {", "-            return;", "-        }", "-", "-        log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY);"]}]}