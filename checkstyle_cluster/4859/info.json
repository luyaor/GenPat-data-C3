{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6fcc07738e07e49b5bf7403ae0aae374", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7454bf08f8f6da2ff5ae1d9e5fabf229", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/HideUtilityClassConstructorCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (isAbstract(aAST)) {", "+        if (isAbstract(ast)) {", "-        final DetailAST objBlock = aAST.findFirstToken(TokenTypes.OBJBLOCK);", "+        final DetailAST objBlock = ast.findFirstToken(TokenTypes.OBJBLOCK);", "-        final boolean hasStaticModifier = isStatic(aAST);", "+        final boolean hasStaticModifier = isStatic(ast);", "-            aAST.findFirstToken(TokenTypes.EXTENDS_CLAUSE) == null;", "+            ast.findFirstToken(TokenTypes.EXTENDS_CLAUSE) == null;", "-            log(aAST.getLineNo(), aAST.getColumnNo(), \"hide.utility.class\");", "+            log(ast.getLineNo(), ast.getColumnNo(), \"hide.utility.class\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88d1dee09a6d90144af437375b27d292", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        String identifier = getIdentifier(getNthChild(aAST, 1));", "+        String identifier = getIdentifier(getNthChild(ast, 1));", "-            final DetailAST lparenAST = aAST.findFirstToken(TokenTypes.LPAREN);", "+            final DetailAST lparenAST = ast.findFirstToken(TokenTypes.LPAREN);", "-                log(aAST, \"suppress.warnings.missing.value\");", "+                log(ast, \"suppress.warnings.missing.value\");", "-            DetailAST parentAST = aAST.getParent();", "+            DetailAST parentAST = ast.getParent();", "-                log(aAST, \"suppress.warnings.invalid.target\");", "+                log(ast, \"suppress.warnings.invalid.target\");"]}]}