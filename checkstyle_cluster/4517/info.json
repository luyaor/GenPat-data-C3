{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e8ef316e4eaa82cd7228a1500603c1e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6aaee9aef077b7be14acdcfa57b80bf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/MagicNumberCheck.java", "commitBeforeChange": "d5a6a78a590fa688a4405d80adb81e067e997b14", "commitAfterChange": "9df0df10bf2b1cd0613967ab85fbdcf02b94ef0e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private boolean inIgnoreList(DetailAST aAST)", "signatureAfterChange": "     private boolean inIgnoreList(DetailAST aAST)", "diff": ["-      float value = 0; //value of aAST", "-      switch (aAST.getType()) {", "-          case TokenTypes.NUM_DOUBLE :", "-              value = (float) Double.parseDouble(aAST.getText());", "-              break;", "-          case TokenTypes.NUM_FLOAT :", "-              value = Float.parseFloat(aAST.getText());", "-              break;", "-          case TokenTypes.NUM_INT :", "-              value = Integer.parseInt(aAST.getText());", "-              break;", "-          case TokenTypes.NUM_LONG :", "-              // Long.parseLong requires that the text ends with neither 'L'", "-              // nor 'l'.", "-              String text = aAST.getText();", "-              if ((text.endsWith(\"L\")) || (text.endsWith(\"l\"))) {", "-                  text = text.substring(0, text.length() - 1); ", "-              }", "-              value = Long.parseLong(text);", "-              break;", "-          default :", "-              break;", "-      }", "-      return (Arrays.binarySearch(mIgnoreNumbers, value) >= 0);", "+        final float value = parseFloat(aAST.getText(), aAST.getType());", "+        return (Arrays.binarySearch(mIgnoreNumbers, value) >= 0);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db4781cfd9ad3345cded7563bc131cbc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/CheckUtils.java", "commitBeforeChange": "ddff555c2df8c132d70e4e2fa4dce7e7c8335e29", "commitAfterChange": "a7bede3cb47427c4853b0375b873d541b99a38f3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static float parseFloat(String aText, int aType)", "signatureAfterChange": "     public static double parseFloat(String aText, int aType)", "diff": ["-    public static float parseFloat(String aText, int aType)", "-        float result = 0;", "-            result = (float) Double.parseDouble(aText);", "-            // Long.parseLong requires that the text ends with neither 'L'", "-            // nor 'l'.", "-                result = (float) Long.parseLong(aText, radix);", "+     */", "+    public static double parseFloat(String aText, int aType)", "+    {", "+        return (float) parseDouble(aText, aType);", "+    }"]}]}