{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e177e2eb852feff758b60f0d3617a41d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1151283845d8d7ccdb58db4cbc9c7bf8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "3b5c81da39e0a179d439ac18c880b3d79970037d", "commitAfterChange": "17754d363645285e49bf4323a1af5762af47a8ea", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public String getMessage()", "signatureAfterChange": "     public String getMessage()", "diff": ["+", "+        final String customMessage = getCustomMessage();", "+        if (customMessage != null) {", "+            return customMessage;", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab2506a9b68a93a9010752b4988d8b84", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SeverityMatchFilter.java", "commitBeforeChange": "e9d1dff32e5233f1cc24c2e4a96c8ce2b9dd5364", "commitAfterChange": "27235bb91eaef651ec0731303bf9848626a56f54", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public boolean accept(Object aObject)", "signatureAfterChange": "     public boolean accept(Object aObject)", "diff": ["-", "-        return mSeverityLevel.equals(event.getSeverityLevel());", "+        boolean result = mSeverityLevel.equals(event.getSeverityLevel());", "+        if (mAcceptOnMatch) {", "+            return result;", "+        }", "+        else {", "+            return !result;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0ceb5ef8cd5bcc4beb3cc670bd73bc9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheck.java", "commitBeforeChange": "dd47d21b9eb0d254016315790db9be5db2c28ea4", "commitAfterChange": "2ce3fc4fd0ee5b731cd86459a46db89c085e4c19", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST ast)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST ast)", "diff": ["-            log(ast.getLineNo(), MSG_KEY);", "+            int lineNumber = DEFAULT_LINE_NUMBER;", "+            if (ast != null) {", "+                lineNumber = ast.getLineNo();", "+            }", "+            log(lineNumber, MSG_KEY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb09f10e60521018fa4364486160b9bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java", "commitBeforeChange": "351d79582d7a6cea56af9d61f45973d3cf73a484", "commitAfterChange": "7c262e61e676982d7d33a42971b885d97b95f456", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private boolean isPrePreviousLineEmpty(DetailAST token)", "signatureAfterChange": "     private boolean isPrePreviousLineEmpty(DetailAST token)", "diff": ["+        boolean result = false;", "-        final String prePreviousLine = getLines()[lineNo - number];", "-        return prePreviousLine.trim().isEmpty();", "+        if (lineNo >= number) {", "+            final String prePreviousLine = getLines()[lineNo - number];", "+            result = prePreviousLine.trim().isEmpty();", "+        }", "+        return result;"]}]}