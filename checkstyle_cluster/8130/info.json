{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b023081c15c6b15611952e8990166795", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25ccbb66685882a23b28d8f7c0d3d93a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java", "commitBeforeChange": "5d7226fac58883bc41058b28b8fcdb6f159cf1e2", "commitAfterChange": "75bbb441800de900e268cfa5ee82a64966b405b2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static boolean isOverriddenMethod(DetailAST ast)", "signatureAfterChange": "     private static boolean isOverriddenMethod(DetailAST ast)", "diff": ["+", "-        if (parent.getFirstChild().getFirstChild() != null) {", "-            final DetailAST annotation = parent.getFirstChild().getFirstChild();", "-            if (annotation.getType() == TokenTypes.ANNOTATION) {", "-                final DetailAST overrideToken = annotation.findFirstToken(TokenTypes.IDENT);", "-                if (\"Override\".equals(overrideToken.getText())) {", "-                    overridden = true;", "-                }", "+        final Optional<DetailAST> annotation =", "+            Optional.fromNullable(parent.getFirstChild().getFirstChild());", "+", "+        if (annotation.isPresent() && annotation.get().getType() == TokenTypes.ANNOTATION) {", "+            final Optional<DetailAST> overrideToken =", "+                Optional.fromNullable(annotation.get().findFirstToken(TokenTypes.IDENT));", "+            if (overrideToken.isPresent() && \"Override\".equals(overrideToken.get().getText())) {", "+                overridden = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c37c999d1cf8121c1f0d37a26e9dac9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java", "commitBeforeChange": "be8a60a4d95978e1b6cdb32fefca58f424e61178", "commitAfterChange": "8381754587bee0de49489e9bfb11e5912f664e87", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static boolean isOverriddenMethod(DetailAST ast)", "signatureAfterChange": "     private static boolean isOverriddenMethod(DetailAST ast)", "diff": ["-        final DetailAST annotation = parent.getFirstChild().getFirstChild();", "-        if (annotation.getType() == TokenTypes.ANNOTATION) {", "-            final DetailAST overrideToken = annotation.findFirstToken(TokenTypes.IDENT);", "-            if (\"Override\".equals(overrideToken.getText())) {", "-                overridden = true;", "+        if (parent.getFirstChild().getFirstChild() != null) {", "+            final DetailAST annotation = parent.getFirstChild().getFirstChild();", "+            if (annotation.getType() == TokenTypes.ANNOTATION) {", "+                final DetailAST overrideToken = annotation.findFirstToken(TokenTypes.IDENT);", "+                if (\"Override\".equals(overrideToken.getText())) {", "+                    overridden = true;", "+                }"]}]}