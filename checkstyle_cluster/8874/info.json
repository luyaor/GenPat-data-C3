{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "890a3d530b382ea9662db33f03515abd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1013c82341b3d961a68ecbf79b9710c5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "25603b312f6436a2518fdd8a32838c389837d992", "commitAfterChange": "3b3672d4694524ffe687d20e2be5970d4f85a26c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r     private void processEnd(DetailAST aAST)", "signatureAfterChange": "\r     private void processEnd(DetailAST aAST)", "diff": ["+\r", "-            // or a '(),'.\r", "+            // or a '(),[.'.\r", "-                if (!Character.isWhitespace(charAfter) && ('(' != charAfter)\r", "-                        && (')' != charAfter) && (',' != charAfter))\r", "+\r", "+                // Need to handle a number of cases. First is:\r", "+                //    Collections.<Object>emptySet();\r", "+                //                        ^\r", "+                //                        +--- whitespace not allowed\r", "+                if ((aAST.getParent().getType() == TokenTypes.TYPE_ARGUMENTS)\r", "+                    && (aAST.getParent().getParent().getType()\r", "+                        == TokenTypes.DOT)\r", "+                    && (aAST.getParent().getParent().getParent().getType()\r", "+                        == TokenTypes.METHOD_CALL))\r", "+                {\r", "+                    if (Character.isWhitespace(charAfter)) {\r", "+                        log(aAST.getLineNo(), after, \"ws.followed\", \">\");\r", "+                    }\r", "+                }\r", "+                else if (!Character.isWhitespace(charAfter)\r", "+                    && ('(' != charAfter) && (')' != charAfter)\r", "+                    && (',' != charAfter) && ('[' != charAfter)\r", "+                    && ('.' != charAfter))\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f26987ca41185a9633fa3135cf7dc98", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/ExecutableStatementCountCheck.java", "commitBeforeChange": "b8f9b199ad7de16619cec1f288bd751fad8bc4a9", "commitAfterChange": "b0bb7e1b50237a03ce4e977af15665c07e20f078", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void visitSlist(DetailAST aAST)", "signatureAfterChange": "     private void visitSlist(DetailAST aAST)", "diff": ["-            mContext.addCount(aAST.getChildCount() / 2);", "+            // find member AST for the statement list", "+            final DetailAST contextAST = mContext.getAST();", "+            DetailAST parent = aAST.getParent();", "+            while (parent != null) {", "+                final int type = parent.getType();", "+                if ((type == TokenTypes.CTOR_DEF)", "+                    || (type == TokenTypes.METHOD_DEF)", "+                    || (type == TokenTypes.INSTANCE_INIT)", "+                    || (type == TokenTypes.STATIC_INIT))", "+                {", "+                    if (parent == contextAST) {", "+                        mContext.addCount(aAST.getChildCount() / 2);", "+                    }", "+                    break;", "+                }", "+                parent = parent.getParent();", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e779aae7c82986d9a4e1ee04abcb3803", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "70c89f71ecaedc22708cd60d0f200a7b8893ca34", "commitAfterChange": "325b265cc583468dd495088e95f316a2ba10c4af", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r     private void processStart(DetailAST aAST)", "signatureAfterChange": "\r     private void processStart(DetailAST aAST)", "diff": ["-        if ((0 <= before) && Character.isWhitespace(line.charAt(before))\r", "+        // Need to handle two cases as in:\r", "+        //\r", "+        //   public static <T> Callable<T> callable(Runnable task, T result)\r", "+        //                 ^           ^\r", "+        //      ws reqd ---+           +--- whitespace NOT required\r", "+        //\r", "+        if (0 <= before) {\r", "+            // Detect if the first case\r", "+            final DetailAST parent = aAST.getParent();\r", "+            final DetailAST grandparent = parent.getParent();\r", "+            if ((TokenTypes.TYPE_PARAMETERS == parent.getType())\r", "+                && (TokenTypes.METHOD_DEF == grandparent.getType()))\r", "+            {\r", "+                // Require whitespace\r", "+                if (!Character.isWhitespace(line.charAt(before))) {\r", "+                    log(aAST.getLineNo(), before, \"ws.notPreceded\", \"<\");\r", "+                }\r", "+            }\r", "+            // Whitespace not required\r", "+            else if (Character.isWhitespace(line.charAt(before))\r", "-        {\r", "-            log(aAST.getLineNo(), before, \"ws.preceded\", \"<\");\r", "+            {\r", "+                log(aAST.getLineNo(), before, \"ws.preceded\", \"<\");\r", "+            }\r"]}]}