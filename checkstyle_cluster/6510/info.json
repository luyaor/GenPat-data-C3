{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bec69ec3a4410818222eeda1a7ecffc4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15230b61ac0a51f594a2b048c850c201", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "0b98c0389e2cf745cb125a89dece57538fc672b7", "commitAfterChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-                log(ast.getLineNo(), ast.getColumnNo(), \"ncss.method\",", "+                log(ast.getLineNo(), ast.getColumnNo(), MSG_METHOD,", "-                log(ast.getLineNo(), ast.getColumnNo(), \"ncss.class\",", "+                log(ast.getLineNo(), ast.getColumnNo(), MSG_CLASS,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a3004a270e0f8b0e24e2a3b36efec3a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                    \"ws.notPreceded\", ast.getText());", "+                    WS_NOT_PRECEDED, ast.getText());", "-                    \"ws.notFollowed\", ast.getText());", "+                    WS_NOT_FOLLOWED, ast.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37605e088f10205afa22c216f6a8ce8e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private Class<?> resolveInnerClass(String name, String currentClass)             throws ClassNotFoundException", "signatureAfterChange": "     private Class<?> resolveInnerClass(String name, String currentClass)             throws ClassNotFoundException", "diff": ["-            String innerClass = currentClass + \"$\" + name;", "+            String innerClass = currentClass + DOLLAR_SIGN + name;", "-                innerClass = pkg + \".\" + innerClass;", "+                innerClass = pkg + PERIOD + innerClass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4689cf1732a16cdd8f76c5de55f549c6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void checkUnusedTypeParamTags(         final List<JavadocTag> tags,         final List<String> typeParamNames)", "signatureAfterChange": "     private void checkUnusedTypeParamTags(         final List<JavadocTag> tags,         final List<String> typeParamNames)", "diff": ["-                        \"<\" + typeParamName + \">\");", "+                        OPEN_ANGLE_BRACKET + typeParamName + CLOSE_ANGLE_BRACKET);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c513ce7d82064d355ecd228255270ac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Utils.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public static String getTokenName(int iD)", "signatureAfterChange": "     public static String getTokenName(int iD)", "diff": ["-            throw new IllegalArgumentException(\"given id \" + iD);", "+            throw new IllegalArgumentException(TOKEN_ID_EXCEPTION_PREFIX + iD);", "-            throw new IllegalArgumentException(\"given id \" + iD);", "+            throw new IllegalArgumentException(TOKEN_ID_EXCEPTION_PREFIX + iD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ec5c9be9625e8381f4fff03070670a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void validateEol(DetailAST brace, String braceLine)", "signatureAfterChange": "     private void validateEol(DetailAST brace, String braceLine)", "diff": ["-            log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);", "+            log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);", "-            log(brace, MSG_KEY_LINE_BREAK_AFTER, \"{\", brace.getColumnNo() + 1);", "+            log(brace, MSG_KEY_LINE_BREAK_AFTER, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9993c249c66dcafe38c51d57cf707d2c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "a1ad6dbd260c4293be469801021f371e60fc9ae8", "commitAfterChange": "1c42e3eeb9aeebc47b2373541c1cc8d311d8b671", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void checkCompactNoArrayStyle(final DetailAST annotation)", "signatureAfterChange": "     private void checkCompactNoArrayStyle(final DetailAST annotation)", "diff": ["-            this.log(annotation.getLineNo(), \"annotation.incorrect.style\",", "+            this.log(annotation.getLineNo(), MSG_KEY_ANNOTATION_INCORRECT_STYLE,", "-                this.log(annotation.getLineNo(), \"annotation.incorrect.style\",", "+                this.log(annotation.getLineNo(), MSG_KEY_ANNOTATION_INCORRECT_STYLE,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad79cf4c6da7444ba3a4e6a61340749c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/SeparatorWrapCheck.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            log(lineNo, colNo, \"line.previous\", text);", "+            log(lineNo, colNo, LINE_PREVIOUS, text);", "-            log(lineNo, colNo, \"line.new\", text);", "+            log(lineNo, colNo, LINE_NEW, text);"]}]}