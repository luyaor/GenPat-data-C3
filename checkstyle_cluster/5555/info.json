{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5914ce49c549dd989cf42f137ebf36c7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01557ff816f8ec1ac01a752909a863ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java", "commitBeforeChange": "2ed00e0af3ede8d8a276bbde08c5492a42df842d", "commitAfterChange": "e81ca8290b4efd42c3454ffa0159b739f958ea48", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void visitLiteralFor(DetailAST ast)", "signatureAfterChange": "     private void visitLiteralFor(DetailAST ast)", "diff": ["-        DetailAST parenAst = ast.findFirstToken(TokenTypes.LPAREN);", "-        if (!isPrecedingEmptyForInit(parenAst)) {", "-            processLeft(parenAst);", "+        final DetailAST lparen = ast.findFirstToken(TokenTypes.LPAREN);", "+        if (!isPrecedingEmptyForInit(lparen)) {", "+            processLeft(lparen);", "-        parenAst = ast.findFirstToken(TokenTypes.RPAREN);", "-        if (!isFollowsEmptyForIterator(parenAst)) {", "-            processRight(parenAst);", "+        final DetailAST rparen = ast.findFirstToken(TokenTypes.RPAREN);", "+        if (!isFollowsEmptyForIterator(rparen)) {", "+            processRight(rparen);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad31877a2b69f0be89cd26afc1427578", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ClassDefHandler.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void checkIndentation()", "signatureAfterChange": "     public void checkIndentation()", "diff": ["-        LineSet lines = new LineSet();", "+        final LineSet lines = new LineSet();", "-        DetailAST ident = getMainAst().findFirstToken(TokenTypes.IDENT);", "-        int lineStart = getLineStart(ident);", "+        final DetailAST ident = getMainAst().findFirstToken(TokenTypes.IDENT);", "+        final int lineStart = getLineStart(ident);", "-        DetailAST impl = getMainAst().findFirstToken(", "+        final DetailAST impl = getMainAst().findFirstToken(", "-        DetailAST ext = getMainAst().findFirstToken(TokenTypes.EXTENDS_CLAUSE);", "+        final DetailAST ext =", "+            getMainAst().findFirstToken(TokenTypes.EXTENDS_CLAUSE);"]}]}