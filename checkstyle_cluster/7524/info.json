{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "70f215f6c69e361d9021c4707a758b81", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e1a6a3bae5edf46e02420187ed4aaaf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "1eda2807c85e7cd80f538bf1ac7c9288a1b59240", "commitAfterChange": "960d7d03b0dd7d1070ff218d5b27d21db7b0f0da", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     PropertyCacheFile(Configuration aCurrentConfig, String aFileName)", "signatureAfterChange": "     PropertyCacheFile(Configuration aCurrentConfig, String aFileName)", "diff": ["+            FileInputStream inStream = null;", "-                mDetails.load(new FileInputStream(fileName));", "+                inStream = new FileInputStream(fileName);", "+                mDetails.load(inStream);", "+            finally {", "+                if (inStream != null) {", "+                    try {", "+                        inStream.close();", "+                    }", "+                    catch (IOException ex) {", "+                        // TODO: use logger", "+                        System.out.println(\"Unable to close cache file.\");", "+                        ex.printStackTrace(System.out);", "+                    }", "+                }", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e13931403da2f5fd6632755e08c0a619", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "39e9c990f3637710dee3e75cc22f6c0828dbf576", "commitAfterChange": "39ce82b920cf83358bf0c291e9ed826b5662c7e8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void registerCheck(Check check)         throws CheckstyleException", "signatureAfterChange": "     private void registerCheck(Check check)         throws CheckstyleException", "diff": ["-                    // TODO: else log warning", "+                    else {", "+                        throw new IllegalArgumentException(\"Token \\\"\"", "+                            + token + \"\\\" was not found in Acceptable tokens list\"", "+                                    + \" in check \" + check);", "+                    }", "-                    throw new CheckstyleException(\"illegal token \\\"\"", "-                        + token + \"\\\" in check \" + check, ex);", "+                    throw new CheckstyleException(\"Token \\\"\"", "+                        + token + \"\\\" was not found in Acceptable tokens list\"", "+                                + \" in check \" + check, ex);"]}]}