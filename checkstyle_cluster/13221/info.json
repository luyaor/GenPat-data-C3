{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ac2689a0138e341e8c19db05e2bdf5b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "182ee7ea548766c66c2b60078d502408", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "1818ae8ab189515f24a711aa3fc520377bd71380", "commitAfterChange": "7b7eea6e9a4d4053912f83cda41c46c0f4474607", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Configuration()", "signatureAfterChange": "     public Configuration()", "diff": ["-        setIllegalImports(ILLEGAL_IMPORTS);", "-        setIllegalInstantiations(ILLEGAL_INSTANTIATIONS);", "-            setPatternProperty(Defn.TODO_PATTERN_PROP, TODO_PATTERN);", "-            setPatternProperty(Defn.PARAMETER_PATTERN_PROP, PARAMETER_PATTERN);", "-            setPatternProperty(Defn.STATIC_PATTERN_PROP, STATIC_PATTERN);", "-            setPatternProperty(Defn.CONST_PATTERN_PROP, CONST_PATTERN);", "-            setPatternProperty(Defn.MEMBER_PATTERN_PROP, MEMBER_PATTERN);", "-            setPatternProperty(Defn.PUBLIC_MEMBER_PATTERN_PROP,", "-                               PUBLIC_MEMBER_PATTERN);", "-            setPatternProperty(Defn.TYPE_PATTERN_PROP, TYPE_PATTERN);", "-            setPatternProperty(Defn.LOCAL_VAR_PATTERN_PROP, LOCAL_VAR_PATTERN);", "-            setPatternProperty(Defn.LOCAL_FINAL_VAR_PATTERN_PROP,", "-                               LOCAL_FINAL_VAR_PATTERN);", "-            setPatternProperty(Defn.METHOD_PATTERN_PROP, METHOD_PATTERN);", "-            setPatternProperty(Defn.IGNORE_LINE_LENGTH_PATTERN_PROP,", "-                               IGNORE_LINE_LENGTH_PATTERN);", "+            for (int i = 0; i < Defn.ALL_PATTERN_PROPS.length; i++) {", "+                setPatternProperty(", "+                    Defn.ALL_PATTERN_PROPS[i],", "+                    (String) PATTERN_DEFAULTS.get(Defn.ALL_PATTERN_PROPS[i]));", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6954d09ed79690ae5db1fa4254c21998", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule713atclauses/NonEmptyAtclauseDescriptionTest.java", "commitBeforeChange": "2aeea0413772d6083e90882838c7d41a488f5423", "commitAfterChange": "ca15d3d758a857dffcfd8fb7a739b32caef797e1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "          @Test     public void noFinalizerExtendedTest() throws Exception", "signatureAfterChange": "     private static Integer[] getLineNumbersFromExpected(String[] expected)", "diff": ["-    ", "-    public void noFinalizerExtendedTest() throws Exception {", "-        ", "-        String msg = getCheckMessage(NoFinalizerCheck.class, \"avoid.finalizer.method\");", "-            \"9: \" + msg,", "-            \"21: \" + msg,", "-            \"33: \" + msg,", "-            \"45: \" + msg,", "-            \"57: \" + msg,", "-            \"69: \" + msg,", "-            \"79: \" + msg,", "-            \"119: \" + msg,", "-            \"136: \" + msg,", "-        Configuration checkConfig = builder.getCheckConfig(\"NoFinalizer\");", "-        String filePath = builder.getFilePath(\"NoFinalizeExtendInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+     */", "+    private static Integer[] getLineNumbersFromExpected(String[] expected) {", "+        Integer[] result = new Integer[expected.length];", "+        for (int i = 0; i < expected.length; i++) {", "+            result[i] = Integer.valueOf(expected[i].substring(0, expected[i].indexOf(':')));", "+        }", "+        return result;", "+    }"]}]}