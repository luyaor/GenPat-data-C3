{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da2026bdeaaf8f369be4b6dc75512eef", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9afb438d01a83ddc7582555115795387", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "      @Test     public void testSkipCertainMethods() throws Exception", "signatureAfterChange": "      @Test     public void testSkipCertainMethods() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"ignoreMethodNamesRegex\", \"^foo.*$\");", "+        checkConfig.addAttribute(\"ignoreMethodNamesRegex\", \"^foo.*$\");", "-        verify(mCheckConfig, getPath(\"javadoc/InputJavadocMethodIgnoreNameRegex.java\"), expected);", "+        verify(checkConfig, getPath(\"javadoc/InputJavadocMethodIgnoreNameRegex.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d78d0d2ef9feea9decf4252d3c72b384", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testFormat() throws Exception", "signatureAfterChange": "      @Test     public void testFormat() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"format\", \"^$\");", "+        checkConfig.addAttribute(\"format\", \"^$\");", "-        verify(mCheckConfig, getPath(\"coding\" + File.separator + \"InputIllegalType.java\"), expected);", "+        verify(checkConfig, getPath(\"coding\" + File.separator + \"InputIllegalType.java\"), expected);"]}]}