{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47b21ea8d15d055e19a51f5849690e80", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ac90d9ab42719e1ae57ddc3242b0cc5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "commitAfterChange": "6125beffc437f970eae276b4a6542265c6547784", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        if (aAST.getType() == TokenTypes.CLASS_DEF) {", "-            //find and push fields", "-            final DetailAST classMods =", "+        //A more thorough check of enum constant class bodies is", "+        //possible (checking for hidden fields against the enum", "+        //class body in addition to enum constant class bodies)", "+        //but not attempted as it seems out of the scope of this", "+        //check.", "+        if ((aAST.getType() == TokenTypes.CLASS_DEF)", "+            || (aAST.getType() == TokenTypes.ENUM_DEF)", "+            || (aAST.getType() == TokenTypes.ENUM_CONSTANT_DEF))", "+        {", "+            final DetailAST typeMods =", "-            final boolean isStaticInnerClass =", "-                classMods.branchContains(TokenTypes.LITERAL_STATIC);", "-            final FieldFrame frame = new FieldFrame(isStaticInnerClass);", "+            final boolean isStaticInnerType =", "+                (typeMods == null)", "+                    ? false", "+                    : typeMods.branchContains(TokenTypes.LITERAL_STATIC);", "+            final FieldFrame frame = new FieldFrame(isStaticInnerType);", "+", "-            DetailAST child = (DetailAST) objBlock.getFirstChild();", "-            while (child != null) {", "-                if (child.getType() == TokenTypes.VARIABLE_DEF) {", "-                    final String name =", "-                        child.findFirstToken(TokenTypes.IDENT).getText();", "-                    final DetailAST mods =", "-                        child.findFirstToken(TokenTypes.MODIFIERS);", "-                    if (mods.branchContains(TokenTypes.LITERAL_STATIC)) {", "-                        frame.addStaticField(name);", "+            // enum constants may not have bodies", "+            if (objBlock != null) {", "+                DetailAST child = (DetailAST) objBlock.getFirstChild();", "+                while (child != null) {", "+                    if (child.getType() == TokenTypes.VARIABLE_DEF) {", "+                        final String name =", "+                            child.findFirstToken(TokenTypes.IDENT).getText();", "+                        final DetailAST mods =", "+                            child.findFirstToken(TokenTypes.MODIFIERS);", "+                        if (mods.branchContains(TokenTypes.LITERAL_STATIC)) {", "+                            frame.addStaticField(name);", "+                        }", "+                        else {", "+                            frame.addInstanceField(name);", "+                        }", "-                    else {", "-                        frame.addInstanceField(name);", "-                    }", "+                    child = (DetailAST) child.getNextSibling();", "-                child = (DetailAST) child.getNextSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45b07bd1e3cd19e56e2680511f7ed5a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "a69a0461d2125ceac1e5a123c3ff24a94a784d50", "commitAfterChange": "fcbd40f3ce04fe3011bf0e1b2642ac1fd049f5de", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public final void leaveToken(DetailAST aAST)", "signatureAfterChange": "     public final void leaveToken(DetailAST aAST)", "diff": ["-        if (aAST.getType() == TokenTypes.CLASS_DEF) {", "+        if (aAST.getType() == TokenTypes.CLASS_DEF", "+            || aAST.getType() == TokenTypes.ENUM_DEF)", "+        {", "+        else if (aAST.getType() != TokenTypes.PACKAGE_DEF", "+                 && aAST.getType() != TokenTypes.IMPORT)", "+        {", "+            leaveAST(aAST);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3deee85e320aaa487fcf33f9a01e005", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/CodeSelector.java", "commitBeforeChange": "2f0b4be3aebc225683653298dc234eae7b3cb86e", "commitAfterChange": "c922d93b2fbb2c254c2d5236bb449193fb7d5747", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void select()", "signatureAfterChange": "     public void select()", "diff": ["-        final int end = findLastPosition(ast);", "+        final int end;", "+", "+        if (ast.getChildCount() == 0", "+            && TokenUtils.getTokenName(ast.getType()).equals(ast.getText())) {", "+            end = start;", "+        }", "+        else {", "+            end = findLastPosition(ast);", "+        }", "-        editor.setSelectionStart(start);", "-        editor.setSelectionEnd(end);", "+        editor.setCaretPosition(start);", "+        editor.moveCaretPosition(end);"]}]}