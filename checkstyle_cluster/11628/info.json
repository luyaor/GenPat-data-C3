{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a9068b258b175a1253288f4b4b00d7a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7905b96bfd9705eb78d912516d1a9ab2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java", "commitBeforeChange": "af8d57317fd308e72ab9041200df10506b96870f", "commitAfterChange": "ec19316322d0540f0734f3812c9a16394dae9c3a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["+        case TokenTypes.CLASS_DEF:", "+            lcurly = aAST.getLastChild().getFirstChild();", "+            rcurly = aAST.getLastChild().getLastChild();", "+            nextToken = aAST;", "+            break;", "+        case TokenTypes.CTOR_DEF:", "+            lcurly = aAST.getLastChild();", "+            rcurly = lcurly.getLastChild();", "+            nextToken = aAST;", "+            break;", "+        case TokenTypes.METHOD_DEF:", "+            lcurly = aAST.getLastChild();", "+            rcurly = lcurly.getLastChild();", "+            nextToken = aAST;", "+            break;", "-            && (rcurly.getLineNo() != nextToken.getLineNo()))", "+                && (rcurly.getLineNo() != nextToken.getLineNo()))", "-                 && (rcurly.getLineNo() == nextToken.getLineNo()))", "+                && (rcurly.getLineNo() == nextToken.getLineNo()))", "-            Utils.whitespaceBefore(rcurly.getColumnNo(),", "-                                   getLines()[rcurly.getLineNo() - 1]);", "+                Utils.whitespaceBefore(rcurly.getColumnNo(),", "+                        getLines()[rcurly.getLineNo() - 1]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e554e9eb866dfc24e7809b1df4cb3197", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "commitBeforeChange": "5f68bb50fd191fec409f5edb90755a18fce3e0ac", "commitAfterChange": "b436b3cd9860529718b95c36dafe565fe68f6293", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean isSkipIfBlock(DetailAST literalIf)", "signatureAfterChange": "     private static boolean isSingleLineFor(DetailAST literalFor)", "diff": ["-    private boolean isSkipIfBlock(DetailAST literalIf)", "-        return allowSingleLineIf && isSingleLineIf(literalIf);", "+     */", "+    private static boolean isSingleLineFor(DetailAST literalFor)", "+    {", "+        boolean result = false;", "+        if (literalFor.getLastChild().getType() == TokenTypes.EMPTY_STAT) {", "+            result = true;", "+        }", "+        else if (literalFor.getParent().getType() == TokenTypes.SLIST", "+                && literalFor.getLastChild().getType() != TokenTypes.SLIST)", "+        {", "+            final DetailAST block = literalFor.findFirstToken(TokenTypes.EXPR);", "+            if (block != null) {", "+                result = literalFor.getLineNo() == block.getLineNo();", "+            }", "+        }", "+        return result;", "+    }"]}]}