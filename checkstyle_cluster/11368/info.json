{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "311f5c69953f8addc937e60325af4b4c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5886bc13b540f55d1eab7268c5415619", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/indentation/FromGuava.java", "commitBeforeChange": "1ad274c7029a7bdf03d96dddd4ac8c130f2bf543", "commitAfterChange": "8d88dde6f325f9696a6fcd0ed74d45c6a848031b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "       @Override       <K, V> ValueReference<K, V> referenceValue(           Segment<K, V> segment, ReferenceEntry<K, V> entry, V value, int weight)", "signatureAfterChange": "       @Override       <K, V> Object referenceValue(           Segment<K, V> segment, ReferenceEntry<K, V> entry, V value, int weight)", "diff": ["-      <K, V> ValueReference<K, V> referenceValue(", "+      <K, V> Object referenceValue(", "-            ? new WeakValueReference<K, V>(segment.valueReferenceQueue, value, entry)", "-            : new WeightedWeakValueReference<K, V>(", "-                segment.valueReferenceQueue, value, entry, weight);", "+            ? new WeakValueReference<K, V>()", "+            : new WeightedWeakValueReference<K, V>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82806bd48795ae4c32ce83362b780997", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/indentation/FromGuava.java", "commitBeforeChange": "1ad274c7029a7bdf03d96dddd4ac8c130f2bf543", "commitAfterChange": "8d88dde6f325f9696a6fcd0ed74d45c6a848031b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     abstract <K, V> ValueReference<K, V> referenceValue(         Segment<K, V> segment, ReferenceEntry<K, V> entry, V value, int weight);", "signatureAfterChange": "     abstract <K, V> Object referenceValue(         Segment<K, V> segment, ReferenceEntry<K, V> entry, V value, int weight);", "diff": ["-    abstract <K, V> ValueReference<K, V> referenceValue(", "+    abstract <K, V> Object referenceValue("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7908070d60a75156676667e6aaa481b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/indentation/FromGuava.java", "commitBeforeChange": "1ad274c7029a7bdf03d96dddd4ac8c130f2bf543", "commitAfterChange": "8d88dde6f325f9696a6fcd0ed74d45c6a848031b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "       @Override       <K, V> ValueReference<K, V> referenceValue(           Segment<K, V> segment, ReferenceEntry<K, V> entry, V value, int weight)", "signatureAfterChange": "        @Override      <K, V> ValueReference<K, V> referenceValue(Segment<K, V> segment,      \t\t    ReferenceEntry<K, V> entry, V value, int weight)", "diff": ["+", "+      @Override", "+     <K, V> ValueReference<K, V> referenceValue(Segment<K, V> segment, ", "+    \t\t    ReferenceEntry<K, V> entry, V value, int weight) {", "+", "+        return null;", "+      }", "-      @Override", "-      <K, V> ValueReference<K, V> referenceValue(", "-          Segment<K, V> segment, ReferenceEntry<K, V> entry, V value, int weight) {", "-            : new WeightedSoftValueReference<K, V>(", "-                segment.valueReferenceQueue, value, entry, weight);"]}]}