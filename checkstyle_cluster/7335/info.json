{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "030f09bdc2577313ebc7f29cc627a44a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b32ecc7303a8111d133908b8f7818be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     private void checkParamTags(final List<JavadocTag> tags,             final DetailAST parent, boolean reportExpectedTags)", "signatureAfterChange": "     private void checkParamTags(final List<JavadocTag> tags,             final DetailAST parent, boolean reportExpectedTags)", "diff": ["-                log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTag\",", "+                log(tag.getLineNo(), tag.getColumnNo(), MSG_UNUSED_TAG,", "-                log(param, \"javadoc.expectedTag\",", "+                log(param, MSG_EXCPECTED_TAG,", "-                log(typeParam, \"javadoc.expectedTag\",", "+                log(typeParam, MSG_EXCPECTED_TAG,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b64b725523ced9c9c2d38ab5e7d26e18", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/RegexpCheck.java", "commitBeforeChange": "27149f3504a2f350b74f456a9bffbae76a460060", "commitAfterChange": "5ede09997c283b4c418f0f540848e006be04fa87", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void logMessage(int lineNumber)", "signatureAfterChange": "     private void logMessage(int lineNumber)", "diff": ["-            log(lineNumber, \"illegal.regexp\", msg);", "+            log(lineNumber, MSG_ILLEGAL_REGEXP, msg);", "-                log(lineNumber, \"duplicate.regexp\", msg);", "+                log(lineNumber, MSG_DUPLICATE_REGEXP, msg);", "-                log(lineNumber, \"required.regexp\", msg);", "+                log(lineNumber, MSG_REQUIRED_REGEXP, msg);"]}]}