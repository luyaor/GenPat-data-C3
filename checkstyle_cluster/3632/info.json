{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b3e2e6a1a4c6edf900069cd8a8a48e6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28e8c259af3ea4abcb72f37254fb717a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionFilter.java", "commitBeforeChange": "a9bfdceec2a2d86a622c03fbd4052f007b5e70cc", "commitAfterChange": "1e7d8eef0641edcf97316618c8fab40bd248133d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int decide(Object aObject)", "signatureAfterChange": "     public boolean accept(Object aObject)", "diff": ["-    public int decide(Object aObject)", "+    public boolean accept(Object aObject)", "-        return mFilterChain.decide(aObject);", "+        return mFilterChain.accept(aObject);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5833995c68014167776f774312ea94c3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractComplexityCheck.java", "commitBeforeChange": "a501b8d95ac2840ce201549e552f2cc540fde4ce", "commitAfterChange": "5a6be4c757437373caf8e7d675f5bc1aa6a9ae38", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     protected final int popValue()", "signatureAfterChange": "     protected final BigInteger popValue()", "diff": ["-    protected final int popValue()", "+    protected final BigInteger popValue()", "-        mCurrentValue = ((Integer) mValueStack.pop()).intValue();", "-", "+        mCurrentValue = (BigInteger) mValueStack.pop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5aac44736abd4ac3ca07d1cf470a62c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/DenyAllFilter.java", "commitBeforeChange": "a9bfdceec2a2d86a622c03fbd4052f007b5e70cc", "commitAfterChange": "1e7d8eef0641edcf97316618c8fab40bd248133d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public int decide(Object aObject)", "signatureAfterChange": "     public boolean accept(Object aObject)", "diff": ["-    public int decide(Object aObject)", "+    public boolean accept(Object aObject)", "-        return Filter.DENY;", "+        return false;"]}]}