{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fcbeb25ef27ccbdef52e6104445c2c00", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2573729d31cd817add9a948d54851c3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ArrayInitHandler.java", "commitBeforeChange": "4981978ee20649f39244d3f2003580dad28770eb", "commitAfterChange": "4409b0f2432b479bd43ca274f91d1aabd6060575", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected int getChildrenExpectedLevel()", "signatureAfterChange": "     protected IndentLevel getChildrenExpectedLevel()", "diff": ["-    protected int getChildrenExpectedLevel()", "+    protected IndentLevel getChildrenExpectedLevel()", "-        // now we accept \"new int[] {1,", "-        //                           2};\"", "-        // TODO: should be accepted", "+        // now we accept", "+        // new int[] {1,", "+        //            2};", "+        // and", "-        // see InputValidArrayIndent.java (array6)", "+", "+        IndentLevel expectedIndent = super.getChildrenExpectedLevel();", "-                return firstChildPos;", "+                expectedIndent.addAcceptedIndent(firstChildPos);", "-", "-        return super.getChildrenExpectedLevel();", "+        return expectedIndent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5b8df4344786144bcb7d64ce900c55e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "798aac8ff0ec17573d316b64ea1b86ecf387f12f", "commitAfterChange": "5a4f991d2738c824f70f361b21d9da193ff3751c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected IndentLevel getChildrenExpectedLevel()", "signatureAfterChange": "     protected IndentLevel getChildrenExpectedLevel()", "diff": ["+        // if we have multileveled expected level then we should", "+        // try to suggest single level to children using curlies'", "+        // levels.", "+        if (getLevel().isMultiLevel() && hasCurlys()", "+            && !areOnSameLine(getLCurly(), getRCurly()))", "+        {", "+            if (startsLine(getLCurly())) {", "+                return new IndentLevel(expandedTabsColumnNo(getLCurly())", "+                                       + getBasicOffset());", "+            }", "+            else if (startsLine(getRCurly())) {", "+                return new IndentLevel(expandedTabsColumnNo(getRCurly())", "+                                       + getBasicOffset());", "+            }", "+        }"]}]}