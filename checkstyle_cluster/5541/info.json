{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d12104be86f7cf236963ead9c8b8c6b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a48306aae52812604f3bde68ca543c4a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void setClasses(String aClassNames)", "signatureAfterChange": "     public void setClasses(String classNames)", "diff": ["-    public void setClasses(String aClassNames)", "+    public void setClasses(String classNames)", "-        mIllegalClasses.clear();", "-        final StringTokenizer tok = new StringTokenizer(aClassNames, \",\");", "+        illegalClasses.clear();", "+        final StringTokenizer tok = new StringTokenizer(classNames, \",\");", "-            mIllegalClasses.add(tok.nextToken());", "+            illegalClasses.add(tok.nextToken());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cea1a38f854b6780d0e8f3b55bb7e754", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "1818ae8ab189515f24a711aa3fc520377bd71380", "commitAfterChange": "7b7eea6e9a4d4053912f83cda41c46c0f4474607", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "     public void setIllegalInstantiations(String aClassList)", "signatureAfterChange": "     public void setStringSetProperty(String aName, String aFrom)", "diff": ["+    public void setStringSetProperty(String aName, String aFrom)", "+        final Set s = new TreeSet();", "+        final StringTokenizer tok = new StringTokenizer(aFrom, \",\");", "+        while (tok.hasMoreTokens()) {", "+            s.add(tok.nextToken());", "-     */", "-    public void setIllegalInstantiations(String aClassList)", "-    {", "-        mIllegalInstantiations.clear();", "-        final StringTokenizer st = new StringTokenizer(aClassList, \",\");", "-        while (st.hasMoreTokens()) {", "-            mIllegalInstantiations.add(st.nextToken());", "-        }", "+        mStringSetProps.put(aName, s);"]}]}