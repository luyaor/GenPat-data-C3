{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82f02aa66a8f147a5460ab60a1833cf6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8ae2e8d75cefddb75c9613fe7c60327", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final DetailAST modifiers = aAST.findFirstToken(TokenTypes.MODIFIERS);", "+        final DetailAST modifiers = ast.findFirstToken(TokenTypes.MODIFIERS);", "-        if (aAST.getType() == TokenTypes.CLASS_DEF) {", "+        if (ast.getType() == TokenTypes.CLASS_DEF) {", "-            mClasses.push(new ClassDesc(isFinal, isAbstract));", "+            classes.push(new ClassDesc(isFinal, isAbstract));", "-        else if (!ScopeUtils.inEnumBlock(aAST)) { //ctors in enums don't matter", "-            final ClassDesc desc = mClasses.peek();", "+        else if (!ScopeUtils.inEnumBlock(ast)) { //ctors in enums don't matter", "+            final ClassDesc desc = classes.peek();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f299fd2275c0b81907d8df4440408f7c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-    public void leaveToken(DetailAST aAST)", "+    public void leaveToken(DetailAST ast)", "-        if ((aAST.getType() == TokenTypes.CLASS_DEF)", "-            || (aAST.getType() == TokenTypes.ENUM_DEF)", "-            || (aAST.getType() == TokenTypes.ENUM_CONSTANT_DEF))", "+        if ((ast.getType() == TokenTypes.CLASS_DEF)", "+            || (ast.getType() == TokenTypes.ENUM_DEF)", "+            || (ast.getType() == TokenTypes.ENUM_CONSTANT_DEF))", "-            mCurrentFrame = mCurrentFrame.getParent();", "+            currentFrame = currentFrame.getParent();"]}]}