{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d6aba9c5ee69d42c7252865cd08d2901", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cbf54f17359f5166513cfbdec776c9a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/NoFinalizerCheckTest.java", "commitBeforeChange": "8a6befb469c60416d1629b5a92e5bf81e07b7cae", "commitAfterChange": "708bb0271d113352a98c3a878b448d6635405694", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testHasNoFinalizer()         throws Exception", "signatureAfterChange": "      @Test     public void testHasNoFinalizer()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputFallThrough.java\"), expected);", "+        verify(checkConfig, getPath(\"InputFallThrough.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e1d7ce7f980202e37d74bd924367ee5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter6programpractice/rule64finalizers/NoFinalizerTest.java", "commitBeforeChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "commitAfterChange": "2a52c00d5de8a6b56df0b9678f831e5814170ca6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void noFinalizerExtendedTest() throws Exception", "signatureAfterChange": "      @Test     public void noFinalizerExtendedTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"NoFinalizeExtendInput\");", "+        final String filePath = builder.getFilePath(\"InputNoFinalizeExtend\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e507697c0359f384d92f0167169f288", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/NonEmptyAtclauseDescriptionCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCheck()             throws Exception", "signatureAfterChange": "      @Test     public void testCheck()             throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputNonEmptyAtclauseDescriptionCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputNonEmptyAtclauseDescription.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d42e0323653329deffe9960f5713bd1c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 60, "signatureBeforeChange": "      @Test     public void testValidAssignWithChecker() throws Exception", "signatureAfterChange": "      @Test     public void testValidAssignWithChecker() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputValidAssignIndent.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputValidAssignIndent.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd9f5580b96eda98adf937efa652c057", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 33, "signatureBeforeChange": "      @Test     public void testInvalidSwitchWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testInvalidSwitchWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputInvalidSwitchIndent.java\");", "+        final String fname = getPath(\"InputInvalidSwitchIndent.java\");"]}]}