{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "030e0dc3fb610b84e4de8eca1b0a2897", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01e92e8a527fed3d7650092ef50e382a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 68, "signatureBeforeChange": "     public void setLCurlyType(String aTo)", "signatureAfterChange": "     public void setLCurlyType(final String aTo)", "diff": ["-    public void setLCurlyType(String aTo)", "+    public void setLCurlyType(final String aTo)", "-        mConfig.setLCurlyType(extractLeftCurlyOption(aTo));", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setLCurlyType(extractLeftCurlyOption(aTo));", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05de3b243d83deb081b35e614f3f53db", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 62, "signatureBeforeChange": "     public void setIgnorePublicInInterface(boolean aIgnore)", "signatureAfterChange": "     public void setIgnorePublicInInterface(final boolean aIgnore)", "diff": ["-    public void setIgnorePublicInInterface(boolean aIgnore)", "+    public void setIgnorePublicInInterface(final boolean aIgnore)", "-        mConfig.setIgnorePublicInInterface(aIgnore);", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setIgnorePublicInInterface(aIgnore);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bff1d4f6c1381c8e04300263cdfa757", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 48, "signatureBeforeChange": "     public void setJavadocScope(String aJavadocScope)", "signatureAfterChange": "     public void setJavadocScope(final String aJavadocScope)", "diff": ["-    public void setJavadocScope(String aJavadocScope)", "+    public void setJavadocScope(final String aJavadocScope)", "-        mConfig.setJavadocScope(Scope.getInstance(aJavadocScope));", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setJavadocScope(Scope.getInstance(aJavadocScope));", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "155dcb521ab9b1ef3321f1e70d247def", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public void setIgnoreImportLen(boolean aIgnore)", "signatureAfterChange": "     public void setIgnoreImportLen(final boolean aIgnore)", "diff": ["-    public void setIgnoreImportLen(boolean aIgnore)", "+    public void setIgnoreImportLen(final boolean aIgnore)", "-        mConfig.setIgnoreImportLength(aIgnore);", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setIgnoreImportLength(aIgnore);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b1e11e77dd2b80ae10c5b04569ee9df", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void setMaxConstructorLen(int aLen)", "signatureAfterChange": "     public void setMaxConstructorLen(final int aLen)", "diff": ["-    public void setMaxConstructorLen(int aLen)", "+    public void setMaxConstructorLen(final int aLen)", "-        mConfig.setMaxConstructorLength(aLen);", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setMaxConstructorLength(aLen);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23506ebd867e634e371172c14c246d24", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void setMaxFileLen(int aLen)", "signatureAfterChange": "     public void setMaxFileLen(final int aLen)", "diff": ["-    public void setMaxFileLen(int aLen)", "+    public void setMaxFileLen(final int aLen)", "-        mConfig.setMaxFileLength(aLen);", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setMaxFileLength(aLen);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2488c3a778761b41b6a165793fb0f8d5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void setIgnoreLineLengthPattern(String aPat)", "signatureAfterChange": "     public void setIgnoreLineLengthPattern(final String aPat)", "diff": ["-    public void setIgnoreLineLengthPattern(String aPat)", "+    public void setIgnoreLineLengthPattern(final String aPat)", "-        try {", "-            mConfig.setIgnoreLineLengthPat(aPat);", "-        }", "-        catch (RESyntaxException ex) {", "-            throw new BuildException(", "-                \"Unable to parse ignoreLineLengthPattern - \", ex);", "-        }", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    try {", "+                        mConfig.setIgnoreLineLengthPat(aPat);", "+                    }", "+                    catch (RESyntaxException ex) {", "+                        throw new BuildException(", "+                            \"Unable to parse ignoreLineLengthPattern - \", ex);", "+                    }", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e5bf3f863613f540ed117a82aafe57e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 38, "signatureBeforeChange": "     public void setLocalVarPattern(String aPat)", "signatureAfterChange": "     public void setLocalVarPattern(final String aPat)", "diff": ["-    public void setLocalVarPattern(String aPat)", "+    public void setLocalVarPattern(final String aPat)", "-        try {", "-            mConfig.setLocalVarPat(aPat);", "-        }", "-        catch (RESyntaxException ex) {", "-            throw new BuildException(\"Unable to parse localVarPattern - \", ex);", "-        }", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    try {", "+                        mConfig.setLocalVarPat(aPat);", "+                    }", "+                    catch (RESyntaxException ex) {", "+                        throw new BuildException(", "+                            \"Unable to parse localVarPattern - \", ex);", "+                    }", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "367508de5861f7bae0f06498bd54480a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 74, "signatureBeforeChange": "     public void setParenPad(String aTo)", "signatureAfterChange": "     public void setParenPad(final String aTo)", "diff": ["-    public void setParenPad(String aTo)", "+    public void setParenPad(final String aTo)", "-        mConfig.setParenPadOption(extractPadOption(aTo));", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setParenPadOption(extractPadOption(aTo));", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e211c06632bcff3e6974b7b6467e82a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 72, "signatureBeforeChange": "     public void setRCurly(String aTo)", "signatureAfterChange": "     public void setRCurly(final String aTo)", "diff": ["-    public void setRCurly(String aTo)", "+    public void setRCurly(final String aTo)", "-        mConfig.setRCurly(extractRightCurlyOption(aTo));", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setRCurly(extractRightCurlyOption(aTo));", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "494505e4da3903f15cd8894f1143dad5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 64, "signatureBeforeChange": "     public void setCacheFile(File aCacheFile)", "signatureAfterChange": "     public void setCacheFile(final File aCacheFile)", "diff": ["-    public void setCacheFile(File aCacheFile)", "+    public void setCacheFile(final File aCacheFile)", "-        mConfig.setCacheFile(aCacheFile.getAbsolutePath());", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setCacheFile(aCacheFile.getAbsolutePath());", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d0bfa10d1b84a489adf0e6030fcf67f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 42, "signatureBeforeChange": "     public void setHeaderFile(File aName)", "signatureAfterChange": "     public void setHeaderFile(final File aName)", "diff": ["-    public void setHeaderFile(File aName)", "+    public void setHeaderFile(final File aName)", "-        try {", "-            mConfig.setHeaderFile(aName.getAbsolutePath());", "-        }", "-        catch (IOException ex) {", "-            throw new BuildException(\"Unable to read headerfile - \", ex);", "-        }", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    try {", "+                        mConfig.setHeaderFile(aName.getAbsolutePath());", "+                    }", "+                    catch (IOException ex) {", "+                        throw new BuildException(", "+                            \"Unable to read headerfile - \", ex);", "+                    }", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58b3fdb94884a03c9c76cb264c5cb327", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setAllowTabs(boolean aAllowed)", "signatureAfterChange": "     public void setAllowTabs(final boolean aAllowed)", "diff": ["-    /** @param aAllowed whether tabs are allowed **/", "-    public void setAllowTabs(boolean aAllowed)", "-        mConfig.setAllowTabs(aAllowed);", "+    /** @param aAllowed whether tabs are allowed **/", "+    public void setAllowTabs(final boolean aAllowed)", "+    {", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setAllowTabs(aAllowed);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60dcef6c12879e39cf51c81b4f426d9e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void setMaxLineLen(int aLen)", "signatureAfterChange": "     public void setMaxLineLen(final int aLen)", "diff": ["-    public void setMaxLineLen(int aLen)", "+    public void setMaxLineLen(final int aLen)", "-        mConfig.setMaxLineLength(aLen);", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setMaxLineLength(aLen);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "667fdd13b241f8e0c18b449c2360cad6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 58, "signatureBeforeChange": "     public void setIgnoreCastWhitespace(boolean aIgnore)", "signatureAfterChange": "     public void setIgnoreCastWhitespace(final boolean aIgnore)", "diff": ["-    public void setIgnoreCastWhitespace(boolean aIgnore)", "+    public void setIgnoreCastWhitespace(final boolean aIgnore)", "-        mConfig.setIgnoreCastWhitespace(aIgnore);", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setIgnoreCastWhitespace(aIgnore);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69198570aac7207266cad24de7e153f3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void setMaxMethodLen(int aLen)", "signatureAfterChange": "     public void setMaxMethodLen(final int aLen)", "diff": ["-    public void setMaxMethodLen(int aLen)", "+    public void setMaxMethodLen(final int aLen)", "-        mConfig.setMaxMethodLength(aLen);", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setMaxMethodLength(aLen);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "745838240f62156a75b40c8c1471ea50", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 46, "signatureBeforeChange": "     public void setHeaderIgnoreLine(String aList)", "signatureAfterChange": "     public void setHeaderIgnoreLine(final String aList)", "diff": ["-    public void setHeaderIgnoreLine(String aList)", "+    public void setHeaderIgnoreLine(final String aList)", "-        mConfig.setHeaderIgnoreLines(aList);", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setHeaderIgnoreLines(aList);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "773351fbb084969e79dbd25f2ff9c3bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void setAllowNoAuthor(boolean aAllowed)", "signatureAfterChange": "     public void setAllowNoAuthor(final boolean aAllowed)", "diff": ["-    public void setAllowNoAuthor(boolean aAllowed)", "+    public void setAllowNoAuthor(final boolean aAllowed)", "-        mConfig.setAllowNoAuthor(aAllowed);", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setAllowNoAuthor(aAllowed);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a056739a1cb117c6d1e6e57a7ee3e54d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public void setMemberPattern(String aPat)", "signatureAfterChange": "     public void setMemberPattern(final String aPat)", "diff": ["-    public void setMemberPattern(String aPat)", "+    public void setMemberPattern(final String aPat)", "-        try {", "-            mConfig.setMemberPat(aPat);", "-        }", "-        catch (RESyntaxException ex) {", "-            throw new BuildException(\"Unable to parse memberPattern - \", ex);", "-        }", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    try {", "+                        mConfig.setMemberPat(aPat);", "+                    }", "+                    catch (RESyntaxException ex) {", "+                        throw new BuildException(", "+                            \"Unable to parse memberPattern - \", ex);", "+                    }", "+                }", "+            });", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a10e6e50141c7a8f3d02fc36c3db8b83", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 50, "signatureBeforeChange": "     public void setRequirePackageHtml(boolean aRequirePackageHtml)", "signatureAfterChange": "     public void setRequirePackageHtml(final boolean aRequirePackageHtml)", "diff": ["-    public void setRequirePackageHtml(boolean aRequirePackageHtml)", "+    public void setRequirePackageHtml(final boolean aRequirePackageHtml)", "-        mConfig.setRequirePackageHtml(aRequirePackageHtml);", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setRequirePackageHtml(aRequirePackageHtml);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a58d4e7809e7b77ef0f26129507478bb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 34, "signatureBeforeChange": "     public void setStaticPattern(String aPat)", "signatureAfterChange": "     public void setStaticPattern(final String aPat)", "diff": ["-    public void setStaticPattern(String aPat)", "+    public void setStaticPattern(final String aPat)", "-        try {", "-            mConfig.setStaticPat(aPat);", "-        }", "-        catch (RESyntaxException ex) {", "-            throw new BuildException(\"Unable to parse staticPattern - \", ex);", "-        }", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    try {", "+                        mConfig.setStaticPat(aPat);", "+                    }", "+                    catch (RESyntaxException ex) {", "+                        throw new BuildException(", "+                            \"Unable to parse staticPattern - \", ex);", "+                    }", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abec8d8b2939eba5e3cd1ba0935d6d20", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 52, "signatureBeforeChange": "     public void setIgnoreImports(boolean aIgnore)", "signatureAfterChange": "     public void setIgnoreImports(final boolean aIgnore)", "diff": ["-    public void setIgnoreImports(boolean aIgnore)", "+    public void setIgnoreImports(final boolean aIgnore)", "-        mConfig.setIgnoreImports(aIgnore);", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setIgnoreImports(aIgnore);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1506684b8923efe24877f55c5ff98e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 66, "signatureBeforeChange": "     public void setLCurlyMethod(String aTo)", "signatureAfterChange": "     public void setLCurlyMethod(final String aTo)", "diff": ["-    public void setLCurlyMethod(String aTo)", "+    public void setLCurlyMethod(final String aTo)", "-        mConfig.setLCurlyMethod(extractLeftCurlyOption(aTo));", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setLCurlyMethod(extractLeftCurlyOption(aTo));", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beaa3a0346f030fe8c77202cfdaffe26", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 36, "signatureBeforeChange": "     public void setTypePattern(String aPat)", "signatureAfterChange": "     public void setTypePattern(final String aPat)", "diff": ["-    public void setTypePattern(String aPat)", "+    public void setTypePattern(final String aPat)", "-        try {", "-            mConfig.setTypePat(aPat);", "-        }", "-        catch (RESyntaxException ex) {", "-            throw new BuildException(\"Unable to parse typePattern - \", ex);", "-        }", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    try {", "+                        mConfig.setTypePat(aPat);", "+                    }", "+                    catch (RESyntaxException ex) {", "+                        throw new BuildException(", "+                            \"Unable to parse typePattern - \", ex);", "+                    }", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0ed500e4e9ac72a3c3c5e3679d89b08", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 56, "signatureBeforeChange": "     public void setIgnoreWhitespace(boolean aIgnore)", "signatureAfterChange": "     public void setIgnoreWhitespace(final boolean aIgnore)", "diff": ["-    public void setIgnoreWhitespace(boolean aIgnore)", "+    public void setIgnoreWhitespace(final boolean aIgnore)", "-        mConfig.setIgnoreWhitespace(aIgnore);", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setIgnoreWhitespace(aIgnore);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8976df24158f276ea1b650397c90ebf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void setAllowPackage(boolean aAllowed)", "signatureAfterChange": "     public void setAllowPackage(final boolean aAllowed)", "diff": ["-    public void setAllowPackage(boolean aAllowed)", "+    public void setAllowPackage(final boolean aAllowed)", "-        mConfig.setAllowPackage(aAllowed);", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setAllowPackage(aAllowed);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ceb133441396321e60854b121bd79698", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 60, "signatureBeforeChange": "     public void setIgnoreBraces(boolean aIgnore)", "signatureAfterChange": "     public void setIgnoreBraces(final boolean aIgnore)", "diff": ["-    public void setIgnoreBraces(boolean aIgnore)", "+    public void setIgnoreBraces(final boolean aIgnore)", "-        mConfig.setIgnoreBraces(aIgnore);", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setIgnoreBraces(aIgnore);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf042c0a0557f16b2ef8d4b33cc703b0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 44, "signatureBeforeChange": "     public void setHeaderLinesRegexp(boolean aIsRegexp)", "signatureAfterChange": "     public void setHeaderLinesRegexp(final boolean aIsRegexp)", "diff": ["-    public void setHeaderLinesRegexp(boolean aIsRegexp)", "+    public void setHeaderLinesRegexp(final boolean aIsRegexp)", "-        mConfig.setHeaderLinesRegexp(aIsRegexp);", "-    }", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setHeaderLinesRegexp(aIsRegexp);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d20bdf44e9ab10adee4450355a326b99", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 30, "signatureBeforeChange": "     public void setParamPattern(String aPat)", "signatureAfterChange": "     public void setParamPattern(final String aPat)", "diff": ["-    public void setParamPattern(String aPat)", "+    public void setParamPattern(final String aPat)", "-        try {", "-            mConfig.setParamPat(aPat);", "-        }", "-        catch (RESyntaxException ex) {", "-            throw new BuildException(\"Unable to parse paramPattern - \", ex);", "-        }", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    try {", "+                        mConfig.setParamPat(aPat);", "+                    }", "+                    catch (RESyntaxException ex) {", "+                        throw new BuildException(", "+                            \"Unable to parse paramPattern - \", ex);", "+                    }", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d336fb5348ced5a49d754b7947645d06", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 54, "signatureBeforeChange": "     public void setIllegalImports(String aPkgPrefixList)", "signatureAfterChange": "     public void setIllegalImports(final String aPkgPrefixList)", "diff": ["-    public void setIllegalImports(String aPkgPrefixList)", "+    public void setIllegalImports(final String aPkgPrefixList)", "-        mConfig.setIllegalImports(aPkgPrefixList);", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setIllegalImports(aPkgPrefixList);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6723ee052b16962c4751c8c56a16ff1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 28, "signatureBeforeChange": "     public void setPublicMemberPattern(String aPat)", "signatureAfterChange": "     public void setPublicMemberPattern(final String aPat)", "diff": ["-    public void setPublicMemberPattern(String aPat)", "+    public void setPublicMemberPattern(final String aPat)", "-        try {", "-            mConfig.setPublicMemberPat(aPat);", "-        }", "-        catch (RESyntaxException ex) {", "-            throw new BuildException(", "-                \"Unable to parse publicMemberPattern - \", ex);", "-        }", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    try {", "+                        mConfig.setPublicMemberPat(aPat);", "+                    }", "+                    catch (RESyntaxException ex) {", "+                        throw new BuildException(", "+                            \"Unable to parse publicMemberPattern - \", ex);", "+                    }", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4bec039b533c2857292682916f4675c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 40, "signatureBeforeChange": "     public void setMethodPattern(String aPat)", "signatureAfterChange": "     public void setMethodPattern(final String aPat)", "diff": ["-    public void setMethodPattern(String aPat)", "+    public void setMethodPattern(final String aPat)", "-        try {", "-            mConfig.setMethodPat(aPat);", "-        }", "-        catch (RESyntaxException ex) {", "-            throw new BuildException(\"Unable to parse methodPattern - \", ex);", "-        }", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    try {", "+                        mConfig.setMethodPat(aPat);", "+                    }", "+                    catch (RESyntaxException ex) {", "+                        throw new BuildException(", "+                            \"Unable to parse methodPattern - \", ex);", "+                    }", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed5f634fb144234deaa23d83b80b3b74", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 32, "signatureBeforeChange": "     public void setConstPattern(String aPat)", "signatureAfterChange": "     public void setConstPattern(final String aPat)", "diff": ["-    public void setConstPattern(String aPat)", "+    public void setConstPattern(final String aPat)", "-        try {", "-            mConfig.setStaticFinalPat(aPat);", "-        }", "-        catch (RESyntaxException ex) {", "-            throw new BuildException(\"Unable to parse constPattern - \" , ex);", "-        }", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    try {", "+                        mConfig.setStaticFinalPat(aPat);", "+                    }", "+                    catch (RESyntaxException ex) {", "+                        throw new BuildException(", "+                            \"Unable to parse constPattern - \" , ex);", "+                    }", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb5b37bdc5d8ba227bc4e8f4fa15c4ad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 70, "signatureBeforeChange": "     public void setLCurlyOther(String aTo)", "signatureAfterChange": "     public void setLCurlyOther(final String aTo)", "diff": ["-    public void setLCurlyOther(String aTo)", "+    public void setLCurlyOther(final String aTo)", "-        mConfig.setLCurlyOther(extractLeftCurlyOption(aTo));", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setLCurlyOther(extractLeftCurlyOption(aTo));", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc23ec32d15ccc7133f151f213a04d02", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void setAllowProtected(boolean aAllowed)", "signatureAfterChange": "     public void setAllowProtected(final boolean aAllowed)", "diff": ["-    public void setAllowProtected(boolean aAllowed)", "+    public void setAllowProtected(final boolean aAllowed)", "-        mConfig.setAllowProtected(aAllowed);", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setAllowProtected(aAllowed);", "+                }", "+            });"]}]}