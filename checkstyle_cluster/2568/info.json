{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b2d7c18da93bbac2b9d7cbfca3aad842", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dd38490351e888bb246039362cf2264", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java", "commitBeforeChange": "0dbbf3b83a9832eb381db6dc777916e9d7fa676f", "commitAfterChange": "16ae5032c5e25ad35475c9a0f2de578ea6e640e5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void postprocessLiteralNew(DetailAST ast)", "signatureAfterChange": "     private void postprocessLiteralNew(DetailAST newTokenAst)", "diff": ["-    private void postprocessLiteralNew(DetailAST ast) {", "-        final DetailAST typeNameAST = ast.getFirstChild();", "-        final AST nameSibling = typeNameAST.getNextSibling();", "-        if (nameSibling != null", "-                && nameSibling.getType() == TokenTypes.ARRAY_DECLARATOR) {", "+    private void postprocessLiteralNew(DetailAST newTokenAst) {", "+        final DetailAST typeNameAst = newTokenAst.getFirstChild();", "+        final AST nameSibling = typeNameAst.getNextSibling();", "+        if (nameSibling.getType() == TokenTypes.ARRAY_DECLARATOR) {", "-        final FullIdent typeIdent = FullIdent.createFullIdent(typeNameAST);", "+        final FullIdent typeIdent = FullIdent.createFullIdent(typeNameAst);", "-        final int lineNo = ast.getLineNo();", "-        final int colNo = ast.getColumnNo();", "+        final int lineNo = newTokenAst.getLineNo();", "+        final int colNo = newTokenAst.getColumnNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a51b3340e3aeb964de56992930c33aba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void checkComment(final DetailAST aAST, final TextBlock aComment)", "signatureAfterChange": "     private void checkComment(final DetailAST ast, final TextBlock comment)", "diff": ["-    private void checkComment(final DetailAST aAST, final TextBlock aComment)", "+    private void checkComment(final DetailAST ast, final TextBlock comment)", "-        if (aComment == null) {", "+        if (comment == null) {", "-                log(aAST.getLineNo(), \"javadoc.missing\");", "+                log(ast.getLineNo(), \"javadoc.missing\");", "-        if (mCheckFirstSentence) {", "-            checkFirstSentence(aAST, aComment);", "+        if (checkFirstSentence) {", "+            checkFirstSentence(ast, comment);", "-        if (mCheckHtml) {", "-            checkHtml(aAST, aComment);", "+        if (checkHtml) {", "+            checkHtml(ast, comment);", "-        if (mCheckEmptyJavadoc) {", "-            checkEmptyJavadoc(aComment);", "+        if (checkEmptyJavadoc) {", "+            checkEmptyJavadoc(comment);"]}]}