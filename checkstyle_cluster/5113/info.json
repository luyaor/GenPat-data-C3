{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "20e7fbd88b8c4a5c89aaa6b9b48926e5", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79b9b6605604cb65a92e62d9cb6d2b79", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IfHandler.java", "commitBeforeChange": "82f4a9852de874b4849a67f53f4e541d13db869b", "commitAfterChange": "24c13109a52b0b5085b5db2e8b0ae96655d9480c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void checkIndentation()", "signatureAfterChange": "      @Override     public void checkIndentation()", "diff": ["-            new LineWrappingHandler(getIndentCheck(), getMainAst()) {", "-                @Override", "-                public DetailAST findLastNode(DetailAST firstNode)", "-                {", "-                    return firstNode.findFirstToken(TokenTypes.RPAREN);", "-                }", "-            };", "+            new LineWrappingHandler(getIndentCheck(), getMainAst(),", "+                    getIfStatementRightParen(getMainAst()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f50278a64f30d3dea9cc10a79751588", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodDefHandler.java", "commitBeforeChange": "82f4a9852de874b4849a67f53f4e541d13db869b", "commitAfterChange": "24c13109a52b0b5085b5db2e8b0ae96655d9480c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void checkIndentation()", "signatureAfterChange": "      @Override     public void checkIndentation()", "diff": ["-            new LineWrappingHandler(getIndentCheck(), getMainAst()) {", "-                @Override", "-                public DetailAST findLastNode(DetailAST firstNode)", "-                {", "-                    return firstNode.getLastChild().getPreviousSibling();", "-                }", "-            };", "+            new LineWrappingHandler(getIndentCheck(), getMainAst(),", "+                getMethodDefParamRightParen(getMainAst()));"]}]}