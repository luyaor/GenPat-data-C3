{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a0d60fd126d52984397bb82cc55bf99", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01977851e917a774e2d4ab4614dee9b7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "fdd9ae82975be0bf0d8df991a50bad10b660aa2c", "commitAfterChange": "6fc674d4bf7864c0785c194f49dfabbfa13b9560", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     private void checkHeader()", "signatureAfterChange": "     private void checkHeader()", "diff": ["-        if (mConfig.getHeaderLines().length > mLines.length) {", "+        if (mConfig.getHeaderLines().length > mLines.length)", "+        {", "-        else {", "-            for (int i = 0; i < mConfig.getHeaderLines().length; i++) {", "-                if ((i != (mConfig.getHeaderIgnoreLineNo() - 1)) &&", "-                    !mConfig.getHeaderLines()[i].equals(mLines[i]))", "+        else", "+        {", "+            for (int i = 0; i < mConfig.getHeaderLines().length; i++)", "+            {", "+                String headerLine = mConfig.getHeaderLines()[i];", "+", "+                // TODO: RE creation should be cached to avoid", "+                // re-compilation when multiple files are checked", "+                boolean match =", "+                    mConfig.getHeaderLinesRegexp() ?", "+                    createRE(headerLine).match(mLines[i]) :", "+                    headerLine.equals(mLines[i]);", "+", "+                if ((i != (mConfig.getHeaderIgnoreLineNo() - 1)) && !match)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f83e31d1edcabd5cb8ca4c3e52fb3bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "83a1c2d3b34bd538da626562126e144cb5bb687d", "commitAfterChange": "f6c9d83def3c381d7485186b36e8c1d5e17a13ca", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     void setLines(String[] aLines)", "signatureAfterChange": "     void setLines(String[] aLines)", "diff": ["-            if ((mLines[i].length() > mConfig.getMaxLineLength()) &&", "-                !(mConfig.getIgnoreLineLengthRegexp().match(mLines[i])) &&", "+            String line = mLines[i];", "+            int realLength = Utils.lengthExpandedTabs(", "+                line, line.length(), mConfig.getTabWidth());", "+            if ((realLength > mConfig.getMaxLineLength()) &&", "+                !(mConfig.getIgnoreLineLengthRegexp().match(line)) &&", "-                  mLines[i].trim().startsWith(\"import\")))", "+                  line.trim().startsWith(\"import\")))"]}]}