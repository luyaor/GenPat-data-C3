{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76d2e410bc4696c57382a76ed7172aaf", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0efb25c66bf3369c01d68074ef3ba448", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpCheck.java", "commitBeforeChange": "d49eaaf2e42538bc7f01510eb3ca2812b253c98a", "commitAfterChange": "2880edd6554400955fb950bf8127311c436d2a7a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private boolean isIgnore(int startLine, FileText text, LineColumn start)", "signatureAfterChange": "     private boolean isIgnore(int startLine, FileText text, LineColumn start)", "diff": ["-        int startColumn;", "-        boolean ignore = false;", "-        int endLine;", "-        int endColumn;", "-        startColumn = start.getColumn();", "-        endLine = end.getLine();", "-        endColumn = end.getColumn();", "+        final int startColumn = start.getColumn();", "+        final int endLine = end.getLine();", "+        final int endColumn = end.getColumn();", "+        boolean ignore = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b063136e0a301c311cdd551c53902dad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpCheck.java", "commitBeforeChange": "d49eaaf2e42538bc7f01510eb3ca2812b253c98a", "commitAfterChange": "2880edd6554400955fb950bf8127311c436d2a7a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void findMatch()", "signatureAfterChange": "     private void findMatch()", "diff": ["-        int startLine;", "-        boolean foundMatch;", "-        boolean ignore = false;", "-        foundMatch = matcher.find();", "+        final boolean foundMatch = matcher.find();", "-            startLine = start.getLine();", "+            final int startLine = start.getLine();", "-            ignore = isIgnore(startLine, text, start);", "+            final boolean ignore = isIgnore(startLine, text, start);"]}]}