{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef11dc046e953ba5a6e960dd3bd9e0dc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6f2db3eb1f53358244663d88c614779", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java", "commitBeforeChange": "322b8da20f986a6bd18d59f3931b58bad3956a87", "commitAfterChange": "1e6dc8f4eab264568db73a663e9c0d9528d2ffe1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static String validate(Details details, RightCurlyOption bracePolicy,                                    boolean shouldStartLine, String targetSourceLine)", "signatureAfterChange": "     private static String validate(Details details, RightCurlyOption bracePolicy,                                    boolean shouldStartLine, String targetSourceLine)", "diff": ["-                && !hasLineBreakBefore(rcurly)) {", "+                && !hasLineBreakBefore(rcurly)", "+                && lcurly.getLineNo() != rcurly.getLineNo()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faf8e36d41fd92eee0ba55ddcec4cf39", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "b17515919bd8064e7c6c245956395407bd59a3e7", "commitAfterChange": "af047afee8216a4b0db9027dd013a1aad2be9494", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static boolean isOnTheSameLine(DetailAST ast, int lastStatementEnd,                                            int forStatementEnd)", "signatureAfterChange": "     private static boolean isOnTheSameLine(DetailAST ast, int lastStatementEnd,                                            int forStatementEnd, int lambdaStatementEnd)", "diff": ["-                                           int forStatementEnd) {", "-        return lastStatementEnd == ast.getLineNo() && forStatementEnd != ast.getLineNo();", "+                                           int forStatementEnd, int lambdaStatementEnd) {", "+        return lastStatementEnd == ast.getLineNo() && forStatementEnd != ast.getLineNo()", "+                && lambdaStatementEnd != ast.getLineNo();"]}]}