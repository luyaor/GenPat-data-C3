{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e6144ee234ac19405f13de803eae7ce", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12452b9ee3d1e6696c75d9dd681b0afd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/VerifierImpl.java", "commitBeforeChange": "fa128598e1f70bbfb8a953dc8cb8b791a5fa67d2", "commitAfterChange": "d3f39e6b87a10ee26aa8da532b545e54090e7761", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void verifyVariable(MyVariable aVar, boolean aInInterface)", "signatureAfterChange": "     public void verifyVariable(MyVariable aVar, boolean aInInterface)", "diff": ["-            if (mods.containsPrivate()) {", "-                System.out.println(\"Need to check for \" + aVar.getText());", "-            }", "+            // Logic to detect unused variables", "+            //if (mods.containsPrivate()) {", "+            //    System.out.println(\"Need to check for \" + aVar.getText());", "+            //}", "+                else if (mods.containsPublic() &&", "+                         mConfig.getPublicMemberRegexp().match(aVar.getText()))", "+                {", "+                    // silently allow", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a48bac79c433ca1c1dd8486e50a22b62", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "e44cd4ec43a25cac72924e04d7b4ca7fa9fa10ee", "commitAfterChange": "4bbe4acd319fa60dac09d28aaa9f7b18f18dee1f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     void verifyVariable(MyVariable aVar)", "signatureAfterChange": "     void verifyVariable(MyVariable aVar)", "diff": ["-                if (mods.containsFinal()) {", "-                    // Handle the serialVersionUID constant which is used for", "-                    // Serialization. Cannot enforce rules on it. :-)", "-                    if (!\"serialVersionUID\".equals(aVar.getText())) {", "-                        checkVariable(aVar,", "-                                      mConfig.getStaticFinalRegexp(),", "-                                      mConfig.getStaticFinalPat());", "-                    }", "-                }", "-                else {", "+                if (!mods.containsFinal()) {"]}]}