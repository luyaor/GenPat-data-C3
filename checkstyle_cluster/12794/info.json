{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b75dd62c0ad8455d5cdfff2bc61d074c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16707eefff12509f775d22a304d6678f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalThrowsCheck.java", "commitBeforeChange": "7dfac0f667e848d2642ee5b5e8fd11cd908aca62", "commitAfterChange": "3c63c31901ca2e6714fe922f695135718198dd06", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aDetailAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aDetailAST)", "diff": ["-        while (token != null) {", "-            if (token.getType() != TokenTypes.COMMA) {", "-                final FullIdent ident = FullIdent.createFullIdent(token);", "-                if (isIllegalClassName(ident.getText())) {", "-                    log(token, \"illegal.throw\", ident.getText());", "+        // Check if the method with the given name should be ignored.", "+        if (!(shouldIgnoreMethod(aDetailAST.getParent().findFirstToken(", "+                                     TokenTypes.IDENT).getText())))", "+        {", "+            while (token != null) {", "+                if (token.getType() != TokenTypes.COMMA) {", "+                    final FullIdent ident = FullIdent.createFullIdent(token);", "+                    if (isIllegalClassName(ident.getText())) {", "+                        log(token, \"illegal.throw\", ident.getText());", "+                    }", "+                token = token.getNextSibling();", "+        }", "+    }", "-            token = token.getNextSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1698a9433990c874261f9455c4750cc9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheck.java", "commitBeforeChange": "daf8230919a8ffc9058a7ce129f5c60309739a00", "commitAfterChange": "a0012d03eb6a7ebc42f1986f09a8fe698c09eeb0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected boolean hasText(final DetailAST aSlistAST)", "signatureAfterChange": "     protected boolean hasText(final DetailAST aSlistAST)", "diff": ["-        final DetailAST rcurlyAST = aSlistAST.findFirstToken(TokenTypes.RCURLY);", "+        final DetailAST rightCurly = aSlistAST.findFirstToken(TokenTypes.RCURLY);", "+        final DetailAST rcurlyAST = rightCurly != null", "+                ? rightCurly : aSlistAST.getParent().findFirstToken(TokenTypes.RCURLY);"]}]}