{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d84dbd6f99008149a853ef05f6cf0bcd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fa8b8bc27db384de7f478d82130543e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/MethodLeftCurlyCheck.java", "commitBeforeChange": "bf1b83ee6f1bf2f305c20b1dab80b2f7d5981e39", "commitAfterChange": "fb97056b9b58f7b33c53348da592c2896b72e575", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        final DetailAST brace = aAST.getLastChild();", "-        // TODO: should check for modifiers", "-        final DetailAST startToken;", "-        if (aAST.getType() == TokenTypes.CTOR_DEF) {", "-            startToken = (DetailAST) aAST.getFirstChild().getNextSibling();", "+        final DetailAST openingBrace = aAST.findFirstToken(TokenTypes.SLIST);", "+", "+        if (openingBrace != null) {", "+            verifyBrace(openingBrace, aAST);", "-        else {", "-            startToken = (DetailAST)", "-                aAST.getFirstChild().getNextSibling().getNextSibling();", "-        }", "-        verifyBrace(brace, startToken);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7e51ab744778742adacbe2bf776847f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java", "commitBeforeChange": "f5efd9eb390e7ad95dfb2c7931101556de8a8253", "commitAfterChange": "0ac000841c1535baabe230787649013331289f3f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void visitForDef(DetailAST aAST)", "signatureAfterChange": "     private void leaveForEach(DetailAST aForEach)", "diff": ["-    private void visitForDef(DetailAST aAST)", "+     */", "+    private void leaveForEach(DetailAST aForEach)", "+    {", "+        final DetailAST paramDef =", "+            aForEach.findFirstToken(TokenTypes.PARAMETER_DEF);", "+        final DetailAST paramName = paramDef.findFirstToken(TokenTypes.IDENT);", "+        mCurrentVariables.push(paramName.getText());", "+    }"]}]}