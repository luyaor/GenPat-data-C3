{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96704f562cc29edccff6299c6e3995bd", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23178b8628113a77d078195803a85514", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "9f93c2258ef0512b743f5927be201ff55a9d5c57", "commitAfterChange": "23c8774d2e2fd245de1e5df02758fd23702c565e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private boolean shouldCheck(final DetailAST ast)", "signatureAfterChange": "     private boolean shouldCheck(final DetailAST ast)", "diff": ["-        final Scope customScope =", "-            ScopeUtils.inInterfaceOrAnnotationBlock(ast)", "-                ? Scope.PUBLIC : declaredScope;", "+        final Scope customScope;", "+", "+        if (ScopeUtils.inInterfaceOrAnnotationBlock(ast)) {", "+            customScope = Scope.PUBLIC;", "+        }", "+        else {", "+            customScope = declaredScope;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bfa645ce6317eb79ff94f7aed863583", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocVariableCheck.java", "commitBeforeChange": "9f93c2258ef0512b743f5927be201ff55a9d5c57", "commitAfterChange": "23c8774d2e2fd245de1e5df02758fd23702c565e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean shouldCheck(final DetailAST ast)", "signatureAfterChange": "     private boolean shouldCheck(final DetailAST ast)", "diff": ["-            customScope =", "-                ScopeUtils.inInterfaceOrAnnotationBlock(ast)", "-                    ? Scope.PUBLIC : declaredScope;", "+", "+            if (ScopeUtils.inInterfaceOrAnnotationBlock(ast)) {", "+                customScope = Scope.PUBLIC;", "+            }", "+            else {", "+                customScope = declaredScope;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6533da6615b782e50504bd76c22b7745", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "9f93c2258ef0512b743f5927be201ff55a9d5c57", "commitAfterChange": "23c8774d2e2fd245de1e5df02758fd23702c565e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean shouldCheck(final DetailAST ast)", "signatureAfterChange": "     private boolean shouldCheck(final DetailAST ast)", "diff": ["-        final Scope customScope =", "-            ScopeUtils.inInterfaceOrAnnotationBlock(ast)", "-            ? Scope.PUBLIC : declaredScope;", "+        final Scope customScope;", "+", "+        if (ScopeUtils.inInterfaceOrAnnotationBlock(ast)) {", "+            customScope = Scope.PUBLIC;", "+        }", "+        else {", "+            customScope = declaredScope;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc6593dde96d26e3ef925b2df705ddba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "9f93c2258ef0512b743f5927be201ff55a9d5c57", "commitAfterChange": "23c8774d2e2fd245de1e5df02758fd23702c565e", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     private static Scope calculateScope(final DetailAST ast)", "signatureAfterChange": "     private static Scope calculateScope(final DetailAST ast)", "diff": ["-        return ScopeUtils.inInterfaceOrAnnotationBlock(ast) ? Scope.PUBLIC", "-                : declaredScope;", "+", "+        if (ScopeUtils.inInterfaceOrAnnotationBlock(ast)) {", "+            return Scope.PUBLIC;", "+        }", "+        else {", "+            return declaredScope;", "+        }"]}]}