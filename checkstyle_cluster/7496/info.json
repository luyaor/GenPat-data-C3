{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac5709a9a75f9237f853992e4a0f2992", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f554edee4c8f61b7e90cb51b125a0e4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LocalVariableNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     protected final boolean mustCheckName(DetailAST aAST)", "signatureAfterChange": "      @Override     protected final boolean mustCheckName(DetailAST ast)", "diff": ["-    protected final boolean mustCheckName(DetailAST aAST)", "+    protected final boolean mustCheckName(DetailAST ast)", "-            aAST.findFirstToken(TokenTypes.MODIFIERS);", "+            ast.findFirstToken(TokenTypes.MODIFIERS);", "-        if (mAllowOneCharVarInForLoop && isForLoopVariable(aAST)) {", "+        if (allowOneCharVarInForLoop && isForLoopVariable(ast)) {", "-                    aAST.findFirstToken(TokenTypes.IDENT).getText();", "+                    ast.findFirstToken(TokenTypes.IDENT).getText();", "-        return (!isFinal && ScopeUtils.isLocalVariableDef(aAST));", "+        return (!isFinal && ScopeUtils.isLocalVariableDef(ast));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f6b3c4a3f39c9717c9f00153fe4f0d5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "da2d75a1780c1691dc4aa45489f9e9674b1c652e", "commitAfterChange": "36b91a59d62c9505b835717f00f470c499cf9b30", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private static boolean isSameVariables(DetailAST ast1, DetailAST ast2)", "signatureAfterChange": "     private static boolean isSameVariables(DetailAST ast1, DetailAST ast2)", "diff": ["-            findClassOrConstructorOrMethodInWhichItIsDefined(ast1);", "+            findFirstUpperNamedBlock(ast1);", "-            findClassOrConstructorOrMethodInWhichItIsDefined(ast2);", "-", "-        final String identifierOfAst1 =", "-            classOrMethodOfAst1.findFirstToken(TokenTypes.IDENT).getText();", "-        final String identifierOfAst2 =", "-            classOrMethodOfAst2.findFirstToken(TokenTypes.IDENT).getText();", "-", "-        return identifierOfAst1.equals(identifierOfAst2);", "+            findFirstUpperNamedBlock(ast2);", "+        return classOrMethodOfAst1 == classOrMethodOfAst2;"]}]}