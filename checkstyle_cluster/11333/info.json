{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7406b938c3dd8fd7498c1bb6541e990", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0562dbcfeebd7f6b1c162694a165acaf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TrailingCommentCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private boolean isLegalComment(final TextBlock aComment)", "signatureAfterChange": "     private boolean isLegalComment(final TextBlock comment)", "diff": ["-    private boolean isLegalComment(final TextBlock aComment)", "+    private boolean isLegalComment(final TextBlock comment)", "-        if (mLegalComment == null) {", "+        if (legalComment == null) {", "-        if (aComment.getStartLineNo() != aComment.getEndLineNo()) {", "+        if (comment.getStartLineNo() != comment.getEndLineNo()) {", "-        String commentText = aComment.getText()[0];", "+        String commentText = comment.getText()[0];", "-        return mLegalComment.matcher(commentText).find();", "+        return legalComment.matcher(commentText).find();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bc72f67c9f2ec0df88d9857f20e75bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "9e29d2c98961b47c897c02e75dd2a672d1045b31", "commitAfterChange": "a031901307ecd3b1ae035d7ac185bc221472b396", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void checkHtml(TextBlock aComment)", "signatureAfterChange": "     private void checkHtml(final DetailAST aAST, final TextBlock aComment)", "diff": ["-    private void checkHtml(TextBlock aComment)", "+    private void checkHtml(final DetailAST aAST, final TextBlock aComment)", "+        final List typeParameters =", "+            CheckUtils.getTypeParameterNames(aAST);", "-            if (!isSingleTag(htag) && !htag.getId().equals(lastFound)) {", "+            if (!isSingleTag(htag)", "+                && !htag.getId().equals(lastFound)", "+                && !typeParameters.contains(htag.getId()))", "+            {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8e1b35cff584039a87fdaf33fd2620f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void checkHtml(final DetailAST aAST, final TextBlock aComment)", "signatureAfterChange": "     private void checkHtml(final DetailAST ast, final TextBlock comment)", "diff": ["-    private void checkHtml(final DetailAST aAST, final TextBlock aComment)", "+    private void checkHtml(final DetailAST ast, final TextBlock comment)", "-        final int lineno = aComment.getStartLineNo();", "+        final int lineno = comment.getStartLineNo();", "-        final String[] text = aComment.getText();", "+        final String[] text = comment.getText();", "-            CheckUtils.getTypeParameterNames(aAST);", "+            CheckUtils.getTypeParameterNames(ast);"]}]}