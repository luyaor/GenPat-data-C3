{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "154d0063487d3ca29c7f74560a732286", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a1d56d708b6648b8ebd3bf6fc7cd3ff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final DetailAST nextToken = aAST.getNextSibling();", "+        final DetailAST nextToken = ast.getNextSibling();", "-            final int astType = aAST.getType();", "+            final int astType = ast.getType();", "-                if (isTypeField(aAST) && !hasEmptyLineAfter(aAST)) {", "-                    if (mAllowNoEmptyLineBetweenFields", "+                if (iastypeField(ast) && !hasEmptyLineAfter(ast)) {", "+                    if (allowNoEmptyLineBetweenFields", "-                    else if (!mAllowNoEmptyLineBetweenFields) {", "+                    else if (!allowNoEmptyLineBetweenFields) {", "-                if (astType != nextToken.getType() && !hasEmptyLineAfter(aAST)", "-                    || (aAST.getLineNo() > 1 && !hasEmptyLineBefore(aAST)", "-                            && aAST.getPreviousSibling() == null))", "+                if (astType != nextToken.getType() && !hasEmptyLineAfter(ast)", "+                    || (ast.getLineNo() > 1 && !hasEmptyLineBefore(ast)", "+                            && ast.getPreviousSibling() == null))", "-                if (aAST.getLineNo() > 1 && !hasEmptyLineBefore(aAST)) {", "-                    log(aAST.getLineNo(), \"empty.line.separator\", aAST.getText());", "+                if (ast.getLineNo() > 1 && !hasEmptyLineBefore(ast)) {", "+                    log(ast.getLineNo(), \"empty.line.separator\", ast.getText());", "-                if (!hasEmptyLineAfter(aAST)) {", "+                if (!hasEmptyLineAfter(ast)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5ba58b4132fc83832409dcc0505e438", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java", "commitBeforeChange": "592d5d86b9cedfa04ad9990d23b244414aaad685", "commitAfterChange": "a5031acb330edaa2311acbce4945f7b44fc76b29", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-                if (isTypeField(aAST) && !hasBlankLineAfter(aAST)) {", "-                    log(nextToken.getLineNo(),", "-                            \"empty.line.separator\", nextToken.getText());", "+                if (isTypeField(aAST) && !hasEmptyLineAfter(aAST)) {", "+                    log(nextToken.getLineNo(), \"empty.line.separator\", nextToken.getText());", "-                if (astType != nextToken.getType()", "-                    && !hasBlankLineAfter(aAST))", "+                if (astType != nextToken.getType() && !hasEmptyLineAfter(aAST)", "+                    || (aAST.getLineNo() > 1 && !hasEmptyLineBefore(aAST)", "+                            && aAST.getPreviousSibling() == null))", "-                    log(nextToken.getLineNo(),", "-                            \"empty.line.separator\", nextToken.getText());", "+                    log(nextToken.getLineNo(), \"empty.line.separator\", nextToken.getText());", "+            case TokenTypes.PACKAGE_DEF:", "+                if (aAST.getLineNo() > 1 && !hasEmptyLineBefore(aAST)) {", "+                    log(aAST.getLineNo(), \"empty.line.separator\", aAST.getText());", "+                }", "-                if (!hasBlankLineAfter(aAST)) {", "-                    log(nextToken.getLineNo(),", "-                            \"empty.line.separator\", nextToken.getText());", "+                if (!hasEmptyLineAfter(aAST)) {", "+                    log(nextToken.getLineNo(), \"empty.line.separator\", nextToken.getText());"]}]}