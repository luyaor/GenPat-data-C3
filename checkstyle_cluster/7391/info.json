{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e2bc616006a04cbe184060428034ff59", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b3b719cd4f76524a82552e9c99b31dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheckTest.java", "commitBeforeChange": "4687b0b801bdcc50c763268e33eabd370ad8a85d", "commitAfterChange": "a29f01a95b9dee1e64ec7ed91b4d0876eb82c0bf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testTagSeverity() throws Exception", "signatureAfterChange": "      @Test     public void testTagPrintSeverityTrue() throws Exception", "diff": ["-    public void testTagSeverity() throws Exception {", "+    public void testTagPrintSeverityTrue() throws Exception {", "-        verify(checkConfig, getPath(\"InputWriteTag.java\"), expected);", "+        final boolean printSeverity = true;", "+        verify(checkConfig, printSeverity, getPath(\"InputWriteTag.java\"), expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "781000c60c6add61bd67fbc023763ed1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheckTest.java", "commitBeforeChange": "b0240a0200663fbf1d3146d1aefe12207fdde4af", "commitAfterChange": "9aa72722de7b5a4ffb5d50945c7bce8b58f25e8e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void failingTestOverlapping() throws Exception", "signatureAfterChange": "      public void testOverlapping() throws Exception", "diff": ["-    public void failingTestOverlapping() throws Exception", "+    public void testOverlapping() throws Exception", "-        verify(createChecker(checkConfig), checkedFiles, path, expected);", "+        final Checker checker = createChecker(checkConfig);", "+        verify(checker, checkedFiles, path, expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac03c322bc6bf9efde65abed129715a6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheckTest.java", "commitBeforeChange": "c56dce9222a819b4741b4c0cd664d38c58b31050", "commitAfterChange": "866daeeb2ad31e6a5a78235aa46819d9f966ee1c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testNpe() throws Exception", "signatureAfterChange": "      @Test     public void testNoNpeWhenBlockCommentEndsClassFile() throws Exception", "diff": ["-    public void testNpe() throws Exception {", "+    public void testNoNpeWhenBlockCommentEndsClassFile() throws Exception {", "-        verify(checkConfig, getPath(\"InputCommentsIndentationNpe.java\"), expected);", "+        final String testInputFile = \"InputCommentsIndentationNoNpe.java\";", "+        verify(checkConfig, getPath(testInputFile), expected);"]}]}