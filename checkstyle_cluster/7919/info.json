{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fea188f3b1723bc4fb991b196d301594", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "385795faafc5f1c5f2e2bf9fed96f52a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.java", "commitBeforeChange": "4ea84c811b7044f486971a16f4c73dd5ad4480ba", "commitAfterChange": "0b6d22e69b9202b6b11ebc86a6dc343d1774451b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     protected final void visitTokenHook(DetailAST ast)", "signatureAfterChange": "      @Override     protected final void visitTokenHook(DetailAST ast)", "diff": ["-        incrementCurrentValue(BigInteger.ONE);", "+        if (switchBlockAsSingleDecisionPoint) {", "+            if (ast.getType() != TokenTypes.LITERAL_CASE) {", "+                incrementCurrentValue(BigInteger.ONE);", "+            }", "+        }", "+        else if (ast.getType() != TokenTypes.LITERAL_SWITCH) {", "+            incrementCurrentValue(BigInteger.ONE);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91e0357d30a928c78bc9daf0b3371e3e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "b8d742ecd2c3327e8f11b55d907c21206b5ccb79", "commitAfterChange": "d92ceb81a67bb10b98f5ce305f839ba535a1c6ee", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     void verifyType(MyModifierSet aMods, MyCommonAST aType)", "signatureAfterChange": "     void verifyType(MyModifierSet aMods, MyCommonAST aType)", "diff": ["-        else if (!mConfig.isAllowNoAuthor()", "-                 && (mInScope.size() == 0)", "-                 // don't check author for inner classes", "-                 && (MATCH_JAVADOC_AUTHOR.grep(jd).length == 0))", "-        {", "-            mMessages.add(lineNo, \"type.missingAuthorTag\");", "+        else if (mInScope.size() == 0) {", "+            // don't check author/version for inner classes", "+            if (!mConfig.isAllowNoAuthor()", "+                && (MATCH_JAVADOC_AUTHOR.grep(jd).length == 0))", "+            {", "+                mMessages.add(lineNo, \"type.missingTag\", \"@author\");", "+            }", "+            if (mConfig.isRequireVersion() ", "+                && (MATCH_JAVADOC_VERSION.grep(jd).length == 0))", "+            {", "+                mMessages.add(lineNo, \"type.missingTag\", \"@version\");", "+            }"]}]}