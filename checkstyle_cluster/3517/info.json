{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "709903c646f4d332c1c6098be00993cd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8180f4b822553bf7bcfa5a4cc315a444", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "commitAfterChange": "78e9ce870170ca3ef88fd78f8e0af0681c958eb3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void testMissingBraces()         throws Exception", "signatureAfterChange": "      public void testMissingBraces() throws Exception", "diff": ["-    public void testMissingBraces()", "-        throws Exception", "+    public void testMissingBraces() throws Exception", "-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(LeftCurlyCheck.class);", "-        verify(checkConfig, getPath(\"InputBraces.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputBraces.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "841d79eb2df48bb6cf0e39a22a6b6393", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "a1422eed4e0261824f48a1ddf647dd90cb67063a", "commitAfterChange": "aac769a0be0dc77d3130a86fac15c9fcda254170", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "          @Test     public void testCustomMessages() throws Exception", "signatureAfterChange": "      @Test     public void testCustomMessages() throws CheckstyleException", "diff": ["-    ", "+", "-    public void testCustomMessages() throws Exception", "+    public void testCustomMessages() throws CheckstyleException", "-        assertTrue(((DefaultConfiguration) grandchildren[0]).getMessages().containsKey(\"name.invalidPattern\"));", "+        assertTrue(((DefaultConfiguration) grandchildren[0]).getMessages()", "+            .containsKey(\"name.invalidPattern\"));"]}]}