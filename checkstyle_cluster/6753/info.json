{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a82ba80acbe680f67b862af93a88345", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0863f7fd142fca02fc3544e39ae8327b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule233nonascii/AvoidEscapedUnicodeCharactersTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void unicodeEscapesTest() throws Exception", "signatureAfterChange": "      @Test     public void unicodeEscapesTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"AvoidEscapedUnicodeCharacters\");", "-        final String filePath = builder.getFilePath(\"InputAvoidEscapedUnicodeCharacters\");", "+        final Configuration checkConfig = getCheckConfig(\"AvoidEscapedUnicodeCharacters\");", "+        final String filePath = getPath(\"InputAvoidEscapedUnicodeCharacters.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aba78b65f092aef8eccefeab7ee6ce86", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule3421overloadsplit/OverloadMethodsDeclarationOrderTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void overloadMethodsTest() throws Exception", "signatureAfterChange": "      @Test     public void overloadMethodsTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"OverloadMethodsDeclarationOrder\");", "-        final String filePath = builder.getFilePath(\"InputOverloadMethodsDeclarationOrder\");", "+        final Configuration checkConfig = getCheckConfig(\"OverloadMethodsDeclarationOrder\");", "+        final String filePath = getPath(\"InputOverloadMethodsDeclarationOrder.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9af912472f65e4404db696bfaaa5e56", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4821onevariableperline/MultipleVariableDeclarationsTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void multipleVariableDeclarationsTest() throws Exception", "signatureAfterChange": "      @Test     public void multipleVariableDeclarationsTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"MultipleVariableDeclarations\");", "-        final String filePath = builder.getFilePath(\"InputMultipleVariableDeclarations\");", "+        final Configuration checkConfig = getCheckConfig(\"MultipleVariableDeclarations\");", "+        final String filePath = getPath(\"InputMultipleVariableDeclarations.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}]}