{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4bf03d255394f2f4c80288ed6ce9d7aa", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1073a6ec26521193b1ca0ed30000a55a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "a015df25f2f89a8bbd075ab0ac2682b5e346a462", "commitAfterChange": "06b377b34cb81a6ba3fe48880c31a9a093b2a473", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public void fireFileFinished(String aFileName)", "signatureAfterChange": "     public void fireFileFinished(String aFileName)", "diff": ["-        if (mFilters.accept(evt)) {", "-            final Iterator it = mListeners.iterator();", "-            while (it.hasNext()) {", "-                final AuditListener listener = (AuditListener) it.next();", "-                listener.fileFinished(evt);", "-            }", "+        final Iterator it = mListeners.iterator();", "+        while (it.hasNext()) {", "+            final AuditListener listener = (AuditListener) it.next();", "+            listener.fileFinished(evt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c19d4f8be8419b9f94935bcd7c775cc7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "a015df25f2f89a8bbd075ab0ac2682b5e346a462", "commitAfterChange": "06b377b34cb81a6ba3fe48880c31a9a093b2a473", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected void fireAuditFinished()", "signatureAfterChange": "     protected void fireAuditFinished()", "diff": ["-        if (mFilters.accept(evt)) {", "-            final Iterator it = mListeners.iterator();", "-            while (it.hasNext()) {", "-                final AuditListener listener = (AuditListener) it.next();", "-                listener.auditFinished(evt);", "-            }", "+        final Iterator it = mListeners.iterator();", "+        while (it.hasNext()) {", "+            final AuditListener listener = (AuditListener) it.next();", "+            listener.auditFinished(evt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d34288890cd0fe82c10280f749471226", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "a015df25f2f89a8bbd075ab0ac2682b5e346a462", "commitAfterChange": "06b377b34cb81a6ba3fe48880c31a9a093b2a473", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void fireFileStarted(String aFileName)", "signatureAfterChange": "     public void fireFileStarted(String aFileName)", "diff": ["-        if (mFilters.accept(evt)) {", "-            final Iterator it = mListeners.iterator();", "-            while (it.hasNext()) {", "-                final AuditListener listener = (AuditListener) it.next();", "-                listener.fileStarted(evt);", "-            }", "+        final Iterator it = mListeners.iterator();", "+        while (it.hasNext()) {", "+            final AuditListener listener = (AuditListener) it.next();", "+            listener.fileStarted(evt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3da74015a838396415120c507ac462d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "a015df25f2f89a8bbd075ab0ac2682b5e346a462", "commitAfterChange": "06b377b34cb81a6ba3fe48880c31a9a093b2a473", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected void fireAuditStarted()", "signatureAfterChange": "     protected void fireAuditStarted()", "diff": ["-        if (mFilters.accept(evt)) {", "-            final Iterator it = mListeners.iterator();", "-            while (it.hasNext()) {", "-                final AuditListener listener = (AuditListener) it.next();", "-                listener.auditStarted(evt);", "-            }", "+        final Iterator it = mListeners.iterator();", "+        while (it.hasNext()) {", "+            final AuditListener listener = (AuditListener) it.next();", "+            listener.auditStarted(evt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa1320cf73653ce891c81fe472e03392", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "commitBeforeChange": "42484a32cd4e1319134cec9a14b30f36f95383f6", "commitAfterChange": "d7df762a65d0b123331588b5da385ac00c40b598", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        if (CheckUtils.isOperatorTokenPartOfGenericDeclaration(aAST)) {", "-            return;", "-        }", "-        else if (wOp == OperatorWrapOption.NL", "-                && !text.equals(currentLine.trim())", "-                && (currentLine.substring(colNo + text.length())", "-                    .trim().length() == 0))", "+        if (wOp == OperatorWrapOption.NL", "+            && !text.equals(currentLine.trim())", "+            && (currentLine.substring(colNo + text.length())", "+                .trim().length() == 0))"]}]}