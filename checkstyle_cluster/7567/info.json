{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9cea2c992af58b743c2fb082c2d9ceed", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c70c84fa6a8e36106c805a29fff49df", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "1c8180d74fbed939e5de56ee87760032f42f8df6", "commitAfterChange": "04ceb4b91f4e66439479406834f42014c5be62ed", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private DetailAST getFirstNodeInsideForWhileDoWhileBlocks(             DetailAST block, DetailAST variable)", "signatureAfterChange": "     private DetailAST getFirstNodeInsideForWhileDoWhileBlocks(             DetailAST block, DetailAST variable)", "diff": ["-                else if (currentNodeType == TokenTypes.VARIABLE_DEF", "-                        || currentNodeType == TokenTypes.EXPR)", "+                else if (currentNodeType != TokenTypes.VARIABLE_DEF", "+                        && currentNodeType != TokenTypes.EXPR)", "-                    // no code", "-                }", "-                else {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8d8ecf7af429cfc0d0023a14d952b95", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Comment.java", "commitBeforeChange": "6ee4a0f805d528cdee03cfc175502d15b5722dab", "commitAfterChange": "a707819ab73dded873917fd33e22d45d0e3e1860", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public boolean intersects(int startLine, int startCol,                               int endLine, int endCol)", "signatureAfterChange": "      @Override     public boolean intersects(int startLine, int startCol,                               int endLine, int endCol)", "diff": ["-        return !(thisEnd < inStart || inEnd < thisStart);", "+        return thisEnd >= inStart && inEnd >= thisStart;"]}]}