{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "63ba0e68c78e9faec40efe32d274e39e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fd0ba20e35a6b342a63804cfc5504bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AnnotationUtility.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static boolean containsAnnotation(final DetailAST aAST,         String aAnnotation)", "signatureAfterChange": "     public static boolean containsAnnotation(final DetailAST ast,         String annotation)", "diff": ["-    public static boolean containsAnnotation(final DetailAST aAST,", "-        String aAnnotation)", "+    public static boolean containsAnnotation(final DetailAST ast,", "+        String annotation)", "-        return AnnotationUtility.getAnnotation(aAST, aAnnotation) != null;", "+        return AnnotationUtility.getAnnotation(ast, annotation) != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d73490d8f6334d51d71d2f17c0439c89", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private boolean checkSwitch(final DetailAST aAST, boolean aUseContinue)", "signatureAfterChange": "     private boolean checkSwitch(final DetailAST ast, boolean useContinue)", "diff": ["-    private boolean checkSwitch(final DetailAST aAST, boolean aUseContinue)", "+    private boolean checkSwitch(final DetailAST ast, boolean useContinue)", "-        DetailAST caseGroup = aAST.findFirstToken(TokenTypes.CASE_GROUP);", "+        DetailAST caseGroup = ast.findFirstToken(TokenTypes.CASE_GROUP);", "-            isTerminated &= isTerminated(caseBody, false, aUseContinue);", "+            isTerminated &= isTerminated(caseBody, false, useContinue);"]}]}