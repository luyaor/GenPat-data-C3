{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "962079dd02194b4776258d27ff48b51f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80f41ff78716e1b856fef0ca0b587d73", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/GeneratedJava14LexerTest.java", "commitBeforeChange": "a8b8375b1db65b131938111ff283baed771161ed", "commitAfterChange": "dcb3029c008907edf6aa4b59a51349f0ca94f54b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testUnexpectedChar() throws IOException, Exception", "signatureAfterChange": "     @Test     public void testUnexpectedChar() throws IOException, Exception", "diff": ["-            \"8:10: Got an exception - Unexpected character 0xa9 in identifier\",", "+            \"8:9: Name '\u00e9' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/tools/\"", "-                + \"checkstyle/grammars/InputGrammar.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getPath(\"grammars/InputGrammar.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98381c8db51c4e371b646f2b34bc8a17", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/PackageAnnotationTest.java", "commitBeforeChange": "aee8f8230b26d2a832be917ebe593283400365a0", "commitAfterChange": "5d9f7028d78ae69dd2d21da82e581c4498abec03", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testWithoutAnnotation() throws Exception", "signatureAfterChange": "      @Test     public void testWithoutAnnotation() throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/tools/checkstyle/annotation/InputPackageAnnotationCheckTest2.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputPackageAnnotationCheckTest2.java\"), expected);"]}]}