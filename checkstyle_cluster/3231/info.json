{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2019515313f1aebf604dfc10f4d39337", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "394e41f50cf3c3e4fa9d64558acd43b0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     private List<ExceptionInfo> getThrows(DetailAST ast)", "signatureAfterChange": "     private List<ExceptionInfo> getThrows(DetailAST ast)", "diff": ["-                    final FullIdent fi = FullIdent.createFullIdent(child);", "-                    final ExceptionInfo ei = new ExceptionInfo(createClassInfo(new Token(fi),", "-                            getCurrentClassName()));", "-                    retVal.add(ei);", "+                    final FullIdent ident = FullIdent.createFullIdent(child);", "+                    final ExceptionInfo exceptionInfo = new ExceptionInfo(", "+                            createClassInfo(new Token(ident), getCurrentClassName()));", "+                    retVal.add(exceptionInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ca8afb26ebaa771617b0d852505c991", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "77945f29623d52060c05e643679a7004e6b8e18d", "commitAfterChange": "f09c190dff9530b6b47ec14b3ac6d2162ba77b26", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws BuildException", "diff": ["-                DefaultContext context = new DefaultContext();", "-                ClassLoader loader =", "+                final DefaultContext context = new DefaultContext();", "+                final ClassLoader loader =", "-                ", "+", "-                    ModuleFactory moduleFactory =", "+                    final ModuleFactory moduleFactory =", "-                        mPackageNamesFile.getAbsolutePath());", "+                            mPackageNamesFile.getAbsolutePath());", "-                AuditListener[] listeners = getListeners();", "+                final AuditListener[] listeners = getListeners();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab3f1b15d8657b76592e8b96ef688036", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck.java", "commitBeforeChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "commitAfterChange": "29027109bf962f47b6a6000fdca69b5679ce4b43", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private URI resolveHeaderFile() throws IOException", "signatureAfterChange": "     private URI resolveHeaderFile() throws IOException", "diff": ["-            final URL url = new URL(mFilename);", "+            final URL url = new URL(filename);", "-            final File file = new File(mFilename);", "+            final File file = new File(filename);", "-                            .getResource(mFilename);", "+                            .getResource(filename);", "-                        throw new FileNotFoundException(mFilename);", "+                        throw new FileNotFoundException(filename);", "-                    throw new FileNotFoundException(mFilename);", "+                    throw new FileNotFoundException(filename);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c58e6e35cfc2867ce4fe7be19b92f86f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "f34eba11cbd8559d4d06f96e19affa70abaf86ff", "commitAfterChange": "0e3fe5643667a53079dbd114e5b1e9aa91fde083", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "     int process(String aFileName)", "signatureAfterChange": "     private int process(String aFileName)", "diff": ["-    int process(String aFileName)", "+    private int process(String aFileName)", "-        final long timestamp = new File(aFileName).lastModified();", "+        final File f = new File(aFileName);", "+        final long timestamp = f.lastModified();", "+            fireFileStarted(aFileName);", "-                             \"Got a RecognitionException -\" +", "-                             re.getMessage())};", "+                             \"Got a RecognitionException -\" + re.getMessage())};", "-            displayErrors(aFileName, errors);", "+            fireErrors(aFileName, errors);", "+", "+        fireFileFinished(aFileName);"]}]}