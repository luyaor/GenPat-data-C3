{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b93f3e2bb29079e89d2e73a41c551c3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0888dd4a6f9075d0511176ebd80e38e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static boolean whitespaceBetween(         int froindex, int toIndex, String line)", "signatureAfterChange": "     private static boolean whitespaceBetween(         int fromIndex, int toIndex, String line)", "diff": ["-        int froindex, int toIndex, String line)", "+        int fromIndex, int toIndex, String line)", "-        for (int i = froindex; i < toIndex; i++) {", "+        for (int i = fromIndex; i < toIndex; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d62a7592ca3cdd16bae0b1f85faa8af", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void visitForEachClause(final DetailAST aForEachClause)", "signatureAfterChange": "     private void visitForEachClause(final DetailAST forEachClause)", "diff": ["-    private void visitForEachClause(final DetailAST aForEachClause)", "+    private void visitForEachClause(final DetailAST forEachClause)", "-        checkParam(aForEachClause.findFirstToken(TokenTypes.VARIABLE_DEF));", "+        checkParam(forEachClause.findFirstToken(TokenTypes.VARIABLE_DEF));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11bdab414d5c418ab2cb0c157bedb50d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OverloadMethodsDeclarationOrderCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void checkOverloadMethodsGrouping(DetailAST aObjectBlock)", "signatureAfterChange": "     private void checkOverloadMethodsGrouping(DetailAST objectBlock)", "diff": ["-    private void checkOverloadMethodsGrouping(DetailAST aObjectBlock)", "+    private void checkOverloadMethodsGrouping(DetailAST objectBlock)", "-        DetailAST currentToken = aObjectBlock.getFirstChild();", "+        DetailAST currentToken = objectBlock.getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17ab204171a486cad323bbfd4dbee21d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/transmogrify/ClassDef.java", "commitBeforeChange": "cf27285c85613a0963903ddf6b683aa586f90aa5", "commitAfterChange": "adc04337ea44d4e6b0ff8ec5efedd11ecd263646", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void addUnprocessedImports(Vector imports)", "signatureAfterChange": "      public void addUnprocessedImports(Vector aImports)", "diff": ["-    public void addUnprocessedImports(Vector imports) {", "-        unprocessedImports = (Vector) (imports.clone());", "+    public void addUnprocessedImports(Vector aImports) {", "+        unprocessedImports = (Vector) (aImports.clone());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a3c1d0af051478f706b3b07c5e438b7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/transmogrify/QueryEngine.java", "commitBeforeChange": "cf27285c85613a0963903ddf6b683aa586f90aa5", "commitAfterChange": "adc04337ea44d4e6b0ff8ec5efedd11ecd263646", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public QueryEngine(SymbolTable symbolTable)", "signatureAfterChange": "    public QueryEngine(SymbolTable aSymbolTable)", "diff": ["-  public QueryEngine(SymbolTable symbolTable) {", "-    this.symbolTable = symbolTable;", "+  public QueryEngine(SymbolTable aSymbolTable) {", "+    this.symbolTable = aSymbolTable;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22d1ea2f3c157a080cc88df5ca81db86", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private DetailNode convertParseTree2DetailNode(ParseTree aRootParseTree)", "signatureAfterChange": "     private DetailNode convertParseTree2DetailNode(ParseTree rootParseTree)", "diff": ["-    private DetailNode convertParseTree2DetailNode(ParseTree aRootParseTree)", "+    private DetailNode convertParseTree2DetailNode(ParseTree rootParseTree)", "-        final ParseTree currentParseTreeNode = aRootParseTree;", "+        final ParseTree currentParseTreeNode = rootParseTree;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2978095ffafd54d89fe589f3cc1a1493", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "91aa6578321ceb08f4b0d715f994b7a9f4abe9d7", "commitAfterChange": "3430721be200cbe2acf55c3b3d52a528638123b3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "         public boolean accept(File pathname)", "signatureAfterChange": "         public boolean accept(File aPathname)", "diff": ["-        public boolean accept(File pathname)", "+        public boolean accept(File aPathname)", "-            return pathname.getPath().endsWith(\".properties\");", "+            return aPathname.getPath().endsWith(\".properties\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37769e146589bb9610d04ac7bdaad3aa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenTextCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setIgnoreCase(boolean aCaseInsensitive)", "signatureAfterChange": "     public void setIgnoreCase(boolean caseInsensitive)", "diff": ["-    public void setIgnoreCase(boolean aCaseInsensitive)", "+    public void setIgnoreCase(boolean caseInsensitive)", "-        if (aCaseInsensitive) {", "+        if (caseInsensitive) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37a6f494fe29bfa356df700bcbe684a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public List<DetailAST> getAllExceptionTypes(DetailAST aParentToken)", "signatureAfterChange": "     public List<DetailAST> getAllExceptionTypes(DetailAST parentToken)", "diff": ["-    public List<DetailAST> getAllExceptionTypes(DetailAST aParentToken)", "+    public List<DetailAST> getAllExceptionTypes(DetailAST parentToken)", "-        DetailAST currentNode = aParentToken.getFirstChild();", "+        DetailAST currentNode = parentToken.getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c815802576a57bd03d1a7004130136d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java", "commitBeforeChange": "6a39af3d6112569e9e1780c86504fd9add394fee", "commitAfterChange": "6731df9da723cab5ec2adda2b1b269fcd7db6f82", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void setEditor(JTextArea mJTextArea)", "signatureAfterChange": "     public void setEditor(JTextArea textArea)", "diff": ["-    public void setEditor(JTextArea mJTextArea) {", "-        editor = mJTextArea;", "+     */", "+    public void setEditor(JTextArea textArea) {", "+        editor = textArea;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7242b589b04b9d2343ac0b6a5cdfadf9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "commitAfterChange": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static <T extends Enum<T>> T getOption(final Class<T> enuclass,         final String value)", "signatureAfterChange": "     private static <T extends Enum<T>> T getOption(final Class<T> enumClass,         final String value)", "diff": ["-    private static <T extends Enum<T>> T getOption(final Class<T> enuclass,", "+    private static <T extends Enum<T>> T getOption(final Class<T> enumClass,", "-            return Enum.valueOf(enuclass, value.trim().toUpperCase(Locale.ENGLISH));", "+            return Enum.valueOf(enumClass, value.trim().toUpperCase(Locale.ENGLISH));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7312be05eda1ff3b6e52117b7db8296d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/SeverityLevel.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static SeverityLevel getInstance(String aSecurityLevelName)", "signatureAfterChange": "     public static SeverityLevel getInstance(String securityLevelName)", "diff": ["-    public static SeverityLevel getInstance(String aSecurityLevelName)", "+    public static SeverityLevel getInstance(String securityLevelName)", "-        return valueOf(SeverityLevel.class, aSecurityLevelName.trim()", "+        return valueOf(SeverityLevel.class, securityLevelName.trim()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "746824b6c397f403848ee18b80336c3b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public static void setLocale(Locale aLocale)", "signatureAfterChange": "     public static void setLocale(Locale locale)", "diff": ["-    /** @param aLocale the locale to use for localization **/", "-    public static void setLocale(Locale aLocale)", "+    /** @param locale the locale to use for localization **/", "+    public static void setLocale(Locale locale)", "-        sLocale = aLocale;", "+        sLocale = locale;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77fad8db9cc4722b3c45805b79d1f12d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected final void checkChildren(DetailAST parentNode,                                        int[] tokenTypes,                                        IndentLevel startLevel,                                        boolean firstLineMatches,                                        boolean allowNesting)", "signatureAfterChange": "     protected final void checkChildren(DetailAST parentNode,                                        int[] tokenTypes,                                        IndentLevel startIndent,                                        boolean firstLineMatches,                                        boolean allowNesting)", "diff": ["-                                       IndentLevel startLevel,", "+                                       IndentLevel startIndent,", "-                checkExpressionSubtree(child, startLevel,", "+                checkExpressionSubtree(child, startIndent,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "782cb75cd3dd2fbc8a758f0d441f8570", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void registerCheck(int tokenID, Check check) throws CheckstyleException", "signatureAfterChange": "     private void registerCheck(int tokenId, Check check) throws CheckstyleException", "diff": ["-    private void registerCheck(int tokenID, Check check) throws CheckstyleException {", "-        registerCheck(TokenUtils.getTokenName(tokenID), check);", "+    private void registerCheck(int tokenId, Check check) throws CheckstyleException {", "+        registerCheck(TokenUtils.getTokenName(tokenId), check);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c98ec947b9a54521fedb713273135d3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private String getCharsTillDot(DetailNode aTextNode)", "signatureAfterChange": "     private String getCharsTillDot(DetailNode textNode)", "diff": ["-    private String getCharsTillDot(DetailNode aTextNode)", "+    private String getCharsTillDot(DetailNode textNode)", "-        for (DetailNode child : aTextNode.getChildren()) {", "+        for (DetailNode child : textNode.getChildren()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cd61ba82214ad38a113bc3d61a10772", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setAliasList(String aAliasList)", "signatureAfterChange": "     public void setAliasList(String aliasList)", "diff": ["-    public void setAliasList(String aAliasList)", "+    public void setAliasList(String aliasList)", "-        for (String sourceAlias : aAliasList.split(\",\")) {", "+        for (String sourceAlias : aliasList.split(\",\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "900773b86105b3401a5c1c6cdd519ee3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private int getParentType(DetailAST aCommentBlock)", "signatureAfterChange": "     private int getParentType(DetailAST commentBlock)", "diff": ["-    private int getParentType(DetailAST aCommentBlock)", "+    private int getParentType(DetailAST commentBlock)", "-        final DetailAST parentNode = aCommentBlock.getParent();", "+        final DetailAST parentNode = commentBlock.getParent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b9a25b3bfd1dc12dd16aec8b4c41f60", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private DetailAST getLastAnnotationNode(DetailAST aAtNode)", "signatureAfterChange": "     private DetailAST getLastAnnotationNode(DetailAST atNode)", "diff": ["-    private DetailAST getLastAnnotationNode(DetailAST aAtNode)", "+    private DetailAST getLastAnnotationNode(DetailAST atNode)", "-        DetailAST lastAnnotation = aAtNode.getParent();", "+        DetailAST lastAnnotation = atNode.getParent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac0967b07dbe7075450d10ab38f3323e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected AbstractClassCouplingCheck(int aDefaultMax)", "signatureAfterChange": "     protected AbstractClassCouplingCheck(int defaultMax)", "diff": ["-    protected AbstractClassCouplingCheck(int aDefaultMax)", "+    protected AbstractClassCouplingCheck(int defaultMax)", "-        setMax(aDefaultMax);", "+        setMax(defaultMax);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4391567c809554e0a0093ab0e07eda1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/MethodCountCheck.java", "commitBeforeChange": "a6e4d310c0e38d73e7816a5fb57e66fc221d79ec", "commitAfterChange": "5c6e03a868c0f756ccd3bb9b796febbbbf25bd4e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "         MethodCounter(boolean inInterface)", "signatureAfterChange": "         MethodCounter(boolean aInInterface)", "diff": ["-        MethodCounter(boolean inInterface) {", "-            mInInterface = inInterface;", "+        MethodCounter(boolean aInInterface)", "+        {", "+            mInInterface = aInInterface;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7c3fcd4d9953fc5e308837ee411a610", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Scope.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static Scope getInstance(String aScopeName)", "signatureAfterChange": "     public static Scope getInstance(String scopeName)", "diff": ["-    public static Scope getInstance(String aScopeName)", "+    public static Scope getInstance(String scopeName)", "-        return valueOf(Scope.class, aScopeName.trim().toUpperCase());", "+        return valueOf(Scope.class, scopeName.trim().toUpperCase());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf9f6598f43f755392b1e5b643fc6f22", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private List<DetailNode> getAllNewlineNodes(DetailNode aDescriptionNode)", "signatureAfterChange": "     private List<DetailNode> getAllNewlineNodes(DetailNode descriptionNode)", "diff": ["-    private List<DetailNode> getAllNewlineNodes(DetailNode aDescriptionNode)", "+    private List<DetailNode> getAllNewlineNodes(DetailNode descriptionNode)", "-        DetailNode node = JavadocUtils.getFirstChild(aDescriptionNode);", "+        DetailNode node = JavadocUtils.getFirstChild(descriptionNode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c07f21dc07b08be88f468565f7fdbc28", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/transmogrify/ClassDef.java", "commitBeforeChange": "cf27285c85613a0963903ddf6b683aa586f90aa5", "commitAfterChange": "adc04337ea44d4e6b0ff8ec5efedd11ecd263646", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void setSuperclass(IClass superclass)", "signatureAfterChange": "      public void setSuperclass(IClass newSuperclass)", "diff": ["-    public void setSuperclass(IClass superclass) {", "-        this.superclass = superclass;", "+    public void setSuperclass(IClass newSuperclass) {", "+        this.superclass = newSuperclass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c574f2ee996ea6e67fc7e7f3fdd37631", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static DetailAST getArrayIdentifier(DetailAST aArrayDeclarator)", "signatureAfterChange": "     private static DetailAST getArrayIdentifier(DetailAST arrayDeclarator)", "diff": ["-    private static DetailAST getArrayIdentifier(DetailAST aArrayDeclarator)", "+    private static DetailAST getArrayIdentifier(DetailAST arrayDeclarator)", "-        return aArrayDeclarator.getParent().getNextSibling();", "+        return arrayDeclarator.getParent().getNextSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca9c37d3daa1f2229f420dae6751c4e6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static String getInstanceName(DetailAST aMethodCallAst)", "signatureAfterChange": "     private static String getInstanceName(DetailAST methodCallAst)", "diff": ["-    private static String getInstanceName(DetailAST aMethodCallAst)", "+    private static String getInstanceName(DetailAST methodCallAst)", "-                FullIdent.createFullIdentBelow(aMethodCallAst).getText();", "+                FullIdent.createFullIdentBelow(methodCallAst).getText();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e361bc141bc56907fe44409b5b6c3cd9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void setClasses(String classNames)", "signatureAfterChange": "     public void setClasses(String names)", "diff": ["-    public void setClasses(String classNames) {", "+    public void setClasses(String names) {", "-        final StringTokenizer tok = new StringTokenizer(classNames, \",\");", "+        final StringTokenizer tok = new StringTokenizer(names, \",\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecf43064870c40fbab388fb50cda407a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static boolean hasOverrideAnnotation(DetailAST aMethodModifiersAST)", "signatureAfterChange": "     private static boolean hasOverrideAnnotation(DetailAST methodModifiersAST)", "diff": ["-    private static boolean hasOverrideAnnotation(DetailAST aMethodModifiersAST)", "+    private static boolean hasOverrideAnnotation(DetailAST methodModifiersAST)", "-        for (DetailAST child : getChildren(aMethodModifiersAST)) {", "+        for (DetailAST child : getChildren(methodModifiersAST)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7f268aae8e4343f3260d18f16574d2f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean isInlineDescription(DetailNode aDescription)", "signatureAfterChange": "     private boolean isInlineDescription(DetailNode description)", "diff": ["-    private boolean isInlineDescription(DetailNode aDescription)", "+    private boolean isInlineDescription(DetailNode description)", "-        DetailNode inlineTag = aDescription.getParent();", "+        DetailNode inlineTag = description.getParent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa0b0e445253017614e7a76907fdc105", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "         public void visitLiteralThrows(DetailAST aThrows)", "signatureAfterChange": "         public void visitLiteralThrows(DetailAST literalThrows)", "diff": ["-        public void visitLiteralThrows(DetailAST aThrows)", "+        public void visitLiteralThrows(DetailAST literalThrows)", "-            for (DetailAST childAST = aThrows.getFirstChild();", "+            for (DetailAST childAST = literalThrows.getFirstChild();"]}]}