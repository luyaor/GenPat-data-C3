{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c94cb14c9b87239b667febfce5faac51", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6fe2eeec79895f3b6ef79105c4ff072", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocVariableCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testAnother3()         throws Exception", "signatureAfterChange": "      @Test     public void testAnother3()         throws Exception", "diff": ["-            \"11:9: Missing a Javadoc comment.\",", "-            \"16:13: Missing a Javadoc comment.\",", "-            \"36:9: Missing a Javadoc comment.\",", "-            \"43:5: Missing a Javadoc comment.\",", "-            \"44:5: Missing a Javadoc comment.\",", "-            \"45:5: Missing a Javadoc comment.\",", "-            \"46:5: Missing a Javadoc comment.\",", "+            \"11:9: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"16:13: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"36:9: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"43:5: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"44:5: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"45:5: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"46:5: \" + getCheckMessage(JAVADOC_MISSING),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f433bdba32b2a2890142fedba4ed9ad5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testBadOverrideFromOther() throws Exception", "signatureAfterChange": "     @Test     public void testBadOverrideFromOther() throws Exception", "diff": ["-            \"10: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "-            \"26: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "-            \"34: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "-            \"40: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "-            \"47: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "-            \"53: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "-            \"63: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "+            \"10: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),", "+            \"26: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),", "+            \"34: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),", "+            \"40: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),", "+            \"47: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),", "+            \"53: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),", "+            \"63: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),"]}]}