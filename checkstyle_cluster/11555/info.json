{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "85b084bdfc9bab02d51356157bf76001", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cc6d316aaf6eb71d16063cec7ddac69", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "6cd89ebebaec931a33ffde42b295eb6a20dc07e1", "commitAfterChange": "dcd4e9148cb143f9c4143cd1c5f72d70ef86c681", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void processEnd(DetailAST aAST)", "signatureAfterChange": "     private void processEnd(DetailAST aAST)", "diff": ["-                         && (line.charAt(after) != ','))", "+                         && (line.charAt(after) != ',')", "+                         && (line.charAt(after) != '['))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88536fe68a5d757d7d38abb56856cbd4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/WhitespaceAroundCheck.java", "commitBeforeChange": "59378eb655ad45ca3f6e32b050882c85156d62ff", "commitAfterChange": "e4a4b6dc01240034cacf0886862805e3dcc58a93", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            && !Character.isWhitespace(line.charAt(after))", "-            // Check for \"return;\"", "+            && !Character.isWhitespace(", "+                line.charAt(after)) // Check for \"return;\"", "-            // Check for \"})\". Happens with anon-inners", "+            // Check for \"})\" or \"};\". Happens with anon-inners", "-                && (line.charAt(after) == ')')))", "+                && ((line.charAt(after) == ')')", "+                    || (line.charAt(after) == ';'))))", "-            log(aAST.getLineNo(), aAST.getColumnNo() + aAST.getText().length(),", "-                    \"ws.notFollowed\", new Object[]{aAST.getText()});", "+            log(", "+                aAST.getLineNo(),", "+                aAST.getColumnNo() + aAST.getText().length(),", "+                \"ws.notFollowed\",", "+                new Object[] { aAST.getText()});"]}]}