{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "937893079bbba91917d36a2b76ca5af2", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dd549855a70fff0071cf06db038ab01", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "204c073294cdca6756bcd546d6af85a797ad7d79", "commitAfterChange": "6784e5bcd5baa6b5086bf8b63709856d685a74c8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if ((ast.getType() == TokenTypes.VARIABLE_DEF)", "-            || (ast.getType() == TokenTypes.PARAMETER_DEF))", "-        {", "-            processVariable(ast);", "-            return;", "-        }", "+        final int type = ast.getType();", "+        switch (type) {", "+            case TokenTypes.VARIABLE_DEF:", "+            case TokenTypes.PARAMETER_DEF:", "+                processVariable(ast);", "+                break;", "+            default:", "+                visitOtherTokens(ast, type);", "+        }", "+    }", "-                new FieldFrame(currentFrame, isStaticInnerType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7095d66b3a928b7a38569b4182b90b4c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java", "commitBeforeChange": "aa581847fe5e1c7ff4ded4387fa3dbc781fac513", "commitAfterChange": "d693562ab7d124a1a71332e2c234ac0efcd0620e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["+            case TokenTypes.MODIFIERS:", "+                if (parentType == TokenTypes.VARIABLE_DEF", "+                    && ast.getParent().getParent().getType() == TokenTypes.OBJBLOCK) {", "+                    processModifiers(ast);", "+                }", "+                break;", "-                }", "-                break;", "-            case TokenTypes.MODIFIERS:", "-                if (parentType == TokenTypes.VARIABLE_DEF", "-                        && ast.getParent().getParent().getType() == TokenTypes.OBJBLOCK) {", "-                    processModifiers(ast);"]}]}