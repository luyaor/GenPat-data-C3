{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "22cb2119f62ed97c67817aaa2b5b04ba", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a44070f4075b7666cea490f18fc6c9e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java", "commitBeforeChange": "d86a9de35b58eeed409ed9fc3cbef252fda4cb84", "commitAfterChange": "5d7063c660b241bce251f1a8c89394619f2791fb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean checkParams(DetailAST aMethod)", "signatureAfterChange": "     private boolean checkParams(DetailAST aMethod)", "diff": ["-        DetailAST params = aMethod.findFirstToken(TokenTypes.PARAMETERS);", "+        final DetailAST params = aMethod.findFirstToken(TokenTypes.PARAMETERS);", "-        DetailAST paramType = ((DetailAST) params.getFirstChild())", "+        final DetailAST paramType = ((DetailAST) params.getFirstChild())", "-        DetailAST arrayDecl =", "+        final DetailAST arrayDecl =", "-        DetailAST arrayType = (DetailAST) arrayDecl.getFirstChild();", "+        final DetailAST arrayType = (DetailAST) arrayDecl.getFirstChild();", "-            FullIdent type = FullIdent.createFullIdent(arrayType);", "+            final FullIdent type = FullIdent.createFullIdent(arrayType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6aa835589d3ba304f6fb48b4b6a710e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java", "commitBeforeChange": "522a6b31b62d65bf5f8eb051107bbf3223fa32c5", "commitAfterChange": "023b564417ff157c7333acc2f04b6ddba289c463", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aDetailAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aDetailAST)", "diff": ["-        final DetailAST excType = paramDef.findFirstToken(TokenTypes.TYPE);", "-        final FullIdent ident = CheckUtils.createFullType(excType);", "+        final DetailAST excTypeParent =", "+                paramDef.findFirstToken(TokenTypes.TYPE);", "+        final List<DetailAST> excTypes = getAllExceptionTypes(excTypeParent);", "-        if (isIllegalClassName(ident.getText())) {", "-            log(aDetailAST, \"illegal.catch\", ident.getText());", "+        for (DetailAST excType : excTypes) {", "+            final FullIdent ident = FullIdent.createFullIdent(excType);", "+", "+            if (isIllegalClassName(ident.getText())) {", "+                log(aDetailAST, \"illegal.catch\", ident.getText());", "+            }"]}]}