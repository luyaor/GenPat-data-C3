{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d59c68ac90034bb7b0a8a6364e1c4dd", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5197abc836ef9c1287c3e15751f8b8d8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "89f4e3c8b106394adab068520f89a158867b168d", "commitAfterChange": "c09131defe36dde56b2d9767d1953d93e20bd200", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void doVisitToken(FullIdent ident, boolean isStatic,             boolean previous)", "signatureAfterChange": "     private void doVisitToken(FullIdent ident, boolean isStatic,             boolean previous)", "diff": ["-        if (groupIdx > lastGroup) {", "-            // This check should be made more robust to handle", "-            // comments and imports that span more than one line.", "+        if (!beforeFirstImport && isAlphabeticallySortableStaticImport(isStatic)", "+                || groupIdx == lastGroup) {", "+            doVisitTokenInSameGroup(isStatic, previous, name, line);", "+        }", "+        else if (groupIdx > lastGroup) {", "-        }", "-        else if (groupIdx == lastGroup || sortStaticImportsAlphabetically", "-                 && isAlphabeticallySortableStaticImport(isStatic)) {", "-            doVisitTokenInSameGroup(isStatic, previous, name, line);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c741c4c19f923bd25bbb8fc0d6e04e61", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "6ee4a0f805d528cdee03cfc175502d15b5722dab", "commitAfterChange": "a707819ab73dded873917fd33e22d45d0e3e1860", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (!(parentType == TokenTypes.OBJBLOCK", "-                || ignoreFinal && modifiers.branchContains(TokenTypes.FINAL))) {", "+        if (parentType != TokenTypes.OBJBLOCK", "+                && (!ignoreFinal || !modifiers.branchContains(TokenTypes.FINAL))) {"]}]}