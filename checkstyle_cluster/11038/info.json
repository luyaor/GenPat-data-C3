{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9b667839078bc28a9135f900de3550c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7beefc2f8658e338c3041f4c90134ac6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     @Override     public void addError(AuditEvent evt)", "signatureAfterChange": "     @Override     public void addError(AuditEvent evt)", "diff": ["-        if (SeverityLevel.IGNORE != evt.getSeverityLevel()) {", "+        if (evt.getSeverityLevel() != SeverityLevel.IGNORE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbfecb3c33fa19ac02cb9a5fb8e844b1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static boolean isZero(DetailAST expr)", "signatureAfterChange": "     private static boolean isZero(DetailAST expr)", "diff": ["-                return 0.0 == CheckUtils.parseFloat(text, type);", "+                return CheckUtils.parseFloat(text, type) == 0.0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7d7aae73a046feef3ffce04dfa3842f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private static boolean isExpressionCountable(DetailAST ast)", "signatureAfterChange": "     private static boolean isExpressionCountable(DetailAST ast)", "diff": ["-                    || TokenTypes.LPAREN != prevSibling.getType();", "+                    || prevSibling.getType() != TokenTypes.LPAREN;"]}]}