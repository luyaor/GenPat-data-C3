{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c21a4d2f34047d376f7fe91bdb4de03d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "845d51b7eb5131a9e42aae919ccddb79", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java", "commitBeforeChange": "7c262e61e676982d7d33a42971b885d97b95f456", "commitAfterChange": "3bcfcac9eec4009cac1f76dff6f946a35a063bb2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAllVariants() throws Exception", "signatureAfterChange": "      @Test     public void testAllVariants() throws Exception", "diff": ["-            \"3:1: Name 'InputAbstractClassName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-            \"6:1: Name 'NonAbstractClassName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-            \"9:1: Name 'FactoryWithBadName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-            \"13:5: Name 'NonAbstractInnerClass' must match pattern '^Abstract.*$|^.*Factory$'.\",", "+            \"3:1: Name 'InputAbstractClassName' must match pattern '^Abstract.+$|^.*Factory$'.\",", "+            \"6:1: Name 'NonAbstractClassName' must match pattern '^Abstract.+$|^.*Factory$'.\",", "+            \"9:1: Name 'FactoryWithBadName' must match pattern '^Abstract.+$|^.*Factory$'.\",", "+            \"13:5: Name 'NonAbstractInnerClass' must match pattern '^Abstract.+$|^.*Factory$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d652f73183a8c42692e99bf4e12ff9f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java", "commitBeforeChange": "7c262e61e676982d7d33a42971b885d97b95f456", "commitAfterChange": "3bcfcac9eec4009cac1f76dff6f946a35a063bb2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIllegalAbstractClassName() throws Exception", "signatureAfterChange": "     @Test     public void testIllegalAbstractClassName() throws Exception", "diff": ["-            \"3:1: Name 'InputAbstractClassName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-            \"6:1: Name 'NonAbstractClassName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-            \"9:1: Name 'FactoryWithBadName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-            \"13:5: Name 'NonAbstractInnerClass' must match pattern '^Abstract.*$|^.*Factory$'.\",", "+            \"3:1: Name 'InputAbstractClassName' must match pattern '^Abstract.+$|^.*Factory$'.\",", "+            \"6:1: Name 'NonAbstractClassName' must match pattern '^Abstract.+$|^.*Factory$'.\",", "+            \"9:1: Name 'FactoryWithBadName' must match pattern '^Abstract.+$|^.*Factory$'.\",", "+            \"13:5: Name 'NonAbstractInnerClass' must match pattern '^Abstract.+$|^.*Factory$'.\","]}]}