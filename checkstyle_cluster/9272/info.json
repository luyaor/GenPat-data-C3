{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0bda01e5f2cb04cbb43b54a6a768c32a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "407e5f1b689dc1b69fa3c2ccdfc9d18d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/NewHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public NewHandler(IndentationCheck aIndentCheck,                       DetailAST aAST,                       ExpressionHandler aParent)", "signatureAfterChange": "     public NewHandler(IndentationCheck indentCheck,                       DetailAST ast,                       ExpressionHandler parent)", "diff": ["-    public NewHandler(IndentationCheck aIndentCheck,", "-                      DetailAST aAST,", "-                      ExpressionHandler aParent)", "+    public NewHandler(IndentationCheck indentCheck,", "+                      DetailAST ast,", "+                      ExpressionHandler parent)", "-        super(aIndentCheck, \"operator new\", aAST, aParent);", "+        super(indentCheck, \"operator new\", ast, parent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddce6a0c23c16e002fdaaf0fb34fd983", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MemberDefHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public MemberDefHandler(IndentationCheck aIndentCheck,         DetailAST aAST, ExpressionHandler aParent)", "signatureAfterChange": "     public MemberDefHandler(IndentationCheck indentCheck,         DetailAST ast, ExpressionHandler parent)", "diff": ["-    public MemberDefHandler(IndentationCheck aIndentCheck,", "-        DetailAST aAST, ExpressionHandler aParent)", "+    public MemberDefHandler(IndentationCheck indentCheck,", "+        DetailAST ast, ExpressionHandler parent)", "-        super(aIndentCheck, \"member def\", aAST, aParent);", "+        super(indentCheck, \"member def\", ast, parent);"]}]}