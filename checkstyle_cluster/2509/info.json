{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b37361f3b71e814f4b5c19d6d6da225", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "219da17d18334ec0e0217a3d889216ec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "c2c34c8408d8ef5b92b7e87c671e392765f6c3d0", "commitAfterChange": "ebd4afdebe8ee09c0e6c7d1239e2ca982f87e51c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setPublicMemberPattern(String pattern)", "signatureAfterChange": "     public void setPublicMemberPattern(String pattern)", "diff": ["-        try {", "-            publicMemberPattern = Utils.getPattern(pattern);", "-            publicMemberFormat = pattern;", "-        }", "-        catch (final PatternSyntaxException e) {", "-            throw new ConversionException(\"unable to parse \" + pattern, e);", "-        }", "+        publicMemberPattern = Utils.createPattern(pattern);", "+        publicMemberFormat = pattern;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c880eb00a79edcbaa0850a88977beac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java", "commitBeforeChange": "c2c34c8408d8ef5b92b7e87c671e392765f6c3d0", "commitAfterChange": "ebd4afdebe8ee09c0e6c7d1239e2ca982f87e51c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setTagFormat(String format)         throws ConversionException", "signatureAfterChange": "     public void setTagFormat(String format)         throws ConversionException", "diff": ["-        try {", "-            tagFormat = format;", "-            tagFormatRE = Utils.getPattern(format);", "-        }", "-        catch (final PatternSyntaxException e) {", "-            throw new ConversionException(\"unable to parse \" + format, e);", "-        }", "+        tagFormat = format;", "+        tagFormatRE = Utils.createPattern(format);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f86d41528e8f97bec40f7fafe80a239", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java", "commitBeforeChange": "c2c34c8408d8ef5b92b7e87c671e392765f6c3d0", "commitAfterChange": "ebd4afdebe8ee09c0e6c7d1239e2ca982f87e51c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setTag(String tag)         throws ConversionException", "signatureAfterChange": "     public void setTag(String tag)         throws ConversionException", "diff": ["-        try {", "-            this.tag = tag;", "-            tagRE = Utils.getPattern(tag + \"\\\\s*(.*$)\");", "-        }", "-        catch (final PatternSyntaxException e) {", "-            throw new ConversionException(\"unable to parse \" + tag, e);", "-        }", "+        this.tag = tag;", "+        tagRE = Utils.createPattern(tag + \"\\\\s*(.*$)\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c0cffb9cf37d2ce3f8d51975b4f75fd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "c2c34c8408d8ef5b92b7e87c671e392765f6c3d0", "commitAfterChange": "ebd4afdebe8ee09c0e6c7d1239e2ca982f87e51c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setVersionFormat(String format)         throws ConversionException", "signatureAfterChange": "     public void setVersionFormat(String format)         throws ConversionException", "diff": ["-        try {", "-            versionFormat = format;", "-            versionFormatPattern = Utils.getPattern(format);", "-        }", "-        catch (final PatternSyntaxException e) {", "-            throw new ConversionException(\"unable to parse \" + format, e);", "-        }", "-", "+        versionFormat = format;", "+        versionFormatPattern = Utils.createPattern(format);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "632927ea891426eec0a6374ec406e297", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "c2c34c8408d8ef5b92b7e87c671e392765f6c3d0", "commitAfterChange": "ebd4afdebe8ee09c0e6c7d1239e2ca982f87e51c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void setIgnoreFormat(String format)         throws ConversionException", "signatureAfterChange": "     public void setIgnoreFormat(String format)         throws ConversionException", "diff": ["-        try {", "-            regexp = Utils.getPattern(format);", "-        }", "-        catch (final PatternSyntaxException e) {", "-            throw new ConversionException(\"unable to parse \" + format, e);", "-        }", "+        regexp = Utils.createPattern(format);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65b52d0498024c93dd961e67d33324c6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java", "commitBeforeChange": "c2c34c8408d8ef5b92b7e87c671e392765f6c3d0", "commitAfterChange": "ebd4afdebe8ee09c0e6c7d1239e2ca982f87e51c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setExcludedClasses(String excludedClasses)         throws ConversionException", "signatureAfterChange": "     public void setExcludedClasses(String excludedClasses)         throws ConversionException", "diff": ["-        try {", "-            this.excludedClasses = excludedClasses;", "-            excludedClassesPattern = Utils.getPattern(excludedClasses);", "-        }", "-        catch (final PatternSyntaxException e) {", "-            throw new ConversionException(\"unable to parse \"", "-                                          + excludedClasses,", "-                                          e);", "-        }", "+        this.excludedClasses = excludedClasses;", "+        excludedClassesPattern = Utils.createPattern(excludedClasses);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "940b0efb7a62e273039deab4551804ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TrailingCommentCheck.java", "commitBeforeChange": "c2c34c8408d8ef5b92b7e87c671e392765f6c3d0", "commitAfterChange": "ebd4afdebe8ee09c0e6c7d1239e2ca982f87e51c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setLegalComment(final String format)         throws ConversionException", "signatureAfterChange": "     public void setLegalComment(final String format)         throws ConversionException", "diff": ["-        try {", "-            legalComment = Utils.getPattern(format);", "-        }", "-        catch (final PatternSyntaxException e) {", "-            throw new ConversionException(\"unable to parse \" + format, e);", "-        }", "+        legalComment = Utils.createPattern(format);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5a208b3132d298da6a6bbd8a69768cc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "c2c34c8408d8ef5b92b7e87c671e392765f6c3d0", "commitAfterChange": "ebd4afdebe8ee09c0e6c7d1239e2ca982f87e51c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void setCheckFormat(String format)         throws ConversionException", "signatureAfterChange": "     public void setCheckFormat(String format)         throws ConversionException", "diff": ["-        try {", "-            checkRegexp = Utils.getPattern(format);", "-            checkFormat = format;", "-        }", "-        catch (final PatternSyntaxException e) {", "-            throw new ConversionException(\"unable to parse \" + format, e);", "-        }", "+        checkRegexp = Utils.createPattern(format);", "+        checkFormat = format;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce6e8c6299d974546462a97acd661198", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "c2c34c8408d8ef5b92b7e87c671e392765f6c3d0", "commitAfterChange": "ebd4afdebe8ee09c0e6c7d1239e2ca982f87e51c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void setOffCommentFormat(String format)         throws ConversionException", "signatureAfterChange": "     public void setOffCommentFormat(String format)         throws ConversionException", "diff": ["-        try {", "-            offRegexp = Utils.getPattern(format);", "-        }", "-        catch (final PatternSyntaxException e) {", "-            throw new ConversionException(\"unable to parse \" + format, e);", "-        }", "+        offRegexp = Utils.createPattern(format);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d708c941c37b47b3b5bce10031eb3c5c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "c2c34c8408d8ef5b92b7e87c671e392765f6c3d0", "commitAfterChange": "ebd4afdebe8ee09c0e6c7d1239e2ca982f87e51c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setAuthorFormat(String format)         throws ConversionException", "signatureAfterChange": "     public void setAuthorFormat(String format)         throws ConversionException", "diff": ["-        try {", "-            authorFormat = format;", "-            authorFormatPattern = Utils.getPattern(format);", "-        }", "-        catch (final PatternSyntaxException e) {", "-            throw new ConversionException(\"unable to parse \" + format, e);", "-        }", "+        authorFormat = format;", "+        authorFormatPattern = Utils.createPattern(format);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d75520cd3d41a47f49b30d8b7db1fd19", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "c2c34c8408d8ef5b92b7e87c671e392765f6c3d0", "commitAfterChange": "ebd4afdebe8ee09c0e6c7d1239e2ca982f87e51c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void setCheckFormat(String format)         throws ConversionException", "signatureAfterChange": "     public void setCheckFormat(String format)         throws ConversionException", "diff": ["-        try {", "-            checkRegexp = Utils.getPattern(format);", "-            checkFormat = format;", "-        }", "-        catch (final PatternSyntaxException e) {", "-            throw new ConversionException(\"unable to parse \" + format, e);", "-        }", "+        checkRegexp = Utils.createPattern(format);", "+        checkFormat = format;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd6b3a864b52cb25a27332936127ce4f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "c2c34c8408d8ef5b92b7e87c671e392765f6c3d0", "commitAfterChange": "ebd4afdebe8ee09c0e6c7d1239e2ca982f87e51c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setCommentFormat(String format)         throws ConversionException", "signatureAfterChange": "     public void setCommentFormat(String format)         throws ConversionException", "diff": ["-        try {", "-            commentRegexp = Utils.getPattern(format);", "-        }", "-        catch (final PatternSyntaxException e) {", "-            throw new ConversionException(\"unable to parse \" + format, e);", "-        }", "+        commentRegexp = Utils.createPattern(format);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4ec416ffa10a7d8d021d00e9eb68382", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "c2c34c8408d8ef5b92b7e87c671e392765f6c3d0", "commitAfterChange": "ebd4afdebe8ee09c0e6c7d1239e2ca982f87e51c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void setOnCommentFormat(String format)         throws ConversionException", "signatureAfterChange": "     public void setOnCommentFormat(String format)         throws ConversionException", "diff": ["-        try {", "-            onRegexp = Utils.getPattern(format);", "-        }", "-        catch (final PatternSyntaxException e) {", "-            throw new ConversionException(\"unable to parse \" + format, e);", "-        }", "+        onRegexp = Utils.createPattern(format);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecd09be8537a9aebd280ab516af0e8fa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/LineLengthCheck.java", "commitBeforeChange": "c2c34c8408d8ef5b92b7e87c671e392765f6c3d0", "commitAfterChange": "ebd4afdebe8ee09c0e6c7d1239e2ca982f87e51c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setIgnorePattern(String format)         throws ConversionException", "signatureAfterChange": "     public void setIgnorePattern(String format)         throws ConversionException", "diff": ["-        try {", "-            ignorePattern = Utils.getPattern(format);", "-        }", "-        catch (final PatternSyntaxException e) {", "-            throw new ConversionException(\"unable to parse \" + format, e);", "-        }", "+        ignorePattern = Utils.createPattern(format);"]}]}