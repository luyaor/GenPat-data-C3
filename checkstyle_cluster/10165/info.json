{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a33116791cbbaa6baf9bbe33221a602e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54936e26ec58c8aed9c5b7a499ba2f48", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheck.java", "commitBeforeChange": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4", "commitAfterChange": "c3674faad8a38656e910750fb22a7eef714fb8a7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private String getFileName()", "signatureAfterChange": "     private String getFileName()", "diff": ["-        String fname = getFileContents().getFileName();", "-        fname = fname.substring(fname.lastIndexOf(File.separatorChar) + 1);", "-        fname = FILE_EXTENSION_PATTERN.matcher(fname).replaceAll(\"\");", "-        return fname;", "+        String name = getFileContents().getFileName();", "+        name = name.substring(name.lastIndexOf(File.separatorChar) + 1);", "+        name = FILE_EXTENSION_PATTERN.matcher(name).replaceAll(\"\");", "+        return name;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "940fe4f6ebc2b8a6c64666679043ff74", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java", "commitBeforeChange": "dedcabd90da2a85294a2b9d8891f626deddee2f3", "commitAfterChange": "ed6c2ea1336f2b46b9f64dffc417f608c8de5067", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static void lookForInlineTags(TextBlock comment, int lineNumber,             final List<JavadocTag> validTags, final List<InvalidJavadocTag> invalidTags)", "signatureAfterChange": "     private static void lookForInlineTags(TextBlock comment, int lineNumber,             final List<JavadocTag> validTags, final List<InvalidJavadocTag> invalidTags)", "diff": ["-        final Pattern commentPattern = Pattern.compile(\"^\\\\s*(?:/\\\\*{2,}|\\\\*+)\\\\s*(.*)\");", "-        final Matcher commentMatcher = commentPattern.matcher(text);", "+        final Matcher commentMatcher = COMMENT_PATTERN.matcher(text);", "-        final Pattern tagPattern = Pattern.compile(\".*?\\\\{@(\\\\p{Alpha}+)\\\\s+(.*?)\\\\}\");", "-        final Matcher tagMatcher = tagPattern.matcher(commentContents);", "+        final Matcher tagMatcher = INLINE_TAG_PATTERN.matcher(commentContents);"]}]}