{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "94b548eb53d59869a6de55e539163c3a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "712a0d079c834443be0f56ba92dd3c80", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "440cf6836f278602a790d764f257777be80d8b9e", "commitAfterChange": "686afc521a11088c57632352eb6fd60a682b03d6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void startElement(String aNamespaceURI,                              String aLocalName,                              String aQName,                              Attributes aAtts)             throws SAXException", "signatureAfterChange": "     public void startElement(String aNamespaceURI,                              String aLocalName,                              String aQName,                              Attributes aAtts)             throws SAXException", "diff": ["-        DefaultConfiguration conf = new DefaultConfiguration(aQName);", "-        final int attCount = aAtts.getLength();", "-        for (int i = 0; i < attCount; i++) {", "-            String name = aAtts.getQName(i);", "-            String value = aAtts.getValue(i);", "-", "-            // expand properties", "-            if (value.startsWith(\"${\") && value.endsWith(\"}\")) {", "-                String propName = value.substring(2, value.length() - 1);", "-                value = mOverrideProps.getProperty(propName);", "-                if (value == null) {", "-                    throw new SAXException(", "-                            \"missing external property \" + propName);", "-                }", "+        if (aQName.equals(\"config\")) {", "+            //create configuration", "+            final String name = aAtts.getValue(\"name\");", "+            if (name == null) {", "+                throw new SAXException(\"missing config name\");", "+            }", "+            final DefaultConfiguration conf = new DefaultConfiguration(name);", "+            if (mConfiguration == null) {", "+                mConfiguration = conf;", "-            conf.addAttribute(name, value);", "+            //add configuration to it's parent", "+            if (!mConfigStack.isEmpty()) {", "+                DefaultConfiguration top =", "+                        (DefaultConfiguration) mConfigStack.peek();", "+                top.addChild(conf);", "+            }", "+            ", "+            mConfigStack.push(conf);", "-", "-        if (mConfiguration == null) {", "-            mConfiguration = conf;", "+        else if (aQName.equals(\"property\")) {", "+            ", "+            //extract name and value", "+            final String name = aAtts.getValue(\"name\");", "+            if (name == null) {", "+                throw new SAXException(\"missing property name\");", "+            }            ", "+            String value = aAtts.getValue(\"value\");", "+            if (value == null) {", "+                throw new SAXException(\"missing value for property \" + name);", "+            }", "+                ", "+            // expand properties", "+            if (mOverrideProps != null) {", "+                try {", "+                    value = Utils.replaceProperties(value, mOverrideProps);", "+                }", "+                catch (CheckstyleException ex) {", "+                    throw new SAXException(ex.getMessage());", "+                }", "+            }", "+            ", "+            //add to attributes of configuration", "+            if (!mConfigStack.isEmpty()) {", "+                DefaultConfiguration top =", "+                        (DefaultConfiguration) mConfigStack.peek();", "+                top.addAttribute(name, value);", "+            }", "+            else {", "+                throw new SAXException(", "+                            \"property \" + name + \"has no config parent\");", "+            }               ", "-", "-        if (!mConfigStack.isEmpty()) {", "-            DefaultConfiguration top =", "-                    (DefaultConfiguration) mConfigStack.peek();", "-            top.addChild(conf);", "-        }", "-", "-        mConfigStack.push(conf);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7136a54d7efa65b8a2a2868d97b9ec2f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "17cfbb2442d878ae6e229f809b8b2c479b9dfdcb", "commitAfterChange": "7166b6a1d07452b72cf6f62ae2afe9846b96ad91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void startElement(String aNamespaceURI,                              String aLocalName,                              String aQName,                              Attributes aAtts)             throws SAXException", "signatureAfterChange": "         public void startElement(String aNamespaceURI,                                  String aLocalName,                                  String aQName,                                  Attributes aAtts)                 throws SAXException", "diff": ["+        /** @see org.xml.sax.helpers.DefaultHandler **/", "+        public void startElement(String aNamespaceURI,", "+                                 String aLocalName,", "+                                 String aQName,", "+                                 Attributes aAtts)", "+                throws SAXException", "+        {", "+            // TODO: debug logging for support puposes", "+            if (aQName.equals(\"module\")) {", "+                //create configuration", "+                final String name = aAtts.getValue(\"name\");", "+                DefaultConfiguration conf = new DefaultConfiguration(name);", "+                if (mConfiguration == null) {", "+                    mConfiguration = conf;", "+                }", "+", "+                //add configuration to it's parent", "+                if (!mConfigStack.isEmpty()) {", "+                    final DefaultConfiguration top =", "+                            (DefaultConfiguration) mConfigStack.peek();", "+                    top.addChild(conf);", "+                }", "+", "+                mConfigStack.push(conf);", "+            }", "+            else if (aQName.equals(\"property\")) {", "+                //extract name and value", "+                final String name = aAtts.getValue(\"name\");", "+                final String value;", "+                try {", "+                    value = replaceProperties(aAtts.getValue(\"value\"),", "+                        mOverrideProps);", "+                }", "+                catch (CheckstyleException ex) {", "+                    throw new SAXException(ex.getMessage());", "+                }", "+", "+                //add to attributes of configuration", "+                final DefaultConfiguration top =", "+                    (DefaultConfiguration) mConfigStack.peek();", "+                top.addAttribute(name, value);", "+            }", "+        }", "-    /** @see org.xml.sax.helpers.DefaultHandler **/", "-    public void startElement(String aNamespaceURI,", "-                             String aLocalName,", "-                             String aQName,", "-                             Attributes aAtts)", "-            throws SAXException", "-    {", "-        // TODO: debug logging for support puposes", "-        if (aQName.equals(\"module\")) {", "-            //create configuration", "-            final String name = aAtts.getValue(\"name\");", "-            final DefaultConfiguration conf = new DefaultConfiguration(name);", "-            if (mConfiguration == null) {", "-                mConfiguration = conf;", "-            }", "-", "-            //add configuration to it's parent", "-            if (!mConfigStack.isEmpty()) {", "-                final DefaultConfiguration top =", "-                        (DefaultConfiguration) mConfigStack.peek();", "-                top.addChild(conf);", "-            }", "-", "-            mConfigStack.push(conf);", "-        }", "-        else if (aQName.equals(\"property\")) {", "-            //extract name and value", "-            final String name = aAtts.getValue(\"name\");", "-            final String value;", "-            try {", "-                value = replaceProperties(aAtts.getValue(\"value\"),", "-                    mOverrideProps);", "-            }", "-            catch (CheckstyleException ex) {", "-                throw new SAXException(ex.getMessage());", "-            }", "-", "-            //add to attributes of configuration", "-            final DefaultConfiguration top =", "-                (DefaultConfiguration) mConfigStack.peek();", "-            top.addAttribute(name, value);", "-        }", "-    }"]}]}