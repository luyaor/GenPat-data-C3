{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6cb904b5f3ad85b797e495c5fae2b7c7", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0548816b379fa2c47f98e2440c7afa41", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportCheck.java", "commitBeforeChange": "6e775898e7d1ac179bcb6550f3023ee9b9d70bc3", "commitAfterChange": "8607274a9205c5f15c33820b0efa6dc4c5ea9a23", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private boolean isExempt(String classOrStaticMember)", "signatureAfterChange": "     private boolean isExempt(String classOrStaticMember)", "diff": ["-            if (classOrStaticMember.equals(exclude)) {", "+            if (classOrStaticMember.equals(exclude)", "+                    || isStarImportOfPackage(classOrStaticMember, exclude)) {", "-            else if (exclude.endsWith(\".*\")) {", "-                //this section allows explicit imports", "-                //to be exempt when configured using", "-                //a starred import", "-                final String excludeMinusDotStar =", "-                    exclude.substring(0, exclude.length() - 2);", "-                if (classOrStaticMember.startsWith(excludeMinusDotStar)", "-                        && !classOrStaticMember.equals(excludeMinusDotStar)) {", "-                    final String member =", "-                        classOrStaticMember.substring(", "-                            excludeMinusDotStar.length() + 1);", "-                    //if it contains a dot then it is not a member but a package", "-                    if (member.indexOf('.') == -1) {", "-                        exempt = true;", "-                        break;", "-                    }", "+        }", "+        return exempt;", "+    }", "-        return exempt;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bb38c81dac2513938df036b56d4585f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodLengthCheck.java", "commitBeforeChange": "9183d6c2407b843c66d379498b66626a766f92f3", "commitAfterChange": "6e775898e7d1ac179bcb6550f3023ee9b9d70bc3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            int length =", "-                closingBrace.getLineNo() - openingBrace.getLineNo() + 1;", "-", "-            if (!countEmpty) {", "-                final FileContents contents = getFileContents();", "-                final int lastLine = closingBrace.getLineNo();", "-                for (int i = openingBrace.getLineNo() - 1; i < lastLine; i++) {", "-                    if (contents.lineIsBlank(i) || contents.lineIsComment(i)) {", "-                        length--;", "-                    }", "-                }", "-            }", "+            final int length = getLengthOfBlock(openingBrace, closingBrace);"]}]}