{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "947cacd47a128e8bef93ac2582731a91", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "208e2026f2f0f2ac093286d3211e6591", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testTagSeverity() throws Exception", "signatureAfterChange": "      @Test     public void testTagSeverity() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"tag\", \"@incomplete\");", "-        mCheckConfig.addAttribute(\"tagFormat\", \"\\\\S\");", "-        mCheckConfig.addAttribute(\"tagSeverity\", \"warning\");", "+        checkConfig.addAttribute(\"tag\", \"@incomplete\");", "+        checkConfig.addAttribute(\"tagFormat\", \"\\\\S\");", "+        checkConfig.addAttribute(\"tagSeverity\", \"warning\");", "-        verify(mCheckConfig, getPath(\"InputWriteTag.java\"), expected);", "+        verify(checkConfig, getPath(\"InputWriteTag.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9df66e19c1952da92f40e90955c4eb3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     public void testExistingInCode() throws Exception", "signatureAfterChange": "      @Test     public void testExistingInCode() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"format\", required);", "-        mCheckConfig.addAttribute(\"minimum\", \"1\");", "-        mCheckConfig.addAttribute(\"maximum\", \"1000\");", "+        checkConfig.addAttribute(\"format\", required);", "+        checkConfig.addAttribute(\"minimum\", \"1\");", "+        checkConfig.addAttribute(\"maximum\", \"1000\");", "-        verify(mCheckConfig, getPath(\"InputSemantic.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSemantic.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad4525eebefdea265465b28b7e168752", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testIgnoreMissing() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreMissing() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"tag\", \"@todo2\");", "-        mCheckConfig.addAttribute(\"tagFormat\", \"\\\\S\");", "-        mCheckConfig.addAttribute(\"severity\", \"ignore\");", "+        checkConfig.addAttribute(\"tag\", \"@todo2\");", "+        checkConfig.addAttribute(\"tagFormat\", \"\\\\S\");", "+        checkConfig.addAttribute(\"severity\", \"ignore\");", "-        verify(mCheckConfig, getPath(\"InputWriteTag.java\"), expected);", "+        verify(checkConfig, getPath(\"InputWriteTag.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b55b38796a96c9054a4bad16ff44cabb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void testExistingInDoc() throws Exception", "signatureAfterChange": "      @Test     public void testExistingInDoc() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"format\", required);", "-        mCheckConfig.addAttribute(\"minimum\", \"1\");", "-        mCheckConfig.addAttribute(\"maximum\", \"1000\");", "+        checkConfig.addAttribute(\"format\", required);", "+        checkConfig.addAttribute(\"minimum\", \"1\");", "+        checkConfig.addAttribute(\"maximum\", \"1000\");", "-        verify(mCheckConfig, getPath(\"InputSemantic.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSemantic.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd1cb3340fbb7dbb1b68434404c3c07b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      @Test     public void testMissing() throws Exception", "signatureAfterChange": "      @Test     public void testMissing() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"format\", required);", "-        mCheckConfig.addAttribute(\"minimum\", \"1\");", "-        mCheckConfig.addAttribute(\"maximum\", \"1000\");", "+        checkConfig.addAttribute(\"format\", required);", "+        checkConfig.addAttribute(\"minimum\", \"1\");", "+        checkConfig.addAttribute(\"maximum\", \"1000\");", "-        verify(mCheckConfig, getPath(\"InputSemantic.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSemantic.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3701bfbae77b139759fff53334f1e9f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testSeverity() throws Exception", "signatureAfterChange": "      @Test     public void testSeverity() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"tag\", \"@author\");", "-        mCheckConfig.addAttribute(\"tagFormat\", \"\\\\S\");", "-        mCheckConfig.addAttribute(\"severity\", \"ignore\");", "+        checkConfig.addAttribute(\"tag\", \"@author\");", "+        checkConfig.addAttribute(\"tagFormat\", \"\\\\S\");", "+        checkConfig.addAttribute(\"severity\", \"ignore\");", "-        verify(mCheckConfig, getPath(\"InputWriteTag.java\"), expected);", "+        verify(checkConfig, getPath(\"InputWriteTag.java\"), expected);"]}]}