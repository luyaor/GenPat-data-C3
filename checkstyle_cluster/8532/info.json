{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83220466f8bc94b68e1402e38574e2eb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b6830c50cc46f330d87baf0a3d87d76", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testIncorrect() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrect() throws Exception", "diff": ["-        final String tagOrder = \"'[@author, @version, @param, @return, @throws, @exception, @see,\"", "-                + \" @since, @serial, @serialField, @serialData, @deprecated]'.\";", "+        final String tagOrder = \"[@author, @version, @param, @return, @throws, @exception, @see,\"", "+                + \" @since, @serial, @serialField, @serialData, @deprecated]\";", "-            \"9: At-clauses have to appear in the order \" + tagOrder,", "-            \"11: At-clauses have to appear in the order \" + tagOrder,", "-            \"12: At-clauses have to appear in the order \" + tagOrder,", "-            \"40: At-clauses have to appear in the order \" + tagOrder,", "-            \"50: At-clauses have to appear in the order \" + tagOrder,", "-            \"51: At-clauses have to appear in the order \" + tagOrder,", "-            \"62: At-clauses have to appear in the order \" + tagOrder,", "-            \"69: At-clauses have to appear in the order \" + tagOrder,", "-            \"86: At-clauses have to appear in the order \" + tagOrder,", "-            \"87: At-clauses have to appear in the order \" + tagOrder,", "-            \"99: At-clauses have to appear in the order \" + tagOrder,", "-            \"101: At-clauses have to appear in the order \" + tagOrder,", "-            \"115: At-clauses have to appear in the order \" + tagOrder,", "-            \"123: At-clauses have to appear in the order \" + tagOrder,", "-            \"134: At-clauses have to appear in the order \" + tagOrder,", "-            \"135: At-clauses have to appear in the order \" + tagOrder,", "-            \"145: At-clauses have to appear in the order \" + tagOrder,", "-            \"153: At-clauses have to appear in the order \" + tagOrder,", "-            \"161: At-clauses have to appear in the order \" + tagOrder,", "-            \"172: At-clauses have to appear in the order \" + tagOrder,", "-            \"183: At-clauses have to appear in the order \" + tagOrder,", "-            \"185: At-clauses have to appear in the order \" + tagOrder,", "-            \"199: At-clauses have to appear in the order \" + tagOrder,", "-            \"202: At-clauses have to appear in the order \" + tagOrder,", "-            \"213: At-clauses have to appear in the order \" + tagOrder,", "-            \"223: At-clauses have to appear in the order \" + tagOrder,", "-            \"230: At-clauses have to appear in the order \" + tagOrder,", "-            \"237: At-clauses have to appear in the order \" + tagOrder,", "-            \"247: At-clauses have to appear in the order \" + tagOrder,", "-            \"248: At-clauses have to appear in the order \" + tagOrder,", "-            \"259: At-clauses have to appear in the order \" + tagOrder,", "-            \"261: At-clauses have to appear in the order \" + tagOrder,", "-            \"275: At-clauses have to appear in the order \" + tagOrder,", "-            \"277: At-clauses have to appear in the order \" + tagOrder,", "-            \"278: At-clauses have to appear in the order \" + tagOrder,", "-            \"288: At-clauses have to appear in the order \" + tagOrder,", "+            \"9: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"11: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"12: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"40: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"50: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"51: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"62: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"69: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"86: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"87: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"99: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"101: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"115: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"123: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"134: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"135: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"145: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"153: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"161: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"172: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"183: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"185: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"199: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"202: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"213: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"223: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"230: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"237: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"247: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"248: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"259: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"261: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"275: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"277: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"278: \" + getCheckMessage(MSG_KEY, tagOrder),", "+            \"288: \" + getCheckMessage(MSG_KEY, tagOrder),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "786099d4cfdcdaef32f885d3cafea32a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testIgnoreHashCodeMethod() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreHashCodeMethod() throws Exception", "diff": ["-            \"41:26: '3_000' is a magic number.\",", "-            \"42:32: '1.5_0' is a magic number.\",", "-            \"43:27: '3' is a magic number.\",", "-            \"43:31: '4' is a magic number.\",", "-            \"45:29: '3' is a magic number.\",", "-            \"47:23: '3' is a magic number.\",", "-            \"48:26: '1.5' is a magic number.\",", "-            \"50:22: '3' is a magic number.\",", "-            \"50:29: '5' is a magic number.\",", "-            \"50:37: '3' is a magic number.\",", "-            \"54:26: '3' is a magic number.\",", "-            \"55:39: '3' is a magic number.\",", "-            \"60:25: '010' is a magic number.\",", "-            \"61:25: '011' is a magic number.\",", "-            \"63:30: '0_10L' is a magic number.\",", "-            \"64:30: '011l' is a magic number.\",", "-            \"68:24: '0x10' is a magic number.\",", "-            \"69:24: '0X011' is a magic number.\",", "-            \"71:29: '0x10L' is a magic number.\",", "-            \"72:29: '0X11l' is a magic number.\",", "-            \"85:28: '3' is a magic number.\",", "-            \"92:14: '0xffffffffL' is a magic number.\",", "-            \"100:30: '+3' is a magic number.\",", "-            \"101:29: '-2' is a magic number.\",", "-            \"102:35: '+3.5' is a magic number.\",", "-            \"103:36: '-2.5' is a magic number.\",", "-            \"111:35: '0x80000000' is a magic number.\",", "-            \"112:36: '0x8000000000000000L' is a magic number.\",", "-            \"115:37: '020000000000' is a magic number.\",", "-            \"116:38: '01000000000000000000000L' is a magic number.\",", "-            \"131:20: '378' is a magic number.\",", "-            \"165:16: '42' is a magic number.\",", "-            \"170:16: '13' is a magic number.\",", "-            \"174:15: '21' is a magic number.\",", "-            \"178:15: '37' is a magic number.\",", "-            \"182:15: '101' is a magic number.\",", "+            \"41:26: \" + getCheckMessage(MSG_KEY, \"3_000\"),", "+            \"42:32: \" + getCheckMessage(MSG_KEY, \"1.5_0\"),", "+            \"43:27: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"43:31: \" + getCheckMessage(MSG_KEY, \"4\"),", "+            \"45:29: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"47:23: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"48:26: \" + getCheckMessage(MSG_KEY, \"1.5\"),", "+            \"50:22: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"50:29: \" + getCheckMessage(MSG_KEY, \"5\"),", "+            \"50:37: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"54:26: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"55:39: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"60:25: \" + getCheckMessage(MSG_KEY, \"010\"),", "+            \"61:25: \" + getCheckMessage(MSG_KEY, \"011\"),", "+            \"63:30: \" + getCheckMessage(MSG_KEY, \"0_10L\"),", "+            \"64:30: \" + getCheckMessage(MSG_KEY, \"011l\"),", "+            \"68:24: \" + getCheckMessage(MSG_KEY, \"0x10\"),", "+            \"69:24: \" + getCheckMessage(MSG_KEY, \"0X011\"),", "+            \"71:29: \" + getCheckMessage(MSG_KEY, \"0x10L\"),", "+            \"72:29: \" + getCheckMessage(MSG_KEY, \"0X11l\"),", "+            \"85:28: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"92:14: \" + getCheckMessage(MSG_KEY, \"0xffffffffL\"),", "+            \"100:30: \" + getCheckMessage(MSG_KEY, \"+3\"),", "+            \"101:29: \" + getCheckMessage(MSG_KEY, \"-2\"),", "+            \"102:35: \" + getCheckMessage(MSG_KEY, \"+3.5\"),", "+            \"103:36: \" + getCheckMessage(MSG_KEY, \"-2.5\"),", "+            \"111:35: \" + getCheckMessage(MSG_KEY, \"0x80000000\"),", "+            \"112:36: \" + getCheckMessage(MSG_KEY, \"0x8000000000000000L\"),", "+            \"115:37: \" + getCheckMessage(MSG_KEY, \"020000000000\"),", "+            \"116:38: \" + getCheckMessage(MSG_KEY, \"01000000000000000000000L\"),", "+            \"131:20: \" + getCheckMessage(MSG_KEY, \"378\"),", "+            \"165:16: \" + getCheckMessage(MSG_KEY, \"42\"),", "+            \"170:16: \" + getCheckMessage(MSG_KEY, \"13\"),", "+            \"174:15: \" + getCheckMessage(MSG_KEY, \"21\"),", "+            \"178:15: \" + getCheckMessage(MSG_KEY, \"37\"),", "+            \"182:15: \" + getCheckMessage(MSG_KEY, \"101\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c783dd836fbf3aead16384d0a65d0930", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testIntegersOnly()         throws Exception", "signatureAfterChange": "      @Test     public void testIntegersOnly()         throws Exception", "diff": ["-            \"41:26: '3_000' is a magic number.\",", "-            \"43:27: '3' is a magic number.\",", "-            \"43:31: '4' is a magic number.\",", "-            \"45:29: '3' is a magic number.\",", "-            \"47:23: '3' is a magic number.\",", "-            \"50:22: '3' is a magic number.\",", "-            \"50:29: '5' is a magic number.\",", "-            \"50:37: '3' is a magic number.\",", "-            \"54:26: '3' is a magic number.\",", "-            \"55:39: '3' is a magic number.\",", "-            \"60:25: '010' is a magic number.\",", "-            \"61:25: '011' is a magic number.\",", "-            \"63:30: '0_10L' is a magic number.\",", "-            \"64:30: '011l' is a magic number.\",", "-            \"68:24: '0x10' is a magic number.\",", "-            \"69:24: '0X011' is a magic number.\",", "-            \"71:29: '0x10L' is a magic number.\",", "-            \"72:29: '0X11l' is a magic number.\",", "-            \"85:28: '3' is a magic number.\",", "-            \"92:14: '0xffffffffL' is a magic number.\",", "-            \"100:30: '+3' is a magic number.\",", "-            \"101:29: '-2' is a magic number.\",", "-            \"111:35: '0x80000000' is a magic number.\",", "-            \"112:36: '0x8000000000000000L' is a magic number.\",", "-            \"115:37: '020000000000' is a magic number.\",", "-            \"116:38: '01000000000000000000000L' is a magic number.\",", "-            \"131:20: '378' is a magic number.\",", "-            \"160:16: '31' is a magic number.\",", "-            \"165:16: '42' is a magic number.\",", "-            \"170:16: '13' is a magic number.\",", "-            \"174:15: '21' is a magic number.\",", "-            \"178:15: '37' is a magic number.\",", "-            \"182:15: '101' is a magic number.\",", "+            \"41:26: \" + getCheckMessage(MSG_KEY, \"3_000\"),", "+            \"43:27: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"43:31: \" + getCheckMessage(MSG_KEY, \"4\"),", "+            \"45:29: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"47:23: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"50:22: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"50:29: \" + getCheckMessage(MSG_KEY, \"5\"),", "+            \"50:37: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"54:26: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"55:39: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"60:25: \" + getCheckMessage(MSG_KEY, \"010\"),", "+            \"61:25: \" + getCheckMessage(MSG_KEY, \"011\"),", "+            \"63:30: \" + getCheckMessage(MSG_KEY, \"0_10L\"),", "+            \"64:30: \" + getCheckMessage(MSG_KEY, \"011l\"),", "+            \"68:24: \" + getCheckMessage(MSG_KEY, \"0x10\"),", "+            \"69:24: \" + getCheckMessage(MSG_KEY, \"0X011\"),", "+            \"71:29: \" + getCheckMessage(MSG_KEY, \"0x10L\"),", "+            \"72:29: \" + getCheckMessage(MSG_KEY, \"0X11l\"),", "+            \"85:28: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"92:14: \" + getCheckMessage(MSG_KEY, \"0xffffffffL\"),", "+            \"100:30: \" + getCheckMessage(MSG_KEY, \"+3\"),", "+            \"101:29: \" + getCheckMessage(MSG_KEY, \"-2\"),", "+            \"111:35: \" + getCheckMessage(MSG_KEY, \"0x80000000\"),", "+            \"112:36: \" + getCheckMessage(MSG_KEY, \"0x8000000000000000L\"),", "+            \"115:37: \" + getCheckMessage(MSG_KEY, \"020000000000\"),", "+            \"116:38: \" + getCheckMessage(MSG_KEY, \"01000000000000000000000L\"),", "+            \"131:20: \" + getCheckMessage(MSG_KEY, \"378\"),", "+            \"160:16: \" + getCheckMessage(MSG_KEY, \"31\"),", "+            \"165:16: \" + getCheckMessage(MSG_KEY, \"42\"),", "+            \"170:16: \" + getCheckMessage(MSG_KEY, \"13\"),", "+            \"174:15: \" + getCheckMessage(MSG_KEY, \"21\"),", "+            \"178:15: \" + getCheckMessage(MSG_KEY, \"37\"),", "+            \"182:15: \" + getCheckMessage(MSG_KEY, \"101\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e55fda8f7d30c44caa3e90d3f2ffa10e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault()         throws Exception", "signatureAfterChange": "     @Test     public void testDefault()         throws Exception", "diff": ["-            \"41:26: '3_000' is a magic number.\",", "-            \"42:32: '1.5_0' is a magic number.\",", "-            \"43:27: '3' is a magic number.\",", "-            \"43:31: '4' is a magic number.\",", "-            \"45:29: '3' is a magic number.\",", "-            \"47:23: '3' is a magic number.\",", "-            \"48:26: '1.5' is a magic number.\",", "-            \"50:22: '3' is a magic number.\",", "-            \"50:29: '5' is a magic number.\",", "-            \"50:37: '3' is a magic number.\",", "-            \"54:26: '3' is a magic number.\",", "-            \"55:39: '3' is a magic number.\",", "-            \"60:25: '010' is a magic number.\",", "-            \"61:25: '011' is a magic number.\",", "-            \"63:30: '0_10L' is a magic number.\",", "-            \"64:30: '011l' is a magic number.\",", "-            \"68:24: '0x10' is a magic number.\",", "-            \"69:24: '0X011' is a magic number.\",", "-            \"71:29: '0x10L' is a magic number.\",", "-            \"72:29: '0X11l' is a magic number.\",", "-            \"85:28: '3' is a magic number.\",", "-            \"92:14: '0xffffffffL' is a magic number.\",", "-            \"100:30: '+3' is a magic number.\",", "-            \"101:29: '-2' is a magic number.\",", "-            \"102:35: '+3.5' is a magic number.\",", "-            \"103:36: '-2.5' is a magic number.\",", "-            \"111:35: '0x80000000' is a magic number.\",", "-            \"112:36: '0x8000000000000000L' is a magic number.\",", "-            \"115:37: '020000000000' is a magic number.\",", "-            \"116:38: '01000000000000000000000L' is a magic number.\",", "-            \"131:20: '378' is a magic number.\",", "-            \"160:16: '31' is a magic number.\",", "-            \"165:16: '42' is a magic number.\",", "-            \"170:16: '13' is a magic number.\",", "-            \"174:15: '21' is a magic number.\",", "-            \"178:15: '37' is a magic number.\",", "-            \"182:15: '101' is a magic number.\",", "-            \"185:26: '42' is a magic number.\",", "+            \"41:26: \" + getCheckMessage(MSG_KEY, \"3_000\"),", "+            \"42:32: \" + getCheckMessage(MSG_KEY, \"1.5_0\"),", "+            \"43:27: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"43:31: \" + getCheckMessage(MSG_KEY, \"4\"),", "+            \"45:29: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"47:23: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"48:26: \" + getCheckMessage(MSG_KEY, \"1.5\"),", "+            \"50:22: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"50:29: \" + getCheckMessage(MSG_KEY, \"5\"),", "+            \"50:37: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"54:26: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"55:39: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"60:25: \" + getCheckMessage(MSG_KEY, \"010\"),", "+            \"61:25: \" + getCheckMessage(MSG_KEY, \"011\"),", "+            \"63:30: \" + getCheckMessage(MSG_KEY, \"0_10L\"),", "+            \"64:30: \" + getCheckMessage(MSG_KEY, \"011l\"),", "+            \"68:24: \" + getCheckMessage(MSG_KEY, \"0x10\"),", "+            \"69:24: \" + getCheckMessage(MSG_KEY, \"0X011\"),", "+            \"71:29: \" + getCheckMessage(MSG_KEY, \"0x10L\"),", "+            \"72:29: \" + getCheckMessage(MSG_KEY, \"0X11l\"),", "+            \"85:28: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"92:14: \" + getCheckMessage(MSG_KEY, \"0xffffffffL\"),", "+            \"100:30: \" + getCheckMessage(MSG_KEY, \"+3\"),", "+            \"101:29: \" + getCheckMessage(MSG_KEY, \"-2\"),", "+            \"102:35: \" + getCheckMessage(MSG_KEY, \"+3.5\"),", "+            \"103:36: \" + getCheckMessage(MSG_KEY, \"-2.5\"),", "+            \"111:35: \" + getCheckMessage(MSG_KEY, \"0x80000000\"),", "+            \"112:36: \" + getCheckMessage(MSG_KEY, \"0x8000000000000000L\"),", "+            \"115:37: \" + getCheckMessage(MSG_KEY, \"020000000000\"),", "+            \"116:38: \" + getCheckMessage(MSG_KEY, \"01000000000000000000000L\"),", "+            \"131:20: \" + getCheckMessage(MSG_KEY, \"378\"),", "+            \"160:16: \" + getCheckMessage(MSG_KEY, \"31\"),", "+            \"165:16: \" + getCheckMessage(MSG_KEY, \"42\"),", "+            \"170:16: \" + getCheckMessage(MSG_KEY, \"13\"),", "+            \"174:15: \" + getCheckMessage(MSG_KEY, \"21\"),", "+            \"178:15: \" + getCheckMessage(MSG_KEY, \"37\"),", "+            \"182:15: \" + getCheckMessage(MSG_KEY, \"101\"),", "+            \"185:26: \" + getCheckMessage(MSG_KEY, \"42\"),"]}]}