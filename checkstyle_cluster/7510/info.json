{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ee723f057bd8611a0a70f6f4d5e4e203", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ba7199b7b29b0fa3e4bfca1ad996878", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "7f9305442f4ba28403cac42aaddaafd5cb783514", "commitAfterChange": "12e8a3664b264388535070b5b7641f9f469adade", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void addError(AuditEvent aEvt)", "signatureAfterChange": "     public void addError(AuditEvent aEvt)", "diff": ["+        String fileName = aEvt.getFileName();", "+        String message = aEvt.getMessage();", "+", "+        // avoid StringBuffer.expandCapacity", "+        int bufLen = fileName.length() + message.length() + 12;", "+", "+        StringBuffer sb = new StringBuffer(bufLen);", "+", "+        sb.append(fileName);", "+        sb.append(':').append(aEvt.getLine());", "-            mErrorWriter.println(aEvt.getFileName()", "-                                 + \":\" + aEvt.getLine()", "-                                 + \":\" + aEvt.getColumn()", "-                                 + \": \" + aEvt.getMessage());", "+            sb.append(':').append(aEvt.getColumn());", "-        else {", "-            mErrorWriter.println(aEvt.getFileName()", "-                                 + \":\" + aEvt.getLine()", "-                                 + \": \" + aEvt.getMessage());", "-        }", "+        sb.append(\": \").append(message);", "+        mErrorWriter.println(sb.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c91b164742c1006787446b8b8b7b522b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "0db81f33e13f9829ee7de0b261f042017084b78f", "commitAfterChange": "70a6e2e6d34fa5a404e88e45cd62a20a06e19556", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Override     public void addError(AuditEvent event)", "signatureAfterChange": "     @Override     public void addError(AuditEvent event)", "diff": ["-", "-            final String fileName = event.getFileName();", "-            final String message = event.getMessage();", "-", "-            // avoid StringBuffer.expandCapacity", "-            final int bufLen = fileName.length() + message.length()", "-                + BUFFER_CUSHION;", "-            final StringBuilder sb = new StringBuilder(bufLen);", "-", "-            sb.append(fileName).append(':').append(event.getLine());", "-            if (event.getColumn() > 0) {", "-                sb.append(':').append(event.getColumn());", "-            }", "-            final String errorMessageSeparator = \": \";", "-            if (printSeverity) {", "-                sb.append(errorMessageSeparator).append(severityLevel.getName());", "-            }", "-            sb.append(errorMessageSeparator).append(message);", "-            errorWriter.println(sb);", "+            final String errorMessage = formatter.format(event);", "+            errorWriter.println(errorMessage);"]}]}