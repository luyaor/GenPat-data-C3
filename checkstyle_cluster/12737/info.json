{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "021dfdc4381a05cc09f79e2d26042fd2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "060f26fed952cb879f0f569ec29081ae", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportCheck.java", "commitBeforeChange": "d9bd21f3f7e589bfce3177a654f38a2e33ddf375", "commitAfterChange": "c819b4385834207d821677d35d54a81a2a02e43b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(final DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(final DetailAST aAST)", "diff": ["-        if (!mAllowClassImports", "-            && aAST.getType() == TokenTypes.IMPORT)", "-        {", "-            final DetailAST startingDot =", "-                aAST.getFirstChild();", "-            logsStarredImportViolation(startingDot, mExcludes);", "+        if (!mAllowClassImports && (TokenTypes.IMPORT == aAST.getType())) {", "+            final DetailAST startingDot = aAST.getFirstChild();", "+            logsStarredImportViolation(startingDot);", "-            && aAST.getType() == TokenTypes.STATIC_IMPORT)", "+            && (TokenTypes.STATIC_IMPORT == aAST.getType()))", "-            //must navigate past the static keyword", "-            final DetailAST startingDot =", "-                aAST.getFirstChild().getNextSibling();", "-            logsStarredImportViolation(startingDot, mExcludes);", "+            // must navigate past the static keyword", "+            final DetailAST startingDot = aAST.getFirstChild().getNextSibling();", "+            logsStarredImportViolation(startingDot);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29df01664e7b18466ac4fc942973e0fa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void logCommaViolation(final DetailAST ast)", "signatureAfterChange": "     private void logCommaViolation(final DetailAST ast)", "diff": ["-        if (TrailingArrayComma.ALWAYS == this.comma", "+        if (this.comma == TrailingArrayComma.ALWAYS", "-        else if (TrailingArrayComma.NEVER == this.comma", "+        else if (this.comma == TrailingArrayComma.NEVER"]}]}