{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54a79039c0b4965e97df5b2fa9bee0a9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ffdfdf9164fc693e293f1498ac26f99", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "6fc4ae2d4f85288769cdb13e9cd9ee39fba74143", "commitAfterChange": "31a9795d84272acee8e5a124e67c416c427813a5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            final FieldFrame frame = new FieldFrame();", "+            final DetailAST classMods =", "+                aAST.findFirstToken(TokenTypes.MODIFIERS);", "+            final boolean isStaticInnerClass =", "+                classMods.branchContains(TokenTypes.LITERAL_STATIC);", "+            final FieldFrame frame = new FieldFrame(isStaticInnerClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "effa252ea49979d5812ad349fffe44d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/HideUtilityClassConstructorCheck.java", "commitBeforeChange": "60ecfe9c06a8f1a9902fabcea659367e989343e6", "commitAfterChange": "066696714bd522b26177f6be814bac334e57b332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        if (hasMethod && !hasNonStaticMethod && hasAccessibleCtor) {", "+        // figure out if class extends java.lang.object directly", "+        // keep it simple for now and get a 99% solution", "+        // TODO: check for \"extends java.lang.Object\" and \"extends Object\"", "+        // consider \"import org.omg.CORBA.*\"", "+        final DetailAST extendsClause =", "+                aAST.findFirstToken(TokenTypes.EXTENDS_CLAUSE);", "+        final boolean extendsJLO = // J.Lo even made it into in our sources :-)", "+                extendsClause.getFirstChild() == null;", "+", "+        if (extendsJLO", "+                && hasMethod && !hasNonStaticMethod && hasAccessibleCtor)", "+        {"]}]}