{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d13bdf98417eb9bdfa461a6c64c47db7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e15afaebac48ccad025667064fece3d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private Entry<DetailAST, Integer> calculateDistanceBetweenScopes(             DetailAST aAST, DetailAST aVariable)", "signatureAfterChange": "     private Entry<DetailAST, Integer> calculateDistanceBetweenScopes(             DetailAST ast, DetailAST variable)", "diff": ["-            DetailAST aAST, DetailAST aVariable)", "+            DetailAST ast, DetailAST variable)", "-        DetailAST currentScopeAst = aAST;", "+        DetailAST currentScopeAst = ast;", "-                    if (isChild(currentStatementAst, aVariable)) {", "+                    if (isChild(currentStatementAst, variable)) {", "-                            blockWithVariableUsage, aVariable);", "+                            blockWithVariableUsage, variable);", "-                            blockWithVariableUsage, aVariable);", "+                            blockWithVariableUsage, variable);", "-                            blockWithVariableUsage, aVariable);", "+                            blockWithVariableUsage, variable);", "-                        getFirstNodeInsideTryCatchFinallyBlocks(blockWithVariableUsage, aVariable);", "+                        getFirstNodeInsideTryCatchFinallyBlocks(blockWithVariableUsage, variable);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "638fc922d55fcc2dad8f0475844a1fd6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private boolean isVariableInOperatorExpr(             DetailAST aOperator, DetailAST aVariable)", "signatureAfterChange": "     private boolean isVariableInOperatorExpr(             DetailAST operator, DetailAST variable)", "diff": ["-            DetailAST aOperator, DetailAST aVariable)", "+            DetailAST operator, DetailAST variable)", "-                aOperator.findFirstToken(TokenTypes.LPAREN);", "+                operator.findFirstToken(TokenTypes.LPAREN);", "-                if (isChild(exprBetweenBrackets, aVariable)) {", "+                if (isChild(exprBetweenBrackets, variable)) {", "-                switch (aOperator.getType()) {", "+                switch (operator.getType()) {", "-                    final DetailAST elseBlock = aOperator.getLastChild();", "+                    final DetailAST elseBlock = operator.getLastChild();", "-                                            aVariable);", "+                                            variable);", "-                    DetailAST currentCaseBlock = aOperator", "+                    DetailAST currentCaseBlock = operator", "-                                aVariable))", "+                                variable))"]}]}