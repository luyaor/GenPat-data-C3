{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "271906d063abc40d5b2afafc2ef09cb9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fe313d498d197f6f152444daaaecf66", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "19d1fb3602980349f5dc4c26f30b1db4f102c57e", "commitAfterChange": "3b452a2e88d0cb670be19818dbd8166335d65884", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void processTypeParams(DetailAST ast)", "signatureAfterChange": "     private void processTypeParams(DetailAST ast)", "diff": ["-                        createClassInfo(new Token(name), getCurrentClassName());", "+                        createClassInfo(new Token(name), currentClassName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e153067160cfebc5239bcb3baed77e70", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "050d1e55a819d639fe9116ec3ebd99902530c3f9", "commitAfterChange": "c3f9d975a814113a5c920da60eb9c7ab7623b3cf", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "         @Override         public ResourceBundle newBundle(String aBaseName, Locale aLocale, String aFormat,                  ClassLoader aLoader, boolean aReload) throws IOException", "signatureAfterChange": "         @Override         public ResourceBundle newBundle(String aBaseName, Locale aLocale, String aFormat,                  ClassLoader aLoader, boolean aReload) throws IOException", "diff": ["-    private static class UTF8Control extends Control {", "+    protected static class UTF8Control extends Control {", "-                try (Reader streamReader = new InputStreamReader(stream, \"UTF-8\")) {", "+                final Reader streamReader = new InputStreamReader(stream, \"UTF-8\");", "+                try {", "-                } finally {", "+                }", "+                finally {"]}]}