{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf4a43e30f474bd9cc32e5aa30777f8c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3bb2fd55cac51d336cffff1746028f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void process(File aFile)", "signatureAfterChange": "     private void process(File aFile)", "diff": ["-        catch (FileNotFoundException fnfe) {", "+        catch (final FileNotFoundException fnfe) {", "-        catch (IOException ioe) {", "+        catch (final IOException ioe) {", "-        catch (RecognitionException re) {", "+        catch (final RecognitionException re) {", "-        catch (TokenStreamRecognitionException tre) {", "+        catch (final TokenStreamRecognitionException tre) {", "-        catch (TokenStreamException te) {", "+        catch (final TokenStreamException te) {", "-        catch (Throwable err) {", "+        catch (final Throwable err) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccb963726d0e259802a17bfcb2be9bfb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private Properties createOverridingProperties()", "signatureAfterChange": "     private Properties createOverridingProperties()", "diff": ["-            catch (FileNotFoundException e) {", "+            catch (final FileNotFoundException e) {", "-            catch (IOException e) {", "+            catch (final IOException e) {", "-                catch (IOException e) {", "+                catch (final IOException e) {", "-        for (Iterator it = antProps.keySet().iterator(); it.hasNext();) {", "+        for (final Iterator it = antProps.keySet().iterator(); it.hasNext();) {", "-        for (Iterator it = mOverrideProps.iterator(); it.hasNext();) {", "+        for (final Iterator it = mOverrideProps.iterator(); it.hasNext();) {"]}]}