{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0d1c62f35ba65f8d5f22636b902235a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32ea556a175676ebc833dcabddd96fdc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "da5d8c09d268342836be6e6b7b4e45403d542b81", "commitAfterChange": "49314771b622e7e10bde3d13f8c38170da96a3db", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      public void testIgnoreAccess()         throws Exception", "signatureAfterChange": "      public void testIgnoreAccess()         throws Exception", "diff": ["-            filepath + \":24: variable 'data' must match pattern '^[A-Z]([A-Z0-9_]*[A-Z0-9])?$'.\",", "+            filepath + \":24: variable 'data' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5af665c1ec20a9c97dd1d3768339907a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/AnnotationTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testAnnotationOnClass()         throws Exception", "signatureAfterChange": "      @Test     public void testAnnotationOnClass()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputAnnotationsTest2.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputAnnotations2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2001c80405d162c7a3ba804b819a606", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyBlockTest.java", "commitBeforeChange": "c29af9d03619dfbf64f68185f8b1f1720f2f9676", "commitAfterChange": "63668c23e4fc6803b3161430f1d52fed67741c0f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void emptyBlockTestCatch() throws Exception", "signatureAfterChange": "      @Test     public void emptyBlockTestCatch() throws Exception", "diff": ["-        final String filePath = getPath(\"InputEmptyBlockCatch.java\");", "+        final String filePath = getPath(\"InputEmptyBlock.java\");"]}]}