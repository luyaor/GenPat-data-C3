{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24daf62548b4315cb42129b4fe3f5fcc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63ae86202814eb54c2d38578612c7114", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/WhitespaceAroundTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void whitespaceAroundEmptyTypesCyclesTest() throws Exception", "signatureAfterChange": "      @Test     public void whitespaceAroundEmptyTypesCyclesTest() throws Exception", "diff": ["-        Configuration checkConfig = builder.getCheckConfig(\"WhitespaceAround\");", "-        String filePath = builder.getFilePath(\"WhitespaceAroundInput_EmptyTypesAndCycles\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"WhitespaceAround\");", "+        final String filePath = builder.getFilePath(\"WhitespaceAroundInput_EmptyTypesAndCycles\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "967a5ed7dc46d02e41ce1f29932cb86c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4841indentation/IndentationTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void correctClassTest() throws Exception", "signatureAfterChange": "      @Test     public void correctClassTest() throws Exception", "diff": ["-        Configuration checkConfig = builder.getCheckConfig(\"Indentation\");", "-        String filePath = builder.getFilePath(\"IndentationCorrectClassInput\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"Indentation\");", "+        final String filePath = builder.getFilePath(\"IndentationCorrectClassInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b099c7adf49fadfe84bae5898fd48907", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/SeparatorWrapTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void separatorWrapTest() throws Exception", "signatureAfterChange": "      @Test     public void separatorWrapTest() throws Exception", "diff": ["-        Configuration checkConfig = builder.getCheckConfig(\"SeparatorWrap\");", "-        String filePath = builder.getFilePath(\"SeparatorWrapInput\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"SeparatorWrap\");", "+        final String filePath = builder.getFilePath(\"SeparatorWrapInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}]}