{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1962e8efad52d04a4232ecdd1a741491", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d4ef2d08f19365a04bad65c2f54625d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "90c0f0affe174beb80b45d5bc99ea9540d6d1c77", "commitAfterChange": "3288a81e30ddea194f76bd74f3b509500b864163", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws BuildException", "diff": ["-        final Configuration config = createConfiguration();", "+        if (mConfigFile == null) {", "+            throw new BuildException(\"Must specify 'config'.\", getLocation());", "+        }", "-                c = new Checker(config);", "+                final Configuration config = createConfiguration();", "+                final CheckConfiguration[] checkConfigs =", "+                    ConfigurationLoader.loadConfigs(", "+                        mConfigFile.getAbsolutePath());", "+                c = new Checker(config, checkConfigs);", "-                throw new BuildException(\"Unable to create a Checker\", e);", "+                throw new BuildException(", "+                    \"Unable to create a Checker: \" + e.getMessage(), e);", "-            final int numErrs = c.process(files);", "+            final int numErrs = c.processNEW(files);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94390e7e60131b938afbfd971ba13bbd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "07593d05c54a57285bc2e2012808146436ce47b5", "commitAfterChange": "44ad8ceedb46e06938ec7962f168835756db31c9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws BuildException", "diff": ["+                ", "+                //load the set of package names", "+                if (mPackageNamesFile != null) {", "+                    ModuleFactory moduleFactory =", "+                        PackageNamesLoader.loadModuleFactory(", "+                        mPackageNamesFile.getAbsolutePath());", "+                    c.setModuleFactory(moduleFactory);", "+                }"]}]}