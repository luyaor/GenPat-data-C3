{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "957bed509ecb0de9383b02c0f322f15a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ba7199b7b29b0fa3e4bfca1ad996878", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "7f9305442f4ba28403cac42aaddaafd5cb783514", "commitAfterChange": "12e8a3664b264388535070b5b7641f9f469adade", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void addError(AuditEvent aEvt)", "signatureAfterChange": "     public void addError(AuditEvent aEvt)", "diff": ["+        String fileName = aEvt.getFileName();", "+        String message = aEvt.getMessage();", "+", "+        // avoid StringBuffer.expandCapacity", "+        int bufLen = fileName.length() + message.length() + 12;", "+", "+        StringBuffer sb = new StringBuffer(bufLen);", "+", "+        sb.append(fileName);", "+        sb.append(':').append(aEvt.getLine());", "-            mErrorWriter.println(aEvt.getFileName()", "-                                 + \":\" + aEvt.getLine()", "-                                 + \":\" + aEvt.getColumn()", "-                                 + \": \" + aEvt.getMessage());", "+            sb.append(':').append(aEvt.getColumn());", "-        else {", "-            mErrorWriter.println(aEvt.getFileName()", "-                                 + \":\" + aEvt.getLine()", "-                                 + \": \" + aEvt.getMessage());", "-        }", "+        sb.append(\": \").append(message);", "+        mErrorWriter.println(sb.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c496a92758bc1eacfaaf77135ccd241a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentLevel.java", "commitBeforeChange": "1ca93bdf66b630e58d979ad2aa40f02e678db5cf", "commitAfterChange": "bc36fe40fcfb51e720dc531a824cd6664ccc4c8b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-        return Joiner.on(\", \").join(mLevels);", "+        if (mLevels.cardinality() == 1) {", "+            return String.valueOf(mLevels.nextSetBit(0));", "+        }", "+        final StringBuilder sb = new StringBuilder();", "+        for (int i = mLevels.nextSetBit(0); i >= 0;", "+            i = mLevels.nextSetBit(i + 1))", "+        {", "+            if (sb.length() > 0) {", "+                sb.append(\", \");", "+            }", "+            sb.append(i);", "+        }", "+        return sb.toString();"]}]}