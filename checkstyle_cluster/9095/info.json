{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83012d5dc77d78690b1ce37e149b9f3c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67dd0150b4d419aa70cf46f92a7cf1dc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/DetailASTTest.java", "commitBeforeChange": "9cc86b38df9a086713d1fcdf01b451b41c0d6f65", "commitAfterChange": "e9ec5bfbd5ab91852c3ec1b30492df5c06cdd3b1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private static void checkTree(final DetailAST node,                            final DetailAST parent,                            final DetailAST prev,                            final String filename,                            final DetailAST root)", "signatureAfterChange": "      private static void checkTree(final DetailAST node,                            final DetailAST parent,                            final DetailAST prev,                            final String filename,                            final DetailAST root)", "diff": ["-        String msg = MessageFormat.format(", "+        String badParentMsg = MessageFormat.format(", "-        assertEquals(msg, parent, node.getParent());", "-        msg = MessageFormat.format(", "+        assertEquals(badParentMsg, parent, node.getParent());", "+        String badPrevMsg = MessageFormat.format(", "-        assertEquals(msg, prev, node.getPreviousSibling());", "+        assertEquals(badPrevMsg, prev, node.getPreviousSibling());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74389e3270c533aba6f45148507c7392", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java", "commitBeforeChange": "199d3003aeb4cc7d748090fab7ee94a87e24058d", "commitAfterChange": "302f80bd65e3670d296bba40de712be7a0932bd3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected List parseElements(String aValue)         throws NullPointerException", "signatureAfterChange": "     protected List parseElements(final String aValue)         throws NullPointerException", "diff": ["-    protected List parseElements(String aValue)", "+    protected List parseElements(final String aValue)", "-        aValue = aValue.trim();", "-", "-        if (aValue.startsWith(\"{\") && aValue.endsWith(\"}\")) {", "-            aValue = aValue.substring(1, aValue.length() - 1);", "+        String str = aValue.trim();", "+        if (str.startsWith(\"{\") && str.endsWith(\"}\")) {", "+            str = str.substring(1, str.length() - 1);", "-        final StringTokenizer st = new StringTokenizer(aValue, \",\");", "+        final StringTokenizer st = new StringTokenizer(str, \",\");"]}]}