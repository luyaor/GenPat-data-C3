{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ad509edf842237af6593e4788bcda11", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56a98a85ee7ce45bc67222795ddc4a36", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "commitBeforeChange": "5670252b46f4915b276e647fa000361915eb4ff4", "commitAfterChange": "2dda964c91b5bc5dc42b78a6d0d74060b7062613", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        // method is ok if it is empty", "-        DetailAST implemetation = aAST.findFirstToken(TokenTypes.SLIST);", "-        if (implemetation.getFirstChild().getType() == TokenTypes.RCURLY) {", "+        // method is ok if it is implementation can verified to be empty", "+        // Note: native methods don't have impl in java code, so", "+        // implementation can be null even if method not abstract", "+        DetailAST implementation = aAST.findFirstToken(TokenTypes.SLIST);", "+        if (implementation != null", "+            && implementation.getFirstChild().getType() == TokenTypes.RCURLY)", "+        {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1ac4290b1ab7ec78762514125f4dd9c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "717ba0311d40b3ea64b8cd64fc243bc823e0dd14", "commitAfterChange": "084809c3b9e0d039c818cc4d8c5e640ea9e26525", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Class<?> resolve(String name, String currentClass)         throws ClassNotFoundException", "signatureAfterChange": "     public Class<?> resolve(String name, String currentClass)         throws ClassNotFoundException", "diff": ["-        if (!\"\".equals(pkg)) {", "+        if (pkg != null && !pkg.isEmpty()) {"]}]}