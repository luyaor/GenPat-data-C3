{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dd1e142f7a412e52a226b04f35126c4d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03e50815bf1b1a6d70e909343fe1319b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "79404974eff1458f4243f8acd6a08b6a8b869342", "commitAfterChange": "fe9057366308642868c25d427c3ee94411b37170", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Override     public void execute() throws BuildException", "signatureAfterChange": "      @Override     public void execute() throws BuildException", "diff": ["-        final ClassLoader loader = Thread.currentThread()", "-                .getContextClassLoader();", "+", "-            Thread.currentThread().setContextClassLoader(", "-                    getClass().getClassLoader());", "-            Thread.currentThread().setContextClassLoader(loader);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd6b3b1f392c1c70113f35294a21e1fb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java", "commitBeforeChange": "b42c26a8cd52e64e78c632e6b751df0cf6a48f59", "commitAfterChange": "aa0f77eb9294588b0d891dbde516bc43a5af4f5a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void findMatch()", "signatureAfterChange": "     private void findMatch()", "diff": ["-                final LineColumn end = text.lineColumn(matcher.end());", "-", "-                if (!options.getSuppressor().shouldSuppress(start.getLine(),", "-                        start.getColumn(), end.getLine(), end.getColumn())) {", "-                    currentMatches++;", "-                    if (currentMatches > options.getMaximum()) {", "-                        if (options.getMessage().isEmpty()) {", "-                            options.getReporter().log(start.getLine(),", "-                                    REGEXP_EXCEEDED, matcher.pattern().toString());", "-                        }", "-                        else {", "-                            options.getReporter()", "-                                    .log(start.getLine(), options.getMessage());", "-                        }", "+                currentMatches++;", "+                if (currentMatches > options.getMaximum()) {", "+                    if (options.getMessage().isEmpty()) {", "+                        options.getReporter().log(start.getLine(),", "+                                REGEXP_EXCEEDED, matcher.pattern().toString());", "+                    }", "+                    else {", "+                        options.getReporter()", "+                                .log(start.getLine(), options.getMessage());"]}]}