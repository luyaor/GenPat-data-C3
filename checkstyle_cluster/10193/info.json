{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d753a7718880d676bcd87e31638cbbf7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c3cffa9649286140b7d62d9abf63b87", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "f34eba11cbd8559d4d06f96e19affa70abaf86ff", "commitAfterChange": "0e3fe5643667a53079dbd114e5b1e9aa91fde083", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 28, "signatureBeforeChange": "     private int process(String aDir, String[] aFiles, Checker aChecker)", "signatureAfterChange": "         protected OutputStream createOutputStream(Task aTask)             throws IOException", "diff": ["-     **/", "-    private int process(String aDir, String[] aFiles, Checker aChecker)", "-        int retVal = 0;", "-        for (int i = 0; i < aFiles.length; i++) {", "-            retVal += aChecker.process(aDir + File.separator + aFiles[i]);", "-        return retVal;", "+         */", "+        protected OutputStream createOutputStream(Task aTask)", "+            throws IOException", "+        {", "+            if (mToFile == null) {", "+                return new LogOutputStream(aTask, Project.MSG_INFO);", "+            }", "+            return new FileOutputStream(mToFile);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf3abc10b2b42a8804631271da22d9b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "b3133035a4fa0e086dfb0dfbefbc7f1540521bbc", "commitAfterChange": "add2bdfb27494bff5fa9c305d9782f57c6170b18", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "         protected OutputStream createOutputStream(Task aTask)             throws IOException", "signatureAfterChange": "         private AuditListener createXMLLogger(Task aTask)             throws IOException", "diff": ["-        protected OutputStream createOutputStream(Task aTask)", "-                return new LogOutputStream(aTask, Project.MSG_INFO);", "-            return new FileOutputStream(mToFile);", "+         */", "+        private AuditListener createXMLLogger(Task aTask)", "+            throws IOException", "+        {", "+            if (mToFile == null) {", "+                return new XMLLogger(", "+                    new LogOutputStream(aTask, Project.MSG_INFO), true);", "+            }", "+            else {", "+                return new XMLLogger(new FileOutputStream(mToFile), true);", "+            }"]}]}