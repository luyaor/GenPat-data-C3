{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b834eb05cec40d1e3caab0465e735ba6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "637d6492ebcdd024d2564ddcbdf05df6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheck.java", "commitBeforeChange": "a135b0952a3041e37dfc9b81452bc016a5687e25", "commitAfterChange": "ca1c33e3112d9217e89eec82bbcd589381d48715", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-            // As file is already read, there should not be any exceptions.", "-            properties.load(new FileInputStream(file));", "+            final FileInputStream fileInputStream = new FileInputStream(file);", "+            try {", "+                // As file is already read, there should not be any exceptions.", "+                properties.load(fileInputStream);", "+            }", "+            finally {", "+                fileInputStream.close();", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92077d40088d35a45c1809d009394f28", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "ecc5239c78ca71db775de187b6b70481d8b08284", "commitAfterChange": "d2af4accdde3eac0a2103353f490e97bf62f61d2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private String getConfigHashCode(Serializable aConfiguration)", "signatureAfterChange": "     private String getConfigHashCode(Serializable aConfiguration)", "diff": ["-            final ObjectOutputStream oos = new ObjectOutputStream(baos);", "-            oos.writeObject(aConfiguration);", "-            oos.flush();", "-            oos.close();", "+            ObjectOutputStream oos = null;", "+            try {", "+                oos = new ObjectOutputStream(baos);", "+                oos.writeObject(aConfiguration);", "+            }", "+            finally {", "+                this.flushAndCloseOutStream(oos);", "+            }"]}]}