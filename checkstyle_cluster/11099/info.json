{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d8ff600b7acefd446f9a58e5a9e85b4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "541bcb3f9994974434b52b9d5a87be9c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public int[] getHandledTypes()", "signatureAfterChange": "     public int[] getHandledTypes()", "diff": ["-        final Set typeSet = mTypeHandlers.keySet();", "+        final Set<Integer> typeSet = mTypeHandlers.keySet();", "-        for (final Iterator i = typeSet.iterator(); i.hasNext(); index++) {", "-            types[index] = ((Integer) i.next()).intValue();", "+        for (final Iterator<Integer> i = typeSet.iterator(); i.hasNext();", "+            index++)", "+        {", "+            types[index] = (i.next()).intValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd156dea47a8ad41a504b197a34128ee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractOption.java", "commitBeforeChange": "4ebf621616e3c9ea2284e7109d19abbbe1a94efc", "commitAfterChange": "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public AbstractOption decode(String aStrRep)", "signatureAfterChange": "     public AbstractOption decode(String aStrRep)", "diff": ["-        final Map strToOpt = getStrToOpt();", "-        return (AbstractOption) strToOpt.get(aStrRep.trim().toLowerCase());", "+        final Map<String, AbstractOption> strToOpt = getStrToOpt();", "+        return strToOpt.get(aStrRep.trim().toLowerCase());"]}]}