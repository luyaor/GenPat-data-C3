{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8bfa919029a8fc887564c096dcb5685d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b9fd8f4579b99dabd0afed01bf491ed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/CovariantEqualsCheck.java", "commitBeforeChange": "5ce771ac776af4197ce832792a049e9357ca90b8", "commitAfterChange": "1d614c3a7ecf8a3ede4df8a50da46e71792d0025", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-                if (child.getType() == TokenTypes.METHOD_DEF) {", "-                    if (CheckUtils.isEqualsMethod(child)) {", "-                        if (hasObjectParameter(child)) {", "-                            hasEqualsObject = true;", "-                        }", "-                        else {", "-                            mEqualsMethods.add(child);", "-                        }", "+                if (child.getType() == TokenTypes.METHOD_DEF", "+                        && CheckUtils.isEqualsMethod(child))", "+                {", "+                    if (hasObjectParameter(child)) {", "+                        hasEqualsObject = true;", "+                    }", "+                    else {", "+                        mEqualsMethods.add(child);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a5e877e2a3187e4327ce1049e401ab3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/UnusedParameterCheck.java", "commitBeforeChange": "3d734ac4162e457e4d3679487a6726e94c17db5b", "commitAfterChange": "c91964b8d95ec0d220472c0efcfb3c1a0a7f6cc0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public boolean mustCheckReferenceCount(DetailAST aAST)", "signatureAfterChange": "     public boolean mustCheckReferenceCount(DetailAST aAST)", "diff": ["-                    if (grandparent.getType() == TokenTypes.METHOD_DEF) {", "-                        final DetailAST modifiersAST =", "-                            grandparent.findFirstToken(TokenTypes.MODIFIERS);", "-                        if ((modifiersAST != null)", "-                            && !modifiersAST.branchContains(TokenTypes.ABSTRACT)", "-                            && !ScopeUtils.inInterfaceBlock(aAST))", "-                        {", "-                            result = true;", "-                        }", "-                    }", "-                    else if (grandparent.getType() == TokenTypes.CTOR_DEF) {", "-                        result = true;", "-                    }", "+                    result = hasBody(grandparent);"]}]}