{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "838f0ef24627685b3571e69af6e9ae98", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "659636428bdbcb3011660f820aa3f6b4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "34770c3eaa9ad06297c13fd43a55739c02c7d67d", "commitAfterChange": "da940af3627944ad412904c15187627151e834e5", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "     void reportInstantiation(MyCommonAST aNewAST, LineText aTypeName)", "signatureAfterChange": "     void reportInstantiation(MyCommonAST aNewAST, LineText aTypeName)", "diff": ["-        if (\"java.lang.Boolean\".equals(typeName)", "-            || \"Boolean\".equals(typeName))", "-        {", "-            log(lineNo, colNo, \"Avoid instantiation of java.lang.Boolean\");", "+        final String fqClassName = getIllegalInstantiation(typeName);", "+        if (fqClassName != null) {", "+            log(lineNo, colNo, \"Avoid instantiation of \" + fqClassName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b58544d356ac797e6ff3d29765be10e5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static Configuration loadConfiguration(InputSource configSource,         PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(InputSource configSource,         PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "diff": ["-            throw new CheckstyleException(UNABLE_TO_PARSE_EXCEPTION_PREFIX", "-                    + \" - \" + e.getMessage() + \":\" + e.getLineNumber()", "-                    + \":\" + e.getColumnNumber(), e);", "+            final String message = String.format(\"%s - %s:%s:%s\", UNABLE_TO_PARSE_EXCEPTION_PREFIX,", "+                    e.getMessage(), e.getLineNumber(), e.getColumnNumber());", "+            throw new CheckstyleException(message, e);"]}]}