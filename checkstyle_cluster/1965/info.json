{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff8f0c29559ebbc12a3b4070c6138258", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f8a6a82e7e15d8226324a8e822f51d8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "commitBeforeChange": "5f68bb50fd191fec409f5edb90755a18fce3e0ac", "commitAfterChange": "b436b3cd9860529718b95c36dafe565fe68f6293", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static boolean isSingleLineIf(DetailAST literalIf)", "signatureAfterChange": "     private static boolean isSingleLineIf(DetailAST literalIf)", "diff": ["-        final DetailAST ifBlock = literalIf.getLastChild();", "-        final DetailAST lastElementInIfBlock = ifBlock.getLastChild();", "-        if (lastElementInIfBlock != null", "-            && lastElementInIfBlock.getFirstChild() == null", "-            && literalIf.getLineNo() == lastElementInIfBlock.getLineNo())", "-        {", "-            result = true;", "+        final DetailAST ifCondition = literalIf.findFirstToken(TokenTypes.EXPR);", "+        if (literalIf.getParent().getType() == TokenTypes.SLIST) {", "+            DetailAST block = literalIf.getLastChild();", "+            if (block.getType() != TokenTypes.LITERAL_RETURN) {", "+                block = literalIf.getLastChild().getPreviousSibling();", "+            }", "+            result = ifCondition.getLineNo() == block.getLineNo();", "+        }", "+        return result;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8be9655a452e21c98f8c9a2b54952cad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "6125beffc437f970eae276b4a6542265c6547784", "commitAfterChange": "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 3, "signatureBeforeChange": "         public ClassInfo(FullIdent aName, Class aClass)", "signatureAfterChange": "     public final void leaveToken(DetailAST aAST)", "diff": ["+    /** @see com.puppycrawl.tools.checkstyle.api.Check */", "+    public final void leaveToken(DetailAST aAST)", "+    {", "+        if (aAST.getType() == TokenTypes.CLASS_DEF) {", "+            int dotIdx = mCurrentClass.lastIndexOf(\".\");", "+            if (dotIdx == -1) {", "+                mCurrentClass = \"\";", "+            }", "+            else {", "+                mCurrentClass = mCurrentClass.substring(0, dotIdx);", "+            }", "-        public ClassInfo(FullIdent aName, Class aClass)", "-        {", "-            if (aName == null && aClass == null) {", "-                throw new NullPointerException(", "-                    \"ClassInfo's name or class should be non-null\");", "-            }", "-            mName = aName;", "-            setClazz(aClass);", "-        }"]}]}