{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "664709e77d82421810bbd2a033420482", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0113f8103e452f557f8aaf7fd100d96e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private static boolean isCommentConsistent(String comment)", "signatureAfterChange": "      private static boolean isCommentConsistent(String comment)", "diff": ["-        Matcher multilevelMatch = MULTILEVEL_COMMENT_REGEX.matcher(comment);", "+        final Matcher multilevelMatch = MULTILEVEL_COMMENT_REGEX.matcher(comment);", "-        Matcher singleLevelMatch = SINGLE_LEVEL_COMMENT_REGEX.matcher(comment);", "+        final Matcher singleLevelMatch = SINGLE_LEVEL_COMMENT_REGEX.matcher(comment);", "-        Matcher nonStrictLevelMatch = NON_STRICT_LEVEL_COMMENT_REGEX.matcher(comment);", "+        final Matcher nonStrictLevelMatch = NON_STRICT_LEVEL_COMMENT_REGEX.matcher(comment);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f74f8ac9800edbe6d8dfa0d0d87ba963", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/IndentationConfigurationBuilder.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private static CommentType getCommentType(String comment)", "signatureAfterChange": "      private static CommentType getCommentType(String comment)", "diff": ["-        Matcher multilevelMatch = MULTILEVEL_COMMENT_REGEX.matcher(comment);", "+        final Matcher multilevelMatch = MULTILEVEL_COMMENT_REGEX.matcher(comment);", "-            Matcher singleLevelMatch = SINGLE_LEVEL_COMMENT_REGEX.matcher(comment);", "+            final Matcher singleLevelMatch = SINGLE_LEVEL_COMMENT_REGEX.matcher(comment);", "-                Matcher nonStrictLevelMatch = NON_STRICT_LEVEL_COMMENT_REGEX.matcher(comment);", "+                final Matcher nonStrictLevelMatch = NON_STRICT_LEVEL_COMMENT_REGEX.matcher(comment);"]}]}