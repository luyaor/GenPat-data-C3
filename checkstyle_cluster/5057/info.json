{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d06f9b90627f418ffd9d2b68eb0a0f2", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a00e73a2b68480dda1f5db308e7869c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "3b5c81da39e0a179d439ac18c880b3d79970037d", "commitAfterChange": "17754d363645285e49bf4323a1af5762af47a8ea", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          @Override         public void startElement(String aNamespaceURI,                                  String aLocalName,                                  String aQName,                                  Attributes aAtts)             throws SAXException", "signatureAfterChange": "          @Override         public void startElement(String aNamespaceURI,                                  String aLocalName,                                  String aQName,                                  Attributes aAtts)             throws SAXException", "diff": ["+            }", "+            else if (aQName.equals(MESSAGE)) {", "+", "+                //extract key and value", "+                final String key = aAtts.getValue(KEY);", "+                final String value = aAtts.getValue(VALUE);", "+", "+                //add to messages of configuration", "+                final DefaultConfiguration top =", "+                    mConfigStack.peek();", "+                top.addMessage(key, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e39ce5bc321afd33e889bf069b5755d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "425fd5a27cd567d5784bd246729c55cf8cda3dbd", "commitAfterChange": "6438bb246b9e6b2b6cd31e1c028853440d52d64b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "         public boolean isMatch(AuditEvent event)", "signatureAfterChange": "         public boolean isMatch(AuditEvent event)", "diff": ["-                else if (tagMessageRegexp != null) {", "+                else if (tagMessageRegexp == null) {", "+                    if (event.getModuleId() != null) {", "+                        final Matcher idMatcher = tagCheckRegexp.matcher(event.getModuleId());", "+                        match = idMatcher.find();", "+                    }", "+                }", "+                else {"]}]}