{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2631121faffe86d15a52438c4907338a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16146b41470bf9d8b2eba8acfb193c36", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        LeftCurlyCheck check = new LeftCurlyCheck();", "-        int[] actual = check.getAcceptableTokens();", "-        int[] expected = {", "+        final LeftCurlyCheck check = new LeftCurlyCheck();", "+        final int[] actual = check.getAcceptableTokens();", "+        final int[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2961c6ff690f00136eb9894cb7081769", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MemberNameCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        MemberNameCheck memberNameCheckObj = new MemberNameCheck();", "-        int[] actual = memberNameCheckObj.getAcceptableTokens();", "-        int[] expected = {", "+        final MemberNameCheck memberNameCheckObj = new MemberNameCheck();", "+        final int[] actual = memberNameCheckObj.getAcceptableTokens();", "+        final int[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cc13d863c7924db0fd509c9e111b9ae", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void customJavadocTags()         throws IOException", "signatureAfterChange": "      @Test     public void customJavadocTags()         throws IOException", "diff": ["-        String filename = getDocPath(\"InputCustomJavadocTags.txt\");", "-        ParseTree generatedTree = parseJavadoc(getFileContent(new File(filename)));", "-        ParseTree expectedTree = ParseTreeBuilder.treeCustomJavadocTags();", "+        final String filename = getDocPath(\"InputCustomJavadocTags.txt\");", "+        final ParseTree generatedTree = parseJavadoc(getFileContent(new File(filename)));", "+        final ParseTree expectedTree = ParseTreeBuilder.treeCustomJavadocTags();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e80eb6ebdb0138d08de1f3cfca53846", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoaderTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test(expected = InvocationTargetException.class     public void testLoadThrowsException() throws InvocationTargetException", "signatureAfterChange": "      @Test(expected = InvocationTargetException.class     public void testLoadThrowsException() throws InvocationTargetException", "diff": ["-        InputSource source = new InputSource();", "+        final InputSource source = new InputSource();", "-            Class<?> clazz = ImportControlLoader.class;", "-            Method privateMethod = clazz.getDeclaredMethod(\"load\", InputSource.class, URI.class);", "+            final Class<?> clazz = ImportControlLoader.class;", "+            final Method privateMethod = clazz.getDeclaredMethod(\"load\", InputSource.class,", "+                URI.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c43ff277d9738149ce83449f62db7969", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      @Test     public void fewWhiteSpacesAsSeparator()         throws IOException", "signatureAfterChange": "      @Test     public void fewWhiteSpacesAsSeparator()         throws IOException", "diff": ["-        String filename = getDocPath(\"InputFewWhiteSpacesAsSeparator.txt\");", "-        ParseTree generatedTree = parseJavadoc(getFileContent(new File(filename)));", "-        ParseTree expectedTree = ParseTreeBuilder.treeFewWhiteSpacesAsSeparator();", "+        final String filename = getDocPath(\"InputFewWhiteSpacesAsSeparator.txt\");", "+        final ParseTree generatedTree = parseJavadoc(getFileContent(new File(filename)));", "+        final ParseTree expectedTree = ParseTreeBuilder.treeFewWhiteSpacesAsSeparator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f86ea2e8d1b1cae786083b7922dff8b6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/ClassResolverTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testMisc() throws ClassNotFoundException", "signatureAfterChange": "     @Test     public void testMisc() throws ClassNotFoundException", "diff": ["-        ClassResolver classResolver =", "+        final ClassResolver classResolver =", "-        ClassResolver newClassResolver = new ClassResolver(", "+        final ClassResolver newClassResolver = new ClassResolver(", "-        ClassResolver javaUtilClassResolver = new ClassResolver(", "+        final ClassResolver javaUtilClassResolver = new ClassResolver("]}]}