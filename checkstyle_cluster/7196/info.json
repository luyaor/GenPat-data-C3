{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "db24a73d9040c5e28d3aa2a69198118a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5defe79b7bc0eb60cd458cd00c3f1ad9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingSwitchDefaultCheck.java", "commitBeforeChange": "bca492cc217f781c64091ec00cccf17d60be893c", "commitAfterChange": "d74f5bb61c9d8a45af94f5539b2001d25e1f3076", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public MissingSwitchDefaultCheck()", "signatureAfterChange": "     private static boolean containsDefaultSwitch(DetailAST caseGroupAst)", "diff": ["-    /** Creates new instance of the check. */", "-    public MissingSwitchDefaultCheck() {", "-        setLimitedTokens(TokenUtils.getTokenName(TokenTypes.LITERAL_DEFAULT));", "-        setMinimumNumber(1);", "-        setMaximumDepth(2);", "-        setMinimumMessage(MSG_KEY);", "-    }", "+     */", "+    private static boolean containsDefaultSwitch(DetailAST caseGroupAst) {", "+        DetailAST nextAst = caseGroupAst;", "+        boolean found = false;", "+", "+        while (nextAst != null) {", "+            if (nextAst.findFirstToken(TokenTypes.LITERAL_DEFAULT) != null) {", "+                found = true;", "+                break;", "+            }", "+", "+            nextAst = nextAst.getNextSibling();", "+        }", "+", "+        return found;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf0579239cfb2418370f8f500f381a2e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java", "commitBeforeChange": "9aa49c8f6d2b30577565f87984819e1df0d62d0f", "commitAfterChange": "c56dce9222a819b4741b4c0cd664d38c58b31050", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private static boolean isMultiDimensionalArray(DetailAST arrayDeclaration)", "signatureAfterChange": "     private static DetailAST getTypeLastNode(DetailAST ast)", "diff": ["+     */", "+    private static DetailAST getTypeLastNode(DetailAST ast) {", "+        DetailAST result = ast.findFirstToken(TokenTypes.TYPE_ARGUMENTS);", "+        if (result == null) {", "+            result = getIdentLastToken(ast);", "+            if (result == null) {", "+                //primitive literal expected", "+                result = ast.getFirstChild();", "+            result = result.findFirstToken(TokenTypes.GENERIC_END);", "+        }", "+        return result;", "+    }", "-     */", "-    private static boolean isMultiDimensionalArray(DetailAST arrayDeclaration) {", "-        return arrayDeclaration.getParent().getType() == TokenTypes.ARRAY_DECLARATOR", "-                || arrayDeclaration.getFirstChild().getType() == TokenTypes.ARRAY_DECLARATOR;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce3bf3e80068acc3678d1e4d7eb36ae2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "3f691ec451055c2752ae2d6b25f9a3c050a10783", "commitAfterChange": "425fd5a27cd567d5784bd246729c55cf8cda3dbd", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 43, "signatureBeforeChange": "         boolean contains(DetailAST nameToFind)", "signatureAfterChange": "         private boolean containsMethodDef(Set<DetailAST> set, DetailAST ident)", "diff": ["-        boolean contains(DetailAST nameToFind) {", "-            return containsName(varIdents, nameToFind);", "+         */", "+        private boolean containsMethodDef(Set<DetailAST> set, DetailAST ident) {", "+            boolean result = false;", "+            for (DetailAST ast: set) {", "+                if (isSimilarSignature(ident, ast)) {", "+                    result = true;", "+                    break;", "+                }", "+            }", "+            return result;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f734dee95287d0c31225dc80242b52c0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "3300c3c835982e11c24b89e7c11ec9d7333cfb52", "commitAfterChange": "795968d20ed78e558a95fdd35702366327a4bdc1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private boolean isInAnnotation(DetailAST ast)", "signatureAfterChange": "     private static boolean isChildOf(DetailAST ast, int type)", "diff": ["-    private boolean isInAnnotation(DetailAST ast)", "+    private static boolean isChildOf(DetailAST ast, int type)", "-        return TokenTypes.ANNOTATION == ast.getParent().getParent().getType()", "-                || TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR", "-                        == ast.getParent().getParent().getType();", "+        boolean result = false;", "+        DetailAST node = ast;", "+        do {", "+            if (node.getType() == type) {", "+                result = true;", "+            }", "+            node = node.getParent();", "+        } while (node != null && !result);", "+", "+        return result;"]}]}