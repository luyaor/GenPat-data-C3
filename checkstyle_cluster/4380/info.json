{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e701139730a658dd6364ab2fd37dd29f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "003648499cdccd98b43148a321e277c1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "aa5dbacdcbf20a9b56e2f7ecb577bb47778b0c54", "commitAfterChange": "84c1f8375fa540e7b0313b95af6be6000e3c4c71", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     void reportImport(int aLineNo, String aType)", "signatureAfterChange": "     void reportImport(int aLineNo, String aType)", "diff": ["-        if (!mConfig.isIgnoreImports()) {", "-            // Check for a duplicate import", "-            final Iterator it = mImports.iterator();", "-            while (it.hasNext()) {", "-                final LineText lt = (LineText) it.next();", "-                if (aType.equals(lt.getText())) {", "-                    mMessages.add(aLineNo, \"import.duplicate\",", "-                                  new Integer(lt.getLineNo()));", "-                }", "-            }", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fb6e6b91e5004dd6ad4cb790443a699", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RedundantImportCheck.java", "commitBeforeChange": "aa5dbacdcbf20a9b56e2f7ecb577bb47778b0c54", "commitAfterChange": "84c1f8375fa540e7b0313b95af6be6000e3c4c71", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["+            // Check for a duplicate import", "+            final Iterator it = mImports.iterator();", "+            while (it.hasNext()) {", "+                final FullIdent full = (FullIdent) it.next();", "+                if (imp.getText().equals(full.getText())) {", "+                    log(aAST.getLineNo(),", "+                        aAST.getColumnNo(),", "+                        \"import.duplicate\",", "+                        new Integer(full.getLineNo()));", "+                }", "+            }", "+", "+            mImports.add(imp);"]}]}