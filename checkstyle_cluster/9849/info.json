{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b866b4e0282041203936ccead30de807", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a03faf2f1107e6823d69a94b374bf7d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "f8a53831f0fa98f317ea7dbc6490b5e91b6cc5d9", "commitAfterChange": "5703b6e33550d6e9706f42e253c2cc7d83a358bf", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "       public void testScopeInnerInterfacesPublic()         throws Exception", "signatureAfterChange": "       public void testScopeInnerInterfacesPublic()         throws Exception", "diff": ["-            filepath + \":7: type is missing a Javadoc comment.\",", "-            filepath + \":38: type is missing a Javadoc comment.\",", "+            filepath + \":7: Missing a Javadoc comment.\",", "+            filepath + \":38: Missing a Javadoc comment.\",", "-            filepath + \":43:9: method is missing a Javadoc comment.\",", "-            filepath + \":44:9: method is missing a Javadoc comment.\"", "+            filepath + \":43:9: Missing a Javadoc comment.\",", "+            filepath + \":44:9: Missing a Javadoc comment.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e639e21bd3828d2895d473b952ec073", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "f8a53831f0fa98f317ea7dbc6490b5e91b6cc5d9", "commitAfterChange": "5703b6e33550d6e9706f42e253c2cc7d83a358bf", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void testRelaxedJavadoc()         throws Exception", "signatureAfterChange": "     public void testRelaxedJavadoc()         throws Exception", "diff": ["-            filepath + \":7: type is missing a Javadoc comment.\",", "+            filepath + \":7: Missing a Javadoc comment.\",", "-            filepath + \":59:5: method is missing a Javadoc comment.\",", "-            filepath + \":64:5: method is missing a Javadoc comment.\",", "-            filepath + \":79:5: method is missing a Javadoc comment.\",", "-            filepath + \":84:5: method is missing a Javadoc comment.\"", "+            filepath + \":59:5: Missing a Javadoc comment.\",", "+            filepath + \":64:5: Missing a Javadoc comment.\",", "+            filepath + \":79:5: Missing a Javadoc comment.\",", "+            filepath + \":84:5: Missing a Javadoc comment.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bb07f22cf180ca98dd7abc70d769138", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "a1cecb5e0658862f957e60a8d5b2ade13b592101", "commitAfterChange": "659e6ec7aa7251ea0a825f48c1a523431ff09b79", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public void testRelaxedJavadoc()         throws Exception", "signatureAfterChange": "     public void testRelaxedJavadoc()         throws Exception", "diff": ["-            filepath + \":59: method is missing a Javadoc comment.\",", "-            filepath + \":64: method is missing a Javadoc comment.\",", "-            filepath + \":79: method is missing a Javadoc comment.\",", "-            filepath + \":84: method is missing a Javadoc comment.\"", "+            filepath + \":59:5: method is missing a Javadoc comment.\",", "+            filepath + \":64:5: method is missing a Javadoc comment.\",", "+            filepath + \":79:5: method is missing a Javadoc comment.\",", "+            filepath + \":84:5: method is missing a Javadoc comment.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9aab553703e671c56b0b6b0104189c7e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "f7b0ed0a76147c82b98d87f425d2722e3b20d53a", "commitAfterChange": "d7c1da9a93994f9a6125dcbde13976aea3f4b924", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void testSimple()         throws Exception", "signatureAfterChange": "      public void testSimple()         throws Exception", "diff": ["-        mProps.setProperty(Defn.MAX_FILE_LENGTH_PROP, \"20\");", "-            filepath + \":1: File length is 198 lines (max allowed is 20).\",", "-            filepath + \":19:25: Line contains a tab character.\",", "-            filepath + \":145:35: Line contains a tab character.\",", "-            filepath + \":146:64: Line contains a tab character.\",", "-            filepath + \":154:9: Line contains a tab character.\",", "-            filepath + \":155:10: Line contains a tab character.\",", "-            filepath + \":156:1: Line contains a tab character.\",", "-            filepath + \":157:3: Line contains a tab character.\",", "-            filepath + \":158:3: Line contains a tab character.\","]}]}