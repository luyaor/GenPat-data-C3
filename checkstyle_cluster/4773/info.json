{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ae4fa2a789e74c11f324059922b81d88", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5de87c6fa8eb68146eeafc820ad410d1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/NonEmptyAtclauseDescriptionCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testCheck()             throws Exception", "signatureAfterChange": "     @Test     public void testCheck()             throws Exception", "diff": ["-            \"26: At-clause should have a non-empty description.\",", "+            \"26: \" + getCheckMessage(MSG_KEY),", "-            \"27: At-clause should have a non-empty description.\",", "+            \"27: \" + getCheckMessage(MSG_KEY),", "-            \"28: At-clause should have a non-empty description.\",", "+            \"28: \" + getCheckMessage(MSG_KEY),", "-            \"37: At-clause should have a non-empty description.\",", "+            \"37: \" + getCheckMessage(MSG_KEY),", "-            \"38: At-clause should have a non-empty description.\",", "+            \"38: \" + getCheckMessage(MSG_KEY),", "-            \"39: At-clause should have a non-empty description.\",", "-            \"75: At-clause should have a non-empty description.\",", "-            \"76: At-clause should have a non-empty description.\",", "-            \"77: At-clause should have a non-empty description.\",", "-            \"78: At-clause should have a non-empty description.\",", "-            \"79: At-clause should have a non-empty description.\",", "-            \"80: At-clause should have a non-empty description.\",", "-            \"89: At-clause should have a non-empty description.\",", "-            \"90: At-clause should have a non-empty description.\",", "-            \"91: At-clause should have a non-empty description.\",", "-            \"92: At-clause should have a non-empty description.\",", "-            \"93: At-clause should have a non-empty description.\",", "+            \"39: \" + getCheckMessage(MSG_KEY),", "+            \"75: \" + getCheckMessage(MSG_KEY),", "+            \"76: \" + getCheckMessage(MSG_KEY),", "+            \"77: \" + getCheckMessage(MSG_KEY),", "+            \"78: \" + getCheckMessage(MSG_KEY),", "+            \"79: \" + getCheckMessage(MSG_KEY),", "+            \"80: \" + getCheckMessage(MSG_KEY),", "+            \"89: \" + getCheckMessage(MSG_KEY),", "+            \"90: \" + getCheckMessage(MSG_KEY),", "+            \"91: \" + getCheckMessage(MSG_KEY),", "+            \"92: \" + getCheckMessage(MSG_KEY),", "+            \"93: \" + getCheckMessage(MSG_KEY),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d06fa6e5aaab3926a79b14c9af2abd45", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheckTest.java", "commitBeforeChange": "e3741d10267df217664f47fdf68169286e2d31bc", "commitAfterChange": "2554557c1c4dda6cb348ba053a60c17d8ada9f73", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testIt() throws Exception", "signatureAfterChange": "     public void testIt() throws Exception", "diff": ["-            \"102:15: Inner assignments should be avoided.\",", "-            \"102:19: Inner assignments should be avoided.\",", "-            \"104:39: Inner assignments should be avoided.\",", "-            \"106:35: Inner assignments should be avoided.\",", "+            \"11:15: Inner assignments should be avoided.\",", "+            \"11:19: Inner assignments should be avoided.\",", "+            \"13:39: Inner assignments should be avoided.\",", "+            \"15:35: Inner assignments should be avoided.\",", "+", "+            \"33:16: Inner assignments should be avoided.\",", "+            \"34:24: Inner assignments should be avoided.\",", "+            \"35:19: Inner assignments should be avoided.\",", "+            \"36:17: Inner assignments should be avoided.\",", "+            \"37:29: Inner assignments should be avoided.\",", "+            \"38:20: Inner assignments should be avoided.\",", "+            \"39:17: Inner assignments should be avoided.\",", "+            \"39:31: Inner assignments should be avoided.\",", "+            \"39:41: Inner assignments should be avoided.\",", "+            \"40:16: Inner assignments should be avoided.\",", "+            \"40:27: Inner assignments should be avoided.\",", "+            \"41:32: Inner assignments should be avoided.\",", "-        verify(checkConfig, getPath(\"InputSemantic.java\"), expected);", "+        verify(checkConfig, getPath(\"coding\" + File.separator + \"InputInnerAssignment.java\"), expected);"]}]}