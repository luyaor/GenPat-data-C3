{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "13799127efcc847a6ff0fdc3b8d4fc3f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "197a3dc5b1835e276ec6a36dc69ceebc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SingleLineJavadocCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void simpleTest() throws Exception", "signatureAfterChange": "     @Test     public void simpleTest() throws Exception", "diff": ["-            \"4: Single-line Javadoc comment should be multi-line.\",", "-            \"12: Single-line Javadoc comment should be multi-line.\",", "+            \"4: \" + getCheckMessage(MSG_KEY),", "+            \"12: \" + getCheckMessage(MSG_KEY),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a0f456ee7797589de88dcdd0467e0c7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testMultiCaseClass() throws Exception", "signatureAfterChange": "     @Test     public void testMultiCaseClass() throws Exception", "diff": ["-            \"99:18: Only one statement per line allowed.\",", "-            \"127:11: Only one statement per line allowed.\",", "+            \"99:18: \" + getCheckMessage(MSG_KEY),", "+            \"127:11: \" + getCheckMessage(MSG_KEY),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3c42de76db3131a7ab206bf8853de44", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIt() throws Exception", "signatureAfterChange": "     @Test     public void testIt() throws Exception", "diff": ["-            \"20:9: Conditional logic can be removed.\",", "-            \"33:9: Conditional logic can be removed.\",", "+            \"20:9: \" + getCheckMessage(MSG_KEY),", "+            \"33:9: \" + getCheckMessage(MSG_KEY),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6182f5dce8d8515e73face774e024d6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/InterfaceIsTypeCheckTest.java", "commitBeforeChange": "5d698f4a58b66958b13cb04735fefa3f4fa4b9e7", "commitAfterChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testAllowMarker()         throws Exception", "signatureAfterChange": "      @Test     public void testAllowMarker()         throws Exception", "diff": ["-            \"20: interfaces should describe a type and hence have methods.\",", "-            \"25: interfaces should describe a type and hence have methods.\",", "+            \"20: \" + getCheckMessage(MSG_KEY),", "+            \"25: \" + getCheckMessage(MSG_KEY),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc8ad30f8a0450c1a6d262ea2eb71cfa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheckTest.java", "commitBeforeChange": "27149f3504a2f350b74f456a9bffbae76a460060", "commitAfterChange": "5ede09997c283b4c418f0f540848e006be04fa87", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testExcludedClasses()         throws Exception", "signatureAfterChange": "      @Test     public void testExcludedClasses()         throws Exception", "diff": ["-            \"14: Uncommented main method found.\",", "-            \"32: Uncommented main method found.\",", "+            \"14: \" + getCheckMessage(MSG_KEY),", "+            \"32: \" + getCheckMessage(MSG_KEY),"]}]}