{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "357126a82ebba619553dc543b1861371", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e827c2b2755986a0f981de18bb8cb33", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "commitAfterChange": "6125beffc437f970eae276b4a6542265c6547784", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void checkComment(DetailAST aAST, TextBlock aComment)", "signatureAfterChange": "     private void checkComment(DetailAST aAST, TextBlock aComment)", "diff": ["-        // Check for inheritDoc", "-        boolean hasInheritDocTag = false;", "-        while (it.hasNext() && !hasInheritDocTag) {", "-            hasInheritDocTag |=", "-                ((JavadocTag) it.next()).isInheritDocTag();", "-        }", "+        if (aAST.getType() != TokenTypes.ANNOTATION_FIELD_DEF) {", "+            // Check for inheritDoc", "+            boolean hasInheritDocTag = false;", "+            while (it.hasNext() && !hasInheritDocTag) {", "+                hasInheritDocTag |=", "+                    ((JavadocTag) it.next()).isInheritDocTag();", "+            }", "-        checkParamTags(tags, getParameters(aAST), !hasInheritDocTag);", "-        checkThrowsTags(tags, getThrows(aAST), !hasInheritDocTag);", "-        if (isFunction(aAST)) {", "-            checkReturnTag(tags, aAST.getLineNo(), !hasInheritDocTag);", "+            checkParamTags(tags, getParameters(aAST), !hasInheritDocTag);", "+            checkThrowsTags(tags, getThrows(aAST), !hasInheritDocTag);", "+            if (isFunction(aAST)) {", "+                checkReturnTag(tags, aAST.getLineNo(), !hasInheritDocTag);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf109ea67c514a400b5ee5c5a67e2fc2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     private void checkComment(DetailAST aAST, TextBlock aComment)", "signatureAfterChange": "     private void checkComment(DetailAST ast, TextBlock comment)", "diff": ["-    private void checkComment(DetailAST aAST, TextBlock aComment)", "+    private void checkComment(DetailAST ast, TextBlock comment)", "-        final List<JavadocTag> tags = getMethodTags(aComment);", "+        final List<JavadocTag> tags = getMethodTags(comment);", "-        if (hasShortCircuitTag(aAST, tags)) {", "+        if (hasShortCircuitTag(ast, tags)) {", "-        if (aAST.getType() != TokenTypes.ANNOTATION_FIELD_DEF) {", "+        if (ast.getType() != TokenTypes.ANNOTATION_FIELD_DEF) {", "-            checkParamTags(tags, aAST, !hasInheritDocTag);", "-            checkThrowsTags(tags, getThrows(aAST), !hasInheritDocTag);", "-            if (isFunction(aAST)) {", "-                checkReturnTag(tags, aAST.getLineNo(), !hasInheritDocTag);", "+            checkParamTags(tags, ast, !hasInheritDocTag);", "+            checkThrowsTags(tags, getThrows(ast), !hasInheritDocTag);", "+            if (isFunction(ast)) {", "+                checkReturnTag(tags, ast.getLineNo(), !hasInheritDocTag);"]}]}