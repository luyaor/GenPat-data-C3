{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f88a791f4456d84b3572523fb001a6c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "366e3eb099f9b34de10e2dd4838c267b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SeverityMatchFilterTest.java", "commitBeforeChange": "531327f8c7789d60c937d0f320bbf7e29abe0e27", "commitAfterChange": "e2f265251a601054b36a9464d0f6e389371723d5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testSeverity()", "signatureAfterChange": "      @Test     public void testSeverity()", "diff": ["-        SeverityLevel level = SeverityLevel.ERROR;", "-        LocalizedMessage message =", "+        SeverityLevel errorLevel = SeverityLevel.ERROR;", "+        LocalizedMessage errorMessage =", "-                level, null, getClass(), null);", "-        final AuditEvent ev2 = new AuditEvent(this, \"ATest.java\", message);", "-        assertFalse(\"level:\" + level, filter.accept(ev2));", "-        level = SeverityLevel.INFO;", "-        message = new LocalizedMessage(0, 0, \"\", \"\", null, level, null, getClass(), null);", "-        final AuditEvent ev3 = new AuditEvent(this, \"ATest.java\", message);", "-        assertTrue(\"level:\" + level, filter.accept(ev3));", "+                errorLevel, null, getClass(), null);", "+        final AuditEvent ev2 = new AuditEvent(this, \"ATest.java\", errorMessage);", "+        assertFalse(\"level:\" + errorLevel, filter.accept(ev2));", "+        SeverityLevel infoLevel = SeverityLevel.INFO;", "+        LocalizedMessage infoMessage =", "+                new LocalizedMessage(0, 0, \"\", \"\", null, infoLevel, null, getClass(), null);", "+        final AuditEvent ev3 = new AuditEvent(this, \"ATest.java\", infoMessage);", "+        assertTrue(\"level:\" + infoLevel, filter.accept(ev3));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85f0699f07e00fe245fbb72fc6feaa48", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SeverityMatchFilterTest.java", "commitBeforeChange": "531327f8c7789d60c937d0f320bbf7e29abe0e27", "commitAfterChange": "e2f265251a601054b36a9464d0f6e389371723d5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testDefault()", "signatureAfterChange": "      @Test     public void testDefault()", "diff": ["-        SeverityLevel level = SeverityLevel.ERROR;", "-        LocalizedMessage message =", "+        SeverityLevel errorLevel = SeverityLevel.ERROR;", "+        LocalizedMessage errorMessage =", "-                level, null, getClass(), null);", "-        final AuditEvent ev2 = new AuditEvent(this, \"ATest.java\", message);", "-        assertTrue(\"level:\" + level, filter.accept(ev2));", "-        level = SeverityLevel.INFO;", "-        message = new LocalizedMessage(0, 0, \"\", \"\", null, level, null, getClass(), null);", "-        final AuditEvent ev3 = new AuditEvent(this, \"ATest.java\", message);", "-        assertFalse(\"level:\" + level, filter.accept(ev3));", "+                errorLevel, null, getClass(), null);", "+        final AuditEvent ev2 = new AuditEvent(this, \"ATest.java\", errorMessage);", "+        assertTrue(\"level:\" + errorLevel, filter.accept(ev2));", "+        SeverityLevel infoLevel = SeverityLevel.INFO;", "+        LocalizedMessage infoMessage =", "+                new LocalizedMessage(0, 0, \"\", \"\", null, infoLevel, null, getClass(), null);", "+        final AuditEvent ev3 = new AuditEvent(this, \"ATest.java\", infoMessage);", "+        assertFalse(\"level:\" + infoLevel, filter.accept(ev3));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1cf0f85cabcd098dc25a4d05f630465", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SeverityMatchFilterTest.java", "commitBeforeChange": "531327f8c7789d60c937d0f320bbf7e29abe0e27", "commitAfterChange": "e2f265251a601054b36a9464d0f6e389371723d5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAcceptOnMatch()", "signatureAfterChange": "      @Test     public void testAcceptOnMatch()", "diff": ["-        SeverityLevel level = SeverityLevel.ERROR;", "-        LocalizedMessage message =", "+        SeverityLevel errorLevel = SeverityLevel.ERROR;", "+        LocalizedMessage errorMessage =", "-                level, null, getClass(), null);", "-        final AuditEvent ev2 = new AuditEvent(this, \"ATest.java\", message);", "-        assertTrue(\"level:\" + level, filter.accept(ev2));", "-        level = SeverityLevel.INFO;", "-        message = new LocalizedMessage(0, 0, \"\", \"\", null, level, null, getClass(), null);", "-        final AuditEvent ev3 = new AuditEvent(this, \"ATest.java\", message);", "-        assertFalse(\"level:\" + level, filter.accept(ev3));", "+                errorLevel, null, getClass(), null);", "+        final AuditEvent ev2 = new AuditEvent(this, \"ATest.java\", errorMessage);", "+        assertTrue(\"level:\" + errorLevel, filter.accept(ev2));", "+        SeverityLevel infoLevel = SeverityLevel.INFO;", "+        LocalizedMessage infoMessage = new LocalizedMessage(0, 0, \"\", \"\", null, infoLevel, null, getClass(), null);", "+        final AuditEvent ev3 = new AuditEvent(this, \"ATest.java\", infoMessage);", "+        assertFalse(\"level:\" + infoLevel, filter.accept(ev3));"]}]}