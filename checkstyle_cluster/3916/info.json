{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "004956722fd2f1317c02e2adde0a872b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "332770624c60e36ef8a5aa4b29b565bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private static boolean isChild(DetailAST aParent, DetailAST aAST)", "signatureAfterChange": "     private static boolean isChild(DetailAST parent, DetailAST ast)", "diff": ["-    private static boolean isChild(DetailAST aParent, DetailAST aAST)", "+    private static boolean isChild(DetailAST parent, DetailAST ast)", "-        final ASTEnumeration astList = aParent.findAllPartial(aAST);", "+        final ASTEnumeration astList = parent.findAllPartial(ast);", "-            final DetailAST ast = (DetailAST) astList.nextNode();", "-            DetailAST astParent = ast.getParent();", "+            final DetailAST astNode = (DetailAST) astList.nextNode();", "+            DetailAST astParent = astNode.getParent();", "-                if (astParent.equals(aParent)", "-                        && astParent.getLineNo() == aParent.getLineNo())", "+                if (astParent.equals(parent)", "+                        && astParent.getLineNo() == parent.getLineNo())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90511beeaf5fe5dd52d99cc1c5242169", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean hasFallTruComment(DetailAST aCurrentCase,             DetailAST aNextCase)", "signatureAfterChange": "     private boolean hasFallTruComment(DetailAST currentCase,             DetailAST nextCase)", "diff": ["-    private boolean hasFallTruComment(DetailAST aCurrentCase,", "-            DetailAST aNextCase)", "+    private boolean hasFallTruComment(DetailAST currentCase,", "+            DetailAST nextCase)", "-        final int startLineNo = aCurrentCase.getLineNo();", "-        final int endLineNo = aNextCase.getLineNo();", "-        final int endColNo = aNextCase.getColumnNo();", "+        final int startLineNo = currentCase.getLineNo();", "+        final int endLineNo = nextCase.getLineNo();", "+        final int endColNo = nextCase.getColumnNo();", "-        if (commentMatch(mRegExp, linepart, endLineNo)) {", "+        if (commentMatch(regExp, linepart, endLineNo)) {", "-                return commentMatch(mRegExp, lines[i], i + 1);", "+                return commentMatch(regExp, lines[i], i + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a76c1cd40f248bc4850225bc7282668f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java", "commitBeforeChange": "e21676f52f3d68294122244cea63b4ecbe92de8f", "commitAfterChange": "0f9490c4ab86e6df2cfe90db1ffe04e906a5edad", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 30, "signatureBeforeChange": "     private static boolean areSameLevelIndented(DetailAST singleLineComment,                                                 DetailAST prevStmt, DetailAST nextStmt)", "signatureAfterChange": "     private static boolean areSameLevelIndented(DetailAST comment, DetailAST prevStmt,                                                 DetailAST nextStmt)", "diff": ["-    private static boolean areSameLevelIndented(DetailAST singleLineComment,", "-                                                DetailAST prevStmt, DetailAST nextStmt) {", "+    private static boolean areSameLevelIndented(DetailAST comment, DetailAST prevStmt,", "+                                                DetailAST nextStmt) {", "-            result = singleLineComment.getColumnNo() == nextStmt.getColumnNo();", "+            result = comment.getColumnNo() == nextStmt.getColumnNo();", "-            result = singleLineComment.getColumnNo() == nextStmt.getColumnNo()", "-                || singleLineComment.getColumnNo() == prevStmt.getColumnNo();", "+            result = comment.getColumnNo() == nextStmt.getColumnNo()", "+                || comment.getColumnNo() == prevStmt.getColumnNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbe7def8b16b227b1cee487fe51c0e05", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private boolean isEmptyBlock(DetailAST aAST, int aParentType, int aMatch)", "signatureAfterChange": "     private boolean isEmptyBlock(DetailAST ast, int parentType, int match)", "diff": ["-    private boolean isEmptyBlock(DetailAST aAST, int aParentType, int aMatch)", "+    private boolean isEmptyBlock(DetailAST ast, int parentType, int match)", "-        final int type = aAST.getType();", "+        final int type = ast.getType();", "-            final DetailAST grandParent = aAST.getParent().getParent();", "-            return (aParentType == TokenTypes.SLIST)", "-                && (grandParent.getType() == aMatch);", "+            final DetailAST grandParent = ast.getParent().getParent();", "+            return (parentType == TokenTypes.SLIST)", "+                && (grandParent.getType() == match);", "-            && (aParentType == aMatch)", "-            && (aAST.getFirstChild().getType() == TokenTypes.RCURLY);", "+            && (parentType == match)", "+            && (ast.getFirstChild().getType() == TokenTypes.RCURLY);"]}]}