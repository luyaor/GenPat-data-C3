{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27edb32350908463881df6c79fd787ee", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38138fed2327e6bff5020fe09ea84027", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule32packagestate/LineLengthTest.java", "commitBeforeChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "commitAfterChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void lineLengthTest() throws Exception", "signatureAfterChange": "      @Test     public void lineLengthTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"LineLengthInput2\");", "+        final String filePath = builder.getFilePath(\"InputLineLength\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c9402c5b3162642e085dc8f968e1823", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "commitAfterChange": "7e5e919ce7db115c5893fa23e07a3cf1acfc3f10", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testNPE() throws Exception", "signatureAfterChange": "      @Test     public void testNPE() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"naming/AbstractMultisetSetCountTester.java\"), expected);", "+        verify(checkConfig, getPath(\"AbstractMultisetSetCountTester.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47935e5669a09656fc74075e4b343c92", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/SeparatorWrapTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5642bf95472312b69531c0d254a8fca0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedTest.java", "commitBeforeChange": "dba6c944cdbf9acfbb40b9a2d8e6315fb14d87f0", "commitAfterChange": "daae0431d190cceceee62d7163a4e67e2c622aa2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testBadDeprecatedAnnotation() throws Exception", "signatureAfterChange": "     @Test     public void testBadDeprecatedAnnotation() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"annotation\" + File.separator + \"BadDeprecatedAnnotation.java\"), expected);", "+        verify(checkConfig, getPath(\"annotation\" + File.separator + \"InputBadDeprecatedAnnotation.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94b499f44bf8d3a645964660b573f81c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     @Test     public void testGoodOverrideFromOther() throws Exception", "signatureAfterChange": "     @Test     public void testGoodOverrideFromOther() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"GoodOverrideFromOther.java\"), expected);", "+        verify(checkConfig, getPath(\"InputGoodOverrideFromOther.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb432b80dbc8ecc2569243a271614dc2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testWrongPackage() throws Exception", "signatureAfterChange": "      @Test     public void testWrongPackage() throws Exception", "diff": ["-                getNonCompilablePath(\"InputIllegalInstantiationCheckLang.java\"),", "+                getNonCompilablePath(\"InputIllegalInstantiationLang.java\"),"]}]}