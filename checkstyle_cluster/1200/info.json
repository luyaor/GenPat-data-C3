{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e597d36764756b35f5b6d66bbaeabde", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "388578bd0a8b0fb429320c4bd9a1717e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/InputMagicNumber.java", "commitBeforeChange": "d5a6a78a590fa688a4405d80adb81e067e997b14", "commitAfterChange": "9df0df10bf2b1cd0613967ab85fbdcf02b94ef0e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void magicMethod()", "signatureAfterChange": "     public void magicMethod()", "diff": ["+        ", "+        //octal", "+        int octalVar0 = 00;", "+        int octalVar8 = 010;", "+        int octalVar9 = 011;", "+        ", "+        long longOctalVar8 = 010L;", "+        long longOctalVar9 = 011l;", "+        ", "+        //hex", "+        int hexVar0 = 0x0;", "+        int hexVar16 = 0x10;", "+        int hexVar17 = 0X011;", "+        long longHexVar0 = 0x0L;", "+        long longHexVar16 = 0x10L;", "+        long longHexVar17 = 0X11l;       "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f1963a1a2a2e1c009ec1f6d162452b6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java", "commitBeforeChange": "d0939d3bc93819ebc1f42642806c0265fc7908b3", "commitAfterChange": "86826e1fa3fe3d793ee4723bb84ee0fc4ca38df1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static JavadocTags getJavadocTags(TextBlock cmt,             JavadocTagType tagType)", "signatureAfterChange": "     public static JavadocTags getJavadocTags(TextBlock cmt,             JavadocTagType tagType)", "diff": ["-                if (!commentMatcher.find()) {", "-                    commentContents = s; // No leading asterisks, still valid", "-                    commentOffset = 0;", "-                }", "-                else {", "+                if (commentMatcher.find()) {", "+                else {", "+                    commentContents = s; // No leading asterisks, still valid", "+                    commentOffset = 0;", "+                }"]}]}