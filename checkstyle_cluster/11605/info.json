{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "49b8225801e7b489f2705908ec918905", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "478aff6d4fd367bf7e970270da797465", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "7d097b6fa682f8dcfedd95da2db8fed980c51705", "commitAfterChange": "d8286130e83dc672d30cd00eddbf6b5f77112521", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private List<JavadocTag> getJavadocTags(TextBlock aCmt)", "signatureAfterChange": "     private List<JavadocTag> getJavadocTags(TextBlock aCmt)", "diff": ["-        JavadocTags tags =", "-            JavadocUtils.getJavadocTags(aCmt, JavadocTagType.BLOCK);", "+        final JavadocTags tags = JavadocUtils.getJavadocTags(aCmt,", "+            JavadocUtils.JavadocTagType.BLOCK);", "-            for (InvalidJavadocTag tag : tags.invalidTags) {", "-                log(tag.line, tag.col, \"javadoc.unknownTag\", tag.name);", "+            for (final InvalidJavadocTag tag : tags.getInvalidTags()) {", "+                log(tag.getLine(), tag.getCol(), \"javadoc.unknownTag\",", "+                    tag.getName());", "-        return tags.validTags;", "+        return tags.getValidTags();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e93bab43431eb683a94ae89807921858", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtilsTest.java", "commitBeforeChange": "7d097b6fa682f8dcfedd95da2db8fed980c51705", "commitAfterChange": "d8286130e83dc672d30cd00eddbf6b5f77112521", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testInvalidTags()", "signatureAfterChange": "      @Test     public void testInvalidTags()", "diff": ["-    public void testInvalidTags() {", "-        String [] text = { \"/** @fake block\",", "-                           \" * {@bogus inline}\",", "-                           \" * {@link List valid}\"};", "-        Comment comment = new Comment(text, 1, 3, text[2].length());", "-        JavadocTags allTags =", "+    public void testInvalidTags()", "+    {", "+        final String [] text = {", "+            \"/** @fake block\",", "+            \" * {@bogus inline}\",", "+            \" * {@link List valid}\",", "+        };", "+        final Comment comment = new Comment(text, 1, 3, text[2].length());", "+        final JavadocTags allTags =", "-        assertEquals(2, allTags.invalidTags.size());", "-        assertEquals(1, allTags.validTags.size());", "+        assertEquals(2, allTags.getInvalidTags().size());", "+        assertEquals(1, allTags.getValidTags().size());"]}]}