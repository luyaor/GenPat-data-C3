{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "850e0a6dfcad24d3368d156e5dd61afd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09c389664b6604259fd3135e5c0b3fd4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testNewLine() throws Exception", "signatureAfterChange": "      @Test     public void testNewLine() throws Exception", "diff": ["-            \"111:10: '}' should be on a new line.\",", "-            \"122:10: '}' should be on a new line.\",", "-            \"136:10: '}' should be on a new line.\",", "+            \"111:10: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\"),", "+            \"122:10: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\"),", "+            \"136:10: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1332c1feb301ef2291c784d6ae285b24", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testForceLineBreakBefore() throws Exception", "signatureAfterChange": "      @Test     public void testForceLineBreakBefore() throws Exception", "diff": ["-            \"35:43: '}' should be alone on a line.\",", "-            \"41:71: '}' should be alone on a line.\",", "-            \"47:25: '}' should be alone on a line.\",", "+            \"35:43: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),", "+            \"41:71: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),", "+            \"47:25: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a11754dc89f613922f5c0b82e4a5731", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testOpWrapEOL()         throws Exception", "signatureAfterChange": "      @Test     public void testOpWrapEOL()         throws Exception", "diff": ["-            \"18:13: '-' should be on the previous line.\",", "-            \"22:13: '&&' should be on the previous line.\",", "-            \"27:13: '&&' should be on the previous line.\",", "+            \"18:13: \" + getCheckMessage(LINE_PREVIOUS, \"-\"),", "+            \"22:13: \" + getCheckMessage(LINE_PREVIOUS, \"&&\"),", "+            \"27:13: \" + getCheckMessage(LINE_PREVIOUS, \"&&\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "574f1249bd7a08fd9d2dba9c7d848f75", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testDefaultWithAnnotations() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultWithAnnotations() throws Exception", "diff": ["-            \"10:1: '{' should be on the previous line.\",", "-            \"14:5: '{' should be on the previous line.\",", "-            \"21:5: '{' should be on the previous line.\",", "+            \"10:1: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"14:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"21:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),"]}]}