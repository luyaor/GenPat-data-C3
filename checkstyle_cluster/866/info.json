{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ac42462f19d222bf5aac1664cadc51d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a46a7a3521c56911730a1bb84b71fc7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/MagicNumberCheckTest.java", "commitBeforeChange": "d5a6a78a590fa688a4405d80adb81e067e997b14", "commitAfterChange": "9df0df10bf2b1cd0613967ab85fbdcf02b94ef0e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          public void testIgnoreNone()         throws Exception", "signatureAfterChange": "          public void testIgnoreNone()         throws Exception", "diff": ["+            \"59:25: '00' is a magic number.\",", "+            \"60:25: '010' is a magic number.\",", "+            \"61:25: '011' is a magic number.\",", "+            \"63:30: '010L' is a magic number.\",", "+            \"64:30: '011l' is a magic number.\",", "+            \"67:23: '0x0' is a magic number.\",", "+            \"68:24: '0x10' is a magic number.\",", "+            \"69:24: '0X011' is a magic number.\",", "+            \"70:28: '0x0L' is a magic number.\",", "+            \"71:29: '0x10L' is a magic number.\",", "+            \"72:29: '0X11l' is a magic number.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74dbb449f6954806829aea4432515cc7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/usage/UnusedPrivateMethodCheckTest.java", "commitBeforeChange": "7bef7b40114938206146b65384b666c4227c978b", "commitAfterChange": "621d9a9bf7fa8a0743dc6080c6f684a2e6b0abdd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDefault() throws Exception", "signatureAfterChange": "     public void testDefault() throws Exception", "diff": ["+            \"66:18: Unused private method 'writeObject'.\",", "+            \"71:18: Unused private method 'readObject'.\",", "+            \"76:20: Unused private method 'writeReplace'.\",", "+            \"82:20: Unused private method 'readResolve'.\",", "+            \"91:18: Unused private method 'writeObject'.\",", "+            \"95:18: Unused private method 'writeObject'.\",", "+            \"99:18: Unused private method 'writeObject'.\",", "+            \"103:17: Unused private method 'writeObject'.\",", "+            \"107:18: Unused private method 'readObject'.\",", "+            \"111:18: Unused private method 'readObject'.\",", "+            \"115:18: Unused private method 'readObject'.\",", "+            \"119:17: Unused private method 'readObject'.\",", "+            \"123:17: Unused private method 'writeReplace'.\",", "+            \"128:30: Unused private method 'writeReplace'.\",", "+            \"133:20: Unused private method 'writeReplace'.\",", "+            \"138:17: Unused private method 'readResolve'.\",", "+            \"143:20: Unused private method 'readResolve'.\",", "+            \"148:20: Unused private method 'readResolve'.\",", "+        };", "+        verify(checkConfig, getPath(\"usage/InputUnusedMethod.java\"), expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa55d50f2171121706ad5a770006248b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheckTest.java", "commitBeforeChange": "1f15794816a68ebef666ca16573c64815cc79a3a", "commitAfterChange": "836bb79348590f1a473f66553ea2ce3c9dec2786", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDefault() throws Exception", "signatureAfterChange": "     public void testDefault() throws Exception", "diff": ["+", "+            \"92:9: Variable access definition in wrong order.\",", "+            \"100:9: Static variable definition in wrong order.\",", "+            \"100:9: Variable access definition in wrong order.\",", "+            \"106:5: Variable access definition in wrong order.\",", "+            \"111:5: Variable access definition in wrong order.\",", "+            \"116:5: Variable access definition in wrong order.\",", "+            \"119:5: Variable access definition in wrong order.\",", "+            \"125:5: Static variable definition in wrong order.\",", "+            \"125:5: Variable access definition in wrong order.\",", "+            \"132:9: Variable access definition in wrong order.\",", "+            \"143:9: Static variable definition in wrong order.\",", "+            \"143:9: Variable access definition in wrong order.\",", "+            \"152:5: Constructor definition in wrong order.\",", "+            \"178:5: Instance variable definition in wrong order.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af05dc0da38bedd686951a381dd5f5f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/IndentationCheckTest.java", "commitBeforeChange": "4f892fe43aed58fb447078fb3988c5263a71d60d", "commitAfterChange": "52dea9dcdce45ec5556fb5204d485965e12b7cbd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "       public void testInvalidBlockWithChecker()         throws Exception", "signatureAfterChange": "       public void testInvalidBlockWithChecker()         throws Exception", "diff": ["-// TODO: static gives back wrong colno            \"87: block static at indentation level 2 not at correct indentation, 4\",", "+            \"91: static initialization at indentation level 2 not at correct indentation, 4\",", "+            \"92: static initialization at indentation level 6 not at correct indentation, 4\",", "+            \"96: static initialization child at indentation level 7 not at correct indentation, 8\",", "+            \"99: static initialization at indentation level 6 not at correct indentation, 4\",", "+            \"101: static initialization rcurly at indentation level 2 not at correct indentation, 4\",", "+            \"103: static initialization at indentation level 2 not at correct indentation, 4\",", "+            \"105: static initialization rcurly at indentation level 6 not at correct indentation, 4\",", "+            \"107: static initialization at indentation level 2 not at correct indentation, 4\",", "+            \"109: static initialization child at indentation level 6 not at correct indentation, 8\",", "+            \"112: static initialization lcurly at indentation level 2 not at correct indentation, 4\",", "+            \"113: static initialization child at indentation level 6 not at correct indentation, 8\",", "+            \"114: static initialization rcurly at indentation level 6 not at correct indentation, 4\","]}]}