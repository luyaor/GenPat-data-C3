{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f2968cd38519feffce26ef5784d378f9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "379ed356c11af9d442f56aa0236236df", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "ae9d1d6217ad7dbc2e6f1faa890298c68726dcb4", "commitAfterChange": "2e1382c5bb1aa61cc01d7958a589e2a3831f56b5", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 28, "signatureBeforeChange": "         @Override         public void syntaxError(                 Recognizer<?, ?> aRecognizer, Object aOffendingSymbol,                 int aLine, int aCharPositionInLine,                 String aMsg, RecognitionException aEx)", "signatureAfterChange": "         @Override         public void syntaxError(                 Recognizer<?, ?> aRecognizer, Object aOffendingSymbol,                 int aLine, int aCharPositionInLine,                 String aMsg, RecognitionException aEx)", "diff": ["-                log(lineNumber, JAVADOC_MISSED_HTML_CLOSE, token.getText());", "+                mErrorMessage = createLogMessage(lineNumber,", "+                        JAVADOC_MISSED_HTML_CLOSE, aCharPositionInLine, token.getText());", "+", "-                log(lineNumber, JAVADOC_WRONG_SINGLETON_TAG, token.getText());", "+                mErrorMessage = createLogMessage(lineNumber,", "+                        JAVADOC_WRONG_SINGLETON_TAG, aCharPositionInLine, token.getText());", "+", "-                    log(lineNumber, \"javadoc.parse.rule.error\", aMsg, upperCaseRuleName);", "+", "+                    mErrorMessage = createLogMessage(lineNumber,", "+                            JAVADOC_PARSE_RULE_ERROR, aCharPositionInLine, aMsg, upperCaseRuleName);", "-                    log(lineNumber, \"javadoc.parse.token.error\", aMsg);", "+                    mErrorMessage = createLogMessage(lineNumber, JAVADOC_PARSE_TOKEN_ERROR,", "+                            aCharPositionInLine, aMsg, aCharPositionInLine);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb563178ebc1e1f9b4f4122c63014abe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "6a977155274fa6ff7e3055ca3701c206d9e0d34d", "commitAfterChange": "2c41aaf844d3206775c0a8c9e78aabf3a6d85a36", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "         @Override         public void syntaxError(                 Recognizer<?, ?> recognizer, Object offendingSymbol,                 int line, int charPositionInLine,                 String msg, RecognitionException ex)", "signatureAfterChange": "         @Override         public void syntaxError(                 Recognizer<?, ?> recognizer, Object offendingSymbol,                 int line, int charPositionInLine,                 String msg, RecognitionException ex)", "diff": ["-                final RuleContext ruleContext = ex.getCtx();", "-                if (ruleContext != null) {", "-                    final int ruleIndex = ex.getCtx().getRuleIndex();", "-                    final String ruleName = recognizer.getRuleNames()[ruleIndex];", "-                    final String upperCaseRuleName = CaseFormat.UPPER_CAMEL.to(", "-                            CaseFormat.UPPER_UNDERSCORE, ruleName);", "+                final int ruleIndex = ex.getCtx().getRuleIndex();", "+                final String ruleName = recognizer.getRuleNames()[ruleIndex];", "+                final String upperCaseRuleName = CaseFormat.UPPER_CAMEL.to(", "+                        CaseFormat.UPPER_UNDERSCORE, ruleName);", "-                    errorMessage = new ParseErrorMessage(lineNumber,", "-                            JAVADOC_PARSE_RULE_ERROR, charPositionInLine, msg, upperCaseRuleName);", "-                }", "-                else {", "-                    errorMessage = new ParseErrorMessage(lineNumber, JAVADOC_PARSE_TOKEN_ERROR,", "-                            charPositionInLine, msg, charPositionInLine);", "-                }", "+                errorMessage = new ParseErrorMessage(lineNumber,", "+                        JAVADOC_PARSE_RULE_ERROR, charPositionInLine, msg, upperCaseRuleName);"]}]}