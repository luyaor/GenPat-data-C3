{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "28449ba4f5fb9c1425e07df41fb28f5d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fb6e6b91e5004dd6ad4cb790443a699", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RedundantImportCheck.java", "commitBeforeChange": "aa5dbacdcbf20a9b56e2f7ecb577bb47778b0c54", "commitAfterChange": "84c1f8375fa540e7b0313b95af6be6000e3c4c71", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["+            // Check for a duplicate import", "+            final Iterator it = mImports.iterator();", "+            while (it.hasNext()) {", "+                final FullIdent full = (FullIdent) it.next();", "+                if (imp.getText().equals(full.getText())) {", "+                    log(aAST.getLineNo(),", "+                        aAST.getColumnNo(),", "+                        \"import.duplicate\",", "+                        new Integer(full.getLineNo()));", "+                }", "+            }", "+", "+            mImports.add(imp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96ec4e7e111b84e05821d29270aea69d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "1c1eadb21184c3e8361cacb25a33d927f3a4e8d4", "commitAfterChange": "9cff1673f1d42910c654e0af5365d68591f104f0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void checkComment(final DetailAST aAST, final TextBlock aComment)", "signatureAfterChange": "     private void checkComment(final DetailAST aAST, final TextBlock aComment)", "diff": ["+            /*checking for missing docs in JavadocStyleCheck is not consistent", "+            with the rest of CheckStyle...  Even though, I didn't think it", "+            made sense to make another check just to ensure that the", "+            package-info.java file actually contains package Javadocs.*/", "+            if (inPackageInfo()) {", "+                log(aAST.getLineNo(), \"javadoc.missing\");", "+            }", "-            checkFirstSentence(aComment);", "+            checkFirstSentence(aAST, aComment);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edd96445261b52463b7966fa55c25504", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/PackageNameCheck.java", "commitBeforeChange": "11fad553fd96cc00f33e95ae0bc2d6b32a8e1c54", "commitAfterChange": "aa5dbacdcbf20a9b56e2f7ecb577bb47778b0c54", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        final StringBuffer buf = new StringBuffer();", "-        extractIdent(buf, nameAST);", "-        final String text = buf.toString();", "-", "-        if (!getRegexp().match(text)) {", "-            log(nameAST.getLineNo(),", "+        final FullIdent full = FullIdent.createFullIdent(nameAST);", "+        if (!getRegexp().match(full.getText())) {", "+            log(full.getLineNo(),", "+                full.getColumnNo(),", "-                text,", "+                full.getText(),", "-        }", "-    }"]}]}