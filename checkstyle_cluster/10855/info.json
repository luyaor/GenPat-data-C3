{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac26ba52b909536165f41f6f4644f5b1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42f85721139b44649330e232ed5ae587", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractSuperCheck.java", "commitBeforeChange": "2b32b003ab81c9bfcb8205b512eb4ea313e529af", "commitAfterChange": "cc6caa71f55ae33ad8c018e3b7915e6b93b7de81", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private boolean isSuperCall(DetailAST ast)", "signatureAfterChange": "     private boolean isSuperCall(DetailAST ast)", "diff": ["-        // same name of method", "-        AST sibling = ast.getNextSibling();", "-        // ignore type parameters", "-        if (sibling != null", "-            && sibling.getType() == TokenTypes.TYPE_ARGUMENTS) {", "-            sibling = sibling.getNextSibling();", "-        }", "-        if (sibling == null || sibling.getType() != TokenTypes.IDENT) {", "+        if (isSameNameMethod(ast)) {", "-        final String name = sibling.getText();", "-        if (!getMethodName().equals(name)) {", "-            return false;", "-        }", "-", "-        // 0 parameters?", "-        final DetailAST args = parent.getNextSibling();", "-        if (args == null || args.getType() != TokenTypes.ELIST) {", "-            return false;", "-        }", "-        if (args.getChildCount() != 0) {", "+        if (isZeroParameters(parent)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2bef28ef88b3ab50d1d9552ca01dac4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/SuperCloneCheck.java", "commitBeforeChange": "18718ffeab8bac25b8352145a4f805c5e5099c4b", "commitAfterChange": "bb52a25c6c5d9d6099713cac6fcacea9e0ec2bdd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 0, "signatureBeforeChange": "     private boolean isCloneMethod(DetailAST aAST)", "signatureAfterChange": "     protected String getMethodName()", "diff": ["+    protected String getMethodName()", "-     */", "-    private boolean isCloneMethod(DetailAST aAST)", "-    {", "-        if ((aAST.getType() != TokenTypes.METHOD_DEF)", "-            || ScopeUtils.inInterfaceBlock(aAST))", "-        {", "-            return false;", "-        }", "-        final DetailAST nameAST = aAST.findFirstToken(TokenTypes.IDENT);", "-        final String name = nameAST.getText();", "-        if (!\"clone\".equals(name)) {", "-            return false;", "-        }", "-        final DetailAST params = aAST.findFirstToken(TokenTypes.PARAMETERS);", "-        return (params.getChildCount() == 0);", "+        return \"clone\";"]}]}