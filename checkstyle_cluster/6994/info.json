{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6babfac7be7d181076b6a5c9d3be79c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b30f54ab477718108f82b15988fdefd7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "d734bff020d3525c811a0b273021a5ac5665ade8", "commitAfterChange": "6c11cedd3bc24183534dd10d6442149d267693b5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void collectDeclarations(Deque<LexicalFrame> frameStack,         DetailAST ast)", "signatureAfterChange": "     private void collectDeclarations(Deque<LexicalFrame> frameStack,         DetailAST ast)", "diff": ["-                final String name =", "-                        ast.findFirstToken(TokenTypes.IDENT).getText();", "-                if (frame instanceof ClassFrame) {", "-                    final DetailAST mods =", "-                            ast.findFirstToken(TokenTypes.MODIFIERS);", "-                    if (ScopeUtils.inInterfaceBlock(ast)", "-                            || mods.branchContains(TokenTypes.LITERAL_STATIC)) {", "-                        ((ClassFrame) frame).addStaticMember(name);", "-                    }", "-                    else {", "-                        ((ClassFrame) frame).addInstanceMember(name);", "-                    }", "-                }", "-                else {", "-                    frame.addName(name);", "-                }", "+                collectVariableDeclarations(ast, frame);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c292907cd949f0674575899200e51aa6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "066696714bd522b26177f6be814bac334e57b332", "commitAfterChange": "84d33e55d9735a79f1e0e9f692dd92592aa2f055", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            final HashSet fieldSet = new HashSet(); //fields container", "+            final FieldFrame frame = new FieldFrame();", "-                    fieldSet.add(name);", "+                    final DetailAST mods =", "+                        child.findFirstToken(TokenTypes.MODIFIERS);", "+                    if (mods.branchContains(TokenTypes.LITERAL_STATIC)) {", "+                        frame.addStaticField(name);", "+                    }", "+                    else {", "+                        frame.addInstanceField(name);", "+                    }", "-            mFieldsStack.addLast(fieldSet); //push container", "+            mFieldsStack.addLast(frame); //push container"]}]}