{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8300c596d224729e528fb92b9cf2bde4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "397e3a1e837cb8fb74aed289b7a4be4c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/RedundantImportCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        RedundantImportCheck checkObj = new RedundantImportCheck();", "-        int[] expected = {", "+        final RedundantImportCheck checkObj = new RedundantImportCheck();", "+        final int[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4425cbf98d0fbcc3cd9be0a246d386e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/GuardTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testAccessResultValues()", "signatureAfterChange": "     @Test     public void testAccessResultValues()", "diff": ["-        AccessResult[] actual = AccessResult.values();", "-        AccessResult[] expected = {", "+        final AccessResult[] actual = AccessResult.values();", "+        final AccessResult[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52d8ea9f823cb0ecf5f337c046fe0b3b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        ImportControlCheck checkObj = new ImportControlCheck();", "-        int[] expected = {", "+        final ImportControlCheck checkObj = new ImportControlCheck();", "+        final int[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "662da426e1ed587eecc8965d3dea8e83", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     private static DetailAST mockAST(final int tokenType, final String tokenText,             final String tokenFileName, final int tokenRow, final int tokenColumn)", "signatureAfterChange": "     private static DetailAST mockAST(final int tokenType, final String tokenText,             final String tokenFileName, final int tokenRow, final int tokenColumn)", "diff": ["-        CommonHiddenStreamToken tokenImportSemi = new CommonHiddenStreamToken();", "+        final CommonHiddenStreamToken tokenImportSemi = new CommonHiddenStreamToken();", "-        DetailAST astSemi = new DetailAST();", "+        final DetailAST astSemi = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2742e96e6be8e111a1004fb32859872", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/IllegalImportCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        IllegalImportCheck checkObj = new  IllegalImportCheck();", "-        int[] expected = {TokenTypes.IMPORT, TokenTypes.STATIC_IMPORT};", "+        final IllegalImportCheck checkObj = new  IllegalImportCheck();", "+        final int[] expected = {TokenTypes.IMPORT, TokenTypes.STATIC_IMPORT};"]}]}