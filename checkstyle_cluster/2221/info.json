{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cbbab1d9564157ffa131304ab1052099", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d8d545e60d47bd37ea8cbcd4f745cac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "343b75b252db9492ace4c4e5bfb36016e631c7a5", "commitAfterChange": "f9f60d3142533c3eebff775e8eb1159935faaba1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private Set<String> getModifiers(DetailAST variableDefAST)", "signatureAfterChange": "     private static Set<String> getModifiers(DetailAST defAST)", "diff": ["-    private Set<String> getModifiers(DetailAST variableDefAST)", "+    private static Set<String> getModifiers(DetailAST defAST)", "-        final AST modifiersAST = variableDefAST.getFirstChild();", "-        if (modifiersAST.getType() != TokenTypes.MODIFIERS) {", "-            throw new IllegalStateException(\"Strange parse tree\");", "+        final AST modifiersAST = defAST.findFirstToken(TokenTypes.MODIFIERS);", "+        final Set<String> modifiersSet = new HashSet<>();", "+        if (modifiersAST != null) {", "+            AST modifier = modifiersAST.getFirstChild();", "+            while (modifier != null) {", "+                modifiersSet.add(modifier.getText());", "+                modifier = modifier.getNextSibling();", "+            }", "-        final Set<String> retVal = Sets.newHashSet();", "-        AST modifier = modifiersAST.getFirstChild();", "-        while (modifier != null) {", "-            retVal.add(modifier.getText());", "-            modifier = modifier.getNextSibling();", "-        }", "-        return retVal;", "+        return modifiersSet;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a48bac79c433ca1c1dd8486e50a22b62", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "e44cd4ec43a25cac72924e04d7b4ca7fa9fa10ee", "commitAfterChange": "4bbe4acd319fa60dac09d28aaa9f7b18f18dee1f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     void verifyVariable(MyVariable aVar)", "signatureAfterChange": "     void verifyVariable(MyVariable aVar)", "diff": ["-                if (mods.containsFinal()) {", "-                    // Handle the serialVersionUID constant which is used for", "-                    // Serialization. Cannot enforce rules on it. :-)", "-                    if (!\"serialVersionUID\".equals(aVar.getText())) {", "-                        checkVariable(aVar,", "-                                      mConfig.getStaticFinalRegexp(),", "-                                      mConfig.getStaticFinalPat());", "-                    }", "-                }", "-                else {", "+                if (!mods.containsFinal()) {"]}]}