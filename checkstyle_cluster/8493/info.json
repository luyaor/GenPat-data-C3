{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b647f1f28e6562a15c923577f05d16b5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b452108ff0cbc217f39a68010a6f4cf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "1116ce8c8cfdfbdd1445a7f123dbe89467824077", "commitAfterChange": "cd7d040b4d2c4a80e87ef9b5be9bbd964f19e97d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected AbstractClassCouplingCheck(int aDefaultMax)", "signatureAfterChange": "     protected AbstractClassCouplingCheck(int aDefaultMax)", "diff": ["-", "-        mIgnoredClassNames.add(\"boolean\");", "-        mIgnoredClassNames.add(\"byte\");", "-        mIgnoredClassNames.add(\"char\");", "-        mIgnoredClassNames.add(\"double\");", "-        mIgnoredClassNames.add(\"float\");", "-        mIgnoredClassNames.add(\"int\");", "-        mIgnoredClassNames.add(\"long\");", "-        mIgnoredClassNames.add(\"short\");", "-        mIgnoredClassNames.add(\"void\");", "-        mIgnoredClassNames.add(\"Boolean\");", "-        mIgnoredClassNames.add(\"Byte\");", "-        mIgnoredClassNames.add(\"Character\");", "-        mIgnoredClassNames.add(\"Double\");", "-        mIgnoredClassNames.add(\"Float\");", "-        mIgnoredClassNames.add(\"Integer\");", "-        mIgnoredClassNames.add(\"Long\");", "-        mIgnoredClassNames.add(\"Object\");", "-        mIgnoredClassNames.add(\"Short\");", "-        mIgnoredClassNames.add(\"String\");", "-        mIgnoredClassNames.add(\"StringBuffer\");", "-        mIgnoredClassNames.add(\"Void\");", "-        mIgnoredClassNames.add(\"ArrayIndexOutOfBoundsException\");", "-        mIgnoredClassNames.add(\"Exception\");", "-        mIgnoredClassNames.add(\"RuntimeException\");", "-        mIgnoredClassNames.add(\"IllegalArgumentException\");", "-        mIgnoredClassNames.add(\"IllegalStateException\");", "-        mIgnoredClassNames.add(\"IndexOutOfBoundsException\");", "-        mIgnoredClassNames.add(\"NullPointerException\");", "-        mIgnoredClassNames.add(\"Throwable\");", "-        mIgnoredClassNames.add(\"SecurityException\");", "-        mIgnoredClassNames.add(\"UnsupportedOperationException\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "476e25c82843d2e0aaf1a99dc8dda71f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "67ac0b2adecabccf9c94a0e5389a80b1cd83cc41", "commitAfterChange": "c0a8e0ff6c885ce4444a37408f72e8555fb9ea6b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     void verifyDot(MyCommonAST aAST)", "signatureAfterChange": "     void verifyDot(MyCommonAST aAST)", "diff": ["-        if (mConfig.isIgnoreWhitespace()) {", "-            return;", "-        }", "-", "-        final String line = mLines[aAST.getLineNo() - 1];", "-", "-        // check before", "-        final int before = aAST.getColumnNo() - 1;", "-        if ((before >= 0) && Character.isWhitespace(line.charAt(before))) {", "-            // verify all characters before '.' are whitespace", "-            for (int i = 0; i < before; i++) {", "-                if (!Character.isWhitespace(line.charAt(i))) {", "-                    mMessages.add(aAST.getLineNo(), aAST.getColumnNo() - 1,", "-                                  \"ws.preceeded\", \".\");", "-                    break;", "-                }", "-            }", "-        }", "-", "-        // check after", "-        final int after = aAST.getColumnNo() + 1;", "-        if ((after < line.length())", "-            && Character.isWhitespace(line.charAt(after)))", "-        {", "-            for (int i = after + 1; i < line.length(); i++) {", "-                if (!Character.isWhitespace(line.charAt(i))) {", "-                    mMessages.add(aAST.getLineNo(), after, \"ws.followed\", \".\");", "-                    break;", "-                }", "-            }", "-        }"]}]}