{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e2891e56be003208dfe20e6ef1f482c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17bed6256c68c5867e572bce538b18bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void checkTypeParamTag(final int aLineNo,             final List<JavadocTag> aTags, final String aTypeParamName)", "signatureAfterChange": "     private void checkTypeParamTag(final int lineNo,             final List<JavadocTag> tags, final String typeParamName)", "diff": ["-    private void checkTypeParamTag(final int aLineNo,", "-            final List<JavadocTag> aTags, final String aTypeParamName)", "+    private void checkTypeParamTag(final int lineNo,", "+            final List<JavadocTag> tags, final String typeParamName)", "-        for (int i = aTags.size() - 1; i >= 0; i--) {", "-            final JavadocTag tag = aTags.get(i);", "+        for (int i = tags.size() - 1; i >= 0; i--) {", "+            final JavadocTag tag = tags.get(i);", "-                && (tag.getArg1().indexOf(\"<\" + aTypeParamName + \">\") == 0))", "+                && (tag.getArg1().indexOf(\"<\" + typeParamName + \">\") == 0))", "-            log(aLineNo, \"type.missingTag\",", "-                JavadocTagInfo.PARAM.getText() + \" <\" + aTypeParamName + \">\");", "+            log(lineNo, \"type.missingTag\",", "+                JavadocTagInfo.PARAM.getText() + \" <\" + typeParamName + \">\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb8f08ffe4ccd1410d811ec57ccd5464", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void checkTag(int aLineNo, List<JavadocTag> aTags, String aTag,                           Pattern aFormatPattern, String aFormat)", "signatureAfterChange": "     private void checkTag(int lineNo, List<JavadocTag> tags, String tagName,                           Pattern formatPattern, String format)", "diff": ["-    private void checkTag(int aLineNo, List<JavadocTag> aTags, String aTag,", "-                          Pattern aFormatPattern, String aFormat)", "+    private void checkTag(int lineNo, List<JavadocTag> tags, String tagName,", "+                          Pattern formatPattern, String format)", "-        if (aFormatPattern == null) {", "+        if (formatPattern == null) {", "-        for (int i = aTags.size() - 1; i >= 0; i--) {", "-            final JavadocTag tag = aTags.get(i);", "-            if (tag.getTagName().equals(aTag)) {", "+        for (int i = tags.size() - 1; i >= 0; i--) {", "+            final JavadocTag tag = tags.get(i);", "+            if (tag.getTagName().equals(tagName)) {", "-                if (!aFormatPattern.matcher(tag.getArg1()).find()) {", "-                    log(aLineNo, \"type.tagFormat\", \"@\" + aTag, aFormat);", "+                if (!formatPattern.matcher(tag.getArg1()).find()) {", "+                    log(lineNo, \"type.tagFormat\", \"@\" + tagName, format);", "-            log(aLineNo, \"type.missingTag\", \"@\" + aTag);", "+            log(lineNo, \"type.missingTag\", \"@\" + tagName);"]}]}