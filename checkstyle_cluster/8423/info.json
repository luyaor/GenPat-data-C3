{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f85257badf836ebfaa13f52134cb7ad", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01431c9f2f00295c9445225ecfee5fc7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void verifyBrace(final DetailAST aBrace,                              final DetailAST aStartToken)", "signatureAfterChange": "     private void verifyBrace(final DetailAST aBrace,                              final DetailAST aStartToken)", "diff": ["-                    \"line.new\", \"{\");", "+                        MSG_KEY_LINE_NEW, \"{\");", "-                    \"line.previous\", \"{\");", "+                        MSG_KEY_LINE_PREVIOUS, \"{\");", "-                log(aBrace.getLineNo(), aBrace.getColumnNo(), \"line.break.after\");", "+                log(aBrace.getLineNo(), aBrace.getColumnNo(), MSG_KEY_LINE_BREAK_AFTER);", "-                        \"line.new\", \"{\");", "+                        MSG_KEY_LINE_NEW, \"{\");", "-                        \"line.previous\", \"{\");", "+                        MSG_KEY_LINE_PREVIOUS, \"{\");", "-                    \"line.new\", \"{\");", "+                    MSG_KEY_LINE_NEW, \"{\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "185ee4c8911a4fbe7f4eb07ee296260d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-            log(rcurly, \"line.break.before\");", "+            log(rcurly, MSG_KEY_LINE_BREAK_BEFORE);", "-                log(rcurly, \"line.alone\", \"}\");", "+                log(rcurly, MSG_KEY_LINE_ALONE, \"}\");", "-            log(rcurly, \"line.same\", \"}\");", "+            log(rcurly, MSG_KEY_LINE_SAME, \"}\");", "-            log(rcurly, \"line.alone\", \"}\");", "+            log(rcurly, MSG_KEY_LINE_ALONE, \"}\");", "-            log(rcurly, \"line.new\", \"}\");", "+            log(rcurly, MSG_KEY_LINE_NEW, \"}\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ea8f24af938169bd0e2707ceb0e2007", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ParenPadCheck.java", "commitBeforeChange": "3f14872d33910413734232fb16b9debe479e1bd8", "commitAfterChange": "84eddc36730c1eca845257201c71a0d1fb2d40cf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public int[] getDefaultTokens()", "signatureAfterChange": "     public int[] getDefaultTokens()", "diff": ["-        return new int[] {JavaTokenTypes.RPAREN,", "-                          JavaTokenTypes.LPAREN,", "-                          JavaTokenTypes.CTOR_CALL,", "-                          JavaTokenTypes.SUPER_CTOR_CALL,", "-                          JavaTokenTypes.TYPECAST, // TODO: treat this?", "-                          JavaTokenTypes.METHOD_CALL,", "+        return new int[] {TokenTypes.RPAREN,", "+                          TokenTypes.LPAREN,", "+                          TokenTypes.CTOR_CALL,", "+                          TokenTypes.SUPER_CTOR_CALL,", "+                          TokenTypes.TYPECAST, // TODO: treat this?", "+                          TokenTypes.METHOD_CALL,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d9446ed909fb083e8bd196e04c6d77e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "22136c67e9c83494e7aa977ffe7a79beee1b4175", "commitAfterChange": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r     @Override\r     public void visitToken(final DetailAST aMethodCall)", "signatureAfterChange": "\r \r     @Override\r     public void visitToken(final DetailAST aMethodCall)", "diff": ["-        final AST dot = aMethodCall.getFirstChild();\r", "+        final DetailAST dot = aMethodCall.getFirstChild();\r", "-        final AST objCalledOn = dot.getFirstChild();\r", "+        final DetailAST objCalledOn = dot.getFirstChild();\r", "-        final AST method = objCalledOn.getNextSibling();\r", "-        final AST expr = dot.getNextSibling().getFirstChild();\r", "+        final DetailAST method = objCalledOn.getNextSibling();\r", "+        final DetailAST expr = dot.getNextSibling().getFirstChild();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c0bd37bc0a9c13f01a619bda7bb0a1e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/ParseTreeBuilder.java", "commitBeforeChange": "ff5cbc39c4882b3a3dcdbedcad9393e170148725", "commitAfterChange": "82f4a9852de874b4849a67f53f4e541d13db869b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static ParseTree treeHtmlTagsInParagraph()", "signatureAfterChange": "     public static ParseTree treeHtmlTagsInParagraph()", "diff": ["-        CommonToken rEvDw = new CommonToken(JavadocTokenTypes.NEWLINE, \"\\n\");", "+        CommonToken rEvDw = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        CommonToken vANOl = new CommonToken(JavadocTokenTypes.NEWLINE, \"\\n\");", "+        CommonToken vANOl = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        CommonToken WylwX = new CommonToken(JavadocTokenTypes.NEWLINE, \"\\n\");", "+        CommonToken WylwX = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        CommonToken ydCCN = new CommonToken(JavadocTokenTypes.NEWLINE, \"\\n\");", "+        CommonToken ydCCN = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        CommonToken esJKC = new CommonToken(JavadocTokenTypes.NEWLINE, \"\\n\");", "+        CommonToken esJKC = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "816394b974c580598e19459150a80e53", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "commitAfterChange": "cb5a59fc6baf5de204e3cc99be6ba9865e44350a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "         public Tag(int line, int column, String text, boolean on, SuppressionCommentFilter filter)", "signatureAfterChange": "         public Tag(int line, int column, String text, boolean on, SuppressionCommentFilter filter)", "diff": ["-                        expandFromCoont(text, filter.checkFormat, filter.onRegexp);", "+                        expandFromComment(text, filter.checkFormat, filter.onRegexp);", "-                            expandFromCoont(text, filter.messageFormat, filter.onRegexp);", "+                            expandFromComment(text, filter.messageFormat, filter.onRegexp);", "-                        expandFromCoont(text, filter.checkFormat, filter.offRegexp);", "+                        expandFromComment(text, filter.checkFormat, filter.offRegexp);", "-                            expandFromCoont(", "-                                text,", "-                                filter.messageFormat,", "-                                filter.offRegexp);", "+                            expandFromComment(", "+                                    text,", "+                                    filter.messageFormat,", "+                                    filter.offRegexp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ba7fdf9fd7aea7008dbab43d177a197", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/HtmlTag.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public boolean isCloseTag()", "signatureAfterChange": "     public boolean isCloseTag()", "diff": ["-        if (mPosition == (mText.length() - 1)) {", "+        if (position == (text.length() - 1)) {", "-        return (mText.charAt(mPosition + 1) == '/');", "+        return (text.charAt(position + 1) == '/');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "920b2dc5a0190b8886a6d97bd79b06f6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "3a55941f33dcd9111d6b61b0505217f47973a39d", "commitAfterChange": "f60a9cfe8b1b27d5ea25095bdfc690001da9f4d6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Override     public boolean equals(Object other)", "signatureAfterChange": "      @Override     public boolean equals(Object other)", "diff": ["-                && Objects.equals(linesCSV, suppressElement.linesCSV)", "-                && Objects.equals(columnsCSV, suppressElement.columnsCSV);", "+                && Objects.equals(linesCsv, suppressElement.linesCsv)", "+                && Objects.equals(columnsCsv, suppressElement.columnsCsv);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3607b2c00da9526ed912f6b21bf3bdc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RightCurlyCheck.java", "commitBeforeChange": "3f14872d33910413734232fb16b9debe479e1bd8", "commitAfterChange": "84eddc36730c1eca845257201c71a0d1fb2d40cf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public int[] getDefaultTokens()", "signatureAfterChange": "     public int[] getDefaultTokens()", "diff": ["-        return new int[] {JavaTokenTypes.LITERAL_try,", "-                          JavaTokenTypes.LITERAL_catch,", "-                          JavaTokenTypes.LITERAL_else};", "+        return new int[] {TokenTypes.LITERAL_TRY,", "+                          TokenTypes.LITERAL_CATCH,", "+                          TokenTypes.LITERAL_ELSE};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd9eda308ec417dd6cfc68cb9c2e3b91", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void processEnd(DetailAST ast)", "signatureAfterChange": "     private void processEnd(DetailAST ast)", "diff": ["-            log(ast.getLineNo(), before, \"ws.preceded\", \">\");", "+            log(ast.getLineNo(), before, WS_PRECEDED, \">\");", "-                        log(ast.getLineNo(), after, \"ws.followed\", \">\");", "+                        log(ast.getLineNo(), after, WS_FOLLOWED, \">\");", "-                    log(ast.getLineNo(), after, \"ws.illegalFollow\", \">\");", "+                    log(ast.getLineNo(), after, WS_ILLEGAL_FOLLOW, \">\");", "-                        log(ast.getLineNo(), after, \"ws.notPreceded\", \"&\");", "+                        log(ast.getLineNo(), after, WS_NOT_PRECEDED, \"&\");", "-                        log(ast.getLineNo(), after, \"ws.followed\", \">\");", "+                        log(ast.getLineNo(), after, WS_FOLLOWED, \">\");", "-                    log(ast.getLineNo(), after, \"ws.followed\", \">\");", "+                    log(ast.getLineNo(), after, WS_FOLLOWED, \">\");"]}]}