{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ef2dc2c8537c53ac0942e7cd65c741f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a5596bf27c98da9b0be07830336f157", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected Checker createChecker(Configuration aCheckConfig)         throws Exception", "signatureAfterChange": "      protected Checker createChecker(Configuration checkConfig)             throws Exception", "diff": ["-    protected Checker createChecker(Configuration aCheckConfig)", "-        throws Exception {", "-        final DefaultConfiguration dc = createCheckerConfig(aCheckConfig);", "+", "+    protected Checker createChecker(Configuration checkConfig)", "+            throws Exception {", "+        final DefaultConfiguration dc = createCheckerConfig(checkConfig);", "-        // make sure the tests always run with english error messages", "-        // so the tests don't fail in supported locales like german", "+        // make sure the tests always run with English error messages", "+        // so the tests don't fail in supported locales like German"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e6f3c9fdf0ddea6ad4aa955f5e7e00b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "04483a77e8f20ef67db6467c477a7fcba129eef6", "commitAfterChange": "4564aecb5c1d694591feef433ce067d74e36d823", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testCheckstyleChecks() throws Exception", "signatureAfterChange": "      public void testCheckstyleChecks() throws Exception", "diff": ["-        verifyConfigNode(config, \"configuration\", 3, atts);", "+        verifyConfigNode(config, \"Checker\", 3, atts);", "-            (DefaultConfiguration) children[1], \"PackageHtmlCheck\", 0, atts);", "+            (DefaultConfiguration) children[1], \"PackageHtml\", 0, atts);", "-            (DefaultConfiguration) children[2], \"TranslationCheck\", 0, atts);", "+            (DefaultConfiguration) children[2], \"Translation\", 0, atts);", "-            \"GenericIllegalRegexpCheck\",", "+            \"GenericIllegalRegexp\",", "-            \"NoWhitespaceAfterCheck\",", "+            \"NoWhitespaceAfter\","]}]}