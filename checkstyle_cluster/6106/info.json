{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e194c0902a2861c5c60819c301d199a8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f2d25092af72923e82ecf8431dee156", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "69976b5365b7c33a602dd814337e2db1136288fc", "commitAfterChange": "ac8eadea0b1fb183d56cd809a34a7b9047b47d47", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void forbidCStyle() throws Exception", "signatureAfterChange": "      @Test     public void forbidCStyle() throws Exception", "diff": ["+        checkConfig.addAttribute(\"arrayInitIndent\", \"4\");", "-        checkConfig.addAttribute(\"lineWrappingIndentation\", \"8\");", "-        checkConfig.addAttribute(\"throwsIndent\", \"8\");", "+        checkConfig.addAttribute(\"braceAdjustment\", \"0\");", "+        checkConfig.addAttribute(\"caseIndent\", \"4\");", "+        checkConfig.addAttribute(\"lineWrappingIndentation\", \"8\");", "+        checkConfig.addAttribute(\"tabWidth\", \"4\");", "+        checkConfig.addAttribute(\"throwsIndent\", \"8\");", "-            \"5: \" + getCheckMessage(MSG_ERROR, \"int\", 29, 12),", "-            \"6: \" + getCheckMessage(MSG_ERROR, \"int\", 29, 12),", "+            \"20: \" + getCheckMessage(MSG_ERROR, \"int\", 29, 12),", "+            \"21: \" + getCheckMessage(MSG_ERROR, \"int\", 29, 12),", "-        verify(checkConfig, getPath(\"indentation/InputMethodCStyle.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"indentation/InputMethodCStyle.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48a0d4048c1a9efcaf9a8e1650ac9f54", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "69976b5365b7c33a602dd814337e2db1136288fc", "commitAfterChange": "ac8eadea0b1fb183d56cd809a34a7b9047b47d47", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testMethodCallLineWrap() throws Exception", "signatureAfterChange": "      @Test     public void testMethodCallLineWrap() throws Exception", "diff": ["+", "+        checkConfig.addAttribute(\"arrayInitIndent\", \"4\");", "+        checkConfig.addAttribute(\"basicOffset\", \"4\");", "+        checkConfig.addAttribute(\"braceAdjustment\", \"0\");", "+        checkConfig.addAttribute(\"caseIndent\", \"4\");", "+        checkConfig.addAttribute(\"forceStrictCondition\", \"false\");", "+        checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\");", "+        checkConfig.addAttribute(\"tabWidth\", \"4\");", "+        checkConfig.addAttribute(\"throwsIndent\", \"4\");", "-            \"36: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 18, 20),", "-            \"37: \" + getCheckMessage(MSG_ERROR, \"method call rparen\", 14, 16),", "+            \"51: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 18, 20),", "+            \"52: \" + getCheckMessage(MSG_ERROR, \"method call rparen\", 14, 16),", "-        verify(checkConfig, getPath(\"indentation/InputMethodCallLineWrap.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"indentation/InputMethodCallLineWrap.java\"), expected);"]}]}