{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61529ce577eaeeb36c9aa0b9626d6207", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02160be0723b49412cbcd96f9c21cdf2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/AnonInnerLengthCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final DetailAST openingBrace = aAST.findFirstToken(TokenTypes.OBJBLOCK);", "+        final DetailAST openingBrace = ast.findFirstToken(TokenTypes.OBJBLOCK);", "-            if (length > mMax) {", "-                log(aAST.getLineNo(), aAST.getColumnNo(), \"maxLen.anonInner\",", "-                        length, mMax);", "+            if (length > max) {", "+                log(ast.getLineNo(), ast.getColumnNo(), \"maxLen.anonInner\",", "+                        length, max);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7ddab054e80e5ed6228e4c3e6b29ca1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodLengthCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final DetailAST openingBrace = aAST.findFirstToken(TokenTypes.SLIST);", "+        final DetailAST openingBrace = ast.findFirstToken(TokenTypes.SLIST);", "-            if (!mCountEmpty) {", "+            if (!countEmpty) {", "-            if (length > mMax) {", "-                log(aAST.getLineNo(), aAST.getColumnNo(), \"maxLen.method\",", "-                        length, mMax);", "+            if (length > max) {", "+                log(ast.getLineNo(), ast.getColumnNo(), \"maxLen.method\",", "+                        length, max);"]}]}