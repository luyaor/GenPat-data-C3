{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83cdfc38456dad2a03091f60805621b9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f6c61cc820c110b4612784c2144d199", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/LineLengthCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setIgnorePattern(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setIgnorePattern(String format)         throws ConversionException", "diff": ["-    public void setIgnorePattern(String aFormat)", "+    public void setIgnorePattern(String format)", "-            mIgnorePattern = Utils.getPattern(aFormat);", "+            ignorePattern = Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fbbc0414ebe4451185bf7cdc1927d76", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void setIgnoreFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setIgnoreFormat(String format)         throws ConversionException", "diff": ["-    public void setIgnoreFormat(String aFormat)", "+    public void setIgnoreFormat(String format)", "-            mRegexp = Utils.getPattern(aFormat);", "+            regexp = Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}]}