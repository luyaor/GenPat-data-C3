{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46b62456a78bcb63f0ce97c918f6925e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3be821cb1a4d9ffb35f1963ba5a1f7ab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "d6272b70eb5ad61fd8ab34091e970c50b1f67386", "commitAfterChange": "1a2c318e22a0b2b22ccc76019217c0892fe2d59b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static AuditListener createListener(String format,                                                 OutputStream out,                                                 boolean closeOut)             throws UnsupportedEncodingException, CheckstyleException", "signatureAfterChange": "     private static AuditListener createListener(String format,                                                 String outputLocation)             throws UnsupportedEncodingException, FileNotFoundException", "diff": ["-                                                OutputStream out,", "-                                                boolean closeOut)", "-            throws UnsupportedEncodingException, CheckstyleException", "+                                                String outputLocation)", "+            throws UnsupportedEncodingException, FileNotFoundException", "+", "+        // setup the output stream", "+        OutputStream out = null;", "+        boolean closeOut = false;", "+        if (outputLocation != null) {", "+            out = new FileOutputStream(outputLocation);", "+            closeOut = true;", "+        }", "+        else {", "+            out = System.out;", "+            closeOut = false;", "+        }", "+", "+        // setup a listener", "-                throw new CheckstyleException(\"Invalid output format. Found '\" + format", "+                throw new IllegalStateException(\"Invalid output format. Found '\" + format"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc238ca968f46cc62ef9791c11029b3a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "e7b146aa34bbe3b15281109837d18777adb73d02", "commitAfterChange": "be8127a604bfdd91ff7cd32a1f825c9851d791ec", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static Configuration loadConfiguration(String aConfig,         PropertyResolver aOverridePropsResolver, boolean aOmitIgnoredModules)         throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(String aConfig,         PropertyResolver aOverridePropsResolver, boolean aOmitIgnoredModules)         throws CheckstyleException", "diff": ["-                if (!file.exists()) {", "-                    throw new FileNotFoundException(aConfig);", "+                if (file.exists()) {", "+                    uri = file.toURI();", "-                uri = file.toURI();", "+                else {", "+                    // check to see if the file is in the classpath", "+                    try {", "+                        final URL configUrl = ConfigurationLoader.class", "+                                .getResource(aConfig);", "+                        if (configUrl == null) {", "+                            throw new FileNotFoundException(aConfig);", "+                        }", "+                        uri = configUrl.toURI();", "+                    }", "+                    catch (final URISyntaxException e) {", "+                        throw new FileNotFoundException(aConfig);", "+                    }", "+                }"]}]}