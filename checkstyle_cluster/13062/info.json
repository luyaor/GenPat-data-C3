{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "487ba88c0fb56762603f6a48cf614fee", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "442b6092fda2660fb9f8a2e5957f64ac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/PackageHtmlCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void process(File[] aFiles)", "signatureAfterChange": "     public void process(File[] aFiles)", "diff": ["-        for (Iterator it = directories.iterator(); it.hasNext();) {", "+        for (final Iterator it = directories.iterator(); it.hasNext();) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f6a061637e323102d865cf35b720981", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "     public void finishTree(DetailAST aRootAST)", "diff": ["-        for (Iterator it = equalsDefs.iterator(); it.hasNext();) {", "+        for (final Iterator it = equalsDefs.iterator(); it.hasNext();) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c227f8050ff20364ca23550f94a1a888", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public void destroy()", "signatureAfterChange": "     public void destroy()", "diff": ["-        for (Iterator it = mAllChecks.iterator(); it.hasNext();) {", "+        for (final Iterator it = mAllChecks.iterator(); it.hasNext();) {"]}]}