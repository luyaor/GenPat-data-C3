{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30fe9dea1717cfb9faea5eeb727df939", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29f460d002e0dccac8d7d56b93bd3e46", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/HeaderCheckTest.java", "commitBeforeChange": "79a25c2edca12c2c1baa9ddf86ccf0406a3c8e2e", "commitAfterChange": "69735778f83c901ac367d14c301bb82b754020e0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testRegexpHeaderIgnore()         throws Exception", "signatureAfterChange": "      public void testRegexpHeaderIgnore()         throws Exception", "diff": ["-        final CheckConfiguration checkConfig = new CheckConfiguration();", "-        checkConfig.setClassname(RegexpHeaderCheck.class.getName());", "-        checkConfig.addProperty(\"headerFile\", getPath(\"regexp.header\"));", "-        checkConfig.addProperty(\"ignoreLines\", \"3,4,5\");", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(HeaderCheck.class);", "+        checkConfig.addAttribute(\"headerFile\", getPath(\"regexp.header\"));", "+        checkConfig.addAttribute(\"ignoreLines\", \"3,4,5\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4507d529e6e6fa0a706f78273b4f00e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/HeaderCheckTest.java", "commitBeforeChange": "79a25c2edca12c2c1baa9ddf86ccf0406a3c8e2e", "commitAfterChange": "69735778f83c901ac367d14c301bb82b754020e0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testRegexpHeader()         throws Exception", "signatureAfterChange": "      public void testRegexpHeader()         throws Exception", "diff": ["-        final CheckConfiguration checkConfig = new CheckConfiguration();", "-        checkConfig.setClassname(RegexpHeaderCheck.class.getName());", "-        checkConfig.addProperty(\"headerFile\", getPath(\"regexp.header\"));", "-        checkConfig.addProperty(\"ignoreLines\", \"4,5\");", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(HeaderCheck.class);", "+        checkConfig.addAttribute(\"headerFile\", getPath(\"regexp.header\"));", "+        checkConfig.addAttribute(\"ignoreLines\", \"4,5\");"]}]}