{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd3d591141398bb7b64fd2b96755bb46", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0281d94510e088d34c51d5b4a98b84c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     protected void processFiltered(File aFile, List<String> aLines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-    protected void processFiltered(File aFile, List<String> aLines)", "+    protected void processFiltered(File file, List<String> lines)", "-        // Cannot use aLines as the line separators have been removed!", "+        // Cannot use lines as the line separators have been removed!", "-            randomAccessFile = new RandomAccessFile(aFile, \"r\");", "+            randomAccessFile = new RandomAccessFile(file, \"r\");", "-                log(0, \"noNewlineAtEOF\", aFile.getPath());", "+                log(0, \"noNewlineAtEOF\", file.getPath());", "-            log(0, \"unable.open\", aFile.getPath());", "+            log(0, \"unable.open\", file.getPath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cef259fdf5c34d8e42ab97cd5082c650", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected void processFiltered(File aFile, List<String> aLines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-    protected void processFiltered(File aFile, List<String> aLines)", "+    protected void processFiltered(File file, List<String> lines)", "-            properties.load(new FileInputStream(aFile));", "+            properties.load(new FileInputStream(file));", "-            log(0, IO_EXCEPTION_KEY, aFile.getPath(),", "+            log(0, IO_EXCEPTION_KEY, file.getPath(),", "-            final int lineNumber = getLineNumber(aLines, keyName);", "+            final int lineNumber = getLineNumber(lines, keyName);"]}]}