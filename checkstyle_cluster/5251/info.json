{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "49acc647945f9672bf752e07fb8fe08b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f01d827899f71068aa3de795a2a5854", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public ByteBuffer getBytes() throws IOException", "signatureAfterChange": "     public ByteBuffer getBytes() throws IOException", "diff": ["-        if (mFile == null) {", "+        if (file == null) {", "-        if (mFile.length() > Integer.MAX_VALUE) {", "+        if (file.length() > Integer.MAX_VALUE) {", "-        byte[] bytes = new byte[(int) mFile.length() + 1];", "-        final FileInputStream stream = new FileInputStream(mFile);", "+        byte[] bytes = new byte[(int) file.length() + 1];", "+        final FileInputStream stream = new FileInputStream(file);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3163789491cfd075050e4204e19db8a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public Pattern getPattern()", "signatureAfterChange": "     public Pattern getPattern()", "diff": ["-        final int options = (mIgnoreCase) ? mCompileFlags", "-                | Pattern.CASE_INSENSITIVE : mCompileFlags;", "-        return Utils.getPattern(mFormat, options);", "+        final int options = (ignoreCase) ? compileFlags", "+                | Pattern.CASE_INSENSITIVE : compileFlags;", "+        return Utils.getPattern(format, options);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9e829ae725a7d87f0b12da7870ad788", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "f747835b6b4bd894eed2ef17eb059a003fb4d988", "commitAfterChange": "6ebcf2733b6c635d5f044aa35caf2a610c7723ff", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(final DetailAST methodCall)", "signatureAfterChange": "      @Override     public void visitToken(final DetailAST methodCall)", "diff": ["-            && containsOneArg(expr) && containsAllSafeTokens(expr)) {", "+            && containsOneArgument(methodCall) && containsAllSafeTokens(expr)) {", "-            && containsOneArg(expr) && containsAllSafeTokens(expr)) {", "+            && containsOneArgument(methodCall) && containsAllSafeTokens(expr)) {", "+    }"]}]}