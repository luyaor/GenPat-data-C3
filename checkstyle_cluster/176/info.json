{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1cff9e545195ac8fbcfa0fe72b7573f4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "079dc16ab7c9fa16c33697b5715550a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "7c5092271d95f34b5ddcb160e85ea460daaadb5d", "commitAfterChange": "423ed9e469db620671459827b58c89025d8f6c66", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private boolean hasTrailComment(DetailAST ast)", "signatureAfterChange": "     private boolean hasTrailComment(DetailAST ast)", "diff": ["-        if (variableDef != null) {", "-", "+        if (variableDef == null) {", "+            semi = getSemi(ast);", "+        }", "+        else {", "-        }", "-        else {", "-            semi = getSemi(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fc033356ab37682154439dbdfceacee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "7c5092271d95f34b5ddcb160e85ea460daaadb5d", "commitAfterChange": "423ed9e469db620671459827b58c89025d8f6c66", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            if (nextAST != null) {", "-                lastLine = nextAST.getLineNo();", "-                lastColumn = nextAST.getColumnNo() - 1;", "-            }", "-            else {", "+            if (nextAST == null) {", "+            else {", "+                lastLine = nextAST.getLineNo();", "+                lastColumn = nextAST.getColumnNo() - 1;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25fdf1dbbd57af0808dc3d71636e77df", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65", "commitAfterChange": "88830ca708e2deb22cae333057ebddd15f7f9c57", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setColumns(String columns)", "signatureAfterChange": "     public void setColumns(String columns)", "diff": ["-        if (columns != null) {", "-            columnFilter = new CSVFilter(columns);", "+        if (columns == null) {", "+            columnFilter = null;", "-            columnFilter = null;", "+            columnFilter = new CSVFilter(columns);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "266bcac4b40c1c1b2ca72c3a52dd8c4d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheck.java", "commitBeforeChange": "7c5092271d95f34b5ddcb160e85ea460daaadb5d", "commitAfterChange": "423ed9e469db620671459827b58c89025d8f6c66", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(final DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(final DetailAST ast)", "diff": ["-        if (token != null) {", "-            // case like '@SuppressWarnings(value = UNUSED)'", "-            warning = token.findFirstToken(TokenTypes.EXPR);", "+        if (token == null) {", "+            warning = warningHolder.findFirstToken(TokenTypes.EXPR);", "-            warning = warningHolder.findFirstToken(TokenTypes.EXPR);", "+            // case like '@SuppressWarnings(value = UNUSED)'", "+            warning = token.findFirstToken(TokenTypes.EXPR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26c03c90e6f7a8f803b8d1092cb2b6cf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractDeclarationCollector.java", "commitBeforeChange": "7c5092271d95f34b5ddcb160e85ea460daaadb5d", "commitAfterChange": "423ed9e469db620671459827b58c89025d8f6c66", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private LexicalFrame findFrame(String name)", "signatureAfterChange": "     private LexicalFrame findFrame(String name)", "diff": ["-        if (current != null) {", "-            return current.getIfContains(name);", "+        if (current == null) {", "+            return null;", "-            return null;", "+            return current.getIfContains(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "359c41a9c1783edd00ebbfc94992d1e5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MemberDefHandler.java", "commitBeforeChange": "d0939d3bc93819ebc1f42642806c0265fc7908b3", "commitAfterChange": "86826e1fa3fe3d793ee4723bb84ee0fc4ca38df1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void checkIndentation()", "signatureAfterChange": "      @Override     public void checkIndentation()", "diff": ["-        if (modifiersNode.getChildCount() != 0) {", "-            checkModifiers();", "+        if (modifiersNode.getChildCount() == 0) {", "+            checkType();", "-            checkType();", "+            checkModifiers();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "401de94220c2192dbd3b4c1e8ee39de2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "423ed9e469db620671459827b58c89025d8f6c66", "commitAfterChange": "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private static Entry<DetailAST, Integer> calculateDistanceBetweenScopes(             DetailAST ast, DetailAST variable)", "signatureAfterChange": "     private static Entry<DetailAST, Integer> calculateDistanceBetweenScopes(             DetailAST ast, DetailAST variable)", "diff": ["-                if (exprWithVariableUsage != null) {", "-                    variableUsageAst = exprWithVariableUsage;", "+                if (exprWithVariableUsage == null) {", "+                    variableUsageAst = blockWithVariableUsage;", "-                    variableUsageAst = blockWithVariableUsage;", "+                    variableUsageAst = exprWithVariableUsage;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4934adb0762ecc98d27336e4b3cbabb3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheck.java", "commitBeforeChange": "7c5092271d95f34b5ddcb160e85ea460daaadb5d", "commitAfterChange": "423ed9e469db620671459827b58c89025d8f6c66", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static DetailAST findWarningsHolder(final DetailAST annotation)", "signatureAfterChange": "     private static DetailAST findWarningsHolder(final DetailAST annotation)", "diff": ["-        if (annValuePair != null) {", "+        if (annValuePair == null) {", "-                annValuePair.findFirstToken(TokenTypes.ANNOTATION_ARRAY_INIT);", "+                    annotation.findFirstToken(TokenTypes.ANNOTATION_ARRAY_INIT);", "-                annotation.findFirstToken(TokenTypes.ANNOTATION_ARRAY_INIT);", "+                    annValuePair.findFirstToken(TokenTypes.ANNOTATION_ARRAY_INIT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4df022f595bfc99417f1f20194bc0eec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "commitBeforeChange": "7c5092271d95f34b5ddcb160e85ea460daaadb5d", "commitAfterChange": "423ed9e469db620671459827b58c89025d8f6c66", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private static DetailAST findExpressionBlockInForLoop(DetailAST literalFor)", "signatureAfterChange": "     private static DetailAST findExpressionBlockInForLoop(DetailAST literalFor)", "diff": ["-        if (forEachClause != null) {", "-            firstToken = forEachClause.findFirstToken(TokenTypes.EXPR);", "+        if (forEachClause == null) {", "+            firstToken = literalFor.findFirstToken(TokenTypes.EXPR);", "-            firstToken = literalFor.findFirstToken(TokenTypes.EXPR);", "+            firstToken = forEachClause.findFirstToken(TokenTypes.EXPR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f4407b3c7155b40afda645ce01295aa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "7c5092271d95f34b5ddcb160e85ea460daaadb5d", "commitAfterChange": "423ed9e469db620671459827b58c89025d8f6c66", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static AuditListener createListener(String format,                                                 String outputLocation)             throws FileNotFoundException", "signatureAfterChange": "     private static AuditListener createListener(String format,                                                 String outputLocation)             throws FileNotFoundException", "diff": ["-        if (outputLocation != null) {", "-            out = new FileOutputStream(outputLocation);", "-            closeOutputStream = true;", "-        }", "-        else {", "+        if (outputLocation == null) {", "+        else {", "+            out = new FileOutputStream(outputLocation);", "+            closeOutputStream = true;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c58405e73817e115007477954678d43", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "7c5092271d95f34b5ddcb160e85ea460daaadb5d", "commitAfterChange": "423ed9e469db620671459827b58c89025d8f6c66", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static void parsePropertyString(String value,                                            List<String> fragments,                                            List<String> propertyRefs)         throws CheckstyleException", "signatureAfterChange": "     private static void parsePropertyString(String value,                                            List<String> fragments,                                            List<String> propertyRefs)         throws CheckstyleException", "diff": ["-            else if (value.charAt(pos + 1) != '{') {", "-                if (value.charAt(pos + 1) == DOLLAR_SIGN) {", "-                    //backwards compatibility two $ map to one mode", "-                    fragments.add(String.valueOf(DOLLAR_SIGN));", "-                    prev = pos + 2;", "-                }", "-                else {", "-                    //new behaviour: $X maps to $X for all values of X!='$'", "-                    fragments.add(value.substring(pos, pos + 2));", "-                    prev = pos + 2;", "-                }", "-", "-            }", "-            else {", "+            else if (value.charAt(pos + 1) == '{') {", "+            else {", "+                if (value.charAt(pos + 1) == DOLLAR_SIGN) {", "+                    //backwards compatibility two $ map to one mode", "+                    fragments.add(String.valueOf(DOLLAR_SIGN));", "+                    prev = pos + 2;", "+                }", "+                else {", "+                    //new behaviour: $X maps to $X for all values of X!='$'", "+                    fragments.add(value.substring(pos, pos + 2));", "+                    prev = pos + 2;", "+                }", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ce1b08929f0b68a8fde36e3a532734d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65", "commitAfterChange": "88830ca708e2deb22cae333057ebddd15f7f9c57", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "         public Tag(String text, int line, SuppressWithNearbyCommentFilter filter)", "signatureAfterChange": "         public Tag(String text, int line, SuppressWithNearbyCommentFilter filter)", "diff": ["-                if (filter.messageFormat != null) {", "+                if (filter.messageFormat == null) {", "+                    tagMessageRegexp = null;", "+                }", "+                else {", "-                }", "-                else {", "-                    tagMessageRegexp = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73b0d9275cd148099077d7bcbcdd26e3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "commitBeforeChange": "423ed9e469db620671459827b58c89025d8f6c66", "commitAfterChange": "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static String getAnnotationName(DetailAST annotation)", "signatureAfterChange": "     private static String getAnnotationName(DetailAST annotation)", "diff": ["-        if (dotAst != null) {", "-            name = dotAst.findFirstToken(TokenTypes.IDENT).getText();", "+        if (dotAst == null) {", "+            name = annotation.findFirstToken(TokenTypes.IDENT).getText();", "-            name = annotation.findFirstToken(TokenTypes.IDENT).getText();", "+            name = dotAst.findFirstToken(TokenTypes.IDENT).getText();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a1f5c8d715497327ee0c48b7a816c6a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "commitBeforeChange": "d0939d3bc93819ebc1f42642806c0265fc7908b3", "commitAfterChange": "86826e1fa3fe3d793ee4723bb84ee0fc4ca38df1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static boolean isInContext(DetailAST ast, int[]... contextSet)", "signatureAfterChange": "     private static boolean isInContext(DetailAST ast, int[]... contextSet)", "diff": ["-                if (current.getType() != expectedType) {", "-                    found = false;", "-                    break;", "+                if (current.getType() == expectedType) {", "+                    found = true;", "-                    found = true;", "+                    found = false;", "+                    break;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "884e12c92f3984ae1950da10daf5a0a9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java", "commitBeforeChange": "423ed9e469db620671459827b58c89025d8f6c66", "commitAfterChange": "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void leaveForDef(DetailAST ast)", "signatureAfterChange": "     private void leaveForDef(DetailAST ast)", "diff": ["-        if (forInitAST != null) {", "-            final Set<String> variablesManagedByForLoop = getVariablesManagedByForLoop(ast);", "-            popCurrentVariables(variablesManagedByForLoop.size());", "-        }", "-        else {", "+        if (forInitAST == null) {", "+        else {", "+            final Set<String> variablesManagedByForLoop = getVariablesManagedByForLoop(ast);", "+            popCurrentVariables(variablesManagedByForLoop.size());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a7bd565693708d87a0b4585683eed32", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java", "commitBeforeChange": "7c5092271d95f34b5ddcb160e85ea460daaadb5d", "commitAfterChange": "423ed9e469db620671459827b58c89025d8f6c66", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private static Details getDetails(DetailAST ast)", "signatureAfterChange": "     private static Details getDetails(DetailAST ast)", "diff": ["-                if (nextToken != null) {", "-                    lcurly = nextToken.getPreviousSibling();", "-                    rcurly = lcurly.getLastChild();", "-                }", "-                else {", "+                if (nextToken == null) {", "+                else {", "+                    lcurly = nextToken.getPreviousSibling();", "+                    rcurly = lcurly.getLastChild();", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cfa4c419fc1c9180fb262804fc208d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65", "commitAfterChange": "88830ca708e2deb22cae333057ebddd15f7f9c57", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "         public boolean isMatch(AuditEvent event)", "signatureAfterChange": "         public boolean isMatch(AuditEvent event)", "diff": ["-                if (tagMessageRegexp != null) {", "-                    final Matcher messageMatcher = tagMessageRegexp.matcher(event.getMessage());", "-                    match = messageMatcher.find();", "+                if (tagMessageRegexp == null) {", "+                    match = true;", "-                    match = true;", "+                    final Matcher messageMatcher = tagMessageRegexp.matcher(event.getMessage());", "+                    match = messageMatcher.find();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9317b64985689181ab695e0545b81e80", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "423ed9e469db620671459827b58c89025d8f6c66", "commitAfterChange": "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static boolean isMultilineStatement(DetailAST ast)", "signatureAfterChange": "     private static boolean isMultilineStatement(DetailAST ast)", "diff": ["-        if (ast.getPreviousSibling() != null) {", "-            final DetailAST prevSibling = ast.getPreviousSibling();", "-            multiline = prevSibling.getLineNo() != ast.getLineNo()", "-                && ast.getParent() != null;", "+        if (ast.getPreviousSibling() == null) {", "+            multiline = false;", "-            multiline = false;", "+            final DetailAST prevSibling = ast.getPreviousSibling();", "+            multiline = prevSibling.getLineNo() != ast.getLineNo()", "+                    && ast.getParent() != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ac2e361de4a37ffdbc97f8a542fe152", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65", "commitAfterChange": "88830ca708e2deb22cae333057ebddd15f7f9c57", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Override     public void checkIndentation()", "signatureAfterChange": "      @Override     public void checkIndentation()", "diff": ["-        if (listChild != null) {", "+        if (listChild == null) {", "+            checkNonListChild();", "+        }", "+        else {", "-                              getCheckedChildren(),", "-                              getChildrenExpectedLevel(),", "-                              true,", "-                              canChildrenBeNested());", "+                        getCheckedChildren(),", "+                        getChildrenExpectedLevel(),", "+                        true,", "+                        canChildrenBeNested());", "-        }", "-        else {", "-            checkNonListChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1737368053a3d01acff635e61e645ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java", "commitBeforeChange": "423ed9e469db620671459827b58c89025d8f6c66", "commitAfterChange": "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void processModifiers(DetailAST ast)", "signatureAfterChange": "     private void processModifiers(DetailAST ast)", "diff": ["-        if (ast.findFirstToken(TokenTypes.LITERAL_STATIC) != null) {", "-            if (state.currentScopeState > STATE_STATIC_VARIABLE_DEF) {", "-                if (!ignoreModifiers", "-                    || state.currentScopeState > STATE_INSTANCE_VARIABLE_DEF) {", "-                    log(ast, MSG_STATIC);", "-                }", "-            }", "-            else {", "-                state.currentScopeState = STATE_STATIC_VARIABLE_DEF;", "-            }", "-        }", "-        else {", "+        if (ast.findFirstToken(TokenTypes.LITERAL_STATIC) == null) {", "+        else {", "+            if (state.currentScopeState > STATE_STATIC_VARIABLE_DEF) {", "+                if (!ignoreModifiers", "+                        || state.currentScopeState > STATE_INSTANCE_VARIABLE_DEF) {", "+                    log(ast, MSG_STATIC);", "+                }", "+            }", "+            else {", "+                state.currentScopeState = STATE_STATIC_VARIABLE_DEF;", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdb18cb1bd9085701c01bdc06eaac0f9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "423ed9e469db620671459827b58c89025d8f6c66", "commitAfterChange": "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private boolean isCalledOnStringField(DetailAST objCalledOn)", "signatureAfterChange": "     private boolean isCalledOnStringField(DetailAST objCalledOn)", "diff": ["-        if (previousSiblingAst != null) {", "+        if (previousSiblingAst == null) {", "+            FieldFrame frame = currentFrame;", "+            while (frame != null) {", "+                final DetailAST field = frame.findField(name);", "+                if (field != null", "+                        && (frame.isClassOrEnumOrEnumConstDef()", "+                                || checkLineNo(field, objCalledOn))) {", "+                    result = STRING.equals(getFieldType(field));", "+                    break;", "+                }", "+                frame = frame.getParent();", "+            }", "+        }", "+        else {", "-            }", "-        }", "-        else {", "-            FieldFrame frame = currentFrame;", "-            while (frame != null) {", "-                final DetailAST field = frame.findField(name);", "-                if (field != null", "-                        && (frame.isClassOrEnumOrEnumConstDef()", "-                                || checkLineNo(field, objCalledOn))) {", "-                    result = STRING.equals(getFieldType(field));", "-                    break;", "-                }", "-                frame = frame.getParent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2127a1f5d46dbb223be6113a7653f4b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java", "commitBeforeChange": "10b36a4ad57c425d16dc85641da3cf80a04dba15", "commitAfterChange": "7c9772cee74ae38d5f26c54de43beb75434aef24", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected IndentLevel getLevelImpl()", "signatureAfterChange": "      @Override     protected IndentLevel getLevelImpl()", "diff": ["-            if (lineStart != firstCol) {", "-                indentLevel = new IndentLevel(lineStart);", "+            if (lineStart == firstCol) {", "+                indentLevel = super.getLevelImpl();", "-                indentLevel = super.getLevelImpl();", "+                indentLevel = new IndentLevel(lineStart);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d303142c153cb943a693d06ea92c18ee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "423ed9e469db620671459827b58c89025d8f6c66", "commitAfterChange": "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void startElement(final String namespaceURI,                              final String localName,                              final String qName,                              final Attributes attributes)         throws SAXException", "signatureAfterChange": "      @Override     public void startElement(final String namespaceURI,                              final String localName,                              final String qName,                              final Attributes attributes)         throws SAXException", "diff": ["-            if (pkg != null) {", "-                final boolean exactMatch =", "-                        attributes.getValue(\"exact-match\") != null;", "-                guard = new Guard(isAllow, isLocalOnly, pkg, exactMatch, regex);", "-            }", "-            else {", "+            if (pkg == null) {", "+            else {", "+                final boolean exactMatch =", "+                        attributes.getValue(\"exact-match\") != null;", "+                guard = new Guard(isAllow, isLocalOnly, pkg, exactMatch, regex);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f476f0da80773320e29fd6a20d966f7b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65", "commitAfterChange": "88830ca708e2deb22cae333057ebddd15f7f9c57", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setLines(String lines)", "signatureAfterChange": "     public void setLines(String lines)", "diff": ["-        if (lines != null) {", "-            lineFilter = new CSVFilter(lines);", "+        if (lines == null) {", "+            lineFilter = null;", "-            lineFilter = null;", "+            lineFilter = new CSVFilter(lines);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe733a6022bb1cec91600ecb95edac44", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ForHandler.java", "commitBeforeChange": "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65", "commitAfterChange": "88830ca708e2deb22cae333057ebddd15f7f9c57", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private void checkForParams()", "signatureAfterChange": "     private void checkForParams()", "diff": ["-        if (init != null) {", "+        if (init == null) {", "+            // for each", "+            final DetailAST forEach =", "+                    getMainAst().findFirstToken(TokenTypes.FOR_EACH_CLAUSE);", "+            checkExpressionSubtree(forEach, expected, false, false);", "+        }", "+        else {", "-                getMainAst().findFirstToken(TokenTypes.FOR_CONDITION);", "+                    getMainAst().findFirstToken(TokenTypes.FOR_CONDITION);", "-                getMainAst().findFirstToken(TokenTypes.FOR_ITERATOR);", "+                    getMainAst().findFirstToken(TokenTypes.FOR_ITERATOR);", "-        }", "-        // for each", "-        else {", "-            final DetailAST forEach =", "-                getMainAst().findFirstToken(TokenTypes.FOR_EACH_CLAUSE);", "-            checkExpressionSubtree(forEach, expected, false, false);"]}]}