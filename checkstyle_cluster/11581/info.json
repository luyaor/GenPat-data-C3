{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc26a5b1b826c86260db6d2743b358c0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01e27a4c9e2bbb9180ae06ea6a7517e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "fa7617c2223dae31f3ad486002f60201667e7a95", "commitAfterChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 36, "signatureBeforeChange": "     protected boolean isShortName(String aShortName, String aFullName)", "signatureAfterChange": "         public String toString()", "diff": ["-     */", "-    protected boolean isShortName(String aShortName, String aFullName)", "-    {", "-        if (aShortName.length() >= aFullName.length()) {", "-            return false;", "-        }", "-", "-        final String base = Utils.baseClassname(aFullName);", "-        if (aShortName.length() >= aFullName.length()", "-                || !base.equals(aShortName))", "-        {", "-            return false;", "-        }", "-", "-        // check fully qualified import", "-        if (mImports.contains(aFullName)) {", "-            return true;", "-        }", "-", "-        // check .* import", "-        final int endIndex = aFullName.length() - base.length() - 1;", "-        final String packageName = aFullName.substring(0, endIndex);", "-        final String starImport = packageName + \".*\";", "-        if (mImports.contains(starImport)) {", "-            return true;", "-        }", "-", "-        // check fully qualified class from same package", "-        return packageName.equals(mPackageFullIdent.getText());", "-    }", "+        /** {@inheritDoc} */", "+        public String toString()", "+        {", "+            return \"Token[\" + getText() + \"(\" + getLineNo()", "+                + \"x\" + getColumnNo() + \")]\";", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abc446be33f6b905300ed2cf437d723d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "91a49a90d40c6adad5f973f792c6b80003a69263", "commitAfterChange": "a172cb76e245dfeb01e9957cfe196f26bde555d7", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private boolean isCalledOnStringField(DetailAST objCalledOn)", "signatureAfterChange": "     private boolean isCalledOnStringFieldOrVariable(DetailAST objCalledOn)", "diff": ["-    private boolean isCalledOnStringField(DetailAST objCalledOn) {", "-        boolean result = false;", "+    private boolean isCalledOnStringFieldOrVariable(DetailAST objCalledOn) {", "+        boolean result;", "-        final String name = objCalledOn.getText();", "-            FieldFrame frame = currentFrame;", "-            while (frame != null) {", "-                final DetailAST field = frame.findField(name);", "-                if (field != null", "-                        && (frame.isClassOrEnumOrEnumConstDef()", "-                                || checkLineNo(field, objCalledOn))) {", "-                    result = STRING.equals(getFieldType(field));", "-                    break;", "-                }", "-                frame = frame.getParent();", "-            }", "+            result = isStringFieldOrVariable(objCalledOn);", "-                final DetailAST field = getObjectFrame(currentFrame).findField(name);", "-                result = STRING.equals(getFieldType(field));", "+                result = isStringFieldOrVariableFromThisInstance(objCalledOn);", "-                FieldFrame frame = getObjectFrame(currentFrame);", "-                while (frame != null) {", "-                    if (className.equals(frame.getFrameName())) {", "-                        final DetailAST field = frame.findField(name);", "-                        result = STRING.equals(getFieldType(field));", "-                        break;", "-                    }", "-                    frame = getObjectFrame(frame.getParent());", "-                }", "+                result = isStringFieldOrVariableFromClass(objCalledOn, className);"]}]}