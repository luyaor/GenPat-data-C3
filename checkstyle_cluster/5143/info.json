{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "661eb9308cc1b1e26448012ee31ca542", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08585310ca31fb2619ff2ebc7a0f572e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void allowEmptyLoops() throws Exception", "signatureAfterChange": "      @Test     public void allowEmptyLoops() throws Exception", "diff": ["-            \"16:29: Must have at least one statement.\",", "-            \"19:42: Must have at least one statement.\",", "-            \"22:29: Must have at least one statement.\",", "-            \"23:28: Must have at least one statement.\",", "+            \"16:29: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"19:42: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"22:29: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"23:28: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2993e897ce21c3bcc190d635a75947a0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocVariableCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testScopes2() throws Exception", "signatureAfterChange": "      @Test     public void testScopes2() throws Exception", "diff": ["-            \"5:5: Missing a Javadoc comment.\",", "-            \"6:5: Missing a Javadoc comment.\",", "-            \"16:9: Missing a Javadoc comment.\",", "-            \"17:9: Missing a Javadoc comment.\",", "+            \"5:5: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"6:5: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"16:9: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"17:9: \" + getCheckMessage(JAVADOC_MISSING),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a47ae15ef15dbba1803640b81185aef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/OverloadMethodsDeclarationOrderCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "     @Test     public void testDefault() throws Exception", "diff": ["-            \"28: Overload methods should not be split. Previous overloaded method located at line '17'.\",", "-            \"56: Overload methods should not be split. Previous overloaded method located at line '45'.\",", "-            \"68: Overload methods should not be split. Previous overloaded method located at line '66'.\",", "-            \"111: Overload methods should not be split. Previous overloaded method located at line '100'.\",", "+            \"28: \" + getCheckMessage(MSG_KEY, 17),", "+            \"56: \" + getCheckMessage(MSG_KEY, 45),", "+            \"68: \" + getCheckMessage(MSG_KEY, 66),", "+            \"111: \" + getCheckMessage(MSG_KEY, 100),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f376be963b6a72902a6ede0ed284da4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocVariableCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault()         throws Exception", "signatureAfterChange": "     @Test     public void testDefault()         throws Exception", "diff": ["-            \"11:5: Missing a Javadoc comment.\",", "-            \"304:5: Missing a Javadoc comment.\",", "-            \"311:5: Missing a Javadoc comment.\",", "-            \"330:5: Missing a Javadoc comment.\",", "+            \"11:5: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"304:5: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"311:5: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"330:5: \" + getCheckMessage(JAVADOC_MISSING),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f39412bd1d0b66c0e3df09be044da77", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testScopes2() throws Exception", "signatureAfterChange": "      @Test     public void testScopes2() throws Exception", "diff": ["-            \"10:5: Missing a Javadoc comment.\",", "-            \"11:5: Missing a Javadoc comment.\",", "-            \"21:9: Missing a Javadoc comment.\",", "-            \"22:9: Missing a Javadoc comment.\", };", "+            \"10:5: \" + getCheckMessage(MSG_JAVADOC_MISSING),", "+            \"11:5: \" + getCheckMessage(MSG_JAVADOC_MISSING),", "+            \"21:9: \" + getCheckMessage(MSG_JAVADOC_MISSING),", "+            \"22:9: \" + getCheckMessage(MSG_JAVADOC_MISSING), };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67ffc0807532b6944bc9bed69d70310e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testBadOverrideFromObjectJ5Compat() throws Exception", "signatureAfterChange": "     @Test     public void testBadOverrideFromObjectJ5Compat() throws Exception", "diff": ["-            \"8: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "-            \"30: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "-            \"41: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "-            \"50: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "+            \"8: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),", "+            \"30: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),", "+            \"41: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),", "+            \"50: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6876c88c8c44b31d62ce828403632271", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testStrictSettings()         throws Exception", "signatureAfterChange": "     @Test     public void testStrictSettings()         throws Exception", "diff": ["-            \"22:9: Avoid nested blocks.\",", "-            \"44:17: Avoid nested blocks.\",", "-            \"50:17: Avoid nested blocks.\",", "-            \"58:17: Avoid nested blocks.\",", "+            \"22:9: \" + getCheckMessage(MSG_KEY_BLOCK_NESTED),", "+            \"44:17: \" + getCheckMessage(MSG_KEY_BLOCK_NESTED),", "+            \"50:17: \" + getCheckMessage(MSG_KEY_BLOCK_NESTED),", "+            \"58:17: \" + getCheckMessage(MSG_KEY_BLOCK_NESTED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9100008b27c25ca44f067196e2504d64", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testStrict() throws Exception", "signatureAfterChange": "      @Test     public void testStrict() throws Exception", "diff": ["-            \"7: Missing a Javadoc comment.\",", "-            \"9: Missing a Javadoc comment.\",", "-            \"14: Missing a Javadoc comment.\",", "-            \"34: Missing a Javadoc comment.\",", "+            \"7: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"9: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"14: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"34: \" + getCheckMessage(JAVADOC_MISSING),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96298204e190d91fba4e98b939ae8c80", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Test     public void testBadAnnonOverride() throws Exception", "signatureAfterChange": "     @Test     public void testBadAnnonOverride() throws Exception", "diff": ["-            \"10: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "-            \"16: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "-            \"29: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "-            \"35: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "+            \"10: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),", "+            \"16: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),", "+            \"29: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),", "+            \"35: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab34b99f6862d90b1c32f27cd07af6e5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/CovariantEqualsCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault()         throws Exception", "signatureAfterChange": "     @Test     public void testDefault()         throws Exception", "diff": ["-            \"11:24: covariant equals without overriding equals(java.lang.Object).\",", "-            \"30:20: covariant equals without overriding equals(java.lang.Object).\",", "-            \"64:20: covariant equals without overriding equals(java.lang.Object).\",", "-            \"78:28: covariant equals without overriding equals(java.lang.Object).\",", "+            \"11:24: \" + getCheckMessage(MSG_KEY),", "+            \"30:20: \" + getCheckMessage(MSG_KEY),", "+            \"64:20: \" + getCheckMessage(MSG_KEY),", "+            \"78:28: \" + getCheckMessage(MSG_KEY),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0c51edb26f030535596bf36bccbbb0f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     @Test     public void testRelaxedJavadoc() throws Exception", "signatureAfterChange": "     @Test     public void testRelaxedJavadoc() throws Exception", "diff": ["-            \"59:5: Missing a Javadoc comment.\",", "-            \"64:5: Missing a Javadoc comment.\",", "-            \"79:5: Missing a Javadoc comment.\",", "-            \"84:5: Missing a Javadoc comment.\",", "+            \"59:5: \" + getCheckMessage(MSG_JAVADOC_MISSING),", "+            \"64:5: \" + getCheckMessage(MSG_JAVADOC_MISSING),", "+            \"79:5: \" + getCheckMessage(MSG_JAVADOC_MISSING),", "+            \"84:5: \" + getCheckMessage(MSG_JAVADOC_MISSING),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd96cf19309fe32b70d2262af2bf7e34", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testBadOverrideFromObject() throws Exception", "signatureAfterChange": "     @Test     public void testBadOverrideFromObject() throws Exception", "diff": ["-            \"8: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "-            \"30: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "-            \"41: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "-            \"50: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "+            \"8: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),", "+            \"30: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),", "+            \"41: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),", "+            \"50: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebe12fd74ed713f13c725340348ad690", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testProtest() throws Exception", "signatureAfterChange": "      @Test     public void testProtest() throws Exception", "diff": ["-            \"7: Missing a Javadoc comment.\",", "-            \"29: Missing a Javadoc comment.\",", "-            \"38: Missing a Javadoc comment.\",", "-            \"65: Missing a Javadoc comment.\",", "+            \"7: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"29: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"38: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"65: \" + getCheckMessage(JAVADOC_MISSING),"]}]}