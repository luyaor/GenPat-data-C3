{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "604a25517479b1e5b5272540cd11aaaa", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cc33ab65f377711fc57b08f69e96f1f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/AssignHandler.java", "commitBeforeChange": "2c02a737d97980eb4c984056c33265b8a917a717", "commitAfterChange": "c9a1ce7de0a2142413aff3eb122a4a9b2c389e11", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public IndentLevel suggestedChildLevel(ExpressionHandler aChild)", "signatureAfterChange": "     public IndentLevel suggestedChildLevel(ExpressionHandler aChild)", "diff": ["+        final DetailAST child = aChild.getMainAst();", "+", "+        if (child == assign.getFirstChild()) {", "+            // left side of assignment should have the same", "+            // indentation as \"assignment\"", "+            return getLevel();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "476490f8053284955c417965490f37e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "a4d63db21d57ab53aff8a467f89df3867518ab91", "commitAfterChange": "0eeb5e4fd6aa2c4b8a559e55384bba67d7d695c7", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected void checkRParen()", "signatureAfterChange": "     protected void checkRParen()", "diff": ["-        // the rcurly can either be at the correct indentation, or on", "-        // the same line as the lcurly", "-        // TODO: perhaps the handler should allow to place", "-        // rparen at indentation of lparen plus 1", "-        // if (test1", "-        //     || test2", "-        //     )", "-        if (rparen == null", "-            || expandedTabsColumnNo(rparen) == getLevel()", "+        // no paren - no check :)", "+        if (rparen == null) {", "+            return;", "+        }", "+", "+        // the rcurly can either be at the correct indentation,", "+        // or not first on the line ...", "+        final int rparenLevel = expandedTabsColumnNo(rparen);", "+        if (rparenLevel == getLevel()", "+", "+        // or has <lparen level> + 1 indentation", "+        final DetailAST lparen = getLParen();", "+        final int lparenLevel = expandedTabsColumnNo(lparen);", "+        if (rparenLevel == (lparenLevel + 1)) {", "+            return;", "+        }", "+"]}]}