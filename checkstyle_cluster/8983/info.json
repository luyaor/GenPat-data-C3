{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a1f7377ab3c4bec3e624d0566f4cbdb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "388578bd0a8b0fb429320c4bd9a1717e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/InputMagicNumber.java", "commitBeforeChange": "d5a6a78a590fa688a4405d80adb81e067e997b14", "commitAfterChange": "9df0df10bf2b1cd0613967ab85fbdcf02b94ef0e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void magicMethod()", "signatureAfterChange": "     public void magicMethod()", "diff": ["+        ", "+        //octal", "+        int octalVar0 = 00;", "+        int octalVar8 = 010;", "+        int octalVar9 = 011;", "+        ", "+        long longOctalVar8 = 010L;", "+        long longOctalVar9 = 011l;", "+        ", "+        //hex", "+        int hexVar0 = 0x0;", "+        int hexVar16 = 0x10;", "+        int hexVar17 = 0X011;", "+        long longHexVar0 = 0x0L;", "+        long longHexVar16 = 0x10L;", "+        long longHexVar17 = 0X11l;       "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa463a70ac1c39d2be752d6f56417b5c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "857b6c75f5d686e2bc69d2d90a6f46c5f54104bd", "commitAfterChange": "4299a4b408304cd0bcad6c25b4a322dbd94169a3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static void main(String... args) throws UnsupportedEncodingException,             CheckstyleException, FileNotFoundException", "signatureAfterChange": "     public static void main(String... args) throws UnsupportedEncodingException,             FileNotFoundException", "diff": ["-            CheckstyleException, FileNotFoundException {", "+            FileNotFoundException {", "+        // provide proper exit code based on results.", "+        final int exitWithCliViolation = -1;", "+        final int exitWithCheckstyleException = -2;", "+        int exitStatus = 0;", "+                exitStatus = 0;", "-                if (messages.isEmpty()) {", "-", "+                if (!cliViolations) {", "-", "+                    exitStatus = errorCounter;", "+                    exitStatus = exitWithCliViolation;", "+            exitStatus = exitWithCliViolation;", "+            exitStatus = exitWithCheckstyleException;", "-            // provide proper exit code based on results.", "-            System.exit(errorCounter);", "+            System.exit(exitStatus);"]}]}