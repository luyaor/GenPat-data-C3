{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e1067b35ad052fb643636939aa22da3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc1e914e1298a8bb7d13881991704121", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testMethodCtorNamedClassClosingBrace() throws Exception", "signatureAfterChange": "      @Test     public void testMethodCtorNamedClassClosingBrace() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"option\", RightCurlyOption.ALONE.toString());", "-        mCheckConfig.addAttribute(\"shouldStartLine\", \"false\");", "+        checkConfig.addAttribute(\"option\", RightCurlyOption.ALONE.toString());", "+        checkConfig.addAttribute(\"shouldStartLine\", \"false\");", "-        verify(mCheckConfig, getPath(\"InputLeftCurlyOther.java\"), expected);", "+        verify(checkConfig, getPath(\"InputLeftCurlyOther.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5e352916cb7a47201057b23f0eb5244", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testShouldStartLine() throws Exception", "signatureAfterChange": "      @Test     public void testShouldStartLine() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"option\", RightCurlyOption.ALONE.toString());", "-        mCheckConfig.addAttribute(\"shouldStartLine\", \"false\");", "+        checkConfig.addAttribute(\"option\", RightCurlyOption.ALONE.toString());", "+        checkConfig.addAttribute(\"shouldStartLine\", \"false\");", "-        verify(mCheckConfig, getPath(\"InputLeftCurlyOther.java\"), expected);", "+        verify(checkConfig, getPath(\"InputLeftCurlyOther.java\"), expected);"]}]}