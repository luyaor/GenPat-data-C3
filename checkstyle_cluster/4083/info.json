{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "550e09ef06fe980b6bd68a22944aac18", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b24e1d9ca318c4b0dd09915e422e221c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheckTest.java", "commitBeforeChange": "c5dfb268770999ece0efcab2f47f007dec339264", "commitAfterChange": "5f0f6d3929dc2c7f1570c03f24a652bffe61db6f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testIgnoreCommentsInlineStart()             throws Exception", "signatureAfterChange": "      public void testIgnoreCommentsInlineStart()             throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(GenericIllegalRegexpCheck.class);", "-        checkConfig.addAttribute(\"format\", illegal);", "-        checkConfig.addAttribute(\"ignoreComments\", \"true\");", "+        mCheckConfig.addAttribute(\"format\", illegal);", "+        mCheckConfig.addAttribute(\"ignoreComments\", \"true\");", "-        verify(checkConfig, getPath(\"InputTrailingComment.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputTrailingComment.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4f583aa4f488efc60dd63db3cff3011", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheckTest.java", "commitBeforeChange": "c5dfb268770999ece0efcab2f47f007dec339264", "commitAfterChange": "5f0f6d3929dc2c7f1570c03f24a652bffe61db6f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void testIgnoreCommentsInlineEnd()             throws Exception", "signatureAfterChange": "      public void testIgnoreCommentsInlineEnd()             throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(GenericIllegalRegexpCheck.class);", "-        checkConfig.addAttribute(\"format\", illegal);", "-        checkConfig.addAttribute(\"ignoreComments\", \"true\");", "+        mCheckConfig.addAttribute(\"format\", illegal);", "+        mCheckConfig.addAttribute(\"ignoreComments\", \"true\");", "-        verify(checkConfig, getPath(\"InputTrailingComment.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputTrailingComment.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd605e36fbcaf690c545cb8c7814094d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheckTest.java", "commitBeforeChange": "c5dfb268770999ece0efcab2f47f007dec339264", "commitAfterChange": "5f0f6d3929dc2c7f1570c03f24a652bffe61db6f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testIgnoreCommentsMultiLine()             throws Exception", "signatureAfterChange": "      public void testIgnoreCommentsMultiLine()             throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(GenericIllegalRegexpCheck.class);", "-        checkConfig.addAttribute(\"format\", illegal);", "-        checkConfig.addAttribute(\"ignoreComments\", \"true\");", "+        mCheckConfig.addAttribute(\"format\", illegal);", "+        mCheckConfig.addAttribute(\"ignoreComments\", \"true\");", "-        verify(checkConfig, getPath(\"InputTrailingComment.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputTrailingComment.java\"), expected);"]}]}