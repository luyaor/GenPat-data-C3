{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "97d2646e04591428f1471fc498a3714f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19ad1a4fc38f2d382088b54d50d96dc8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean isPreceedsEmptyForInit(DetailAST aAST)", "signatureAfterChange": "     private boolean isPreceedsEmptyForInit(DetailAST ast)", "diff": ["-    private boolean isPreceedsEmptyForInit(DetailAST aAST)", "+    private boolean isPreceedsEmptyForInit(DetailAST ast)", "-        final DetailAST parent = aAST.getParent();", "+        final DetailAST parent = ast.getParent();", "-                    && (aAST == forIterator.getPreviousSibling());", "+                    && (ast == forIterator.getPreviousSibling());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9687d91b7c3f9b75abfde0586ecf0b0f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/SimplifyBooleanReturnCheck.java", "commitBeforeChange": "26fcfecd439f1742e7c0fd120684473c944401a4", "commitAfterChange": "e6571e6f5703fdd89bc6cbeddcce767e58ddbf50", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean isBooleanLiteralReturnStatement(AST aAST)", "signatureAfterChange": "     private static boolean isBooleanLiteralReturnStatement(AST aAST)", "diff": ["-    private boolean isBooleanLiteralReturnStatement(AST aAST)", "+    private static boolean isBooleanLiteralReturnStatement(AST aAST)", "+        return isBooleanLiteralType(value.getType());", "+    }", "-        final int valueType = value.getType();", "-        return ((valueType == TokenTypes.LITERAL_TRUE)", "-                || (valueType == TokenTypes.LITERAL_FALSE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8f269fc929d02bad9dcb33a407eba0e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private boolean isFollowsEmptyForIterator(DetailAST aAST)", "signatureAfterChange": "     private boolean isFollowsEmptyForIterator(DetailAST ast)", "diff": ["-    private boolean isFollowsEmptyForIterator(DetailAST aAST)", "+    private boolean isFollowsEmptyForIterator(DetailAST ast)", "-        final DetailAST parent = aAST.getParent();", "+        final DetailAST parent = ast.getParent();", "-                && (aAST == forIterator.getNextSibling());", "+                && (ast == forIterator.getNextSibling());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5d8f194ec9d6dae248ce476b8b8eed0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/CheckUtils.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static boolean isElseIf(DetailAST aAST)", "signatureAfterChange": "     public static boolean isElseIf(DetailAST ast)", "diff": ["-    public static boolean isElseIf(DetailAST aAST)", "+    public static boolean isElseIf(DetailAST ast)", "-        final DetailAST parentAST = aAST.getParent();", "+        final DetailAST parentAST = ast.getParent();", "-        return (aAST.getType() == TokenTypes.LITERAL_IF)", "+        return (ast.getType() == TokenTypes.LITERAL_IF)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd09ad0825e9eac17a7154a9e165e971", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean isInWhileIdiom(DetailAST aAST)", "signatureAfterChange": "     private boolean isInWhileIdiom(DetailAST ast)", "diff": ["-    private boolean isInWhileIdiom(DetailAST aAST)", "+    private boolean isInWhileIdiom(DetailAST ast)", "-        if (!isComparison(aAST.getParent())) {", "+        if (!isComparison(ast.getParent())) {", "-                aAST.getParent(), ALLOWED_ASSIGMENT_IN_COMPARISON_CONTEXT);", "+                ast.getParent(), ALLOWED_ASSIGMENT_IN_COMPARISON_CONTEXT);"]}]}