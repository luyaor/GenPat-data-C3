{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "75cfd55c0d534765e4cd64cde45c6cb6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e986063edef556403c607a2dec23821", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpMultilineCheck.java", "commitBeforeChange": "78a5fd3494e8f3fe6e5edd0925f46b43583451fe", "commitAfterChange": "3cd6646941eca3da7d3b9a221c88e4c1d214876e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r     @Override\r     protected void processFiltered(File aFile, List<String> aLines)", "signatureAfterChange": "      @Override     protected void processFiltered(File aFile, List<String> aLines)", "diff": ["-\r", "-    @Override\r", "-    protected void processFiltered(File aFile, List<String> aLines)\r", "-    {\r", "-        mDetector.processLines(aLines);\r", "-    }\r", "+", "+    @Override", "+    protected void processFiltered(File aFile, List<String> aLines)", "+    {", "+        mDetector.processLines(FileText.fromLines(aFile, aLines));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed3bdb9145cdd43e333429b8223b632b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpMultilineCheck.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected void processFiltered(File aFile, List<String> aLines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-    protected void processFiltered(File aFile, List<String> aLines)", "+    protected void processFiltered(File file, List<String> lines)", "-        mDetector.processLines(FileText.fromLines(aFile, aLines));", "+        detector.processLines(FileText.fromLines(file, lines));"]}]}