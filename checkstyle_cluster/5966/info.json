{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31c451e0d99158a665054be2d2108ebe", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b902e6473dc74593a72a781b951654b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "bcaa9d81a71c396d3e2eb3070149b3e4851d478f", "commitAfterChange": "0fe31dfdf954242756eec703576cda4c8f561f1d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void notifyLeave(DetailAST ast, AstState astState)", "signatureAfterChange": "     private void notifyLeave(DetailAST ast, AstState astState)", "diff": ["-        Collection<Check> visitors;", "+        final Collection<Check> visitors = getListOfChecks(ast, astState);", "+", "+        if (visitors != null) {", "+            for (Check check : visitors) {", "+                check.leaveToken(ast);", "+            }", "+        }", "+    }", "-            if (!tokenToCommentChecks.containsKey(tokenType)) {", "-                return;", "-            visitors = tokenToCommentChecks.get(tokenType);", "-            if (!tokenToOrdinaryChecks.containsKey(tokenType)) {", "-                return;", "-            visitors = tokenToOrdinaryChecks.get(tokenType);", "-", "-        for (Check check : visitors) {", "-            check.leaveToken(ast);", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d048dd26d25b05b34e3a911b69e9b82", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "bcaa9d81a71c396d3e2eb3070149b3e4851d478f", "commitAfterChange": "0fe31dfdf954242756eec703576cda4c8f561f1d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void notifyVisit(DetailAST ast, AstState astState)", "signatureAfterChange": "     private void notifyVisit(DetailAST ast, AstState astState)", "diff": ["-        Collection<Check> visitors;", "-        final String tokenType = Utils.getTokenName(ast.getType());", "+        final Collection<Check> visitors = getListOfChecks(ast, astState);", "-        if (astState == AstState.WITH_COMMENTS) {", "-            if (!tokenToCommentChecks.containsKey(tokenType)) {", "-                return;", "+        if (visitors != null) {", "+            for (Check check : visitors) {", "+                check.visitToken(ast);", "-            visitors = tokenToCommentChecks.get(tokenType);", "-        }", "-        else {", "-            if (!tokenToOrdinaryChecks.containsKey(tokenType)) {", "-                return;", "-            }", "-            visitors = tokenToOrdinaryChecks.get(tokenType);", "-        }", "-", "-        for (Check check : visitors) {", "-            check.visitToken(ast);"]}]}