{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "26d247c8cad23cd9c05aa087f76509d4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ced7ff99aba801c2a93cbcbb5d99fcf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/OtherLeftCurlyCheck.java", "commitBeforeChange": "3f14872d33910413734232fb16b9debe479e1bd8", "commitAfterChange": "84eddc36730c1eca845257201c71a0d1fb2d40cf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public int[] getDefaultTokens()", "signatureAfterChange": "     public int[] getDefaultTokens()", "diff": ["-        return new int[] {JavaTokenTypes.LITERAL_while,", "-                          JavaTokenTypes.LITERAL_try,", "-                          JavaTokenTypes.LITERAL_catch,", "-                          JavaTokenTypes.LITERAL_finally,", "-                          JavaTokenTypes.LITERAL_synchronized,", "-                          JavaTokenTypes.LITERAL_switch,", "-                          JavaTokenTypes.LITERAL_do,", "-                          JavaTokenTypes.LITERAL_if,", "-                          JavaTokenTypes.LITERAL_else,", "-                          JavaTokenTypes.LITERAL_for,", "+        return new int[] {TokenTypes.LITERAL_WHILE,", "+                          TokenTypes.LITERAL_TRY,", "+                          TokenTypes.LITERAL_CATCH,", "+                          TokenTypes.LITERAL_FINALLY,", "+                          TokenTypes.LITERAL_SYNCHRONIZED,", "+                          TokenTypes.LITERAL_SWITCH,", "+                          TokenTypes.LITERAL_DO,", "+                          TokenTypes.LITERAL_IF,", "+                          TokenTypes.LITERAL_ELSE,", "+                          TokenTypes.LITERAL_FOR,", "-                          //JavaTokenTypes.STATIC_INIT,", "+                          //TokenTypes.STATIC_INIT,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8be736e67392a49939bf6b1e59d0dcf0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/OtherLeftCurlyCheck.java", "commitBeforeChange": "3f14872d33910413734232fb16b9debe479e1bd8", "commitAfterChange": "84eddc36730c1eca845257201c71a0d1fb2d40cf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            case JavaTokenTypes.LITERAL_while:", "-            case JavaTokenTypes.LITERAL_catch:", "-            case JavaTokenTypes.LITERAL_synchronized:", "-            case JavaTokenTypes.LITERAL_for:", "+            case TokenTypes.LITERAL_WHILE:", "+            case TokenTypes.LITERAL_CATCH:", "+            case TokenTypes.LITERAL_SYNCHRONIZED:", "+            case TokenTypes.LITERAL_FOR:", "-            case JavaTokenTypes.LITERAL_try:", "-            case JavaTokenTypes.LITERAL_finally:", "-            case JavaTokenTypes.LITERAL_do:", "+            case TokenTypes.LITERAL_TRY:", "+            case TokenTypes.LITERAL_FINALLY:", "+            case TokenTypes.LITERAL_DO:", "-            case JavaTokenTypes.LITERAL_else:", "+            case TokenTypes.LITERAL_ELSE:", "-                if (candidate.getType() == JavaTokenTypes.SLIST) {", "+                if (candidate.getType() == TokenTypes.SLIST) {", "-            case JavaTokenTypes.LITERAL_switch:", "-            case JavaTokenTypes.LITERAL_if:", "+            case TokenTypes.LITERAL_SWITCH:", "+            case TokenTypes.LITERAL_IF:"]}]}