{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "44565afa328336627f70873da43dfea3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07fc9956502a4a8d38161a69a5e8c0d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingSwitchDefaultCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testMissingSwitchDefault() throws Exception", "signatureAfterChange": "      @Test     public void testMissingSwitchDefault() throws Exception", "diff": ["-            \"17:9: switch without \\\"default\\\" clause.\",", "+            \"17:9: \" + getCheckMessage(MSG_KEY, \"default\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "087d9e636647a9ae82e3a7784b8a283e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "       @Test     public void testMissingTag() throws Exception", "signatureAfterChange": "       @Test     public void testMissingTag() throws Exception", "diff": ["-            \"16: Type Javadoc comment is missing an @missingtag tag.\",", "+            \"16: \" + getCheckMessage(MISSING_TAG, \"@missingtag\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "148753049c53ac38fc938d7875cd8555", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/SeparatorWrapCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDot()         throws Exception", "signatureAfterChange": "      @Test     public void testDot()         throws Exception", "diff": ["-            \"31:10: '.' should be on a new line.\",", "+            \"31:10: \" + getCheckMessage(LINE_NEW, \".\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "181e7af621f12c565909005852b7d2b8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testHeader() throws Exception", "signatureAfterChange": "      @Test     public void testHeader() throws Exception", "diff": ["-            \"19: 'package' should be separated from previous statement.\",", "+            \"19: \" + getCheckMessage(MSG_SHOULD_BE_SEPARATED, \"package\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23cc4be62abb9b69b4b5165e132eeda6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Test     public void testBadTag() throws Exception", "signatureAfterChange": "      @Test     public void testBadTag() throws Exception", "diff": ["-            \"5:4: Unknown tag 'mytag'.\",", "+            \"5:4: \" + getCheckMessage(UNKNOWN_TAG, \"mytag\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25f4ce6a94dfb097b00e38215ba5e0f7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testDoWhileWhitespaceAround() throws Exception", "signatureAfterChange": "      @Test     public void testDoWhileWhitespaceAround() throws Exception", "diff": ["-            \"9:16: 'while' is not followed by whitespace.\",", "+            \"9:16: \" + getCheckMessage(WS_NOT_FOLLOWED, \"while\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27fd76d7769f65a854a2a0527c47b152", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "commitAfterChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGroupsRegexp() throws Exception", "signatureAfterChange": "      @Test     public void testGroupsRegexp() throws Exception", "diff": ["-            \"11: Wrong order for 'java.io.File' import.\",", "+            \"11: \" + getCheckMessage(MSG_ORDERING, \"java.io.File\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a20907a84aef9a621e909c5b801b03a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "commitAfterChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testWildcard() throws Exception", "signatureAfterChange": "      @Test     public void testWildcard() throws Exception", "diff": ["-            \"9: Wrong order for 'javax.crypto.Cipher' import.\",", "+            \"9: \" + getCheckMessage(MSG_ORDERING, \"javax.crypto.Cipher\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e65ae433978d07450127042f8a3590b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheckTest.java", "commitBeforeChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "commitAfterChange": "5d698f4a58b66958b13cb04735fefa3f4fa4b9e7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testRegexpHeader() throws Exception", "signatureAfterChange": "      @Test     public void testRegexpHeader() throws Exception", "diff": ["-            \"3: Line does not match expected header line of '// Created: 2002'.\",", "+            \"3: \" + getCheckMessage(MSG_MISMATCH, \"// Created: 2002\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31450c2e559b958a73357ddbd94cd80f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForInitializerPadCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-            \"48:14: ';' is preceded with whitespace.\",", "+            \"48:14: \" + getCheckMessage(MSG_PRECEDED, \";\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35638c77e84dd3edaa6d70ec845df3af", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testStarImports() throws Exception", "signatureAfterChange": "      @Test     public void testStarImports() throws Exception", "diff": ["-            \"10:5: Declaring variables, return values or parameters of type 'List' is not allowed.\",", "+            \"10:5: \" + getCheckMessage(MSG_KEY, \"List\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "371282ac46828e3e96b3fb808bcaa23f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testShouldStartLine() throws Exception", "signatureAfterChange": "      @Test     public void testShouldStartLine() throws Exception", "diff": ["-            \"93:27: '}' should be alone on a line.\",", "+            \"93:27: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37a326c83a71c30ce52010beb8e6ab12", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testAssignEOL()         throws Exception", "signatureAfterChange": "      @Test     public void testAssignEOL()         throws Exception", "diff": ["-            \"33:13: '=' should be on the previous line.\",", "+            \"33:13: \" + getCheckMessage(LINE_PREVIOUS, \"=\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44fa942a1987bb7027b8889ecfc5b869", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheckTest.java", "commitBeforeChange": "27149f3504a2f350b74f456a9bffbae76a460060", "commitAfterChange": "5ede09997c283b4c418f0f540848e006be04fa87", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testBaseNameSeparator() throws Exception", "signatureAfterChange": "      @Test     public void testBaseNameSeparator() throws Exception", "diff": ["-            \"0: Key 'only.english' missing.\",", "+            \"0: \" + getCheckMessage(MSG_KEY, \"only.english\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54a9553038259c696f53570a265c35d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testAuthorRequired() throws Exception", "signatureAfterChange": "      @Test     public void testAuthorRequired() throws Exception", "diff": ["-            \"13: Type Javadoc comment is missing an @author tag.\",", "+            \"13: \" + getCheckMessage(MISSING_TAG, \"@author\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cae2ded78fc68719d79080844cd8774", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForInitializerPadCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testSpaceOption() throws Exception", "signatureAfterChange": "      @Test     public void testSpaceOption() throws Exception", "diff": ["-            \"51:13: ';' is not preceded with whitespace.\",", "+            \"51:13: \" + getCheckMessage(MSG_NOT_PRECEDED, \";\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63e243f515a2da82edd76994bc1a1f7c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testMethodCtorNamedClassClosingBrace() throws Exception", "signatureAfterChange": "      @Test     public void testMethodCtorNamedClassClosingBrace() throws Exception", "diff": ["-            \"93:27: '}' should be alone on a line.\",", "+            \"93:27: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "658851660fdeb3c57a90c97121d082dc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/SeparatorWrapCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testComma() throws Exception", "signatureAfterChange": "      @Test     public void testComma() throws Exception", "diff": ["-            \"39:17: ',' should be on the previous line.\",", "+            \"39:17: \" + getCheckMessage(LINE_PREVIOUS, \",\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68da7146bf9ce61af5d160492b6a2524", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheckTest.java", "commitBeforeChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "commitAfterChange": "5d698f4a58b66958b13cb04735fefa3f4fa4b9e7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testRegexpHeaderURL() throws Exception", "signatureAfterChange": "      @Test     public void testRegexpHeaderURL() throws Exception", "diff": ["-            \"3: Line does not match expected header line of '// Created: 2002'.\",", "+            \"3: \" + getCheckMessage(MSG_MISMATCH, \"// Created: 2002\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c7b8eaa4da410d836304634ebb6a6a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java", "commitBeforeChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "commitAfterChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testPossibleIndexOutOfBoundsException() throws Exception", "signatureAfterChange": "      @Test     public void testPossibleIndexOutOfBoundsException() throws Exception", "diff": ["-            \"5: Import statement is in the wrong order. Should be in the 'THIRD_PARTY_PACKAGE' group.\",", "+            \"5: \" + getCheckMessage(MSG_ORDER, \"THIRD_PARTY_PACKAGE\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96bc8322bf1b09851a18a9c422571839", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testCast() throws Exception", "signatureAfterChange": "      @Test     public void testCast() throws Exception", "diff": ["-            \"88:21: 'cast' is not followed by whitespace.\",", "+            \"88:21: \" + getCheckMessage(WS_NOT_FOLLOWED, \"cast\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "980998368dadc7c392044ceeb973d935", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckRegExTest.java", "commitBeforeChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "commitAfterChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testOne() throws Exception", "signatureAfterChange": "     @Test     public void testOne() throws Exception", "diff": ["-        final String[] expected = {\"5:1: Disallowed import - java.io.File.\"};", "+        final String[] expected = {\"5:1: \" + getCheckMessage(MSG_DISALLOWED, \"java.io.File\")};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abe239f1495410f9e5d7365a560856df", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForIteratorPadCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testSpaceOption() throws Exception", "signatureAfterChange": "      @Test     public void testSpaceOption() throws Exception", "diff": ["-            \"23:31: ';' is not followed by whitespace.\",", "+            \"23:31: \" + getCheckMessage(WS_NOT_FOLLOWED, \";\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6c63f918be5d2a0af26d0442830b484", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheckTest.java", "commitBeforeChange": "5d698f4a58b66958b13cb04735fefa3f4fa4b9e7", "commitAfterChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testFormat() throws Exception", "signatureAfterChange": "      @Test     public void testFormat() throws Exception", "diff": ["-            \"34:13: The field 'errorCode' must be declared final.\",", "+            \"34:13: \" + getCheckMessage(MSG_KEY, \"errorCode\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba88eeb5114ad6a9e9a2b24e61e8e4b4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java", "commitBeforeChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "commitAfterChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testOne() throws Exception", "signatureAfterChange": "     @Test     public void testOne() throws Exception", "diff": ["-        final String[] expected = {\"5:1: Disallowed import - java.io.File.\"};", "+        final String[] expected = {\"5:1: \" + getCheckMessage(MSG_DISALLOWED, \"java.io.File\")};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c10804af2f75941b79d708d11a74e581", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testSwitchWhitespaceAround() throws Exception", "signatureAfterChange": "      @Test     public void testSwitchWhitespaceAround() throws Exception", "diff": ["-            \"6:15: 'switch' is not followed by whitespace.\",", "+            \"6:15: \" + getCheckMessage(WS_NOT_FOLLOWED, \"switch\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0510211d0d743ceae73f42f3bd41ca2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java", "commitBeforeChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "commitAfterChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testFalsePositive() throws Exception", "signatureAfterChange": "      @Test     public void testFalsePositive() throws Exception", "diff": ["-            \"9:5: Class 'AbstractClass' must be declared as 'abstract'.\",", "+            \"9:5: \" + getCheckMessage(NO_ABSTRACT_CLASS_MODIFIER, \"AbstractClass\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df4b3e8dfe49575487d80631af22e9fd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierTest.java", "commitBeforeChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "commitAfterChange": "0b98c0389e2cf745cb125a89dece57538fc672b7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testFinalInInterface()         throws Exception", "signatureAfterChange": "      @Test     public void testFinalInInterface()         throws Exception", "diff": ["-            \"3:9: Redundant 'final' modifier.\",", "+            \"3:9: \" + getCheckMessage(MSG_KEY, \"final\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfea147e7ca68e784db08b2b6a838a3c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java", "commitBeforeChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "commitAfterChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testThirdPartyAndSpecialImports() throws Exception", "signatureAfterChange": "      @Test     public void testThirdPartyAndSpecialImports() throws Exception", "diff": ["-            \"11: Import statement is in the wrong order. Should be in the 'THIRD_PARTY_PACKAGE' group.\",", "+            \"11: \" + getCheckMessage(MSG_ORDER, \"THIRD_PARTY_PACKAGE\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2b8bb63ea62e176b6720e82937a0aa0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testNative() throws Exception", "signatureAfterChange": "      @Test     public void testNative() throws Exception", "diff": ["-            \"20:12: Using 'native' is not allowed.\",", "+            \"20:12: \" + getCheckMessage(MSG_KEY, \"native\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eba0ac1be2ab340145430ebd57c2ee9b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheckTest.java", "commitBeforeChange": "27149f3504a2f350b74f456a9bffbae76a460060", "commitAfterChange": "5ede09997c283b4c418f0f540848e006be04fa87", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testTranslation() throws Exception", "signatureAfterChange": "      @Test     public void testTranslation() throws Exception", "diff": ["-            \"0: Key 'only.english' missing.\",", "+            \"0: \" + getCheckMessage(MSG_KEY, \"only.english\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec3d18ee3f9ca93c2e933eb235014285", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "commitAfterChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testHonorsTokenProperty() throws Exception", "signatureAfterChange": "      @Test     public void testHonorsTokenProperty() throws Exception", "diff": ["-            \"6: Wrong order for 'java.awt.Button' import.\",", "+            \"6: \" + getCheckMessage(MSG_ORDERING, \"java.awt.Button\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1714525b634e3d1c29e0707a17c07e5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testVersionRequired()         throws Exception", "signatureAfterChange": "      @Test     public void testVersionRequired()         throws Exception", "diff": ["-            \"13: Type Javadoc comment is missing an @version tag.\",", "+            \"13: \" + getCheckMessage(MISSING_TAG, \"@version\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa2abb0463f70f7d01cb8e735f2ba0d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenTextCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testCaseSensitive()         throws Exception", "signatureAfterChange": "     @Test     public void testCaseSensitive()         throws Exception", "diff": ["-            \"24:28: Token text matches the illegal pattern 'a href'.\",", "+            \"24:28: \" + getCheckMessage(MSG_KEY, \"a href\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd19ace0e8522c11482fb9b5a065edd9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testIgnoreEnhancedForColon() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreEnhancedForColon() throws Exception", "diff": ["-            \"19:20: ':' is not preceded with whitespace.\",", "+            \"19:20: \" + getCheckMessage(WS_NOT_PRECEDED, \":\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd1df3d72c136fd95e168ffe5ca9d3e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheckTest.java", "commitBeforeChange": "5d698f4a58b66958b13cb04735fefa3f4fa4b9e7", "commitAfterChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testFileWithSecondEnumTopLevelClass() throws Exception", "signatureAfterChange": "      @Test     public void testFileWithSecondEnumTopLevelClass() throws Exception", "diff": ["-            \"83: Top-level class InputDeclarationOrderEnum has to reside in its own source file.\",", "+            \"83: \" + getCheckMessage(MSG_KEY, \"InputDeclarationOrderEnum\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fffa789cf1df24b5be7aee71e1ba0ff0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheckTest.java", "commitBeforeChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "commitAfterChange": "5d698f4a58b66958b13cb04735fefa3f4fa4b9e7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testInlineRegexpHeader() throws Exception", "signatureAfterChange": "      @Test     public void testInlineRegexpHeader() throws Exception", "diff": ["-            \"3: Line does not match expected header line of '// Created: 2002'.\",", "+            \"3: \" + getCheckMessage(MSG_MISMATCH, \"// Created: 2002\"),"]}]}