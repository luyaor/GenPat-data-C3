{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6424d17b84069eb8a10747334cd2286f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04c4795e7224b859ad202a6d481081dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractIllegalCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final void setIllegalClassNames(final String[] aClassNames)", "signatureAfterChange": "     public final void setIllegalClassNames(final String[] classNames)", "diff": ["-    public final void setIllegalClassNames(final String[] aClassNames)", "+    public final void setIllegalClassNames(final String[] classNames)", "-        assert aClassNames != null;", "-        mIllegalClassNames.clear();", "-        for (final String name : aClassNames) {", "-            mIllegalClassNames.add(name);", "+        assert classNames != null;", "+        illegalClassNames.clear();", "+        for (final String name : classNames) {", "+            illegalClassNames.add(name);", "-                mIllegalClassNames.add(shortName);", "+                illegalClassNames.add(shortName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7151c9cdad4ce73c19dc3c50f35cf6c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void extendIllegalClassNamesWithShortName(String aCanonicalName)", "signatureAfterChange": "     private void extendIllegalClassNamesWithShortName(String canonicalName)", "diff": ["-    private void extendIllegalClassNamesWithShortName(String aCanonicalName)", "+    private void extendIllegalClassNamesWithShortName(String canonicalName)", "-        if (mIllegalClassNames.contains(aCanonicalName)) {", "-            final String shortName = aCanonicalName.", "-                substring(aCanonicalName.lastIndexOf(\".\") + 1);", "-            mIllegalClassNames.add(shortName);", "+        if (illegalClassNames.contains(canonicalName)) {", "+            final String shortName = canonicalName.", "+                substring(canonicalName.lastIndexOf(\".\") + 1);", "+            illegalClassNames.add(shortName);"]}]}