{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c92be62a9dcd868c48d779ad8ea9d13b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "280b036d0276337694f81cdb65967b91", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "3d0256c50f6b1626af530c9e56920a72c5508bfe", "commitAfterChange": "3f6653f424d19ea54cc3fe64a42c2c4f76a27b06", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "      public void testSemantic()         throws Exception", "signatureAfterChange": "      public void testSemantic()         throws Exception", "diff": ["+        mConfig.setCatchBlock(CatchBlockOption.STMT);", "-            filepath + \":26:21: Avoid instantiation of java.lang.Boolean\",", "-            filepath + \":34:9: Empty catch block.\",", "-            filepath + \":36:9: Empty catch block.\",", "+            filepath + \":26:16: Avoid instantiation of java.lang.Boolean\",", "+            filepath + \":34:65: Must have at least one statement.\",", "+            filepath + \":36:41: Must have at least one statement.\",", "+            filepath + \":53:38: Must have at least one statement.\",", "+            filepath + \":54:52: Must have at least one statement.\",", "+            filepath + \":55:45: Must have at least one statement.\",", "+        };", "+        verify(c, filepath, expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f96c2e143732d3352a1dbb3897d2b9d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "3d0256c50f6b1626af530c9e56920a72c5508bfe", "commitAfterChange": "3f6653f424d19ea54cc3fe64a42c2c4f76a27b06", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 36, "signatureBeforeChange": "      public void testSemantic()         throws Exception", "signatureAfterChange": "      public void testSemantic2()         throws Exception", "diff": ["-            filepath + \":26:21: Avoid instantiation of java.lang.Boolean\",", "-            filepath + \":34:9: Empty catch block.\",", "-            filepath + \":36:9: Empty catch block.\",", "+", "+    public void testSemantic2()", "+        throws Exception", "+    {", "+        mConfig.setJavadocScope(Scope.NOTHING);", "+        mConfig.setCatchBlock(CatchBlockOption.TEXT);", "+        final Checker c = createChecker();", "+        final String filepath = getPath(\"InputSemantic.java\");", "+        assertNotNull(c);", "+        final String[] expected = {", "+            filepath + \":15:21: Avoid instantiation of java.lang.Boolean\",", "+            filepath + \":20:21: Avoid instantiation of java.lang.Boolean\",", "+            filepath + \":26:16: Avoid instantiation of java.lang.Boolean\",", "+            filepath + \":34:65: Empty catch block.\",", "+            filepath + \":54:52: Empty catch block.\",", "+            filepath + \":55:45: Empty catch block.\","]}]}