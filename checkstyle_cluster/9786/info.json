{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cfd5f6f601e4bbf3d2619b887e2c9473", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1ce71cf4e5771a1c8372206d5123b33", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/ParseTreeBuilder.java", "commitBeforeChange": "65865d1adcf6e1579b7323d56117186db1ad96eb", "commitAfterChange": "b4c351b03d4a9d7dffc9a3502d17a41fb3e440b4", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public static ParseTree treeParamWithGeneric()", "signatureAfterChange": "      public static ParseTree treeParamWithGeneric()", "diff": ["-    }", "-    public static ParseTree treeParamWithGeneric() {", "-        JavadocContext QPFRD = new JavadocContext(null, 0);", "-        JavadocTagContext aGEJG = new JavadocTagContext(QPFRD, 0);", "-        CommonToken KeLjt = new CommonToken(JavadocTokenTypes.PARAM_LITERAL, \"@param\");", "-        aGEJG.addChild(KeLjt);", "-        CommonToken rOSWG = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        aGEJG.addChild(rOSWG);", "-        CommonToken lsjiD = new CommonToken(JavadocTokenTypes.PARAMETER_NAME, \"<E>\");", "-        aGEJG.addChild(lsjiD);", "-        CommonToken NffOe = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        aGEJG.addChild(NffOe);", "-        DescriptionContext xpcWl = new DescriptionContext(aGEJG, 0);", "-        TextContext YlCSA = new TextContext(xpcWl, 0);", "-        CommonToken DrEbu = new CommonToken(JavadocTokenTypes.CHAR, \"m\");", "-        YlCSA.addChild(DrEbu);", "-        CommonToken KZAJu = new CommonToken(JavadocTokenTypes.CHAR, \"y\");", "-        YlCSA.addChild(KZAJu);", "-        CommonToken dwXkJ = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        YlCSA.addChild(dwXkJ);", "-        CommonToken bckfp = new CommonToken(JavadocTokenTypes.CHAR, \"f\");", "-        YlCSA.addChild(bckfp);", "-        CommonToken kiXWZ = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "-        YlCSA.addChild(kiXWZ);", "-        CommonToken PfsCl = new CommonToken(JavadocTokenTypes.CHAR, \"v\");", "-        YlCSA.addChild(PfsCl);", "-        CommonToken svxAz = new CommonToken(JavadocTokenTypes.CHAR, \"o\");", "-        YlCSA.addChild(svxAz);", "-        CommonToken kusoJ = new CommonToken(JavadocTokenTypes.CHAR, \"r\");", "-        YlCSA.addChild(kusoJ);", "-        CommonToken XhYWE = new CommonToken(JavadocTokenTypes.CHAR, \"i\");", "-        YlCSA.addChild(XhYWE);", "-        CommonToken KLVPT = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "-        YlCSA.addChild(KLVPT);", "-        CommonToken yDyzh = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        YlCSA.addChild(yDyzh);", "-        CommonToken Jcrop = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        YlCSA.addChild(Jcrop);", "-        CommonToken NwSnD = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "-        YlCSA.addChild(NwSnD);", "-        CommonToken WocUM = new CommonToken(JavadocTokenTypes.CHAR, \"y\");", "-        YlCSA.addChild(WocUM);", "-        CommonToken pIlOU = new CommonToken(JavadocTokenTypes.CHAR, \"p\");", "-        YlCSA.addChild(pIlOU);", "-        CommonToken DzOSR = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        YlCSA.addChild(DzOSR);", "-        xpcWl.addChild(YlCSA);", "-        aGEJG.addChild(xpcWl);", "-        QPFRD.addChild(aGEJG);", "-        CommonToken TBVcX = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "-        QPFRD.addChild(TBVcX);", "-        return QPFRD;", "-    }", "+", "+    public static ParseTree treeParamWithGeneric()", "+    {", "+        JavadocContext javadocContext0 = new JavadocContext(null, 0);", "+        JavadocTagContext javadocTagContext0 = new JavadocTagContext(javadocContext0, 0);", "+        CommonToken paramLiteral0 = new CommonToken(JavadocTokenTypes.PARAM_LITERAL, \"@param\");", "+        javadocTagContext0.addChild(paramLiteral0);", "+        CommonToken ws0 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocTagContext0.addChild(ws0);", "+        CommonToken parameterName0 = new CommonToken(JavadocTokenTypes.PARAMETER_NAME, \"<E>\");", "+        javadocTagContext0.addChild(parameterName0);", "+        CommonToken ws1 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocTagContext0.addChild(ws1);", "+        DescriptionContext descriptionContext0 = new DescriptionContext(javadocTagContext0, 0);", "+        TextContext textContext0 = new TextContext(descriptionContext0, 0);", "+        CommonToken char0 = new CommonToken(JavadocTokenTypes.CHAR, \"m\");", "+        textContext0.addChild(char0);", "+        CommonToken char1 = new CommonToken(JavadocTokenTypes.CHAR, \"y\");", "+        textContext0.addChild(char1);", "+        CommonToken ws2 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        textContext0.addChild(ws2);", "+        CommonToken char2 = new CommonToken(JavadocTokenTypes.CHAR, \"f\");", "+        textContext0.addChild(char2);", "+        CommonToken char3 = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "+        textContext0.addChild(char3);", "+        CommonToken char4 = new CommonToken(JavadocTokenTypes.CHAR, \"v\");", "+        textContext0.addChild(char4);", "+        CommonToken char5 = new CommonToken(JavadocTokenTypes.CHAR, \"o\");", "+        textContext0.addChild(char5);", "+        CommonToken char6 = new CommonToken(JavadocTokenTypes.CHAR, \"r\");", "+        textContext0.addChild(char6);", "+        CommonToken char7 = new CommonToken(JavadocTokenTypes.CHAR, \"i\");", "+        textContext0.addChild(char7);", "+        CommonToken char8 = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "+        textContext0.addChild(char8);", "+        CommonToken char9 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext0.addChild(char9);", "+        CommonToken ws3 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        textContext0.addChild(ws3);", "+        CommonToken char10 = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "+        textContext0.addChild(char10);", "+        CommonToken char11 = new CommonToken(JavadocTokenTypes.CHAR, \"y\");", "+        textContext0.addChild(char11);", "+        CommonToken char12 = new CommonToken(JavadocTokenTypes.CHAR, \"p\");", "+        textContext0.addChild(char12);", "+        CommonToken char13 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext0.addChild(char13);", "+        descriptionContext0.addChild(textContext0);", "+        javadocTagContext0.addChild(descriptionContext0);", "+        javadocContext0.addChild(javadocTagContext0);", "+        CommonToken eof0 = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "+        javadocContext0.addChild(eof0);", "+        return javadocContext0;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc95e28d68c1660a4124aa047b70e9a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/ParseTreeBuilder.java", "commitBeforeChange": "65865d1adcf6e1579b7323d56117186db1ad96eb", "commitAfterChange": "b4c351b03d4a9d7dffc9a3502d17a41fb3e440b4", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public static ParseTree treeDollarInLink()", "signatureAfterChange": "      public static ParseTree treeDollarInLink()", "diff": ["-    public static ParseTree treeDollarInLink() {", "-        JavadocContext yCrNh = new JavadocContext(null, 0);", "-        JavadocInlineTagContext yZEPk = new JavadocInlineTagContext(yCrNh, 0);", "-        CommonToken QaRFV = new CommonToken(JavadocTokenTypes.JAVADOC_INLINE_TAG_START, \"{\");", "-        yZEPk.addChild(QaRFV);", "-        CommonToken LnzvV = new CommonToken(JavadocTokenTypes.LINK_LITERAL, \"@link\");", "-        yZEPk.addChild(LnzvV);", "-        CommonToken WcdhT = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        yZEPk.addChild(WcdhT);", "-        ReferenceContext yPHKq = new ReferenceContext(yZEPk, 0);", "-        CommonToken tfKuW = new CommonToken(JavadocTokenTypes.CLASS, \"My$Class\");", "-        yPHKq.addChild(tfKuW);", "-        CommonToken asCBP = new CommonToken(JavadocTokenTypes.HASH, \"#\");", "-        yPHKq.addChild(asCBP);", "-        CommonToken VfpBA = new CommonToken(JavadocTokenTypes.MEMBER, \"$$simple_$Method\");", "-        yPHKq.addChild(VfpBA);", "-        ParametersContext zUjHC = new ParametersContext(yPHKq, 0);", "-        CommonToken evbHg = new CommonToken(JavadocTokenTypes.LEFT_BRACE, \"(\");", "-        zUjHC.addChild(evbHg);", "-        CommonToken mpzxn = new CommonToken(JavadocTokenTypes.ARGUMENT, \"_A78\");", "-        zUjHC.addChild(mpzxn);", "-        CommonToken kOOdW = new CommonToken(JavadocTokenTypes.COMMA, \",\");", "-        zUjHC.addChild(kOOdW);", "-        CommonToken LvnuO = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        zUjHC.addChild(LvnuO);", "-        CommonToken IScAu = new CommonToken(JavadocTokenTypes.ARGUMENT, \"$8$\");", "-        zUjHC.addChild(IScAu);", "-        CommonToken aULsN = new CommonToken(JavadocTokenTypes.RIGHT_BRACE, \")\");", "-        zUjHC.addChild(aULsN);", "-        yPHKq.addChild(zUjHC);", "-        yZEPk.addChild(yPHKq);", "-        CommonToken DCMuM = new CommonToken(JavadocTokenTypes.JAVADOC_INLINE_TAG_END, \"}\");", "-        yZEPk.addChild(DCMuM);", "-        yCrNh.addChild(yZEPk);", "-        CommonToken AcQbE = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "-        yCrNh.addChild(AcQbE);", "-        return yCrNh;", "+", "+    public static ParseTree treeDollarInLink()", "+    {", "+        JavadocContext javadocContext0 = new JavadocContext(null, 0);", "+        JavadocInlineTagContext javadocInlineTagContext0 = new JavadocInlineTagContext(javadocContext0, 0);", "+        CommonToken javadocInlineTagStart0 = new CommonToken(JavadocTokenTypes.JAVADOC_INLINE_TAG_START, \"{\");", "+        javadocInlineTagContext0.addChild(javadocInlineTagStart0);", "+        CommonToken linkLiteral0 = new CommonToken(JavadocTokenTypes.LINK_LITERAL, \"@link\");", "+        javadocInlineTagContext0.addChild(linkLiteral0);", "+        CommonToken ws0 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocInlineTagContext0.addChild(ws0);", "+        ReferenceContext referenceContext0 = new ReferenceContext(javadocInlineTagContext0, 0);", "+        CommonToken class0 = new CommonToken(JavadocTokenTypes.CLASS, \"My$Class\");", "+        referenceContext0.addChild(class0);", "+        CommonToken hash0 = new CommonToken(JavadocTokenTypes.HASH, \"#\");", "+        referenceContext0.addChild(hash0);", "+        CommonToken member0 = new CommonToken(JavadocTokenTypes.MEMBER, \"$$simple_$Method\");", "+        referenceContext0.addChild(member0);", "+        ParametersContext parametersContext0 = new ParametersContext(referenceContext0, 0);", "+        CommonToken leftBrace0 = new CommonToken(JavadocTokenTypes.LEFT_BRACE, \"(\");", "+        parametersContext0.addChild(leftBrace0);", "+        CommonToken argument0 = new CommonToken(JavadocTokenTypes.ARGUMENT, \"_A78\");", "+        parametersContext0.addChild(argument0);", "+        CommonToken comma0 = new CommonToken(JavadocTokenTypes.COMMA, \",\");", "+        parametersContext0.addChild(comma0);", "+        CommonToken ws1 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        parametersContext0.addChild(ws1);", "+        CommonToken argument1 = new CommonToken(JavadocTokenTypes.ARGUMENT, \"$8$\");", "+        parametersContext0.addChild(argument1);", "+        CommonToken rightBrace0 = new CommonToken(JavadocTokenTypes.RIGHT_BRACE, \")\");", "+        parametersContext0.addChild(rightBrace0);", "+        referenceContext0.addChild(parametersContext0);", "+        javadocInlineTagContext0.addChild(referenceContext0);", "+        CommonToken javadocInlineTagEnd0 = new CommonToken(JavadocTokenTypes.JAVADOC_INLINE_TAG_END, \"}\");", "+        javadocInlineTagContext0.addChild(javadocInlineTagEnd0);", "+        javadocContext0.addChild(javadocInlineTagContext0);", "+        CommonToken eof0 = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "+        javadocContext0.addChild(eof0);", "+        return javadocContext0;", "+    }"]}]}