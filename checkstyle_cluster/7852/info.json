{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a2e40afe53a28bf7462bfad774413146", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b01b70fdb5922d586ec950de2d69d9f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIt() throws Exception", "signatureAfterChange": "     @Test     public void testIt() throws Exception", "diff": ["-            \"29: 'do' construct must use '{}'s.\" ,", "-            \"41: 'while' construct must use '{}'s.\" ,", "-            \"42: 'while' construct must use '{}'s.\" ,", "-            \"44: 'while' construct must use '{}'s.\" ,", "-            \"45: 'if' construct must use '{}'s.\" ,", "-            \"58: 'for' construct must use '{}'s.\" ,", "-            \"59: 'for' construct must use '{}'s.\" ,", "-            \"61: 'for' construct must use '{}'s.\" ,", "-            \"63: 'if' construct must use '{}'s.\" ,", "-            \"82: 'if' construct must use '{}'s.\" ,", "-            \"83: 'if' construct must use '{}'s.\" ,", "-            \"85: 'if' construct must use '{}'s.\" ,", "-            \"87: 'else' construct must use '{}'s.\" ,", "-            \"89: 'if' construct must use '{}'s.\" ,", "-            \"97: 'else' construct must use '{}'s.\" ,", "-            \"99: 'if' construct must use '{}'s.\" ,", "-            \"100: 'if' construct must use '{}'s.\" ,", "+            \"29: \" + getCheckMessage(MSG_KEY_NEED_BRACES, \"do\"),", "+            \"41: \" + getCheckMessage(MSG_KEY_NEED_BRACES, \"while\"),", "+            \"42: \" + getCheckMessage(MSG_KEY_NEED_BRACES, \"while\"),", "+            \"44: \" + getCheckMessage(MSG_KEY_NEED_BRACES, \"while\"),", "+            \"45: \" + getCheckMessage(MSG_KEY_NEED_BRACES, \"if\"),", "+            \"58: \" + getCheckMessage(MSG_KEY_NEED_BRACES, \"for\"),", "+            \"59: \" + getCheckMessage(MSG_KEY_NEED_BRACES, \"for\"),", "+            \"61: \" + getCheckMessage(MSG_KEY_NEED_BRACES, \"for\"),", "+            \"63: \" + getCheckMessage(MSG_KEY_NEED_BRACES, \"if\"),", "+            \"82: \" + getCheckMessage(MSG_KEY_NEED_BRACES, \"if\"),", "+            \"83: \" + getCheckMessage(MSG_KEY_NEED_BRACES, \"if\"),", "+            \"85: \" + getCheckMessage(MSG_KEY_NEED_BRACES, \"if\"),", "+            \"87: \" + getCheckMessage(MSG_KEY_NEED_BRACES, \"else\"),", "+            \"89: \" + getCheckMessage(MSG_KEY_NEED_BRACES, \"if\"),", "+            \"97: \" + getCheckMessage(MSG_KEY_NEED_BRACES, \"else\"),", "+            \"99: \" + getCheckMessage(MSG_KEY_NEED_BRACES, \"if\"),", "+            \"100: \" + getCheckMessage(MSG_KEY_NEED_BRACES, \"if\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b42ef3a6ba9e6075ddd330d2edeee573", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "     @Test     public void testDefault() throws Exception", "diff": ["-            \"9:13: Variable 'i' should be declared final.\",", "-            \"9:16: Variable 'j' should be declared final.\",", "-            \"10:18: Variable 'runnable' should be declared final.\",", "-            \"20:13: Variable 'i' should be declared final.\",", "-            \"24:13: Variable 'z' should be declared final.\",", "-            \"26:16: Variable 'obj' should be declared final.\",", "-            \"30:16: Variable 'x' should be declared final.\",", "-            \"36:18: Variable 'runnable' should be declared final.\",", "-            \"40:21: Variable 'q' should be declared final.\",", "-            \"56:13: Variable 'i' should be declared final.\",", "-            \"60:13: Variable 'z' should be declared final.\",", "-            \"62:16: Variable 'obj' should be declared final.\",", "-            \"66:16: Variable 'x' should be declared final.\",", "-            \"74:21: Variable 'w' should be declared final.\",", "-            \"75:26: Variable 'runnable' should be declared final.\",", "-            \"96:17: Variable 'weird' should be declared final.\",", "-            \"97:17: Variable 'j' should be declared final.\",", "-            \"98:17: Variable 'k' should be declared final.\",", "+            \"9:13: \" + getCheckMessage(MSG_KEY, \"i\"),", "+            \"9:16: \" + getCheckMessage(MSG_KEY, \"j\"),", "+            \"10:18: \" + getCheckMessage(MSG_KEY, \"runnable\"),", "+            \"20:13: \" + getCheckMessage(MSG_KEY, \"i\"),", "+            \"24:13: \" + getCheckMessage(MSG_KEY, \"z\"),", "+            \"26:16: \" + getCheckMessage(MSG_KEY, \"obj\"),", "+            \"30:16: \" + getCheckMessage(MSG_KEY, \"x\"),", "+            \"36:18: \" + getCheckMessage(MSG_KEY, \"runnable\"),", "+            \"40:21: \" + getCheckMessage(MSG_KEY, \"q\"),", "+            \"56:13: \" + getCheckMessage(MSG_KEY, \"i\"),", "+            \"60:13: \" + getCheckMessage(MSG_KEY, \"z\"),", "+            \"62:16: \" + getCheckMessage(MSG_KEY, \"obj\"),", "+            \"66:16: \" + getCheckMessage(MSG_KEY, \"x\"),", "+            \"74:21: \" + getCheckMessage(MSG_KEY, \"w\"),", "+            \"75:26: \" + getCheckMessage(MSG_KEY, \"runnable\"),", "+            \"96:17: \" + getCheckMessage(MSG_KEY, \"weird\"),", "+            \"97:17: \" + getCheckMessage(MSG_KEY, \"j\"),", "+            \"98:17: \" + getCheckMessage(MSG_KEY, \"k\"),"]}]}