{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4f188a60b784fda9695bcaf0d201f4a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c353ebeb2f90976e3d54f24fe612770", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputIllegalCatchCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalCatch.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c36b1c819db3e64093f759185fc22678", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoLineWrapCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testCaseWithoutLineWrapping() throws Exception", "signatureAfterChange": "      @Test     public void testCaseWithoutLineWrapping() throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"whitespace/NoLineWrapGoodInput.java\"), expected);", "+        verify(checkConfig, getPath(\"NoLineWrapGoodInput.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d676ce2022dd8e5ab541d0d6a24629f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/FileSetCheckLifecycleTest.java", "commitBeforeChange": "9c488c1f512ffcc58af433842c992bd3f85b2d63", "commitAfterChange": "f47587c9fb66cf46fbd2eb5691449cda6d551ecb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testProcessCallsFinishBeforeCallingDestroy() throws Exception", "signatureAfterChange": "      @Test     public void testProcessCallsFinishBeforeCallingDestroy() throws Exception", "diff": ["-        verify(checker, getPath(\"checks/InputIllegalTokens.java\"), expected);", "+        verify(checker, getPath(\"InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1b48f572a16dc34ef25d945b2294e3c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testBadOverrideFromObject() throws Exception", "signatureAfterChange": "     @Test     public void testBadOverrideFromObject() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"BadOverrideFromObject.java\"), expected);", "+        verify(checkConfig, getPath(\"InputBadOverrideFromObject.java\"), expected);"]}]}