{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4bf39ba2d868f5adc03f46fd505db8f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb38975bd6155ffd73ff29dafc2269f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/BaseCheckTestCase.java", "commitBeforeChange": "0fb155232fd68c4a4546ec34e676fa655d7fe223", "commitAfterChange": "8bb244d50b7ef1b8028fa5492009d3ea367b1a19", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      protected Checker createChecker(Configuration aConfig)         throws Exception", "signatureAfterChange": "      protected Checker createChecker(Configuration aCheckConfig)         throws Exception", "diff": ["-    protected Checker createChecker(Configuration aConfig)", "+    protected Checker createChecker(Configuration aCheckConfig)", "-        throw new IllegalStateException(\"not implemented yet\");", "-//        final DefaultConfiguration dc = new DefaultConfiguration(\"root\");", "-//        dc.addChild(aConfig);", "-//        final Checker c = new Checker();", "-//        c.configure(aConfig);", "-//        c.addListener(new BriefLogger(mStream));", "-//        return c;", "+        final DefaultConfiguration dc = new DefaultConfiguration(\"root\");", "+        final DefaultConfiguration twConf = createCheckConfig(TreeWalker.class);", "+        dc.addChild(twConf);", "+        twConf.addChild(aCheckConfig);", "+        final Checker c = new Checker();", "+        c.configure(dc);", "+        c.addListener(new BriefLogger(mStream));", "+        return c;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4ecad90e0d005d1d3960c54eb1a946e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/BaseCheckTestCase.java", "commitBeforeChange": "e952d4dff48ef64b24d39649b8e2f0dc6369f3fd", "commitAfterChange": "cff42d4cd7a89827e0454b7c2d0551c820156113", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      protected Checker createChecker(CheckConfiguration aCheckConfig)         throws Exception", "signatureAfterChange": "      protected Checker createChecker(Configuration aConfig)         throws Exception", "diff": ["-    protected Checker createChecker(CheckConfiguration aCheckConfig)", "+    protected Checker createChecker(Configuration aConfig)", "-        final Checker c = new Checker(new GlobalProperties(mProps, mStream),", "-                                      new CheckConfiguration[] {aCheckConfig});", "-        final AuditListener listener = new BriefLogger(mStream);", "-        c.addListener(listener);", "-        return c;", "+        throw new IllegalStateException(\"not implemented yet\");", "+//        final DefaultConfiguration dc = new DefaultConfiguration(\"root\");", "+//        dc.addChild(aConfig);", "+//        final Checker c = new Checker();", "+//        c.configure(aConfig);", "+//        c.addListener(new BriefLogger(mStream));", "+//        return c;"]}]}