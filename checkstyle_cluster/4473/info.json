{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "49854a2d6b6ab22ebe30aba00a92c779", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4322a553ca775a4b7c26623eedea3d34", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private ClassResolver getClassResolver()", "signatureAfterChange": "     private ClassResolver getClassResolver()", "diff": ["-        if (mClassResolver == null) {", "-            mClassResolver =", "+        if (classResolver == null) {", "+            classResolver =", "-                                  mPackageFullIdent.getText(),", "-                                  mImports);", "+                                  packageFullIdent.getText(),", "+                                  imports);", "-        return mClassResolver;", "+        return classResolver;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f573fdb2e1ce973f1daf9d4287901703", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheck.java", "commitBeforeChange": "e16c4a8259ed7bf412bfa74ac4cb6b39c467c422", "commitAfterChange": "741454e7f18b1714499eda0c44dbdf75518683b0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public synchronized void process(File[] aFiles)", "signatureAfterChange": "     public synchronized void process(File[] aFiles)", "diff": ["-                ex.printStackTrace(); // TODO", "+                LOG.error(\"Cannot access files to check, giving up: \"", "+                        + ex.getMessage(), ex);", "+                // TODO: better to throw an exception here?", "+                // it would be best to throw IOException from process(),", "+                // but interface definition doesn't allow that...", "+                mLineChecksums = new long[0][0];"]}]}