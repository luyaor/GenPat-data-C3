{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4238bb9bcf37febebbb2f5039925c667", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "398f437e8d2c7894b25febe964ed8910", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheck.java", "commitBeforeChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "commitAfterChange": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\")     private void findDuplicateFromLine(         final int aI, final int aJ, final int aILine,         final int[] aJLines, final MultiMap aIgnore)", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\")     private void findDuplicateFromLine(         final int aI, final int aJ, final int aILine,         final int[] aJLines, final MultiMap aIgnore)", "diff": ["-", "-", "-        final Integer iLine = new Integer(aILine);", "-            final Collection ignoreEntries = (Collection) aIgnore.get(iLine);", "+            final Collection ignoreEntries = (Collection) aIgnore.get(aILine);", "-                if (ignoreEntries.contains(new Integer(jLine))) {", "+                if (ignoreEntries.contains(jLine)) {", "-                    aIgnore.put(new Integer(aILine + offset),", "-                            new Integer(jLine + offset));", "+                    aIgnore.put(aILine + offset, jLine + offset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5329ffb4f4681b501fe551fb4218f638", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "commitAfterChange": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void reportCComment(int aStartLineNo, int aStartColNo,             int aEndLineNo, int aEndColNo)", "signatureAfterChange": "     public void reportCComment(int aStartLineNo, int aStartColNo,             int aEndLineNo, int aEndColNo)", "diff": ["-        final Integer key = new Integer(aStartLineNo);", "-        if (mCComments.containsKey(key)) {", "-            final List<TextBlock> entries = mCComments.get(key);", "+        if (mCComments.containsKey(aStartLineNo)) {", "+            final List<TextBlock> entries = mCComments.get(aStartLineNo);", "-            mCComments.put(key, entries);", "+            mCComments.put(aStartLineNo, entries);", "-            mJavadocComments.put(new Integer(aEndLineNo - 1), comment);", "+            mJavadocComments.put(aEndLineNo - 1, comment);"]}]}