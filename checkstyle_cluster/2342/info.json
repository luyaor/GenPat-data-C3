{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "155d738a6be3adb5ae5ffba6cbb4ba07", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73a1235a2cc592f064df59768139da1a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule341onetoplevel/OneTopLevelClassTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void bad3Test() throws Exception", "signatureAfterChange": "      @Test     public void bad3Test() throws Exception", "diff": ["-        Class<OneTopLevelClassCheck> clazz = OneTopLevelClassCheck.class;", "-        String messageKey = \"one.top.level.class\";", "+        final Class<OneTopLevelClassCheck> clazz = OneTopLevelClassCheck.class;", "+        final String messageKey = \"one.top.level.class\";", "-        Configuration checkConfig = builder.getCheckConfig(\"OneTopLevelClass\");", "-        String filePath = builder.getFilePath(\"OneTopLevelClassBad3\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"OneTopLevelClass\");", "+        final String filePath = builder.getFilePath(\"OneTopLevelClassBad3\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf45387045daeacf2c9f23c7ad5cf943", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolderTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testGetAllAnnotationValuesWrongArg() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testGetAllAnnotationValuesWrongArg() throws ReflectiveOperationException", "diff": ["-        SuppressWarningsHolder holder = new SuppressWarningsHolder();", "-        Method getAllAnnotationValues = holder.getClass()", "+        final SuppressWarningsHolder holder = new SuppressWarningsHolder();", "+        final Method getAllAnnotationValues = holder.getClass()", "-        DetailAST methodDef = new DetailAST();", "+        final DetailAST methodDef = new DetailAST();", "-        DetailAST lparen = new DetailAST();", "+        final DetailAST lparen = new DetailAST();", "-        DetailAST parent = new DetailAST();", "+        final DetailAST parent = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbb00b347d039827490e339ac4ecda2f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/OperatorWrapTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void operatorWrapTestAssign() throws Exception", "signatureAfterChange": "      @Test     public void operatorWrapTestAssign() throws Exception", "diff": ["-        DefaultConfiguration newCheckConfig = createCheckConfig(OperatorWrapCheck.class);", "+        final DefaultConfiguration newCheckConfig = createCheckConfig(OperatorWrapCheck.class);", "-        String messageKey = \"line.previous\";", "-        Class<OperatorWrapCheck> clazz = OperatorWrapCheck.class;", "+        final String messageKey = \"line.previous\";", "+        final Class<OperatorWrapCheck> clazz = OperatorWrapCheck.class;", "-        String filePath = builder.getFilePath(\"OperatorWrapAssignInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final String filePath = builder.getFilePath(\"OperatorWrapAssignInput\");", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db87bd11297a47a457cdfb42a5587051", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule3421overloadsplit/OverloadMethodsDeclarationOrderTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void overloadMethodsTest() throws Exception", "signatureAfterChange": "      @Test     public void overloadMethodsTest() throws Exception", "diff": ["-        Class<OverloadMethodsDeclarationOrderCheck> clazz = OverloadMethodsDeclarationOrderCheck.class;", "-        String messageKey = \"overload.methods.declaration\";", "+        final Class<OverloadMethodsDeclarationOrderCheck> clazz =", "+            OverloadMethodsDeclarationOrderCheck.class;", "+        final String messageKey = \"overload.methods.declaration\";", "-        Configuration checkConfig = builder.getCheckConfig(\"OverloadMethodsDeclarationOrder\");", "-        String filePath = builder.getFilePath(\"InputOverloadMethodsDeclarationOrder\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"OverloadMethodsDeclarationOrder\");", "+        final String filePath = builder.getFilePath(\"InputOverloadMethodsDeclarationOrder\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}]}