{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9668cd9c28ceabc0563240772cba05eb", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "015380779ddb7035f6b11de90d268b58", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "e40d9f41cf066f205e3c0ffd1b99a6e37d4963d9", "commitAfterChange": "2ff20f4af36062db07fa245ab6b3a1d8ab2fe16c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void checkAnnotationIndentation(DetailAST atNode,             NavigableMap<Integer, DetailAST> firstNodesOnLines)", "signatureAfterChange": "     private void checkAnnotationIndentation(DetailAST atNode,             NavigableMap<Integer, DetailAST> firstNodesOnLines)", "diff": ["-        final int lastAnnotattionColumn = lastAnnotationNode.getColumnNo();", "-        while (itr.hasNext() && firstNodesOnLines.size() > 1) {", "+        while (firstNodesOnLines.size() > 1) {", "-                    || node.getLineNo() == lastAnnotationLine", "-                    && node.getColumnNo() <= lastAnnotattionColumn) {", "+                    || node.getLineNo() == lastAnnotationLine) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b9d83d4a3b9b49821de334b90d78f90", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AllChecksPresentOnAvailableChecksPageTest.java", "commitBeforeChange": "6c07f80863b07575127c66364170e6011078b39e", "commitAfterChange": "38bba612c02504fcb3db2bdbcdf1dda2252d179f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private static boolean isPresent(String availableChecks, String checkName)", "signatureAfterChange": "      private static boolean isPresent(String availableChecks, String checkName)", "diff": ["-        final String namingLinkPattern = String.format(NAMING_LINK_TEMPLATE, checkName);", "-        return availableChecks.matches(linkPattern)", "-                || checkName.endsWith(\"Name\") && availableChecks.matches(namingLinkPattern);", "+        return availableChecks.matches(linkPattern);"]}]}