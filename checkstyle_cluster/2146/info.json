{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed24da4a3e35654bb4b01a94e5817e19", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b28ece466b0946f0a541e389d2313d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static JavadocTags getJavadocTags(TextBlock aCmt,             JavadocTagType aTagType)", "signatureAfterChange": "     public static JavadocTags getJavadocTags(TextBlock cmt,             JavadocTagType tagType)", "diff": ["-    public static JavadocTags getJavadocTags(TextBlock aCmt,", "-            JavadocTagType aTagType)", "+    public static JavadocTags getJavadocTags(TextBlock cmt,", "+            JavadocTagType tagType)", "-        final String[] text = aCmt.getText();", "+        final String[] text = cmt.getText();", "-            if ((aTagType.equals(JavadocTagType.ALL) || aTagType", "+            if ((tagType.equals(JavadocTagType.ALL) || tagType", "-                final int line = aCmt.getStartLineNo() + i;", "+                final int line = cmt.getStartLineNo() + i;", "-                    col += aCmt.getStartColNo();", "+                    col += cmt.getStartColNo();", "-            else if (aTagType.equals(JavadocTagType.ALL)", "-                    || aTagType.equals(JavadocTagType.INLINE))", "+            else if (tagType.equals(JavadocTagType.ALL)", "+                    || tagType.equals(JavadocTagType.INLINE))", "-                // Match JavaDoc text after comment characters", "+                // Match Javadoc text after comment characters", "-                        final int line = aCmt.getStartLineNo() + i;", "+                        final int line = cmt.getStartLineNo() + i;", "-                            col += aCmt.getStartColNo();", "+                            col += cmt.getStartColNo();", "-                    // else Error: Unexpected match count for inline JavaDoc", "+                    // else Error: Unexpected match count for inline Javadoc"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a0ddda6b329439b40aa2bdf44252671", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "b95ced53e3c47c9a9db5022767a18e714fc3bebd", "commitAfterChange": "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private List getMethodTags(TextBlock aComment)", "signatureAfterChange": "     private List getMethodTags(TextBlock aComment)", "diff": ["-                tags.add(new JavadocTag(currentLine,", "+                int col = javadocArgMatcher.start(1) - 1;", "+                if (i == 0) {", "+                    col += aComment.getStartColNo();", "+                }", "+                tags.add(new JavadocTag(currentLine, col,", "-                tags.add(new JavadocTag(currentLine,", "+                int col = javadocNoargMatcher.start(1) - 1;", "+                if (i == 0) {", "+                    col += aComment.getStartColNo();", "+                }", "+                tags.add(new JavadocTag(currentLine, col,", "-                tags.add(new JavadocTag(currentLine,", "+                int col = noargCurlyMatcher.start(1) - 1;", "+                if (i == 0) {", "+                    col += aComment.getStartColNo();", "+                }", "+                tags.add(new JavadocTag(currentLine, col,", "+                int col = argMultilineStart.start(1) - 1;", "+                if (i == 0) {", "+                    col += aComment.getStartColNo();", "+                }", "-                            tags.add(new JavadocTag(currentLine, p1, p2));", "+                            tags.add(new JavadocTag(currentLine, col, p1, p2));", "+                int col = noargMultilineStart.start(1) - 1;", "+                if (i == 0) {", "+                    col += aComment.getStartColNo();", "+                }", "-                            tags.add(new JavadocTag(currentLine, p1));", "+                            tags.add(new JavadocTag(currentLine, col, p1));"]}]}