{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24db9badd52d688379386961409e77c3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36a6080d48b627d64fb0c5430de15472", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "5478613082bac0329d25cffcfae5fab219d25118", "commitAfterChange": "2af34e2adcd4d120d7400103d2dac3d5ee20f65b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected IndentLevel getChildrenExpectedLevel()", "signatureAfterChange": "     protected IndentLevel getChildrenExpectedLevel()", "diff": ["+        IndentLevel indentLevel = new IndentLevel(getLevel(), getBasicOffset());", "-                return new IndentLevel(expandedTabsColumnNo(getLCurly()) + getBasicOffset());", "+                indentLevel = new IndentLevel(expandedTabsColumnNo(getLCurly()) + getBasicOffset());", "-                return level;", "+                indentLevel = level;", "-        return new IndentLevel(getLevel(), getBasicOffset());", "+        return indentLevel;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37f17bf1b82f1bc01665f23d4419a892", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Utils.java", "commitBeforeChange": "d613c3fe74259c0a8609fab30e9612653709a60f", "commitAfterChange": "fa102b60fae8420f4376531e207e3ef30b2cd728", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static Pattern getPattern(String pattern, int compileFlags)         throws PatternSyntaxException", "signatureAfterChange": "     public static Pattern getPattern(String pattern, int compileFlags)         throws PatternSyntaxException", "diff": ["-            retVal = Pattern.compile(pattern, compileFlags);", "-            CREATED_RES.putIfAbsent(key, retVal);", "+            final Pattern compiledPattern = Pattern.compile(pattern, compileFlags);", "+            retVal = CREATED_RES.putIfAbsent(key, compiledPattern);", "+            retVal = firstNonNull(retVal, compiledPattern);"]}]}