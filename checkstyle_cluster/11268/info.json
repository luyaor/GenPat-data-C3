{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a328ecec610ed12827eba1a8a039029f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d116c281108d98de84c9451238cdeb1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "4cc94a581c8da49c65d139da08d70aea1b5cf1e9", "commitAfterChange": "88e89a138aa39f50f7642106cde6568f6e07783f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void setupChild(Configuration aChildConf)             throws CheckstyleException", "signatureAfterChange": "     protected void setupChild(Configuration aChildConf)             throws CheckstyleException", "diff": ["-            final String[] packageNames = getPackageNames();", "-                    (FileSetCheck) PackageObjectFactory.makeObject(", "-                            packageNames,", "-                            getClass().getClassLoader(),", "-                            name);", "-            fsc.setPackageNames(packageNames);", "+            (FileSetCheck) mModuleFactory.createModule(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbb7fb24349c5eaa54aa2678486197b7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "d740f2e1cdb05f20a48bf7d5dcebdcd0faae6ddd", "commitAfterChange": "3ef918920c58c550169ccef3cfe1706aede11a6e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private Checker createChecker()", "signatureAfterChange": "     private Checker createChecker()", "diff": ["-", "-", "-            // setup the listeners", "-            final AuditListener[] listeners = getListeners();", "-            for (AuditListener element : listeners) {", "-                checker.addListener(element);", "-            }", "-        catch (final Exception e) {", "-            throw new BuildException(\"Unable to create a Checker: \"", "-                    + e.getMessage(), e);", "+        catch (final CheckstyleException e) {", "+            throw new BuildException(String.format(\"Unable to create a Checker: \"", "+                    + \"configLocation {%s}, classpath {%s}.\", configLocation, classpath), e);", "-"]}]}