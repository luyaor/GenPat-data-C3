{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41dcfe61a238b192941f809d6773d626", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a91a980549e1637ec6d10fb052c8ee1a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIgnoreNone()         throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreNone()         throws Exception", "diff": ["-            \"21:24: '1' is a magic number.\",", "-            \"22:25: '2' is a magic number.\",", "-            \"23:26: '0L' is a magic number.\",", "-            \"24:26: '0l' is a magic number.\",", "-            \"25:30: '0D' is a magic number.\",", "-            \"26:30: '0d' is a magic number.\",", "-            \"28:35: '2' is a magic number.\",", "-            \"30:20: '1' is a magic number.\",", "-            \"30:24: '2' is a magic number.\",", "-            \"31:21: '1' is a magic number.\",", "-            \"32:23: '1.0' is a magic number.\",", "-            \"32:29: '2.0' is a magic number.\",", "-            \"34:22: '0' is a magic number.\",", "-            \"34:29: '2' is a magic number.\",", "-            \"36:13: '1' is a magic number.\",", "-            \"36:17: '2' is a magic number.\",", "-            \"38:13: '1.0' is a magic number.\",", "-            \"38:19: '2.0' is a magic number.\",", "-            \"41:26: '3_000' is a magic number.\",", "-            \"42:32: '1.5_0' is a magic number.\",", "-            \"43:27: '3' is a magic number.\",", "-            \"43:31: '4' is a magic number.\",", "-            \"45:29: '3' is a magic number.\",", "-            \"47:23: '3' is a magic number.\",", "-            \"48:26: '1.5' is a magic number.\",", "-            \"50:22: '3' is a magic number.\",", "-            \"50:29: '5' is a magic number.\",", "-            \"50:37: '3' is a magic number.\",", "-            \"54:26: '3' is a magic number.\",", "-            \"55:39: '3' is a magic number.\",", "-            \"59:25: '00' is a magic number.\",", "-            \"60:25: '010' is a magic number.\",", "-            \"61:25: '011' is a magic number.\",", "-            \"63:30: '0_10L' is a magic number.\",", "-            \"64:30: '011l' is a magic number.\",", "-            \"67:23: '0x0' is a magic number.\",", "-            \"68:24: '0x10' is a magic number.\",", "-            \"69:24: '0X011' is a magic number.\",", "-            \"70:28: '0x0L' is a magic number.\",", "-            \"71:29: '0x10L' is a magic number.\",", "-            \"72:29: '0X11l' is a magic number.\",", "-            \"85:28: '3' is a magic number.\",", "-            \"92:14: '0xffffffffL' is a magic number.\",", "-            \"100:30: '+3' is a magic number.\",", "-            \"101:29: '-2' is a magic number.\",", "-            \"102:35: '+3.5' is a magic number.\",", "-            \"103:36: '-2.5' is a magic number.\",", "-            \"109:34: '0xffffffff' is a magic number.\",", "-            \"110:36: '0xffffffffffffffffL' is a magic number.\",", "-            \"111:35: '0x80000000' is a magic number.\",", "-            \"112:36: '0x8000000000000000L' is a magic number.\",", "-            \"113:36: '037777777777' is a magic number.\",", "-            \"114:38: '01777777777777777777777L' is a magic number.\",", "-            \"115:37: '020000000000' is a magic number.\",", "-            \"116:38: '01000000000000000000000L' is a magic number.\",", "-            \"131:20: '378' is a magic number.\",", "-            \"160:16: '31' is a magic number.\",", "-            \"165:16: '42' is a magic number.\",", "-            \"170:16: '13' is a magic number.\",", "-            \"174:15: '21' is a magic number.\",", "-            \"178:15: '37' is a magic number.\",", "-            \"182:15: '101' is a magic number.\",", "+            \"21:24: \" + getCheckMessage(MSG_KEY, \"1\"),", "+            \"22:25: \" + getCheckMessage(MSG_KEY, \"2\"),", "+            \"23:26: \" + getCheckMessage(MSG_KEY, \"0L\"),", "+            \"24:26: \" + getCheckMessage(MSG_KEY, \"0l\"),", "+            \"25:30: \" + getCheckMessage(MSG_KEY, \"0D\"),", "+            \"26:30: \" + getCheckMessage(MSG_KEY, \"0d\"),", "+            \"28:35: \" + getCheckMessage(MSG_KEY, \"2\"),", "+            \"30:20: \" + getCheckMessage(MSG_KEY, \"1\"),", "+            \"30:24: \" + getCheckMessage(MSG_KEY, \"2\"),", "+            \"31:21: \" + getCheckMessage(MSG_KEY, \"1\"),", "+            \"32:23: \" + getCheckMessage(MSG_KEY, \"1.0\"),", "+            \"32:29: \" + getCheckMessage(MSG_KEY, \"2.0\"),", "+            \"34:22: \" + getCheckMessage(MSG_KEY, \"0\"),", "+            \"34:29: \" + getCheckMessage(MSG_KEY, \"2\"),", "+            \"36:13: \" + getCheckMessage(MSG_KEY, \"1\"),", "+            \"36:17: \" + getCheckMessage(MSG_KEY, \"2\"),", "+            \"38:13: \" + getCheckMessage(MSG_KEY, \"1.0\"),", "+            \"38:19: \" + getCheckMessage(MSG_KEY, \"2.0\"),", "+            \"41:26: \" + getCheckMessage(MSG_KEY, \"3_000\"),", "+            \"42:32: \" + getCheckMessage(MSG_KEY, \"1.5_0\"),", "+            \"43:27: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"43:31: \" + getCheckMessage(MSG_KEY, \"4\"),", "+            \"45:29: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"47:23: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"48:26: \" + getCheckMessage(MSG_KEY, \"1.5\"),", "+            \"50:22: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"50:29: \" + getCheckMessage(MSG_KEY, \"5\"),", "+            \"50:37: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"54:26: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"55:39: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"59:25: \" + getCheckMessage(MSG_KEY, \"00\"),", "+            \"60:25: \" + getCheckMessage(MSG_KEY, \"010\"),", "+            \"61:25: \" + getCheckMessage(MSG_KEY, \"011\"),", "+            \"63:30: \" + getCheckMessage(MSG_KEY, \"0_10L\"),", "+            \"64:30: \" + getCheckMessage(MSG_KEY, \"011l\"),", "+            \"67:23: \" + getCheckMessage(MSG_KEY, \"0x0\"),", "+            \"68:24: \" + getCheckMessage(MSG_KEY, \"0x10\"),", "+            \"69:24: \" + getCheckMessage(MSG_KEY, \"0X011\"),", "+            \"70:28: \" + getCheckMessage(MSG_KEY, \"0x0L\"),", "+            \"71:29: \" + getCheckMessage(MSG_KEY, \"0x10L\"),", "+            \"72:29: \" + getCheckMessage(MSG_KEY, \"0X11l\"),", "+            \"85:28: \" + getCheckMessage(MSG_KEY, \"3\"),", "+            \"92:14: \" + getCheckMessage(MSG_KEY, \"0xffffffffL\"),", "+            \"100:30: \" + getCheckMessage(MSG_KEY, \"+3\"),", "+            \"101:29: \" + getCheckMessage(MSG_KEY, \"-2\"),", "+            \"102:35: \" + getCheckMessage(MSG_KEY, \"+3.5\"),", "+            \"103:36: \" + getCheckMessage(MSG_KEY, \"-2.5\"),", "+            \"109:34: \" + getCheckMessage(MSG_KEY, \"0xffffffff\"),", "+            \"110:36: \" + getCheckMessage(MSG_KEY, \"0xffffffffffffffffL\"),", "+            \"111:35: \" + getCheckMessage(MSG_KEY, \"0x80000000\"),", "+            \"112:36: \" + getCheckMessage(MSG_KEY, \"0x8000000000000000L\"),", "+            \"113:36: \" + getCheckMessage(MSG_KEY, \"037777777777\"),", "+            \"114:38: \" + getCheckMessage(MSG_KEY, \"01777777777777777777777L\"),", "+            \"115:37: \" + getCheckMessage(MSG_KEY, \"020000000000\"),", "+            \"116:38: \" + getCheckMessage(MSG_KEY, \"01000000000000000000000L\"),", "+            \"131:20: \" + getCheckMessage(MSG_KEY, \"378\"),", "+            \"160:16: \" + getCheckMessage(MSG_KEY, \"31\"),", "+            \"165:16: \" + getCheckMessage(MSG_KEY, \"42\"),", "+            \"170:16: \" + getCheckMessage(MSG_KEY, \"13\"),", "+            \"174:15: \" + getCheckMessage(MSG_KEY, \"21\"),", "+            \"178:15: \" + getCheckMessage(MSG_KEY, \"37\"),", "+            \"182:15: \" + getCheckMessage(MSG_KEY, \"101\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e675030e787d6991db9794ebf92d8f89", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "commitAfterChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "      @Test     public void testInvalidBlockWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testInvalidBlockWithChecker()         throws Exception", "diff": ["-            \"22: 'block lcurly' have incorrect indentation level 7, expected level should be 8.\",", "-            \"23: 'block lcurly' have incorrect indentation level 9, expected level should be 8.\",", "-            \"25: 'block lcurly' have incorrect indentation level 9, expected level should be 8.\",", "-            \"26: 'block rcurly' have incorrect indentation level 7, expected level should be 8.\",", "-            \"28: 'block lcurly' have incorrect indentation level 6, expected level should be 8.\",", "-            \"30: 'block rcurly' have incorrect indentation level 6, expected level should be 8.\",", "-            \"31: 'block lcurly' have incorrect indentation level 6, expected level should be 8.\",", "-            \"34: 'block lcurly' have incorrect indentation level 9, expected level should be 8.\",", "-            \"35: 'block' child have incorrect indentation level 13, expected level should be 12.\",", "-            \"35: 'member def type' have incorrect indentation level 13, expected level should be 12.\",", "-            \"37: 'block' child have incorrect indentation level 13, expected level should be 12.\",", "-            \"38: 'block rcurly' have incorrect indentation level 9, expected level should be 8.\",", "-            \"41: 'block lcurly' have incorrect indentation level 6, expected level should be 8.\",", "-            \"42: 'block' child have incorrect indentation level 10, expected level should be 12.\",", "-            \"42: 'member def type' have incorrect indentation level 10, expected level should be 12.\",", "-            \"44: 'block' child have incorrect indentation level 10, expected level should be 12.\",", "-            \"45: 'block rcurly' have incorrect indentation level 6, expected level should be 8.\",", "-            \"48: 'block lcurly' have incorrect indentation level 6, expected level should be 8.\",", "-            \"51: 'block' child have incorrect indentation level 10, expected level should be 12.\",", "-            \"51: 'member def type' have incorrect indentation level 10, expected level should be 12.\",", "-            \"55: 'block lcurly' have incorrect indentation level 10, expected level should be 12.\",", "-            \"59: 'block rcurly' have incorrect indentation level 10, expected level should be 12.\",", "-            \"64: 'block' child have incorrect indentation level 10, expected level should be 12.\",", "-            \"66: 'block lcurly' have incorrect indentation level 10, expected level should be 12.\",", "-            \"67: 'block' child have incorrect indentation level 14, expected level should be 16.\",", "-            \"67: 'member def type' have incorrect indentation level 14, expected level should be 16.\",", "-            \"82: 'block rcurly' have incorrect indentation level 10, expected level should be 12.\",", "-            \"91: 'static initialization' have incorrect indentation level 2, expected level should be 4.\",", "-            \"92: 'static initialization' have incorrect indentation level 6, expected level should be 4.\",", "-            \"96: 'member def type' have incorrect indentation level 7, expected level should be 8.\",", "-            \"96: 'static initialization' child have incorrect indentation level 7, expected level should be 8.\",", "-            \"99: 'static initialization' have incorrect indentation level 6, expected level should be 4.\",", "-            \"101: 'static initialization rcurly' have incorrect indentation level 2, expected level should be 4.\",", "-            \"103: 'static initialization' have incorrect indentation level 2, expected level should be 4.\",", "-            \"105: 'static initialization rcurly' have incorrect indentation level 6, expected level should be 4.\",", "-            \"107: 'static initialization' have incorrect indentation level 2, expected level should be 4.\",", "-            \"109: 'member def type' have incorrect indentation level 6, expected level should be 8.\",", "-            \"109: 'static initialization' child have incorrect indentation level 6, expected level should be 8.\",", "-            \"112: 'static initialization lcurly' have incorrect indentation level 2, expected level should be 4.\",", "-            \"113: 'member def type' have incorrect indentation level 6, expected level should be 8.\",", "-            \"113: 'static initialization' child have incorrect indentation level 6, expected level should be 8.\",", "-            \"114: 'static initialization rcurly' have incorrect indentation level 6, expected level should be 4.\",", "-            \"119: 'member def type' have incorrect indentation level 6, expected level should be 8.\",", "-            \"119: 'static initialization' child have incorrect indentation level 6, expected level should be 8.\",", "-            \"124: 'member def type' have incorrect indentation level 4, expected level should be 8.\",", "-            \"124: 'static initialization' child have incorrect indentation level 4, expected level should be 8.\",", "-            \"125: 'static initialization rcurly' have incorrect indentation level 2, expected level should be 4.\",", "-            \"130: 'static initialization rcurly' have incorrect indentation level 6, expected level should be 4.\",", "-            \"133: 'block lcurly' have incorrect indentation level 2, expected level should be 4.\",", "-            \"134: 'block lcurly' have incorrect indentation level 6, expected level should be 4.\",", "-            \"137: 'block lcurly' have incorrect indentation level 2, expected level should be 4.\",", "-            \"139: 'block rcurly' have incorrect indentation level 6, expected level should be 4.\",", "-            \"141: 'block lcurly' have incorrect indentation level 6, expected level should be 4.\",", "-            \"143: 'block rcurly' have incorrect indentation level 2, expected level should be 4.\",", "-            \"146: 'block' child have incorrect indentation level 6, expected level should be 8.\",", "-            \"146: 'member def type' have incorrect indentation level 6, expected level should be 8.\",", "+            \"22: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 7, 8),", "+            \"23: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 9, 8),", "+            \"25: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 9, 8),", "+            \"26: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 7, 8),", "+            \"28: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 6, 8),", "+            \"30: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 6, 8),", "+            \"31: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 6, 8),", "+            \"34: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 9, 8),", "+            \"35: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 13, 12),", "+            \"35: \" + getCheckMessage(MSG_ERROR, \"member def type\", 13, 12),", "+            \"37: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 13, 12),", "+            \"38: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 9, 8),", "+            \"41: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 6, 8),", "+            \"42: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 10, 12),", "+            \"42: \" + getCheckMessage(MSG_ERROR, \"member def type\", 10, 12),", "+            \"44: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 10, 12),", "+            \"45: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 6, 8),", "+            \"48: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 6, 8),", "+            \"51: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 10, 12),", "+            \"51: \" + getCheckMessage(MSG_ERROR, \"member def type\", 10, 12),", "+            \"55: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 10, 12),", "+            \"59: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 10, 12),", "+            \"64: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 10, 12),", "+            \"66: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 10, 12),", "+            \"67: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 14, 16),", "+            \"67: \" + getCheckMessage(MSG_ERROR, \"member def type\", 14, 16),", "+            \"82: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 10, 12),", "+            \"91: \" + getCheckMessage(MSG_ERROR, \"static initialization\", 2, 4),", "+            \"92: \" + getCheckMessage(MSG_ERROR, \"static initialization\", 6, 4),", "+            \"96: \" + getCheckMessage(MSG_ERROR, \"member def type\", 7, 8),", "+            \"96: \" + getCheckMessage(MSG_CHILD_ERROR, \"static initialization\", 7, 8),", "+            \"99: \" + getCheckMessage(MSG_ERROR, \"static initialization\", 6, 4),", "+            \"101: \" + getCheckMessage(MSG_ERROR, \"static initialization rcurly\", 2, 4),", "+            \"103: \" + getCheckMessage(MSG_ERROR, \"static initialization\", 2, 4),", "+            \"105: \" + getCheckMessage(MSG_ERROR, \"static initialization rcurly\", 6, 4),", "+            \"107: \" + getCheckMessage(MSG_ERROR, \"static initialization\", 2, 4),", "+            \"109: \" + getCheckMessage(MSG_ERROR, \"member def type\", 6, 8),", "+            \"109: \" + getCheckMessage(MSG_CHILD_ERROR, \"static initialization\", 6, 8),", "+            \"112: \" + getCheckMessage(MSG_ERROR, \"static initialization lcurly\", 2, 4),", "+            \"113: \" + getCheckMessage(MSG_ERROR, \"member def type\", 6, 8),", "+            \"113: \" + getCheckMessage(MSG_CHILD_ERROR, \"static initialization\", 6, 8),", "+            \"114: \" + getCheckMessage(MSG_ERROR, \"static initialization rcurly\", 6, 4),", "+            \"119: \" + getCheckMessage(MSG_ERROR, \"member def type\", 6, 8),", "+            \"119: \" + getCheckMessage(MSG_CHILD_ERROR, \"static initialization\", 6, 8),", "+            \"124: \" + getCheckMessage(MSG_ERROR, \"member def type\", 4, 8),", "+            \"124: \" + getCheckMessage(MSG_CHILD_ERROR, \"static initialization\", 4, 8),", "+            \"125: \" + getCheckMessage(MSG_ERROR, \"static initialization rcurly\", 2, 4),", "+            \"130: \" + getCheckMessage(MSG_ERROR, \"static initialization rcurly\", 6, 4),", "+            \"133: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 2, 4),", "+            \"134: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 6, 4),", "+            \"137: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 2, 4),", "+            \"139: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 6, 4),", "+            \"141: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 6, 4),", "+            \"143: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 2, 4),", "+            \"146: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 6, 8),", "+            \"146: \" + getCheckMessage(MSG_ERROR, \"member def type\", 6, 8),"]}]}