{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "afd82ba9cf07299d92c3ac1fa770ad2c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11a69c4984bf2028347ed3d249c5fd71", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "         private AuditListener createDefaultLogger(Task aTask)             throws IOException", "signatureAfterChange": "         private AuditListener createDefaultLogger(Task task)             throws IOException", "diff": ["-        private AuditListener createDefaultLogger(Task aTask)", "+        private AuditListener createDefaultLogger(Task task)", "-            if ((mToFile == null) || !mUseFile) {", "+            if ((toFile == null) || !useFile) {", "-                    new LogOutputStream(aTask, Project.MSG_DEBUG),", "-                    true, new LogOutputStream(aTask, Project.MSG_ERR), true);", "+                    new LogOutputStream(task, Project.MSG_DEBUG),", "+                    true, new LogOutputStream(task, Project.MSG_ERR), true);", "-            return new DefaultLogger(new FileOutputStream(mToFile), true);", "+            return new DefaultLogger(new FileOutputStream(toFile), true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a31f3906255c82e23d22f33f8c3885e0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "b3133035a4fa0e086dfb0dfbefbc7f1540521bbc", "commitAfterChange": "add2bdfb27494bff5fa9c305d9782f57c6170b18", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "     protected AuditListener[] getListeners()         throws ClassNotFoundException, InstantiationException,         IllegalAccessException, IOException", "signatureAfterChange": "     protected AuditListener[] getListeners()         throws ClassNotFoundException, InstantiationException,         IllegalAccessException, IOException", "diff": ["+        final int listenerCount = Math.max(1, mFormatters.size());", "+", "+        final AuditListener[] listeners = new AuditListener[listenerCount];", "+", "-            final Formatter f = new Formatter();", "-            final FormatterType type = new FormatterType();", "-            type.setValue(E_PLAIN);", "-            f.setType(type);", "-            mFormatters.add(f);", "+            OutputStream debug = new LogOutputStream(this, Project.MSG_DEBUG);", "+            OutputStream err = new LogOutputStream(this, Project.MSG_ERR);", "+            listeners[0] = new DefaultLogger(debug, true, err, true);", "+            return listeners;", "-        final AuditListener[] listeners = new AuditListener[mFormatters.size()];"]}]}