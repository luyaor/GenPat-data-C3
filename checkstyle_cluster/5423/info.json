{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f28fc281e18c951650a2e0aabc65981", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82586f1d0c010abcb86e3f018ce7ece6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "0d66a67b0d3920031422d5bb02f0fc02ce580bae", "commitAfterChange": "c9c475a6c7a8cb728ba1c091b386db46f11a781f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static boolean inAbstractOrNativeMethod(DetailAST ast)", "signatureAfterChange": "     private static boolean inAbstractOrNativeMethod(DetailAST ast)", "diff": ["+        boolean abstractOrNative = false;", "-        while (parent != null) {", "+        while (parent != null && !abstractOrNative) {", "-                return modifiers.branchContains(TokenTypes.ABSTRACT)", "+                abstractOrNative = modifiers.branchContains(TokenTypes.ABSTRACT)", "-        return false;", "+        return abstractOrNative;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce3eae5079ad9ceb7dbda9eadd1b3e9f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java", "commitBeforeChange": "c9346746dc9a27d40eaa453e0afb4b0d1391665d", "commitAfterChange": "12bd8334067b18d9d1ed5039dd4dc673f3a1f560", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private static boolean checkParams(DetailAST method)", "signatureAfterChange": "     private static boolean checkParams(DetailAST method)", "diff": ["+        boolean checkPassed = false;", "-        if (params.getChildCount() != 1) {", "-            return false;", "-        }", "-        final DetailAST paratype = params.getFirstChild()", "-            .findFirstToken(TokenTypes.TYPE);", "-        final DetailAST arrayDecl =", "-            paratype.findFirstToken(TokenTypes.ARRAY_DECLARATOR);", "-        if (arrayDecl == null) {", "-            return false;", "-        }", "-        final DetailAST arrayType = arrayDecl.getFirstChild();", "+        if (params.getChildCount() == 1) {", "+            final DetailAST paratype = params.getFirstChild().findFirstToken(TokenTypes.TYPE);", "+            final DetailAST arrayDecl = paratype.findFirstToken(TokenTypes.ARRAY_DECLARATOR);", "-        final FullIdent type = FullIdent.createFullIdent(arrayType);", "-        return \"String\".equals(type.getText())", "-                || \"java.lang.String\".equals(type.getText());", "+            if (arrayDecl != null) {", "+                final DetailAST arrayType = arrayDecl.getFirstChild();", "+                final FullIdent type = FullIdent.createFullIdent(arrayType);", "+                checkPassed = \"String\".equals(type.getText())", "+                        || \"java.lang.String\".equals(type.getText());", "+            }", "+        }", "+        return checkPassed;"]}]}