{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "efc5d51da79e8aff829a5533f040c641", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1211e0577b5af6a21c168baba4e4899c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "commitBeforeChange": "3c0c72f96477afb542ee37b3336f4b7b7613ff29", "commitAfterChange": "6f0a3dee5efc6217383f9bfd6d7a3a116b1c885b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void visitClassDef(DetailAST aAST)", "signatureAfterChange": "     private void visitClassDef(DetailAST aAST)", "diff": ["-            if (mCheckName && !isMatchingClassName(className)) {", "+            if (!mIgnoreName && !isMatchingClassName(className)) {", "-        else {", "-            // if class without abstract modifier", "-            if (mCheckAbstractModifier", "-                    && isMatchingClassName(className))", "-            {", "-                log(aAST.getLineNo(), aAST.getColumnNo(),", "-                        \"no.abstract.class.modifier\", className);", "-            }", "+        else if (!mIgnoreModifier && isMatchingClassName(className)) {", "+            log(aAST.getLineNo(), aAST.getColumnNo(),", "+                \"no.abstract.class.modifier\", className);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ed8b431ef9c0d2b19740b83b5c18f23", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void visitClassDef(DetailAST aAST)", "signatureAfterChange": "     private void visitClassDef(DetailAST ast)", "diff": ["-    private void visitClassDef(DetailAST aAST)", "+    private void visitClassDef(DetailAST ast)", "-            aAST.findFirstToken(TokenTypes.IDENT).getText();", "-        if (isAbstract(aAST)) {", "+            ast.findFirstToken(TokenTypes.IDENT).getText();", "+        if (isAbstract(ast)) {", "-            if (!mIgnoreName && !isMatchingClassName(className)) {", "-                log(aAST.getLineNo(), aAST.getColumnNo(),", "+            if (!ignoreName && !isMatchingClassName(className)) {", "+                log(ast.getLineNo(), ast.getColumnNo(),", "-        else if (!mIgnoreModifier && isMatchingClassName(className)) {", "-            log(aAST.getLineNo(), aAST.getColumnNo(),", "+        else if (!ignoreModifier && isMatchingClassName(className)) {", "+            log(ast.getLineNo(), ast.getColumnNo(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "977a8755b4c0f53c888c49991cb6af48", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FullIdent.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void append(DetailAST aAST)", "signatureAfterChange": "     private void append(DetailAST ast)", "diff": ["-    private void append(DetailAST aAST)", "+    private void append(DetailAST ast)", "-        mBuffer.append(aAST.getText());", "-        if (mLineNo == 0) {", "-            mLineNo = aAST.getLineNo();", "+        buffer.append(ast.getText());", "+        if (lineNo == 0) {", "+            lineNo = ast.getLineNo();", "-        else if (aAST.getLineNo() > 0) {", "-            mLineNo = Math.min(mLineNo, aAST.getLineNo());", "+        else if (ast.getLineNo() > 0) {", "+            lineNo = Math.min(lineNo, ast.getLineNo());", "-        if (mColNo == 0) {", "-            mColNo = aAST.getColumnNo();", "+        if (colNo == 0) {", "+            colNo = ast.getColumnNo();", "-        else if (aAST.getColumnNo() > 0) {", "-            mColNo = Math.min(mColNo, aAST.getColumnNo());", "+        else if (ast.getColumnNo() > 0) {", "+            colNo = Math.min(colNo, ast.getColumnNo());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5f7e681520a19aa3814a59acd386258", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "commitBeforeChange": "b9cfa0969468d97aade2ec022dfff34dc33e7b1a", "commitAfterChange": "9d11682be9f541bcc21cfc533ede5e0b5a7862f4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void visitClassDef(DetailAST aAST)", "signatureAfterChange": "     private void visitClassDef(DetailAST aAST)", "diff": ["+        final String className =", "+            aAST.findFirstToken(TokenTypes.IDENT).getText();", "-            final String className =", "-                aAST.findFirstToken(TokenTypes.IDENT).getText();", "-", "-            if (!isMatchingClassName(className)) {", "+            // if class has abstract modifier", "+            if (mCheckName && !isMatchingClassName(className)) {", "+        else {", "+            // if class without abstract modifier", "+            if (mCheckAbstractModifier", "+                    && isMatchingClassName(className))", "+            {", "+                log(aAST.getLineNo(), aAST.getColumnNo(),", "+                        \"no.abstract.class.modifier\", className);", "+            }", "+        }"]}]}