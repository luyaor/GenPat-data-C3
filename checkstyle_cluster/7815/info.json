{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b15560dd3d4cc8db15f885cb9907a4ec", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58c75932dccd0bbcb1722cb9c30a4a54", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "af52963008a800390e8b356db5811886572f37a3", "commitAfterChange": "3a5a73d5c110418f712f5a9a838c6b4106506fdd", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testAloneOrSingleLine() throws Exception", "signatureAfterChange": "      @Test     public void testAloneOrSingleLine() throws Exception", "diff": ["-            \"60:26: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),", "-            \"69:29: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),", "-            \"74:52: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),", "-            \"77:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\"),", "-            \"85:30: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),", "-            \"97:9: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),", "-            \"99:9: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),", "-            \"119:37: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\"),", "-            \"126:37: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\"),", "-            \"148:13: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\"),", "-            \"157:9: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),", "-            \"157:10: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\"),", "-            \"161:49: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),", "-            \"161:50: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\"),", "-            \"164:75: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),", "-            \"164:76: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),", "-            \"164:77: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\"),", "-            \"176:27: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),", "+            \"60:26: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\", 26),", "+            \"69:29: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\", 29),", "+            \"74:52: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\", 52),", "+            \"77:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\", 18),", "+            \"85:30: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\", 30),", "+            \"97:9: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\", 9),", "+            \"99:9: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\", 9),", "+            \"119:37: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\", 37),", "+            \"126:37: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\", 37),", "+            \"148:13: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\", 13),", "+            \"157:9: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\", 9),", "+            \"157:10: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\", 10),", "+            \"161:49: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\", 49),", "+            \"161:50: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\", 50),", "+            \"164:75: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\", 75),", "+            \"164:76: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\", 76),", "+            \"164:77: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\", 77),", "+            \"176:27: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\", 27),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba954aaa6785b8c1782a6ffc76717f0f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "af52963008a800390e8b356db5811886572f37a3", "commitAfterChange": "3a5a73d5c110418f712f5a9a838c6b4106506fdd", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testLineBreakAfter() throws Exception", "signatureAfterChange": "      @Test     public void testLineBreakAfter() throws Exception", "diff": ["-            \"9:1: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "-            \"12:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "-            \"16:9: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "-            \"18:13: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "-            \"20:17: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "-            \"26:22: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\"),", "-            \"28:17: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "-            \"35:33: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\"),", "-            \"36:21: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\"),", "-            \"39:29: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\"),", "-            \"39:34: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\"),", "-            \"45:37: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\"),", "-            \"51:12: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\"),", "-            \"54:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "-            \"56:27: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\"),", "-            \"66:1: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"9:1: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\", 1),", "+            \"12:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"16:9: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\", 9),", "+            \"18:13: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\", 13),", "+            \"20:17: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\", 17),", "+            \"26:22: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\", 22),", "+            \"28:17: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\", 17),", "+            \"35:33: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\", 33),", "+            \"36:21: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\", 21),", "+            \"39:29: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\", 29),", "+            \"39:34: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\", 34),", "+            \"45:37: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\", 37),", "+            \"51:12: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\", 12),", "+            \"54:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"56:19: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\", 19),", "+            \"66:1: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\", 1),"]}]}