{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83a303f6486255d27a389572f4d7987e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c37c923e547b7d37acd33fb912e435f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "ddd153f70798bcf1e33629e98407db8f9dbe0dcc", "commitAfterChange": "adce874628730a881c533bb04db2688d03a60fc6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private ConfigurationLoader(PropertyResolver aOverrideProps)         throws ParserConfigurationException, SAXException", "signatureAfterChange": "     private ConfigurationLoader(final PropertyResolver aOverrideProps,                                 final boolean aOmitIgnoredModules)         throws ParserConfigurationException, SAXException", "diff": ["-    private ConfigurationLoader(PropertyResolver aOverrideProps)", "+    private ConfigurationLoader(final PropertyResolver aOverrideProps,", "+                                final boolean aOmitIgnoredModules)", "+        mOmitIgnoredModules = aOmitIgnoredModules;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b56c48877fa72fac7b99d7798399e59f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "efa27bbfbe665185aed98b4ad3d93af4d643c141", "commitAfterChange": "ca3ffb73abc810385a4ce8fe685ad31c9d172bff", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DefaultLogger(OutputStream infoStream,                          boolean closeInfoAfterUse,                          OutputStream errorStream,                          boolean closeErrorAfterUse)", "signatureAfterChange": "     public DefaultLogger(OutputStream infoStream,                          boolean closeInfoAfterUse,                          OutputStream errorStream,                          boolean closeErrorAfterUse,                          boolean printSeverity)", "diff": ["-                         boolean closeErrorAfterUse)", "+                         boolean closeErrorAfterUse,", "+                         boolean printSeverity)", "+        this.printSeverity = printSeverity;"]}]}