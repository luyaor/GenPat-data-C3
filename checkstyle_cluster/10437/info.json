{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1860b5b96ac20b5cd3dc9d3358f3077b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d9f527b2976a61b82171d0ab56478ed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testNL() throws Exception", "signatureAfterChange": "      @Test     public void testNL() throws Exception", "diff": ["-            \"49:14: '{' should be on a new line.\",", "-            \"53:14: '{' should be on a new line.\",", "-            \"58:18: '{' should be on a new line.\",", "-            \"62:18: '{' should be on a new line.\",", "-            \"67:12: '{' should be on a new line.\",", "-            \"72:18: '{' should be on a new line.\",", "+            \"49:14: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"53:14: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"58:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"62:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"67:12: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"72:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45dd6e3fc15cd90dd44a11df70092358", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheckTest.java", "commitBeforeChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "commitAfterChange": "0b98c0389e2cf745cb125a89dece57538fc672b7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIt() throws Exception", "signatureAfterChange": "     @Test     public void testIt() throws Exception", "diff": ["-            \"14:10: 'final' modifier out of order with the JLS suggestions.\",", "-            \"18:12: 'private' modifier out of order with the JLS suggestions.\",", "-            \"24:14: 'private' modifier out of order with the JLS suggestions.\",", "-            \"34:13: '@MyAnnotation2' annotation modifier does not preceed non-annotation modifiers.\",", "-            \"39:13: '@MyAnnotation2' annotation modifier does not preceed non-annotation modifiers.\",", "-            \"49:35: '@MyAnnotation4' annotation modifier does not preceed non-annotation modifiers.\",", "+            \"14:10: \" + getCheckMessage(MSG_MODIFIER_ORDER, \"final\"),", "+            \"18:12: \" + getCheckMessage(MSG_MODIFIER_ORDER, \"private\"),", "+            \"24:14: \" + getCheckMessage(MSG_MODIFIER_ORDER, \"private\"),", "+            \"34:13: \" + getCheckMessage(MSG_ANNOTATION_ORDER, \"@MyAnnotation2\"),", "+            \"39:13: \" + getCheckMessage(MSG_ANNOTATION_ORDER, \"@MyAnnotation2\"),", "+            \"49:35: \" + getCheckMessage(MSG_ANNOTATION_ORDER, \"@MyAnnotation4\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c29d8be74689b8c5b5176523a824fa9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "commitAfterChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testInFlow() throws Exception", "signatureAfterChange": "      @Test     public void testInFlow() throws Exception", "diff": ["-            \"6: Wrong order for 'java.awt.Dialog' import.\",", "-            \"11: Wrong order for 'javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE' import.\",", "-            \"12: Wrong order for 'javax.swing.WindowConstants.*' import.\",", "-            \"13: Wrong order for 'javax.swing.JTable' import.\",", "-            \"15: Wrong order for 'java.io.File.createTempFile' import.\",", "-            \"16: Wrong order for 'java.io.File' import.\",", "+            \"6: \" + getCheckMessage(MSG_ORDERING, \"java.awt.Dialog\"),", "+            \"11: \" + getCheckMessage(MSG_ORDERING,", "+                     \"javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE\"),", "+            \"12: \" + getCheckMessage(MSG_ORDERING, \"javax.swing.WindowConstants.*\"),", "+            \"13: \" + getCheckMessage(MSG_ORDERING, \"javax.swing.JTable\"),", "+            \"15: \" + getCheckMessage(MSG_ORDERING, \"java.io.File.createTempFile\"),", "+            \"16: \" + getCheckMessage(MSG_ORDERING, \"java.io.File\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6133adf76cd997f0ac44f5f4d458e50f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/RedundantImportCheckTest.java", "commitBeforeChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "commitAfterChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testWithChecker()         throws Exception", "signatureAfterChange": "     @Test     public void testWithChecker()         throws Exception", "diff": ["-            \"7:1: Redundant import from the same package - com.puppycrawl.tools.checkstyle.imports.*.\",", "-            \"8:1: Redundant import from the same package - com.puppycrawl.tools.checkstyle.imports.InputImportBug.\",", "-            \"10:1: Redundant import from the java.lang package - java.lang.*.\",", "-            \"11:1: Redundant import from the java.lang package - java.lang.String.\",", "-            \"14:1: Duplicate import to line 13 - java.util.List.\",", "-            \"26:1: Duplicate import to line 25 - javax.swing.WindowConstants.*.\",", "+            \"7:1: \" + getCheckMessage(MSG_SAME, \"com.puppycrawl.tools.checkstyle.imports.*\"),", "+            \"8:1: \" + getCheckMessage(MSG_SAME, \"com.puppycrawl.tools.checkstyle.imports.InputImportBug\"),", "+            \"10:1: \" + getCheckMessage(MSG_LANG, \"java.lang.*\"),", "+            \"11:1: \" + getCheckMessage(MSG_LANG, \"java.lang.String\"),", "+            \"14:1: \" + getCheckMessage(MSG_DUPLICATE, 13, \"java.util.List\"),", "+            \"26:1: \" + getCheckMessage(MSG_DUPLICATE, 25, \"javax.swing.WindowConstants.*\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afa50148e16d3df7ab6fd38daa22ec33", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsTest.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Test     public void testSingleNoUncheckedTokens() throws Exception", "signatureAfterChange": "     @Test     public void testSingleNoUncheckedTokens() throws Exception", "diff": ["-            \"5:19: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"29:35: The warning 'unchecked' cannot be suppressed at this location.\",", "+            \"5:19: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"29:35: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "-            \"64:33: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"72:65: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"77:37: The warning 'unchecked' cannot be suppressed at this location.\",", "-            \"82:47: The warning 'unchecked' cannot be suppressed at this location.\",", "+            \"64:33: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"72:65: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"77:37: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),", "+            \"82:47: \" + getCheckMessage(MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, \"unchecked\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec87e52470739c051f0a2bc931413317", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testText()         throws Exception", "signatureAfterChange": "      @Test     public void testText()         throws Exception", "diff": ["-            \"52:65: Empty catch block.\",", "-            \"72:52: Empty catch block.\",", "-            \"73:45: Empty catch block.\",", "-            \"75:13: Empty try block.\",", "-            \"77:17: Empty finally block.\",", "-            \"178:5: Empty INSTANCE_INIT block.\",", "+            \"52:65: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"catch\"),", "+            \"72:52: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"catch\"),", "+            \"73:45: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"catch\"),", "+            \"75:13: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"try\"),", "+            \"77:17: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"finally\"),", "+            \"178:5: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"INSTANCE_INIT\"),"]}]}