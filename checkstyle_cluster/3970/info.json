{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a0df54feb0c97d7e369414581e76c15", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00776f54c35402bd401c77feb7504886", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForIteratorPadCheck.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                    log(semi.getLineNo(), after, WS_FOLLOWED, \";\");", "+                    log(semi.getLineNo(), after, WS_FOLLOWED, SEMICOLON);", "-                    log(semi.getLineNo(), after, WS_NOT_FOLLOWED, \";\");", "+                    log(semi.getLineNo(), after, WS_NOT_FOLLOWED, SEMICOLON);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d6bd7b705bab53c44ae440e266f107f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void checkTag(             int lineNo,             String[] comment,             String tag,             Pattern tagRE,             Pattern formatRE,             String format)", "signatureAfterChange": "     private void checkTag(             int lineNo,             String[] comment,             String tag,             Pattern tagRE,             Pattern formatRE,             String format)", "diff": ["-                    log(lineNo + i - comment.length, \"type.tagFormat\", tag,", "+                    log(lineNo + i - comment.length, TAG_FORMAT, tag,", "-            log(lineNo, \"type.missingTag\", tag);", "+            log(lineNo, MISSING_TAG, tag);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44cb1f69d004731f4d7a5f7c4f2f936f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void checkTag(int lineNo, List<JavadocTag> tags, String tagName,                           Pattern formatPattern, String format)", "signatureAfterChange": "     private void checkTag(int lineNo, List<JavadocTag> tags, String tagName,                           Pattern formatPattern, String format)", "diff": ["-                    log(lineNo, \"type.tagFormat\", \"@\" + tagName, format);", "+                    log(lineNo, TAG_FORMAT, \"@\" + tagName, format);", "-            log(lineNo, \"type.missingTag\", \"@\" + tagName);", "+            log(lineNo, MISSING_TAG, \"@\" + tagName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7266dd20cf3f8cae22ff6e5ef7972e36", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForInitializerPadCheck.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                    log(semi.getLineNo(), before, MSG_PRECEDED, \";\");", "+                    log(semi.getLineNo(), before, MSG_PRECEDED, SEMICOLON);", "-                    log(semi.getLineNo(), before, MSG_NOT_PRECEDED, \";\");", "+                    log(semi.getLineNo(), before, MSG_NOT_PRECEDED, SEMICOLON);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5e7b371bb81454f44c6eff8e8c1bb5a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/ParseTreeBuilder.java", "commitBeforeChange": "ff5cbc39c4882b3a3dcdbedcad9393e170148725", "commitAfterChange": "82f4a9852de874b4849a67f53f4e541d13db869b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public static ParseTree treeUnclosedParagraphFollowedByJavadocTag()", "signatureAfterChange": "      public static ParseTree treeUnclosedParagraphFollowedByJavadocTag()", "diff": ["-        CommonToken gDtSy = new CommonToken(JavadocTokenTypes.NEWLINE, \"\\n\");", "+        CommonToken gDtSy = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        CommonToken HqAee = new CommonToken(JavadocTokenTypes.NEWLINE, \"\\n\");", "+        CommonToken HqAee = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4599c23c268bab6f2c53fa032b7db77", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/ParseTreeBuilder.java", "commitBeforeChange": "ff5cbc39c4882b3a3dcdbedcad9393e170148725", "commitAfterChange": "82f4a9852de874b4849a67f53f4e541d13db869b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static ParseTree treeLeadingAsterisks()", "signatureAfterChange": "     public static ParseTree treeLeadingAsterisks()", "diff": ["-        CommonToken avwXT = new CommonToken(JavadocTokenTypes.NEWLINE, \"\\n\");", "+        CommonToken avwXT = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        CommonToken nuxOz = new CommonToken(JavadocTokenTypes.NEWLINE, \"\\n\");", "+        CommonToken nuxOz = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);"]}]}