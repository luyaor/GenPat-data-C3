{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00eafc7215c96e2ffeefc24fe50e6df5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08f50bf93a3984525ee1f4176a75a6c9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "cbce85c08c1f792b01082ffaf2e15bf433a093b9", "commitAfterChange": "6e676cac5dcb94b6df07466801629d0230385279", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     void verifyVariable(MyVariable aVar)", "signatureAfterChange": "     void verifyVariable(MyVariable aVar)", "diff": ["-        final MyModifierSet mods = aVar.getModifierSet();", "-        final Scope declaredScope = mods.getVisibilityScope();", "-        final Scope variableScope =", "-            inInterfaceBlock() ? Scope.PUBLIC : declaredScope;", "-", "-        }", "-        else {", "-            // Record the name of the variable for detection of unused", "-            Map typeVars = (Map) mTypeFieldsMap.get(mCurrentTypeName);", "-            if (typeVars == null) {", "-                typeVars = new HashMap();", "-                mTypeFieldsMap.put(mCurrentTypeName, typeVars);", "-            }", "-            typeVars.put(aVar.getText(), aVar);", "-", "-            ///////////////////////////////////////////////////////////////////", "-            // THIS BLOCK NEEDS REFACTORING!!", "-            ///////////////////////////////////////////////////////////////////", "-            final boolean isPckg = Scope.PACKAGE.equals(variableScope);", "-            final boolean isProt = Scope.PROTECTED.equals(variableScope);", "-", "-            if (mods.containsStatic()) {", "-                if (!mods.containsFinal()) {", "-                    if (Scope.PRIVATE.equals(variableScope)", "-                        || (mConfig.isAllowPackage() && isPckg)", "-                        || (mConfig.isAllowProtected() && isProt))", "-                    {", "-                        checkVariable(aVar,", "-                                      mConfig.getStaticRegexp(),", "-                                      mConfig.getStaticPat());", "-                    }", "-                }", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4423272593027ab063b8e7694323382d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java", "commitBeforeChange": "4687b0b801bdcc50c763268e33eabd370ad8a85d", "commitAfterChange": "a29f01a95b9dee1e64ec7ed91b4d0876eb82c0bf", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      protected void verify(Checker checker,                           File[] processedFiles,                           String messageFileName,                           String... expected)             throws Exception", "signatureAfterChange": "      protected void verify(Configuration aConfig, boolean printSeveriy,                           String filename, String... expected) throws Exception", "diff": ["+    protected void verify(Configuration aConfig, boolean printSeveriy,", "+                          String filename, String... expected) throws Exception {", "+        verify(createChecker(aConfig, printSeveriy), filename, filename, expected);", "+    }"]}]}