{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e29cd82e79fd86aa2d469e89a46adb3e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ec245d16422d329b8e4e52edf0e7d84", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "3dbb4e095db52128468a241ce9bc2bcf4bc848af", "commitAfterChange": "d28871069bb3461cbf277858fbf9696340957506", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public AbstractExpressionHandler getHandler(IndentationCheck indentCheck,         DetailAST ast, AbstractExpressionHandler parent)", "signatureAfterChange": "     public AbstractExpressionHandler getHandler(IndentationCheck indentCheck,         DetailAST ast, AbstractExpressionHandler parent)", "diff": ["-        if (handlerCtor != null) {", "-            expHandler = (AbstractExpressionHandler) Utils.invokeConstructor(", "-                    handlerCtor, indentCheck, ast, parent);", "-        }", "+        expHandler = (AbstractExpressionHandler) Utils.invokeConstructor(", "+                handlerCtor, indentCheck, ast, parent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92545d44c61e91baf45cb115af9b2d74", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "d49eaaf2e42538bc7f01510eb3ca2812b253c98a", "commitAfterChange": "2880edd6554400955fb950bf8127311c436d2a7a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public AbstractExpressionHandler getHandler(IndentationCheck indentCheck,         DetailAST ast, AbstractExpressionHandler parent)", "signatureAfterChange": "     public AbstractExpressionHandler getHandler(IndentationCheck indentCheck,         DetailAST ast, AbstractExpressionHandler parent)", "diff": ["-        AbstractExpressionHandler expHandler = null;", "-        expHandler = (AbstractExpressionHandler) Utils.invokeConstructor(", "-                handlerCtor, indentCheck, ast, parent);", "-        return expHandler;", "+        return (AbstractExpressionHandler) Utils.invokeConstructor(", "+            handlerCtor, indentCheck, ast, parent);"]}]}