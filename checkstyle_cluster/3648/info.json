{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f2f8dee366007cc59af53a0ac0f9645", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1847422258fd4b169df1986c05ab4296", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "e9ec5bfbd5ab91852c3ec1b30492df5c06cdd3b1", "commitAfterChange": "904de34fcd984edce3d6042a5a17e2a969254588", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private boolean isColonOfCaseOrDefault(int currentType, int parentType)", "signatureAfterChange": "     private boolean isColonOfCaseOrDefault(int currentType, int parentType)", "diff": ["-        if (currentType == TokenTypes.COLON) {", "-            //we do not want to check colon for cases and defaults", "-            if (parentType == TokenTypes.LITERAL_DEFAULT", "-                || parentType == TokenTypes.LITERAL_CASE) {", "-                return true;", "-            }", "-            else if (parentType == TokenTypes.FOR_EACH_CLAUSE", "-                && ignoreEnhancedForColon) {", "-                return true;", "-            }", "-        }", "-        return false;", "+        return currentType == TokenTypes.COLON", "+                && (parentType == TokenTypes.LITERAL_DEFAULT", "+                    || parentType == TokenTypes.LITERAL_CASE);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0620ff4af88b81a6b90c60f78c41b8a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/InnerTypeLastCheck.java", "commitBeforeChange": "a94d50133e2b6bc791c8e1181a77338bd70720ee", "commitAfterChange": "4c384214a90272fe239b76e35ec5bcb87ef4b080", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-            while (null != nextSibling", "-                && ((nextSibling.getType() != TokenTypes.CLASS_DEF)", "-                    || (nextSibling.getType() != TokenTypes.INTERFACE_DEF)))", "-            {", "-                if (nextSibling.getType() == TokenTypes.VARIABLE_DEF", "-                        || nextSibling.getType() == TokenTypes.METHOD_DEF)", "+            while (null != nextSibling) {", "+                if (!ScopeUtils.inCodeBlock(aAST)", "+                    && (nextSibling.getType() == TokenTypes.VARIABLE_DEF", "+                        || nextSibling.getType() == TokenTypes.METHOD_DEF))"]}]}