{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86480de5e45d51a285317b00a927edaa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f536e11b8237b53e569639e587de2b6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "ecd2e62dd43ac4640dc13a2f860874930538779a", "commitAfterChange": "e195128381e3d20a922411e2dea4c6496f3be1a3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private DetailAST skipAnnotationOnlyLines(DetailAST aAST)", "signatureAfterChange": "     private DetailAST skipAnnotationOnlyLines(DetailAST aAST)", "diff": ["-        else {", "-            final int lastAnnotLineNumber = lastAnnot.getLineNo();", "-            while (lastAnnot.getPreviousSibling() != null", "-                   && (lastAnnot.getPreviousSibling().getLineNo()", "-                        == lastAnnotLineNumber))", "-            {", "-                lastAnnot = lastAnnot.getPreviousSibling();", "-            }", "-            return lastAnnot;", "+        final int lastAnnotLineNumber = lastAnnot.getLineNo();", "+        while (lastAnnot.getPreviousSibling() != null", "+               && (lastAnnot.getPreviousSibling().getLineNo()", "+                    == lastAnnotLineNumber))", "+        {", "+            lastAnnot = lastAnnot.getPreviousSibling();", "+        return lastAnnot;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c0a84c9c3873e08229fedc3c4052413", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "603c5bb53ea12900f6a1c8af0c4a765af36786e3", "commitAfterChange": "7e1062dea1fae14b90ae6461625c259ed944d1e4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static DetailAST skipAnnotationOnlyLines(DetailAST ast)", "signatureAfterChange": "     private static DetailAST skipAnnotationOnlyLines(DetailAST ast)", "diff": ["-            DetailAST lastAnnotation = findLastAnnotation(modifiers);", "+            final DetailAST lastAnnotation = findLastAnnotation(modifiers);", "-                    final int lastAnnotationLineNumber = lastAnnotation.getLineNo();", "-                    while (lastAnnotation.getPreviousSibling() != null", "-                           && lastAnnotation.getPreviousSibling().getLineNo()", "-                               == lastAnnotationLineNumber) {", "-", "-                        lastAnnotation = lastAnnotation.getPreviousSibling();", "-                    }", "-                    resultNode = lastAnnotation;", "+                    resultNode = getFirstAnnotationOnSameLine(lastAnnotation);"]}]}