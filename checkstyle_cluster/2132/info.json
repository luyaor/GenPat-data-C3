{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef2f489de7b3ec15941f17c7cabf90af", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "304d3518892689ae0139df5fc3bc0c19", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        Arrays.fill(mCounts, 0);", "-        countTokens(aAST, 0);", "+        Arrays.fill(counts, 0);", "+        countTokens(ast, 0);", "-        final String name = TokenTypes.getTokenName(aAST.getType());", "+        final String name = TokenTypes.getTokenName(ast.getType());", "-        if (mSumTokenCounts) {", "+        if (sumTokenCounts) {", "-            for (int element : mLimitedTokens) {", "-                total += mCounts[element - 1];", "+            for (int element : limitedTokens) {", "+                total += counts[element - 1];", "-            if (total < mMinimumNumber) {", "-                log(aAST.getLineNo(), aAST.getColumnNo(),", "-                        (null == mMinimumMessage) ? \"descendant.token.sum.min\"", "-                                : mMinimumMessage,", "+            if (total < minimumNumber) {", "+                log(ast.getLineNo(), ast.getColumnNo(),", "+                        (null == minimumMessage) ? \"descendant.token.sum.min\"", "+                                : minimumMessage,", "-                        String.valueOf(mMinimumNumber), name);", "+                        String.valueOf(minimumNumber), name);", "-            if (total > mMaximumNumber) {", "-                log(aAST.getLineNo(), aAST.getColumnNo(),", "-                        (null == mMaximumMessage) ? \"descendant.token.sum.max\"", "-                                : mMaximumMessage,", "+            if (total > maximumNumber) {", "+                log(ast.getLineNo(), ast.getColumnNo(),", "+                        (null == maximumMessage) ? \"descendant.token.sum.max\"", "+                                : maximumMessage,", "-                        String.valueOf(mMaximumNumber),", "+                        String.valueOf(maximumNumber),", "-            for (int element : mLimitedTokens) {", "-                final int tokenCount = mCounts[element - 1];", "-                if (tokenCount < mMinimumNumber) {", "+            for (int element : limitedTokens) {", "+                final int tokenCount = counts[element - 1];", "+                if (tokenCount < minimumNumber) {", "-                    log(aAST.getLineNo(), aAST.getColumnNo(),", "-                            (null == mMinimumMessage) ? \"descendant.token.min\"", "-                                    : mMinimumMessage,", "+                    log(ast.getLineNo(), ast.getColumnNo(),", "+                            (null == minimumMessage) ? \"descendant.token.min\"", "+                                    : minimumMessage,", "-                            String.valueOf(mMinimumNumber),", "+                            String.valueOf(minimumNumber),", "-                if (tokenCount > mMaximumNumber) {", "+                if (tokenCount > maximumNumber) {", "-                    log(aAST.getLineNo(), aAST.getColumnNo(),", "-                            (null == mMaximumMessage) ? \"descendant.token.max\"", "-                                    : mMaximumMessage,", "+                    log(ast.getLineNo(), ast.getColumnNo(),", "+                            (null == maximumMessage) ? \"descendant.token.max\"", "+                                    : maximumMessage,", "-                            String.valueOf(mMaximumNumber),", "+                            String.valueOf(maximumNumber),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d243e73aaab1bb5419cce005d83134e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "3d56a294c07f425b7cf8fc9b48e41c3e531c8385", "commitAfterChange": "6a5d1ff83441b0163195dbac42aa872edf5dbee7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-", "-        for (int element : mLimitedTokens) {", "-            final int tokenCount = mCounts[element - 1];", "-            if (tokenCount < mMinimumNumber) {", "-                final String descendantName =", "-                    TokenTypes.getTokenName(element);", "-                log(aAST.getLineNo(), aAST.getColumnNo(), mMinimumMessage,", "-                    \"\" + tokenCount, \"\" + mMinimumNumber,", "-                    name, descendantName);", "+        if (mSumTokenCounts) {", "+            int total = 0;", "+            for (int element : mLimitedTokens) {", "+                total += mCounts[element - 1];", "-            if (tokenCount > mMaximumNumber) {", "-                final String descendantName =", "-                    TokenTypes.getTokenName(element);", "-                log(aAST.getLineNo(), aAST.getColumnNo(), mMaximumMessage,", "-                    \"\" + tokenCount, \"\" + mMaximumNumber,", "-                    name, descendantName);", "+            if (total < mMinimumNumber) {", "+                log(aAST.getLineNo(), aAST.getColumnNo(),", "+                        (null == mMinimumMessage) ? \"descendant.token.sum.min\"", "+                                : mMinimumMessage,", "+                        String.valueOf(total),", "+                        String.valueOf(mMinimumNumber), name);", "+            }", "+            if (total > mMaximumNumber) {", "+                log(aAST.getLineNo(), aAST.getColumnNo(),", "+                        (null == mMaximumMessage) ? \"descendant.token.sum.max\"", "+                                : mMaximumMessage,", "+                        String.valueOf(total),", "+                        String.valueOf(mMaximumNumber),", "+                        name);", "+            }", "+        }", "+        else {", "+            for (int element : mLimitedTokens) {", "+                final int tokenCount = mCounts[element - 1];", "+                if (tokenCount < mMinimumNumber) {", "+                    final String descendantName = TokenTypes", "+                            .getTokenName(element);", "+                    log(aAST.getLineNo(), aAST.getColumnNo(),", "+                            (null == mMinimumMessage) ? \"descendant.token.min\"", "+                                    : mMinimumMessage,", "+                            String.valueOf(tokenCount),", "+                            String.valueOf(mMinimumNumber),", "+                            name,", "+                            descendantName);", "+                }", "+                if (tokenCount > mMaximumNumber) {", "+                    final String descendantName = TokenTypes", "+                            .getTokenName(element);", "+                    log(aAST.getLineNo(), aAST.getColumnNo(),", "+                            (null == mMaximumMessage) ? \"descendant.token.max\"", "+                                    : mMaximumMessage,", "+                            String.valueOf(tokenCount),", "+                            String.valueOf(mMaximumNumber),", "+                            name,", "+                            descendantName);", "+                }"]}]}