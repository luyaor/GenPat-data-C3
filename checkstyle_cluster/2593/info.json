{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7206c0eb7f65d6a12d9af421f4e07ddf", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63785b887ef5a1c3e350f33d4ab387fb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "410111f1dcee8241b7649a83675281693a3067ec", "commitAfterChange": "e853ed726fc5ea30084202fa72c8117147fedb2b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static Configuration loadConfiguration(String aConfigFname,                                                   Properties aOverrideProps)         throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(         String aConfig, Properties aOverrideProps)         throws CheckstyleException", "diff": ["-    public static Configuration loadConfiguration(String aConfigFname,", "-                                                  Properties aOverrideProps)", "+    public static Configuration loadConfiguration(", "+        String aConfig, Properties aOverrideProps)", "-            loader.parseFile(aConfigFname);", "+            // figure out if this is a File or a URL", "+            InputStream configStream;", "+            try {", "+                URL url = new URL(aConfig);", "+                configStream = url.openStream();", "+            }", "+            catch (MalformedURLException ex) {", "+                configStream = new FileInputStream(aConfig);", "+            }", "+            final InputStream bufferedStream =", "+                new BufferedInputStream(configStream);", "+            loader.parseInputStream(bufferedStream);", "+            bufferedStream.close();", "-                \"unable to find \" + aConfigFname, e);", "+                \"unable to find \" + aConfig, e);", "-                \"unable to parse \" + aConfigFname, e);", "+                \"unable to parse \" + aConfig, e);", "-                    + aConfigFname + \" - \" + e.getMessage(), e);", "+                    + aConfig + \" - \" + e.getMessage(), e);", "-            throw new CheckstyleException(\"unable to read \" + aConfigFname, e);", "+            throw new CheckstyleException(\"unable to read \" + aConfig, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d08d8e70eb322e57d59b4b54afd3580e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static Configuration loadConfiguration(String aConfig,         PropertyResolver aOverridePropsResolver, boolean aOmitIgnoredModules)         throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(String config,         PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "diff": ["-    public static Configuration loadConfiguration(String aConfig,", "-        PropertyResolver aOverridePropsResolver, boolean aOmitIgnoredModules)", "+    public static Configuration loadConfiguration(String config,", "+        PropertyResolver overridePropsResolver, boolean omitIgnoredModules)", "-                final URL url = new URL(aConfig);", "+                final URL url = new URL(config);", "-                final File file = new File(aConfig);", "+                final File file = new File(config);", "-                                .getResource(aConfig);", "+                                .getResource(config);", "-                            throw new FileNotFoundException(aConfig);", "+                            throw new FileNotFoundException(config);", "-                        throw new FileNotFoundException(aConfig);", "+                        throw new FileNotFoundException(config);", "-            return loadConfiguration(source, aOverridePropsResolver,", "-                    aOmitIgnoredModules);", "+            return loadConfiguration(source, overridePropsResolver,", "+                    omitIgnoredModules);", "-            throw new CheckstyleException(\"unable to find \" + aConfig, e);", "+            throw new CheckstyleException(\"unable to find \" + config, e);", "-            throw new CheckstyleException(\"unable to read \" + aConfig + \" - \"", "+            throw new CheckstyleException(\"unable to read \" + config + \" - \""]}]}