{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a288baf3daba50e5d39882ff0f4970be", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72959db7057603549df3ea1dc23fc6d2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "dcf0d774fa59e2131e4bb2f50523da10ce3305af", "commitAfterChange": "7af9e82fc16545a8153b529fba91df0fb310e2e6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static DetailAST parseFile(String aFileName)         throws IOException, ANTLRException", "signatureAfterChange": "     public static DetailAST parseFile(String aFileName)         throws IOException, ANTLRException", "diff": ["-        final CommentManager cmgr = new CommentManager(lines);", "-        return Checker.parse(lines, aFileName, cmgr);", "+        final FileContents contents = new FileContents(aFileName, lines);", "+        return Checker.parse(contents);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7e4d1127c82e642a5840a6ba950a03a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "dcf0d774fa59e2131e4bb2f50523da10ce3305af", "commitAfterChange": "7af9e82fc16545a8153b529fba91df0fb310e2e6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private int processNEW(String aFileName)", "signatureAfterChange": "     private int processNEW(String aFileName)", "diff": ["-            final CommentManager cmgr = new CommentManager(lines);", "-            DetailAST rootAST = parse(lines, aFileName, cmgr);", "-            // ParseTreeInfoPanel.show(rootAST);", "-            mWalker.walk(rootAST, lines, aFileName);", "+            final FileContents contents = new FileContents(aFileName, lines);", "+            final DetailAST rootAST = parse(contents);", "+            mWalker.walk(rootAST, contents);"]}]}