{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8cb5286377dda9b2c98d50cca5cb07f3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9142eaa8fa336a0c856e9c4c5d744f9c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java", "commitBeforeChange": "fc8a5ae78cffc8f6d5951a72fc722c52dedc1d04", "commitAfterChange": "bf16d371dab210594755d04afc4697269ed088c0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     protected void processFiltered(File aFile, List<String> aLines)", "diff": ["-    public void beginTree(DetailAST aRootAST)", "+    protected void processFiltered(File aFile, List<String> aLines)", "-        if (getHeaderLines().length > getLines().length) {", "+        if (getHeaderLines().size() > aLines.size()) {", "-            for (int i = 0; i < getHeaderLines().length; i++) {", "-                if (!isMatch(i)) {", "-                    log(i + 1, \"header.mismatch\", getHeaderLines()[i]);", "+            for (int i = 0; i < getHeaderLines().size(); i++) {", "+                if (!isMatch(i, aLines.get(i))) {", "+                    log(i + 1, \"header.mismatch\", getHeaderLines().get(i));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e11783a97f05fa7b7fdd17adb0d5d43", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "1ca4d43ce82995b50f2a4b770a053cb74d4d78c4", "commitAfterChange": "a1dda4f264d1201f055c29d6980e0f353bb063c7", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     private void checkHeader()", "signatureAfterChange": "     private void checkHeader()", "diff": ["-                String headerLine = mConfig.getHeaderLines()[i];", "+                // skip lines we are meant to ignore", "+                if (i == (mConfig.getHeaderIgnoreLineNo() - 1)) {", "+                    continue;", "+                }", "+", "+                final String headerLine = mConfig.getHeaderLines()[i];", "-                // re-compilation when multiple files are checked", "-                boolean match =", "+                // re-compilation when multiple files are checked. Will wait", "+                // until this is shown to be a performance problem.", "+                final boolean match =", "-                if ((i != (mConfig.getHeaderIgnoreLineNo() - 1)) && !match)", "+                if (!match)"]}]}