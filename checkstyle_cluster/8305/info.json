{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59b6c8dc64870a38464a5847694d955c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcdbe7108d28a3ba54ac0137625182b8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "1b5132b7f86b5ee1e88962ddb7a107ce759563e9", "commitAfterChange": "2bd61975dfc9f6ada80ec009d46f6c95d483b5bf", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private boolean checkTry(final DetailAST ast, boolean useBreak,                              boolean useContinue)", "signatureAfterChange": "     private boolean checkTry(final DetailAST ast, boolean useBreak,                              boolean useContinue)", "diff": ["+        boolean isTerminated = false;", "-            return isTerminated(finalStmt.findFirstToken(TokenTypes.SLIST),", "+            isTerminated = isTerminated(finalStmt.findFirstToken(TokenTypes.SLIST),", "-        boolean isTerminated = isTerminated(ast.getFirstChild(),", "-                                            useBreak, useContinue);", "+        if (!isTerminated) {", "+            isTerminated = isTerminated(ast.getFirstChild(),", "+                    useBreak, useContinue);", "-        DetailAST catchStmt = ast.findFirstToken(TokenTypes.LITERAL_CATCH);", "-        while (catchStmt != null && isTerminated) {", "-            final DetailAST catchBody =", "-                catchStmt.findFirstToken(TokenTypes.SLIST);", "-            isTerminated &= isTerminated(catchBody, useBreak, useContinue);", "-            catchStmt = catchStmt.getNextSibling();", "+            DetailAST catchStmt = ast.findFirstToken(TokenTypes.LITERAL_CATCH);", "+            while (catchStmt != null", "+                    && isTerminated", "+                    && catchStmt.getType() == TokenTypes.LITERAL_CATCH) {", "+                final DetailAST catchBody =", "+                        catchStmt.findFirstToken(TokenTypes.SLIST);", "+                isTerminated = isTerminated(catchBody, useBreak, useContinue);", "+                catchStmt = catchStmt.getNextSibling();", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f24a25921e36d99494b562b045fd354a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IllegalInstantiationCheck.java", "commitBeforeChange": "acc3f40015ffe1263cfa684ca4b29939249e9aed", "commitAfterChange": "c2b22a74a2e85bbb2cfd4e0e2379bb062cb58dd1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void processLiteralNew(DetailAST aAST)", "signatureAfterChange": "     private void processLiteralNew(DetailAST aAST)", "diff": ["+", "+        AST nameSibling = typeNameAST.getNextSibling();", "+        if (nameSibling != null", "+                && nameSibling.getType() == TokenTypes.ARRAY_DECLARATOR)", "+        {", "+            // aAST == \"new Boolean[]\"", "+            return;", "+        }", "+"]}]}