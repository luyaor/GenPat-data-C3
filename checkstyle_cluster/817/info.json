{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1a789fa2455ee9fc87c3b8d5f5c6af6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03687bc9508b48808b1e01b0458d0e65", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "408dd9d71d40a3f8f24dfff1972366f3f86faa40", "commitAfterChange": "f9b7912c9742d652987136108d675feba60458d0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private String getPackageName()", "signatureAfterChange": "     private String getPackageName()", "diff": ["-        for (String subPackage : packageStack) {", "+        final Iterator<String> iterator = packageStack.descendingIterator();", "+        while (iterator.hasNext()) {", "+            final String subPackage = iterator.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "255d960be58c1673125157ddaf7b6289", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private void tagCommentLine(String aText, int aLine, int aColumn)", "signatureAfterChange": "     private void tagCommentLine(String aText, int aLine, int aColumn)", "diff": ["-        if (mOffRegexp.match(aText)) {", "-            addTag(mOffRegexp.getParen(0), aLine, aColumn, false);", "+        Matcher offMatcher = mOffRegexp.matcher(aText);", "+        if (offMatcher.find()) {", "+            addTag(offMatcher.group(0), aLine, aColumn, false);", "-        else if (mOnRegexp.match(aText)) {", "-            addTag(mOnRegexp.getParen(0), aLine, aColumn, true);", "+        else {", "+            Matcher onMatcher = mOnRegexp.matcher(aText);", "+            if (onMatcher.find()) {", "+                addTag(onMatcher.group(0), aLine, aColumn, true);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42fe37467af5f4e260b3f37e2e930787", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "contrib/bcel/src/checkstyle/com/puppycrawl/tools/checkstyle/bcel/checks/UnusedMethodCheck.java", "commitBeforeChange": "731b581a1c0406506266226c50be8796179464e5", "commitAfterChange": "db428ff350e76d0609e192fc48314cf226677fde", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "         protected boolean ignore(String aClassName, Method aMethod)", "signatureAfterChange": "     public boolean ignore(String aClassName, Method aMethod)", "diff": ["-     */    ", "-    protected boolean ignore(String aClassName, Method aMethod)", "-    {", "-        return ignore(aClassName, aMethod.getName());", "-    }", "+    public boolean ignore(String aClassName, Method aMethod)", "+        final String methodName = aMethod.getName();", "+        return (super.ignore(aClassName, aMethod)", "+            || methodName.equals(\"<init>\")", "+            || methodName.equals(\"<clinit>\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b002567c4f0826e3131a25818432f9e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "93587ecf374c8dd9f040fd3667efc47a3d84ff5d", "commitAfterChange": "b06e2e0015944ceaa74a10134bf06ac5c9e53782", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private boolean isMatchingClassName(String aClassName)", "signatureAfterChange": "     private boolean isMatchingClassName(String aClassName)", "diff": ["-        return mIllegalClassNames.contains(aClassName)", "+        final String shortName = aClassName.substring(aClassName.lastIndexOf(\".\") + 1);", "+        return (mIllegalClassNames.contains(aClassName)", "+                || mIllegalClassNames.contains(shortName))", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6248c3729f59101f912b269a8c678868", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/HiddenFieldCheck.java", "commitBeforeChange": "215db57b5f472bc644456939bd830206bc55d79e", "commitAfterChange": "0b38b65f919bd7b3d8a440c459ce754a4a840b03", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void processVariable(DetailAST aAST)", "signatureAfterChange": "     private void processVariable(DetailAST aAST)", "diff": ["-                final HashSet currentFieldsSet = (HashSet)mFieldsStack.getLast();", "-                if (currentFieldsSet.contains(name)) {", "-                    log(nameAST.getLineNo(), nameAST.getColumnNo(),", "-                        \"hidden.field\", name);", "+                Iterator it = mFieldsStack.iterator();", "+                while (it.hasNext()) {", "+                    final HashSet aFieldsSet = (HashSet)it.next();", "+                    if (aFieldsSet.contains(name)) {", "+                        log(nameAST.getLineNo(), nameAST.getColumnNo(),", "+                            \"hidden.field\", name);", "+                        break;", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "847f22b28d2b30ed3e448a417f227426", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "32c3ee46e34a8b400148ca82d97fa8363a34f6d1", "commitAfterChange": "e8a1b54e7935ff07c181f7d2130d55dbb29baddc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void addError(AuditEvent aEvt)", "signatureAfterChange": "     public void addError(AuditEvent aEvt)", "diff": ["-        if (!SeverityLevel.IGNORE.equals(aEvt.getSeverityLevel())) {", "+        final SeverityLevel severityLevel = aEvt.getSeverityLevel();", "+        if (!SeverityLevel.IGNORE.equals(severityLevel)) {", "+            if (SeverityLevel.WARNING.equals(severityLevel)) {", "+                sb.append(\": warning\");", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d130efdec1ff8d38ed314bbd443569b1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "         public boolean isMatch(AuditEvent aEvent)", "signatureAfterChange": "         public boolean isMatch(AuditEvent aEvent)", "diff": ["-            if (mTagCheckRegexp.match(aEvent.getSourceName())) {", "+            Matcher tagMatcher =", "+                mTagCheckRegexp.matcher(aEvent.getSourceName());", "+            if (tagMatcher.find()) {", "-                return mTagMessageRegexp.match(aEvent.getMessage());", "+                Matcher messageMatcher =", "+                    mTagMessageRegexp.matcher(aEvent.getMessage());", "+                return messageMatcher.find();"]}]}