{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "576733e88a3b4d84f3d24ad32468476b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00ce4622ffb3dffa103f5900caf5ca42", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java", "commitBeforeChange": "521dacce7582a4349a9b02980c3e849e83c023fb", "commitAfterChange": "82d8e91024a57a96fbb6410dacb29d6a3f582903", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public static String getTagName(DetailNode javadocTagSection)", "signatureAfterChange": "     public static String getTagName(DetailNode javadocTagSection)", "diff": ["-            javadocTagName = JavadocUtils.getNextSibling(", "-                    JavadocUtils.getFirstChild(javadocTagSection)).getText();", "+            javadocTagName = getNextSibling(", "+                    getFirstChild(javadocTagSection)).getText();", "-            javadocTagName = JavadocUtils.getFirstChild(javadocTagSection).getText();", "+            javadocTagName = getFirstChild(javadocTagSection).getText();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a442dec9b0b9866b0cc025850739d64", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java", "commitBeforeChange": "1ef123bf60e8f4ba348f2e6399175dee62f016b2", "commitAfterChange": "bc034f53c0b807bc1a4234a3c0313d3761ed5b62", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testDestroyNonExistingCache() throws Exception", "signatureAfterChange": "      @Test     public void testDestroyNonExistingCache() throws Exception", "diff": ["+", "+        // We use assumption to satisfy coverage rate on OS Windows, since persist() method of", "+        // class PropertyCacheFile does not throw IOException on OS Linux when path to a cache", "+        // directory is invalid on OS Windows.", "+        Assume.assumeTrue(System.getProperty(\"os.name\")", "+            .toLowerCase(Locale.ENGLISH).startsWith(\"windows\"));", "+", "+        final TreeWalker treeWalker = new TreeWalker();", "+        treeWalker.configure(new DefaultConfiguration(\"default config\"));", "+        final String tempFilePath = temporaryFolder.newFile().getPath() + \".\\\\\\'\";", "+        treeWalker.setCacheFile(tempFilePath);", "+        try {", "+            treeWalker.destroy();", "+            fail(\"Exception did not happen\");", "+        }", "+        catch (IllegalStateException ex) {", "+            assertTrue(ex.getCause() instanceof IOException);", "+        }", "+    }", "-            assertTrue(ex.getCause() instanceof IOException);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31de441f0efe95fe3c155d55215d6936", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "78a5fd3494e8f3fe6e5edd0925f46b43583451fe", "commitAfterChange": "3cd6646941eca3da7d3b9a221c88e4c1d214876e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private String[] extractCComment(int aStartLineNo, int aStartColNo,             int aEndLineNo, int aEndColNo)", "signatureAfterChange": "     private String[] extractCComment(int aStartLineNo, int aStartColNo,             int aEndLineNo, int aEndColNo)", "diff": ["-            retVal[0] = mLines[aStartLineNo - 1].substring(aStartColNo,", "+            retVal[0] = line(aStartLineNo - 1).substring(aStartColNo,", "-            retVal[0] = mLines[aStartLineNo - 1].substring(aStartColNo);", "+            retVal[0] = line(aStartLineNo - 1).substring(aStartColNo);", "-                retVal[i - aStartLineNo + 1] = mLines[i];", "+                retVal[i - aStartLineNo + 1] = line(i);", "-            retVal[retVal.length - 1] = mLines[aEndLineNo - 1].substring(0,", "+            retVal[retVal.length - 1] = line(aEndLineNo - 1).substring(0,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73a1be96ae09b7c8e45398d60dbd0258", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/InputValidLabelIndent.java", "commitBeforeChange": "992678f1baf3a7f6a1cf579232457bd97d408e4d", "commitAfterChange": "edb810c10e121b34f4222a4bba9012add00f1e41", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public InputValidLabelIndent()", "signatureAfterChange": "     public InputValidLabelIndent()", "diff": ["-            System.out.println(\"label test\"); //indent:12 exp:12,16", "+            System.identityHashCode(\"label test\"); //indent:12 exp:12,16", "-                System.out.println(\"more testing\"); //indent:16 exp:16,20", "+                System.identityHashCode(\"more testing\"); //indent:16 exp:16,20", "-        System.out.println(\"toplevel\"); //indent:8 exp:8,12", "+        System.identityHashCode(\"toplevel\"); //indent:8 exp:8,12"]}]}