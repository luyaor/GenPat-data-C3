{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f5c95d882b915125536a975c2e5c1d0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d736887bc3ce218127933c2deecadc5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "325b265cc583468dd495088e95f316a2ba10c4af", "commitAfterChange": "1fe8bcab1aba206e442d1991f0fea255c445bb14", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r     private void processEnd(DetailAST aAST)", "signatureAfterChange": "\r     private void processEnd(DetailAST aAST)", "diff": ["-                // In a nested Generic type, so can only be a '>'\r", "-                if (line.charAt(after) != '>') {\r", "+                // In a nested Generic type, so can only be a '>' or ','\r", "+                if ((line.charAt(after) != '>') && (line.charAt(after) != ','))\r", "+                {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58acfba8617ca4c1630e0e3416a997f7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheck.java", "commitBeforeChange": "5ce771ac776af4197ce832792a049e9357ca90b8", "commitAfterChange": "1d614c3a7ecf8a3ede4df8a50da46e71792d0025", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void findDuplicateFromLine(         final int aI, final int aJ, final int aILine,         final int[] aJLines, final Multimap<Integer, Integer> aIgnore)", "signatureAfterChange": "     private void findDuplicateFromLine(         final int aI, final int aJ, final int aILine,         final int[] aJLines, final Multimap<Integer, Integer> aIgnore)", "diff": ["-            // avoid Integer constructor whenever we can", "-            if (ignoreEntries != null) {", "-                if (ignoreEntries.contains(jLine)) {", "-                    continue;", "-                }", "+            if (ignoreEntries != null && ignoreEntries.contains(jLine)) {", "+                continue;"]}]}