{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "461a16479afe53e71c640b193739f9ca", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07347b09c24fae38c5e14b7403d11b48", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-    public void leaveToken(DetailAST aAST)", "+    public void leaveToken(DetailAST ast)", "-        if ((TokenTypes.CLASS_DEF == aAST.getType())", "-            || (TokenTypes.INTERFACE_DEF == aAST.getType())", "-            || (TokenTypes.ENUM_CONSTANT_DEF == aAST.getType())", "-            || (TokenTypes.ENUM_DEF == aAST.getType()))", "+        if ((TokenTypes.CLASS_DEF == ast.getType())", "+            || (TokenTypes.INTERFACE_DEF == ast.getType())", "+            || (TokenTypes.ENUM_CONSTANT_DEF == ast.getType())", "+            || (TokenTypes.ENUM_DEF == ast.getType()))", "-            final MethodCounter counter = mCounters.pop();", "-            checkCounters(counter, aAST);", "+            final MethodCounter counter = counters.pop();", "+            checkCounters(counter, ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7798446946cea9a6d1c9e0e73a352274", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if ((TokenTypes.CLASS_DEF == aAST.getType())", "-            || (TokenTypes.INTERFACE_DEF == aAST.getType())", "-            || (TokenTypes.ENUM_CONSTANT_DEF == aAST.getType())", "-            || (TokenTypes.ENUM_DEF == aAST.getType()))", "+        if ((TokenTypes.CLASS_DEF == ast.getType())", "+            || (TokenTypes.INTERFACE_DEF == ast.getType())", "+            || (TokenTypes.ENUM_CONSTANT_DEF == ast.getType())", "+            || (TokenTypes.ENUM_DEF == ast.getType()))", "-            mCounters.push(new MethodCounter(", "-                TokenTypes.INTERFACE_DEF == aAST.getType()));", "+            counters.push(new MethodCounter(", "+                TokenTypes.INTERFACE_DEF == ast.getType()));", "-        else if (TokenTypes.METHOD_DEF == aAST.getType()) {", "-            raiseCounter(aAST);", "+        else if (TokenTypes.METHOD_DEF == ast.getType()) {", "+            raiseCounter(ast);"]}]}