{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c9e5c1060546e1573931d65eef279f0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "252dc01e3bac94cdb7fba94f0b1d95e1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "63fc2b75aae255f9e552d034944dac6ac6829dd4", "commitAfterChange": "e5ad46010b48faba1367b8384dcd9f55d9ed10b7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean isConstantDefinition(DetailAST aAST)", "signatureAfterChange": "     private boolean isConstantDefinition(DetailAST aAST)", "diff": ["-        //UNARY_MINUS or UNARY_PLUS should be ignored", "-        if ((parent.getType() == TokenTypes.UNARY_MINUS)", "-            || (parent.getType() == TokenTypes.UNARY_PLUS))", "+        //skip TYPECAST, UNARY_MINUS, UNARY_PLUS", "+        while ((parent.getType() == TokenTypes.UNARY_MINUS)", "+            || (parent.getType() == TokenTypes.UNARY_PLUS)", "+            || (parent.getType() == TokenTypes.TYPECAST))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36466a28f82b9aa939bad94cfb0d804e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/WhitespaceAroundCheck.java", "commitBeforeChange": "01d27913a71c29d6a769ed98ca7dd4ba01fe31eb", "commitAfterChange": "4cbd709c019cf1b69796858506d673f7b66d37c7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        if ((aAST.getType() == RCURLY)", "-            && (aAST.getParent().getType() == ARRAY_INIT))", "+        if ((aAST.getType() == TokenTypes.RCURLY)", "+            && (aAST.getParent().getType() == TokenTypes.ARRAY_INIT))", "-            && !((aAST.getType() == LITERAL_return)", "+            && !((aAST.getType() == TokenTypes.LITERAL_RETURN)"]}]}