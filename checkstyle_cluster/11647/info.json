{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a898a9be0cb3a513796a1eb776023ae", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d789e4918c7a1f8fe203f02b68dd201", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "ea704b1cfd23923b91679828ca0bca0035944478", "commitAfterChange": "5c481899d4cfcb8369dcd0851aef21c2d8c5088a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Override     public final void visitToken(DetailAST aBlockCommentAst)", "signatureAfterChange": "      @Override     public final void visitToken(DetailAST aBlockCommentAst)", "diff": ["-                final LocalizedMessage parseErrorMessage = ps.getParseErrorMessage();", "-                log(parseErrorMessage.getLineNo(), parseErrorMessage.getMessage());", "+                final ParseErrorMessage parseErrorMessage = ps.getParseErrorMessage();", "+                log(parseErrorMessage.getLineNumber(),", "+                        parseErrorMessage.getMessageKey(),", "+                        parseErrorMessage.getMessageArguments());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "654c368e9c8c1fab6a00d4f0bdad5882", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "443e534a3c98c0b30f24647da724fe918f17a006", "commitAfterChange": "66d73fe6189267fee3423e2e8d7fc2d68599a43f", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "     private void checkThrowsTags(List<JavadocTag> tags,             List<ExceptionInfo> throwsList, boolean reportExpectedTags)", "signatureAfterChange": "     private void checkThrowsTags(List<JavadocTag> tags,             List<ExceptionInfo> throwsList, boolean reportExpectedTags)", "diff": ["-            final String documentedEx = tag.getArg1();", "-            final Token token = new Token(tag.getArg1(), tag.getLineNo(), tag", "+            final String documentedEx = tag.getFirstArg();", "+            final Token token = new Token(tag.getFirstArg(), tag.getLineNo(), tag", "-                        JavadocTagInfo.THROWS.getText(), tag.getArg1());", "+                        JavadocTagInfo.THROWS.getText(), tag.getFirstArg());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7673566cc21b03f027d1e503fc1f0341", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     private void checkThrowsTags(List<JavadocTag> tags,             List<ExceptionInfo> throwsList, boolean reportExpectedTags)", "signatureAfterChange": "     private void checkThrowsTags(List<JavadocTag> tags,             List<ExceptionInfo> throwsList, boolean reportExpectedTags)", "diff": ["-                    final Token fi = ei.getName();", "-                    log(fi.getLineNo(), fi.getColumnNo(),", "+                    final Token token = ei.getName();", "+                    log(token.getLineNo(), token.getColumnNo(),", "-                        JavadocTagInfo.THROWS.getText(), fi.getText());", "+                            JavadocTagInfo.THROWS.getText(), token.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df3fe5b0898a5db157eb08903e45d1e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "ea704b1cfd23923b91679828ca0bca0035944478", "commitAfterChange": "5c481899d4cfcb8369dcd0851aef21c2d8c5088a", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 27, "signatureBeforeChange": "         @Override         public void syntaxError(                 Recognizer<?, ?> aRecognizer, Object aOffendingSymbol,                 int aLine, int aCharPositionInLine,                 String aMsg, RecognitionException aEx)", "signatureAfterChange": "         @Override         public void syntaxError(                 Recognizer<?, ?> aRecognizer, Object aOffendingSymbol,                 int aLine, int aCharPositionInLine,                 String aMsg, RecognitionException aEx)", "diff": ["-                mErrorMessage = createLogMessage(lineNumber,", "+                mErrorMessage = new ParseErrorMessage(lineNumber,", "-                mErrorMessage = createLogMessage(lineNumber,", "+                mErrorMessage = new ParseErrorMessage(lineNumber,", "-                    mErrorMessage = createLogMessage(lineNumber,", "+                    mErrorMessage = new ParseErrorMessage(lineNumber,", "-                    mErrorMessage = createLogMessage(lineNumber, JAVADOC_PARSE_TOKEN_ERROR,", "+                    mErrorMessage = new ParseErrorMessage(lineNumber, JAVADOC_PARSE_TOKEN_ERROR,"]}]}