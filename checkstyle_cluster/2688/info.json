{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eaa9714567d7d61e4de9627d940af041", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18d61132729e186b477cb1e159e58891", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "381544887c222baddc8d6aab9f266bf16bc118b5", "commitAfterChange": "36321e0cc61a3ef9db6a2a468e72bf79f0da6211", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testRemoveFilter() throws Exception", "signatureAfterChange": "      public void testRemoveFilter() throws Exception", "diff": ["-        c.fireAuditStarted();", "-        assertTrue(\"Checker.fireAuditStarted() doesn't call filter\", f2.wasCalled());", "-        assertFalse(\"Checker.fireAuditStarted() does call removed filter\", f.wasCalled());", "+ \t// we do call filter in fireErrors() only (fix for 1080343)", "+// \tc.fireAuditStarted();", "+//         assertTrue(\"Checker.fireAuditStarted() doesn't call filter\", f2.wasCalled());", "+//         assertFalse(\"Checker.fireAuditStarted() does call removed filter\", f.wasCalled());", "-        f2.resetFilter();", "-        c.fireAuditFinished();", "-        assertTrue(\"Checker.fireAuditFinished() doesn't call filter\", f2.wasCalled());", "-        assertFalse(\"Checker.fireAuditFinished() does call removed filter\", f.wasCalled());", "+ \t// we do call filter in fireErrors() only (fix for 1080343)", "+//         f2.resetFilter();", "+//         c.fireAuditFinished();", "+//         assertTrue(\"Checker.fireAuditFinished() doesn't call filter\", f2.wasCalled());", "+//         assertFalse(\"Checker.fireAuditFinished() does call removed filter\", f.wasCalled());", "-        f2.resetFilter();", "-        c.fireFileStarted(\"Some File Name\");", "-        assertTrue(\"Checker.fireFileStarted() doesn't call filter\", f2.wasCalled());", "-        assertFalse(\"Checker.fireFileStarted() does call removed filter\", f.wasCalled());", "+ \t// we do call filter in fireErrors() only (fix for 1080343)", "+//         f2.resetFilter();", "+//         c.fireFileStarted(\"Some File Name\");", "+//         assertTrue(\"Checker.fireFileStarted() doesn't call filter\", f2.wasCalled());", "+//         assertFalse(\"Checker.fireFileStarted() does call removed filter\", f.wasCalled());", "-        f2.resetFilter();", "-        c.fireFileFinished(\"Some File Name\");", "-        assertTrue(\"Checker.fireFileFinished() doesn't call filter\", f2.wasCalled());", "-        assertFalse(\"Checker.fireFileFinished() does call removed filter\", f.wasCalled());", "+ \t// we do call filter in fireErrors() only (fix for 1080343)", "+//         f2.resetFilter();", "+//         c.fireFileFinished(\"Some File Name\");", "+//         assertTrue(\"Checker.fireFileFinished() doesn't call filter\", f2.wasCalled());", "+//         assertFalse(\"Checker.fireFileFinished() does call removed filter\", f.wasCalled());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5561b0726023e12b67eeb91d3c2e14f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "3da466b9bfd816807a77d923fa2f323966d072bf", "commitAfterChange": "9ad235214f2376816f2af945a05368b38e77db88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "signatureAfterChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "diff": ["-        setAllowProtected(", "-            getBooleanProperty(aProps, ALLOW_PROTECTED_PROP, mAllowProtected));", "-        setAllowPackage(", "-            getBooleanProperty(aProps, ALLOW_PACKAGE_PROP, mAllowPackage));", "-        setAllowNoAuthor(", "-            getBooleanProperty(aProps, ALLOW_NO_AUTHOR_PROP, mAllowNoAuthor));", "+        setBooleanFlag(aProps, ALLOW_PROTECTED_PROP);", "+        setBooleanFlag(aProps, ALLOW_PACKAGE_PROP);", "+        setBooleanFlag(aProps, ALLOW_NO_AUTHOR_PROP);", "-        setRequirePackageHtml(getBooleanProperty(aProps,", "-                                                 REQUIRE_PACKAGE_HTML_PROP,", "-                                                 mRequirePackageHtml));", "-        setIgnoreImports(", "-            getBooleanProperty(aProps, IGNORE_IMPORTS_PROP, mIgnoreImports));", "+        setBooleanFlag(aProps, REQUIRE_PACKAGE_HTML_PROP);", "+        setBooleanFlag(aProps, IGNORE_IMPORTS_PROP);", "-        setIgnoreWhitespace(getBooleanProperty(aProps,", "-                                               IGNORE_WHITESPACE_PROP,", "-                                               mIgnoreWhitespace));", "-        setIgnoreCastWhitespace(getBooleanProperty(aProps,", "-                                                   IGNORE_CAST_WHITESPACE_PROP,", "-                                                   mIgnoreCastWhitespace));", "-        setIgnoreOpWrap(getBooleanProperty(aProps,", "-                                           IGNORE_OP_WRAP_PROP,", "-                                           mIgnoreOpWrap));", "-        setIgnoreBraces(getBooleanProperty(aProps,", "-                                           IGNORE_BRACES_PROP,", "-                                           mIgnoreBraces));", "-        setIgnoreLongEll(getBooleanProperty(aProps,", "-                                            IGNORE_LONG_ELL_PROP,", "-                                            mIgnoreLongEll));", "-        setIgnorePublicInInterface(getBooleanProperty(", "-            aProps, IGNORE_PUBLIC_IN_INTERFACE_PROP, mIgnorePublicInInterface));", "+        setBooleanFlag(aProps, IGNORE_WHITESPACE_PROP);", "+        setBooleanFlag(aProps, IGNORE_CAST_WHITESPACE_PROP);", "+        setBooleanFlag(aProps, IGNORE_OP_WRAP_PROP);", "+        setBooleanFlag(aProps, IGNORE_BRACES_PROP);", "+        setBooleanFlag(aProps, IGNORE_LONG_ELL_PROP);", "+        setBooleanFlag(aProps, IGNORE_PUBLIC_IN_INTERFACE_PROP);"]}]}