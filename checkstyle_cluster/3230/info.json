{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55417a734880ea3a2f2d3836ac66719e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e06415da64983248b3882436dfeae4d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setGroups(String[] aGroups)", "signatureAfterChange": "     public void setGroups(String[] packageGroups)", "diff": ["-    public void setGroups(String[] aGroups)", "+    public void setGroups(String[] packageGroups)", "-        mGroups = new Pattern[aGroups.length];", "+        groups = new Pattern[packageGroups.length];", "-        for (int i = 0; i < aGroups.length; i++) {", "-            String pkg = aGroups[i];", "+        for (int i = 0; i < packageGroups.length; i++) {", "+            String pkg = packageGroups[i];", "-            mGroups[i] = grp;", "+            groups[i] = grp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a297e21842c405cf20ef9a88a7992fb1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private int getGroupNumber(String aName)", "signatureAfterChange": "     private int getGroupNumber(String name)", "diff": ["-    private int getGroupNumber(String aName)", "+    private int getGroupNumber(String name)", "-        int bestIndex = mGroups.length;", "+        int bestIndex = groups.length;", "-        // loop over mGroups and get index", "-        for (int i = 0; i < mGroups.length; i++) {", "-            final Matcher matcher = mGroups[i].matcher(aName);", "+        // loop over groups and get index", "+        for (int i = 0; i < groups.length; i++) {", "+            final Matcher matcher = groups[i].matcher(name);"]}]}