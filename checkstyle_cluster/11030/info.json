{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f35c4e303b203ee756c66f3f21321051", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c208a6ece300ec0fe9a4eec51936494b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/ParseTreeBuilder.java", "commitBeforeChange": "65865d1adcf6e1579b7323d56117186db1ad96eb", "commitAfterChange": "b4c351b03d4a9d7dffc9a3502d17a41fb3e440b4", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public static ParseTree treeNegativeNumberInAttribute()", "signatureAfterChange": "      public static ParseTree treeNegativeNumberInAttribute()", "diff": ["-    public static ParseTree treeNegativeNumberInAttribute() {", "-        JavadocContext vfDcF = new JavadocContext(null, 0);", "-        HtmlElementContext wKROF = new HtmlElementContext(vfDcF, 0);", "-        HtmlTagContext EYqee = new HtmlTagContext(wKROF, 0);", "-        HtmlElementOpenContext aSmSu = new HtmlElementOpenContext(EYqee, 0);", "-        CommonToken xNCtb = new CommonToken(JavadocTokenTypes.OPEN, \"<\");", "-        aSmSu.addChild(xNCtb);", "-        CommonToken imaPh = new CommonToken(JavadocTokenTypes.HTML_TAG_NAME, \"font\");", "-        aSmSu.addChild(imaPh);", "-        CommonToken ogMrA = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        aSmSu.addChild(ogMrA);", "-        AttributeContext KmAMH = new AttributeContext(aSmSu, 0);", "-        CommonToken KJHXR = new CommonToken(JavadocTokenTypes.HTML_TAG_NAME, \"size\");", "-        KmAMH.addChild(KJHXR);", "-        CommonToken DdHka = new CommonToken(JavadocTokenTypes.EQUALS, \"=\");", "-        KmAMH.addChild(DdHka);", "-        CommonToken VZrDv = new CommonToken(JavadocTokenTypes.ATTR_VALUE, \"-2\");", "-        KmAMH.addChild(VZrDv);", "-        aSmSu.addChild(KmAMH);", "-        CommonToken SfwJg = new CommonToken(JavadocTokenTypes.CLOSE, \">\");", "-        aSmSu.addChild(SfwJg);", "-        EYqee.addChild(aSmSu);", "-        TextContext CVQte = new TextContext(EYqee, 0);", "-        CommonToken aNhAy = new CommonToken(JavadocTokenTypes.CHAR, \"T\");", "-        CVQte.addChild(aNhAy);", "-        CommonToken PMnir = new CommonToken(JavadocTokenTypes.CHAR, \"M\");", "-        CVQte.addChild(PMnir);", "-        EYqee.addChild(CVQte);", "-        HtmlElementCloseContext TaBhY = new HtmlElementCloseContext(EYqee, 0);", "-        CommonToken FPzZT = new CommonToken(JavadocTokenTypes.OPEN, \"<\");", "-        TaBhY.addChild(FPzZT);", "-        CommonToken UGqrj = new CommonToken(JavadocTokenTypes.SLASH, \"/\");", "-        TaBhY.addChild(UGqrj);", "-        CommonToken TnwEH = new CommonToken(JavadocTokenTypes.HTML_TAG_NAME, \"font\");", "-        TaBhY.addChild(TnwEH);", "-        CommonToken naGPO = new CommonToken(JavadocTokenTypes.CLOSE, \">\");", "-        TaBhY.addChild(naGPO);", "-        EYqee.addChild(TaBhY);", "-        wKROF.addChild(EYqee);", "-        vfDcF.addChild(wKROF);", "-        CommonToken rrjXS = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "-        vfDcF.addChild(rrjXS);", "-        return vfDcF;", "+", "+    public static ParseTree treeNegativeNumberInAttribute()", "+    {", "+        JavadocContext javadocContext0 = new JavadocContext(null, 0);", "+        HtmlElementContext htmlElementContext0 = new HtmlElementContext(javadocContext0, 0);", "+        HtmlTagContext htmlTagContext0 = new HtmlTagContext(htmlElementContext0, 0);", "+        HtmlElementOpenContext htmlElementOpenContext0 = new HtmlElementOpenContext(htmlTagContext0, 0);", "+        CommonToken open0 = new CommonToken(JavadocTokenTypes.OPEN, \"<\");", "+        htmlElementOpenContext0.addChild(open0);", "+        CommonToken htmlTagName0 = new CommonToken(JavadocTokenTypes.HTML_TAG_NAME, \"font\");", "+        htmlElementOpenContext0.addChild(htmlTagName0);", "+        CommonToken ws0 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        htmlElementOpenContext0.addChild(ws0);", "+        AttributeContext attributeContext0 = new AttributeContext(htmlElementOpenContext0, 0);", "+        CommonToken htmlTagName1 = new CommonToken(JavadocTokenTypes.HTML_TAG_NAME, \"size\");", "+        attributeContext0.addChild(htmlTagName1);", "+        CommonToken equals0 = new CommonToken(JavadocTokenTypes.EQUALS, \"=\");", "+        attributeContext0.addChild(equals0);", "+        CommonToken attrValue0 = new CommonToken(JavadocTokenTypes.ATTR_VALUE, \"-2\");", "+        attributeContext0.addChild(attrValue0);", "+        htmlElementOpenContext0.addChild(attributeContext0);", "+        CommonToken close0 = new CommonToken(JavadocTokenTypes.CLOSE, \">\");", "+        htmlElementOpenContext0.addChild(close0);", "+        htmlTagContext0.addChild(htmlElementOpenContext0);", "+        TextContext textContext0 = new TextContext(htmlTagContext0, 0);", "+        CommonToken char0 = new CommonToken(JavadocTokenTypes.CHAR, \"T\");", "+        textContext0.addChild(char0);", "+        CommonToken char1 = new CommonToken(JavadocTokenTypes.CHAR, \"M\");", "+        textContext0.addChild(char1);", "+        htmlTagContext0.addChild(textContext0);", "+        HtmlElementCloseContext htmlElementCloseContext0 = new HtmlElementCloseContext(htmlTagContext0, 0);", "+        CommonToken open1 = new CommonToken(JavadocTokenTypes.OPEN, \"<\");", "+        htmlElementCloseContext0.addChild(open1);", "+        CommonToken slash0 = new CommonToken(JavadocTokenTypes.SLASH, \"/\");", "+        htmlElementCloseContext0.addChild(slash0);", "+        CommonToken htmlTagName2 = new CommonToken(JavadocTokenTypes.HTML_TAG_NAME, \"font\");", "+        htmlElementCloseContext0.addChild(htmlTagName2);", "+        CommonToken close1 = new CommonToken(JavadocTokenTypes.CLOSE, \">\");", "+        htmlElementCloseContext0.addChild(close1);", "+        htmlTagContext0.addChild(htmlElementCloseContext0);", "+        htmlElementContext0.addChild(htmlTagContext0);", "+        javadocContext0.addChild(htmlElementContext0);", "+        CommonToken eof0 = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "+        javadocContext0.addChild(eof0);", "+        return javadocContext0;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0cb87e6e7dcf6e7f9bcc87238d10332", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/ParseTreeBuilder.java", "commitBeforeChange": "65865d1adcf6e1579b7323d56117186db1ad96eb", "commitAfterChange": "b4c351b03d4a9d7dffc9a3502d17a41fb3e440b4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public static ParseTree treeOneSimpleHtmlTag()", "signatureAfterChange": "      public static ParseTree treeOneSimpleHtmlTag()", "diff": ["-    public static ParseTree treeOneSimpleHtmlTag() {", "-        JavadocContext Rohae = new JavadocContext(null, 0);", "-        HtmlElementContext qazLp = new HtmlElementContext(Rohae, 0);", "-        HtmlTagContext tShZn = new HtmlTagContext(qazLp, 0);", "-        HtmlElementOpenContext mcNfy = new HtmlElementOpenContext(tShZn, 0);", "-        CommonToken skbCU = new CommonToken(JavadocTokenTypes.OPEN, \"<\");", "-        mcNfy.addChild(skbCU);", "-        CommonToken eOKbB = new CommonToken(JavadocTokenTypes.HTML_TAG_NAME, \"g\");", "-        mcNfy.addChild(eOKbB);", "-        CommonToken kSmfa = new CommonToken(JavadocTokenTypes.CLOSE, \">\");", "-        mcNfy.addChild(kSmfa);", "-        tShZn.addChild(mcNfy);", "-        TextContext NyvuY = new TextContext(tShZn, 0);", "-        CommonToken vYGan = new CommonToken(JavadocTokenTypes.CHAR, \"b\");", "-        NyvuY.addChild(vYGan);", "-        CommonToken DjqdT = new CommonToken(JavadocTokenTypes.CHAR, \"l\");", "-        NyvuY.addChild(DjqdT);", "-        CommonToken jSNqm = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "-        NyvuY.addChild(jSNqm);", "-        CommonToken Sqmta = new CommonToken(JavadocTokenTypes.CHAR, \"b\");", "-        NyvuY.addChild(Sqmta);", "-        CommonToken ugpch = new CommonToken(JavadocTokenTypes.CHAR, \"l\");", "-        NyvuY.addChild(ugpch);", "-        CommonToken NIRMy = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "-        NyvuY.addChild(NIRMy);", "-        tShZn.addChild(NyvuY);", "-        HtmlElementCloseContext ttSqx = new HtmlElementCloseContext(tShZn, 0);", "-        CommonToken QJJgO = new CommonToken(JavadocTokenTypes.OPEN, \"<\");", "-        ttSqx.addChild(QJJgO);", "-        CommonToken tCdKm = new CommonToken(JavadocTokenTypes.SLASH, \"/\");", "-        ttSqx.addChild(tCdKm);", "-        CommonToken IvHnz = new CommonToken(JavadocTokenTypes.HTML_TAG_NAME, \"g\");", "-        ttSqx.addChild(IvHnz);", "-        CommonToken iudHS = new CommonToken(JavadocTokenTypes.CLOSE, \">\");", "-        ttSqx.addChild(iudHS);", "-        tShZn.addChild(ttSqx);", "-        qazLp.addChild(tShZn);", "-        Rohae.addChild(qazLp);", "-        CommonToken okEpH = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "-        Rohae.addChild(okEpH);", "-        return Rohae;", "-    }", "+", "+    public static ParseTree treeOneSimpleHtmlTag()", "+    {", "+        JavadocContext javadocContext0 = new JavadocContext(null, 0);", "+        HtmlElementContext htmlElementContext0 = new HtmlElementContext(javadocContext0, 0);", "+        HtmlTagContext htmlTagContext0 = new HtmlTagContext(htmlElementContext0, 0);", "+        HtmlElementOpenContext htmlElementOpenContext0 = new HtmlElementOpenContext(htmlTagContext0, 0);", "+        CommonToken open0 = new CommonToken(JavadocTokenTypes.OPEN, \"<\");", "+        htmlElementOpenContext0.addChild(open0);", "+        CommonToken htmlTagName0 = new CommonToken(JavadocTokenTypes.HTML_TAG_NAME, \"g\");", "+        htmlElementOpenContext0.addChild(htmlTagName0);", "+        CommonToken close0 = new CommonToken(JavadocTokenTypes.CLOSE, \">\");", "+        htmlElementOpenContext0.addChild(close0);", "+        htmlTagContext0.addChild(htmlElementOpenContext0);", "+        TextContext textContext0 = new TextContext(htmlTagContext0, 0);", "+        CommonToken char0 = new CommonToken(JavadocTokenTypes.CHAR, \"b\");", "+        textContext0.addChild(char0);", "+        CommonToken char1 = new CommonToken(JavadocTokenTypes.CHAR, \"l\");", "+        textContext0.addChild(char1);", "+        CommonToken char2 = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "+        textContext0.addChild(char2);", "+        CommonToken char3 = new CommonToken(JavadocTokenTypes.CHAR, \"b\");", "+        textContext0.addChild(char3);", "+        CommonToken char4 = new CommonToken(JavadocTokenTypes.CHAR, \"l\");", "+        textContext0.addChild(char4);", "+        CommonToken char5 = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "+        textContext0.addChild(char5);", "+        htmlTagContext0.addChild(textContext0);", "+        HtmlElementCloseContext htmlElementCloseContext0 = new HtmlElementCloseContext(htmlTagContext0, 0);", "+        CommonToken open1 = new CommonToken(JavadocTokenTypes.OPEN, \"<\");", "+        htmlElementCloseContext0.addChild(open1);", "+        CommonToken slash0 = new CommonToken(JavadocTokenTypes.SLASH, \"/\");", "+        htmlElementCloseContext0.addChild(slash0);", "+        CommonToken htmlTagName1 = new CommonToken(JavadocTokenTypes.HTML_TAG_NAME, \"g\");", "+        htmlElementCloseContext0.addChild(htmlTagName1);", "+        CommonToken close1 = new CommonToken(JavadocTokenTypes.CLOSE, \">\");", "+        htmlElementCloseContext0.addChild(close1);", "+        htmlTagContext0.addChild(htmlElementCloseContext0);", "+        htmlElementContext0.addChild(htmlTagContext0);", "+        javadocContext0.addChild(htmlElementContext0);", "+        CommonToken eof0 = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "+        javadocContext0.addChild(eof0);", "+        return javadocContext0;", "+    }"]}]}