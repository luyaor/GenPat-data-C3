{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "971f1e6dabb4f6ccf7038016f5ced2cf", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa70a7c823dd7c0b06bab594e37277c5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private static Options buildOptions()", "signatureAfterChange": "     private static Options buildOptions()", "diff": ["-        options.addOption(\"c\", true, \"Sets the check configuration file to use.\");", "-        options.addOption(\"o\", true, \"Sets the output file. Defaults to stdout\");", "-        options.addOption(\"p\", true, \"Loads the properties file\");", "-        options.addOption(\"f\", true, \"Sets the output format. (plain|xml). Defaults to plain\");", "-        options.addOption(\"v\", false, \"Print product version and exit\");", "+        options.addOption(OPTION_C_NAME, true, \"Sets the check configuration file to use.\");", "+        options.addOption(OPTION_O_NAME, true, \"Sets the output file. Defaults to stdout\");", "+        options.addOption(OPTION_P_NAME, true, \"Loads the properties file\");", "+        options.addOption(OPTION_F_NAME, true, String.format(", "+                \"Sets the output format. (%s|%s). Defaults to %s\",", "+                PLAIN_FORMAT_NAME, XML_FORMAT_NAME, PLAIN_FORMAT_NAME));", "+        options.addOption(OPTION_V_NAME, false, \"Print product version and exit\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6f9e8221d0890437ae411c4d0e3ee95", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static AuditListener createListener(String format,                                                 String outputLocation)             throws UnsupportedEncodingException, FileNotFoundException", "signatureAfterChange": "     private static AuditListener createListener(String format,                                                 String outputLocation)             throws UnsupportedEncodingException, FileNotFoundException", "diff": ["-        if (\"xml\".equals(format)) {", "+        if (XML_FORMAT_NAME.equals(format)) {", "-        else if (\"plain\".equals(format)) {", "+        else if (PLAIN_FORMAT_NAME.equals(format)) {", "-            throw new IllegalStateException(\"Invalid output format. Found '\" + format", "-                    + \"' but expected 'plain' or 'xml'.\");", "+            throw new IllegalStateException(String.format(", "+                    \"Invalid output format. Found '%s' but expected '%s' or '%s'.\",", "+                    format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME));"]}]}