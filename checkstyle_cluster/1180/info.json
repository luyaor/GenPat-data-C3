{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0816a885e00f9d2a6e4cb589b53d9121", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c923ff928b514f33b55e7acadfbddba3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "c4d036af767e343bb730f67f87fb74b2e3355356", "commitAfterChange": "a6df885ae1a2b681c4d6f739aa190f622c6b4106", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testSimple()         throws Exception", "signatureAfterChange": "      public void testSimple()         throws Exception", "diff": ["+        final String filepath = getPath(\"InputSimple.java\");", "-            \"InputSimple.java:3: Line does not match expected header line of '// Created: 2001'.\",", "-            \"InputSimple.java:18: line longer than 80 characters\",", "-            \"InputSimple.java:19: line contains a tab character\",", "-            \"InputSimple.java:25: variable 'badConstant' must match pattern '^[A-Z]([A-Z0-9_]*[A-Z0-9])?$'.\",", "-            \"InputSimple.java:30: variable 'badStatic' must match pattern '^s[A-Z][a-zA-Z0-9]*$'.\",", "-            \"InputSimple.java:35: variable 'badMember' must match pattern '^m[A-Z][a-zA-Z0-9]*$'.\",", "-            \"InputSimple.java:39: variable 'mNumCreated2' must be private and have accessor methods.\",", "-            \"InputSimple.java:45: variable 'sTest1' must be private and have accessor methods.\",", "-            \"InputSimple.java:47: variable 'sTest3' must be private and have accessor methods.\",", "-            \"InputSimple.java:49: variable 'sTest2' must be private and have accessor methods.\",", "-            \"InputSimple.java:52: variable 'mTest1' must be private and have accessor methods.\",", "-            \"InputSimple.java:54: variable 'mTest2' must be private and have accessor methods.\",", "-            \"InputSimple.java:67: parameter 'badFormat1' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.\",", "-            \"InputSimple.java:68: parameter 'badFormat2' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.\",", "-            \"InputSimple.java:69: parameter 'badFormat3' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.\"", "+            filepath + \":3: Line does not match expected header line of '// Created: 2001'.\",", "+            filepath + \":18: line longer than 80 characters\",", "+            filepath + \":19: line contains a tab character\",", "+            filepath + \":25: variable 'badConstant' must match pattern '^[A-Z]([A-Z0-9_]*[A-Z0-9])?$'.\",", "+            filepath + \":30: variable 'badStatic' must match pattern '^s[A-Z][a-zA-Z0-9]*$'.\",", "+            filepath + \":35: variable 'badMember' must match pattern '^m[A-Z][a-zA-Z0-9]*$'.\",", "+            filepath + \":39: variable 'mNumCreated2' must be private and have accessor methods.\",", "+            filepath + \":45: variable 'sTest1' must be private and have accessor methods.\",", "+            filepath + \":47: variable 'sTest3' must be private and have accessor methods.\",", "+            filepath + \":49: variable 'sTest2' must be private and have accessor methods.\",", "+            filepath + \":52: variable 'mTest1' must be private and have accessor methods.\",", "+            filepath + \":54: variable 'mTest2' must be private and have accessor methods.\",", "+            filepath + \":67: parameter 'badFormat1' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.\",", "+            filepath + \":68: parameter 'badFormat2' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.\",", "+            filepath + \":69: parameter 'badFormat3' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.\"", "-        verify(c, \"InputSimple.java\", expected);", "+        verify(c, filepath, expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3c5a2628a9d586a6aaf9d867fc292b0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "c4d036af767e343bb730f67f87fb74b2e3355356", "commitAfterChange": "a6df885ae1a2b681c4d6f739aa190f622c6b4106", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testRelaxedJavadoc()         throws Exception", "signatureAfterChange": "      public void testRelaxedJavadoc()         throws Exception", "diff": ["+        final String filepath = getPath(\"InputPublicOnly.java\");", "-            \"InputPublicOnly.java:7: type is missing a Javadoc comment.\",", "-            \"InputPublicOnly.java:9: type is missing a Javadoc comment.\",", "-            \"InputPublicOnly.java:11: variable 'CONST' missing Javadoc.\",", "-            \"InputPublicOnly.java:12: method is missing a Javadoc comment.\",", "-            \"InputPublicOnly.java:14: type is missing a Javadoc comment.\",", "-            \"InputPublicOnly.java:34: type is missing a Javadoc comment.\",", "-            \"InputPublicOnly.java:44: variable 'mLen' must be private and have accessor methods.\",", "-            \"InputPublicOnly.java:45: variable 'mDeer' missing Javadoc.\",", "-            \"InputPublicOnly.java:45: variable 'mDeer' must be private and have accessor methods.\",", "-            \"InputPublicOnly.java:46: variable 'aFreddo' missing Javadoc.\",", "-            \"InputPublicOnly.java:46: variable 'aFreddo' must be private and have accessor methods.\",", "-            \"InputPublicOnly.java:59: method is missing a Javadoc comment.\",", "-            \"InputPublicOnly.java:64: method is missing a Javadoc comment.\",", "-            \"InputPublicOnly.java:79: method is missing a Javadoc comment.\",", "-            \"InputPublicOnly.java:84: method is missing a Javadoc comment.\"", "+            filepath + \":7: type is missing a Javadoc comment.\",", "+            filepath + \":9: type is missing a Javadoc comment.\",", "+            filepath + \":11: variable 'CONST' missing Javadoc.\",", "+            filepath + \":12: method is missing a Javadoc comment.\",", "+            filepath + \":14: type is missing a Javadoc comment.\",", "+            filepath + \":34: type is missing a Javadoc comment.\",", "+            filepath + \":44: variable 'mLen' must be private and have accessor methods.\",", "+            filepath + \":45: variable 'mDeer' missing Javadoc.\",", "+            filepath + \":45: variable 'mDeer' must be private and have accessor methods.\",", "+            filepath + \":46: variable 'aFreddo' missing Javadoc.\",", "+            filepath + \":46: variable 'aFreddo' must be private and have accessor methods.\",", "+            filepath + \":59: method is missing a Javadoc comment.\",", "+            filepath + \":64: method is missing a Javadoc comment.\",", "+            filepath + \":79: method is missing a Javadoc comment.\",", "+            filepath + \":84: method is missing a Javadoc comment.\"", "-        verify(c, \"InputPublicOnly.java\", expected);", "+        verify(c, filepath, expected);"]}]}