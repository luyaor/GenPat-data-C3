{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0b5ffac8ab57e08bbd93e24c583da3f7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0160f37787fd11e360a5a316285589a4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/WhitespaceAroundCheck.java", "commitBeforeChange": "e4434ebe00405dca6bc2009666d6cfea7b15cfd5", "commitAfterChange": "0fdfc2f36086a108407fc7d51edc5b8c934b658a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public int[] getDefaultTokens()", "signatureAfterChange": "     public int[] getDefaultTokens()", "diff": ["-        // TODO: add all operators", "-        return new int[] {JavaTokenTypes.ASSIGN};", "+        return new int[] {", "+            QUESTION,          // '?'", "+            // COLON,             // ':' TODO: dont flag after \"case\"", "+            ASSIGN,            // '='", "+            EQUAL,             // \"==\"", "+            NOT_EQUAL,         // \"!=\"", "+            DIV,               // '/'", "+            DIV_ASSIGN,        // \"/=\"", "+            // PLUS,              //' +' TODO: unaray plus", "+            PLUS_ASSIGN,       // \"+=\"", "+            // MINUS,             // '-' TODO: unary minus", "+            MINUS_ASSIGN,      //\"-=\"", "+            STAR,              // '*'", "+            STAR_ASSIGN,       // \"*=\"", "+            MOD,               // '%'", "+            MOD_ASSIGN,        // \"%=\"", "+            SR,                // \">>\"", "+            SR_ASSIGN,         // \">>=\"", "+            BSR,               // \">>>\"", "+            BSR_ASSIGN,        // \">>>=\"", "+            GE,                // \">=\"", "+            GT,                // \">\"", "+            SL,                // \"<<\"", "+            SL_ASSIGN,         // \"<<=\"", "+            LE,                // \"<=\"", "+            LT,                // '<'", "+            BXOR,              // '^'", "+            BXOR_ASSIGN,       // \"^=\"", "+            BOR,               // '|'", "+            BOR_ASSIGN,        // \"|=\"", "+            LOR,               // \"||\"", "+            BAND,              // '&'", "+            BAND_ASSIGN,       // \"&=\"", "+            LAND,              // \"&&\"", "+            LITERAL_if,", "+            LITERAL_else,", "+            LITERAL_for,", "+            LITERAL_do,", "+            // LITERAL_return,    // TODO: \"return;\" is OK, return(2) is not", "+            LITERAL_try,", "+            LITERAL_catch,", "+            LITERAL_finally,", "+            LITERAL_synchronized,", "+            ASSERT                // TODO: why is it not LITERAL_assert?", "+                                  // maybe it's a bug in the grammar?", "+        };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac1c071f0ee99e44fefe9ddbf599ee34", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/WhitespaceAroundCheck.java", "commitBeforeChange": "672244cf2f75c7425087a69beafe1133a45f130b", "commitAfterChange": "aa1032931c3bcb327e77c5d21f63f48a27e947a5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public int[] getDefaultTokens()", "signatureAfterChange": "     public int[] getDefaultTokens()", "diff": ["-            TokenTypes.RCURLY,            // '}'", "-            TokenTypes.QUESTION,          // '?'", "-            TokenTypes.COLON,             // ':' TODO: dont flag after \"case\"", "-            TokenTypes.ASSIGN,            // '='", "-            TokenTypes.EQUAL,             // \"==\"", "-            TokenTypes.NOT_EQUAL,         // \"!=\"", "-            TokenTypes.DIV,               // '/'", "-            TokenTypes.DIV_ASSIGN,        // \"/=\"", "-            TokenTypes.PLUS,              //' +' (unaray plus is UNARY_PLUS)", "-            TokenTypes.PLUS_ASSIGN,       // \"+=\"", "-            TokenTypes.MINUS,             // '-' (unary minus is UNARY_MINUS)", "-            TokenTypes.MINUS_ASSIGN,      //\"-=\"", "-            TokenTypes.STAR,              // '*'", "-            TokenTypes.STAR_ASSIGN,       // \"*=\"", "-            TokenTypes.MOD,               // '%'", "-            TokenTypes.MOD_ASSIGN,        // \"%=\"", "-            TokenTypes.SR,                // \">>\"", "-            TokenTypes.SR_ASSIGN,         // \">>=\"", "-            TokenTypes.BSR,               // \">>>\"", "-            TokenTypes.BSR_ASSIGN,        // \">>>=\"", "-            TokenTypes.GE,                // \">=\"", "-            TokenTypes.GT,                // \">\"", "-            TokenTypes.SL,                // \"<<\"", "-            TokenTypes.SL_ASSIGN,         // \"<<=\"", "-            TokenTypes.LE,                // \"<=\"", "-            TokenTypes.LT,                // '<'", "-            TokenTypes.BXOR,              // '^'", "-            TokenTypes.BXOR_ASSIGN,       // \"^=\"", "-            TokenTypes.BOR,               // '|'", "-            TokenTypes.BOR_ASSIGN,        // \"|=\"", "-            TokenTypes.LOR,               // \"||\"", "-            TokenTypes.BAND,              // '&'", "-            TokenTypes.BAND_ASSIGN,       // \"&=\"", "-            TokenTypes.LAND,              // \"&&\"", "+            TokenTypes.ASSIGN,", "+            TokenTypes.BAND,", "+            TokenTypes.BAND_ASSIGN,", "+            TokenTypes.BOR,", "+            TokenTypes.BOR_ASSIGN,", "+            TokenTypes.BSR,", "+            TokenTypes.BSR_ASSIGN,", "+            TokenTypes.BXOR,", "+            TokenTypes.BXOR_ASSIGN,", "+            TokenTypes.COLON, // TODO: dont flag after \"case\"", "+            TokenTypes.DIV,", "+            TokenTypes.DIV_ASSIGN,", "+            TokenTypes.EQUAL,", "+            TokenTypes.GE,", "+            TokenTypes.GT,", "+            TokenTypes.LAND,", "+            TokenTypes.LCURLY,", "+            TokenTypes.LE,", "+            TokenTypes.LOR,", "+            TokenTypes.LT,", "+            TokenTypes.MINUS,", "+            TokenTypes.MINUS_ASSIGN,", "+            TokenTypes.MOD,", "+            TokenTypes.MOD_ASSIGN,", "+            TokenTypes.NOT_EQUAL,", "+            TokenTypes.PLUS,", "+            TokenTypes.PLUS_ASSIGN,", "+            TokenTypes.QUESTION,", "+            TokenTypes.RCURLY,", "+            TokenTypes.SL,", "+            TokenTypes.SL_ASSIGN,", "+            TokenTypes.SR,", "+            TokenTypes.SR_ASSIGN,", "+            TokenTypes.STAR,", "+            TokenTypes.STAR_ASSIGN,"]}]}