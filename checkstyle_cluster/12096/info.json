{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f6d7c75bc215f49733f6e2205c81ebf0", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19802be5beaffd3ede37c2c040cb13fd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/OperatorWrapTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void operatorWrapTest() throws Exception", "signatureAfterChange": "      @Test     public void operatorWrapTest() throws Exception", "diff": ["-        Class<OperatorWrapCheck> clazz = OperatorWrapCheck.class;", "-        String messageKey = \"line.new\";", "+        final Class<OperatorWrapCheck> clazz = OperatorWrapCheck.class;", "+        final String messageKey = \"line.new\";", "-        Configuration checkConfig = builder.getCheckConfig(\"OperatorWrap\");", "-        String filePath = builder.getFilePath(\"OperatorWrapInput\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"OperatorWrap\");", "+        final String filePath = builder.getFilePath(\"OperatorWrapInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c053f69ec8dd41f0f396f1adfa5aff8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/MethodParamPadTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void operatorWrapTest() throws Exception", "signatureAfterChange": "      @Test     public void operatorWrapTest() throws Exception", "diff": ["-        Class<MethodParamPadCheck> clazz = MethodParamPadCheck.class;", "-        String messageKey = \"line.previous\";", "+        final Class<MethodParamPadCheck> clazz = MethodParamPadCheck.class;", "+        final String messageKey = \"line.previous\";", "-        Configuration checkConfig = builder.getCheckConfig(\"MethodParamPad\");", "-        String filePath = builder.getFilePath(\"MethodParamPadInput\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"MethodParamPad\");", "+        final String filePath = builder.getFilePath(\"MethodParamPadInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f96fcbf14b402625314340ad69446217", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule411bracesareused/NeedBracesTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void needBracesTest() throws Exception", "signatureAfterChange": "      @Test     public void needBracesTest() throws Exception", "diff": ["-        Class<NeedBracesCheck> clazz = NeedBracesCheck.class;", "-        String messageKey = \"needBraces\";", "+        final Class<NeedBracesCheck> clazz = NeedBracesCheck.class;", "+        final String messageKey = \"needBraces\";", "-        Configuration checkConfig = builder.getCheckConfig(\"NeedBraces\");", "-        String filePath = builder.getFilePath(\"NeedBracesInput\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"NeedBraces\");", "+        final String filePath = builder.getFilePath(\"NeedBracesInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}]}