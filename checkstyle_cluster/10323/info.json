{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ea76c0792af394060253dd79a75f509", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43dd2b9fe4d03899f3f448c0e5b0fe2f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule521packagenames/PackageNameTest.java", "commitBeforeChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "commitAfterChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void badPackageName3Test() throws Exception", "signatureAfterChange": "      @Test     public void badPackageName3Test() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"PackageBadNameInput3\");", "+        final String filePath = builder.getFilePath(\"InputPackageBadName3\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1b1f12610397a4a0b6dcd552f7dcee9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4861blockcommentstyle/CommentsIndentationTest.java", "commitBeforeChange": "4346d41010a729e14991e30706bdb16ff18ff39a", "commitAfterChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCommentIsAtTheEndOfBlock() throws Exception", "signatureAfterChange": "      @Test     public void testCommentIsAtTheEndOfBlock() throws Exception", "diff": ["-            builder.getFilePath(\"CommentsIndentationCommentIsAtTheEndOfBlockInput\");", "+            builder.getFilePath(\"InputCommentsIndentationCommentIsAtTheEndOfBlock\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4b6c684ced782fa23ef0999660a0e14", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheckTest.java", "commitBeforeChange": "b2cca2d5e91425cfe52c1c59cc8aa907a2e766df", "commitAfterChange": "6d20b67e0f1bfedc2132a887257d72edde4c857b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testSwitchBlockAsSingleDecisionPointSetToFalse() throws Exception", "signatureAfterChange": "      @Test     public void testSwitchBlockAsSingleDecisionPointSetToFalse() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"metrics/ComplexityCheckSwitchBlocksTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"ComplexityCheckSwitchBlocksTestInput.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df464ec2822936ac76efd4fd10a2e271", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java", "commitBeforeChange": "4be4abc6360709a49b231277a2513905332f9e50", "commitAfterChange": "f747835b6b4bd894eed2ef17eb059a003fb4d988", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testWrong() throws Exception", "signatureAfterChange": "      @Test     public void testWrong() throws Exception", "diff": ["-                \"src/test/resources/com/puppycrawl/tools/checkstyle/import-control_wrong.xml\");", "+                \"src/test/resources/com/puppycrawl/tools/checkstyle/imports/import-control_wrong.xml\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efebdee08b57cfccb66ed1da096de8bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule713atclauses/JavadocTagContinuationIndentationTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}]}