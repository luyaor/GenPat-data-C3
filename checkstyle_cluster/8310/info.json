{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1de12ad8a294b53ad46cd02e0cbdaa4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "147c12008586835d6349d03bcce2e875", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AnnotationUtilityTest.java", "commitBeforeChange": "15c91c8ec20f1349e6f8eea2beb16e922bb03a89", "commitAfterChange": "8a276f35fd82a6d1d129b9db5d284e8ec474bac8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testAnnotationEmpty() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testAnnotationEmpty() throws ReflectiveOperationException", "diff": ["-            Assert.assertTrue(\"the annotation is empty or spaces\"", "-                    .equals(ex.getMessage()));", "+            assertEquals(\"the annotation is empty or spaces\", ex.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1df614af49f2cbba18327ed2e5db592b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AnnotationUtilityTest.java", "commitBeforeChange": "15c91c8ec20f1349e6f8eea2beb16e922bb03a89", "commitAfterChange": "8a276f35fd82a6d1d129b9db5d284e8ec474bac8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testAnnotationNull2() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testAnnotationNull2() throws ReflectiveOperationException", "diff": ["-            Assert.assertTrue(\"the annotation is null\".equals(ex.getMessage()));", "+            assertEquals(\"the annotation is null\", ex.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cf0edd8ca51f760b5606ce2451a85a6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AnnotationUtilityTest.java", "commitBeforeChange": "15c91c8ec20f1349e6f8eea2beb16e922bb03a89", "commitAfterChange": "8a276f35fd82a6d1d129b9db5d284e8ec474bac8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testIsProperUtilsClass() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testIsProperUtilsClass() throws ReflectiveOperationException", "diff": ["-            Assert.assertTrue(\"do not instantiate.\".equals(ex.getCause().getMessage()));", "+            assertEquals(\"do not instantiate.\", ex.getCause().getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "924906e775eaaff4f76da130e69fd5a9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AnnotationUtilityTest.java", "commitBeforeChange": "15c91c8ec20f1349e6f8eea2beb16e922bb03a89", "commitAfterChange": "8a276f35fd82a6d1d129b9db5d284e8ec474bac8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testAnnotationNull() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testAnnotationNull() throws ReflectiveOperationException", "diff": ["-            Assert.assertTrue(\"the ast is null\".equals(ex.getMessage()));", "+            assertEquals(\"the ast is null\", ex.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9223f7223126d92db4ce4b1a406c56a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AnnotationUtilityTest.java", "commitBeforeChange": "15c91c8ec20f1349e6f8eea2beb16e922bb03a89", "commitAfterChange": "8a276f35fd82a6d1d129b9db5d284e8ec474bac8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testAnnotationHolderNull() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testAnnotationHolderNull() throws ReflectiveOperationException", "diff": ["-            Assert.assertTrue(\"the ast is null\".equals(ex.getMessage()));", "+            assertEquals(\"the ast is null\", ex.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1d21780139cdd4b0a4aa62dd532a304", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AnnotationUtilityTest.java", "commitBeforeChange": "15c91c8ec20f1349e6f8eea2beb16e922bb03a89", "commitAfterChange": "8a276f35fd82a6d1d129b9db5d284e8ec474bac8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testContainsAnnotationNull2() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testContainsAnnotationNull2() throws ReflectiveOperationException", "diff": ["-            Assert.assertTrue(\"the ast is null\".equals(ex.getMessage()));", "+            assertEquals(\"the ast is null\", ex.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e975515375b47c0e4194449a6e57b0f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AnnotationUtilityTest.java", "commitBeforeChange": "15c91c8ec20f1349e6f8eea2beb16e922bb03a89", "commitAfterChange": "8a276f35fd82a6d1d129b9db5d284e8ec474bac8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testContainsAnnotationNull() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testContainsAnnotationNull() throws ReflectiveOperationException", "diff": ["-            Assert.assertTrue(\"the ast is null\".equals(ex.getMessage()));", "+            assertEquals(\"the ast is null\", ex.getMessage());"]}]}