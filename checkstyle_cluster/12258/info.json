{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30f3f71c5adaebe2fdc8570977ada343", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f6dea5a7862528a7166a01fb70b3e03", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "fa7617c2223dae31f3ad486002f60201667e7a95", "commitAfterChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": "      public void test_generics_2() throws Exception", "signatureAfterChange": "      public void test_generics_2() throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(JavadocMethodCheck.class);", "-        checkConfig.addAttribute(\"allowThrowsTagsForSubclasses\", \"true\");", "+        mCheckConfig.addAttribute(\"allowThrowsTagsForSubclasses\", \"true\");", "-        verify(checkConfig, getPath(\"javadoc/TestGenerics.java\"), expected);", "+        verify(mCheckConfig, getPath(\"javadoc/TestGenerics.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29e81fc13c7e9b5e676dc9a373cd672d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "fa7617c2223dae31f3ad486002f60201667e7a95", "commitAfterChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testScopeInnerInterfacesPublic() throws Exception", "signatureAfterChange": "      public void testScopeInnerInterfacesPublic() throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(JavadocMethodCheck.class);", "-        checkConfig.addAttribute(\"scope\", Scope.PUBLIC.getName());", "+        mCheckConfig.addAttribute(\"scope\", Scope.PUBLIC.getName());", "-        verify(checkConfig, getPath(\"InputScopeInnerInterfaces.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputScopeInnerInterfaces.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "464cc1523dd69f801619937d2762b3e6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "fa7617c2223dae31f3ad486002f60201667e7a95", "commitAfterChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testScopeAnonInnerPrivate() throws Exception", "signatureAfterChange": "      public void testScopeAnonInnerPrivate() throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(JavadocMethodCheck.class);", "-        checkConfig.addAttribute(\"scope\", Scope.PRIVATE.getName());", "+        mCheckConfig.addAttribute(\"scope\", Scope.PRIVATE.getName());", "-        verify(checkConfig, getPath(\"InputScopeAnonInner.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputScopeAnonInner.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4760a9555d99d4da9c6d01f707619611", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "fa7617c2223dae31f3ad486002f60201667e7a95", "commitAfterChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void testRelaxedJavadoc() throws Exception", "signatureAfterChange": "     public void testRelaxedJavadoc() throws Exception", "diff": ["-", "-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(JavadocMethodCheck.class);", "-        checkConfig.addAttribute(\"scope\", Scope.PROTECTED.getName());", "+        mCheckConfig.addAttribute(\"scope\", Scope.PROTECTED.getName());", "-        verify(checkConfig, getPath(\"InputPublicOnly.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputPublicOnly.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "544c79be3bec7e452996c1bcc0815d65", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "fa7617c2223dae31f3ad486002f60201667e7a95", "commitAfterChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testTagsWithResolver() throws Exception", "signatureAfterChange": "      public void testTagsWithResolver() throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(JavadocMethodCheck.class);", "-        checkConfig.addAttribute(\"allowUndeclaredRTE\", \"true\");", "+        mCheckConfig.addAttribute(\"allowUndeclaredRTE\", \"true\");", "-        verify(checkConfig, getPath(\"InputTags.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputTags.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6956e0af3b70a2890cf37c80654e1760", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "fa7617c2223dae31f3ad486002f60201667e7a95", "commitAfterChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void testScopes2() throws Exception", "signatureAfterChange": "      public void testScopes2() throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(JavadocMethodCheck.class);", "-        checkConfig.addAttribute(\"scope\", Scope.PROTECTED.getName());", "+        mCheckConfig.addAttribute(\"scope\", Scope.PROTECTED.getName());", "-        verify(checkConfig, getPath(\"javadoc\" + File.separator", "+        verify(mCheckConfig, getPath(\"javadoc\" + File.separator"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dfdfda53ab74ffdaba7991ded756297", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "fa7617c2223dae31f3ad486002f60201667e7a95", "commitAfterChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "      public void testSetterGetterOn() throws Exception", "signatureAfterChange": "      public void testSetterGetterOn() throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(JavadocMethodCheck.class);", "-        checkConfig.addAttribute(\"allowMissingPropertyJavadoc\", \"true\");", "+        mCheckConfig.addAttribute(\"allowMissingPropertyJavadoc\", \"true\");", "-        verify(checkConfig, getPath(\"javadoc\" + File.separator", "+        verify(mCheckConfig, getPath(\"javadoc\" + File.separator"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6eeabb9184e697eb7a3e7387cc0bd0bf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "fa7617c2223dae31f3ad486002f60201667e7a95", "commitAfterChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testNoJavadoc() throws Exception", "signatureAfterChange": "      public void testNoJavadoc() throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(JavadocMethodCheck.class);", "-        checkConfig.addAttribute(\"scope\", Scope.NOTHING.getName());", "+        mCheckConfig.addAttribute(\"scope\", Scope.NOTHING.getName());", "-        verify(checkConfig, getPath(\"InputPublicOnly.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputPublicOnly.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89dc0ed285592cf5e37e14cabe06e7e6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "fa7617c2223dae31f3ad486002f60201667e7a95", "commitAfterChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void testAllowMissingJavadoc() throws Exception", "signatureAfterChange": "      public void testAllowMissingJavadoc() throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(JavadocMethodCheck.class);", "-        checkConfig.addAttribute(\"allowMissingJavadoc\", \"true\");", "+        mCheckConfig.addAttribute(\"allowMissingJavadoc\", \"true\");", "-        verify(checkConfig, getPath(\"javadoc\" + File.separator", "+        verify(mCheckConfig, getPath(\"javadoc\" + File.separator"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdadfa7716d0a3bbeca96b81f2b4ff4e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "fa7617c2223dae31f3ad486002f60201667e7a95", "commitAfterChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void testScopeAnonInnerWithResolver() throws Exception", "signatureAfterChange": "      public void testScopeAnonInnerWithResolver() throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(JavadocMethodCheck.class);", "-        checkConfig.addAttribute(\"allowUndeclaredRTE\", \"true\");", "+        mCheckConfig.addAttribute(\"allowUndeclaredRTE\", \"true\");", "-        verify(checkConfig, getPath(\"InputScopeAnonInner.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputScopeAnonInner.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bedfe959ebb466f616984731ab1c071d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "fa7617c2223dae31f3ad486002f60201667e7a95", "commitAfterChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testTagsWithSubclassesAllowed() throws Exception", "signatureAfterChange": "      public void testTagsWithSubclassesAllowed() throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(JavadocMethodCheck.class);", "-        checkConfig.addAttribute(\"allowThrowsTagsForSubclasses\", \"true\");", "+        mCheckConfig.addAttribute(\"allowThrowsTagsForSubclasses\", \"true\");", "-        verify(checkConfig, getPath(\"InputTags.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputTags.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0d2e10d536a980cc6c8d0a112894d48", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "fa7617c2223dae31f3ad486002f60201667e7a95", "commitAfterChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void testScopeAnonInnerAnonInner() throws Exception", "signatureAfterChange": "      public void testScopeAnonInnerAnonInner() throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(JavadocMethodCheck.class);", "-        checkConfig.addAttribute(\"scope\", Scope.ANONINNER.getName());", "+        mCheckConfig.addAttribute(\"scope\", Scope.ANONINNER.getName());", "-        verify(checkConfig, getPath(\"InputScopeAnonInner.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputScopeAnonInner.java\"), expected);"]}]}