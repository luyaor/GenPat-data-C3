{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a8035ec5fbcca71b729d0e5ca1dece8", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9df66e19c1952da92f40e90955c4eb3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     public void testExistingInCode() throws Exception", "signatureAfterChange": "      @Test     public void testExistingInCode() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"format\", required);", "-        mCheckConfig.addAttribute(\"minimum\", \"1\");", "-        mCheckConfig.addAttribute(\"maximum\", \"1000\");", "+        checkConfig.addAttribute(\"format\", required);", "+        checkConfig.addAttribute(\"minimum\", \"1\");", "+        checkConfig.addAttribute(\"maximum\", \"1000\");", "-        verify(mCheckConfig, getPath(\"InputSemantic.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSemantic.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b55b38796a96c9054a4bad16ff44cabb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void testExistingInDoc() throws Exception", "signatureAfterChange": "      @Test     public void testExistingInDoc() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"format\", required);", "-        mCheckConfig.addAttribute(\"minimum\", \"1\");", "-        mCheckConfig.addAttribute(\"maximum\", \"1000\");", "+        checkConfig.addAttribute(\"format\", required);", "+        checkConfig.addAttribute(\"minimum\", \"1\");", "+        checkConfig.addAttribute(\"maximum\", \"1000\");", "-        verify(mCheckConfig, getPath(\"InputSemantic.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSemantic.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd1cb3340fbb7dbb1b68434404c3c07b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      @Test     public void testMissing() throws Exception", "signatureAfterChange": "      @Test     public void testMissing() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"format\", required);", "-        mCheckConfig.addAttribute(\"minimum\", \"1\");", "-        mCheckConfig.addAttribute(\"maximum\", \"1000\");", "+        checkConfig.addAttribute(\"format\", required);", "+        checkConfig.addAttribute(\"minimum\", \"1\");", "+        checkConfig.addAttribute(\"maximum\", \"1000\");", "-        verify(mCheckConfig, getPath(\"InputSemantic.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSemantic.java\"), expected);"]}]}