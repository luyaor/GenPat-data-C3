{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8439e6bf92aed17465b385d60f4481e0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25c1a72db7323a17897af882d8b2a01d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationTest.java", "commitBeforeChange": "98d883bb3b2e5ea3774694b0529d1d16da5f3300", "commitAfterChange": "7335df239dda0b303e7de23ef6b1adf388780a0c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testGetProperties() throws Exception", "signatureAfterChange": "      public void testGetProperties() throws Exception", "diff": ["-        c.setStringSetProperty(Defn.ILLEGAL_IMPORTS_PROP, \"a,b,c,d\");", "-        assertEquals(\"a,b,c,d\",", "-                     c.getProperties().getProperty(Defn.ILLEGAL_IMPORTS_PROP));", "-        c.setStringSetProperty(Defn.ILLEGAL_IMPORTS_PROP, \"a\");", "-        assertEquals(\"a\",", "-                     c.getProperties().getProperty(Defn.ILLEGAL_IMPORTS_PROP));", "-       "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65f657b9e037ad0f9d7c6874bf0bd50c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "381544887c222baddc8d6aab9f266bf16bc118b5", "commitAfterChange": "36321e0cc61a3ef9db6a2a468e72bf79f0da6211", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testAddFilter() throws Exception", "signatureAfterChange": "      public void testAddFilter() throws Exception", "diff": ["-        c.fireAuditStarted();", "-        assertTrue(\"Checker.fireAuditStarted() doesn't call filter\", f.wasCalled());", "+\t// we do not call filter in fireAuditStarted() (fix for 1080343)", "+//         c.fireAuditStarted();", "+//         assertTrue(\"Checker.fireAuditStarted() doesn't call filter\", f.wasCalled());", "-        f.resetFilter();", "-        c.fireAuditFinished();", "-        assertTrue(\"Checker.fireAuditFinished() doesn't call filter\", f.wasCalled());", "+\t// we do not call filter in fireAuditFinished() (fix for 1080343)", "+//         f.resetFilter();", "+//         c.fireAuditFinished();", "+//         assertTrue(\"Checker.fireAuditFinished() doesn't call filter\", f.wasCalled());", "-        f.resetFilter();", "-        c.fireFileStarted(\"Some File Name\");", "-        assertTrue(\"Checker.fireFileStarted() doesn't call filter\", f.wasCalled());", "+\t// we do not call filter in fireFileStarted() (fix for 1080343)", "+//         f.resetFilter();", "+//         c.fireFileStarted(\"Some File Name\");", "+//         assertTrue(\"Checker.fireFileStarted() doesn't call filter\", f.wasCalled());", "-        f.resetFilter();", "-        c.fireFileFinished(\"Some File Name\");", "-        assertTrue(\"Checker.fireFileFinished() doesn't call filter\", f.wasCalled());", "+\t// we do not call filter in fireFileFinished() (fix for 1080343)", "+//         f.resetFilter();", "+//         c.fireFileFinished(\"Some File Name\");", "+//         assertTrue(\"Checker.fireFileFinished() doesn't call filter\", f.wasCalled());"]}]}