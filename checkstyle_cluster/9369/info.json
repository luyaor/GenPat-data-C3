{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cc9b0228455cba2a202cf7578f0a54ad", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20fd665ab7ceaf382b34f5b7b708400d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/doclets/TokenTypesDoclet.java", "commitBeforeChange": "0e7ff063f8a07d9a5bf13a8b2c22bb8b8abf8162", "commitAfterChange": "9fe85771081f675ffba46da219957c3450801c92", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static boolean start(RootDoc root)             throws FileNotFoundException, UnsupportedEncodingException", "signatureAfterChange": "     public static boolean start(RootDoc root)             throws FileNotFoundException, UnsupportedEncodingException", "diff": ["-            if (classes.length != 1", "-                || !\"TokenTypes\".equals(classes[0].name())) {", "-                final String message =", "-                    \"The doclet should be used for TokenTypes only\";", "-                throw new IllegalArgumentException(message);", "-            }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25742ed9f7f8c38412fd4382b0280f24", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "93587ecf374c8dd9f040fd3667efc47a3d84ff5d", "commitAfterChange": "b06e2e0015944ceaa74a10134bf06ac5c9e53782", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void setIllegalClassNames(String[] aClassNames)", "signatureAfterChange": "     public void setIllegalClassNames(String[] aClassNames)", "diff": ["-            final int lastDot = name.lastIndexOf(\".\");", "-            if ((lastDot > 0) && (lastDot < (name.length() - 1))) {", "-                final String shortName =", "-                    name.substring(name.lastIndexOf(\".\") + 1);", "-                mIllegalClassNames.add(shortName);", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "266832c308b6d5838ece6bbee1fd08d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java", "commitBeforeChange": "a767a81473dde3f45646cf1db555a276f62f543b", "commitAfterChange": "943ace0dd67911db776be674e66a873df1442db0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      protected void verify(Checker aC,                           File[] aProcessedFiles,                           String aMessageFileName,                           String[] aExpected,                           Integer[] aWarnsExpected)         throws Exception", "signatureAfterChange": "      protected void verify(Checker aC,                           File[] aProcessedFiles,                           String aMessageFileName,                           String[] aExpected,                           Integer[] aWarnsExpected)         throws Exception", "diff": ["-            String parseInt = actual.substring(actual.indexOf(\":\") + 1);", "+            String parseInt = removeDeviceFromPathOnWindows(actual);", "+            parseInt = parseInt.substring(parseInt.indexOf(\":\") + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35130b3c7f62cc1bae099fed4aaa0d0e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "a1ad6dbd260c4293be469801021f371e60fc9ae8", "commitAfterChange": "1c42e3eeb9aeebc47b2373541c1cc8d311d8b671", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public final void leaveToken(DetailAST ast)", "signatureAfterChange": "      @Override     public final void leaveToken(DetailAST ast)", "diff": ["-            int dotIdx = currentClass.lastIndexOf(\"$\");", "+            int dotIdx = currentClass.lastIndexOf('$');", "-                dotIdx = currentClass.lastIndexOf(\".\");", "+                dotIdx = currentClass.lastIndexOf('.');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3db5134af2bcc9052ff413bff1884969", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractIllegalCheck.java", "commitBeforeChange": "a1ad6dbd260c4293be469801021f371e60fc9ae8", "commitAfterChange": "1c42e3eeb9aeebc47b2373541c1cc8d311d8b671", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final void setIllegalClassNames(final String[] classNames)", "signatureAfterChange": "     public final void setIllegalClassNames(final String[] classNames)", "diff": ["-            final int lastDot = name.lastIndexOf(\".\");", "+            final int lastDot = name.lastIndexOf('.');", "-                        .substring(name.lastIndexOf(\".\") + 1);", "+                        .substring(name.lastIndexOf('.') + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b733836cb6ae6a81175feefae4d46f1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "a1ad6dbd260c4293be469801021f371e60fc9ae8", "commitAfterChange": "1c42e3eeb9aeebc47b2373541c1cc8d311d8b671", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     private void addRuleastoList(String ruleStr)", "signatureAfterChange": "     private void addRuleastoList(String ruleStr)", "diff": ["-            final String rule = ruleStr.substring(ruleStr.indexOf(\"(\") + 1,", "-                    ruleStr.indexOf(\")\"));", "+            final String rule = ruleStr.substring(ruleStr.indexOf('(') + 1,", "+                    ruleStr.indexOf(')'));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "688464b1903857d799101c16463d2d9c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "8c4184bfc9499f76a97a700015f658c8930b126e", "commitAfterChange": "a69a0461d2125ceac1e5a123c3ff24a94a784d50", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public final void leaveToken(DetailAST aAST)", "signatureAfterChange": "     public final void leaveToken(DetailAST aAST)", "diff": ["-            int dotIdx = mCurrentClass.lastIndexOf(\".\");", "+            // perhaps it was inner class", "+            int dotIdx = mCurrentClass.lastIndexOf(\"$\");", "+                // perhaps just a class", "+                dotIdx = mCurrentClass.lastIndexOf(\".\");", "+            }", "+            if (dotIdx == -1) {", "+                // looks like a topmost class"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97cfbd780cbfe8e234c7a3bd19f76506", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "02ae6023b5b6f66e495393a6f87e4beb4b4ab3d0", "commitAfterChange": "584f7ee1232be96284255540e7249023c327ca8f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public final void leaveToken(DetailAST ast)", "signatureAfterChange": "      @Override     public final void leaveToken(DetailAST ast)", "diff": ["-            int dotIdx = currentClass.lastIndexOf('$');", "+            int dotIdx = currentClassName.lastIndexOf('$');", "-                dotIdx = currentClass.lastIndexOf('.');", "+                dotIdx = currentClassName.lastIndexOf('.');", "-                currentClass = \"\";", "+                currentClassName = \"\";", "-                currentClass = currentClass.substring(0, dotIdx);", "+                currentClassName = currentClassName.substring(0, dotIdx);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9152f958995c740cf0a8e6fee0bf1b4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java", "commitBeforeChange": "efa16e17bf710b7b24af828296c2337612912ba9", "commitAfterChange": "4f6d7e415dc3253c5bde537f2a8d262de9b6aba2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      protected void verify(Checker aC,                           File[] aProcessedFiles,                           String aMessageFileName,                           String[] aExpected,                           Integer[] aWarnsExpected)         throws Exception", "signatureAfterChange": "      protected void verify(Checker aC,                           File[] aProcessedFiles,                           String aMessageFileName,                           String[] aExpected,                           Integer[] aWarnsExpected)         throws Exception", "diff": ["-            parseInt = parseInt.substring(parseInt.indexOf(\":\") + 1);", "-            parseInt = parseInt.substring(0, parseInt.indexOf(\":\"));", "+            parseInt = parseInt.substring(parseInt.indexOf(':') + 1);", "+            parseInt = parseInt.substring(0, parseInt.indexOf(':'));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6b9f301dd319c7f5888512dd532d16b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static String baseClassName(String type)", "signatureAfterChange": "     public static String baseClassName(String type)", "diff": ["-        final int i = type.lastIndexOf('.');", "+        final int index = type.lastIndexOf('.');", "-        if (i == -1) {", "+        if (index == -1) {", "-            return type.substring(i + 1);", "+            return type.substring(index + 1);"]}]}