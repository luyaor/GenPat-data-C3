{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8e2dcbf39a747ba23cdd3d1388b411df", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ab4706d149dcff6cd5eb068e18b4f53", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FullIdent.java", "commitBeforeChange": "a1ad6dbd260c4293be469801021f371e60fc9ae8", "commitAfterChange": "1c42e3eeb9aeebc47b2373541c1cc8d311d8b671", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public String getText()", "signatureAfterChange": "     public String getText()", "diff": ["-        return buffer.toString();", "+        return StringUtils.join(elements, \"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0df6045101da10613b4470981b636f25", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java", "commitBeforeChange": "accb0bf5bcca0213c55996af02cc42bbc22f313c", "commitAfterChange": "cd12de2a24713a494393912e2277b67770eb79fe", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testGoogleStyleguideConfiguraiton() throws Exception", "signatureAfterChange": "     @Test     public void testStaticStandardThird() throws Exception", "diff": ["-    public void testGoogleStyleguideConfiguraiton() throws Exception {", "+    public void testStaticStandardThird() throws Exception {", "-            \"4: \" + getCheckMessage(MSG_LEX, \"java.awt.Button.ABORT\"),", "-            \"10: \" + getCheckMessage(MSG_LEX, \"java.awt.Dialog\"),", "-            \"15: \" + getCheckMessage(MSG_LEX, \"java.io.File\"),", "-            \"22: \" + getCheckMessage(MSG_LEX, \"com.google.common.collect.*\"),", "+            \"4: \" + getCheckMessage(MSG_LEX, \"java.awt.Button.ABORT\", \"java.io.File.createTempFile\"),", "+            \"10: \" + getCheckMessage(MSG_LEX, \"java.awt.Dialog\", \"java.awt.Frame\"),", "+            \"15: \" + getCheckMessage(MSG_LEX, \"java.io.File\", \"javax.swing.JTable\"),", "+            \"22: \" + getCheckMessage(MSG_LEX, \"com.google.common.collect.*\", \"com.puppycrawl.tools.*\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "873f7b690c1b010bdda02754135dd86a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "fe6e0fd4231aaba97cf423899f93697400880c93", "commitAfterChange": "b84b3fd04ad9c45e1466e35b707a2b59f5baf66b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      protected Checker createChecker()         throws RESyntaxException, FileNotFoundException, IOException", "signatureAfterChange": "      protected Checker createChecker()         throws RESyntaxException, FileNotFoundException, IOException, ParserConfigurationException, SAXException, ClassNotFoundException, InstantiationException, IllegalAccessException", "diff": ["-        throws RESyntaxException, FileNotFoundException, IOException", "+        throws RESyntaxException, FileNotFoundException, IOException, ParserConfigurationException, SAXException, ClassNotFoundException, InstantiationException, IllegalAccessException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f547a6327f63b92953873683dc450cfd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "e3588963d0af4edb7a76643f26886c7ec1fa8196", "commitAfterChange": "a9f84b37679745e1045051bfe09fdabc747d7c30", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      public void testScopeInnerClassesPackage()         throws Exception", "signatureAfterChange": "      public void testScopeInnerClassesPackage()         throws Exception", "diff": ["-        mConfig.setJavadocScope(Scope.PACKAGE);", "+        mConfig.setJavadocScope(Scope.getInstance(\"package\"));"]}]}