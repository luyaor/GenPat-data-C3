{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b98e0b56a45302c52017b54fe6091977", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc4155a0bd768d2ad2d1f5ec5b33cf09", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "3852e12bece8c5770ed1ddd7c002ef9b4e5d175b", "commitAfterChange": "d86329ca8fe253b7b830b77595944d99a7ed4cfd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static boolean whitespaceBetween(int fromIndex, int toIndex, String aLine)", "signatureAfterChange": "     private static boolean whitespaceBetween(         int aFromIndex, int aToIndex, String aLine)", "diff": ["-    private static boolean whitespaceBetween(int fromIndex, int toIndex, String aLine)", "+    private static boolean whitespaceBetween(", "+        int aFromIndex, int aToIndex, String aLine)", "-        for (int i = fromIndex; i < toIndex; i++)", "-        {", "-            if (!Character.isWhitespace(aLine.charAt(i)))", "-            {", "+        for (int i = aFromIndex; i < aToIndex; i++) {", "+            if (!Character.isWhitespace(aLine.charAt(i))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffffe093e916667677285cf1a2660b51", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private boolean hasRedundantWhitespace(String aLine, int aAfter)", "signatureAfterChange": "     private boolean hasRedundantWhitespace(String line, int after)", "diff": ["-    private boolean hasRedundantWhitespace(String aLine, int aAfter)", "+    private boolean hasRedundantWhitespace(String line, int after)", "-        boolean result = !mAllowLineBreaks;", "-        for (int i = aAfter + 1; !result && (i < aLine.length()); i++) {", "-            if (!Character.isWhitespace(aLine.charAt(i))) {", "+        boolean result = !allowLineBreaks;", "+        for (int i = after + 1; !result && (i < line.length()); i++) {", "+            if (!Character.isWhitespace(line.charAt(i))) {"]}]}