{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef1f57b2d31e48358bb6f8c286252b4f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28d1bc36106e81075f6ce5684d60027a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "01d27913a71c29d6a769ed98ca7dd4ba01fe31eb", "commitAfterChange": "4cbd709c019cf1b69796858506d673f7b66d37c7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public static DetailAST parse(FileContents aContents)         throws TokenStreamException, RecognitionException", "signatureAfterChange": "     public static DetailAST parse(FileContents aContents)         throws TokenStreamException, RecognitionException", "diff": ["-            final Java14Lexer jl = new Java14Lexer(sar);", "+            final GeneratedJava14Lexer jl = new GeneratedJava14Lexer(sar);", "-            final Java14Recognizer jr =", "-                new NEWSilentJava14Recognizer(jl);", "+            final GeneratedJava14Recognizer jr =", "+                new SilentJava14Recognizer(jl);", "-            final JavaLexer jl = new JavaLexer(sar);", "+            final GeneratedJavaLexer jl = new GeneratedJavaLexer(sar);", "-            final JavaRecognizer jr = new JavaRecognizer(jl);", "+            final GeneratedJavaRecognizer jr = new GeneratedJavaRecognizer(jl);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74980c82912f957700232829b8b6b84c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "08c03a7a57b76c96d234a1e0c3c10a0499472f89", "commitAfterChange": "190c0e5ca6cff056a136bc2c17f7678eb10686c7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private int process(String aFileName)", "signatureAfterChange": "     private int process(String aFileName)", "diff": ["-            final Reader sar = new StringArrayReader(lines);", "+                // try the 1.4 grammar first, this will succeed for", "+                // all code that compiles without any warnings in JDK 1.4,", "+                // that should cover most cases", "+", "+                final Reader sar = new StringArrayReader(lines);", "-                // filecontains \"assert\" statement. Retry with a", "+                // file contains \"assert\" as an identifier. Retry with a", "+                final Reader sar = new StringArrayReader(lines);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e55e2ee7d3cb7d52a314d17dec030aa8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "e2ec464f27b2e30ee66802cb9f8f1899b2dc4a24", "commitAfterChange": "b671e6bb1c0652cfc1ccd07355cac99df584eb2f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private int process(String aFileName)", "signatureAfterChange": "     private int process(String aFileName)", "diff": ["+            final Reader sar = new StringArrayReader(lines);", "+            VerifierSingleton.getInstance().clearMessages();", "+            VerifierSingleton.getInstance().setLines(lines);", "-                VerifierSingleton.getInstance().clearMessages();", "-                VerifierSingleton.getInstance().setLines(lines);", "-                final Reader sar = new StringArrayReader(lines);", "-", "-", "-                VerifierSingleton.getInstance().clearMessages();", "-                VerifierSingleton.getInstance().setLines(lines);", "-                final Reader sar = new StringArrayReader(lines);"]}]}