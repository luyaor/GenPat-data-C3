{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4db2aca4be411741a3432bfa806a5c8b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7dd91d7ce4ae615e09df6a3abe7ec92", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "262209477f39964a63103613f3e2c985da083371", "commitAfterChange": "08638b5f739d9929698860048c052da2d5f80209", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "     @Override     public void leaveToken(DetailAST aAST)", "diff": ["+    @Override", "-            final HashMap state = (HashMap) mScopeStack.pop();", "-            final Iterator finalVars = state.values().iterator();", "-", "-            while (finalVars.hasNext()) {", "-                final DetailAST var = (DetailAST) finalVars.next();", "-                log(var.getLineNo(), var.getColumnNo(),", "-                    \"final.variable\", var.getText());", "+            final Map<String, DetailAST> state = mScopeStack.pop();", "+            for (DetailAST var : state.values()) {", "+                log(var.getLineNo(), var.getColumnNo(), \"final.variable\", var", "+                        .getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9e7c122dfc1701964298c97cc54a604", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "6fc4ae2d4f85288769cdb13e9cd9ee39fba74143", "commitAfterChange": "31a9795d84272acee8e5a124e67c416c427813a5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processVariable(DetailAST aAST)", "signatureAfterChange": "     private void processVariable(DetailAST aAST)", "diff": ["-                final boolean inStatic = inStatic(aAST);", "-                final Iterator it = mFieldsStack.iterator();", "-                while (it.hasNext()) {", "-                    final FieldFrame frame = (FieldFrame) it.next();", "+                boolean inStatic = inStatic(aAST);", "+                final ListIterator it =", "+                    mFieldsStack.listIterator(mFieldsStack.size());", "+                while (it.hasPrevious()) {", "+                    final FieldFrame frame = (FieldFrame) it.previous();", "+                    inStatic |= frame.isStaticClass();"]}]}