{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a6d70f20f41fb2c721da956c87f18ea", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1f6048f8614e9d8f48a666fb971d82f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MemberDefHandler.java", "commitBeforeChange": "82f4a9852de874b4849a67f53f4e541d13db869b", "commitAfterChange": "24c13109a52b0b5085b5db2e8b0ae96655d9480c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 6, "signatureBeforeChange": "                 @Override                 public DetailAST findLastNode(DetailAST firstNode)", "signatureAfterChange": "     private static DetailAST getVarDefStatementSemicolon(DetailAST variableDef)", "diff": ["-            new LineWrappingHandler(getIndentCheck(), getMainAst()) {", "-                @Override", "-                public DetailAST findLastNode(DetailAST firstNode)", "-                {", "-                    DetailAST lastNode = getFirstNode().getLastChild();", "-                    if (lastNode.getType() != TokenTypes.SEMI) {", "-                        lastNode = getFirstNode().getNextSibling();", "-                    }", "-                    return lastNode;", "-                }", "+     */", "+    private static DetailAST getVarDefStatementSemicolon(DetailAST variableDef)", "+    {", "+        DetailAST lastNode = variableDef.getLastChild();", "+        if (lastNode.getType() != TokenTypes.SEMI) {", "+            lastNode = variableDef.getNextSibling();", "+        }", "+        return lastNode;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d89e1fc22182d47eb81e4068d634f294", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java", "commitBeforeChange": "82f4a9852de874b4849a67f53f4e541d13db869b", "commitAfterChange": "24c13109a52b0b5085b5db2e8b0ae96655d9480c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "                 @Override                 public DetailAST findLastNode(DetailAST firstNode)", "signatureAfterChange": "     private static DetailAST getMethodCallLastNode(DetailAST firstNode)", "diff": ["-            new LineWrappingHandler(getIndentCheck(), getMainAst()) {", "-                @Override", "-                public DetailAST findLastNode(DetailAST firstNode)", "-                {", "-                    DetailAST lastNode;", "-                    if (getFirstNode().getNextSibling() == null) {", "-                        lastNode = getFirstNode().getLastChild();", "-                    }", "-                    else {", "-                        lastNode = getFirstNode().getNextSibling();", "-                    }", "-                    return lastNode;", "-                }", "+     */", "+    private static DetailAST getMethodCallLastNode(DetailAST firstNode)", "+    {", "+        DetailAST lastNode;", "+        if (firstNode.getNextSibling() == null) {", "+            lastNode = firstNode.getLastChild();", "+        }", "+        else {", "+            lastNode = firstNode.getNextSibling();", "+        }", "+        return lastNode;", "+    }"]}]}