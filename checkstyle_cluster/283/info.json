{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8c1b33d853b293dd7e9cf1ad7b9b8f9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "476ecad8240b75705d7171d19d140f37", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "e380ac8df92c051d843d380d5e8a6fe90af9df9d", "commitAfterChange": "ab2f93f9bf61816d84154e636d32c81c05854e24", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static Checker createChecker(Configuration config,                                          AuditListener nosy)", "signatureAfterChange": "     private static Checker createChecker(Configuration config,             AuditListener auditListener)             throws CheckstyleException", "diff": ["-                                         AuditListener nosy)", "+            AuditListener auditListener)", "+            throws CheckstyleException", "-        Checker c = null;", "-        try {", "-            c = new Checker();", "+        final Checker checker = new Checker();", "-            final ClassLoader moduleClassLoader =", "-                Checker.class.getClassLoader();", "-            c.setModuleClassLoader(moduleClassLoader);", "-            c.configure(config);", "-            c.addListener(nosy);", "-        }", "-        catch (final Exception e) {", "-            System.out.println(\"Unable to create Checker: \"", "-                               + e.getMessage());", "-            System.exit(1);", "-        }", "-        return c;", "+        final ClassLoader moduleClassLoader = Checker.class.getClassLoader();", "+        checker.setModuleClassLoader(moduleClassLoader);", "+        checker.configure(config);", "+        checker.addListener(auditListener);", "+", "+        return checker;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71f687d1a720dc699f5699aa77439fe7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "bd503e1576ded224169c1f15b9ca6cb8d08f9cb2", "commitAfterChange": "f2b01a44a216e88957eb6cb22e4b0e39429a6c84", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main(String[] aArgs)", "signatureAfterChange": "     public static void main(String[] aArgs)", "diff": ["+        // add custom listeners", "+        if (line.hasOption(\"l\")) {", "+            final String listeners = line.getOptionValue(\"l\");", "+            final StringTokenizer t = new StringTokenizer(listeners, \",\");", "+            while (t.hasMoreTokens()) {", "+                final String className = t.nextToken();", "+                AuditListener customListener = null;", "+                try {", "+                    customListener =", "+                        (AuditListener) Class.forName(className).newInstance();", "+                }", "+                catch (Exception e) {", "+                    System.out.println(\"Unable to create listener '\"", "+                        + className + \"': \" + e);", "+                    e.printStackTrace(System.out);", "+                    System.exit(1);", "+                }", "+                c.addListener(customListener);", "+            }", "+        }", "+"]}]}