{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c9a4002de92a8e7d4fc9762962db2789", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6d469f61d0af60aa66556c137a1e2f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "commitAfterChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void startElement(final String namespaceURI,                              final String locqName,                              final String qName,                              final Attributes atts)         throws SAXException", "signatureAfterChange": "      @Override     public void startElement(final String namespaceURI,                              final String locqName,                              final String qName,                              final Attributes attributes)         throws SAXException", "diff": ["-                             final Attributes atts)", "+                             final Attributes attributes)", "-            final String pkg = safeGet(atts, PKG_ATTRIBUTE_NAME);", "+            final String pkg = safeGet(attributes, PKG_ATTRIBUTE_NAME);", "-            final String name = safeGet(atts, \"name\");", "+            final String name = safeGet(attributes, \"name\");", "-            final boolean isLocalOnly = atts.getValue(\"local-only\") != null;", "-            final String pkg = atts.getValue(PKG_ATTRIBUTE_NAME);", "-            final boolean regex = atts.getValue(\"regex\") != null;", "+            final boolean isLocalOnly = attributes.getValue(\"local-only\") != null;", "+            final String pkg = attributes.getValue(PKG_ATTRIBUTE_NAME);", "+            final boolean regex = attributes.getValue(\"regex\") != null;", "-                        atts.getValue(\"exact-match\") != null;", "+                        attributes.getValue(\"exact-match\") != null;", "-                final String clazz = safeGet(atts, \"class\");", "+                final String clazz = safeGet(attributes, \"class\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fac1d428aa1a364271976255544309d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "28c5d6f06244f45a5673a3ef5bd0d927b0042496", "commitAfterChange": "a5d30bf353dde01376d45fb031d9236b11a835d1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void startElement(final String aNamespaceURI,         final String aLocalName, final String aQName, final Attributes aAtts)         throws SAXException", "signatureAfterChange": "     public void startElement(final String aNamespaceURI,                              final String aLocalName,                              final String aQName,                              final Attributes aAtts)         throws SAXException", "diff": ["-        final String aLocalName, final String aQName, final Attributes aAtts)", "+                             final String aLocalName,", "+                             final String aQName,", "+                             final Attributes aAtts)", "-            final String pkg = safeGet(aAtts, \"pkg\");", "+            // Need to handle either \"pkg\" or \"class\" attribute.", "+            // May have \"exact-match\" for \"pkg\"", "+            // May have \"local-only\"", "+            final boolean isAllow = aQName.equals(\"allow\");", "+            final boolean isLocalOnly = (aAtts.getValue(\"local-only\") != null);", "+            final String pkg = aAtts.getValue(\"pkg\");", "+            final Guard g;", "+            if (pkg != null) {", "+                final boolean exactMatch =", "+                    (aAtts.getValue(\"exact-match\") != null);", "+                g = new Guard(isAllow, isLocalOnly, pkg, exactMatch);", "+            }", "+            else {", "+                final String clazz = safeGet(aAtts, \"class\");", "+                g = new Guard(isAllow, isLocalOnly, clazz);", "+            }", "+", "-            pc.addGuard(new Guard(aQName.equals(\"allow\"), pkg));", "+            pc.addGuard(g);"]}]}