{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f6cfd4e4dbbc6f00c00f5f0b6949bb96", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9142eaa8fa336a0c856e9c4c5d744f9c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java", "commitBeforeChange": "fc8a5ae78cffc8f6d5951a72fc722c52dedc1d04", "commitAfterChange": "bf16d371dab210594755d04afc4697269ed088c0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     protected void processFiltered(File aFile, List<String> aLines)", "diff": ["-    public void beginTree(DetailAST aRootAST)", "+    protected void processFiltered(File aFile, List<String> aLines)", "-        if (getHeaderLines().length > getLines().length) {", "+        if (getHeaderLines().size() > aLines.size()) {", "-            for (int i = 0; i < getHeaderLines().length; i++) {", "-                if (!isMatch(i)) {", "-                    log(i + 1, \"header.mismatch\", getHeaderLines()[i]);", "+            for (int i = 0; i < getHeaderLines().size(); i++) {", "+                if (!isMatch(i, aLines.get(i))) {", "+                    log(i + 1, \"header.mismatch\", getHeaderLines().get(i));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeed8a0cc176044167606dea371de5d2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "02da493e64154d6bbac09a64d67a025f0e72cad1", "commitAfterChange": "7a6bf01c4dac8aedcdbd52aeed7500ba7a3ab0f8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     static PkgControl load(final String aFilename) throws CheckstyleException", "signatureAfterChange": "     static PkgControl load(final URI aUri) throws CheckstyleException", "diff": ["-    static PkgControl load(final String aFilename) throws CheckstyleException", "+    static PkgControl load(final URI aUri) throws CheckstyleException", "-        FileInputStream fis = null;", "+        InputStream is = null;", "-            fis = new FileInputStream(aFilename);", "+            is = aUri.toURL().openStream();", "-        catch (final FileNotFoundException e) {", "-            throw new CheckstyleException(\"unable to find \" + aFilename, e);", "+        catch (final MalformedURLException e) {", "+            throw new CheckstyleException(\"syntax error in url \" + aUri, e);", "-        final InputSource source = new InputSource(fis);", "-        return load(source, aFilename);", "+        catch (final IOException e) {", "+            throw new CheckstyleException(\"unable to find \" + aUri, e);", "+        }", "+        final InputSource source = new InputSource(is);", "+        return load(source, aUri);"]}]}