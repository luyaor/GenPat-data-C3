{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea8cc41236967ddc7863a145ad0cb693", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bfaf56e56ea9f1c65332a139697a5db", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-            int i;", "-            for (i = 0; headerLineNo < headerSize && i < fileSize; i++) {", "-                final String line = lines.get(i);", "+            int index;", "+            for (index = 0; headerLineNo < headerSize && index < fileSize; index++) {", "+                final String line = lines.get(index);", "-                    log(i + 1, MSG_HEADER_MISMATCH, getHeaderLines().get(", "+                    log(index + 1, MSG_HEADER_MISMATCH, getHeaderLines().get(", "-            if (i == fileSize) {", "+            if (index == fileSize) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dba5d43eea5419c8c366f8800d198de4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderChecker.java", "commitBeforeChange": "fc8a5ae78cffc8f6d5951a72fc722c52dedc1d04", "commitAfterChange": "bf16d371dab210594755d04afc4697269ed088c0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     void checkLines(final String[] aLines)", "signatureAfterChange": "     void checkLines(final List<String> aLines)", "diff": ["-    void checkLines(final String[] aLines)", "+    void checkLines(final List<String> aLines)", "-        final int headerSize = mHeaderLines.length;", "-        final int fileSize = aLines.length;", "+        final int headerSize = mHeaderLines.size();", "+        final int fileSize = aLines.size();", "-                final String line = aLines[i];", "+                final String line = aLines.get(i);", "-                            i + 1, mHeaderLines[headerLineNo]);", "+                            i + 1, mHeaderLines.get(headerLineNo));"]}]}