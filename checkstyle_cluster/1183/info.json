{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "08336e9353f8898eded522302660d855", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05cda9744b6488770c21fa326a988476", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void startElement(final String aNamespaceURI,                              final String aLocalName,                              final String aQName,                              final Attributes aAtts)         throws SAXException", "signatureAfterChange": "      @Override     public void startElement(final String namespaceURI,                              final String locqName,                              final String qName,                              final Attributes atts)         throws SAXException", "diff": ["-    public void startElement(final String aNamespaceURI,", "-                             final String aLocalName,", "-                             final String aQName,", "-                             final Attributes aAtts)", "+    public void startElement(final String namespaceURI,", "+                             final String locqName,", "+                             final String qName,", "+                             final Attributes atts)", "-        if (\"import-control\".equals(aQName)) {", "-            final String pkg = safeGet(aAtts, \"pkg\");", "-            mStack.push(new PkgControl(pkg));", "+        if (\"import-control\".equals(qName)) {", "+            final String pkg = safeGet(atts, \"pkg\");", "+            stack.push(new PkgControl(pkg));", "-        else if (\"subpackage\".equals(aQName)) {", "-            assert !mStack.isEmpty();", "-            final String name = safeGet(aAtts, \"name\");", "-            mStack.push(new PkgControl(mStack.peek(), name));", "+        else if (\"subpackage\".equals(qName)) {", "+            assert !stack.isEmpty();", "+            final String name = safeGet(atts, \"name\");", "+            stack.push(new PkgControl(stack.peek(), name));", "-        else if (\"allow\".equals(aQName) || \"disallow\".equals(aQName)) {", "-            assert !mStack.isEmpty();", "+        else if (\"allow\".equals(qName) || \"disallow\".equals(qName)) {", "+            assert !stack.isEmpty();", "-            final boolean isAllow = \"allow\".equals(aQName);", "-            final boolean isLocalOnly = (aAtts.getValue(\"local-only\") != null);", "-            final String pkg = aAtts.getValue(\"pkg\");", "-            final boolean regex = (aAtts.getValue(\"regex\") != null);", "+            final boolean isAllow = \"allow\".equals(qName);", "+            final boolean isLocalOnly = (atts.getValue(\"local-only\") != null);", "+            final String pkg = atts.getValue(\"pkg\");", "+            final boolean regex = (atts.getValue(\"regex\") != null);", "-                    (aAtts.getValue(\"exact-match\") != null);", "+                    (atts.getValue(\"exact-match\") != null);", "-                final String clazz = safeGet(aAtts, \"class\");", "+                final String clazz = safeGet(atts, \"class\");", "-            final PkgControl pc = mStack.peek();", "+            final PkgControl pc = stack.peek();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0792908f2037d402299f21bf7767b218", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          @Override         public void startElement(String aNamespaceURI,                                  String aLocalName,                                  String aQName,                                  Attributes aAtts)             throws SAXException", "signatureAfterChange": "          @Override         public void startElement(String namespaceURI,                                  String localName,                                  String qName,                                  Attributes atts)             throws SAXException", "diff": ["-        public void startElement(String aNamespaceURI,", "-                                 String aLocalName,", "-                                 String aQName,", "-                                 Attributes aAtts)", "+        public void startElement(String namespaceURI,", "+                                 String localName,", "+                                 String qName,", "+                                 Attributes atts)", "-            if (aQName.equals(MODULE)) {", "+            if (qName.equals(MODULE)) {", "-                final String name = aAtts.getValue(NAME);", "+                final String name = atts.getValue(NAME);", "-                if (mConfiguration == null) {", "-                    mConfiguration = conf;", "+                if (configuration == null) {", "+                    configuration = conf;", "-                if (!mConfigStack.isEmpty()) {", "+                if (!configStack.isEmpty()) {", "-                        mConfigStack.peek();", "+                        configStack.peek();", "-                mConfigStack.push(conf);", "+                configStack.push(conf);", "-            else if (aQName.equals(PROPERTY)) {", "+            else if (qName.equals(PROPERTY)) {", "-                final String name = aAtts.getValue(NAME);", "+                final String name = atts.getValue(NAME);", "-                    value = replaceProperties(aAtts.getValue(VALUE),", "-                        mOverridePropsResolver, aAtts.getValue(DEFAULT));", "+                    value = replaceProperties(atts.getValue(VALUE),", "+                        overridePropsResolver, atts.getValue(DEFAULT));", "-                    mConfigStack.peek();", "+                    configStack.peek();", "-            else if (aQName.equals(MESSAGE)) {", "+            else if (qName.equals(MESSAGE)) {", "-                final String key = aAtts.getValue(KEY);", "-                final String value = aAtts.getValue(VALUE);", "+                final String key = atts.getValue(KEY);", "+                final String value = atts.getValue(VALUE);", "-                final DefaultConfiguration top = mConfigStack.peek();", "+                final DefaultConfiguration top = configStack.peek();"]}]}