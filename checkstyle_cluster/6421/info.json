{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ddc8963525a6f6ae5ef8cfaceeec24d7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11676910992c513b5983151953497732", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean hasEmptyLineAfter(DetailAST aToken)", "signatureAfterChange": "     private boolean hasEmptyLineAfter(DetailAST token)", "diff": ["-    private boolean hasEmptyLineAfter(DetailAST aToken)", "+    private boolean hasEmptyLineAfter(DetailAST token)", "-        DetailAST lastToken = aToken.getLastChild().getLastChild();", "+        DetailAST lastToken = token.getLastChild().getLastChild();", "-            lastToken = aToken.getLastChild();", "+            lastToken = token.getLastChild();", "-        return aToken.getNextSibling().getLineNo() - lastToken.getLineNo() > 1;", "+        return token.getNextSibling().getLineNo() - lastToken.getLineNo() > 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fed009bd07ab18ae5e309d6517f41e50", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private static DetailAST createCommentAstFromToken(Token aToken)", "signatureAfterChange": "     private static DetailAST createCommentAstFromToken(Token token)", "diff": ["-    private static DetailAST createCommentAstFromToken(Token aToken)", "+    private static DetailAST createCommentAstFromToken(Token token)", "-        switch (aToken.getType()) {", "+        switch (token.getType()) {", "-            return createSlCommentNode(aToken);", "+            return createSlCommentNode(token);", "-            return createBlockCommentNode(aToken);", "+            return createBlockCommentNode(token);"]}]}