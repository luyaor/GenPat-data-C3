{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "039a07831a56145656eaf4d7531bef83", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "062e78821e80fa453cc5d7006b26f093", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testStatement()         throws Exception", "signatureAfterChange": "      @Test     public void testStatement()         throws Exception", "diff": ["-            \"52:65: Must have at least one statement.\",", "-            \"54:41: Must have at least one statement.\",", "-            \"71:38: Must have at least one statement.\",", "-            \"72:52: Must have at least one statement.\",", "-            \"73:45: Must have at least one statement.\",", "-            \"75:13: Must have at least one statement.\",", "-            \"77:17: Must have at least one statement.\",", "-            \"79:13: Must have at least one statement.\",", "-            \"82:17: Must have at least one statement.\",", "-            \"178:5: Must have at least one statement.\",", "+            \"52:65: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"54:41: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"71:38: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"72:52: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"73:45: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"75:13: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"77:17: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"79:13: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"82:17: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"178:5: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d0b193eaa80c22aaa8a161b3161ac4d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     public void testSetterGetterOff() throws Exception", "signatureAfterChange": "      @Test     public void testSetterGetterOff() throws Exception", "diff": ["-            \"7:5: Missing a Javadoc comment.\",", "-            \"12:5: Missing a Javadoc comment.\",", "-            \"17:5: Missing a Javadoc comment.\",", "-            \"22:5: Missing a Javadoc comment.\",", "-            \"28:5: Missing a Javadoc comment.\",", "-            \"32:5: Missing a Javadoc comment.\",", "-            \"37:5: Missing a Javadoc comment.\",", "-            \"43:5: Missing a Javadoc comment.\",", "-            \"48:5: Missing a Javadoc comment.\",", "-            \"53:5: Missing a Javadoc comment.\", };", "+            \"7:5: \" + getCheckMessage(MSG_JAVADOC_MISSING),", "+            \"12:5: \" + getCheckMessage(MSG_JAVADOC_MISSING),", "+            \"17:5: \" + getCheckMessage(MSG_JAVADOC_MISSING),", "+            \"22:5: \" + getCheckMessage(MSG_JAVADOC_MISSING),", "+            \"28:5: \" + getCheckMessage(MSG_JAVADOC_MISSING),", "+            \"32:5: \" + getCheckMessage(MSG_JAVADOC_MISSING),", "+            \"37:5: \" + getCheckMessage(MSG_JAVADOC_MISSING),", "+            \"43:5: \" + getCheckMessage(MSG_JAVADOC_MISSING),", "+            \"48:5: \" + getCheckMessage(MSG_JAVADOC_MISSING),", "+            \"53:5: \" + getCheckMessage(MSG_JAVADOC_MISSING), };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74149987216fc3daf8f0f9bf0a6e5c0b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-            \"14:13: Fall through from previous branch of the switch statement.\",", "-            \"38:13: Fall through from previous branch of the switch statement.\",", "-            \"53:13: Fall through from previous branch of the switch statement.\",", "-            \"70:13: Fall through from previous branch of the switch statement.\",", "-            \"87:13: Fall through from previous branch of the switch statement.\",", "-            \"105:13: Fall through from previous branch of the switch statement.\",", "-            \"123:13: Fall through from previous branch of the switch statement.\",", "-            \"369:11: Fall through from previous branch of the switch statement.\",", "-            \"372:11: Fall through from previous branch of the switch statement.\",", "-            \"374:40: Fall through from previous branch of the switch statement.\",", "+            \"14:13: \" + getCheckMessage(MSG_FALL_THROUGH),", "+            \"38:13: \" + getCheckMessage(MSG_FALL_THROUGH),", "+            \"53:13: \" + getCheckMessage(MSG_FALL_THROUGH),", "+            \"70:13: \" + getCheckMessage(MSG_FALL_THROUGH),", "+            \"87:13: \" + getCheckMessage(MSG_FALL_THROUGH),", "+            \"105:13: \" + getCheckMessage(MSG_FALL_THROUGH),", "+            \"123:13: \" + getCheckMessage(MSG_FALL_THROUGH),", "+            \"369:11: \" + getCheckMessage(MSG_FALL_THROUGH),", "+            \"372:11: \" + getCheckMessage(MSG_FALL_THROUGH),", "+            \"374:40: \" + getCheckMessage(MSG_FALL_THROUGH),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae7648d60c41221a2648f191669296e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testScopes() throws Exception", "signatureAfterChange": "      @Test     public void testScopes() throws Exception", "diff": ["-            \"3: Missing a Javadoc comment.\",", "-            \"15: Missing a Javadoc comment.\",", "-            \"27: Missing a Javadoc comment.\",", "-            \"39: Missing a Javadoc comment.\",", "-            \"52: Missing a Javadoc comment.\",", "-            \"63: Missing a Javadoc comment.\",", "-            \"75: Missing a Javadoc comment.\",", "-            \"87: Missing a Javadoc comment.\",", "-            \"99: Missing a Javadoc comment.\",", "-            \"111: Missing a Javadoc comment.\",", "+            \"3: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"15: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"27: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"39: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"52: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"63: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"75: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"87: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"99: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"111: \" + getCheckMessage(JAVADOC_MISSING),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4c47645f60bbfe32ed64e288ee37847", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault()         throws Exception", "signatureAfterChange": "     @Test     public void testDefault()         throws Exception", "diff": ["-            \"52:65: Must have at least one statement.\",", "-            \"54:41: Must have at least one statement.\",", "-            \"71:38: Must have at least one statement.\",", "-            \"72:52: Must have at least one statement.\",", "-            \"73:45: Must have at least one statement.\",", "-            \"75:13: Must have at least one statement.\",", "-            \"77:17: Must have at least one statement.\",", "-            \"79:13: Must have at least one statement.\",", "-            \"82:17: Must have at least one statement.\",", "-            \"178:5: Must have at least one statement.\",", "+            \"52:65: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"54:41: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"71:38: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"72:52: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"73:45: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"75:13: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"77:17: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"79:13: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"82:17: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),", "+            \"178:5: \" + getCheckMessage(MSG_KEY_BLOCK_NO_STMT),"]}]}