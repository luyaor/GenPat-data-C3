{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf1693b2fe9ab024a7229bfc5191f5c3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2923704af7a211229e03b17c19dc3470", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java", "commitBeforeChange": "adebc9da6f1c59de41426400149d2da0339e797e", "commitAfterChange": "c6a70d4cca08ebdb2b4b26eff3e7da076ada184d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected IndentLevel getLevelImpl()", "signatureAfterChange": "      @Override     protected IndentLevel getLevelImpl()", "diff": ["+        IndentLevel indentLevel;", "-                return container.getLevel();", "+                indentLevel = container.getLevel();", "-            if (isChainedMethodCallWrapped()) {", "-                return container.getLevel();", "+            else if (isChainedMethodCallWrapped()) {", "+                indentLevel = container.getLevel();", "-                return new IndentLevel(container.getLevel(), getBasicOffset());", "+                indentLevel = new IndentLevel(container.getLevel(), getBasicOffset());", "-", "-        // if our expression isn't first on the line, just use the start", "-        // of the line", "-        final LineSet lines = new LineSet();", "-        findSubtreeLines(lines, getMainAst().getFirstChild(), true);", "-        final int firstCol = lines.firstLineCol();", "-        final int lineStart = getLineStart(getFirstAst(getMainAst()));", "-        if (lineStart != firstCol) {", "-            return new IndentLevel(lineStart);", "+        else {", "+            // if our expression isn't first on the line, just use the start", "+            // of the line", "+            final LineSet lines = new LineSet();", "+            findSubtreeLines(lines, getMainAst().getFirstChild(), true);", "+            final int firstCol = lines.firstLineCol();", "+            final int lineStart = getLineStart(getFirstAst(getMainAst()));", "+            if (lineStart != firstCol) {", "+                indentLevel = new IndentLevel(lineStart);", "+            }", "+            else {", "+                indentLevel = super.getLevelImpl();", "+            }", "-        return super.getLevelImpl();", "+        return indentLevel;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "417ad5ded0acf1fd78333104105936ee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "commitAfterChange": "69a3d541b4888e5e0e6ab09aa675667155c65381", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public static boolean isReference(String ent)", "signatureAfterChange": "     public static boolean isReference(String ent)", "diff": ["-        if (ent.charAt(0) != '&' || !CommonUtils.endsWithChar(ent, ';')) {", "-            return false;", "-        }", "+        boolean reference = false;", "-        if (ent.charAt(1) == '#') {", "+        if (ent.charAt(0) != '&' || !CommonUtils.endsWithChar(ent, ';')) {", "+            reference = false;", "+        }", "+        else if (ent.charAt(1) == '#') {", "-                return true;", "+                reference = true;", "-                return false;", "+                reference = false;", "-", "-        final String name = ent.substring(1, ent.length() - 1);", "-        for (String element : ENTITIES) {", "-            if (name.equals(element)) {", "-                return true;", "+        else {", "+            final String name = ent.substring(1, ent.length() - 1);", "+            for (String element : ENTITIES) {", "+                if (name.equals(element)) {", "+                    reference = true;", "+                    break;", "+                }", "-        return false;", "+        return reference;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e21acf3d72556fda6c638363dc27a4e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/MagicNumberCheck.java", "commitBeforeChange": "ee3ea77d620d2f21a18a0fe878a911a975545024", "commitAfterChange": "b5203fd519f61b652a6d56a24eb9d18388eb2155", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private float parseFloat(String aText, int aType)", "signatureAfterChange": "     private float parseFloat(String aText, int aType)", "diff": ["+        float result = 0;", "-            return Float.parseFloat(aText);", "+            result = Float.parseFloat(aText);", "-            return (float) Double.parseDouble(aText);", "+            result = (float) Double.parseDouble(aText);", "-                    return (float) Integer.parseInt(aText, radix);", "-                }", "-                else {", "-                    return 0;", "+                    result = (float) Integer.parseInt(aText, radix);", "-                    return (float) Long.parseLong(aText, radix);", "+                    result = (float) Long.parseLong(aText, radix);", "-                else {", "-                    return 0;", "-                } ", "-            }", "-            else {", "-                return 0;", "+        return result;"]}]}