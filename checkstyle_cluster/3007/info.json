{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e7af4941d2b6f636753343d82627ae0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ea853c8d0ca835d0a6b0cef8b5a3874", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LocalVariableNameCheck.java", "commitBeforeChange": "ec19316322d0540f0734f3812c9a16394dae9c3a", "commitAfterChange": "32ca737edcd6f6a2a1e55f0b4ffcef6cce511812", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     protected final boolean mustCheckName(DetailAST aAST)", "signatureAfterChange": "      @Override     protected final boolean mustCheckName(DetailAST aAST)", "diff": ["+        if (mAllowOneCharVarInForLoop && isForLoopVariable(aAST)) {", "+            final String variableName =", "+                    aAST.findFirstToken(TokenTypes.IDENT).getText();", "+            return !sSingleChar.matcher(variableName).find();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fe7792acd1af66fab9aef862ddd3881", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java", "commitBeforeChange": "e21676f52f3d68294122244cea63b4ecbe92de8f", "commitAfterChange": "0f9490c4ab86e6df2cfe90db1ffe04e906a5edad", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 28, "signatureBeforeChange": "     private static DetailAST getPrevStatementWhenCommentIsUnderCase(DetailAST parentStatement)", "signatureAfterChange": "     private static DetailAST getPrevStatementWhenCommentIsUnderCase(DetailAST parentStatement)", "diff": ["-                prevStmt = blockBody.getFirstChild().getFirstChild();", "+                if (isUsingOfObjectReferenceToInvokeMethod(blockBody)) {", "+                    prevStmt = findStartTokenOfMethodCallChain(blockBody);", "+                }", "+                else {", "+                    prevStmt = blockBody.getFirstChild().getFirstChild();", "+                }", "-                prevStmt = blockBody;", "+                if (blockBody.getType() == TokenTypes.SLIST) {", "+                    prevStmt = blockBody.getParent().getParent();", "+                }", "+                else {", "+                    prevStmt = blockBody;", "+                }"]}]}