{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d6fc6ea9fbfe810146a5113941bdd6cf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27c300f2def922695f0bb84008ab42f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "28193fd5f053dd45f8bfa96b500b5e41a79a55cb", "commitAfterChange": "c8aae6e57e6e348e0ad113a6d9522ca247f40cba", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testBadInt()         throws CheckstyleException", "signatureAfterChange": "      public void testBadInt()         throws CheckstyleException", "diff": ["-            assertEquals(", "-                \"number format exception src/testinputs/com/puppycrawl/tools/checkstyle/suppressions_bad_int.xml - For input string: \\\"a\\\"\",", "-                ex.getMessage());", "+            assertTrue(", "+                ex.getMessage(),", "+                ex.getMessage().startsWith(\"number format exception src/testinputs/com/puppycrawl/tools/checkstyle/suppressions_bad_int.xml - \"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45c09fad8dd26951dc224512c0b489e6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java", "commitBeforeChange": "f47587c9fb66cf46fbd2eb5691449cda6d551ecb", "commitAfterChange": "6ab5bf1ae57aa57a79b46b892c5bd7542df2b272", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testRequiredTokenIsNotInDefaultTokens() throws Exception", "signatureAfterChange": "      @Test     public void testRequiredTokenIsNotInDefaultTokens() throws Exception", "diff": ["-        catch (CheckstyleException ignored) {", "-            //expected", "+        catch (CheckstyleException ex) {", "+            assertTrue(ex.getMessage().startsWith(\"cannot initialize module\"", "+                + \" com.puppycrawl.tools.checkstyle.TreeWalker - Token \\\"\"", "+                + TokenTypes.ASSIGN + \"\\\" from required\"", "+                + \" tokens was not found in default tokens list in check\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4710ddb0410ec5b2697ef669d1cdc392", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "bdd55605c098cb581884a790286dfec5e57710c8", "commitAfterChange": "913028d7f2698018bb9414d763110d3ef25be875", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 63, "signatureBeforeChange": "     public void setHeaderIgnoreLineNo(int aHeaderIgnoreLineNo)", "signatureAfterChange": "     public void setHeaderIgnoreLineNo(int aHeaderIgnoreLineNo)", "diff": ["-        mHeaderIgnoreLineNo = aHeaderIgnoreLineNo;", "+        setHeaderIgnoreLines(String.valueOf(aHeaderIgnoreLineNo));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60fbe6b88f0c106b2e80148b573955a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheckTest.java", "commitBeforeChange": "e3e0c92185f2517de79f58f25be166e636fbd1f2", "commitAfterChange": "47cfb3621da4ea9f9692c79ae284f7433a2e9bda", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testRegexpHeader() throws Exception", "signatureAfterChange": "      @Test     public void testNotMatch() throws Exception", "diff": ["-    @Test", "-    public void testRegexpHeader() throws Exception {", "-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(RegexpHeaderCheck.class);", "-        checkConfig.addAttribute(\"headerFile\", getPath(\"regexp.header\"));", "-        final String[] expected = {", "-            \"3: \" + getCheckMessage(MSG_MISMATCH, \"// Created: 2002\"),", "-        };", "-        verify(checkConfig, getPath(\"InputScopeAnonInner.java\"), expected);", "-    }", "+", "+    @Test", "+    public void testNotMatch() throws Exception {", "+        final DefaultConfiguration checkConfig =", "+                createCheckConfig(HeaderCheck.class);", "+        checkConfig.addAttribute(\"headerFile\", getPath(\"configs/java.header\"));", "+        checkConfig.addAttribute(\"ignoreLines\", \"\");", "+        final String[] expected = {", "+            \"2: \" + getCheckMessage(MSG_MISMATCH,", "+                    \"// checkstyle: Checks Java source code for adherence to a set of rules.\"),", "+        };", "+        verify(checkConfig, getPath(\"configs/java2.header\"), expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d9c261cd173a8a4087933730ae98b9a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/JavadocTypeCheckTest.java", "commitBeforeChange": "a0054eede02fe6109973ab4b94f3657d1ed187a3", "commitAfterChange": "730ade67d5f3f286c1004ce9a772fd4bc3bc9307", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void testAts() throws Exception", "signatureAfterChange": "          public void testAuthorRegularEx()         throws Exception", "diff": ["-    public void testAts() throws Exception", "+    ", "+    public void testAuthorRegularEx()", "+        checkConfig.addAttribute(\"authorFormat\", \"0*\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b7d42e76da2599a467837711650232e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "61dcaf5f512b026e4aad1d61946e48905d6016d4", "commitAfterChange": "88f75f5413914bea5b39ba318edf912ee706226d", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "      @Ignore     @Test     public void testLoadProperties_IOException() throws Exception", "signatureAfterChange": "      @Test     public void testLoadProperties_IOException() throws Exception", "diff": ["-    @Ignore", "-            assertEquals(\"Unable to load properties from file '\" + File.separator + \"invalid'.\",", "-                    e.getCause().getMessage());", "+            // We do separate validation for message as in Windows", "+            // disk drive letter appear in message,", "+            // so we skip that drive letter for compatibility issues", "+            assertTrue(e.getCause().getMessage().startsWith(\"Unable to load properties from file '\"));", "+            assertTrue(e.getCause().getMessage().endsWith(\"invalid'.\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c1d56062cbf33ff9656ec5107049fd2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "410111f1dcee8241b7649a83675281693a3067ec", "commitAfterChange": "e853ed726fc5ea30084202fa72c8117147fedb2b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void setConfig(File aFile)", "signatureAfterChange": "     public void setConfig(File aFile)", "diff": ["-        mConfigFile = aFile;", "+        setConfigLocation(aFile.getAbsolutePath());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a15d75170d9bf275bb1ddb4a55766ab6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "3230cfbc88352b27acf9d95bf95c7f19e20caca1", "commitAfterChange": "e543c01abdcbae8eb457ec9d3dd45191bbbd4259", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "signatureAfterChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "diff": ["-        setBooleanProperty(aProps, Defn.IGNORE_OP_WRAP_PROP);", "+        setWrapOpOption(getWrapOpOptionProperty(aProps,", "+                                                Defn.WRAP_OP_PROP,", "+                                                WrapOpOption.NL,", "+                                                aLog));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b981ee65243addbfa4cda7ee986f9aa1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "cc355f7e108fe222d957f1dbc8c3ba4eeb7ed941", "commitAfterChange": "008d7f5db9307f204bde9e16d7a4f9f42ca6c0b3", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void visitVariableDef(DetailAST variableDef)", "signatureAfterChange": "     private void visitVariableDef(DetailAST variableDef)", "diff": ["-            final DetailAST varNameAST = getVarNameAST(variableDef);", "+            final DetailAST varNameAST = variableDef.findFirstToken(TokenTypes.TYPE)", "+                .getNextSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c650f0f37b4eded1219af43914c6adc9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RightCurlyCheck.java", "commitBeforeChange": "5e1da0a26941bd93b92bcaa18f409a2a5c18425e", "commitAfterChange": "5fd3fab179d700d68281fee316519fdd907bbcd6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-                .getFirstChild());", "+                .getNextSibling().getNextSibling().getFirstChild());", "-                aAST.getFirstChild().getNextSibling().getFirstChild());", "+                Utils.getLastSibling(aAST.getFirstChild()).getFirstChild());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d91917448c05f7f60d8332afe9a10f2f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "218bbeb80dd12f2c48ab8b93d486bfbdefffde5f", "commitAfterChange": "01d0f17ca742a611c7bd358c91509856d3f44aab", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     void reportPackageName(String aName)", "signatureAfterChange": "     void reportPackageName(LineText aName)", "diff": ["-    void reportPackageName(String aName)", "+    void reportPackageName(LineText aName)", "-        mPkgName = aName;", "+        mPkgName = aName.getText();", "+        checkPackageName(aName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e94cfba50625b81a1df099d442f34534", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheck.java", "commitBeforeChange": "104e69edd63edb8d35b6ae63a17934fc5cf49267", "commitAfterChange": "81b52e27c5077f9a4f426d32b0e39a785052c715", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setIgnoreCase(boolean aCaseInsensitive)", "signatureAfterChange": "     public void setIgnoreCase(boolean aCaseInsensitive)", "diff": ["-        mIgnoreCase = aCaseInsensitive;", "+        if (aCaseInsensitive) {", "+            setCompileFlags(Pattern.CASE_INSENSITIVE);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea16cee4cdfe0074191c7de5892efb3d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/TokenUtilsTest.java", "commitBeforeChange": "f47587c9fb66cf46fbd2eb5691449cda6d551ecb", "commitAfterChange": "6ab5bf1ae57aa57a79b46b892c5bd7542df2b272", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetIntFromInaccessibleField() throws NoSuchFieldException", "signatureAfterChange": "      @Test     public void testGetIntFromInaccessibleField() throws NoSuchFieldException", "diff": ["-            // expected", "+            assertTrue(expected.getMessage().startsWith(", "+                \"java.lang.IllegalAccessException: Class\"", "+                + \" com.puppycrawl.tools.checkstyle.utils.TokenUtils\"", "+                + \" can not access a member of class java.lang.Integer with modifiers \"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eee91e269149268ef88f91e8b88817aa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheckTest.java", "commitBeforeChange": "9aa9d751071e0597b268235f2dff4fc6373b2d5f", "commitAfterChange": "67da361a9a70df8baa4264b61c3ad5ea77e57dcc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void test() throws Exception", "signatureAfterChange": "      public void testIllegalClassNames() throws Exception", "diff": ["-    public void test() throws Exception", "+", "+    public void testIllegalClassNames() throws Exception", "+    {", "+        DefaultConfiguration checkConfig = createCheckConfig(IllegalCatchCheck.class);", "+        checkConfig.addAttribute(\"illegalClassNames\", ", "+                                 \"java.lang.Error, java.lang.Exception, java.lang.Throwable\");", "+", "+        String[] expected = {", "+            \"7:11: Catching 'Exception' is not allowed.\",", "+            \"8:11: Catching 'Throwable' is not allowed.\",", "+            \"15:11: Catching 'java.lang.Exception' is not allowed.\",", "+            \"16:11: Catching 'java.lang.Throwable' is not allowed.\",", "+        };", "+", "+        verify(checkConfig, getPath(\"coding\" + File.separator + \"InputIllegalCatchCheck.java\"), expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fda3700f9ac330b9bfceb7e4097d2914", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheckTest.java", "commitBeforeChange": "6a8584adbd9ad33ae2b89c0deb6481f62dd14257", "commitAfterChange": "10352e146f048c7938af5949925b0eb19781a0b1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testNonExistingHeaderFile() throws Exception", "signatureAfterChange": "      @Test     public void testNonExistingHeaderFile() throws Exception", "diff": ["-            // expected exception", "+            assertTrue(ex.getMessage()", "+                    .startsWith(\"cannot initialize module\"", "+                            + \" com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck\"", "+                            + \" - Unable to find: \"));", "+            assertTrue(ex.getMessage().endsWith(\"nonExisting.file\"));"]}]}