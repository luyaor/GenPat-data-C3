{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "433a85faa4e8273149872a551e625c56", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a259daf10364a34481e68ef70e123f7a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule527localvariablenames/LocalVariableNameTest.java", "commitBeforeChange": "a244f057057913003dd17e952ee76a844f0fb76b", "commitAfterChange": "dc0a1a2fccdf6a642b05dee98206c7dd487162bd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void localVariableNameTest() throws Exception", "signatureAfterChange": "      @Test     public void localVariableNameTest() throws Exception", "diff": ["-            \"26:13: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"a\", format),", "-            \"27:13: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"aA\", format),", "-            \"28:13: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"a1_a\", format),", "-            \"29:13: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"A_A\", format),", "-            \"30:13: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"aa2_a\", format),", "-            \"31:13: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_a\", format),", "-            \"32:13: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_aa\", format),", "-            \"33:13: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"aa_\", format),", "-            \"34:13: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"aaa$aaa\", format),", "-            \"35:13: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$aaaaaa\", format),", "-            \"36:13: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"aaaaaa$\", format),", "+            \"26:13: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"a\", format),", "+            \"27:13: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"aA\", format),", "+            \"28:13: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"a1_a\", format),", "+            \"29:13: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"A_A\", format),", "+            \"30:13: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"aa2_a\", format),", "+            \"31:13: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"_a\", format),", "+            \"32:13: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"_aa\", format),", "+            \"33:13: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"aa_\", format),", "+            \"34:13: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"aaa$aaa\", format),", "+            \"35:13: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"$aaaaaa\", format),", "+            \"36:13: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"aaaaaa$\", format),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d565fc61a96adfb862e3a47158085d44", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule526parameternames/ParameterNameTest.java", "commitBeforeChange": "b0620242299e0510aaca0606ddfe8b9812803ade", "commitAfterChange": "1634b49d11a6edf5a4180dd6460b22f08adcb0e0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void parameterNameTest() throws IOException, Exception", "signatureAfterChange": "      @Test     public void parameterNameTest() throws IOException, Exception", "diff": ["-            \"8:21: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$arg1\", format),", "-            \"9:21: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"ar$g2\", format),", "-            \"10:21: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"arg3$\", format),", "-            \"11:21: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"a_rg4\", format),", "-            \"12:21: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_arg5\", format),", "-            \"13:21: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"arg6_\", format),", "-            \"14:21: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"aArg7\", format),", "-            \"15:21: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"aArg8\", format),", "-            \"16:21: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"aar_g\", format),", "-            \"26:21: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"bB\", format),", "-            \"49:22: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"llll_llll\", format),", "-            \"50:21: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"bB\", format),", "+            \"8:21: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"$arg1\", format),", "+            \"9:21: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"ar$g2\", format),", "+            \"10:21: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"arg3$\", format),", "+            \"11:21: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"a_rg4\", format),", "+            \"12:21: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"_arg5\", format),", "+            \"13:21: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"arg6_\", format),", "+            \"14:21: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"aArg7\", format),", "+            \"15:21: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"aArg8\", format),", "+            \"16:21: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"aar_g\", format),", "+            \"26:21: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"bB\", format),", "+            \"49:22: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"llll_llll\", format),", "+            \"50:21: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"bB\", format),"]}]}