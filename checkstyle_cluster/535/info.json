{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cabf4d2a7c93432afc4c058d3155a06c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "397887300294d42a5ea932812f5742cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/UnusedImportsCheck.java", "commitBeforeChange": "4cddf4771cd0b3bb2318912a06ae2ca8089e0f49", "commitAfterChange": "8dd44cbead07361f2b924a5a4d5d85ace71e4866", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "     public void finishTree(DetailAST aRootAST)", "diff": ["-            if (!mReferenced.contains(basename(imp.getText()))) {", "+            if (!mReferenced.contains(Utils.baseClassname(imp.getText()))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c428bcd75b821d44accf7e1d9851118", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java", "commitBeforeChange": "4cddf4771cd0b3bb2318912a06ae2ca8089e0f49", "commitAfterChange": "8dd44cbead07361f2b924a5a4d5d85ace71e4866", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private boolean isShortName(String aShortName, String aFullName)", "signatureAfterChange": "     private boolean isShortName(String aShortName, String aFullName)", "diff": ["-        final String base = basename(aFullName);", "+        final String base = Utils.baseClassname(aFullName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e15dfcd8c5f1f641d7867ad3ece44c97", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IllegalInstantiationCheck.java", "commitBeforeChange": "4cddf4771cd0b3bb2318912a06ae2ca8089e0f49", "commitAfterChange": "8dd44cbead07361f2b924a5a4d5d85ace71e4866", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private String getIllegalInstantiation(String aClassName)", "signatureAfterChange": "     private String getIllegalInstantiation(String aClassName)", "diff": ["-                    if (basename(importArg).equals(aClassName)", "+                    if (Utils.baseClassname(importArg).equals(aClassName)", "-    }"]}]}