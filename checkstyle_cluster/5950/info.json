{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "70bbcb186a78b10c64907eed10997013", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8da2aebc1a9f34aa021ccd487ce7b7d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ScopeUtils.java", "commitBeforeChange": "574d7d458dccc8cac95b3fed1ad9ac21305ef947", "commitAfterChange": "650272adb91f9a0b06a8be4efd7b94037bed4d6e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public static boolean isLocalVariableDef(DetailAST aAST)", "signatureAfterChange": "     public static boolean isLocalVariableDef(DetailAST aAST)", "diff": ["-            if (parent != null) {", "-                final int type = parent.getType();", "-                return type == TokenTypes.SLIST", "+            final int type = parent.getType();", "+            return type == TokenTypes.SLIST", "-            }", "-            if (parent != null) {", "-                return parent.getType() == TokenTypes.LITERAL_CATCH;", "-            }", "+            return parent.getType() == TokenTypes.LITERAL_CATCH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "932774ab48619282230bf0df6128f78c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java", "commitBeforeChange": "5650fc1fcd02749f8b1f907e6d0a5b68d7fb7964", "commitAfterChange": "371c73fe60f63ef58abf814db76e8b2d7289800b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private int getParentType(DetailAST aCommentBlock)", "signatureAfterChange": "     private int getParentType(DetailAST aCommentBlock)", "diff": ["+        int type = 0;", "-        int type = parentNode.getType();", "-        if (type == TokenTypes.TYPE || type == TokenTypes.MODIFIERS) {", "-            type = parentNode.getParent().getType();", "+        if (parentNode != null) {", "+            type = parentNode.getType();", "+            if (type == TokenTypes.TYPE || type == TokenTypes.MODIFIERS) {", "+                type = parentNode.getParent().getType();", "+            }"]}]}