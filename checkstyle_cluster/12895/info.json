{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5096e859505c4b6ad235c4add1e16757", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "370fb36d54f9af96850800d693cb6864", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/WhitespaceAroundTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void whitespaceAroundBasicTest() throws Exception", "signatureAfterChange": "      @Test     public void whitespaceAroundBasicTest() throws Exception", "diff": ["-        Configuration checkConfig = builder.getCheckConfig(\"WhitespaceAround\");", "-        String msgPreceded = \"ws.notPreceded\";", "-        String msgFollowed = \"ws.notFollowed\";", "+        final Configuration checkConfig = builder.getCheckConfig(\"WhitespaceAround\");", "+        final String msgPreceded = \"ws.notPreceded\";", "+        final String msgFollowed = \"ws.notFollowed\";", "-        String filePath = builder.getFilePath(\"WhitespaceAroundInput_Basic\");", "+        final String filePath = builder.getFilePath(\"WhitespaceAroundInput_Basic\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ba51adfdbe0cc422f6141b76d8035db", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule523methodnames/MethodNameTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void methodNameTest() throws Exception", "signatureAfterChange": "      @Test     public void methodNameTest() throws Exception", "diff": ["-        Configuration checkConfig = builder.getCheckConfig(\"MethodName\");", "-        String msgKey = \"name.invalidPattern\";", "-        String format = \"^[a-z][a-z0-9][a-zA-Z0-9_]*$\";", "+        final Configuration checkConfig = builder.getCheckConfig(\"MethodName\");", "+        final String msgKey = \"name.invalidPattern\";", "+        final String format = \"^[a-z][a-z0-9][a-zA-Z0-9_]*$\";", "-        String filePath = builder.getFilePath(\"InputMethodName\");", "+        final String filePath = builder.getFilePath(\"InputMethodName\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}]}