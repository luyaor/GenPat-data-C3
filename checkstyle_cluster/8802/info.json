{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "548e29e135dce1ad33b993f6be017e14", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77fad8db9cc4722b3c45805b79d1f12d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected final void checkChildren(DetailAST parentNode,                                        int[] tokenTypes,                                        IndentLevel startLevel,                                        boolean firstLineMatches,                                        boolean allowNesting)", "signatureAfterChange": "     protected final void checkChildren(DetailAST parentNode,                                        int[] tokenTypes,                                        IndentLevel startIndent,                                        boolean firstLineMatches,                                        boolean allowNesting)", "diff": ["-                                       IndentLevel startLevel,", "+                                       IndentLevel startIndent,", "-                checkExpressionSubtree(child, startLevel,", "+                checkExpressionSubtree(child, startIndent,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bca18ab702c44ca1ab023cdcae4dc3f0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "commitAfterChange": "289ef67e9e9ee424723b8aa22ae7a6d31f126d23", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void validateNewLinePosion(DetailAST brace, DetailAST startToken,                                        String braceLine, int prevLineLen)", "signatureAfterChange": "     private void validateNewLinePosion(DetailAST brace, DetailAST startToken,                                        String braceLine)", "diff": ["-                                       String braceLine, int prevLineLen) {", "+                                       String braceLine) {", "-            else if (prevLineLen + 2 <= maxLineLength) {", "+            else {"]}]}