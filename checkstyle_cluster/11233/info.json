{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d56f47e4f35cea5e07c910d99846c007", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3812dd14dbe11d738025c5777ab41f28", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RightCurlyCheck.java", "commitBeforeChange": "3f14872d33910413734232fb16b9debe479e1bd8", "commitAfterChange": "84eddc36730c1eca845257201c71a0d1fb2d40cf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        if (aAST.getType() == JavaTokenTypes.LITERAL_else) {", "+        if (aAST.getType() == TokenTypes.LITERAL_ELSE) {", "-        else if (aAST.getType() == JavaTokenTypes.LITERAL_catch) {", "+        else if (aAST.getType() == TokenTypes.LITERAL_CATCH) {", "-        else if (aAST.getType() == JavaTokenTypes.LITERAL_try) {", "+        else if (aAST.getType() == TokenTypes.LITERAL_TRY) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5ede7b403b466303c79114c07bbb6a5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/SimplifyBooleanReturnCheck.java", "commitBeforeChange": "3f14872d33910413734232fb16b9debe479e1bd8", "commitAfterChange": "84eddc36730c1eca845257201c71a0d1fb2d40cf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean isBooleanLiteralReturnStatement(AST aAST)", "signatureAfterChange": "     private boolean isBooleanLiteralReturnStatement(AST aAST)", "diff": ["-        if (aAST.getType() != JavaTokenTypes.LITERAL_return) {", "+        if (aAST.getType() != TokenTypes.LITERAL_RETURN) {", "-        return ((valueType == JavaTokenTypes.LITERAL_true)", "-                || (valueType == JavaTokenTypes.LITERAL_false));", "+        return ((valueType == TokenTypes.LITERAL_TRUE)", "+                || (valueType == TokenTypes.LITERAL_FALSE));"]}]}