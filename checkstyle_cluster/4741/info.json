{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "872b98653561e6ab9d87e7d44b2f8ff5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26305763fd98f0062f9a7698462a2911", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static Set<String> getPackageNames(ClassLoader classLoader)             throws CheckstyleException", "signatureAfterChange": "     public static Set<String> getPackageNames(ClassLoader classLoader)             throws CheckstyleException", "diff": ["-                catch (IOException e) {", "-                    throw new CheckstyleException(\"unable to open \" + packageFile, e);", "+                catch (IOException ex) {", "+                    throw new CheckstyleException(\"unable to open \" + packageFile, ex);", "-        catch (IOException e) {", "-            throw new CheckstyleException(\"unable to get package file resources\", e);", "+        catch (IOException ex) {", "+            throw new CheckstyleException(\"unable to get package file resources\", ex);", "-        catch (ParserConfigurationException | SAXException e) {", "-            throw new CheckstyleException(\"unable to open one of package files\", e);", "+        catch (ParserConfigurationException | SAXException ex) {", "+            throw new CheckstyleException(\"unable to open one of package files\", ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "668fd0dd7dc4e5e2bf3f86c768c59454", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static Configuration loadConfiguration(InputSource configSource,             PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(InputSource configSource,             PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "diff": ["-        catch (final SAXParseException e) {", "+        catch (final SAXParseException ex) {", "-                    e.getMessage(), e.getLineNumber(), e.getColumnNumber());", "-            throw new CheckstyleException(message, e);", "+                    ex.getMessage(), ex.getLineNumber(), ex.getColumnNumber());", "+            throw new CheckstyleException(message, ex);", "-        catch (final ParserConfigurationException | IOException | SAXException e) {", "-            throw new CheckstyleException(UNABLE_TO_PARSE_EXCEPTION_PREFIX, e);", "+        catch (final ParserConfigurationException | IOException | SAXException ex) {", "+            throw new CheckstyleException(UNABLE_TO_PARSE_EXCEPTION_PREFIX, ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aec9d419989f5faa51c2d5d9c6946c8f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static PkgControl load(final InputSource source,         final URI uri) throws CheckstyleException", "signatureAfterChange": "     private static PkgControl load(final InputSource source,         final URI uri) throws CheckstyleException", "diff": ["-        catch (final ParserConfigurationException | SAXException e) {", "+        catch (final ParserConfigurationException | SAXException ex) {", "-                    + \" - \" + e.getMessage(), e);", "+                    + \" - \" + ex.getMessage(), ex);", "-        catch (final IOException e) {", "-            throw new CheckstyleException(\"unable to read \" + uri, e);", "+        catch (final IOException ex) {", "+            throw new CheckstyleException(\"unable to read \" + uri, ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de6af29f9a7bd305939cb3dbc0f54232", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static FilterSet loadSuppressions(             InputSource source, String sourceName)         throws CheckstyleException", "signatureAfterChange": "     private static FilterSet loadSuppressions(             InputSource source, String sourceName)         throws CheckstyleException", "diff": ["-        catch (final FileNotFoundException e) {", "-            throw new CheckstyleException(UNABLE_TO_FIND_ERROR_MESSAGE + sourceName, e);", "+        catch (final FileNotFoundException ex) {", "+            throw new CheckstyleException(UNABLE_TO_FIND_ERROR_MESSAGE + sourceName, ex);", "-        catch (final ParserConfigurationException | SAXException e) {", "+        catch (final ParserConfigurationException | SAXException ex) {", "-                    sourceName, e.getMessage());", "-            throw new CheckstyleException(message, e);", "+                    sourceName, ex.getMessage());", "+            throw new CheckstyleException(message, ex);", "-        catch (final IOException e) {", "-            throw new CheckstyleException(\"Unable to read \" + sourceName, e);", "+        catch (final IOException ex) {", "+            throw new CheckstyleException(\"Unable to read \" + sourceName, ex);", "-        catch (final NumberFormatException e) {", "+        catch (final NumberFormatException ex) {", "-                    sourceName, e.getMessage());", "-            throw new CheckstyleException(message, e);", "+                    sourceName, ex.getMessage());", "+            throw new CheckstyleException(message, ex);"]}]}