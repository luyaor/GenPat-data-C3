{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e9db844c5b85971d91896719945d385", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13905f0c854d8b455a47059d8ef17f51", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputVariableDeclarationUsageDistanceCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputVariableDeclarationUsageDistance.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a91a8139f243fd48ff9c687c01a7ccf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testWithOneArgWithoutParenthesesWithoutTypeFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithoutParenthesesWithoutTypeFullBody()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest11.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda11.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2abb35da3caf0f0fe90c8ab27ab40a0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void forbidCStyle() throws Exception", "signatureAfterChange": "      @Test     public void forbidCStyle() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InputMethodCStyle.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InputMethodCStyle.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e926fbeefba3a77843f33947f4466a6d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testIncorrectCustom() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrectCustom() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputIncorrectAtClauseOrderCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIncorrectAtClauseOrderCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f24c6ea7089bbc2ac5a17e9ec67ed5f6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule333orderingandsoacing/CustomImportOrderTest.java", "commitBeforeChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "commitAfterChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void validTest() throws Exception", "signatureAfterChange": "      @Test     public void validTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"CustomImportOrderValidInput\");", "+        final String filePath = builder.getFilePath(\"InputCustomImportOrderValid\");"]}]}