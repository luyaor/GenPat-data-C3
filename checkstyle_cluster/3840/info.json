{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b6b8cb1d952f3277a3d4d4eaf7f6b4b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a10e4e928c83769ccc6588235cbe58c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testParameter() throws Exception", "signatureAfterChange": "      @Test     public void testParameter() throws Exception", "diff": ["-            \"45:28: Variable 'aArg' should be declared final.\",", "-            \"149:36: Variable '_o' should be declared final.\",", "-            \"154:37: Variable '_o1' should be declared final.\",", "+            \"45:28: \" + getCheckMessage(MSG_KEY, \"aArg\"),", "+            \"149:36: \" + getCheckMessage(MSG_KEY, \"_o\"),", "+            \"154:37: \" + getCheckMessage(MSG_KEY, \"_o1\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20d5ffe9c08a35a751163662899a1384", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheckTest.java", "commitBeforeChange": "27149f3504a2f350b74f456a9bffbae76a460060", "commitAfterChange": "5ede09997c283b4c418f0f540848e006be04fa87", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCtorToken() throws Exception", "signatureAfterChange": "      @Test     public void testCtorToken() throws Exception", "diff": ["-            \"23:26: Parameter s should be final.\",", "-            \"38:26: Parameter i should be final.\",", "-            \"43:26: Parameter s should be final.\",", "+            \"23:26: \" + getCheckMessage(MSG_KEY, \"s\"),", "+            \"38:26: \" + getCheckMessage(MSG_KEY, \"i\"),", "+            \"43:26: \" + getCheckMessage(MSG_KEY, \"s\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "586a6918914f68282781c7f158bda37b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheckTest.java", "commitBeforeChange": "5d698f4a58b66958b13cb04735fefa3f4fa4b9e7", "commitAfterChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testFianlClass() throws Exception", "signatureAfterChange": "     @Test     public void testFianlClass() throws Exception", "diff": ["-            \"7: Class InputFinalClass should be declared as final.\",", "-            \"15: Class test4 should be declared as final.\",", "-            \"109: Class someinnerClass should be declared as final.\",", "+            \"7: \" + getCheckMessage(MSG_KEY, \"InputFinalClass\"),", "+            \"15: \" + getCheckMessage(MSG_KEY, \"test4\"),", "+            \"109: \" + getCheckMessage(MSG_KEY, \"someinnerClass\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ea638291a4bfc4abca2ada685699cfb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportTest.java", "commitBeforeChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "commitAfterChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAllowClassImports() throws Exception", "signatureAfterChange": "      @Test     public void testAllowClassImports() throws Exception", "diff": ["-            \"25: Using the '.*' form of import should be avoided - javax.swing.WindowConstants.*.\",", "-            \"26: Using the '.*' form of import should be avoided - javax.swing.WindowConstants.*.\",", "-            \"28: Using the '.*' form of import should be avoided - java.io.File.*.\", };", "+            \"25: \" + getCheckMessage(MSG_KEY, \"javax.swing.WindowConstants.*\"),", "+            \"26: \" + getCheckMessage(MSG_KEY, \"javax.swing.WindowConstants.*\"),", "+            \"28: \" + getCheckMessage(MSG_KEY, \"java.io.File.*\"), };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "675806ece5cbaf882c101f9554a2c499", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testTypecast() throws Exception", "signatureAfterChange": "      @Test     public void testTypecast() throws Exception", "diff": ["-            \"87:28: ')' is followed by whitespace.\",", "-            \"89:23: ')' is followed by whitespace.\",", "-            \"241:22: ')' is followed by whitespace.\",", "+            \"87:28: \" + getCheckMessage(MSG_KEY, \")\"),", "+            \"89:23: \" + getCheckMessage(MSG_KEY, \")\"),", "+            \"241:22: \" + getCheckMessage(MSG_KEY, \")\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91c88ad72bbdbe5d33245ac30def33db", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault()         throws Exception", "signatureAfterChange": "     @Test     public void testDefault()         throws Exception", "diff": ["-            \"11:9: Using 'switch' is not allowed.\",", "-            \"14:18: Using '--' is not allowed.\",", "-            \"15:18: Using '++' is not allowed.\",", "+            \"11:9: \" + getCheckMessage(MSG_KEY, \"switch\"),", "+            \"14:18: \" + getCheckMessage(MSG_KEY, \"--\"),", "+            \"15:18: \" + getCheckMessage(MSG_KEY, \"++\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a43b8131f8c93bd606bcb6b553bac578", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/IllegalImportCheckTest.java", "commitBeforeChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "commitAfterChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testWithSupplied()         throws Exception", "signatureAfterChange": "     @Test     public void testWithSupplied()         throws Exception", "diff": ["-            \"9:1: Import from illegal package - java.io.*.\",", "-            \"23:1: Import from illegal package - java.io.File.listRoots.\",", "-            \"27:1: Import from illegal package - java.io.File.createTempFile.\",", "+            \"9:1: \" + getCheckMessage(MSG_KEY, \"java.io.*\"),", "+            \"23:1: \" + getCheckMessage(MSG_KEY, \"java.io.File.listRoots\"),", "+            \"27:1: \" + getCheckMessage(MSG_KEY, \"java.io.File.createTempFile\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac9451fbd41520d4e6c69c61777cdce8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIt() throws Exception", "signatureAfterChange": "     @Test     public void testIt() throws Exception", "diff": ["-            \"11:18: Literal Strings should be compared using equals(), not '=='.\",", "-            \"16:20: Literal Strings should be compared using equals(), not '=='.\",", "-            \"21:22: Literal Strings should be compared using equals(), not '=='.\",", "+            \"11:18: \" + getCheckMessage(MSG_KEY, \"==\"),", "+            \"16:20: \" + getCheckMessage(MSG_KEY, \"==\"),", "+            \"21:22: \" + getCheckMessage(MSG_KEY, \"==\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2a5123d3d34223878e1b78d1751866e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceBeforeCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testDotAllowLineBreaks() throws Exception", "signatureAfterChange": "      @Test     public void testDotAllowLineBreaks() throws Exception", "diff": ["-            \"5:12: '.' is preceded with whitespace.\",", "-            \"129:17: '.' is preceded with whitespace.\",", "-            \"136:10: '.' is preceded with whitespace.\",", "+            \"5:12: \" + getCheckMessage(MSG_KEY, \".\"),", "+            \"129:17: \" + getCheckMessage(MSG_KEY, \".\"),", "+            \"136:10: \" + getCheckMessage(MSG_KEY, \".\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c048fc0cb7ae5f8cf5dd9452372eae52", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDotAllowLineBreaks() throws Exception", "signatureAfterChange": "      @Test     public void testDotAllowLineBreaks() throws Exception", "diff": ["-            \"5:14: '.' is followed by whitespace.\",", "-            \"129:24: '.' is followed by whitespace.\",", "-            \"136:12: '.' is followed by whitespace.\",", "+            \"5:14: \" + getCheckMessage(MSG_KEY, \".\"),", "+            \"129:24: \" + getCheckMessage(MSG_KEY, \".\"),", "+            \"136:12: \" + getCheckMessage(MSG_KEY, \".\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5982663aa0e56aa3b7fc67eabe4eda0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalThrowsCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "     @Test     public void testDefault() throws Exception", "diff": ["-            \"9:51: Throwing 'RuntimeException' is not allowed.\",", "-            \"14:45: Throwing 'java.lang.RuntimeException' is not allowed.\",", "-            \"14:73: Throwing 'java.lang.Error' is not allowed.\",", "+            \"9:51: \" + getCheckMessage(MSG_KEY, \"RuntimeException\"),", "+            \"14:45: \" + getCheckMessage(MSG_KEY, \"java.lang.RuntimeException\"),", "+            \"14:73: \" + getCheckMessage(MSG_KEY, \"java.lang.Error\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9b50ef650c898eeba0af0af7a12852e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheckTest.java", "commitBeforeChange": "27149f3504a2f350b74f456a9bffbae76a460060", "commitAfterChange": "5ede09997c283b4c418f0f540848e006be04fa87", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCatchToken() throws Exception", "signatureAfterChange": "      @Test     public void testCatchToken() throws Exception", "diff": ["-            \"125:16: Parameter npe should be final.\",", "-            \"131:16: Parameter e should be final.\",", "-            \"134:16: Parameter e should be final.\",", "+            \"125:16: \" + getCheckMessage(MSG_KEY, \"npe\"),", "+            \"131:16: \" + getCheckMessage(MSG_KEY, \"e\"),", "+            \"134:16: \" + getCheckMessage(MSG_KEY, \"e\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f539187b26e91c2c1e43581bb24fa6d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheckTest.java", "commitBeforeChange": "5d698f4a58b66958b13cb04735fefa3f4fa4b9e7", "commitAfterChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testStrictJavadoc() throws Exception", "signatureAfterChange": "      @Test     public void testStrictJavadoc() throws Exception", "diff": ["-            \"44:9: Variable 'mLen' must be private and have accessor methods.\",", "-            \"45:19: Variable 'mDeer' must be private and have accessor methods.\",", "-            \"46:16: Variable 'aFreddo' must be private and have accessor methods.\",", "+            \"44:9: \" + getCheckMessage(MSG_KEY, \"mLen\"),", "+            \"45:19: \" + getCheckMessage(MSG_KEY, \"mDeer\"),", "+            \"46:16: \" + getCheckMessage(MSG_KEY, \"aFreddo\"),"]}]}