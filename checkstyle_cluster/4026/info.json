{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "07f07dcbceae456d1018401ba336c593", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcd25dbf8b92e3511e3680ef52d0d9ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private Point skipHtmlComment(String[] aText, Point aFrom)", "signatureAfterChange": "     private Point skipHtmlComment(String[] text, Point from)", "diff": ["-    private Point skipHtmlComment(String[] aText, Point aFrom)", "+    private Point skipHtmlComment(String[] text, Point from)", "-        Point to = aFrom;", "-        to = findChar(aText, '>', to);", "-        while ((to.getLineNo() < aText.length)", "-               && !aText[to.getLineNo()]", "+        Point to = from;", "+        to = findChar(text, '>', to);", "+        while ((to.getLineNo() < text.length)", "+               && !text[to.getLineNo()]", "-            to = findChar(aText, '>', getNextCharPos(aText, to));", "+            to = findChar(text, '>', getNextCharPos(text, to));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4be0e563f8d990ebd191121cc0c3786", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private Point findChar(String[] aText, char aChar, Point aFrom)", "signatureAfterChange": "     private Point findChar(String[] text, char character, Point from)", "diff": ["-    private Point findChar(String[] aText, char aChar, Point aFrom)", "+    private Point findChar(String[] text, char character, Point from)", "-        Point curr = new Point(aFrom.getLineNo(), aFrom.getColumnNo());", "-        while ((curr.getLineNo() < aText.length)", "-               && (aText[curr.getLineNo()].charAt(curr.getColumnNo()) != aChar))", "+        Point curr = new Point(from.getLineNo(), from.getColumnNo());", "+        while ((curr.getLineNo() < text.length)", "+               && (text[curr.getLineNo()].charAt(curr.getColumnNo()) != character))", "-            curr = getNextCharPos(aText, curr);", "+            curr = getNextCharPos(text, curr);"]}]}