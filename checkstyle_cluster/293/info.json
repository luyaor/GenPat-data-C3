{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d0bd884131db646bf455809f0d0f254", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91a69ebbe490c0e651a13188dbba7ba0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java", "commitBeforeChange": "576d593f6cb309d0959639fa707d0a01f28a6609", "commitAfterChange": "9dbc71956635b56a20780d484454e177897b5788", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static JavadocTags getJavadocTags(TextBlock cmt,             JavadocTagType tagType)", "signatureAfterChange": "     public static JavadocTags getJavadocTags(TextBlock cmt,             JavadocTagType tagType)", "diff": ["-                    if (tagMatcher.groupCount() == 2) {", "-                        final String tagName = tagMatcher.group(1);", "-                        final String tagValue = tagMatcher.group(2).trim();", "-                        final int line = cmt.getStartLineNo() + i;", "-                        int col = commentOffset + tagMatcher.start(1) - 1;", "-                        if (i == 0) {", "-                            col += cmt.getStartColNo();", "-                        }", "-                        if (JavadocTagInfo.isValidName(tagName)) {", "-                            tags.add(new JavadocTag(line, col, tagName,", "-                                    tagValue));", "-                        }", "-                        else {", "-                            invalidTags.add(new InvalidJavadocTag(line, col,", "-                                    tagName));", "-                        }", "+                    final String tagName = tagMatcher.group(1);", "+                    final String tagValue = tagMatcher.group(2).trim();", "+                    final int line = cmt.getStartLineNo() + i;", "+                    int col = commentOffset + tagMatcher.start(1) - 1;", "+                    if (i == 0) {", "+                        col += cmt.getStartColNo();", "+                    }", "+                    if (JavadocTagInfo.isValidName(tagName)) {", "+                        tags.add(new JavadocTag(line, col, tagName,", "+                                tagValue));", "+                    }", "+                    else {", "+                        invalidTags.add(new InvalidJavadocTag(line, col,", "+                                tagName));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6bc695b7a4c74d2edbed8fbb3f76c7e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "6b852ccfbc949ae57e76ef73f1451b717e15d6e8", "commitAfterChange": "0a4a41f4797c6c5c6a73c6c2ed9b5c173a328a12", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processIdent(DetailAST aAST)", "signatureAfterChange": "     private void processIdent(DetailAST aAST)", "diff": ["-            if (!isDeclared(aAST.getText())) {", "-                mReferenced.add(aAST.getText());", "-            }", "+            mReferenced.add(aAST.getText());"]}]}