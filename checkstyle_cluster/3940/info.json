{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d70db3cd3db1306f0c43ed435026e7a2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dfa6dd60a0191ddccd6a27cc6cca016", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "d0939d3bc93819ebc1f42642806c0265fc7908b3", "commitAfterChange": "86826e1fa3fe3d793ee4723bb84ee0fc4ca38df1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static void main(String... args) throws UnsupportedEncodingException,             FileNotFoundException", "signatureAfterChange": "     public static void main(String... args) throws UnsupportedEncodingException,             FileNotFoundException", "diff": ["-                if (!cliViolations) {", "-                    // create config helper object", "-                    final CliOptions config = convertCliToPojo(commandLine);", "-                    // run Checker", "-                    errorCounter = runCheckstyle(config);", "-                    exitStatus = errorCounter;", "-                }", "-                else {", "+                if (cliViolations) {", "+                }", "+                else {", "+                    // create config helper object", "+                    final CliOptions config = convertCliToPojo(commandLine);", "+                    // run Checker", "+                    errorCounter = runCheckstyle(config);", "+                    exitStatus = errorCounter;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b20d0f18c56b778fe7d32ff9b279e208", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "d0939d3bc93819ebc1f42642806c0265fc7908b3", "commitAfterChange": "86826e1fa3fe3d793ee4723bb84ee0fc4ca38df1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            if (!isLastGroup) {", "-                log(nextGroup, MSG_FALL_THROUGH);", "+            if (isLastGroup) {", "+                log(ast, MSG_FALL_THROUGH_LAST);", "-                log(ast, MSG_FALL_THROUGH_LAST);", "+                log(nextGroup, MSG_FALL_THROUGH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4e26abc2d7e8dc9004000ac5a018e39", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheck.java", "commitBeforeChange": "d0939d3bc93819ebc1f42642806c0265fc7908b3", "commitAfterChange": "86826e1fa3fe3d793ee4723bb84ee0fc4ca38df1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (!seenFirstToken) {", "+        if (seenFirstToken) {", "+            final DetailAST modifiers = ast.findFirstToken(TokenTypes.MODIFIERS);", "+            if (modifiers.findFirstToken(TokenTypes.LITERAL_PUBLIC) != null", "+                    && ast.getParent() == null) {", "+                hasPublic = true;", "+            }", "+        }", "+        else {", "-            }", "-        }", "-        else {", "-            final DetailAST modifiers = ast.findFirstToken(TokenTypes.MODIFIERS);", "-            if (modifiers.findFirstToken(TokenTypes.LITERAL_PUBLIC) != null", "-                    && ast.getParent() == null) {", "-                hasPublic = true;"]}]}