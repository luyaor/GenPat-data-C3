{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "80b420e1b32f5ac2a8f6d12f0cb47f96", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a31f3906255c82e23d22f33f8c3885e0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "b3133035a4fa0e086dfb0dfbefbc7f1540521bbc", "commitAfterChange": "add2bdfb27494bff5fa9c305d9782f57c6170b18", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "     protected AuditListener[] getListeners()         throws ClassNotFoundException, InstantiationException,         IllegalAccessException, IOException", "signatureAfterChange": "     protected AuditListener[] getListeners()         throws ClassNotFoundException, InstantiationException,         IllegalAccessException, IOException", "diff": ["+        final int listenerCount = Math.max(1, mFormatters.size());", "+", "+        final AuditListener[] listeners = new AuditListener[listenerCount];", "+", "-            final Formatter f = new Formatter();", "-            final FormatterType type = new FormatterType();", "-            type.setValue(E_PLAIN);", "-            f.setType(type);", "-            mFormatters.add(f);", "+            OutputStream debug = new LogOutputStream(this, Project.MSG_DEBUG);", "+            OutputStream err = new LogOutputStream(this, Project.MSG_ERR);", "+            listeners[0] = new DefaultLogger(debug, true, err, true);", "+            return listeners;", "-        final AuditListener[] listeners = new AuditListener[mFormatters.size()];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8d83b980e2e3f59638facc3e39290ec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Check.java", "commitBeforeChange": "18ce1a9f667788fe10875f4ed0775500285c15cc", "commitAfterChange": "4880b50a3a89db93e7e7c1b8bae8036ec06e186b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public void log(int aLine, String aMessage)", "signatureAfterChange": "     public void log(int aLineNo, int aColNo, String aKey, Object[] aArgs)", "diff": ["-    /** @see needs to be fixed */", "-    public void log(int aLine, String aMessage)", "-        final String fname = (String) getTreeContext().get(FILENAME_ATTRIBUTE);", "-        System.out.println(fname + \":\" + aLine + \": \" + aMessage);", "+     */", "+    public void log(int aLineNo, int aColNo, String aKey, Object[] aArgs)", "+    {", "+        final String fname = getFilename();", "+        System.out.println(fname + \":\" + aLineNo + \": \" + aKey);", "+", "+        final int col = aColNo + 1;", "+//        final int col = 1 + Utils.lengthExpandedTabs(", "+//            mLines[aLineNo - 1], aColNo, mTabWidth);", "+        mMessages.add(new LocalizedMessage(", "+                aLineNo, col, getResourceBundle(), aKey, aArgs));", "+    }"]}]}