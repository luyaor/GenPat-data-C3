{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f936abc75bf875e8df194fd8b122277a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "376109b8964fd62859de3d3df5a04015", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     void verifyVariable(MyVariable aVar)", "signatureAfterChange": "     void verifyVariable(MyVariable aVar)", "diff": ["-                \"variable '\" + aVar.getText() + \"' missing Javadoc.\");", "+                \"variable.missingJavadoc\", aVar.getText());", "-                            \"variable '\" + aVar.getText()", "-                            + \"' must be private and have accessor methods.\");", "+                            \"variable.notPrivate\", aVar.getText());", "-                        \"variable '\" + aVar.getText()", "-                        + \"' must be private and have accessor methods.\");", "+                        \"variable.notPrivate\", aVar.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d63ab42d4355afa393787a5385b5cff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java", "commitBeforeChange": "cbfe72383be737abacb4e78ddbb59a3036798605", "commitAfterChange": "06865630aa3da0b36064b9e00e0e95ff681f234e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-            if (!endsWithNewline(randomAccessFile)) {", "-                log(0, MSG_KEY_NO_NEWLINE_EOF, file.getPath());", "+            boolean threw = true;", "+            try {", "+                if (!endsWithNewline(randomAccessFile)) {", "+                    log(0, MSG_KEY_NO_NEWLINE_EOF, file.getPath());", "+                }", "+                threw = false;", "+            }", "+            finally {", "+                Closeables.close(randomAccessFile, threw);", "-        }", "-        finally {", "-            Utils.closeQuietly(randomAccessFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5aa699ca44f8d2be56337d4e1487582c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "7f7db38a097a95c264307123924779380fb40077", "commitAfterChange": "60847a32d538e9a0f1c1de3e349e8b3833741506", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["+            String text = aAST.getText();", "+            int columnNo = aAST.getColumnNo();", "+            final DetailAST parent = aAST.getParent();", "+            if (parent.getType() == TokenTypes.UNARY_MINUS) {", "+                columnNo--;", "+                text = \"-\" + text;", "+            }", "+            else if (parent.getType() == TokenTypes.UNARY_PLUS) {", "+                columnNo--;", "+                text = \"+\" + text;", "+            }", "-                aAST.getColumnNo(),", "+                columnNo,", "-                aAST.getText());", "+                text);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a2482fea306765a7d7ee614ae2509fc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "fb1407c204a960223f78ec8429a5581773e5578b", "commitAfterChange": "9324fdcf34b60f100b43dd18f52898c6418893eb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-                    log(variable.getLineNo(),", "-                            MSG_KEY, variable.getText(), dist, mAllowedDistance);", "+                    if (mIgnoreFinal) {", "+                        log(variable.getLineNo(),", "+                                MSG_KEY_EXT, variable.getText(), dist, mAllowedDistance);", "+                    }", "+                    else {", "+                        log(variable.getLineNo(),", "+                                MSG_KEY, variable.getText(), dist, mAllowedDistance);", "+                    }"]}]}