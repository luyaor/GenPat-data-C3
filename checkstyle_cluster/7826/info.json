{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a317adf72aeac5f61871dcc060d0472e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d34157a073b37a9caff415e721c6c6a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "0ce872d7cc6b0b1564655b9e3119f72911f4dddd", "commitAfterChange": "ea9ff3965d9c657b5b7bd2d969e075f430635c47", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-        if (cache.alreadyChecked(fileName, timestamp)", "-                 || !Utils.fileExtensionMatches(file, getFileExtensions())) {", "+        if (cache != null", "+                && (cache.inCache(fileName, timestamp)", "+                    || !Utils.fileExtensionMatches(file, getFileExtensions()))) {", "-        if (getMessageCollector().size() == 0) {", "-            cache.checkedOk(fileName, timestamp);", "+        if (cache != null && getMessageCollector().size() == 0) {", "+            cache.put(fileName, timestamp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1336ff65254530fd3c7ad5e68dde8fb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java", "commitBeforeChange": "7cbf72f1871c3b0830c9ab401c54e620e9c440e9", "commitAfterChange": "f768f75438e1d71413a65d11a73208f7f8b449ea", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static boolean isInterfaceOrAnnotationMember(DetailAST ast)", "signatureAfterChange": "     private static boolean isInterfaceOrAnnotationMember(DetailAST ast)", "diff": ["-        final DetailAST parentTypeDef = ast.getParent().getParent();", "-        return parentTypeDef.getType() == TokenTypes.INTERFACE_DEF", "-               || parentTypeDef.getType() == TokenTypes.ANNOTATION_DEF;", "+        final DetailAST parentTypeDef =", "+                ast.getParent() != null ? ast.getParent().getParent() : null;", "+        return parentTypeDef != null", "+                && (parentTypeDef.getType() == TokenTypes.INTERFACE_DEF", "+                    || parentTypeDef.getType() == TokenTypes.ANNOTATION_DEF);"]}]}