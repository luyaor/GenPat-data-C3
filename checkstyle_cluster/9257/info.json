{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1fc189032b7252cfcadc897c708bb0d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7736d52bb9cbe8d68da007fa9c087682", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void logCommaViolation(final DetailAST aAST)", "signatureAfterChange": "     private void logCommaViolation(final DetailAST ast)", "diff": ["-    private void logCommaViolation(final DetailAST aAST)", "+    private void logCommaViolation(final DetailAST ast)", "-        final DetailAST rCurly = aAST.findFirstToken(TokenTypes.RCURLY);", "+        final DetailAST rCurly = ast.findFirstToken(TokenTypes.RCURLY);", "-        if (TrailingArrayComma.ALWAYS.equals(this.mComma)", "+        if (TrailingArrayComma.ALWAYS.equals(this.comma)", "-        else if (TrailingArrayComma.NEVER.equals(this.mComma)", "+        else if (TrailingArrayComma.NEVER.equals(this.comma)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7ca067cbc617b3f05ba06b1ae6e5395", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocVariableCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private boolean isIgnored(DetailAST aAST)", "signatureAfterChange": "     private boolean isIgnored(DetailAST ast)", "diff": ["-    private boolean isIgnored(DetailAST aAST)", "+    private boolean isIgnored(DetailAST ast)", "-        final String name = aAST.findFirstToken(TokenTypes.IDENT).getText();", "-        return mIgnoreNamePattern != null", "-                && mIgnoreNamePattern.matcher(name).matches();", "+        final String name = ast.findFirstToken(TokenTypes.IDENT).getText();", "+        return ignoreNamePattern != null", "+                && ignoreNamePattern.matcher(name).matches();"]}]}