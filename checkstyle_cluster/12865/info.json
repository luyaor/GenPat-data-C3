{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e522f8d8073ebaeb7fca53157ae6f4e3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1369a743cafe5c622ba0bb81791a5795", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testNewLine() throws Exception", "signatureAfterChange": "      @Test     public void testNewLine() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"option\", RightCurlyOption.ALONE.toString());", "-        mCheckConfig.addAttribute(\"tokens\", \"CLASS_DEF, METHOD_DEF, CTOR_DEF\");", "+        checkConfig.addAttribute(\"option\", RightCurlyOption.ALONE.toString());", "+        checkConfig.addAttribute(\"tokens\", \"CLASS_DEF, METHOD_DEF, CTOR_DEF\");", "-        verify(mCheckConfig, getPath(\"InputLeftCurlyOther.java\"), expected);", "+        verify(checkConfig, getPath(\"InputLeftCurlyOther.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75e99d8711da5c4d2b9ebc4c92064f4f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testForceLineBreakBefore() throws Exception", "signatureAfterChange": "      @Test     public void testForceLineBreakBefore() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"option\", RightCurlyOption.ALONE.toString());", "-        mCheckConfig.addAttribute(\"tokens\", \"LITERAL_FOR,\"", "+        checkConfig.addAttribute(\"option\", RightCurlyOption.ALONE.toString());", "+        checkConfig.addAttribute(\"tokens\", \"LITERAL_FOR,\"", "-        verify(mCheckConfig, getPath(\"InputRightCurlyLineBreakBefore.java\"), expected);", "+        verify(checkConfig, getPath(\"InputRightCurlyLineBreakBefore.java\"), expected);"]}]}