{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa89bb8c72e00d54a64e1fa80da174a6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32be2b2aa4e35133ede5771a2630d322", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/MethodParamPadCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-            \"11:32: '(' is preceded with whitespace.\",", "-            \"13:15: '(' is preceded with whitespace.\",", "-            \"17:9: '(' should be on the previous line.\",", "-            \"20:13: '(' should be on the previous line.\",", "-            \"27:24: '(' is preceded with whitespace.\",", "-            \"32:9: '(' should be on the previous line.\",", "-            \"36:39: '(' is preceded with whitespace.\",", "-            \"38:13: '(' should be on the previous line.\",", "-            \"42:16: '(' is preceded with whitespace.\",", "-            \"44:13: '(' should be on the previous line.\",", "-            \"50:21: '(' is preceded with whitespace.\",", "-            \"52:13: '(' should be on the previous line.\",", "-            \"56:18: '(' is preceded with whitespace.\",", "-            \"58:13: '(' should be on the previous line.\",", "-            \"61:36: '(' is preceded with whitespace.\",", "-            \"63:13: '(' should be on the previous line.\",", "+            \"11:32: \" + getCheckMessage(WS_PRECEDED, \"(\"),", "+            \"13:15: \" + getCheckMessage(WS_PRECEDED, \"(\"),", "+            \"17:9: \" + getCheckMessage(LINE_PREVIOUS, \"(\"),", "+            \"20:13: \" + getCheckMessage(LINE_PREVIOUS, \"(\"),", "+            \"27:24: \" + getCheckMessage(WS_PRECEDED, \"(\"),", "+            \"32:9: \" + getCheckMessage(LINE_PREVIOUS, \"(\"),", "+            \"36:39: \" + getCheckMessage(WS_PRECEDED, \"(\"),", "+            \"38:13: \" + getCheckMessage(LINE_PREVIOUS, \"(\"),", "+            \"42:16: \" + getCheckMessage(WS_PRECEDED, \"(\"),", "+            \"44:13: \" + getCheckMessage(LINE_PREVIOUS, \"(\"),", "+            \"50:21: \" + getCheckMessage(WS_PRECEDED, \"(\"),", "+            \"52:13: \" + getCheckMessage(LINE_PREVIOUS, \"(\"),", "+            \"56:18: \" + getCheckMessage(WS_PRECEDED, \"(\"),", "+            \"58:13: \" + getCheckMessage(LINE_PREVIOUS, \"(\"),", "+            \"61:36: \" + getCheckMessage(WS_PRECEDED, \"(\"),", "+            \"63:13: \" + getCheckMessage(LINE_PREVIOUS, \"(\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56883049de2f4d79f529bd5bad076a2e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testLineBreakAfter() throws Exception", "signatureAfterChange": "      @Test     public void testLineBreakAfter() throws Exception", "diff": ["-            \"9:1: '{' should be on the previous line.\",", "-            \"12:5: '{' should be on the previous line.\",", "-            \"16:9: '{' should be on the previous line.\",", "-            \"18:13: '{' should be on the previous line.\",", "-            \"20:17: '{' should be on the previous line.\",", "-            \"26:22: '{' should have line break after.\",", "-            \"28:17: '{' should be on the previous line.\",", "-            \"35:33: '{' should have line break after.\",", "-            \"36:21: '{' should have line break after.\",", "-            \"39:29: '{' should have line break after.\",", "-            \"39:34: '{' should have line break after.\",", "-            \"45:37: '{' should have line break after.\",", "-            \"54:5: '{' should be on the previous line.\",", "-            \"56:27: '{' should have line break after.\",", "-            \"66:1: '{' should be on the previous line.\",", "+            \"9:1: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"12:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"16:9: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"18:13: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"20:17: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"26:22: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\"),", "+            \"28:17: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"35:33: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\"),", "+            \"36:21: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\"),", "+            \"39:29: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\"),", "+            \"39:34: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\"),", "+            \"45:37: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\"),", "+            \"54:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),", "+            \"56:27: \" + getCheckMessage(MSG_KEY_LINE_BREAK_AFTER, \"{\"),", "+            \"66:1: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\"),"]}]}