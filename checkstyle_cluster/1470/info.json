{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ce5e00af789eef6fabc19d6f75b4184", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "158e7bb596a1cb162cd0927e2ac263d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private Pattern getEndOfSentencePattern()", "signatureAfterChange": "     private Pattern getEndOfSentencePattern()", "diff": ["-        if (mEndOfSentencePattern == null) {", "-            mEndOfSentencePattern = Pattern.compile(mEndOfSentenceFormat);", "+        if (endOfSentencePattern == null) {", "+            endOfSentencePattern = Pattern.compile(endOfSentenceFormat);", "-        return mEndOfSentencePattern;", "+        return endOfSentencePattern;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37f17bf1b82f1bc01665f23d4419a892", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Utils.java", "commitBeforeChange": "d613c3fe74259c0a8609fab30e9612653709a60f", "commitAfterChange": "fa102b60fae8420f4376531e207e3ef30b2cd728", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static Pattern getPattern(String pattern, int compileFlags)         throws PatternSyntaxException", "signatureAfterChange": "     public static Pattern getPattern(String pattern, int compileFlags)         throws PatternSyntaxException", "diff": ["-            retVal = Pattern.compile(pattern, compileFlags);", "-            CREATED_RES.putIfAbsent(key, retVal);", "+            final Pattern compiledPattern = Pattern.compile(pattern, compileFlags);", "+            retVal = CREATED_RES.putIfAbsent(key, compiledPattern);", "+            retVal = firstNonNull(retVal, compiledPattern);"]}]}