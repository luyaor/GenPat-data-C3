{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb1e02331fe226b3a8f4551555cc4db8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b3cc80b1064c98decb51ac413f8a415", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "6df3e84393d095000c982b2087344de84a91f9ef", "commitAfterChange": "ea01eaaa85409442aeece8763f0388066bd07bf5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private int checkPackageHtml(String[] aFiles)", "signatureAfterChange": "     private int checkPackageHtml(String[] aFiles)", "diff": ["-        int packageHtmlErrors = 0;", "-", "-        if (aFiles != null && mConfig.isRequirePackageHtml())", "+        if (!mConfig.isRequirePackageHtml())", "-            final HashSet checkedPackages = new HashSet();", "-            for (int i = 0; i < aFiles.length; i++)", "+            return 0;", "+        }", "+", "+        int packageHtmlErrors = 0;", "+        final HashSet checkedPackages = new HashSet();", "+        for (int i = 0; i < aFiles.length; i++)", "+        {", "+            final File file = new File(aFiles[i]);", "+            final File packageDir = file.getParentFile();", "+            if (!checkedPackages.contains(packageDir))", "-                final File file = new File(aFiles[i]);", "-                final File packageDir = file.getParentFile();", "-                if (!checkedPackages.contains(packageDir))", "+                final File packageDoc =", "+                    new File(packageDir, \"package.html\");", "+                final String docFile = packageDoc.toString();", "+                fireFileStarted(docFile);", "+                if (!packageDoc.exists())", "-                    final File packageDoc =", "-                        new File(packageDir, \"package.html\");", "-                    final String docFile = packageDoc.toString();", "-                    fireFileStarted(docFile);", "-                    if (!packageDoc.exists())", "-                    {", "-                        final LineText error = new LineText(0,", "-                            \"missing package documentation file.\");", "-                        fireErrors(docFile, new LineText[]{error} );", "-                        packageHtmlErrors++;", "-                    }", "-                    fireFileFinished(docFile);", "-                    checkedPackages.add(packageDir);", "+                    final LineText error =", "+                        new LineText(0, \"missing package documentation file.\");", "+                    fireErrors(docFile, new LineText[]{error} );", "+                    packageHtmlErrors++;", "+                fireFileFinished(docFile);", "+                checkedPackages.add(packageDir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62d33615c290ee8dd23e456fcc9560bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingCtorCheck.java", "commitBeforeChange": "6e1b8917c105606e8e03cc58cf893aba9a844f0a", "commitAfterChange": "9470bb3a3985a82aabef94a013a00c2446f44955", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["+", "+    @Override", "-        if (modifiers != null", "-            && modifiers.branchContains(TokenTypes.ABSTRACT)) {", "-            // should apply the check to abstract class", "-            return;", "+        if (!modifiers.branchContains(TokenTypes.ABSTRACT)) {", "+            super.visitToken(ast);", "-", "-        super.visitToken(ast);"]}]}