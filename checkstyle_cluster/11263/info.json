{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "487fcf3717295fe989d01817ed8a5c0c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13069305d1837522afac9e0a18733d70", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java", "commitBeforeChange": "cdf3c3848a7caf9d1f31f4c5d99f8c8d22a17f59", "commitAfterChange": "050de1a6c09647a42341dd497e0fee2b09f9d898", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private boolean isExtendedClassNamedAsException(DetailAST ast)", "signatureAfterChange": "     private boolean isExtendedClassNamedAsException(DetailAST ast)", "diff": ["-            final DetailAST extendedClass = extendsClause.findFirstToken(TokenTypes.IDENT);", "-            if (extendedClass != null) {", "-                final String extendedClassName = extendedClass.getText();", "-                return extendedClassName.matches(extendedClassNameFormat);", "+            DetailAST currentNode = extendsClause;", "+            while (currentNode.getType() != TokenTypes.IDENT) {", "+                currentNode = currentNode.getLastChild();", "+            final String extendedClassName = currentNode.getText();", "+            return extendedClassName.matches(extendedClassNameFormat);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ffc3b56a4ee9bc04252565263767483", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "bbd273b62d86cf30f8a7c74e47e83a4aca3768df", "commitAfterChange": "bd4ec9a98edaced73f14c5422f64c39fad3ce596", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            int columnNo = aAST.getColumnNo();", "+            DetailAST reportAST = aAST;", "-                columnNo--;", "+                reportAST = parent;", "-                columnNo--;", "+                reportAST = parent;", "-            log(aAST.getLineNo(),", "-                columnNo,", "+            log(reportAST.getLineNo(),", "+                reportAST.getColumnNo(),"]}]}