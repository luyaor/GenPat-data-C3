{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "980c84474118cd2e9631de6c9272c64c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6652dfb39364083d96eea4acd73b6cf8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java", "commitBeforeChange": "39f40e57858c8a5c6310bf35e6649b03188b6996", "commitAfterChange": "0518b753a40f1857516b356654e5d01834af2109", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-                    log(nextToken.getLineNo(), \"empty.line.separator\", nextToken.getText());", "+                    if (mAllowNoEmptyLineBetweenFields", "+                            && nextToken.getType() != TokenTypes.VARIABLE_DEF)", "+                    {", "+                        log(nextToken.getLineNo(), \"empty.line.separator\", nextToken.getText());", "+                    }", "+                    else if (!mAllowNoEmptyLineBetweenFields) {", "+                        log(nextToken.getLineNo(), \"empty.line.separator\", nextToken.getText());", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c13389433c709bf56f747500c479aa25", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "ee33ed57cd2c88888e9821a2047f587f07283d98", "commitAfterChange": "d10b2c45ffc6c390bade5218b4d315a128485bcf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void checkAnnotationIndentation(DetailAST atNode,             NavigableMap<Integer, DetailAST> firstNodesOnLines)", "signatureAfterChange": "     private void checkAnnotationIndentation(DetailAST atNode,             NavigableMap<Integer, DetailAST> firstNodesOnLines)", "diff": ["-            if (node.getLineNo() < lastAnnotationLine", "-                    || node.getLineNo() == lastAnnotationLine) {", "+            if (node.getLineNo() <= lastAnnotationLine) {", "-                if (node.getType() == TokenTypes.AT", "+                final boolean isCurrentNodeCloseAnnotationAloneInLine =", "+                        node.getLineNo() == lastAnnotationLine", "+                        && node.equals(lastAnnotationNode);", "+                if (isCurrentNodeCloseAnnotationAloneInLine", "+                        || node.getType() == TokenTypes.AT"]}]}