{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c1d93fa23614aba6e855dd8e1c3f31d5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27b4d8e912c122020de813571c1c473a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/indentation/FromGuava.java", "commitBeforeChange": "1ad274c7029a7bdf03d96dddd4ac8c130f2bf543", "commitAfterChange": "8d88dde6f325f9696a6fcd0ed74d45c6a848031b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "       @Override       <K, V> ValueReference<K, V> referenceValue(           Segment<K, V> segment, ReferenceEntry<K, V> entry, V value, int weight)", "signatureAfterChange": "       <K, V> Object referenceValue1(           Segment<K, V> segment, ReferenceEntry<Integer, Integer> entry, int value, int weight)", "diff": ["-      @Override", "-      <K, V> ValueReference<K, V> referenceValue(", "-          Segment<K, V> segment, ReferenceEntry<K, V> entry, V value, int weight) {", "+      <K, V> Object referenceValue1(", "+          Segment<K, V> segment, ReferenceEntry<Integer, Integer> entry, int value, int weight) {", "-            : new WeightedSoftValueReference<K, V>(", "-                segment.valueReferenceQueue, value, entry, weight);", "+            : new WeightedSoftValueReference<K, V>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7908070d60a75156676667e6aaa481b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/indentation/FromGuava.java", "commitBeforeChange": "1ad274c7029a7bdf03d96dddd4ac8c130f2bf543", "commitAfterChange": "8d88dde6f325f9696a6fcd0ed74d45c6a848031b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "       @Override       <K, V> ValueReference<K, V> referenceValue(           Segment<K, V> segment, ReferenceEntry<K, V> entry, V value, int weight)", "signatureAfterChange": "        @Override      <K, V> ValueReference<K, V> referenceValue(Segment<K, V> segment,      \t\t    ReferenceEntry<K, V> entry, V value, int weight)", "diff": ["+", "+      @Override", "+     <K, V> ValueReference<K, V> referenceValue(Segment<K, V> segment, ", "+    \t\t    ReferenceEntry<K, V> entry, V value, int weight) {", "+", "+        return null;", "+      }", "-      @Override", "-      <K, V> ValueReference<K, V> referenceValue(", "-          Segment<K, V> segment, ReferenceEntry<K, V> entry, V value, int weight) {", "-            : new WeightedSoftValueReference<K, V>(", "-                segment.valueReferenceQueue, value, entry, weight);"]}]}