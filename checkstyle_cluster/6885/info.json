{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6d83f8159c58639ea2540b31ce67156", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bcf68ba24e8a7df286b98e60d6d7ab2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "b9b72f969209ac4edb9c6b02aaf8e2f590d0b737", "commitAfterChange": "24ba45a971569b9702e6bf78c5c07c48beb25464", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private List getMethodTags(String[] aLines, int aLastLineNo)", "signatureAfterChange": "     private List getMethodTags(Comment aComment)", "diff": ["-     **/", "-    private List getMethodTags(String[] aLines, int aLastLineNo)", "+     */", "+    private List getMethodTags(Comment aComment)", "+        final String[] lines = aComment.getText();", "-        int currentLine = aLastLineNo - aLines.length;", "-        for (int i = 0; i < aLines.length; i++) {", "+        int currentLine = aComment.getFirstLineNo() - 1;", "+", "+        for (int i = 0; i < lines.length; i++) {", "-            if (MATCH_JAVADOC_ARG.match(aLines[i])) {", "+            if (MATCH_JAVADOC_ARG.match(lines[i])) {", "-            else if (MATCH_JAVADOC_NOARG.match(aLines[i])) {", "+            else if (MATCH_JAVADOC_NOARG.match(lines[i])) {", "-            else if (MATCH_JAVADOC_NOARG_CURLY.match(aLines[i])) {", "+            else if (MATCH_JAVADOC_NOARG_CURLY.match(lines[i])) {", "-            else if (MATCH_JAVADOC_ARG_MULTILINE_START.match(aLines[i])) {", "+            else if (MATCH_JAVADOC_ARG_MULTILINE_START.match(lines[i])) {", "-                while (remIndex < aLines.length) {", "-                    if (MATCH_JAVADOC_MULTILINE_CONT.match(aLines[remIndex])) {", "-                        remIndex = aLines.length;", "+                while (remIndex < lines.length) {", "+                    if (MATCH_JAVADOC_MULTILINE_CONT.match(lines[remIndex])) {", "+                        remIndex = lines.length;", "-            else if (MATCH_JAVADOC_NOARG_MULTILINE_START.match(aLines[i])) {", "+            else if (MATCH_JAVADOC_NOARG_MULTILINE_START.match(lines[i])) {", "-                while (remIndex < aLines.length) {", "-                    if (MATCH_JAVADOC_MULTILINE_CONT.match(aLines[remIndex])) {", "-                        remIndex = aLines.length;", "+                while (remIndex < lines.length) {", "+                    if (MATCH_JAVADOC_MULTILINE_CONT.match(lines[remIndex])) {", "+                        remIndex = lines.length;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caf30bbef9776a9a6c68afc07fa14deb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private List getMethodTags(TextBlock aComment)", "signatureAfterChange": "     private List getMethodTags(TextBlock aComment)", "diff": ["-            if (MATCH_JAVADOC_ARG.match(lines[i])) {", "+            Matcher javadocArgMatcher = MATCH_JAVADOC_ARG.matcher(lines[i]);", "+            Matcher javadocNoargMatcher =", "+                MATCH_JAVADOC_NOARG.matcher(lines[i]);", "+            Matcher noargCurlyMatcher =", "+                MATCH_JAVADOC_NOARG_CURLY.matcher(lines[i]);", "+            Matcher argMultilineStart =", "+                MATCH_JAVADOC_ARG_MULTILINE_START.matcher(lines[i]);", "+            Matcher noargMultilineStart =", "+                MATCH_JAVADOC_NOARG_MULTILINE_START.matcher(lines[i]);", "+            if (javadocArgMatcher.find()) {", "-                                        MATCH_JAVADOC_ARG.getParen(1),", "-                                        MATCH_JAVADOC_ARG.getParen(2)));", "+                                        javadocArgMatcher.group(1),", "+                                        javadocArgMatcher.group(2)));", "-            else if (MATCH_JAVADOC_NOARG.match(lines[i])) {", "+            else if (javadocNoargMatcher.find()) {", "-                                        MATCH_JAVADOC_NOARG.getParen(1)));", "+                                        javadocNoargMatcher.group(1)));", "-            else if (MATCH_JAVADOC_NOARG_CURLY.match(lines[i])) {", "+            else if (noargCurlyMatcher.find()) {", "-                                        MATCH_JAVADOC_NOARG_CURLY.getParen(1)));", "+                                        noargCurlyMatcher.group(1)));", "-            else if (MATCH_JAVADOC_ARG_MULTILINE_START.match(lines[i])) {", "-                final String p1 = MATCH_JAVADOC_ARG_MULTILINE_START.getParen(1);", "-                final String p2 = MATCH_JAVADOC_ARG_MULTILINE_START.getParen(2);", "+            else if (argMultilineStart.find()) {", "+                final String p1 = argMultilineStart.group(1);", "+                final String p2 = argMultilineStart.group(2);", "-                    if (MATCH_JAVADOC_MULTILINE_CONT.match(lines[remIndex])) {", "+                    Matcher multilineCont =", "+                        MATCH_JAVADOC_MULTILINE_CONT.matcher(lines[remIndex]);", "+                    if (multilineCont.find()) {", "-                        String lFin = MATCH_JAVADOC_MULTILINE_CONT.getParen(1);", "+                        String lFin = multilineCont.group(1);", "-            else if (MATCH_JAVADOC_NOARG_MULTILINE_START.match(lines[i])) {", "-                final String p1 = MATCH_JAVADOC_NOARG_MULTILINE_START", "-                    .getParen(1);", "+            else if (noargMultilineStart.find()) {", "+                final String p1 = noargMultilineStart.group(1);", "-                    if (MATCH_JAVADOC_MULTILINE_CONT.match(lines[remIndex])) {", "+                    Matcher multilineCont =", "+                        MATCH_JAVADOC_MULTILINE_CONT.matcher(lines[remIndex]);", "+                    if (multilineCont.find()) {", "-                        String lFin = MATCH_JAVADOC_MULTILINE_CONT.getParen(1);", "+                        String lFin = multilineCont.group(1);"]}]}