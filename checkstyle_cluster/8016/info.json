{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d481ca2e0b457313be77c98a53fdba2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "801d8cc34944ed4613051bd2d6d2a7e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NoCloneCheck.java", "commitBeforeChange": "17eaaa5a0aec1943cf0f2c59a95e81fa72b740c1", "commitAfterChange": "03a24c2e44dbc49721c7c4a6e4e82d7907a601ee", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public NoCloneCheck()", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-     */", "-    public NoCloneCheck() {", "-        super(\"clone\", MSG_KEY);", "+", "+    @Override", "+    public void visitToken(DetailAST aAST) {", "+        final DetailAST mid = aAST.findFirstToken(TokenTypes.IDENT);", "+        final String name = mid.getText();", "+", "+        if (\"clone\".equals(name)) {", "+", "+            final DetailAST params = aAST.findFirstToken(TokenTypes.PARAMETERS);", "+            final boolean hasEmptyParamList =", "+                !params.branchContains(TokenTypes.PARAMETER_DEF);", "+", "+            if (hasEmptyParamList) {", "+                log(aAST.getLineNo(), MSG_KEY);", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97c1fe4d6e8ea9a50cc485f86e7d0495", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NoFinalizerCheck.java", "commitBeforeChange": "be04ecad7fe572acbbcd4fc75e52d1d8dba097ea", "commitAfterChange": "3fe171ec8a04a7606dfc92498798e1139e8dec05", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public NoFinalizerCheck()", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-     */", "-    public NoFinalizerCheck() {", "-        super(\"finalize\", MSG_KEY);", "+", "+    @Override", "+    public void visitToken(DetailAST aAST) {", "+        final DetailAST mid = aAST.findFirstToken(TokenTypes.IDENT);", "+        final String name = mid.getText();", "+", "+        if (\"finalize\".equals(name)) {", "+", "+            final DetailAST params = aAST.findFirstToken(TokenTypes.PARAMETERS);", "+            final boolean hasEmptyParamList =", "+                !params.branchContains(TokenTypes.PARAMETER_DEF);", "+", "+            if (hasEmptyParamList) {", "+                log(aAST.getLineNo(), MSG_KEY);", "+            }", "+        }"]}]}