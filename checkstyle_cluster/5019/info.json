{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a0ccd943eeb89d345c46439ff1a3427", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "100dbbfaa51cb0316e0ead9452f54a40", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "b78fa7ddd8cfbf7b47a69d0c466e7b3fae78d1e8", "commitAfterChange": "43fe1ad269809f293b375dc4d0a4313798bf2124", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-                removeVariable(aAST);", "+                // TODO: is there better way to check is aAST", "+                // in left part of assignment?", "+                if (aAST.getParent().getFirstChild() == aAST) {", "+                    removeVariable(aAST);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fc73b5309443a41479335d6e6f37f94", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java", "commitBeforeChange": "2b4a02d2c8a498a8a1ee38e9396426209fa65fad", "commitAfterChange": "f7e41edb947dad22e10eeaa2e68e6f44b4bfa747", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      void verify(Checker aC,             File[] aProcessedFiles,             String aMessageFileName,             String[] aExpected,             Integer... aWarnsExpected)         throws Exception", "signatureAfterChange": "      void verify(Checker aC,             File[] aProcessedFiles,             String aMessageFileName,             String[] aExpected,             Integer... aWarnsExpected)         throws Exception", "diff": ["-                Integer integer = Arrays.asList(aWarnsExpected).contains(lineNumber) ? lineNumber : 0;", "+                Integer integer = 0;", "+                if (Arrays.asList(aWarnsExpected).contains(lineNumber)) {", "+                    integer = lineNumber;", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ce1b08929f0b68a8fde36e3a532734d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65", "commitAfterChange": "88830ca708e2deb22cae333057ebddd15f7f9c57", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "         public Tag(String text, int line, SuppressWithNearbyCommentFilter filter)", "signatureAfterChange": "         public Tag(String text, int line, SuppressWithNearbyCommentFilter filter)", "diff": ["-                if (filter.messageFormat != null) {", "+                if (filter.messageFormat == null) {", "+                    tagMessageRegexp = null;", "+                }", "+                else {", "-                }", "-                else {", "-                    tagMessageRegexp = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83a460b1f267a52bd374d80642c5bb92", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheck.java", "commitBeforeChange": "8fc92d312c9927fb5cd3445cbd7f5838f1abfe47", "commitAfterChange": "896b671caa5a43043921186a4e64be2ef876f331", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "     public void beginTree(DetailAST aRootAST)", "diff": ["-                log(i + 1, \"illegal.regexp\", getFormat());", "+                if (\"\".equals(mMessage)) {", "+                    log(i + 1, \"illegal.regexp\", getFormat());", "+                }", "+                else {", "+                    log(i + 1, mMessage);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b40930366bf65616e6b368eacf9b5982", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenTextCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            String message = getMessage();", "-            if (message.isEmpty()) {", "-                message = MSG_KEY;", "+            String customMessage = getMessage();", "+            if (customMessage.isEmpty()) {", "+                customMessage = MSG_KEY;", "-                message,", "+                customMessage,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c725b39a2a88492ef03522cea1e03ce5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "ba4d62dc78cf7a648771b1be9646cac4bab27676", "commitAfterChange": "677acc1e8491acffd24c859e553b06362da0d471", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                visitMethodDef(ast);", "+                if (isVerifiable(ast)) {", "+                    visitMethodDef(ast);", "+                }", "-                visitVariableDef(ast);", "+                if (isVerifiable(ast)) {", "+                    visitVariableDef(ast);", "+                }", "+    }"]}]}