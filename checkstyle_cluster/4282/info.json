{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06f5a8bfc96fe9e4dabc4d94239c9a03", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0349b6b05c06957c6b19ce0557fb3b91", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "b3133035a4fa0e086dfb0dfbefbc7f1540521bbc", "commitAfterChange": "add2bdfb27494bff5fa9c305d9782f57c6170b18", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "         public void setType(FormatterType aType)", "signatureAfterChange": "         public void setType(FormatterType aType)", "diff": ["-            if (E_XML.equals(val)) {", "-                setClassname(XMLLogger.class.getName());", "-            }", "-            else if (E_PLAIN.equals(val)) {", "-                setClassname(DefaultLogger.class.getName());", "-            }", "-            else {", "+            if (!E_XML.equals(val) && !E_PLAIN.equals(val)) {", "-        }", "+            mFormatterType = aType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37c2b7ba32300372cc8104e674feddae", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAst)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-    public void leaveToken(DetailAST aAst)", "+    public void leaveToken(DetailAST ast)", "-        if (aAst.getType() == TokenTypes.CLASS_DEF) {", "-            if (mClassDepth == 1) {", "-                mCurrentClass = null;", "+        if (ast.getType() == TokenTypes.CLASS_DEF) {", "+            if (classDepth == 1) {", "+                currentClass = null;", "-            mClassDepth--;", "+            classDepth--;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3df20278428c9cef8d3043dc2128797f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java", "commitBeforeChange": "e0887211663929e261910403eb769a093af83783", "commitAfterChange": "da6ebe6de41b7a5afc6f6746ff0c2382c2a4be0f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        else if (ast.getType() == TokenTypes.CTOR_DEF", "-                && isEnumMember(ast)) {", "-            checkEnumConstructorModifiers(ast);", "+        else if (ast.getType() == TokenTypes.CTOR_DEF) {", "+            if (isEnumMember(ast)) {", "+                checkEnumConstructorModifiers(ast);", "+            }", "+            else {", "+                checkClassContructorModifiers(ast);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e521c97c5ae03bc189c04da6635fd80", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/Guard.java", "commitBeforeChange": "9f93c2258ef0512b743f5927be201ff55a9d5c57", "commitAfterChange": "23c8774d2e2fd245de1e5df02758fd23702c565e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     AccessResult verifyImport(final String forImport)", "signatureAfterChange": "     AccessResult verifyImport(final String forImport)", "diff": ["-            final boolean classMatch = regExp", "-                ? forImport.matches(className)", "-                : forImport.equals(className);", "+            final boolean classMatch;", "+", "+            if (regExp) {", "+                classMatch = forImport.matches(className);", "+            }", "+            else {", "+                classMatch = forImport.equals(className);", "+            }"]}]}