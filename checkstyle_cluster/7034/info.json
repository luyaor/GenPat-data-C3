{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9eb3f187f903e432179e248dec0575a7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2238a6cfc9e23cd02b391b0090e67844", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "f1dced161ab0c818f0e1e125fc5b88b71f5b171e", "commitAfterChange": "af095344e1501d55b2dfbbd18deaf305e814601c", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "     private static boolean isGetterMethod(final DetailAST ast)", "signatureAfterChange": "     private static boolean isGetterMethod(final DetailAST ast)", "diff": ["-        if (params == null", "-                || params.getChildCount(TokenTypes.PARAMETER_DEF) > 0) {", "+        if (params.getChildCount(TokenTypes.PARAMETER_DEF) > 0) {", "-        return expr.getType() == TokenTypes.LITERAL_RETURN", "-                && expr.getFirstChild().getType() == TokenTypes.EXPR;", "+        return expr.getType() == TokenTypes.LITERAL_RETURN;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3abd430af1f02fc51edd75099409ffa8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "f1dced161ab0c818f0e1e125fc5b88b71f5b171e", "commitAfterChange": "af095344e1501d55b2dfbbd18deaf305e814601c", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     private static boolean isSetterMethod(final DetailAST ast)", "signatureAfterChange": "     private static boolean isSetterMethod(final DetailAST ast)", "diff": ["-        if (params == null", "-                || params.getChildCount(TokenTypes.PARAMETER_DEF) != 1) {", "+        if (params.getChildCount(TokenTypes.PARAMETER_DEF) != 1) {", "-        return expr.getType() == TokenTypes.EXPR", "-                && expr.getFirstChild().getType() == TokenTypes.ASSIGN;", "+        return expr.getFirstChild().getType() == TokenTypes.ASSIGN;"]}]}