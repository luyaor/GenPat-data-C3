{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e3d3eb6b31277b7274fda3ef7ada3f1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a26c5486b8e658285b4890511cd69e6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java", "commitBeforeChange": "ce173d03715b3bdcc82eaaf40cd941f431393920", "commitAfterChange": "32ef3116363e00ddb75238c0f0206c95735b3d16", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "          public void testVersionRegularExError()         throws Exception", "signatureAfterChange": "          public void testVersionRegularExError()         throws Exception", "diff": ["+            \"49: Type Javadoc tag @version must match pattern '\\\\$Revision.*\\\\$'.\",", "+            \"58: Type Javadoc comment is missing an @version tag.\",", "+            \"67: Type Javadoc tag @version must match pattern '\\\\$Revision.*\\\\$'.\",", "+            \"76: Type Javadoc tag @version must match pattern '\\\\$Revision.*\\\\$'.\",", "+            \"85: Type Javadoc tag @version must match pattern '\\\\$Revision.*\\\\$'.\",", "+            \"94: Type Javadoc comment is missing an @version tag.\",", "+            \"103: Type Javadoc tag @version must match pattern '\\\\$Revision.*\\\\$'.\",", "+            \"112: Type Javadoc tag @version must match pattern '\\\\$Revision.*\\\\$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d8eec9c746cb5b3e348009c8994e027", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/MagicNumberCheckTest.java", "commitBeforeChange": "d5a6a78a590fa688a4405d80adb81e067e997b14", "commitAfterChange": "9df0df10bf2b1cd0613967ab85fbdcf02b94ef0e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDefault()         throws Exception", "signatureAfterChange": "     public void testDefault()         throws Exception", "diff": ["+            \"60:25: '010' is a magic number.\",", "+            \"61:25: '011' is a magic number.\",", "+            \"63:30: '010L' is a magic number.\",", "+            \"64:30: '011l' is a magic number.\",", "+            \"68:24: '0x10' is a magic number.\",", "+            \"69:24: '0X011' is a magic number.\",", "+            \"71:29: '0x10L' is a magic number.\",", "+            \"72:29: '0X11l' is a magic number.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "514d91311cd05f4c30d6e4894c23ccec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/MagicNumberCheckTest.java", "commitBeforeChange": "d5a6a78a590fa688a4405d80adb81e067e997b14", "commitAfterChange": "9df0df10bf2b1cd0613967ab85fbdcf02b94ef0e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          public void testIntegersOnly()         throws Exception", "signatureAfterChange": "          public void testIntegersOnly()         throws Exception", "diff": ["+            \"60:25: '010' is a magic number.\",", "+            \"61:25: '011' is a magic number.\",", "+            \"63:30: '010L' is a magic number.\",", "+            \"64:30: '011l' is a magic number.\",", "+            \"68:24: '0x10' is a magic number.\",", "+            \"69:24: '0X011' is a magic number.\",", "+            \"71:29: '0x10L' is a magic number.\",", "+            \"72:29: '0X11l' is a magic number.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e23d475a7be77d2afa2e3f8ef83698c6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheckTest.java", "commitBeforeChange": "8a518cb679589be5c8d70860a3317ea8b304faf0", "commitAfterChange": "662354a9025e2e15f377d766f2fb7b46027e820a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDefault() throws Exception", "signatureAfterChange": "     public void testDefault() throws Exception", "diff": ["+            \"37:25: Variable 'bar' explicitly initialized to 'null' (default value for its type).\",", "+            \"38:27: Variable 'barArray' explicitly initialized to 'null' (default value for its type).\",", "+            \"45:21: Variable 'x' explicitly initialized to '0' (default value for its type).\",", "+            \"46:29: Variable 'bar' explicitly initialized to 'null' (default value for its type).\",", "+            \"47:31: Variable 'barArray' explicitly initialized to 'null' (default value for its type).\",", "+            \"50:17: Variable 'x' explicitly initialized to '0' (default value for its type).\",", "+            \"51:25: Variable 'bar' explicitly initialized to 'null' (default value for its type).\",", "+            \"52:27: Variable 'barArray' explicitly initialized to 'null' (default value for its type).\","]}]}