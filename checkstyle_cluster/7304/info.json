{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30bfce4e16cc72eb2855426c9f8bbf08", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "137f93b37c96054ac0f5f4050f636fa5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MemberNameCheckTest.java", "commitBeforeChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "commitAfterChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testSpecified()         throws Exception", "signatureAfterChange": "     @Test     public void testSpecified()         throws Exception", "diff": ["+", "+        final String pattern = \"^m[A-Z][a-zA-Z0-9]*$\";", "+", "-            \"35:17: Name 'badMember' must match pattern '^m[A-Z][a-zA-Z0-9]*$'.\",", "-            \"224:17: Name 'someMember' must match pattern '^m[A-Z][a-zA-Z0-9]*$'.\",", "+            \"35:17: \" + getCheckMessage(MSG_INVALID_PATTERN, \"badMember\", pattern),", "+            \"224:17: \" + getCheckMessage(MSG_INVALID_PATTERN, \"someMember\", pattern),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "248d9be739b9b2aa77c066c23069a509", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/ConstantNameCheckTest.java", "commitBeforeChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "commitAfterChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testInterfaceAndAnnotation()         throws Exception", "signatureAfterChange": "      @Test     public void testInterfaceAndAnnotation()         throws Exception", "diff": ["+", "+        final String pattern = \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\";", "+", "-            \"24:16: Name 'data' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\",", "-            \"64:16: Name 'data' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\",", "+            \"24:16: \" + getCheckMessage(MSG_INVALID_PATTERN, \"data\", pattern),", "+            \"64:16: \" + getCheckMessage(MSG_INVALID_PATTERN, \"data\", pattern),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41f7b168c214311560e6d133903af489", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreak/MethodParamPadTest.java", "commitBeforeChange": "648871b6c87c84d3c24d58512a2f4ecd47f62017", "commitAfterChange": "cdfa561939a3475cd4c36b47a2433a0f70c9b6ff", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void operatorWrapTest() throws Exception", "signatureAfterChange": "      @Test     public void operatorWrapTest() throws Exception", "diff": ["-        final String messageKey = \"line.previous\";", "+        final String messageKeyPrevious = \"line.previous\";", "+        final String messageKeyPreceded = \"ws.preceded\";", "-            \"83:9: \" + getCheckMessage(clazz, messageKey, \"(\"),", "-            \"128:13: \" + getCheckMessage(clazz, messageKey, \"(\"),", "-            \"130:9: \" + getCheckMessage(clazz, messageKey, \"(\"),", "+            \"83:9: \" + getCheckMessage(clazz, messageKeyPrevious, \"(\"),", "+            \"128:13: \" + getCheckMessage(clazz, messageKeyPrevious, \"(\"),", "+            \"130:9: \" + getCheckMessage(clazz, messageKeyPrevious, \"(\"),", "+            \"353:15: \" + getCheckMessage(clazz, messageKeyPreceded, \"(\"),", "+            \"358:13: \" + getCheckMessage(clazz, messageKeyPrevious, \"(\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c1a24dc93e5d1ac8d76e9a324f28be5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheckTest.java", "commitBeforeChange": "c56dce9222a819b4741b4c0cd664d38c58b31050", "commitAfterChange": "866daeeb2ad31e6a5a78235aa46819d9f966ee1c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testSurroundingCode() throws Exception", "signatureAfterChange": "      @Test     public void testSurroundingCode() throws Exception", "diff": ["-            \"136: \" + getCheckMessage(MSG_KEY_SINGLE, 137, 20, 16),", "+            \"90: \" + getCheckMessage(MSG_KEY_SINGLE, 91, 14, 8),", "+            \"98: \" + getCheckMessage(MSG_KEY_SINGLE, 99, 13, 8),", "+            \"108: \" + getCheckMessage(MSG_KEY_SINGLE, 109, 33, 8),", "-        verify(checkConfig, getPath(\"InputCommentsIndentationSurroundingCode.java\"), expected);", "+        final String testInputFile = \"InputCommentsIndentationSurroundingCode.java\";", "+        verify(checkConfig, getPath(testInputFile), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d32a595b00a8cb7a608e28a2ebd1cb7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/LocalVariableNameCheckTest.java", "commitBeforeChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "commitAfterChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testLoopVariables()         throws Exception", "signatureAfterChange": "      @Test     public void testLoopVariables()         throws Exception", "diff": ["+", "+        final String pattern = \"^[a-z]{2,}[a-zA-Z0-9]*$\";", "+", "-            \"19:21: Name 'i' must match pattern '^[a-z]{2,}[a-zA-Z0-9]*$'.\",", "-            \"25:17: Name 'Index' must match pattern '^[a-z]{2,}[a-zA-Z0-9]*$'.\",", "+            \"19:21: \" + getCheckMessage(MSG_INVALID_PATTERN, \"i\", pattern),", "+            \"25:17: \" + getCheckMessage(MSG_INVALID_PATTERN, \"Index\", pattern),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdcc8034c92d2fe281a1b2aa3e369ae9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeParameterNameTest.java", "commitBeforeChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "commitAfterChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testInterfaceFooName()         throws Exception", "signatureAfterChange": "      @Test     public void testInterfaceFooName()         throws Exception", "diff": ["+        final String pattern = \"^foo$\";", "+", "-            \"48:15: Name 'Input' must match pattern '^foo$'.\",", "-            \"52:24: Name 'T' must match pattern '^foo$'.\",", "+            \"48:15: \" + getCheckMessage(MSG_INVALID_PATTERN, \"Input\", pattern),", "+            \"52:24: \" + getCheckMessage(MSG_INVALID_PATTERN, \"T\", pattern),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccec2d2142f640c3c8dbd3ba9a41b938", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MethodNameCheckTest.java", "commitBeforeChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "commitAfterChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testOverridenMethods() throws Exception", "signatureAfterChange": "      @Test     public void testOverridenMethods() throws Exception", "diff": ["+        final String pattern = \"^[a-z][a-zA-Z0-9]*$\";", "+", "-            \"17:17: Name 'PUBLICfoo' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            \"20:20: Name 'PROTECTEDfoo' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "+            \"17:17: \" + getCheckMessage(MSG_INVALID_PATTERN, \"PUBLICfoo\", pattern),", "+            \"20:20: \" + getCheckMessage(MSG_INVALID_PATTERN, \"PROTECTEDfoo\", pattern),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de13898f44e48365c376c4860ca613a5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeParameterNameTest.java", "commitBeforeChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "commitAfterChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testClassFooName()         throws Exception", "signatureAfterChange": "      @Test     public void testClassFooName()         throws Exception", "diff": ["+        final String pattern = \"^foo$\";", "+", "-            \"5:38: Name 't' must match pattern '^foo$'.\",", "-            \"33:18: Name 'T' must match pattern '^foo$'.\",", "+            \"5:38: \" + getCheckMessage(MSG_INVALID_PATTERN, \"t\", pattern),", "+            \"33:18: \" + getCheckMessage(MSG_INVALID_PATTERN, \"T\", pattern),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5702d3488f97d9be69090058dd2479e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/ConstantNameCheckTest.java", "commitBeforeChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "commitAfterChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault()         throws Exception", "signatureAfterChange": "      @Test     public void testDefault()         throws Exception", "diff": ["+", "+        final String pattern = \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\";", "+", "-            \"25:29: Name 'badConstant' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\",", "-            \"142:30: Name 'BAD__NAME' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\",", "+            \"25:29: \" + getCheckMessage(MSG_INVALID_PATTERN, \"badConstant\", pattern),", "+            \"142:30: \" + getCheckMessage(MSG_INVALID_PATTERN, \"BAD__NAME\", pattern),"]}]}