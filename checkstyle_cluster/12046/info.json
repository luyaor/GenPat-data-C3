{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92a24bb15a99026776581ea957f741be", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43336bd80342aa9611b3126a063bc866", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigSerializationTest.java", "commitBeforeChange": "7335df239dda0b303e7de23ef6b1adf388780a0c", "commitAfterChange": "62354b2ad94e17a08924cdffa643d7c8c3734625", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testRegexpDeserialization()         throws Exception", "signatureAfterChange": "     public void testRegexpDeserialization()         throws Exception", "diff": ["-        Configuration configOrig = new Configuration();", "-        configOrig.setPatternProperty(Defn.TYPE_PATTERN_PROP, \"xyz\");", "+        final Properties props = new Properties();", "+        props.setProperty(Defn.TYPE_PATTERN_PROP, \"xyz\");", "+        Configuration configOrig = new Configuration(props, System.out);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6619237ec5ba21c17343af23fa5067eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractTypeAwareCheckTest.java", "commitBeforeChange": "346387c717048391485fb28f877531aab1095de1", "commitAfterChange": "f020066f8bdfb378df36904af3df8b5bc48858fd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testWithoutLogErrors() throws Exception", "signatureAfterChange": "      @Test     public void testWithoutLogErrors() throws Exception", "diff": ["-        catch (IllegalStateException ex) {", "+        catch (CheckstyleException ex) {", "+            final IllegalStateException cause = (IllegalStateException) ex.getCause();", "-                    + \" class information for @throws tag 'InvalidExceptionName'.\",", "-                    ex.getMessage());", "+                            + \" class information for @throws tag 'InvalidExceptionName'.\",", "+                    cause.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c571862214df1e2a5c04769a111bb30", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java", "commitBeforeChange": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c", "commitAfterChange": "7d5db23ad528c95e0fbdfcd1293424c6240db07b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected String getCheckMessage(Map<String, String> messages, String messageKey, Object... arguments)", "signatureAfterChange": "     protected String getCheckMessage(Map<String, String> messages, String messageKey, Object... arguments)", "diff": ["-               return format(entry.getValue(), arguments);", "+               final MessageFormat formatter = new MessageFormat(entry.getValue(), Locale.ROOT);", "+               return formatter.format(arguments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c8154aabb3161a6a75a04f2fea2f510", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java", "commitBeforeChange": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c", "commitAfterChange": "7d5db23ad528c95e0fbdfcd1293424c6240db07b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected String getCheckMessage(Class<? extends AbstractViolationReporter> aClass,             String messageKey, Object... arguments)", "signatureAfterChange": "     protected String getCheckMessage(Class<? extends AbstractViolationReporter> aClass,             String messageKey, Object... arguments)", "diff": ["-        return format(getCheckMessage(aClass, messageKey), arguments);", "+        final MessageFormat formatter = new MessageFormat(getCheckMessage(aClass, messageKey),", "+                Locale.ROOT);", "+        return formatter.format(arguments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc8be0471e52703feb64872ba7432910", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java", "commitBeforeChange": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c", "commitAfterChange": "7d5db23ad528c95e0fbdfcd1293424c6240db07b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected String getCheckMessage(String messageKey, Object... arguments)", "signatureAfterChange": "     protected String getCheckMessage(String messageKey, Object... arguments)", "diff": ["-        return format(pr.getProperty(messageKey), arguments);", "+        final MessageFormat formatter = new MessageFormat(pr.getProperty(messageKey),", "+                Locale.ROOT);", "+        return formatter.format(arguments);"]}]}