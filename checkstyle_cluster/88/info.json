{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "33c0c4cc4f54ece78701f7245275187c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3450bac0d50938a198383a9633ee8a2e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java", "commitBeforeChange": "33b86f5b253f64e2d59c905fa2405d7b0f2de4a4", "commitAfterChange": "75a289111ee8b16dd36de9f76a13908a494d65fd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        if (aAST.getType() == TokenTypes.RPAREN) {", "-            processRight(aAST);", "-        }", "-        else {", "+        // Strange logic in this method to guard against checking RPAREN tokens", "+        // that are associated with a TYPECAST token.", "+        if (aAST.getType() != TokenTypes.RPAREN) {", "+        else if ((aAST.getParent() == null)", "+                 || (aAST.getParent().getType() != TokenTypes.TYPECAST))", "+        {", "+            processRight(aAST);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72fe684c986b5b53d20cc842f972b65f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/UnusedImportsCheck.java", "commitBeforeChange": "3f14872d33910413734232fb16b9debe479e1bd8", "commitAfterChange": "84eddc36730c1eca845257201c71a0d1fb2d40cf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        if (aAST.getType() == JavaTokenTypes.IDENT) {", "+        if (aAST.getType() == TokenTypes.IDENT) {", "-        else if (aAST.getType() == JavaTokenTypes.IMPORT) {", "+        else if (aAST.getType() == TokenTypes.IMPORT) {", "-        else if ((aAST.getType() == JavaTokenTypes.CLASS_DEF)", "-            || (aAST.getType() == JavaTokenTypes.INTERFACE_DEF))", "+        else if ((aAST.getType() == TokenTypes.CLASS_DEF)", "+            || (aAST.getType() == TokenTypes.INTERFACE_DEF))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc9eb6af20e1891b1f94262448399fdf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "936501d034dac8a06eb77a502224fabc6a35d4f3", "commitAfterChange": "1ad7c80579044d5ade384a834bdfd8ba76e3f772", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static boolean isDeclarationToken(int parentType)", "signatureAfterChange": "     private static boolean isDeclarationToken(int parentType)", "diff": ["-        return parentType == TokenTypes.VARIABLE_DEF", "-            || parentType == TokenTypes.CTOR_DEF", "-            || parentType == TokenTypes.METHOD_DEF", "-            || parentType == TokenTypes.CLASS_DEF", "-            || parentType == TokenTypes.ENUM_DEF", "-            || parentType == TokenTypes.INTERFACE_DEF", "-            || parentType == TokenTypes.PARAMETER_DEF", "-            || parentType == TokenTypes.TYPE_ARGUMENT;", "+        return DECLARATION_TOKENS.contains(parentType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb2e05252847f88e1d628e176ca601df", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java", "commitBeforeChange": "2698e9a5196abbc566b633dbe6bdbf71db33b4f8", "commitAfterChange": "89005ddf6d5d8b494e4451d16df9fd8996c735a9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static JavadocTags getJavadocTags(TextBlock cmt,             JavadocTagType tagType)", "signatureAfterChange": "     public static JavadocTags getJavadocTags(TextBlock cmt,             JavadocTagType tagType)", "diff": ["-            if ((tagType.equals(JavadocTagType.ALL) || tagType", "-                    .equals(JavadocTagType.BLOCK)) && blockTagMatcher.find())", "+            if ((tagType == JavadocTagType.ALL || tagType == JavadocTagType.BLOCK)", "+                    && blockTagMatcher.find())", "-            else if (tagType.equals(JavadocTagType.ALL)", "-                    || tagType.equals(JavadocTagType.INLINE))", "+            else if (tagType == JavadocTagType.ALL || tagType == JavadocTagType.INLINE)"]}]}