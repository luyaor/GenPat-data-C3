{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "deb3c5c7c7e1e9ec0f36196c7bfdfbf9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35d30d8abc4541a45c5eeb603ff9e76d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheckTest.java", "commitBeforeChange": "67e304551be06c0ee482a81669fdd4e053786240", "commitAfterChange": "fc8a5ae78cffc8f6d5951a72fc722c52dedc1d04", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     private void runIt(String aMax, String[] aExpected) throws Exception", "signatureAfterChange": "     @Override     protected DefaultConfiguration createCheckerConfig(         Configuration aCheckConfig)", "diff": ["-    private void runIt(String aMax, String[] aExpected) throws Exception", "+    @Override", "+    protected DefaultConfiguration createCheckerConfig(", "+        Configuration aCheckConfig)", "-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(FileLengthCheck.class);", "-        checkConfig.addAttribute(\"max\", aMax);", "-        verify(checkConfig, getPath(\"InputSimple.java\"), aExpected);", "+        DefaultConfiguration dc = new DefaultConfiguration(\"root\");", "+        dc.addChild(aCheckConfig);", "+        return dc;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86c6431a47e9834d376dbababa81cfd2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "5dfb3f5a9e0206f9f80f9f067faa3dbe7766cef9", "commitAfterChange": "13b7c634337e38d20daa92ca9d5e069a2e72ec55", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void process(List<File> aFiles)", "signatureAfterChange": "      @Override     protected void processFiltered(File aFile, List<String> aLines)", "diff": ["+", "+    @Override", "+    protected void processFiltered(File aFile, List<String> aLines)", "+    {", "+        mPropertyFiles.add(aFile);", "+    }", "-     */", "-    public void process(List<File> aFiles)", "-    {", "-        final List<File> propertyFiles = filter(aFiles);", "-        final Map<String, Set<File>> propFilesMap =", "-            arrangePropertyFiles(propertyFiles);", "-        checkPropertyFileSets(propFilesMap);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebe544eafb566f28a19a70841c0f54c9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/indentation/InputValidMethodIndent.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "               void method6()", "signatureAfterChange": "               void method6()", "diff": ["-        if (!areOnSameLine((DetailAST)aChild.expr.getFirstChild(), ", "-            (DetailAST) expr.getFirstChild())) ", "-        {", "-        }", "-        ", "-        if (System.out.write(new byte[0],", "-            0, 0)) {", "-            System.out.println(\"blah\");", "-        }", "-        ", "-        ", "-    }", "+   "]}]}