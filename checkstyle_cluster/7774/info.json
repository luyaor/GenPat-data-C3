{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a9ac443e63c9fc50cec2a4ab7343dac0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "025ee69055cc01c90e54896b153e2256", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java", "commitBeforeChange": "dc3fa902da0209c05f9a032f36341567d3af1dce", "commitAfterChange": "ec4f7b40c6c777d41b1fe5fe41ac4f85b8b80cc5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testWrong() throws Exception", "signatureAfterChange": "      public void testWrong() throws Exception", "diff": ["+", "+    public void testWrong() throws Exception", "+    {", "+        final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);", "+        checkConfig.addAttribute(\"file\", System.getProperty(\"testinputs.dir\")", "+                + \"/import-control_wrong.xml\");", "+        final String[] expected = {\"1:40: Import control file does not handle this package.\"};", "-    public void testWrong() throws Exception"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc7a2bf6becb56e66ce3b75af3be1095", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "78e9ce870170ca3ef88fd78f8e0af0681c958eb3", "commitAfterChange": "ea4085cd15fefe1e70a495798187c425295c74b6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testDefaults() throws Exception", "signatureAfterChange": "      public void testDefaults() throws Exception", "diff": ["-    public void testDefaults() throws Exception {", "-        DefaultConfiguration checkConfig = createCheckConfig(IllegalTypeCheck.class);", "+", "+    public void testDefaults() throws Exception {", "-        verify(checkConfig, getPath(\"coding\" + File.separator + \"InputIllegalType.java\"), expected);", "+        verify(mCheckConfig, getPath(\"coding\" + File.separator + \"InputIllegalType.java\"), expected);"]}]}