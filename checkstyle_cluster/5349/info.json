{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c29019377ae0e73ce9aa70b941e6a5b4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bea2b3f8951c6b017d053ae08da1751", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "bf780dee7dfcc445a97fe93ad9a633975a052c6c", "commitAfterChange": "a6b47597067d3456c894435a8fdc52b1c7060bed", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static boolean isFirstVariableInForInit(DetailAST variableDef)", "signatureAfterChange": "     private static boolean isVariableInForInit(DetailAST variableDef)", "diff": ["-    private static boolean isFirstVariableInForInit(DetailAST variableDef)", "+    private static boolean isVariableInForInit(DetailAST variableDef)", "-        return variableDef.getParent().getType() != TokenTypes.FOR_INIT", "-                 || variableDef.getPreviousSibling() == null", "-                 || variableDef.getPreviousSibling().getType() != TokenTypes.COMMA;", "+        return variableDef.getParent().getType() != TokenTypes.FOR_INIT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "374484149ce7fa3106fa58a0dbfa26f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractSuperCheck.java", "commitBeforeChange": "f8ba0d727928aaa1275758fa09114155faab0b9e", "commitAfterChange": "af52963008a800390e8b356db5811886572f37a3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private static boolean isZeroParameters(DetailAST parent)", "signatureAfterChange": "     private boolean hasArguments(DetailAST methodCallDotAst)", "diff": ["-    private static boolean isZeroParameters(DetailAST parent) {", "-", "-        final DetailAST args = parent.getNextSibling();", "-        return args == null || args.getType() != TokenTypes.ELIST || args.getChildCount() != 0;", "+    private boolean hasArguments(DetailAST methodCallDotAst) {", "+        final DetailAST argumentsList = methodCallDotAst.getNextSibling();", "+        return argumentsList.getChildCount() > 0;"]}]}