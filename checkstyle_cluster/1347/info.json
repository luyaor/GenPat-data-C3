{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b72ef8851a3507cb7aa882c2e503d7c3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d789e4918c7a1f8fe203f02b68dd201", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "ea704b1cfd23923b91679828ca0bca0035944478", "commitAfterChange": "5c481899d4cfcb8369dcd0851aef21c2d8c5088a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Override     public final void visitToken(DetailAST aBlockCommentAst)", "signatureAfterChange": "      @Override     public final void visitToken(DetailAST aBlockCommentAst)", "diff": ["-                final LocalizedMessage parseErrorMessage = ps.getParseErrorMessage();", "-                log(parseErrorMessage.getLineNo(), parseErrorMessage.getMessage());", "+                final ParseErrorMessage parseErrorMessage = ps.getParseErrorMessage();", "+                log(parseErrorMessage.getLineNumber(),", "+                        parseErrorMessage.getMessageKey(),", "+                        parseErrorMessage.getMessageArguments());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1652c14ac739f8a15cb4aafbe2de2e60", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/XMLLoggerTest.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void verifyLines(String[] aExpectedLines)         throws IOException", "signatureAfterChange": "     private void verifyLines(String[] aExpectedLines)         throws IOException", "diff": ["-        RE checkstyleOpenTag = Utils.getRE(\"^<checkstyle version=\\\".*\\\">$\");", "-        assertTrue(\"second line.\", checkstyleOpenTag.match(lines[1]));", "+        Pattern checkstyleOpenTag = Utils.getPattern(\"^<checkstyle version=\\\".*\\\">$\");", "+        assertTrue(\"second line.\", checkstyleOpenTag.matcher(lines[1]).matches());"]}]}