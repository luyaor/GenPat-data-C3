{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e1610da924a886bad90126e40736b8ff", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dde0a6b7a32caaf399e9cc7c28f25bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "commitAfterChange": "4c1148db9982918e65f8d1156e8fb9c07b206fc9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static <T extends Enum<T>> T getOption(final Class<T> enuclass,         final String string)", "signatureAfterChange": "     private static <T extends Enum<T>> T getOption(final Class<T> enuclass,         final String value)", "diff": ["-        final String string) {", "+        final String value) {", "-            return Enum.valueOf(enuclass, string.trim().toUpperCase(Locale.ENGLISH));", "+            return Enum.valueOf(enuclass, value.trim().toUpperCase(Locale.ENGLISH));", "-            throw new ConversionException(\"unable to parse \" + string, iae);", "+            throw new ConversionException(\"unable to parse \" + value, iae);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc05f7413d3eed96f928d8e53c8a93a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractOptionCheck.java", "commitBeforeChange": "02ae6023b5b6f66e495393a6f87e4beb4b4ab3d0", "commitAfterChange": "584f7ee1232be96284255540e7249023c327ca8f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setOption(String optionStr)", "signatureAfterChange": "     public void setOption(String optionStr)", "diff": ["-            option = Enum.valueOf(optionClass, optionStr.trim().toUpperCase(Locale.ENGLISH));", "+            abstractOption =", "+                    Enum.valueOf(optionClass, optionStr.trim().toUpperCase(Locale.ENGLISH));", "-            throw new ConversionException(\"unable to parse \" + option, iae);", "+            throw new ConversionException(\"unable to parse \" + abstractOption, iae);"]}]}