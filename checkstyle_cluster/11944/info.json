{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f2040ec68bf84f6929bc411ab60bb5f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e08ef6d1f8c112e83b5cde64dc493d3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "4d0adc9deed7f3df296f8016941414ec1600955b", "commitAfterChange": "1edf43ab329e96db26a3ed3a4f4a1abdaa4b1a3a", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "      public void testLCurlyOther()         throws Exception", "signatureAfterChange": "      public void testLCurlyOther()         throws Exception", "diff": ["-            filepath + \":19: '{' should be on the previous line.\",", "-            filepath + \":21: '{' should be on the previous line.\",", "-            filepath + \":23: '{' should be on the previous line.\",", "-            filepath + \":25: '}' should be on the same line.\",", "-            filepath + \":28: '}' should be on the same line.\",", "-            filepath + \":30: '{' should be on the previous line.\",", "-            filepath + \":34: '{' should be on the previous line.\",", "-            filepath + \":40: '}' should be on the same line.\",", "-            filepath + \":42: '{' should be on the previous line.\",", "-            filepath + \":44: '}' should be on the same line.\",", "-            filepath + \":46: '{' should be on the previous line.\",", "-            filepath + \":52: '{' should be on the previous line.\",", "-            filepath + \":54: '{' should be on the previous line.\",", "+            filepath + \":19:9: '{' should be on the previous line.\",", "+            filepath + \":21:13: '{' should be on the previous line.\",", "+            filepath + \":23:17: '{' should be on the previous line.\",", "+            filepath + \":25:17: '}' should be on the same line.\",", "+            filepath + \":28:17: '}' should be on the same line.\",", "+            filepath + \":30:17: '{' should be on the previous line.\",", "+            filepath + \":34:17: '{' should be on the previous line.\",", "+            filepath + \":40:13: '}' should be on the same line.\",", "+            filepath + \":42:13: '{' should be on the previous line.\",", "+            filepath + \":44:13: '}' should be on the same line.\",", "+            filepath + \":46:13: '{' should be on the previous line.\",", "+            filepath + \":52:9: '{' should be on the previous line.\",", "+            filepath + \":54:13: '{' should be on the previous line.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8761818ed7b5aa3f6fa336d5e616f18d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "a1cecb5e0658862f957e60a8d5b2ade13b592101", "commitAfterChange": "659e6ec7aa7251ea0a825f48c1a523431ff09b79", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public void testStrictJavadoc()         throws Exception", "signatureAfterChange": "      public void testStrictJavadoc()         throws Exception", "diff": ["-            filepath + \":12: method is missing a Javadoc comment.\",", "+            filepath + \":12:9: method is missing a Javadoc comment.\",", "-            filepath + \":18: method is missing a Javadoc comment.\",", "-            filepath + \":25: method is missing a Javadoc comment.\",", "+            filepath + \":18:13: method is missing a Javadoc comment.\",", "+            filepath + \":25:13: method is missing a Javadoc comment.\",", "-            filepath + \":38: method is missing a Javadoc comment.\",", "+            filepath + \":38:9: method is missing a Javadoc comment.\",", "-            filepath + \":49: method is missing a Javadoc comment.\",", "-            filepath + \":54: method is missing a Javadoc comment.\",", "-            filepath + \":59: method is missing a Javadoc comment.\",", "-            filepath + \":64: method is missing a Javadoc comment.\",", "-            filepath + \":69: method is missing a Javadoc comment.\",", "-            filepath + \":74: method is missing a Javadoc comment.\",", "-            filepath + \":79: method is missing a Javadoc comment.\",", "-            filepath + \":84: method is missing a Javadoc comment.\",", "-            filepath + \":94: Expected @param tag for 'aA'.\"", "+            filepath + \":49:5: method is missing a Javadoc comment.\",", "+            filepath + \":54:5: method is missing a Javadoc comment.\",", "+            filepath + \":59:5: method is missing a Javadoc comment.\",", "+            filepath + \":64:5: method is missing a Javadoc comment.\",", "+            filepath + \":69:5: method is missing a Javadoc comment.\",", "+            filepath + \":74:5: method is missing a Javadoc comment.\",", "+            filepath + \":79:5: method is missing a Javadoc comment.\",", "+            filepath + \":84:5: method is missing a Javadoc comment.\",", "+            filepath + \":94:32: Expected @param tag for 'aA'.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a823ee815c7ae6a6b2ee6f49eff6c2c1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "f8a53831f0fa98f317ea7dbc6490b5e91b6cc5d9", "commitAfterChange": "5703b6e33550d6e9706f42e253c2cc7d83a358bf", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void testSimple()         throws Exception", "signatureAfterChange": "      public void testSimple()         throws Exception", "diff": ["-            filepath + \":25:29: variable name 'badConstant' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\",", "-            filepath + \":30:24: variable name 'badStatic' must match pattern '^s[A-Z][a-zA-Z0-9]*$'.\",", "-            filepath + \":35:17: variable name 'badMember' must match pattern '^m[A-Z][a-zA-Z0-9]*$'.\",", "+            filepath + \":25:29: Name 'badConstant' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\",", "+            filepath + \":30:24: Name 'badStatic' must match pattern '^s[A-Z][a-zA-Z0-9]*$'.\",", "+            filepath + \":35:17: Name 'badMember' must match pattern '^m[A-Z][a-zA-Z0-9]*$'.\",", "-            filepath + \":71:19: parameter name 'badFormat1' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.\",", "+            filepath + \":71:19: Name 'badFormat1' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.\",", "-            filepath + \":71:34: parameter name 'badFormat2' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.\",", "-            filepath + \":72:25: parameter name 'badFormat3' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.\",", "+            filepath + \":71:34: Name 'badFormat2' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.\",", "+            filepath + \":72:25: Name 'badFormat3' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.\",", "-            filepath + \":119:13: variable name 'ABC' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            filepath + \":122:19: variable name 'cde' must match pattern '[A-Z]+'.\",", "+            filepath + \":119:13: Name 'ABC' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "+            filepath + \":122:19: Name 'cde' must match pattern '[A-Z]+'.\",", "-            filepath + \":130:18: variable name 'I' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "+            filepath + \":130:18: Name 'I' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            filepath + \":132:20: variable name 'InnerBlockVariable' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            filepath + \":137:10: method name 'ALL_UPPERCASE_METHOD' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            filepath + \":142:30: variable name 'BAD__NAME' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\",", "+            filepath + \":132:20: Name 'InnerBlockVariable' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "+            filepath + \":137:10: Name 'ALL_UPPERCASE_METHOD' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "+            filepath + \":142:30: Name 'BAD__NAME' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\","]}]}