{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a19c4d92a815ed4088e0a0c3328dae1d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02888e9bf350162ed915e329e34ffaff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java", "commitBeforeChange": "8f12d2b92568c8fca42dfbd26f3d1f0b17100a7b", "commitAfterChange": "050d1e55a819d639fe9116ec3ebd99902530c3f9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test(expected = CheckstyleException.class)     public void testNoSuchAttribute() throws CheckstyleException", "signatureAfterChange": "      @Test     public void testConfigure_NoSuchAttribute()", "diff": ["-", "-    @Test(expected = CheckstyleException.class)", "-    public void testNoSuchAttribute() throws CheckstyleException {", "+    @Test", "+    public void testConfigure_NoSuchAttribute() {", "+        final DefaultConfiguration conf = new DefaultConfiguration(\"testConf\");", "-        testBean.configure(conf);", "+        try {", "+            testBean.configure(conf);", "+        }", "+        catch (CheckstyleException ex) {", "+            assertNull(ex.getCause());", "+            assertTrue(ex.getMessage().startsWith(\"Property '\" + \"NonExisting\" + \"' in module \"));", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15e9dfc8272488f4fdc75919d9cae262", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java", "commitBeforeChange": "315033ff5647ef9896130573d9212fee6fe141db", "commitAfterChange": "fbfe160ca83f91f9093e2c8122709f1163324edf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testNoSuchAttribute()", "signatureAfterChange": "      @Test(expected = CheckstyleException.class)     public void testNoSuchAttribute() throws CheckstyleException", "diff": ["-", "-    public void testNoSuchAttribute()", "+    @Test(expected = CheckstyleException.class)", "+    public void testNoSuchAttribute() throws CheckstyleException", "-        try {", "-            mTestBean.configure(mConf);", "-            fail(\"AutomaticBean.configure() accepted nonexisting attribute name\");", "-        }", "-        catch (CheckstyleException ex)", "-        {", "-            // expected exception", "-        }", "-        assertEquals(mTestBean.mName, null);", "-", "+        mTestBean.configure(mConf);"]}]}