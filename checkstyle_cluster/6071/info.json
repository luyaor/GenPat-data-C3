{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8e71ebbee19a34fb051e2570d9d5ab1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a0bbb7f486bbfb7a405a94c416a1aa7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheck.java", "commitBeforeChange": "9f93c2258ef0512b743f5927be201ff55a9d5c57", "commitAfterChange": "23c8774d2e2fd245de1e5df02758fd23702c565e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean isCorrectLocation(DetailAST annotation, boolean hasParams)", "signatureAfterChange": "     private boolean isCorrectLocation(DetailAST annotation, boolean hasParams)", "diff": ["-        final boolean allowingCondition = hasParams ? allowSamelineParameterizedAnnotation", "-            : allowSamelineSingleParameterlessAnnotation;", "+        final boolean allowingCondition;", "+", "+        if (hasParams) {", "+            allowingCondition = allowSamelineParameterizedAnnotation;", "+        }", "+        else {", "+            allowingCondition = allowSamelineSingleParameterlessAnnotation;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dac8e42d1d55b695916d780a967ace6b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheck.java", "commitBeforeChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "commitAfterChange": "6ee4a0f805d528cdee03cfc175502d15b5722dab", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean isCorrectLocation(DetailAST annotation, boolean hasParams)", "signatureAfterChange": "     private boolean isCorrectLocation(DetailAST annotation, boolean hasParams)", "diff": ["-        return allowingCondition && !hasNodeBefore(annotation)", "-            || !allowingCondition && !hasNodeBeside(annotation)", "-            || allowSamelineMultipleAnnotations;", "+        return allowSamelineMultipleAnnotations", "+            || allowingCondition && !hasNodeBefore(annotation)", "+            || !allowingCondition && !hasNodeBeside(annotation);"]}]}