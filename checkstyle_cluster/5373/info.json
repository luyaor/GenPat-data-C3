{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5bfa1c6ee5c07e79b330298eeb3821cf", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b429f3747329380b3e98435b09bc174", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "2e3654c59be793a9e9d06f38f0624bfae0e075bb", "commitAfterChange": "b3e7e97d30769de05a61c539db3b244fe1e342f4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "       public void openFile(File aFile, final Component aParent)", "signatureAfterChange": "       public void openFile(File aFile, final Component aParent)", "diff": ["+", "+                // clear for each new file", "+                 getLines2position().clear();", "+                 // starts line counting at 1", "+                 getLines2position().add(0);", "+                 // insert the contents of the file to the text area", "+                 for (String element : sourceLines)", "+                 {", "+                   getLines2position().add(mJTextArea.getText().length());", "+                   mJTextArea.append(element + \"\\n\");", "+                 }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "874c1c8d4b1481d5ec2b7696a009434e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "04bca2e0435d598918603ce5a457ddc99e6ae5a5", "commitAfterChange": "c3baa3fa77f4ed8e475ab52db6d0f2f860d93ef0", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void fireErrors(String aFileName, LocalizedMessage[] aErrors)", "signatureAfterChange": "     public void fireErrors(String aFileName, LocalizedMessage[] aErrors)", "diff": ["-            final Iterator it = mListeners.iterator();", "-            while (it.hasNext()) {", "-                final AuditListener listener = (AuditListener) it.next();", "-                listener.addError(evt);", "+            if (accept(evt)) {", "+                final Iterator it = mListeners.iterator();", "+                while (it.hasNext()) {", "+                    final AuditListener listener = (AuditListener) it.next();", "+                    listener.addError(evt);", "+                }"]}]}