{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6203e90d05d2ffc781e728bdbb39fe51", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc617c92ec77207416b5977a7222b35d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "98f0c51ab05243ce556dfb5afcd9c7ae4b5af7aa", "commitAfterChange": "63664e0b012593e18c5bb93ba528f27fd93fe0d4", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     void reportReference(String aType)", "signatureAfterChange": "     void reportReference(String aType)", "diff": ["-        mReferenced.add(aType);", "-", "-        // we might have multiple levels of inner classes,", "-        // all of them have to be marked as referenced", "-", "-        // as an unwanted side effect we also add package names like", "-        // \"com\", \"java\", etc., but that probably doesn't hurt", "-        // and could be fixed by getting more info using the classloader", "-        int lastDot = aType.lastIndexOf('.');", "-        while (lastDot != -1) {", "-            mReferenced.add(aType.substring(0, lastDot));", "-            lastDot = aType.lastIndexOf('.', lastDot - 1);", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d16766b141c034ef7ca09f3b3d89a40e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "257d848c62a490b55db2e89ca436831f16d15af5", "commitAfterChange": "49bcb59031c2cb2d0aa2e53124020e3033c1dd75", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     void reportReference(String aType)", "signatureAfterChange": "     void reportReference(String aType)", "diff": ["+", "+        // we might have multiple levels of inner classes,", "+        // all of them have to be marked as referenced", "+", "+        // as an unwanted side effect we also add package names like", "+        // \"com\", \"java\", etc., but that probably doesn't hurt", "+        // and could be fixed by getting more info using the classloader", "+        int lastDot = aType.lastIndexOf('.');", "+        while (lastDot != -1) {", "+            mReferenced.add(aType.substring(0, lastDot));", "+            lastDot = aType.lastIndexOf('.', lastDot - 1);", "+        }"]}]}