{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e8e5efc7b73f472f249f301fab88a4e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "029b0287e052a51e74d1be37c6a529ee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/TypecastParenPadCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (aAST.getType() == TokenTypes.TYPECAST) {", "-            processLeft(aAST);", "+        if (ast.getType() == TokenTypes.TYPECAST) {", "+            processLeft(ast);", "-        else if ((aAST.getParent() != null)", "-                 && (aAST.getParent().getType() == TokenTypes.TYPECAST)", "-                 && (aAST.getParent().findFirstToken(TokenTypes.RPAREN)", "-                     == aAST))", "+        else if ((ast.getParent() != null)", "+                 && (ast.getParent().getType() == TokenTypes.TYPECAST)", "+                 && (ast.getParent().findFirstToken(TokenTypes.RPAREN)", "+                     == ast))", "-            processRight(aAST);", "+            processRight(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57eb63814309f5f68c829046e3c7c486", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final DetailAST slistAST = aAST.findFirstToken(TokenTypes.SLIST);", "+        final DetailAST slistAST = ast.findFirstToken(TokenTypes.SLIST);", "-        if ((aAST.getType() == TokenTypes.LITERAL_ELSE)", "-            && (aAST.findFirstToken(TokenTypes.LITERAL_IF) != null))", "+        if ((ast.getType() == TokenTypes.LITERAL_ELSE)", "+            && (ast.findFirstToken(TokenTypes.LITERAL_IF) != null))", "-        if (aAST.getType() == TokenTypes.LITERAL_IF) {", "-            skipStatement = isSkipIfBlock(aAST);", "+        if (ast.getType() == TokenTypes.LITERAL_IF) {", "+            skipStatement = isSkipIfBlock(ast);", "-            log(aAST.getLineNo(), MSG_KEY_NEED_BRACES, aAST.getText());", "+            log(ast.getLineNo(), MSG_KEY_NEED_BRACES, ast.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f67f6c2932464ff7e0617a4456511c9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void processStart(DetailAST aAST)", "signatureAfterChange": "     private void processStart(DetailAST ast)", "diff": ["-    private void processStart(DetailAST aAST)", "+    private void processStart(DetailAST ast)", "-        final String line = getLine(aAST.getLineNo() - 1);", "-        final int before = aAST.getColumnNo() - 1;", "-        final int after = aAST.getColumnNo() + 1;", "+        final String line = getLine(ast.getLineNo() - 1);", "+        final int before = ast.getColumnNo() - 1;", "+        final int after = ast.getColumnNo() + 1;", "-            final DetailAST parent = aAST.getParent();", "+            final DetailAST parent = ast.getParent();", "-                    log(aAST.getLineNo(), before, \"ws.notPreceded\", \"<\");", "+                    log(ast.getLineNo(), before, \"ws.notPreceded\", \"<\");", "-                log(aAST.getLineNo(), before, \"ws.preceded\", \"<\");", "+                log(ast.getLineNo(), before, \"ws.preceded\", \"<\");", "-            log(aAST.getLineNo(), after, \"ws.followed\", \"<\");", "+            log(ast.getLineNo(), after, \"ws.followed\", \"<\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3089ce2efd80fcbfe130e2e936ec57f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private static String getIdentifier(DetailAST aAST)", "signatureAfterChange": "     private static String getIdentifier(DetailAST ast)", "diff": ["-    private static String getIdentifier(DetailAST aAST)", "+    private static String getIdentifier(DetailAST ast)", "-        if (aAST != null) {", "-            if (aAST.getType() == TokenTypes.IDENT) {", "-                return aAST.getText();", "+        if (ast != null) {", "+            if (ast.getType() == TokenTypes.IDENT) {", "+                return ast.getText();", "-            else if (aAST.getType() == TokenTypes.DOT) {", "-                return getIdentifier(aAST.getFirstChild()) + \".\"", "-                    + getIdentifier(aAST.getLastChild());", "+            else if (ast.getType() == TokenTypes.DOT) {", "+                return getIdentifier(ast.getFirstChild()) + \".\"", "+                    + getIdentifier(ast.getLastChild());", "-        throw new IllegalArgumentException(\"Identifier AST expected: \" + aAST);", "+        throw new IllegalArgumentException(\"Identifier AST expected: \" + ast);"]}]}