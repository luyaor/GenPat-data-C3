{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9476432a3e09f2ab899317cc99c1c3de", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1143915707d78ac30d67e322925a22d2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/IntRangeFilterTest.java", "commitBeforeChange": "a5df850a2343050a535be52d7ddf119c337f9695", "commitAfterChange": "1079f0ab995bc25218f9e38af7968552f26a5df5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDecide()", "signatureAfterChange": "     @Test     public void testDecide()", "diff": ["-        assertFalse(\"less than\", filter.accept(Integer.valueOf(-1)));", "-        assertTrue(\"in range\", filter.accept(Integer.valueOf(0)));", "-        assertTrue(\"in range\", filter.accept(Integer.valueOf(5)));", "-        assertTrue(\"in range\", filter.accept(Integer.valueOf(10)));", "-        assertFalse(\"greater than\", filter.accept(Integer.valueOf(11)));", "+        assertFalse(\"less than\", filter.accept(-1));", "+        assertTrue(\"in range\", filter.accept(0));", "+        assertTrue(\"in range\", filter.accept(5));", "+        assertTrue(\"in range\", filter.accept(10));", "+        assertFalse(\"greater than\", filter.accept(11));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "192b28427d431d05aff7e00c38e01b15", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/CSVFilterTest.java", "commitBeforeChange": "a5df850a2343050a535be52d7ddf119c337f9695", "commitAfterChange": "1079f0ab995bc25218f9e38af7968552f26a5df5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDecideRange()", "signatureAfterChange": "      @Test     public void testDecideRange()", "diff": ["-        assertFalse(\"less than\", filter.accept(Integer.valueOf(-1)));", "-        assertTrue(\"equal 0\", filter.accept(Integer.valueOf(0)));", "-        assertTrue(\"equal 1\", filter.accept(Integer.valueOf(1)));", "-        assertTrue(\"equal 2\", filter.accept(Integer.valueOf(2)));", "-        assertFalse(\"greater than\", filter.accept(Integer.valueOf(3)));", "+        assertFalse(\"less than\", filter.accept(-1));", "+        assertTrue(\"equal 0\", filter.accept(0));", "+        assertTrue(\"equal 1\", filter.accept(1));", "+        assertTrue(\"equal 2\", filter.accept(2));", "+        assertFalse(\"greater than\", filter.accept(3));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2daa0fdb24c73518ff3d01a56606276b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/CSVFilterTest.java", "commitBeforeChange": "a5df850a2343050a535be52d7ddf119c337f9695", "commitAfterChange": "1079f0ab995bc25218f9e38af7968552f26a5df5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testDecideEmptyRange()", "signatureAfterChange": "      @Test     public void testDecideEmptyRange()", "diff": ["-        assertFalse(\"less than\", filter.accept(Integer.valueOf(-1)));", "-        assertFalse(\"equal 0\", filter.accept(Integer.valueOf(0)));", "-        assertFalse(\"equal 1\", filter.accept(Integer.valueOf(1)));", "-        assertFalse(\"equal 2\", filter.accept(Integer.valueOf(2)));", "-        assertFalse(\"greater than\", filter.accept(Integer.valueOf(3)));", "+        assertFalse(\"less than\", filter.accept(-1));", "+        assertFalse(\"equal 0\", filter.accept(0));", "+        assertFalse(\"equal 1\", filter.accept(1));", "+        assertFalse(\"equal 2\", filter.accept(2));", "+        assertFalse(\"greater than\", filter.accept(3));"]}]}