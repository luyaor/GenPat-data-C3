{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a61b62f453551a4e293c80c80b65e31", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f561235dd9bbb628b556b9fa8adbd36", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheck.java", "commitBeforeChange": "9f93c2258ef0512b743f5927be201ff55a9d5c57", "commitAfterChange": "23c8774d2e2fd245de1e5df02758fd23702c565e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static DetailAST getSuppressWarnings(DetailAST ast)", "signatureAfterChange": "     private static DetailAST getSuppressWarnings(DetailAST ast)", "diff": ["-        return annotation != null ? annotation", "-            : AnnotationUtility.getAnnotation(", "-                ast, FQ_SUPPRESS_WARNINGS);", "+        if (annotation == null) {", "+            return AnnotationUtility.getAnnotation(ast, FQ_SUPPRESS_WARNINGS);", "+        }", "+        else {", "+            return annotation;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e11783a97f05fa7b7fdd17adb0d5d43", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "1ca4d43ce82995b50f2a4b770a053cb74d4d78c4", "commitAfterChange": "a1dda4f264d1201f055c29d6980e0f353bb063c7", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     private void checkHeader()", "signatureAfterChange": "     private void checkHeader()", "diff": ["-                String headerLine = mConfig.getHeaderLines()[i];", "+                // skip lines we are meant to ignore", "+                if (i == (mConfig.getHeaderIgnoreLineNo() - 1)) {", "+                    continue;", "+                }", "+", "+                final String headerLine = mConfig.getHeaderLines()[i];", "-                // re-compilation when multiple files are checked", "-                boolean match =", "+                // re-compilation when multiple files are checked. Will wait", "+                // until this is shown to be a performance problem.", "+                final boolean match =", "-                if ((i != (mConfig.getHeaderIgnoreLineNo() - 1)) && !match)", "+                if (!match)"]}]}