{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c3ccc171ae6eadeabd156edc3a3ddb25", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ef843004ac641ca7c20cf5448fff5ce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/CommonUtilsTest.java", "commitBeforeChange": "9443321a0f70b8fc1f323a9e237f95f5ac44a45c", "commitAfterChange": "28e6666a07f41519c2746a722f46eaa1e243a11d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @SuppressWarnings(\"rawtypes\")     @Test     public void testInvokeConstructorThatFails() throws NoSuchMethodException", "signatureAfterChange": "      @SuppressWarnings(\"rawtypes\")     @Test     public void testInvokeConstructorThatFails() throws NoSuchMethodException", "diff": ["-            fail();", "+            fail(\"IllegalStateException is expected\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2981dff27f021c683a18ecbafd8791ff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheckTest.java", "commitBeforeChange": "9443321a0f70b8fc1f323a9e237f95f5ac44a45c", "commitAfterChange": "28e6666a07f41519c2746a722f46eaa1e243a11d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testWrongTokenType()", "signatureAfterChange": "      @Test     public void testWrongTokenType()", "diff": ["-            fail();", "+            fail(\"IllegalStateException is expected\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "567f2be0e7c37030a6e2b1819ce4249b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/CommonUtilsTest.java", "commitBeforeChange": "9443321a0f70b8fc1f323a9e237f95f5ac44a45c", "commitAfterChange": "28e6666a07f41519c2746a722f46eaa1e243a11d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testGetNonExistingConstructor()", "signatureAfterChange": "      @Test     public void testGetNonExistingConstructor()", "diff": ["-            fail();", "+            fail(\"IllegalStateException is expected\");"]}]}