{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6ee92740ebfd90490217ba3ef9e8236", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1de7c6fc545a6f188405b30f3a0a7e1f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/FileLengthCheck.java", "commitBeforeChange": "1efd41aa924264e0899f5819e1b30a55d715f98b", "commitAfterChange": "e20d45697c937fbb8ae3eb3b43bffb43e211237f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setMax(String aLength)", "signatureAfterChange": "     public void setMax(int aLength)", "diff": ["-    // that parsing this stuff is the core job of beanutils", "-    public void setMax(String aLength)", "+    public void setMax(int aLength)", "-        try {", "-            mMaxFileLength = Integer.parseInt(aLength);", "-        }", "-        catch (NumberFormatException ex) {", "-            throw new ConversionException(\"Can't parse '\"", "-                    + aLength + \"' as maximal file length\", ex);", "-        }", "+        mMaxFileLength = aLength;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4f8cd7b47f83e4e81581a299ea79e47", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java", "commitBeforeChange": "2ba55edc4e35866afbb154e3ea03cf03e56ab9bc", "commitAfterChange": "f2c6263e151e8a7300755b36fbb41511c0a0cca1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static Pattern createPattern(String pattern)", "signatureAfterChange": "     public static Pattern createPattern(String pattern)", "diff": ["+        return createPattern(pattern, 0);", "+    }", "-            return Pattern.compile(pattern);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fea3fe2eb6cda4989b103398f7c964a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractFormatCheck.java", "commitBeforeChange": "104e69edd63edb8d35b6ae63a17934fc5cf49267", "commitAfterChange": "81b52e27c5077f9a4f426d32b0e39a785052c715", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public final void setFormat(String aFormat)         throws ConversionException", "diff": ["-    public void setFormat(String aFormat)", "+    public final void setFormat(String aFormat)", "-        try {", "-            mRegexp = Utils.getPattern(aFormat);", "-            mFormat = aFormat;", "-        }", "-        catch (PatternSyntaxException e) {", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "-        }", "+        updateRegexp(aFormat, mCompileFlags);", "+    }"]}]}