{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3407bb8603fb2254496be7e4a475eabb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db87bd11297a47a457cdfb42a5587051", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule3421overloadsplit/OverloadMethodsDeclarationOrderTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void overloadMethodsTest() throws Exception", "signatureAfterChange": "      @Test     public void overloadMethodsTest() throws Exception", "diff": ["-        Class<OverloadMethodsDeclarationOrderCheck> clazz = OverloadMethodsDeclarationOrderCheck.class;", "-        String messageKey = \"overload.methods.declaration\";", "+        final Class<OverloadMethodsDeclarationOrderCheck> clazz =", "+            OverloadMethodsDeclarationOrderCheck.class;", "+        final String messageKey = \"overload.methods.declaration\";", "-        Configuration checkConfig = builder.getCheckConfig(\"OverloadMethodsDeclarationOrder\");", "-        String filePath = builder.getFilePath(\"InputOverloadMethodsDeclarationOrder\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"OverloadMethodsDeclarationOrder\");", "+        final String filePath = builder.getFilePath(\"InputOverloadMethodsDeclarationOrder\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc158093caa4dd485842ce620ed9efdc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule487modifiers/ModifierOrderTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void modifierOrderTest() throws Exception", "signatureAfterChange": "      @Test     public void modifierOrderTest() throws Exception", "diff": ["-        Class<ModifierOrderCheck> clazz = ModifierOrderCheck.class;", "-        String msgMod = \"mod.order\";", "-        String msgAnnotation = \"annotation.order\";", "+        final Class<ModifierOrderCheck> clazz = ModifierOrderCheck.class;", "+        final String msgMod = \"mod.order\";", "+        final String msgAnnotation = \"annotation.order\";", "-        Configuration checkConfig = builder.getCheckConfig(\"ModifierOrder\");", "-        String filePath = builder.getFilePath(\"ModifierOrderInput\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"ModifierOrder\");", "+        final String filePath = builder.getFilePath(\"ModifierOrderInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}]}