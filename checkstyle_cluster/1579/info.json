{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d0d12e7c04aa8ec3ab645143cfce66f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2bb072e91380c2f0775234d641f0e4b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "78103da0339d6f973434b77741fccb962efeabe6", "commitAfterChange": "4ae3c958225827c9913840942aa8561b8f6be516", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static String readFile(final File inputFile, final CharsetDecoder decoder)             throws IOException", "signatureAfterChange": "     private static String readFile(final File inputFile, final CharsetDecoder decoder)             throws IOException", "diff": ["+        if (!inputFile.exists()) {", "+            throw new FileNotFoundException(inputFile.getPath() + \" (No such file or directory)\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5ea24371c69bfd8d6f953d1311fbf25", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "dcd7085ce2412a00ca97cd4fbaf7e8bf4fd4cfbe", "commitAfterChange": "71c16c55c33b368bf373c60a6daafdd69b0b1abc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          @Override         public void startElement(String namespaceURI,                                  String localName,                                  String qName,                                  Attributes atts)             throws SAXException", "signatureAfterChange": "          @Override         public void startElement(String namespaceURI,                                  String localName,                                  String qName,                                  Attributes atts)             throws SAXException", "diff": ["+            }", "+            else {", "+                if (!qName.equals(METADATA)) {", "+                    throw new IllegalStateException(\"Unknown name:\" + qName + \".\");", "+                }"]}]}