{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "78974f4907f4e40e28da040ae1ed50c9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99b70ed0879b1b04f0f0eb1f9a63f937", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private Tag findNearestMatch(AuditEvent aEvent)", "signatureAfterChange": "     private Tag findNearestMatch(AuditEvent event)", "diff": ["-    private Tag findNearestMatch(AuditEvent aEvent)", "+    private Tag findNearestMatch(AuditEvent event)", "-        // TODO: try binary search if sequential search becomes a performance", "+        // TODO: try binary search if sequential search becomes a perforonce", "-        for (Tag tag : mTags) {", "-            if ((tag.getLine() > aEvent.getLine())", "-                || ((tag.getLine() == aEvent.getLine())", "-                    && (tag.getColumn() > aEvent.getColumn())))", "+        for (Tag tag : tags) {", "+            if ((tag.getLine() > event.getLine())", "+                || ((tag.getLine() == event.getLine())", "+                    && (tag.getColumn() > event.getColumn())))", "-            if (tag.isMatch(aEvent)) {", "+            if (tag.isMatch(event)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9cd1717cf3b868a5164b71e4490a5ef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "         public boolean isMatch(AuditEvent aEvent)", "signatureAfterChange": "         public boolean isMatch(AuditEvent event)", "diff": ["-        public boolean isMatch(AuditEvent aEvent)", "+        public boolean isMatch(AuditEvent event)", "-            final int line = aEvent.getLine();", "-            if (line < mFirstLine) {", "+            final int line = event.getLine();", "+            if (line < firstLine) {", "-            if (line > mLastLine) {", "+            if (line > lastLine) {", "-                mTagCheckRegexp.matcher(aEvent.getSourceName());", "+                tagCheckRegexp.matcher(event.getSourceName());", "-            if (mTagMessageRegexp != null) {", "+            if (tagMessageRegexp != null) {", "-                    mTagMessageRegexp.matcher(aEvent.getMessage());", "+                    tagMessageRegexp.matcher(event.getMessage());"]}]}