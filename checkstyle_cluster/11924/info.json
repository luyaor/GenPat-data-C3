{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a524a1cb0196c1310c094ff180189f66", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b07910e90ba8f5767bd0d21424e5669", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void registerCheck(Check check)         throws CheckstyleException", "signatureAfterChange": "     private void registerCheck(Check check)         throws CheckstyleException", "diff": ["-                final int tokenId = TokenTypes.getTokenId(token);", "+                final int tokenId = Utils.getTokenId(token);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35c6ff3c92431d11330fe78a238b3126", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenCheck.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public int[] getAcceptableTokens()", "signatureAfterChange": "      @Override     public int[] getAcceptableTokens()", "diff": ["-                tokensToCopy[i] = TokenTypes.getTokenId(name);", "+                tokensToCopy[i] = Utils.getTokenId(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dae5a70c5a58850993ce2879a74cf05", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void registerCheck(String token, Check check)", "signatureAfterChange": "     private void registerCheck(String token, Check check)", "diff": ["-        else if (TokenTypes.isCommentType(token)) {", "+        else if (Utils.isCommentType(token)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49458f9aad6e34c41acdc8ca5873669c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private Details getDetails(DetailAST ast)", "signatureAfterChange": "     private Details getDetails(DetailAST ast)", "diff": ["-                        + TokenTypes.getTokenName(ast.getType()) + \")\");", "+                        + Utils.getTokenName(ast.getType()) + \")\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dc196fc658a2b98b6fd78e1bfc1ee1f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public final void setIgnoreOccurrenceContext(String... strRep)", "signatureAfterChange": "     public final void setIgnoreOccurrenceContext(String... strRep)", "diff": ["-            final int type = TokenTypes.getTokenId(s);", "+            final int type = Utils.getTokenId(s);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5035d0e02f7ac5b391064094c970cd5d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheckTest.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testClassSpecific()         throws Exception", "signatureAfterChange": "      @Test     public void testClassSpecific()         throws Exception", "diff": ["-        checkConfig.addAttribute(\"tokens\", TokenTypes.getTokenName(TokenTypes.CLASS_DEF));", "+        checkConfig.addAttribute(\"tokens\", Utils.getTokenName(TokenTypes.CLASS_DEF));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "553825d8f8c4e96cd39d24168ccc6e5f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setLimitedTokens(String... limitedTokensParam)", "signatureAfterChange": "     public void setLimitedTokens(String... limitedTokensParam)", "diff": ["-            limitedTokens[i] = TokenTypes.getTokenId(limitedTokensParam[i]);", "+            limitedTokens[i] = Utils.getTokenId(limitedTokensParam[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "585de77c93d5a2b0cc2d707c11447720", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingCtorCheck.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public MissingCtorCheck()", "signatureAfterChange": "     public MissingCtorCheck()", "diff": ["-        setLimitedTokens(TokenTypes.getTokenName(TokenTypes.CTOR_DEF));", "+        setLimitedTokens(Utils.getTokenName(TokenTypes.CTOR_DEF));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "609cbc4b061d54eabaeb13c4ad65e08b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void setMemberModifiers(String modifiers)", "signatureAfterChange": "     public void setMemberModifiers(String modifiers)", "diff": ["-            modifiersList.add(TokenTypes.getTokenId(modifier.trim()));", "+            modifiersList.add(Utils.getTokenId(modifier.trim()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a51e4cb1c8d72d6fba31487dae76b58", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeModel.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public Object getValueAt(Object node, int column)", "signatureAfterChange": "      @Override     public Object getValueAt(Object node, int column)", "diff": ["-                return TokenTypes.getTokenName(ast.getType());", "+                return Utils.getTokenName(ast.getType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "732b31f62b70049446d7a5bb98a4f37f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheckTest.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testEnumSpecific()         throws Exception", "signatureAfterChange": "      @Test     public void testEnumSpecific()         throws Exception", "diff": ["-        checkConfig.addAttribute(\"tokens\", TokenTypes.getTokenName(TokenTypes.ENUM_DEF));", "+        checkConfig.addAttribute(\"tokens\", Utils.getTokenName(TokenTypes.ENUM_DEF));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88ebf52da068e3aa99e86fa0956961ff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheckTest.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testAnnotationSpecific()         throws Exception", "signatureAfterChange": "      @Test     public void testAnnotationSpecific()         throws Exception", "diff": ["-        checkConfig.addAttribute(\"tokens\", TokenTypes.getTokenName(TokenTypes.ANNOTATION_DEF));", "+        checkConfig.addAttribute(\"tokens\", Utils.getTokenName(TokenTypes.ANNOTATION_DEF));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a20472d2f004ac618eb2d30d84cacdbf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/TokenTypesTest.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testGetShortDescription()", "signatureAfterChange": "     @Test     public void testGetShortDescription()", "diff": ["-                \"The <code>==</code> (equal) operator.\", TokenTypes", "+                \"The <code>==</code> (equal) operator.\", Utils"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6931202f1a58113b8cf6d7abf01d02a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public int[] getAcceptableTokens()", "signatureAfterChange": "      @Override     public int[] getAcceptableTokens()", "diff": ["-            result[i++] = TokenTypes.getTokenId(name);", "+            result[i++] = Utils.getTokenId(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b952854bf0707afc2273c130b708a289", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void notifyVisit(DetailAST ast, AstState astState)", "signatureAfterChange": "     private void notifyVisit(DetailAST ast, AstState astState)", "diff": ["-        final String tokenType = TokenTypes.getTokenName(ast.getType());", "+        final String tokenType = Utils.getTokenName(ast.getType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c05b489534b24c757126a1f1ad6fc855", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void notifyLeave(DetailAST ast, AstState astState)", "signatureAfterChange": "     private void notifyLeave(DetailAST ast, AstState astState)", "diff": ["-        final String tokenType = TokenTypes.getTokenName(ast.getType());", "+        final String tokenType = Utils.getTokenName(ast.getType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0cc141ccfe893e9a2b1778b6dd58704", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setTarget(String target)", "signatureAfterChange": "     public void setTarget(String target)", "diff": ["-            customTarget.add(TokenTypes.getTokenId(type));", "+            customTarget.add(Utils.getTokenId(type));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd87f44b86d8aa1151ec44daddabfd5c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingSwitchDefaultCheck.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public MissingSwitchDefaultCheck()", "signatureAfterChange": "     public MissingSwitchDefaultCheck()", "diff": ["-        setLimitedTokens(TokenTypes.getTokenName(TokenTypes.LITERAL_DEFAULT));", "+        setLimitedTokens(Utils.getTokenName(TokenTypes.LITERAL_DEFAULT));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e63f58496c027b141da67581d6a6e447", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenTextCheck.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public int[] getAcceptableTokens()", "signatureAfterChange": "      @Override     public int[] getAcceptableTokens()", "diff": ["-            result[i] = TokenTypes.getTokenId(name);", "+            result[i] = Utils.getTokenId(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2a0f5a3a157733231bf07b9e93c86fe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void registerCheck(int tokenID, Check check)", "signatureAfterChange": "     private void registerCheck(int tokenID, Check check)", "diff": ["-        registerCheck(TokenTypes.getTokenName(tokenID), check);", "+        registerCheck(Utils.getTokenName(tokenID), check);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd899b70c877c4c2d982f0bffa0bf101", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheckTest.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testInterfaceSpecific()         throws Exception", "signatureAfterChange": "      @Test     public void testInterfaceSpecific()         throws Exception", "diff": ["-        checkConfig.addAttribute(\"tokens\", TokenTypes.getTokenName(TokenTypes.INTERFACE_DEF));", "+        checkConfig.addAttribute(\"tokens\", Utils.getTokenName(TokenTypes.INTERFACE_DEF));"]}]}