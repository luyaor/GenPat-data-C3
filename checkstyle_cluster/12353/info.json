{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a9cf9e4ee1becda8d5eaf4e2278b5d66", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01bd32d43a0847c9c73b94936af05771", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test(expected = IllegalArgumentException.class)     public void testWrongToken()", "signatureAfterChange": "      @Test(expected = IllegalArgumentException.class)     public void testWrongToken()", "diff": ["-        BooleanExpressionComplexityCheck booleanExpressionComplexityCheckObj =", "+        final BooleanExpressionComplexityCheck booleanExpressionComplexityCheckObj =", "-        DetailAST ast = new DetailAST();", "+        final DetailAST ast = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02773cad40c6b7df8fb87f6a241cedc7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testIllegalStateException() throws Exception", "signatureAfterChange": "      @Test     public void testIllegalStateException() throws Exception", "diff": ["-        UncommentedMainCheck check = new UncommentedMainCheck();", "-        DetailAST ast = new DetailAST();", "+        final UncommentedMainCheck check = new UncommentedMainCheck();", "+        final DetailAST ast = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02f639081836f77baa7bcf839d3d7c0e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void testWithSumDefaultMsg() throws Exception", "signatureAfterChange": "      @Test     public void testWithSumDefaultMsg() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(DescendantTokenCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(DescendantTokenCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0310858fedf12cbbf1b8450efb45ace2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolderTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void testAstWithoutChildren()", "signatureAfterChange": "      @Test     public void testAstWithoutChildren()", "diff": ["-        SuppressWarningsHolder holder = new SuppressWarningsHolder();", "-        DetailAST methodDef = new DetailAST();", "+        final SuppressWarningsHolder holder = new SuppressWarningsHolder();", "+        final DetailAST methodDef = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05f44e34894fc78d3d7c9c46c24e5dbf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForIteratorPadCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        EmptyForIteratorPadCheck checkObj = new EmptyForIteratorPadCheck();", "-        int[] expected = {TokenTypes.FOR_ITERATOR};", "+        final EmptyForIteratorPadCheck checkObj = new EmptyForIteratorPadCheck();", "+        final int[] expected = {TokenTypes.FOR_ITERATOR};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05f70ff583e48fc103e71730cb82c3eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test(expected = IllegalArgumentException.class)     public void testWrongToken()", "signatureAfterChange": "      @Test(expected = IllegalArgumentException.class)     public void testWrongToken()", "diff": ["-        ClassDataAbstractionCouplingCheck classDataAbstractionCouplingCheckObj =", "+        final ClassDataAbstractionCouplingCheck classDataAbstractionCouplingCheckObj =", "-        DetailAST ast = new DetailAST();", "+        final DetailAST ast = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "066c67512958452b6232158b775729cd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      void verify(Checker aC,             File[] aProcessedFiles,             String aMessageFileName,             String[] aExpected,             Integer... aWarnsExpected)         throws Exception", "signatureAfterChange": "      void verify(Checker aC,             File[] aProcessedFiles,             String aMessageFileName,             String[] aExpected,             Integer... aWarnsExpected)         throws Exception", "diff": ["-                String actual = lnr.readLine();", "+                final String actual = lnr.readLine();", "-                int lineNumber = Integer.parseInt(parseInt);", "+                final int lineNumber = Integer.parseInt(parseInt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "081017fc2be7020abced1a3e8898918a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ReturnCountCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testImproperToken() throws Exception", "signatureAfterChange": "      @Test     public void testImproperToken() throws Exception", "diff": ["-        ReturnCountCheck check = new ReturnCountCheck();", "+        final ReturnCountCheck check = new ReturnCountCheck();", "-        DetailAST classDefAst = new DetailAST();", "+        final DetailAST classDefAst = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0954d03bedf3d399cd4434738ae06a7c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main(String[] aArgs)", "signatureAfterChange": "     public static void main(String[] aArgs)", "diff": ["-        catch (ParseException e) {", "+        catch (final ParseException e) {", "-            catch (FileNotFoundException e) {", "+            catch (final FileNotFoundException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09660ef89940850f6166e9afa34278c5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testImproperToken() throws Exception", "signatureAfterChange": "      @Test     public void testImproperToken() throws Exception", "diff": ["-        FinalLocalVariableCheck check = new FinalLocalVariableCheck();", "+        final FinalLocalVariableCheck check = new FinalLocalVariableCheck();", "-        DetailAST lambdaAst = new DetailAST();", "+        final DetailAST lambdaAst = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0968db64edef8443a74264c4d28cc6c1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        MutableExceptionCheck obj = new MutableExceptionCheck();", "-        int[] expected = {TokenTypes.CLASS_DEF, TokenTypes.VARIABLE_DEF};", "+        final MutableExceptionCheck obj = new MutableExceptionCheck();", "+        final int[] expected = {TokenTypes.CLASS_DEF, TokenTypes.VARIABLE_DEF};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c632c98a6e488f29f1a4707b6aa1ae6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testReturnFromFinally() throws Exception", "signatureAfterChange": "      @Test     public void testReturnFromFinally() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(DescendantTokenCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(DescendantTokenCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d7cfc71cb3cec21395fd8fc4c5b710a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/UpperEllCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        UpperEllCheck checkObj = new UpperEllCheck();", "-        int[] expected = {TokenTypes.NUM_LONG};", "+        final UpperEllCheck checkObj = new UpperEllCheck();", "+        final int[] expected = {TokenTypes.NUM_LONG};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e383b788c74651592edd73457748635", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "4c653936fa5fe49ebda5bf3f4820ad9e0ea6c594", "commitAfterChange": "3215661e63d0022c2790c92fa269a2255cefcc33", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void process(File[] aFiles)", "signatureAfterChange": "     public void process(File[] aFiles)", "diff": ["-        Set dirs = getParentDirs(aFiles);", "-        Set propertyFiles = getPropertyFiles(dirs);", "+        final Set dirs = getParentDirs(aFiles);", "+        final Set propertyFiles = getPropertyFiles(dirs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f5d7a0c3efee4f2a61ae5a785294507", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public ParseTreeInfoPanel()", "signatureAfterChange": "     public ParseTreeInfoPanel()", "diff": ["-        DetailAST treeRoot = null;", "+        final DetailAST treeRoot = null;", "-        catch (TooManyListenersException ex)", "+        catch (final TooManyListenersException ex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f8d90fb9f079d0021a0ae629c9ad236", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule526parameternames/ParameterNameTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void parameterNameTest() throws Exception", "signatureAfterChange": "      @Test     public void parameterNameTest() throws Exception", "diff": ["-        String filePath = builder.getFilePath(\"ParameterNameInput_Simple\");", "+        final String filePath = builder.getFilePath(\"ParameterNameInput_Simple\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fd2fce19b2b0396feb741d77ac846d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testSetHeaderNull()", "signatureAfterChange": "     @Test     public void testSetHeaderNull()", "diff": ["-        RegexpHeaderCheck instance = new RegexpHeaderCheck();", "+        final RegexpHeaderCheck instance = new RegexpHeaderCheck();", "-        String header = null;", "+        final String header = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "105b2aa9c1b42732a9837c8e91b2b29d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/HideUtilityClassConstructorCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        HideUtilityClassConstructorCheck checkObj =", "+        final HideUtilityClassConstructorCheck checkObj =", "-        int[] expected = {TokenTypes.CLASS_DEF};", "+        final int[] expected = {TokenTypes.CLASS_DEF};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "149524b67200c4ccd069445bd477793a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalThrowsCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIllegalClassNames() throws Exception", "signatureAfterChange": "      @Test     public void testIllegalClassNames() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(IllegalThrowsCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(IllegalThrowsCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14e1b69d5cc20aa354e5850434be9cac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/InnerAssignmentCheck.java", "commitBeforeChange": "40496d0f8c01bf1f9718e6925b76f13db5b2ae3d", "commitAfterChange": "675c037c85af8347d5b95b0b45f166b8599a9b27", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private boolean isAssignment(DetailAST aAST)", "signatureAfterChange": "     private boolean isAssignment(DetailAST aAST)", "diff": ["-        int[] tokens = getDefaultTokens();", "+        final int[] tokens = getDefaultTokens();", "-        int astType = aAST.getType();", "+        final int astType = aAST.getType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "156b5faeb573b15e545a34d37efb4754", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(ThrowsCountCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(ThrowsCountCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16de8b2d58a346cfba3f5cec520e5501", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ArrayTrailingCommaCheck.java", "commitBeforeChange": "55512ae033f68926c415ae8a6ff3a9b74849a646", "commitAfterChange": "aa8763be0ea52d830e27a3a4e218e7a36d1c0649", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aArrayInit)", "signatureAfterChange": "     public void visitToken(DetailAST aArrayInit)", "diff": ["-        DetailAST rcurly = aArrayInit.findFirstToken(TokenTypes.RCURLY);", "+        final DetailAST rcurly = aArrayInit.findFirstToken(TokenTypes.RCURLY);", "-        if (aArrayInit.getLineNo() == rcurly.getLineNo()", "-            || aArrayInit.getChildCount() == 1)", "+        if ((aArrayInit.getLineNo() == rcurly.getLineNo())", "+            || (aArrayInit.getChildCount() == 1))", "-        DetailAST prev = rcurly.getPreviousSibling();", "+        final DetailAST prev = rcurly.getPreviousSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18449f7fcb72ce7e2c3797395cebb4c5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void test() throws Exception", "signatureAfterChange": "      @Test     public void test() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(ClassFanOutComplexityCheck.class);", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(ClassFanOutComplexityCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19aeca170df95e1e9e7ef57b532cc603", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Check.java", "commitBeforeChange": "3215661e63d0022c2790c92fa269a2255cefcc33", "commitAfterChange": "4a93f55b6c739895d3ff83ccd25c927ed8589db4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int[] getAcceptableTokens()", "signatureAfterChange": "     public int[] getAcceptableTokens()", "diff": ["-        int[] defaultTokens = getDefaultTokens();", "-        int[] copy = new int[defaultTokens.length];", "+        final int[] defaultTokens = getDefaultTokens();", "+        final int[] copy = new int[defaultTokens.length];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a4605637e43f5006d47b7844ec4a180", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        ThrowsCountCheck obj = new ThrowsCountCheck();", "-        int[] expected = {TokenTypes.LITERAL_THROWS};", "+        final ThrowsCountCheck obj = new ThrowsCountCheck();", "+        final int[] expected = {TokenTypes.LITERAL_THROWS};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b7abb27ee7310bab5840a2024e58d26", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule713atclauses/JavadocTagContinuationIndentationTest.java", "commitBeforeChange": "ff4536885663fc66e9cea73b76fa30e36b5d92d7", "commitAfterChange": "111cbbaf2adda7ff25b1cafee99468d2adb6c6c8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testWithDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testWithDefaultConfiguration() throws Exception", "diff": ["-        ConfigurationBuilder builder = new ConfigurationBuilder(new File(\"src/it/\"));", "-        String msg = getCheckMessage(JavadocTagContinuationIndentationCheck.class,", "+        final ConfigurationBuilder builder = new ConfigurationBuilder(new File(\"src/it/\"));", "+        final String msg = getCheckMessage(JavadocTagContinuationIndentationCheck.class,", "-        ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b904ff26c27128088f34d7b8aff9cf3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/AnonInnerLengthCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        AnonInnerLengthCheck checkObj = new AnonInnerLengthCheck();", "-        int[] expected = {TokenTypes.LITERAL_NEW};", "+        final AnonInnerLengthCheck checkObj = new AnonInnerLengthCheck();", "+        final int[] expected = {TokenTypes.LITERAL_NEW};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1badbe90529439e7e7d5ea36b01bf6a5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/InnerTypeLastCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        InnerTypeLastCheck obj = new InnerTypeLastCheck();", "-        int[] expected = {TokenTypes.CLASS_DEF, TokenTypes.INTERFACE_DEF};", "+        final InnerTypeLastCheck obj = new InnerTypeLastCheck();", "+        final int[] expected = {TokenTypes.CLASS_DEF, TokenTypes.INTERFACE_DEF};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e8d51ebc35c29998c2e48e5d539bd3f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule527localvariablenames/LocalVariableNameTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void localVariableNameTest() throws Exception", "signatureAfterChange": "      @Test     public void localVariableNameTest() throws Exception", "diff": ["-        String filePath = builder.getFilePath(\"LocalVariableNameInput_Simple\");", "+        final String filePath = builder.getFilePath(\"LocalVariableNameInput_Simple\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "204ea5cd5ae2aabc15bd0f159839fd92", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Utils.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static String[] getLines(String aFileName, String aCharsetName)         throws IOException", "signatureAfterChange": "     public static String[] getLines(String aFileName, String aCharsetName)         throws IOException", "diff": ["-        catch (UnsupportedEncodingException ex) {", "+        catch (final UnsupportedEncodingException ex) {", "-            catch (IOException e) {", "+            catch (final IOException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21f984f51712386fda5b13566f3a0bf1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void test() throws Exception", "signatureAfterChange": "      @Test     public void test() throws Exception", "diff": ["-        DefaultConfiguration checkConfig =", "+        final DefaultConfiguration checkConfig =", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "225af4f6f8c4f24c379bc7697074f650", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void checkSingleLine(int aLineNum, IndentLevel aIndentLevel)", "signatureAfterChange": "     private void checkSingleLine(int aLineNum, IndentLevel aIndentLevel)", "diff": ["-        String line = mIndentCheck.getLines()[aLineNum - 1];", "-        int start = getLineStart(line);", "+        final String line = mIndentCheck.getLines()[aLineNum - 1];", "+        final int start = getLineStart(line);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22ab4d95f1e2786c466f423b46605f1d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private Object doMakeObject(String aName)         throws CheckstyleException", "signatureAfterChange": "     private Object doMakeObject(String aName)         throws CheckstyleException", "diff": ["-        catch (CheckstyleException ex) {", "+        catch (final CheckstyleException ex) {", "-            catch (CheckstyleException ex) {", "+            catch (final CheckstyleException ex) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2401af1aec22c6ac2fb5e8d673072013", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void fillSortedRelevantChecksums()", "signatureAfterChange": "     private void fillSortedRelevantChecksums()", "diff": ["-                long checksum = checksums[j];", "+                final long checksum = checksums[j];", "-            long[] result = new long[count];", "+            final long[] result = new long[count];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "253214f0cbd3dba01e26d20259fd67f9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalThrowsCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Test     public void testIgnoreMethodNames() throws Exception", "signatureAfterChange": "     @Test     public void testIgnoreMethodNames() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(IllegalThrowsCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(IllegalThrowsCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25a264313fadb04d7de420a8d058c469", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "65989e76a40bf085059ee2bf9c695c6b45a771fb", "commitAfterChange": "fca8c918043974fcf6cc59e5d4161ada0b7c4c76", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     void setLines(String[] aLines)", "signatureAfterChange": "     void setLines(String[] aLines)", "diff": ["-        // Iterate over the lines looking for long lines and tabs.", "+        // Iterate over the lines looking for:", "+        //    - long lines", "+        //    - tabs", "-            String line = mLines[i];", "-            int realLength = Utils.lengthExpandedTabs(", "+            final String line = mLines[i];", "+            final int realLength = Utils.lengthExpandedTabs(", "-            if ((realLength > mConfig.getMaxLineLength()) &&", "-                !(mConfig.getIgnoreLineLengthRegexp().match(line)) &&", "-                !(mConfig.isIgnoreImportLength() &&", "-                  line.trim().startsWith(\"import\")))", "+            if ((realLength > mConfig.getMaxLineLength())", "+                && !(mConfig.getIgnoreLineLengthRegexp().match(line))", "+                && !(mConfig.isIgnoreImportLength()", "+                     && line.trim().startsWith(\"import\")))", "+            // Check for tabs"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2666b45b5df3b2eda03d477a35b13e8f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        AvoidStaticImportCheck checkObj = new AvoidStaticImportCheck();", "-        int[] expected = {TokenTypes.STATIC_IMPORT};", "+        final AvoidStaticImportCheck checkObj = new AvoidStaticImportCheck();", "+        final int[] expected = {TokenTypes.STATIC_IMPORT};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26e84b772154c66c2e7ff93a0a5e2f1a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testProcessWithParserThrowable() throws Exception", "signatureAfterChange": "      @Test     public void testProcessWithParserThrowable() throws Exception", "diff": ["-        PackageObjectFactory factory = new PackageObjectFactory(", "+        final PackageObjectFactory factory = new PackageObjectFactory(", "-        List<String> lines = new ArrayList<>();", "+        final List<String> lines = new ArrayList<>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2931a3de89973391d9c0b9f6f69f6b7c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SingleLineJavadocCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testAcceptableTokens()", "signatureAfterChange": "      @Test     public void testAcceptableTokens()", "diff": ["-        SingleLineJavadocCheck checkObj = new SingleLineJavadocCheck();", "-        int[] expected = {TokenTypes.BLOCK_COMMENT_BEGIN };", "+        final SingleLineJavadocCheck checkObj = new SingleLineJavadocCheck();", "+        final int[] expected = {TokenTypes.BLOCK_COMMENT_BEGIN };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2af82f679fff7c0193080516c9af04ce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        CustomImportOrderCheck checkObj = new CustomImportOrderCheck();", "-        int[] expected = {", "+        final CustomImportOrderCheck checkObj = new CustomImportOrderCheck();", "+        final int[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b6a1a68ae445d852551e583ff477103", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeParameterNameTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testGetClassRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetClassRequiredTokens()", "diff": ["-        ClassTypeParameterNameCheck checkObj =", "+        final ClassTypeParameterNameCheck checkObj =", "-        int[] expected = {TokenTypes.TYPE_PARAMETER};", "+        final int[] expected = {TokenTypes.TYPE_PARAMETER};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bad3941c7aff02ba9252b97267ef51d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "      @Test     public void testValuePairAnnotation() throws Exception", "signatureAfterChange": "      @Test     public void testValuePairAnnotation() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(SuppressWarningsCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(SuppressWarningsCheck.class);", "-        String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;", "+        final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c009c799d800bb1f40a5f577f7fb4ef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "6e96026ec6d95fc5eadd3044cab91c24c73c8e0c", "commitAfterChange": "e00c478dd61d9d883e41b500b780ab217582c2e7", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void fireErrors(String aFileName, TreeSet<LocalizedMessage> aErrors)", "signatureAfterChange": "     public void fireErrors(String aFileName, TreeSet<LocalizedMessage> aErrors)", "diff": ["-        for (LocalizedMessage element : aErrors) {", "+        for (final LocalizedMessage element : aErrors) {", "-                for (AuditListener listener : mListeners) {", "+                for (final AuditListener listener : mListeners) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c8963d9f2f586fa806a7a13def736e5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/ScopeTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testMixedCaseSpacesWithDifferentLocales()", "signatureAfterChange": "      @Test     public void testMixedCaseSpacesWithDifferentLocales()", "diff": ["-        Locale[] differentLocales = {new Locale(\"TR\", \"tr\") };", "-        Locale defaultLocale = Locale.getDefault();", "+        final Locale[] differentLocales = {new Locale(\"TR\", \"tr\") };", "+        final Locale defaultLocale = Locale.getDefault();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cf2655fb3a2bfc9bc0fcc0ea2854c5e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/doclets/TokenTypesDocletTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private static Method getMethodGetRootDocImplByReflection() throws ClassNotFoundException", "signatureAfterChange": "      private static Method getMethodGetRootDocImplByReflection() throws ClassNotFoundException", "diff": ["-        Class<?> javadocToolClass = Class.forName(\"com.sun.tools.javadoc.JavadocTool\");", "-        Method[] methods = javadocToolClass.getMethods();", "+        final Class<?> javadocToolClass = Class.forName(\"com.sun.tools.javadoc.JavadocTool\");", "+        final Method[] methods = javadocToolClass.getMethods();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2de7f58dfba27d609c4d92affe94c612", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test(expected = IllegalStateException.class)     public void testLeaveTokenWithWrongTokenType()", "signatureAfterChange": "      @Test(expected = IllegalStateException.class)     public void testLeaveTokenWithWrongTokenType()", "diff": ["-        ExecutableStatementCountCheck checkObj =", "+        final ExecutableStatementCountCheck checkObj =", "-        DetailAST ast = new DetailAST();", "+        final DetailAST ast = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f001564a7707a8701807f0f68446e92", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        DefaultConfiguration checkConfig =", "+        final DefaultConfiguration checkConfig =", "-        String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;", "+        final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f0b7c0f131cc44e62e03efdb53694b7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected final void checkExpressionSubtree(         DetailAST aTree,         IndentLevel aLevel,         boolean aFirstLineMatches,         boolean aAllowNesting     )", "signatureAfterChange": "     protected final void checkExpressionSubtree(         DetailAST aTree,         IndentLevel aLevel,         boolean aFirstLineMatches,         boolean aAllowNesting     )", "diff": ["-        LineSet subtreeLines = new LineSet();", "-        int firstLine = getFirstLine(Integer.MAX_VALUE, aTree);", "+        final LineSet subtreeLines = new LineSet();", "+        final int firstLine = getFirstLine(Integer.MAX_VALUE, aTree);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f7501793ab335d30cb3e0027608da6d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "d86a9de35b58eeed409ed9fc3cbef252fda4cb84", "commitAfterChange": "5d7063c660b241bce251f1a8c89394619f2791fb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     PropertyCacheFile(Configuration aCurrentConfig, String aFileName)", "signatureAfterChange": "     PropertyCacheFile(Configuration aCurrentConfig, String aFileName)", "diff": ["-                String cachedConfigHash = mDetails.getProperty(CONFIG_HASH_KEY);", "-                String currentConfigHash = getConfigHashCode(aCurrentConfig);", "+                final String cachedConfigHash =", "+                    mDetails.getProperty(CONFIG_HASH_KEY);", "+                final String currentConfigHash =", "+                    getConfigHashCode(aCurrentConfig);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "317e996bef3a3f90c81ad94fc7271e02", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      private static Integer[] getLinesWithWarnAndCheckComments(String aFileName,             final int tabWidth)                     throws IOException", "signatureAfterChange": "      private static Integer[] getLinesWithWarnAndCheckComments(String aFileName,             final int tabWidth)                     throws IOException", "diff": ["-        List<Integer> result = new ArrayList<>();", "+        final List<Integer> result = new ArrayList<>();", "-                Matcher match = LINE_WITH_COMMENT_REGEX.matcher(line);", "+                final Matcher match = LINE_WITH_COMMENT_REGEX.matcher(line);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34909cf7e56fc8192d4e12622d755dfa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "d7ec6a95ac09e00b8d72b7db4f664a6ffa7e9562", "commitAfterChange": "2f70947ed74ab968324fdcf83f808ff1d88df1fb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        String varName = varNameAST.getText();", "-        boolean inInterfaceBlock = inInterfaceBlock(aAST);", "+        final String varName = varNameAST.getText();", "+        final boolean inInterfaceBlock = inInterfaceBlock(aAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34a445e5189ac1c4c67181fd179d98a3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Test(expected = IllegalArgumentException.class)     public void testWrongTokenType()", "signatureAfterChange": "      @Test(expected = IllegalArgumentException.class)     public void testWrongTokenType()", "diff": ["-        VisibilityModifierCheck obj = new VisibilityModifierCheck();", "-        DetailAST ast = new DetailAST();", "+        final VisibilityModifierCheck obj = new VisibilityModifierCheck();", "+        final DetailAST ast = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36e9e6f76b9957313d54b7429749541a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        OuterTypeFilenameCheck checkObj = new OuterTypeFilenameCheck();", "-        int[] expected = {", "+        final OuterTypeFilenameCheck checkObj = new OuterTypeFilenameCheck();", "+        final int[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "397e3a1e837cb8fb74aed289b7a4be4c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/RedundantImportCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        RedundantImportCheck checkObj = new RedundantImportCheck();", "-        int[] expected = {", "+        final RedundantImportCheck checkObj = new RedundantImportCheck();", "+        final int[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b32535da8e08ccdfa9d77ff8eb68605", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        AtclauseOrderCheck checkObj = new AtclauseOrderCheck();", "-        int[] expected = {TokenTypes.BLOCK_COMMENT_BEGIN};", "+        final AtclauseOrderCheck checkObj = new AtclauseOrderCheck();", "+        final int[] expected = {TokenTypes.BLOCK_COMMENT_BEGIN};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b9ce88ffda0bec13bfd351c285ce16e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/InterfaceIsTypeCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        InterfaceIsTypeCheck obj = new InterfaceIsTypeCheck();", "-        int[] expected = {TokenTypes.INTERFACE_DEF};", "+        final InterfaceIsTypeCheck obj = new InterfaceIsTypeCheck();", "+        final int[] expected = {TokenTypes.INTERFACE_DEF};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d541e1fa0af2048a1c87478c484c9d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testSetupChildListener() throws Exception", "signatureAfterChange": "      @Test     public void testSetupChildListener() throws Exception", "diff": ["-        PackageObjectFactory factory = new PackageObjectFactory(", "+        final PackageObjectFactory factory = new PackageObjectFactory(", "-        Configuration config = new DefaultConfiguration(DebugAuditAdapter.class.getCanonicalName());", "+        final Configuration config = new DefaultConfiguration(", "+            DebugAuditAdapter.class.getCanonicalName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d5b97747bc8ec88532af1dc920887bb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "d7ec6a95ac09e00b8d72b7db4f664a6ffa7e9562", "commitAfterChange": "2f70947ed74ab968324fdcf83f808ff1d88df1fb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        int line = aAST.getLineNo();", "-        int col = aAST.getColumnNo();", "+        final int line = aAST.getLineNo();", "+        final int col = aAST.getColumnNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e5a7dce9437c5dbb9d06a6acb21c4a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "15c641997da72c75b97abad5d0c40375f82851ea", "commitAfterChange": "ce177456e7042b22b1842cb0309b6b285dc900d4", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private int[] getBranchTokenTypes()", "signatureAfterChange": "     private int[] getBranchTokenTypes()", "diff": ["-            // TODO improve algorithm to avoid most array creation", "+            // TODO: improve algorithm to avoid most array creation", "-                int[] childTypes = child.getBranchTokenTypes();", "-                int[] savedBag = bag;", "+                final int[] childTypes = child.getBranchTokenTypes();", "+                final int[] savedBag = bag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ee2bf67a1d677c3d19f1dd851d72f9e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/NonEmptyAtclauseDescriptionCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        NonEmptyAtclauseDescriptionCheck checkObj =", "+        final NonEmptyAtclauseDescriptionCheck checkObj =", "-        int[] expected = {TokenTypes.BLOCK_COMMENT_BEGIN};", "+        final int[] expected = {TokenTypes.BLOCK_COMMENT_BEGIN};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f847c266bcd42f5d0ec563230d54b15", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "d7ec6a95ac09e00b8d72b7db4f664a6ffa7e9562", "commitAfterChange": "2f70947ed74ab968324fdcf83f808ff1d88df1fb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "     public void finishTree(DetailAST aRootAST)", "diff": ["-                int col = firstFinding.getCol();", "-                Object[] args = new Object[]{key, new Integer(hits.size())};", "+                final int col = firstFinding.getCol();", "+                final Object[] args =", "+                    new Object[]{key, new Integer(hits.size())};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fd21b8eb8377d86598381001d425518", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(JavaNCSSCheck.class);", "-        String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;", "+        final DefaultConfiguration checkConfig = createCheckConfig(JavaNCSSCheck.class);", "+        final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "415214b934939153442925bbf45b62df", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheck.java", "commitBeforeChange": "d7ec6a95ac09e00b8d72b7db4f664a6ffa7e9562", "commitAfterChange": "2f70947ed74ab968324fdcf83f808ff1d88df1fb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "         public long[] convertLines(String[] aOriginalLines)", "signatureAfterChange": "         public long[] convertLines(String[] aOriginalLines)", "diff": ["-            long[] checkSums = new long[aOriginalLines.length];", "+            final long[] checkSums = new long[aOriginalLines.length];", "-                String line = aOriginalLines[i].trim();", "+                final String line = aOriginalLines[i].trim();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "418a0ffb5e96ab4093955f6b119a1f1d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "         public boolean isCellEditable(EventObject e)", "signatureAfterChange": "         public boolean isCellEditable(EventObject e)", "diff": ["-                        MouseEvent me = (MouseEvent) e;", "-                        MouseEvent newME = new MouseEvent(tree, me.getID(),", "+                        final MouseEvent me = (MouseEvent) e;", "+                        final MouseEvent newME = new MouseEvent(tree, me.getID(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "428dd5d10d219133a555f7635eb04b0b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private Set loadKeys(File aFile)", "signatureAfterChange": "     private Set loadKeys(File aFile)", "diff": ["-        catch (IOException e) {", "+        catch (final IOException e) {", "-            catch (IOException e) {", "+            catch (final IOException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42ce962fde78b6b98da126a288b7a416", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private boolean isExpressionCountable(DetailAST aAST)", "signatureAfterChange": "     private boolean isExpressionCountable(DetailAST aAST)", "diff": ["-        int parentType = aAST.getParent().getType();", "+        final int parentType = aAST.getParent().getType();", "-            DetailAST prevSibling = aAST.getPreviousSibling();", "+            final DetailAST prevSibling = aAST.getPreviousSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42e086362c8739dddb35ae9151081de0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForInitializerPadCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        EmptyForInitializerPadCheck checkObj = new EmptyForInitializerPadCheck();", "-        int[] expected = {TokenTypes.FOR_INIT};", "+        final EmptyForInitializerPadCheck checkObj = new EmptyForInitializerPadCheck();", "+        final int[] expected = {TokenTypes.FOR_INIT};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4425cbf98d0fbcc3cd9be0a246d386e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/GuardTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testAccessResultValues()", "signatureAfterChange": "     @Test     public void testAccessResultValues()", "diff": ["-        AccessResult[] actual = AccessResult.values();", "-        AccessResult[] expected = {", "+        final AccessResult[] actual = AccessResult.values();", "+        final AccessResult[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4438b055ee0158113a24a2ad0ca45d9c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/ClassResolverTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testResolveInnerClass() throws Exception", "signatureAfterChange": "      @Test     public void testResolveInnerClass() throws Exception", "diff": ["-        ClassResolver classResolver = new ClassResolver(", "+        final ClassResolver classResolver = new ClassResolver(", "-        Class<?> entry = classResolver.resolve(\"Entry\", \"Map\");", "+        final Class<?> entry = classResolver.resolve(\"Entry\", \"Map\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4628a5730b8c9a4b77a591cf0e9b4b85", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ParameterAssignmentCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testImproperToken() throws Exception", "signatureAfterChange": "      @Test     public void testImproperToken() throws Exception", "diff": ["-        ParameterAssignmentCheck check = new ParameterAssignmentCheck();", "+        final ParameterAssignmentCheck check = new ParameterAssignmentCheck();", "-        DetailAST classDefAst = new DetailAST();", "+        final DetailAST classDefAst = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "472a2f99265f44aade8af568281baac1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "d7ec6a95ac09e00b8d72b7db4f664a6ffa7e9562", "commitAfterChange": "2f70947ed74ab968324fdcf83f808ff1d88df1fb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        DetailAST constantDefAST = findContainingConstantDef(aAST);", "+        final DetailAST constantDefAST = findContainingConstantDef(aAST);", "-                int type = ast.getType();", "+                final int type = ast.getType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47fedcc147ae7834208d52522538bdc4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheck.java", "commitBeforeChange": "d7ec6a95ac09e00b8d72b7db4f664a6ffa7e9562", "commitAfterChange": "2f70947ed74ab968324fdcf83f808ff1d88df1fb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void fillSortedRelevantChecksums()", "signatureAfterChange": "     private void fillSortedRelevantChecksums()", "diff": ["-            long[] checksums = mLineChecksums[i];", "-            long[] relevant = new long[checksums.length];", "+            final long[] checksums = mLineChecksums[i];", "+            final long[] relevant = new long[checksums.length];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "485709ab2b19ab2c9785dd4b22f3d154", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected final void logError(DetailAST aAst, String aSubtypeName,                                   int aActualLevel, IndentLevel aExpectedLevel)", "signatureAfterChange": "     protected final void logError(DetailAST aAst, String aSubtypeName,                                   int aActualLevel, IndentLevel aExpectedLevel)", "diff": ["-        String typeStr =", "+        final String typeStr =", "-        Object[] args = new Object[] {", "+        final Object[] args = new Object[] {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49e68009fa5ccee8274699a622d17dd4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public static DetailAST parse(FileContents aContents)         throws RecognitionException, TokenStreamException", "signatureAfterChange": "     public static DetailAST parse(FileContents aContents)         throws RecognitionException, TokenStreamException", "diff": ["-        catch (RecognitionException exception) {", "+        catch (final RecognitionException exception) {", "-            catch (RecognitionException exception2) {", "+            catch (final RecognitionException exception2) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a82f8fdc090fccb03b8293357558429", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/IfHandler.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void checkCondExpr()", "signatureAfterChange": "     private void checkCondExpr()", "diff": ["-        DetailAST condAst = (DetailAST)", "+        final DetailAST condAst = (DetailAST)", "-        IndentLevel expected = new IndentLevel(getLevel(), getBasicOffset());", "-", "+        final IndentLevel expected =", "+            new IndentLevel(getLevel(), getBasicOffset());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4afdc3512974573b6c3dbd452c8146c0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocNodeImplTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testToString()", "signatureAfterChange": "      @Test     public void testToString()", "diff": ["-        JavadocNodeImpl javadocNode = new JavadocNodeImpl();", "+        final JavadocNodeImpl javadocNode = new JavadocNodeImpl();", "-        String result = javadocNode.toString();", "+        final String result = javadocNode.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d47879bd083a7c43364b0b736be5c69", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            String name = ident.getText();", "-            int groupIdx = getGroupNumber(name);", "+            final String name = ident.getText();", "+            final int groupIdx = getGroupNumber(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e03ba522763e5819a06597bf4646e60", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void test() throws Exception", "signatureAfterChange": "      @Test     public void test() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(JavaNCSSCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(JavaNCSSCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e252348ccae98cfbf43d2ddb8bf2ecc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AllChecksTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testRequiredTokensAreSubsetOfAcceptableTokens() throws Exception", "signatureAfterChange": "      @Test     public void testRequiredTokensAreSubsetOfAcceptableTokens() throws Exception", "diff": ["-        Set<Class<?>> checkstyleChecks = getCheckstyleChecks();", "+        final Set<Class<?>> checkstyleChecks = getCheckstyleChecks();", "-                    String errorMessage = String.format(Locale.ROOT,", "+                    final String errorMessage = String.format(Locale.ROOT,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "507b68639302e570bf01ad03c9e41d41", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIllegalClassNames() throws Exception", "signatureAfterChange": "      @Test     public void testIllegalClassNames() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(IllegalCatchCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(IllegalCatchCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51809f7c38424f5b41cb994e18bf2ecd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/FileSetCheckLifecycleTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testProcessCallsFinishBeforeCallingDestroy() throws Exception", "signatureAfterChange": "      @Test     public void testProcessCallsFinishBeforeCallingDestroy() throws Exception", "diff": ["-        DefaultConfiguration dc = new DefaultConfiguration(\"configuration\");", "-        DefaultConfiguration twConf = createCheckConfig(TreeWalker.class);", "+        final DefaultConfiguration dc = new DefaultConfiguration(\"configuration\");", "+        final DefaultConfiguration twConf = createCheckConfig(TreeWalker.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52d8ea9f823cb0ecf5f337c046fe0b3b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        ImportControlCheck checkObj = new ImportControlCheck();", "-        int[] expected = {", "+        final ImportControlCheck checkObj = new ImportControlCheck();", "+        final int[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55f8e4e4d7397f449782d86935ce0455", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "d86a9de35b58eeed409ed9fc3cbef252fda4cb84", "commitAfterChange": "5d7063c660b241bce251f1a8c89394619f2791fb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public String encode(String aValue)", "signatureAfterChange": "     public String encode(String aValue)", "diff": ["-            char c = aValue.charAt(i);", "+            final char c = aValue.charAt(i);", "-                int nextSemi = aValue.indexOf(\";\", i);", "+                final int nextSemi = aValue.indexOf(\";\", i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "561fbfd14a10215e3f767b332d46e744", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolderTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testOnComplexAnnotations() throws Exception", "signatureAfterChange": "      @Test     public void testOnComplexAnnotations() throws Exception", "diff": ["-        Configuration checkConfig = createCheckConfig(SuppressWarningsHolder.class);", "+        final Configuration checkConfig = createCheckConfig(SuppressWarningsHolder.class);", "-        String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;", "+        final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5748bf6d65ebb91c4d376c8b59da4be3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/CrossLanguageRegexpHeaderCheck.java", "commitBeforeChange": "dce9ad9e885de3ebb17cce482a512bdaf64f36ae", "commitAfterChange": "6abdc24080fe87995f39bd54bed99976dace4652", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void process(List<File> aFiles)", "signatureAfterChange": "     public void process(List<File> aFiles)", "diff": ["-        List<File> files = filter(aFiles);", "+        final List<File> files = filter(aFiles);", "-                String[] lines = Utils.getLines(path);", "+                final String[] lines = Utils.getLines(path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5934d5e0d7ecd05dbc7f5d6b37753b68", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/PackageNameCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        PackageNameCheck checkObj = new PackageNameCheck();", "-        int[] expected = {TokenTypes.PACKAGE_DEF};", "+        final PackageNameCheck checkObj = new PackageNameCheck();", "+        final int[] expected = {TokenTypes.PACKAGE_DEF};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b21dcc235c0d99b1caa16c348ce3f27", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        int tokenType = aAST.getType();", "+        final int tokenType = aAST.getType();", "-            int size = mCounters.size();", "+            final int size = mCounters.size();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ba43eeac50925c4e8f15d972c73f117", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "         public void endElement(String aNamespaceURI,                                String aLocalName,                                String aQName)             throws SAXException", "signatureAfterChange": "         public void endElement(String aNamespaceURI,                                String aLocalName,                                String aQName)             throws SAXException", "diff": ["-                Configuration recentModule = (Configuration) mConfigStack.pop();", "+                final Configuration recentModule =", "+                    (Configuration) mConfigStack.pop();", "-                catch (CheckstyleException e) {", "+                catch (final CheckstyleException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c0712413565467c32378a6d23aea394", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void compareKeySets(Set aKeys, Map aFileMap)", "signatureAfterChange": "     private void compareKeySets(Set aKeys, Map aFileMap)", "diff": ["-        for (Iterator iter = fls.iterator(); iter.hasNext();) {", "+        for (final Iterator iter = fls.iterator(); iter.hasNext();) {", "-                for (Iterator it = keysClone.iterator(); it.hasNext();) {", "+                for (final Iterator it = keysClone.iterator(); it.hasNext();) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "615d41ad3fd3a13ebe55c1fe759beff6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalThrowsCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     @Test     public void testIgnoreOverriddenMethods() throws Exception", "signatureAfterChange": "     @Test     public void testIgnoreOverriddenMethods() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(IllegalThrowsCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(IllegalThrowsCheck.class);", "-        String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;", "+        final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61ca2c648cf46d3921d059d5c4febf9a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/StaticVariableNameCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        StaticVariableNameCheck checkObj = new StaticVariableNameCheck();", "-        int[] expected = {TokenTypes.VARIABLE_DEF};", "+        final StaticVariableNameCheck checkObj = new StaticVariableNameCheck();", "+        final int[] expected = {TokenTypes.VARIABLE_DEF};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61e876c86987dfbe2c5ef4477905d808", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private static boolean isUrlReachable(String url)", "signatureAfterChange": "      private static boolean isUrlReachable(String url)", "diff": ["-            URL verifiableUrl = new URL(url);", "-            HttpURLConnection urlConnect = (HttpURLConnection) verifiableUrl.openConnection();", "+            final URL verifiableUrl = new URL(url);", "+            final HttpURLConnection urlConnect = (HttpURLConnection) verifiableUrl.openConnection();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62c7d2b46070c65cfecc441514cc571d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/WhileHandler.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private void checkCondExpr()", "signatureAfterChange": "     private void checkCondExpr()", "diff": ["-        DetailAST condAst = getMainAst().findFirstToken(TokenTypes.EXPR);", "-        IndentLevel expected = new IndentLevel(getLevel(), getBasicOffset());", "-", "+        final DetailAST condAst = getMainAst().findFirstToken(TokenTypes.EXPR);", "+        final IndentLevel expected =", "+            new IndentLevel(getLevel(), getBasicOffset());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63e86ca88c5bd2458ab353b5cec5098c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        DefaultConfiguration checkConfig =", "+        final DefaultConfiguration checkConfig =", "-        String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;", "+        final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "662da426e1ed587eecc8965d3dea8e83", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     private static DetailAST mockAST(final int tokenType, final String tokenText,             final String tokenFileName, final int tokenRow, final int tokenColumn)", "signatureAfterChange": "     private static DetailAST mockAST(final int tokenType, final String tokenText,             final String tokenFileName, final int tokenRow, final int tokenColumn)", "diff": ["-        CommonHiddenStreamToken tokenImportSemi = new CommonHiddenStreamToken();", "+        final CommonHiddenStreamToken tokenImportSemi = new CommonHiddenStreamToken();", "-        DetailAST astSemi = new DetailAST();", "+        final DetailAST astSemi = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6639d72a96f25241337dbed4e498d135", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        AvoidEscapedUnicodeCharactersCheck checkObj =", "+        final AvoidEscapedUnicodeCharactersCheck checkObj =", "-        int[] expected = {", "+        final int[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "663e17e85d4f33a10a7b10bbb7ae1702", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public Integer[] getLinesWithWarn(String aFileName) throws IOException", "signatureAfterChange": "      public Integer[] getLinesWithWarn(String aFileName) throws IOException", "diff": ["-        List<Integer> result = new ArrayList<>();", "+        final List<Integer> result = new ArrayList<>();", "-                String line = br.readLine();", "+                final String line = br.readLine();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6815cbfe91fef50a9e672abba2165f36", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtilsTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testInEnumBlockInAnnotation() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testInEnumBlockInAnnotation() throws ReflectiveOperationException", "diff": ["-        DetailAST ast = new DetailAST();", "+        final DetailAST ast = new DetailAST();", "-        DetailAST ast2 = new DetailAST();", "+        final DetailAST ast2 = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "691d7a09885b0ebcafb7685f3ceba6dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        JavadocTypeCheck javadocTypeCheck = new JavadocTypeCheck();", "-        int[] expected = {", "+        final JavadocTypeCheck javadocTypeCheck = new JavadocTypeCheck();", "+        final int[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a31aee2e7d176154de19ec19d5dfa8f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/ConstantNameCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        ConstantNameCheck checkObj = new ConstantNameCheck();", "-        int[] expected = {TokenTypes.VARIABLE_DEF};", "+        final ConstantNameCheck checkObj = new ConstantNameCheck();", "+        final int[] expected = {TokenTypes.VARIABLE_DEF};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bbe535dd17116f5bfe5ed91b3d05cb2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test(expected = IllegalStateException.class)     public void testVisitTokenWithWrongTokenType()", "signatureAfterChange": "      @Test(expected = IllegalStateException.class)     public void testVisitTokenWithWrongTokenType()", "diff": ["-        ExecutableStatementCountCheck checkObj =", "+        final ExecutableStatementCountCheck checkObj =", "-        DetailAST ast = new DetailAST();", "+        final DetailAST ast = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cfb979267a469fe74043fa09818041d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testImproperToken() throws Exception", "signatureAfterChange": "      @Test     public void testImproperToken() throws Exception", "diff": ["-        ModifiedControlVariableCheck check = new ModifiedControlVariableCheck();", "+        final ModifiedControlVariableCheck check = new ModifiedControlVariableCheck();", "-        DetailAST classDefAst = new DetailAST();", "+        final DetailAST classDefAst = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d135aae901865ae82adb2d152064928", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "17c08660fa40c844057c33e2de04c67af41393b0", "commitAfterChange": "0989b5c3954e46b156bf5d2344327f650ddafc8d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public boolean hasIntersectionWithComment(int aStartLineNo,             int aStartColNo, int aEndLineNo, int aEndColNo)", "signatureAfterChange": "     public boolean hasIntersectionWithComment(int aStartLineNo,             int aStartColNo, int aEndLineNo, int aEndColNo)", "diff": ["-        for (List<TextBlock> row : values) {", "-            for (TextBlock comment : row) {", "+        for (final List<TextBlock> row : values) {", "+            for (final TextBlock comment : row) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ec7c43e82302c0513ff58ef9510b8fe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/CodeSelector.java", "commitBeforeChange": "782da01103fc7ec8e69a3da7a5ef800dac866a8b", "commitAfterChange": "68959eeefff4d4a5b295cefbec242c643d523c6b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void select()", "signatureAfterChange": "     public void select()", "diff": ["-        int start = lines2position.get(ast.getLineNo()) + ast.getColumnNo();", "-        int end = findLastPosition(ast);", "+        final int start = lines2position.get(ast.getLineNo()) + ast.getColumnNo();", "+        final int end = findLastPosition(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "704a214e6d70b04458bc4251306519b7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/DefaultLoggerTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCtorWithTwoParameters()", "signatureAfterChange": "      @Test     public void testCtorWithTwoParameters()", "diff": ["-        OutputStream infoStream = new ByteArrayOutputStream();", "-        DefaultLogger dl = new DefaultLogger(infoStream, true);", "+        final OutputStream infoStream = new ByteArrayOutputStream();", "+        final DefaultLogger dl = new DefaultLogger(infoStream, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70583fa9213b3f0cc55ef4cb72febfe7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtilsTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testIsOuterMostTypeEnum() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testIsOuterMostTypeEnum() throws ReflectiveOperationException", "diff": ["-        DetailAST ast = new DetailAST();", "+        final DetailAST ast = new DetailAST();", "-        DetailAST ast2 = new DetailAST();", "+        final DetailAST ast2 = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7130d02e80f617cf72beb88a0a1bc151", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        GenericWhitespaceCheck checkObj = new GenericWhitespaceCheck();", "-        int[] expected = {", "+        final GenericWhitespaceCheck checkObj = new GenericWhitespaceCheck();", "+        final int[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "736bb41662e464b705bf6f9d37923542", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/OuterTypeNumberCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        OuterTypeNumberCheck checkObj = new OuterTypeNumberCheck();", "-        int[] expected = {", "+        final OuterTypeNumberCheck checkObj = new OuterTypeNumberCheck();", "+        final int[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "738a65358f2fdfbf2b7f355d105d6ac9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        FinalClassCheck checkObj = new FinalClassCheck();", "-        int[] expected = {TokenTypes.CLASS_DEF, TokenTypes.CTOR_DEF};", "+        final FinalClassCheck checkObj = new FinalClassCheck();", "+        final int[] expected = {TokenTypes.CLASS_DEF, TokenTypes.CTOR_DEF};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74136c6fe0599bbca8d4dfc435323376", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testOnFileWithCommentOnly() throws Exception", "signatureAfterChange": "      @Test     public void testOnFileWithCommentOnly() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(PackageDeclarationCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(PackageDeclarationCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76c3dbe42c9396e90b12529dd1b49bae", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java", "commitBeforeChange": "d86a9de35b58eeed409ed9fc3cbef252fda4cb84", "commitAfterChange": "5d7063c660b241bce251f1a8c89394619f2791fb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public final void configure(Configuration aConfiguration)         throws CheckstyleException", "signatureAfterChange": "     public final void configure(Configuration aConfiguration)         throws CheckstyleException", "diff": ["-                PropertyDescriptor pd =", "-                        PropertyUtils.getPropertyDescriptor(this, key);", "+                final PropertyDescriptor pd =", "+                    PropertyUtils.getPropertyDescriptor(this, key);", "-        Configuration[] childConfigs = aConfiguration.getChildren();", "+        final Configuration[] childConfigs = aConfiguration.getChildren();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77d185dbe48e526b82065c54c06350b1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testSetupChildExceptions() throws Exception", "signatureAfterChange": "      @Test     public void testSetupChildExceptions() throws Exception", "diff": ["-        PackageObjectFactory factory = new PackageObjectFactory(", "+        final PackageObjectFactory factory = new PackageObjectFactory(", "-        Configuration config = new DefaultConfiguration(\"java.lang.String\");", "+        final Configuration config = new DefaultConfiguration(\"java.lang.String\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77dd11d6e565ef4c524f04c5a4fbf3aa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MemberDefHandler.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private void checkIdent()", "signatureAfterChange": "     private void checkIdent()", "diff": ["-        DetailAST ident = getMainAst().findFirstToken(TokenTypes.IDENT);", "-        int columnNo = expandedTabsColumnNo(ident);", "+        final DetailAST ident = getMainAst().findFirstToken(TokenTypes.IDENT);", "+        final int columnNo = expandedTabsColumnNo(ident);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78c7cb71a230eff05527595e4ec83a80", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(IllegalCatchCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(IllegalCatchCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7936754daca011cb61bcd4af028985f0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        MethodCountCheck checkObj = new MethodCountCheck();", "-        int[] expected = {TokenTypes.METHOD_DEF};", "+        final MethodCountCheck checkObj = new MethodCountCheck();", "+        final int[] expected = {TokenTypes.METHOD_DEF};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "796ea87904c8751b01611530f16b4cb1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalThrowsCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(IllegalThrowsCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(IllegalThrowsCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79f9773aa29b1f94df22d317bbee0f74", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/VerifierImpl.java", "commitBeforeChange": "bd7cfcb3e58603a5115829d5677267d71e75a731", "commitAfterChange": "1c35230164ef3745a246bb2d8a3f6fb116916221", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 28, "signatureBeforeChange": "     private boolean inCheckScope(Scope aScope)", "signatureAfterChange": "     private boolean inCheckScope(Scope aScope)", "diff": ["-        Iterator scopeIterator = mInScope.iterator();", "+        final Iterator scopeIterator = mInScope.iterator();", "-            Scope stackScope = (Scope) scopeIterator.next();", "+            final Scope stackScope = (Scope) scopeIterator.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7adfda2309ddbac010eb9f7684ef55ac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testSetHeaderEmpty()", "signatureAfterChange": "     @Test     public void testSetHeaderEmpty()", "diff": ["-        RegexpHeaderCheck instance = new RegexpHeaderCheck();", "+        final RegexpHeaderCheck instance = new RegexpHeaderCheck();", "-        String header = \"\";", "+        final String header = \"\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c8c04cdaf3b5e5d8ccef6aeb591baed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Test     public void testWithSumCustomMsg() throws Exception", "signatureAfterChange": "      @Test     public void testWithSumCustomMsg() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(DescendantTokenCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(DescendantTokenCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cce6b80c41a7a15e71b6182187bf18f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "     public void finishTree(DetailAST aRootAST)", "diff": ["-        Counter counter = (Counter) mCounters.pop();", "+        final Counter counter = (Counter) mCounters.pop();", "-        int count = counter.getCount();", "+        final int count = counter.getCount();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cd52264ffe235b504806975d352de85", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     private void checkThrowsTags(List aTags, List aThrows,         boolean aReportExpectedTags)", "signatureAfterChange": "     private void checkThrowsTags(List aTags, List aThrows,         boolean aReportExpectedTags)", "diff": ["-            Token token = new Token(tag.getArg1(), tag.getLineNo(), tag", "+            final Token token = new Token(tag.getArg1(), tag.getLineNo(), tag", "-            ClassInfo documentedCI = createClassInfo(token,", "+            final ClassInfo documentedCI = createClassInfo(token,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ddc00a9001054d848efa0ec7978543d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        IndentationCheck checkObj = new IndentationCheck();", "+        final IndentationCheck checkObj = new IndentationCheck();", "-        int[] expected = handlerFactory.getHandledTypes();", "+        final int[] expected = handlerFactory.getHandledTypes();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8073128b8a244ef629085666f5dcee82", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule521packagenames/PackageNameTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void goodPackageNameTest() throws Exception", "signatureAfterChange": "      @Test     public void goodPackageNameTest() throws Exception", "diff": ["-        String filePath = builder.getFilePath(\"PackageNameInputGood\");", "+        final String filePath = builder.getFilePath(\"PackageNameInputGood\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82354242190d6203ee9183e566fcce53", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void checkUnusedTypeParamTags(         final Vector aTags,         final List aTypeParamNames)", "signatureAfterChange": "     private void checkUnusedTypeParamTags(         final Vector aTags,         final List aTypeParamNames)", "diff": ["-        Pattern pattern = Utils.getPattern(\"\\\\s*<([^>]+)>.*\");", "+        final Pattern pattern = Utils.getPattern(\"\\\\s*<([^>]+)>.*\");", "-                    Matcher matcher = pattern.matcher(tag.getArg1());", "+                    final Matcher matcher = pattern.matcher(tag.getArg1());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8292b1bcad42e60bb2c86fc72cced4e8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        FinalClassCheck obj = new FinalClassCheck();", "-        int[] expected = {TokenTypes.CLASS_DEF, TokenTypes.CTOR_DEF};", "+        final FinalClassCheck obj = new FinalClassCheck();", "+        final int[] expected = {TokenTypes.CLASS_DEF, TokenTypes.CTOR_DEF};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82e6fabdd028796f5ce5396de4f9e0c7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "         public boolean isMatch(AuditEvent aEvent)", "signatureAfterChange": "         public boolean isMatch(AuditEvent aEvent)", "diff": ["-            Matcher tagMatcher =", "+            final Matcher tagMatcher =", "-                Matcher messageMatcher =", "+                final Matcher messageMatcher ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "835307188c35fbe1d92d7dd29fd085c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testWithCacheWithNoViolation() throws Exception", "signatureAfterChange": "      @Test     public void testWithCacheWithNoViolation() throws Exception", "diff": ["-        PackageObjectFactory factory = new PackageObjectFactory(", "+        final PackageObjectFactory factory = new PackageObjectFactory(", "-        List<String> lines = new ArrayList<>();", "+        final List<String> lines = new ArrayList<>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83fe01d430891a7df44645f30538d131", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testNotIgnorePrivateMethod() throws Exception", "signatureAfterChange": "      @Test     public void testNotIgnorePrivateMethod() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(ThrowsCountCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(ThrowsCountCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "845b1fe37eef9fe6fd2884eb3fe01044", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "         public void updateUI()", "signatureAfterChange": "         public void updateUI()", "diff": ["-            TreeCellRenderer tcr = getCellRenderer();", "+            final TreeCellRenderer tcr = getCellRenderer();", "-                DefaultTreeCellRenderer dtcr = ((DefaultTreeCellRenderer) tcr);", "+                final DefaultTreeCellRenderer dtcr = ((DefaultTreeCellRenderer) tcr);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84fab5800024db6dc104e082ce3b33b6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ArrayInitHandler.java", "commitBeforeChange": "d7ec6a95ac09e00b8d72b7db4f664a6ffa7e9562", "commitAfterChange": "2f70947ed74ab968324fdcf83f808ff1d88df1fb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected IndentLevel getChildrenExpectedLevel()", "signatureAfterChange": "     protected IndentLevel getChildrenExpectedLevel()", "diff": ["-        IndentLevel expectedIndent = super.getChildrenExpectedLevel();", "+        final IndentLevel expectedIndent = super.getChildrenExpectedLevel();", "-            int firstChildPos =", "+            final int firstChildPos ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85059345bcfb0f606546ef3403409fd6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/CommonUtilsTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     @PrepareForTest({ CommonUtils.class, CommonUtilsTest.class })     @SuppressWarnings(\"unchecked\")     public void testLoadSuppressionsURISyntaxException() throws Exception", "signatureAfterChange": "      @Test     @PrepareForTest({ CommonUtils.class, CommonUtilsTest.class })     @SuppressWarnings(\"unchecked\")     public void testLoadSuppressionsURISyntaxException() throws Exception", "diff": ["-        URL configUrl = mock(URL.class);", "+        final URL configUrl = mock(URL.class);", "-        String fileName = \"suppressions_none.xml\";", "+        final String fileName = \"suppressions_none.xml\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86b99e37706303641341013c7f8d111b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/IndentLevel.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public IndentLevel(IndentLevel aBase, int aOffset)", "signatureAfterChange": "     public IndentLevel(IndentLevel aBase, int aOffset)", "diff": ["-        for (Iterator iter = aBase.mLevels.iterator(); iter.hasNext();) {", "-            int base = ((Integer) iter.next()).intValue();", "+        for (final Iterator iter = aBase.mLevels.iterator(); iter.hasNext();) {", "+            final int base = ((Integer) iter.next()).intValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89e1fa67fa5dc8c5f17d56b53bf3853a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private boolean commentMatch(Pattern aPattern, String aLine, int aLineNo     )", "signatureAfterChange": "     private boolean commentMatch(Pattern aPattern, String aLine, int aLineNo     )", "diff": ["-        Matcher matcher = aPattern.matcher(aLine);", "+        final Matcher matcher = aPattern.matcher(aLine);", "-        boolean hit = matcher.find();", "+        final boolean hit = matcher.find();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c56e841af78d5c1544a1462f0c81720", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagInfoTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testTypeValues()", "signatureAfterChange": "     @Test     public void testTypeValues()", "diff": ["-        JavadocTagInfo.Type[] expected = {", "+        final JavadocTagInfo.Type[] expected = {", "-        JavadocTagInfo.Type[] actual = JavadocTagInfo.Type.values();", "+        final JavadocTagInfo.Type[] actual = JavadocTagInfo.Type.values();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cb6f522e8e66f88a14eab8d71c27238", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testReturnFromCatch() throws Exception", "signatureAfterChange": "      @Test     public void testReturnFromCatch() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(DescendantTokenCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(DescendantTokenCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ddadedc3c7fe0598f1b633d1ccba1e0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testProcessWithRecognitionException() throws Exception", "signatureAfterChange": "      @Test     public void testProcessWithRecognitionException() throws Exception", "diff": ["-        PackageObjectFactory factory = new PackageObjectFactory(", "+        final PackageObjectFactory factory = new PackageObjectFactory(", "-        List<String> lines = new ArrayList<>();", "+        final List<String> lines = new ArrayList<>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "912fba88bd9e9ae3ceacea643154b842", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "d86a9de35b58eeed409ed9fc3cbef252fda4cb84", "commitAfterChange": "5d7063c660b241bce251f1a8c89394619f2791fb", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected AuditListener[] getListeners()         throws ClassNotFoundException, InstantiationException,         IllegalAccessException, IOException", "signatureAfterChange": "     protected AuditListener[] getListeners()         throws ClassNotFoundException, InstantiationException,         IllegalAccessException, IOException", "diff": ["-            OutputStream debug = new LogOutputStream(this, Project.MSG_DEBUG);", "-            OutputStream err = new LogOutputStream(this, Project.MSG_ERR);", "+            final OutputStream debug =", "+                new LogOutputStream(this, Project.MSG_DEBUG);", "+            final OutputStream err = new LogOutputStream(this, Project.MSG_ERR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96b18000726d8d20700ac01b83dbf888", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SingleLineJavadocCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        SingleLineJavadocCheck checkObj = new SingleLineJavadocCheck();", "-        int[] expected = {TokenTypes.BLOCK_COMMENT_BEGIN };", "+        final SingleLineJavadocCheck checkObj = new SingleLineJavadocCheck();", "+        final int[] expected = {TokenTypes.BLOCK_COMMENT_BEGIN };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "982f4d664de309006fa0ceafbbe5bfdd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     public void testWithSumLessThenMinDefMsg() throws Exception", "signatureAfterChange": "      @Test     public void testWithSumLessThenMinDefMsg() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(DescendantTokenCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(DescendantTokenCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98c4b0c61c388a31af09e961905ec70f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AllChecksTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefaultTokensAreSubsetOfAcceptableTokens() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultTokensAreSubsetOfAcceptableTokens() throws Exception", "diff": ["-        Set<Class<?>> checkstyleChecks = getCheckstyleChecks();", "+        final Set<Class<?>> checkstyleChecks = getCheckstyleChecks();", "-                    String errorMessage = String.format(Locale.ROOT,", "+                    final String errorMessage = String.format(Locale.ROOT,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99c978893d005b169be902fa9299c150", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "      @Test     public void testCreateListenerWithLocationIllegalStateException() throws Exception", "signatureAfterChange": "      @Test     public void testCreateListenerWithLocationIllegalStateException() throws Exception", "diff": ["-        Method method = Main.class.getDeclaredMethod(\"createListener\", String.class, String.class);", "+        final Method method = Main.class.getDeclaredMethod(\"createListener\", String.class,", "+            String.class);", "-        String outDir = \"myfolder123\";", "+        final String outDir = \"myfolder123\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a7de45a9a81077bafee77c21aa79df0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void checkNonlistChild()", "signatureAfterChange": "     private void checkNonlistChild()", "diff": ["-        DetailAST nonlist = getNonlistChild();", "+        final DetailAST nonlist = getNonlistChild();", "-        IndentLevel expected = new IndentLevel(getLevel(), getBasicOffset());", "-", "+        final IndentLevel expected =", "+            new IndentLevel(getLevel(), getBasicOffset());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ab288d71cb39b1a605761b296566a1e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheck.java", "commitBeforeChange": "d86a9de35b58eeed409ed9fc3cbef252fda4cb84", "commitAfterChange": "5d7063c660b241bce251f1a8c89394619f2791fb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "     public void finishTree(DetailAST aRootAST)", "diff": ["-            Object objBlock = it.next();", "+            final Object objBlock = it.next();", "-                DetailAST equalsAST = (DetailAST) mObjBlockEquals.get(objBlock);", "+                final DetailAST equalsAST =", "+                    (DetailAST) mObjBlockEquals.get(objBlock);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9afbe2d9b614b3f3adabf0f1beb75eb7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testNoSum() throws Exception", "signatureAfterChange": "      @Test     public void testNoSum() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(DescendantTokenCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(DescendantTokenCheck.class);", "-        String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;", "+        final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c4da4aa59d023ee9c1d3330a01410a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractHeaderCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setHeaderFile(String aFileName)         throws ConversionException", "signatureAfterChange": "     public void setHeaderFile(String aFileName)         throws ConversionException", "diff": ["-        catch (IOException ex) {", "+        catch (final IOException ex) {", "-                catch (IOException ex) {", "+                catch (final IOException ex) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ce448b66941c022aa8b5758bbdf5531", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Test     public void testSetHeaderSimple()", "signatureAfterChange": "     @Test     public void testSetHeaderSimple()", "diff": ["-        RegexpHeaderCheck instance = new RegexpHeaderCheck();", "+        final RegexpHeaderCheck instance = new RegexpHeaderCheck();", "-        String header = \"abc.*\";", "+        final String header = \"abc.*\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e76aee0baaf6f4226ad071197a83c75", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "ee57742c06fda7207ab8110333d1f8d5b93ae3f0", "commitAfterChange": "5ace399de6c8963584b1fbe08007721433c4bad3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void logIOException(IOException aEx, File aFile)", "signatureAfterChange": "     private void logIOException(IOException aEx, File aFile)", "diff": ["-        LocalizedMessage message =", "+        final LocalizedMessage message =", "-        LocalizedMessage[] messages = new LocalizedMessage[]{message};", "+        final LocalizedMessage[] messages = new LocalizedMessage[]{message};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e9f01bbb8d76d9eadfc837700519578", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      @Test     public void testWithSumLessThenMinCustomMsg() throws Exception", "signatureAfterChange": "      @Test     public void testWithSumLessThenMinCustomMsg() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(DescendantTokenCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(DescendantTokenCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ebfd792f10018a7b5560bc1f9d09c89", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MethodNameCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        MethodNameCheck checkObj = new MethodNameCheck();", "-        int[] expected = {TokenTypes.METHOD_DEF};", "+        final MethodNameCheck checkObj = new MethodNameCheck();", "+        final int[] expected = {TokenTypes.METHOD_DEF};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f20070bd4d0058e9dec2b6b1f19d04d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      @Test     public void testUncheckedInConstant() throws Exception", "signatureAfterChange": "      @Test     public void testUncheckedInConstant() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(SuppressWarningsCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(SuppressWarningsCheck.class);", "-        String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;", "+        final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a06931a89e983dae1b5306ca40af1300", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void test15() throws Exception", "signatureAfterChange": "      @Test     public void test15() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(ClassFanOutComplexityCheck.class);", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(ClassFanOutComplexityCheck.class);", "-        String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;", "+        final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0a818549f98ff1e383786f74ddcd9a6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        JavadocParagraphCheck checkObj = new JavadocParagraphCheck();", "-        int[] expected = {TokenTypes.BLOCK_COMMENT_BEGIN};", "+        final JavadocParagraphCheck checkObj = new JavadocParagraphCheck();", "+        final int[] expected = {TokenTypes.BLOCK_COMMENT_BEGIN};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0c50fd5f7f14e7a789738a39d943323", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testWrongTokenType()", "signatureAfterChange": "      @Test     public void testWrongTokenType()", "diff": ["-        ThrowsCountCheck obj = new ThrowsCountCheck();", "-        DetailAST ast = new DetailAST();", "+        final ThrowsCountCheck obj = new ThrowsCountCheck();", "+        final DetailAST ast = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a21f7e4535990a7932d3b8c42b97cf1f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PropertyCacheFileTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testInCache() throws IOException", "signatureAfterChange": "      @Test     public void testInCache() throws IOException", "diff": ["-        Configuration config = new DefaultConfiguration(\"myName\");", "+        final Configuration config = new DefaultConfiguration(\"myName\");", "-        PropertyCacheFile cache = new PropertyCacheFile(config, filePath);", "+        final PropertyCacheFile cache = new PropertyCacheFile(config, filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2a878f45b8a068d4acd2b8518689c6b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIntegerOverflow() throws Exception", "signatureAfterChange": "      @Test     public void testIntegerOverflow() throws Exception", "diff": ["-        DefaultConfiguration checkConfig =", "+        final DefaultConfiguration checkConfig =", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a36de7311086f6871ea9ec5592fb3d2c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        DesignForExtensionCheck obj = new DesignForExtensionCheck();", "-        int[] expected = {TokenTypes.METHOD_DEF};", "+        final DesignForExtensionCheck obj = new DesignForExtensionCheck();", "+        final int[] expected = {TokenTypes.METHOD_DEF};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a376ae05607252a2d861e65f9e6ea7f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "65989e76a40bf085059ee2bf9c695c6b45a771fb", "commitAfterChange": "fca8c918043974fcf6cc59e5d4161ada0b7c4c76", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 92, "signatureBeforeChange": "     private void applyExplicitOptions()", "signatureAfterChange": "     private void applyExplicitOptions()", "diff": ["-        Iterator it = mOptionMemory.iterator();", "+        final Iterator it = mOptionMemory.iterator();", "-            Runnable runnable = (Runnable) it.next();", "+            final Runnable runnable = (Runnable) it.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a467352df9c27c412473379237b05308", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        EmptyCatchBlockCheck checkObj = new EmptyCatchBlockCheck();", "-        int[] expected = {TokenTypes.LITERAL_CATCH};", "+        final EmptyCatchBlockCheck checkObj = new EmptyCatchBlockCheck();", "+        final int[] expected = {TokenTypes.LITERAL_CATCH};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a50ce07a7773d0dda4eaea941e7292ab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private boolean isVariableDefCountable(DetailAST aAST)", "signatureAfterChange": "     private boolean isVariableDefCountable(DetailAST aAST)", "diff": ["-        int parentType = aAST.getParent().getType();", "+        final int parentType = aAST.getParent().getType();", "-            DetailAST prevSibling = aAST.getPreviousSibling();", "+            final DetailAST prevSibling = aAST.getPreviousSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a70921778b35839fff48e5f818f7309e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private void tagCommentLine(String aText, int aLine, int aColumn)", "signatureAfterChange": "     private void tagCommentLine(String aText, int aLine, int aColumn)", "diff": ["-        Matcher offMatcher = mOffRegexp.matcher(aText);", "+        final Matcher offMatcher = mOffRegexp.matcher(aText);", "-            Matcher onMatcher = mOnRegexp.matcher(aText);", "+            final Matcher onMatcher = mOnRegexp.matcher(aText);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a70ff37073abac3a74c5acea58e6f0fa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        VisibilityModifierCheck obj = new VisibilityModifierCheck();", "-        int[] expected = {", "+        final VisibilityModifierCheck obj = new VisibilityModifierCheck();", "+        final int[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a853c0ba0a96a1e0c5fb9445920474e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/AnnotationUtilityTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testContainsAnnotationFalse2() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testContainsAnnotationFalse2() throws ReflectiveOperationException", "diff": ["-        DetailAST ast = new DetailAST();", "+        final DetailAST ast = new DetailAST();", "-        DetailAST ast2 = new DetailAST();", "+        final DetailAST ast2 = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9044d5e7b5a504e9ba3a309c222744d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(PackageDeclarationCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(PackageDeclarationCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa2d4a4a053e499db17d13e4bcf03a14", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/CommonUtilsTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testInvokeConstructor() throws NoSuchMethodException", "signatureAfterChange": "      @Test     public void testInvokeConstructor() throws NoSuchMethodException", "diff": ["-        Constructor<String> constructor = String.class.getConstructor(String.class);", "+        final Constructor<String> constructor = String.class.getConstructor(String.class);", "-        String constructedString = CommonUtils.invokeConstructor(constructor, \"string\");", "+        final String constructedString = CommonUtils.invokeConstructor(constructor, \"string\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad54b622d2ef76c9dac9a37439614894", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test(expected = IllegalArgumentException.class)     public void testWrongTokenType()", "signatureAfterChange": "      @Test(expected = IllegalArgumentException.class)     public void testWrongTokenType()", "diff": ["-        GenericWhitespaceCheck genericWhitespaceCheckObj = new GenericWhitespaceCheck();", "-        DetailAST ast = new DetailAST();", "+        final GenericWhitespaceCheck genericWhitespaceCheckObj = new GenericWhitespaceCheck();", "+        final DetailAST ast = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad6f2d88fcf8236203a19847082e732e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testNoBitwise() throws Exception", "signatureAfterChange": "      @Test     public void testNoBitwise() throws Exception", "diff": ["-        DefaultConfiguration checkConfig =", "+        final DefaultConfiguration checkConfig =", "-        String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;", "+        final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae73181f304cbf1c1419aecdb658308a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        ModifierOrderCheck checkObj = new ModifierOrderCheck();", "-        int[] expected = {TokenTypes.MODIFIERS};", "+        final ModifierOrderCheck checkObj = new ModifierOrderCheck();", "+        final int[] expected = {TokenTypes.MODIFIERS};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af50711d5f3bf42933ba139b033737a0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public Object createModule(String aName)         throws CheckstyleException", "signatureAfterChange": "     public Object createModule(String aName)         throws CheckstyleException", "diff": ["-        catch (CheckstyleException ex) {", "+        catch (final CheckstyleException ex) {", "-            catch (CheckstyleException ex2) {", "+            catch (final CheckstyleException ex2) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af75c45842d5f8bc81f699e6deb5de61", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public String getFilePath(String aFileName)", "signatureAfterChange": "      public String getFilePath(String aFileName)", "diff": ["-        String absoluteRootPath = root.getAbsolutePath();", "-        String rootPath = absoluteRootPath.substring(0,", "+        final String absoluteRootPath = root.getAbsolutePath();", "+        final String rootPath = absoluteRootPath.substring(0,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b059d249a3528735ef0316537dad3fac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        AtclauseOrderCheck checkObj = new AtclauseOrderCheck();", "-        int[] expected = {TokenTypes.BLOCK_COMMENT_BEGIN};", "+        final AtclauseOrderCheck checkObj = new AtclauseOrderCheck();", "+        final int[] expected = {TokenTypes.BLOCK_COMMENT_BEGIN};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b12d80facae7c14f80eb4c469b8c2379", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        ExpressionHandler handler = mHandlerFactory.getHandler(this, aAST,", "+        final ExpressionHandler handler = mHandlerFactory.getHandler(this, aAST,", "-        catch (NullPointerException npe) {", "+        catch (final NullPointerException npe) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b18316a065a2cb348b72cab7389739a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule525nonconstantfieldnames/MemberNameTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void simpleTest() throws Exception", "signatureAfterChange": "      @Test     public void simpleTest() throws Exception", "diff": ["-        String filePath = builder.getFilePath(\"MemberNameInput_Simple\");", "+        final String filePath = builder.getFilePath(\"MemberNameInput_Simple\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1a5dde8fd314ab69783c91fb489a911", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testNPE() throws Exception", "signatureAfterChange": "      @Test     public void testNPE() throws Exception", "diff": ["-        DefaultConfiguration checkConfig =", "+        final DefaultConfiguration checkConfig =", "-        String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;", "+        final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b21f18dc64975dba583e2043ff6d1e26", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        ArrayTypeStyleCheck checkObj = new ArrayTypeStyleCheck();", "-        int[] expected = {TokenTypes.ARRAY_DECLARATOR};", "+        final ArrayTypeStyleCheck checkObj = new ArrayTypeStyleCheck();", "+        final int[] expected = {TokenTypes.ARRAY_DECLARATOR};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b29786ec2eb4c39b6e74bfff4fd53e3f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testIoExceptionWhenLoadingHeaderFile() throws Exception", "signatureAfterChange": "      @Test     public void testIoExceptionWhenLoadingHeaderFile() throws Exception", "diff": ["-        HeaderCheck check = PowerMockito.spy(new HeaderCheck());", "+        final HeaderCheck check = PowerMockito.spy(new HeaderCheck());", "-        Method loadHeaderFile = AbstractHeaderCheck.class.getDeclaredMethod(\"loadHeaderFile\");", "+        final Method loadHeaderFile = AbstractHeaderCheck.class.getDeclaredMethod(\"loadHeaderFile\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2d0e56897cd6391f603d2440089fe13", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "15c641997da72c75b97abad5d0c40375f82851ea", "commitAfterChange": "ce177456e7042b22b1842cb0309b6b285dc900d4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public int getColumnNo()", "signatureAfterChange": "     public int getColumnNo()", "diff": ["-            DetailAST child = (DetailAST) getFirstChild();", "-            DetailAST sibling = (DetailAST) getNextSibling();", "+            final DetailAST child = (DetailAST) getFirstChild();", "+            final DetailAST sibling = (DetailAST) getNextSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2f7b357f9a986e3c9ae98e612671b69", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeParameterNameTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetInterfaceRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetInterfaceRequiredTokens()", "diff": ["-        InterfaceTypeParameterNameCheck checkObj =", "+        final InterfaceTypeParameterNameCheck checkObj =", "-        int[] expected = {TokenTypes.TYPE_PARAMETER};", "+        final int[] expected = {TokenTypes.TYPE_PARAMETER};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b31f7d9972e40099aaafe3ae3adb5474", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testMultipleTypes() throws Exception", "signatureAfterChange": "      @Test     public void testMultipleTypes() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(IllegalCatchCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(IllegalCatchCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b699b56aa6d35c880d9d751087f2836e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalThrowsCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     @Test     public void testNotIgnoreOverriddenMethods() throws Exception", "signatureAfterChange": "     @Test     public void testNotIgnoreOverriddenMethods() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(IllegalThrowsCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(IllegalThrowsCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7a7c25e23adf93ea39b4785cff09f6a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testCorrectFile() throws Exception", "signatureAfterChange": "      @Test     public void testCorrectFile() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(PackageDeclarationCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(PackageDeclarationCheck.class);", "-        String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;", "+        final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b80c16ed8825742ebda83ca9c6e6ebbc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testDefaultHooks()", "signatureAfterChange": "      @Test     public void testDefaultHooks()", "diff": ["-        NPathComplexityCheck npathComplexityCheckObj = new NPathComplexityCheck();", "-        DetailAST ast = new DetailAST();", "+        final NPathComplexityCheck npathComplexityCheckObj = new NPathComplexityCheck();", "+        final DetailAST ast = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8469a9c4e5ff406b532639e6d9ee902", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "5ce7d2562fa583fdb812c6742b1198d0c99ccd6a", "commitAfterChange": "64daa21b1c30061bba4c0d030f4df913f53c4f17", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     void registerCheck(Check aCheck)            throws CheckstyleException", "signatureAfterChange": "     void registerCheck(Check aCheck)            throws CheckstyleException", "diff": ["-            int acceptableTokens[] = aCheck.getAcceptableTokens();", "+            final int acceptableTokens[] = aCheck.getAcceptableTokens();", "-                    int tokenId = TokenTypes.getTokenId(token);                    ", "+                    final int tokenId = TokenTypes.getTokenId(token);                    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b85badd6e72a21a9b1975a2eb7d9750b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/NonEmptyAtclauseDescriptionCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        NonEmptyAtclauseDescriptionCheck checkObj =", "+        final NonEmptyAtclauseDescriptionCheck checkObj =", "-        int[] expected = {TokenTypes.BLOCK_COMMENT_BEGIN};", "+        final int[] expected = {TokenTypes.BLOCK_COMMENT_BEGIN};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8803e51c0a0824dd1e29d7d68d4ecf9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolderTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        SuppressWarningsHolder checkObj = new SuppressWarningsHolder();", "-        int[] expected = {TokenTypes.ANNOTATION};", "+        final SuppressWarningsHolder checkObj = new SuppressWarningsHolder();", "+        final int[] expected = {TokenTypes.ANNOTATION};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b891f4307a8bdb0ae1e1d5f73eda0e79", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private void checkSingleLine(int aLineNum, int aColNum,         IndentLevel aIndentLevel, boolean aMustMatch)", "signatureAfterChange": "      private void checkSingleLine(int aLineNum, int aColNum,         IndentLevel aIndentLevel, boolean aMustMatch)", "diff": ["-        String line = mIndentCheck.getLines()[aLineNum - 1];", "-        int start = getLineStart(line);", "+        final String line = mIndentCheck.getLines()[aLineNum - 1];", "+        final int start = getLineStart(line);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b931db16fb47f9982d55a64ace882d39", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtilsTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testIsLocalVariableDefCatch() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testIsLocalVariableDefCatch() throws ReflectiveOperationException", "diff": ["-        DetailAST ast = new DetailAST();", "+        final DetailAST ast = new DetailAST();", "-        DetailAST ast2 = new DetailAST();", "+        final DetailAST ast2 = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9ac848d617f9fc09e6f927b0e61d528", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MemberNameCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        MemberNameCheck checkObj = new MemberNameCheck();", "-        int[] expected = {TokenTypes.VARIABLE_DEF};", "+        final MemberNameCheck checkObj = new MemberNameCheck();", "+        final int[] expected = {TokenTypes.VARIABLE_DEF};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9d2d660227975480392dda00703314d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        JavadocTagContinuationIndentationCheck checkObj =", "+        final JavadocTagContinuationIndentationCheck checkObj =", "-        int[] expected = {TokenTypes.BLOCK_COMMENT_BEGIN };", "+        final int[] expected = {TokenTypes.BLOCK_COMMENT_BEGIN };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba10fcc1c0ee41db21f90bf815716127", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CommitValidationTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private static List<RevCommit> filterValidCommits(List<RevCommit> revCommits)", "signatureAfterChange": "      private static List<RevCommit> filterValidCommits(List<RevCommit> revCommits)", "diff": ["-        List<RevCommit> filteredCommits = new LinkedList<>();", "+        final List<RevCommit> filteredCommits = new LinkedList<>();", "-            String commitAuthor = commit.getAuthorIdent().getName();", "+            final String commitAuthor = commit.getAuthorIdent().getName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba737574f33f777d76a6b4a4532e48f1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtilsTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testIsOuterMostTypeAnnotation() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testIsOuterMostTypeAnnotation() throws ReflectiveOperationException", "diff": ["-        DetailAST ast = new DetailAST();", "+        final DetailAST ast = new DetailAST();", "-        DetailAST ast2 = new DetailAST();", "+        final DetailAST ast2 = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb0c9d0cdbaffb2f9ebeb17b38c6b7eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        AvoidNestedBlocksCheck checkObj = new AvoidNestedBlocksCheck();", "-        int[] expected = {TokenTypes.SLIST};", "+        final AvoidNestedBlocksCheck checkObj = new AvoidNestedBlocksCheck();", "+        final int[] expected = {TokenTypes.SLIST};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb1e6b2d1d49e7eb87daaedc9846cea1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule528typevariablenames/ClassMethodTypeParameterNameTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testClassDefault() throws Exception", "signatureAfterChange": "      @Test     public void testClassDefault() throws Exception", "diff": ["-        String filePath = builder.getFilePath(\"ClassTypeParameterNameInput\");", "+        final String filePath = builder.getFilePath(\"ClassTypeParameterNameInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb7f3ea457c63f3e678f85deee64152b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testImproperToken() throws Exception", "signatureAfterChange": "      @Test     public void testImproperToken() throws Exception", "diff": ["-        IllegalInstantiationCheck check = new IllegalInstantiationCheck();", "+        final IllegalInstantiationCheck check = new IllegalInstantiationCheck();", "-        DetailAST lambdaAst = new DetailAST();", "+        final DetailAST lambdaAst = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb8ee639519a6088ae6a4cef5ba535bf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        ParameterNameCheck checkObj = new ParameterNameCheck();", "-        int[] expected = {TokenTypes.PARAMETER_DEF};", "+        final ParameterNameCheck checkObj = new ParameterNameCheck();", "+        final int[] expected = {TokenTypes.PARAMETER_DEF};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdbb25419acbd8d84fe631ce9a586aaa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractTypeAwareCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIsSubclassWithNulls() throws Exception", "signatureAfterChange": "      @Test     public void testIsSubclassWithNulls() throws Exception", "diff": ["-        JavadocMethodCheck check = new JavadocMethodCheck();", "-        Method isSubclass = check.getClass().getSuperclass()", "+        final JavadocMethodCheck check = new JavadocMethodCheck();", "+        final Method isSubclass = check.getClass().getSuperclass()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be15005cbb1787ce41385b82f6ba1db6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtilsTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testInEnumBlockInInterface() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testInEnumBlockInInterface() throws ReflectiveOperationException", "diff": ["-        DetailAST ast = new DetailAST();", "+        final DetailAST ast = new DetailAST();", "-        DetailAST ast2 = new DetailAST();", "+        final DetailAST ast2 = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be4337586d91ccc7ceb7aa5372892dfd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalThrowsCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Test     public void testIllegalClassNamesWithIgnoreMethodNames() throws Exception", "signatureAfterChange": "     @Test     public void testIllegalClassNamesWithIgnoreMethodNames() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(IllegalThrowsCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(IllegalThrowsCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf6c4f24397bec87663ecec9cf5cc8a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "d86a9de35b58eeed409ed9fc3cbef252fda4cb84", "commitAfterChange": "5d7063c660b241bce251f1a8c89394619f2791fb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public int process(File[] aFiles)", "signatureAfterChange": "     public int process(File[] aFiles)", "diff": ["-            FileSetCheck fileSetCheck = (FileSetCheck) mFileSetChecks.get(i);", "+            final FileSetCheck fileSetCheck =", "+                (FileSetCheck) mFileSetChecks.get(i);", "-        int errorCount = mCounter.getCount();", "+        final int errorCount = mCounter.getCount();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0e16f53242ad3fe143cf6001dd572f9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void checkPropertyFileSets(Map aPropFiles)", "signatureAfterChange": "     private void checkPropertyFileSets(Map aPropFiles)", "diff": ["-        for (Iterator iterator = entrySet.iterator(); iterator.hasNext();) {", "+        for (final Iterator iterator = entrySet.iterator(); iterator.hasNext();)", "+        {", "-                for (Iterator iter = files.iterator(); iter.hasNext();) {", "+                for (final Iterator iter = files.iterator(); iter.hasNext();) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c178476031834d20035724d664902929", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void process(File[] aFiles)", "signatureAfterChange": "     public void process(File[] aFiles)", "diff": ["-            catch (IOException e) {", "+            catch (final IOException e) {", "-                    catch (IOException e) {", "+                    catch (final IOException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c44a62431f733584a86ce674b151b175", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule525nonconstantfieldnames/MemberNameTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void memberNameTest() throws Exception", "signatureAfterChange": "      @Test     public void memberNameTest() throws Exception", "diff": ["-        String filePath = builder.getFilePath(\"MemberNameInput_Basic\");", "+        final String filePath = builder.getFilePath(\"MemberNameInput_Basic\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c59045d73916491ff54f039f68e0f8c1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ArrayInitHandler.java", "commitBeforeChange": "d7ec6a95ac09e00b8d72b7db4f664a6ffa7e9562", "commitAfterChange": "2f70947ed74ab968324fdcf83f808ff1d88df1fb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public IndentLevel getLevelImpl()", "signatureAfterChange": "     public IndentLevel getLevelImpl()", "diff": ["-        DetailAST parentAST = getMainAst().getParent();", "-        int type = parentAST.getType();", "+        final DetailAST parentAST = getMainAst().getParent();", "+        final int type = parentAST.getType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c615eb2e614d310c2f73d112d9bf0119", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "      @Test     public void testWorkingProperlyOnComplexAnnotations() throws Exception", "signatureAfterChange": "      @Test     public void testWorkingProperlyOnComplexAnnotations() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(SuppressWarningsCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(SuppressWarningsCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c82fcd3b773bf3ba14170921eac577f1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        SummaryJavadocCheck checkObj = new SummaryJavadocCheck();", "-        int[] expected = {TokenTypes.BLOCK_COMMENT_BEGIN };", "+        final SummaryJavadocCheck checkObj = new SummaryJavadocCheck();", "+        final int[] expected = {TokenTypes.BLOCK_COMMENT_BEGIN };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9e9732ed97b588b20f683c46cc5d29e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testImproperToken() throws Exception", "signatureAfterChange": "      @Test     public void testImproperToken() throws Exception", "diff": ["-        IllegalTypeCheck check = new IllegalTypeCheck();", "+        final IllegalTypeCheck check = new IllegalTypeCheck();", "-        DetailAST classDefAst = new DetailAST();", "+        final DetailAST classDefAst = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca91e2a9217603bcd079712e0fdeb980", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testJavadocTagTypeValues()", "signatureAfterChange": "     @Test     public void testJavadocTagTypeValues()", "diff": ["-        JavadocUtils.JavadocTagType[] enumConstants =", "+        final JavadocUtils.JavadocTagType[] enumConstants =", "-        JavadocUtils.JavadocTagType[] expected = {", "+        final JavadocUtils.JavadocTagType[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbcf6391128794fd39f7d4c7b79fb0e6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        DesignForExtensionCheck checkObj = new DesignForExtensionCheck();", "-        int[] expected = {TokenTypes.METHOD_DEF};", "+        final DesignForExtensionCheck checkObj = new DesignForExtensionCheck();", "+        final int[] expected = {TokenTypes.METHOD_DEF};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc7f80c2c87a92e1eb8aafd31a9b963a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/InnerTypeLastCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        InnerTypeLastCheck checkObj = new InnerTypeLastCheck();", "-        int[] expected = {TokenTypes.CLASS_DEF, TokenTypes.INTERFACE_DEF};", "+        final InnerTypeLastCheck checkObj = new InnerTypeLastCheck();", "+        final int[] expected = {TokenTypes.CLASS_DEF, TokenTypes.INTERFACE_DEF};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cce98203635a847e2658e5f6c894c02e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheck.java", "commitBeforeChange": "d86a9de35b58eeed409ed9fc3cbef252fda4cb84", "commitAfterChange": "5d7063c660b241bce251f1a8c89394619f2791fb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean findNonCommentMatch(             String aLine, int aLineNumber, int aStartPosition)", "signatureAfterChange": "     private boolean findNonCommentMatch(             String aLine, int aLineNumber, int aStartPosition)", "diff": ["-            int startCol = regexp.getParenStart(0);", "-            int endCol = regexp.getParenEnd(0);", "+            final int startCol = regexp.getParenStart(0);", "+            final int endCol = regexp.getParenEnd(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd7b6ecad03cd6bd5f3f671129c4351b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheck.java", "commitBeforeChange": "dce9ad9e885de3ebb17cce482a512bdaf64f36ae", "commitAfterChange": "6abdc24080fe87995f39bd54bed99976dace4652", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\")     private void findDuplicateFromLine(         final int aI, final int aJ, final int aILine,         final int[] aJLines, final MultiMap aIgnore)", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\")     private void findDuplicateFromLine(         final int aI, final int aJ, final int aILine,         final int[] aJLines, final MultiMap aIgnore)", "diff": ["-            int duplicateLines = verifiyDuplicateLines(aI, aJ, aILine, jLine);", "+            final int duplicateLines =", "+                verifiyDuplicateLines(aI, aJ, aILine, jLine);", "-                int extend = duplicateLines - mMin;", "+                final int extend = duplicateLines - mMin;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdac7ce0b4435b0dfdd16827f4fbbcb1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/JUnitTestCaseCheck.java", "commitBeforeChange": "d7ec6a95ac09e00b8d72b7db4f664a6ffa7e9562", "commitAfterChange": "2f70947ed74ab968324fdcf83f808ff1d88df1fb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private boolean isStatic(DetailAST aAST)", "signatureAfterChange": "     private boolean isStatic(DetailAST aAST)", "diff": ["-        DetailAST modifiersAST = aAST.findFirstToken(TokenTypes.MODIFIERS);", "-        DetailAST staticAST =", "+        final DetailAST modifiersAST =", "+            aAST.findFirstToken(TokenTypes.MODIFIERS);", "+        final DetailAST staticAST ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce6309e3b869f38f5ae60c3b6a6e015d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/SeverityLevelTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testMixedCaseSpacesWithDifferentLocales()", "signatureAfterChange": "      @Test     public void testMixedCaseSpacesWithDifferentLocales()", "diff": ["-        Locale[] differentLocales = {new Locale(\"TR\", \"tr\") };", "-        Locale defaultLocale = Locale.getDefault();", "+        final Locale[] differentLocales = {new Locale(\"TR\", \"tr\") };", "+        final Locale defaultLocale = Locale.getDefault();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ced67a9cdef0a40a7c33ba11a762c8d8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        VisibilityModifierCheck checkObj = new VisibilityModifierCheck();", "-        int[] expected = {", "+        final VisibilityModifierCheck checkObj = new VisibilityModifierCheck();", "+        final int[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf077445d52ab78082e34a7b66014b7a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AllChecksTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testRequiredTokensAreSubsetOfDefaultTokens() throws Exception", "signatureAfterChange": "      @Test     public void testRequiredTokensAreSubsetOfDefaultTokens() throws Exception", "diff": ["-        Set<Class<?>> checkstyleChecks = getCheckstyleChecks();", "+        final Set<Class<?>> checkstyleChecks = getCheckstyleChecks();", "-                    String errorMessage = String.format(Locale.ROOT,", "+                    final String errorMessage = String.format(Locale.ROOT,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf0faf547483afd99e35eee4635b6e2d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule527localvariablenames/LocalVariableNameTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void oneCharTest() throws Exception", "signatureAfterChange": "      @Test     public void oneCharTest() throws Exception", "diff": ["-        String filePath = builder.getFilePath(\"LocalVariableNameInput_OneCharVarName\");", "+        final String filePath = builder.getFilePath(\"LocalVariableNameInput_OneCharVarName\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf362209b78cc1a664b680429492ccb8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testFileExtensions() throws Exception", "signatureAfterChange": "      @Test     public void testFileExtensions() throws Exception", "diff": ["-        File file = new File(\"file.pdf\");", "+        final File file = new File(\"file.pdf\");", "-        File otherFile = new File(\"file.java\");", "+        final File otherFile = new File(\"file.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1c21f5220e9937b7253bf745c8dd95a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/ParseTreeModel.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      void setParseTree(DetailAST parseTree)", "signatureAfterChange": "      void setParseTree(DetailAST parseTree)", "diff": ["-        DetailAST root = (DetailAST) getRoot();", "+        final DetailAST root = (DetailAST) getRoot();", "-        Object[] path = {root};", "+        final Object[] path = {root};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1f9a660575d01ad48242d9683e3806b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testCacheFileChangeInConfig() throws Exception", "signatureAfterChange": "      @Test     public void testCacheFileChangeInConfig() throws Exception", "diff": ["-        Checker checker = new Checker();", "+        final Checker checker = new Checker();", "-        Checker otherChecker = new Checker();", "+        final Checker otherChecker = new Checker();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d32746b1523da02a9dcb25d42abf99ca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        ThrowsCountCheck obj = new ThrowsCountCheck();", "-        int[] expected = {TokenTypes.LITERAL_THROWS};", "+        final ThrowsCountCheck obj = new ThrowsCountCheck();", "+        final int[] expected = {TokenTypes.LITERAL_THROWS};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d44f0fc458a039ec5a598689db11f04c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtilsTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testInEnumBlockInNew() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testInEnumBlockInNew() throws ReflectiveOperationException", "diff": ["-        DetailAST ast = new DetailAST();", "+        final DetailAST ast = new DetailAST();", "-        DetailAST ast2 = new DetailAST();", "+        final DetailAST ast2 = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d47fbbea6d7e688b8bbecf53252b4a09", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(MutableExceptionCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(MutableExceptionCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6a257db766dfeb3e961f22bf9dd04ec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IllegalInstantiationCheck.java", "commitBeforeChange": "675c037c85af8347d5b95b0b45f166b8599a9b27", "commitAfterChange": "59c9c64381dd92bc877f5a834dae7856603d5546", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void processPackageDef(DetailAST aAST)", "signatureAfterChange": "     private void processPackageDef(DetailAST aAST)", "diff": ["-        DetailAST packageNameAST = (DetailAST) aAST.getFirstChild();", "-        FullIdent packageIdent = FullIdent.createFullIdent(packageNameAST);", "+        final DetailAST packageNameAST = (DetailAST) aAST.getFirstChild();", "+        final FullIdent packageIdent =", "+                FullIdent.createFullIdent(packageNameAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d742e7e3580ba95fcd983a99ee2e62b8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/HideUtilityClassConstructorCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        HideUtilityClassConstructorCheck obj = new HideUtilityClassConstructorCheck();", "-        int[] expected = {TokenTypes.CLASS_DEF};", "+        final HideUtilityClassConstructorCheck obj = new HideUtilityClassConstructorCheck();", "+        final int[] expected = {TokenTypes.CLASS_DEF};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7ad2d705489ded17deb7d0aa60c4457", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeParameterNameTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetMethodRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetMethodRequiredTokens()", "diff": ["-        MethodTypeParameterNameCheck checkObj =", "+        final MethodTypeParameterNameCheck checkObj =", "-        int[] expected = {TokenTypes.TYPE_PARAMETER};", "+        final int[] expected = {TokenTypes.TYPE_PARAMETER};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8d56e4550ec69f249d40fed8dd2bab8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        DefaultConfiguration checkConfig =", "+        final DefaultConfiguration checkConfig =", "-        String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;", "+        final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9701414c79db10b88fa9cf490edab82", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCalculation() throws Exception", "signatureAfterChange": "      @Test     public void testCalculation() throws Exception", "diff": ["-        DefaultConfiguration checkConfig =", "+        final DefaultConfiguration checkConfig =", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc53828ff9a9fdf404c3c141d7bb9a3f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MethodDefHandler.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void checkIdent()", "signatureAfterChange": "     private void checkIdent()", "diff": ["-        DetailAST ident = getMainAst().findFirstToken(TokenTypes.IDENT);", "-        int columnNo = expandedTabsColumnNo(ident);", "+        final DetailAST ident = getMainAst().findFirstToken(TokenTypes.IDENT);", "+        final int columnNo = expandedTabsColumnNo(ident);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcc9029977a328cf6f6c71b0fb73c9e4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testClassExtendsGenericClass() throws Exception", "signatureAfterChange": "      @Test     public void testClassExtendsGenericClass() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(MutableExceptionCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(MutableExceptionCheck.class);", "-        String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;", "+        final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de81fe92b099412832c6f62648576a8d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressElementTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testDecideByFileNameAndModuleMatchingRegExpMatch()", "signatureAfterChange": "      @Test     public void testDecideByFileNameAndModuleMatchingRegExpMatch()", "diff": ["-        LocalizedMessage message =", "+        final LocalizedMessage message =", "-        SuppressElement filterWithoutChecks = new SuppressElement(\"Test\");", "+        final SuppressElement filterWithoutChecks = new SuppressElement(\"Test\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df0b2ba9c12f465dbf6e6ad30f0e6f5d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/DoubleCheckedLockingCheck.java", "commitBeforeChange": "3e5a642f7c960d512abed6de4d01967dda1f4eb3", "commitAfterChange": "b0902e01cc10bca3eb99151aad0cf1c52ed2ccc7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        DetailAST synchronizedAST =", "+        final DetailAST synchronizedAST =", "-        DetailAST ifAST =", "+        final DetailAST ifAST ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df525c8fd87dacf6de78406e8a7f9e3f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void test() throws Exception", "signatureAfterChange": "      @Test     public void test() throws Exception", "diff": ["-        DefaultConfiguration checkConfig =", "+        final DefaultConfiguration checkConfig =", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df8a8319640599c8926ed548de701ea0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        IndentationCheck checkObj = new IndentationCheck();", "+        final IndentationCheck checkObj = new IndentationCheck();", "-        int[] expected = handlerFactory.getHandledTypes();", "+        final int[] expected = handlerFactory.getHandledTypes();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e026a3652eb3652fe36cb6e6c87ee3ad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Test     public void testSetHeader()", "signatureAfterChange": "     @Test     public void testSetHeader()", "diff": ["-        RegexpHeaderCheck instance = new RegexpHeaderCheck();", "+        final RegexpHeaderCheck instance = new RegexpHeaderCheck();", "-            String header = \"^/**\\\\n * Licensed to the Apache Software Foundation (ASF)\";", "+            final String header = \"^/**\\\\n * Licensed to the Apache Software Foundation (ASF)\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e240df284294ea47988a4f0fbe1ab103", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractHeaderCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setHeader(String aHeader)", "signatureAfterChange": "     public void setHeader(String aHeader)", "diff": ["-        catch (IOException ex) {", "+        catch (final IOException ex) {", "-            catch (IOException ex) {", "+            catch (final IOException ex) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e25f4a8e51002931d86c009f1aef734b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testFormat() throws Exception", "signatureAfterChange": "      @Test     public void testFormat() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(MutableExceptionCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(MutableExceptionCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2742e96e6be8e111a1004fb32859872", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/IllegalImportCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        IllegalImportCheck checkObj = new  IllegalImportCheck();", "-        int[] expected = {TokenTypes.IMPORT, TokenTypes.STATIC_IMPORT};", "+        final IllegalImportCheck checkObj = new  IllegalImportCheck();", "+        final int[] expected = {TokenTypes.IMPORT, TokenTypes.STATIC_IMPORT};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e27897c09761353869f80f5957b0b45b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        MutableExceptionCheck obj = new MutableExceptionCheck();", "-        int[] expected = {TokenTypes.CLASS_DEF, TokenTypes.VARIABLE_DEF};", "+        final MutableExceptionCheck obj = new MutableExceptionCheck();", "+        final int[] expected = {TokenTypes.CLASS_DEF, TokenTypes.VARIABLE_DEF};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3b4fcd6c1b1432e823e3da3995ccac6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtilsTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testIsOuterMostTypeInterface() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testIsOuterMostTypeInterface() throws ReflectiveOperationException", "diff": ["-        DetailAST ast = new DetailAST();", "+        final DetailAST ast = new DetailAST();", "-        DetailAST ast2 = new DetailAST();", "+        final DetailAST ast2 = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5b05d6f946eddba62022f6a41c82442", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/InterfaceIsTypeCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        InterfaceIsTypeCheck obj = new InterfaceIsTypeCheck();", "-        int[] expected = {TokenTypes.INTERFACE_DEF};", "+        final InterfaceIsTypeCheck obj = new InterfaceIsTypeCheck();", "+        final int[] expected = {TokenTypes.INTERFACE_DEF};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5d75b0e8449bb586c8ceab44c7d6429", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        DefaultConfiguration checkConfig =", "+        final DefaultConfiguration checkConfig =", "-        String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;", "+        final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5fe91b01216391233d0f71bfd9f9b40", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "      @Test     public void testReplacePropertiesDefault() throws Exception", "signatureAfterChange": "      @Test     public void testReplacePropertiesDefault() throws Exception", "diff": ["-        String defaultValue = \"defaultValue\";", "+        final String defaultValue = \"defaultValue\";", "-        String value = ConfigurationLoader.replaceProperties(\"${checkstyle.basedir}\",", "+        final String value = ConfigurationLoader.replaceProperties(\"${checkstyle.basedir}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8ab9d88d44b9b16cbc7a5cc366f3783", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/TodoCommentCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        TodoCommentCheck checkObj = new TodoCommentCheck();", "-        int[] expected = {TokenTypes.COMMENT_CONTENT};", "+        final TodoCommentCheck checkObj = new TodoCommentCheck();", "+        final int[] expected = {TokenTypes.COMMENT_CONTENT};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9906c133220cd489f9170bd03aa8575", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private Vector getJavadocTags(TextBlock aCmt)", "signatureAfterChange": "     private Vector getJavadocTags(TextBlock aCmt)", "diff": ["-        Vector tags = new Vector();", "+        final Vector tags = new Vector();", "-            Matcher tagMatcher = tagPattern.matcher(s);", "+            final Matcher tagMatcher = tagPattern.matcher(s);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea2a63280814f87141d79e6b0ff71fdc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/LabelHandler.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void checkIndentation()", "signatureAfterChange": "     public void checkIndentation()", "diff": ["-        DetailAST parent = (DetailAST)", "+        final DetailAST parent = (DetailAST)", "-        IndentLevel expected = new IndentLevel(getLevel(), getBasicOffset());", "+        final IndentLevel expected =", "+            new IndentLevel(getLevel(), getBasicOffset());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edb96afb05b2b621aea258e6afe436af", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "15c641997da72c75b97abad5d0c40375f82851ea", "commitAfterChange": "ce177456e7042b22b1842cb0309b6b285dc900d4", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public int getLineNo()", "signatureAfterChange": "     public int getLineNo()", "diff": ["-            DetailAST child = (DetailAST) getFirstChild();", "-            DetailAST sibling = (DetailAST) getNextSibling();", "+            final DetailAST child = (DetailAST) getFirstChild();", "+            final DetailAST sibling = (DetailAST) getNextSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee68650bef60ed130439a35f8ed26f25", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "2f70947ed74ab968324fdcf83f808ff1d88df1fb", "commitAfterChange": "303cbce950cf31dcfc4df19414a37fe577fc09e1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected void checkLCurly()", "signatureAfterChange": "     protected void checkLCurly()", "diff": ["-        DetailAST lcurly = getLCurly();", "-        int lcurlyPos = expandedTabsColumnNo(lcurly);", "+        final DetailAST lcurly = getLCurly();", "+        final int lcurlyPos = expandedTabsColumnNo(lcurly);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eed2565cf8c47b081800624119a6a592", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java", "commitBeforeChange": "d7ec6a95ac09e00b8d72b7db4f664a6ffa7e9562", "commitAfterChange": "2f70947ed74ab968324fdcf83f808ff1d88df1fb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        AST condition = aAST.getFirstChild().getNextSibling();", "-        AST thenStatement = condition.getNextSibling().getNextSibling();", "+        final AST condition = aAST.getFirstChild().getNextSibling();", "+        final AST thenStatement = condition.getNextSibling().getNextSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef08ff7953c02f132747713ef108b9b8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IllegalInstantiationCheck.java", "commitBeforeChange": "675c037c85af8347d5b95b0b45f166b8599a9b27", "commitAfterChange": "59c9c64381dd92bc877f5a834dae7856603d5546", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void processLiteralNew(DetailAST aAST)", "signatureAfterChange": "     private void processLiteralNew(DetailAST aAST)", "diff": ["-        DetailAST typeNameAST = (DetailAST) aAST.getFirstChild();", "+        final DetailAST typeNameAST = (DetailAST) aAST.getFirstChild();", "-        AST nameSibling = typeNameAST.getNextSibling();", "+        final AST nameSibling = typeNameAST.getNextSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f067cbbc61f24083a5a550621128b806", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtilsTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testInEnumBlockInClass() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testInEnumBlockInClass() throws ReflectiveOperationException", "diff": ["-        DetailAST ast = new DetailAST();", "+        final DetailAST ast = new DetailAST();", "-        DetailAST ast2 = new DetailAST();", "+        final DetailAST ast2 = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0e3945e8151064dc10c4377b2c5915f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        MissingDeprecatedCheck checkObj = new  MissingDeprecatedCheck();", "-        int[] expected = {", "+        final MissingDeprecatedCheck checkObj = new  MissingDeprecatedCheck();", "+        final int[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1d25c6bda6b0e0fe486a521cadcd011", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/IndentationConfigurationBuilder.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private static Integer[] getLinesWithWarnAndCheckComments(String aFileName,             final int tabWidth)                     throws IOException", "signatureAfterChange": "      private static Integer[] getLinesWithWarnAndCheckComments(String aFileName,             final int tabWidth)                     throws IOException", "diff": ["-        List<Integer> result = new ArrayList<>();", "+        final List<Integer> result = new ArrayList<>();", "-                Matcher match = LINE_WITH_COMMENT_REGEX.matcher(line);", "+                final Matcher match = LINE_WITH_COMMENT_REGEX.matcher(line);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3b6aeefc6dec149ebc4ddc862cc8094", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocNodeImplTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetColumnNumber()", "signatureAfterChange": "      @Test     public void testGetColumnNumber()", "diff": ["-        JavadocNodeImpl javadocNode = new JavadocNodeImpl();", "+        final JavadocNodeImpl javadocNode = new JavadocNodeImpl();", "-        int result = javadocNode.getColumnNumber();", "+        final int result = javadocNode.getColumnNumber();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7075c5163094b2a6dcf73403be89910", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testToString()", "signatureAfterChange": "      @Test     public void testToString()", "diff": ["-        JavadocTag javadocTag = new JavadocTag(0, 1, \"author\", \"firstArg\");", "+        final JavadocTag javadocTag = new JavadocTag(0, 1, \"author\", \"firstArg\");", "-        String result = javadocTag.toString();", "+        final String result = javadocTag.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f79411846c63c4bb2536d627959d8ad4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule231filetab/FileTabCharacterTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void fileTabTest() throws Exception", "signatureAfterChange": "      @Test     public void fileTabTest() throws Exception", "diff": ["-        String filePath = builder.getFilePath(\"FileTabCharacterInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final String filePath = builder.getFilePath(\"FileTabCharacterInput\");", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7c9877a245c0e61f9170eb8791200d3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     void destroy()", "signatureAfterChange": "     void destroy()", "diff": ["-            catch (IOException e) {", "+            catch (final IOException e) {", "-                    catch (IOException ex) {", "+                    catch (final IOException ex) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8787e70e55c7876232e91750628c3f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineSetTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testToStringShowingFirstAndLastLine()", "signatureAfterChange": "      @Test     public void testToStringShowingFirstAndLastLine()", "diff": ["-        LineSet lineSet = new LineSet();", "+        final LineSet lineSet = new LineSet();", "-        String result = lineSet.toString();", "+        final String result = lineSet.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd4865647ea3d24d03c7ae5cb680e282", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testMax() throws Exception", "signatureAfterChange": "      @Test     public void testMax() throws Exception", "diff": ["-        DefaultConfiguration checkConfig = createCheckConfig(ThrowsCountCheck.class);", "+        final DefaultConfiguration checkConfig = createCheckConfig(ThrowsCountCheck.class);", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdb18fcf82e8e1cbb7291f77078bb612", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testWrongTokenType()", "signatureAfterChange": "      @Test     public void testWrongTokenType()", "diff": ["-        MutableExceptionCheck obj = new MutableExceptionCheck();", "-        DetailAST ast = new DetailAST();", "+        final MutableExceptionCheck obj = new MutableExceptionCheck();", "+        final DetailAST ast = new DetailAST();"]}]}