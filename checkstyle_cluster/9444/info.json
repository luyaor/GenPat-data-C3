{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e7aceda6d2fe9139b9ebdb5791a20fd", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95dd9d90b708aae80f109a1120709b2e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public int compareTo(Object aOther)", "signatureAfterChange": "     public int compareTo(LocalizedMessage aOther)", "diff": ["-    public int compareTo(Object aOther)", "+    public int compareTo(LocalizedMessage aOther)", "-        final LocalizedMessage lt = (LocalizedMessage) aOther;", "-        if (getLineNo() == lt.getLineNo()) {", "-            if (getColumnNo() == lt.getColumnNo()) {", "-                return getMessage().compareTo(lt.getMessage());", "+        if (getLineNo() == aOther.getLineNo()) {", "+            if (getColumnNo() == aOther.getColumnNo()) {", "+                return getMessage().compareTo(aOther.getMessage());", "-            return (getColumnNo() < lt.getColumnNo()) ? -1 : 1;", "+            return (getColumnNo() < aOther.getColumnNo()) ? -1 : 1;", "-        return (getLineNo() < lt.getLineNo()) ? -1 : 1;", "+        return (getLineNo() < aOther.getLineNo()) ? -1 : 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5fa6f87273a760acadc4ad0f199e823", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "c0dfe4f3f2e4f88c12cce0fe595abb2e4081a4a0", "commitAfterChange": "29469b29d57869b0421bfb0e16439dd2767ed424", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r         public int compareTo(Object aObject)", "signatureAfterChange": "\r         public int compareTo(Tag aOther)", "diff": ["-        public int compareTo(Object aObject)\r", "+        public int compareTo(Tag aOther)\r", "-            final Tag other = (Tag) aObject;\r", "-            if (mFirstLine == other.mFirstLine) {\r", "-                return mLastLine - other.mLastLine;\r", "+            if (mFirstLine == aOther.mFirstLine) {\r", "+                return mLastLine - aOther.mLastLine;\r", "-            return (mFirstLine - other.mFirstLine);\r", "+            return (mFirstLine - aOther.mFirstLine);\r"]}]}