{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc52afc81b9d4023693d68c6f15fa294", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "079362fa8b29bd44e6f91bf8e9707f1b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheckTest.java", "commitBeforeChange": "dd7935491a4d88781a8d95e642324f7c9c0ef7eb", "commitAfterChange": "9ce956473be0ec029ee6738fb284659c17698518", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testLogIOException() throws Exception", "signatureAfterChange": "      @Test     public void testLogIOException() throws Exception", "diff": ["-        logIOException.invoke(check, new IOException(), new File(\"\"));", "+        logIOException.invoke(check, new IOException(\"test exception\"), new File(\"\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e904db988f072a1e1497ffe07141184", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/SeverityLevelCounterTest.java", "commitBeforeChange": "b43c32ad0a3674fcda782d2e28d0975b72382470", "commitAfterChange": "2071f9b5421f853e8515f309b2874399c895c43a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAddExceptionWarning()", "signatureAfterChange": "      @Test     public void testAddExceptionWarning()", "diff": ["-        counter.addException(event, new IllegalStateException());", "+        counter.addException(event, new IllegalStateException(\"Test IllegalStateException\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd34e6caa0f93fccfb43ab53753a8b2c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/SeverityLevelCounterTest.java", "commitBeforeChange": "b43c32ad0a3674fcda782d2e28d0975b72382470", "commitAfterChange": "2071f9b5421f853e8515f309b2874399c895c43a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testAddException()", "signatureAfterChange": "      @Test     public void testAddException()", "diff": ["-        counter.addException(event, new IllegalStateException());", "+        counter.addException(event, new IllegalStateException(\"Test IllegalStateException\"));"]}]}