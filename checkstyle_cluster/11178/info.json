{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea4ccf02a61fe9696eade19be3e16081", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac1c071f0ee99e44fefe9ddbf599ee34", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/WhitespaceAroundCheck.java", "commitBeforeChange": "672244cf2f75c7425087a69beafe1133a45f130b", "commitAfterChange": "aa1032931c3bcb327e77c5d21f63f48a27e947a5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public int[] getDefaultTokens()", "signatureAfterChange": "     public int[] getDefaultTokens()", "diff": ["-            TokenTypes.RCURLY,            // '}'", "-            TokenTypes.QUESTION,          // '?'", "-            TokenTypes.COLON,             // ':' TODO: dont flag after \"case\"", "-            TokenTypes.ASSIGN,            // '='", "-            TokenTypes.EQUAL,             // \"==\"", "-            TokenTypes.NOT_EQUAL,         // \"!=\"", "-            TokenTypes.DIV,               // '/'", "-            TokenTypes.DIV_ASSIGN,        // \"/=\"", "-            TokenTypes.PLUS,              //' +' (unaray plus is UNARY_PLUS)", "-            TokenTypes.PLUS_ASSIGN,       // \"+=\"", "-            TokenTypes.MINUS,             // '-' (unary minus is UNARY_MINUS)", "-            TokenTypes.MINUS_ASSIGN,      //\"-=\"", "-            TokenTypes.STAR,              // '*'", "-            TokenTypes.STAR_ASSIGN,       // \"*=\"", "-            TokenTypes.MOD,               // '%'", "-            TokenTypes.MOD_ASSIGN,        // \"%=\"", "-            TokenTypes.SR,                // \">>\"", "-            TokenTypes.SR_ASSIGN,         // \">>=\"", "-            TokenTypes.BSR,               // \">>>\"", "-            TokenTypes.BSR_ASSIGN,        // \">>>=\"", "-            TokenTypes.GE,                // \">=\"", "-            TokenTypes.GT,                // \">\"", "-            TokenTypes.SL,                // \"<<\"", "-            TokenTypes.SL_ASSIGN,         // \"<<=\"", "-            TokenTypes.LE,                // \"<=\"", "-            TokenTypes.LT,                // '<'", "-            TokenTypes.BXOR,              // '^'", "-            TokenTypes.BXOR_ASSIGN,       // \"^=\"", "-            TokenTypes.BOR,               // '|'", "-            TokenTypes.BOR_ASSIGN,        // \"|=\"", "-            TokenTypes.LOR,               // \"||\"", "-            TokenTypes.BAND,              // '&'", "-            TokenTypes.BAND_ASSIGN,       // \"&=\"", "-            TokenTypes.LAND,              // \"&&\"", "+            TokenTypes.ASSIGN,", "+            TokenTypes.BAND,", "+            TokenTypes.BAND_ASSIGN,", "+            TokenTypes.BOR,", "+            TokenTypes.BOR_ASSIGN,", "+            TokenTypes.BSR,", "+            TokenTypes.BSR_ASSIGN,", "+            TokenTypes.BXOR,", "+            TokenTypes.BXOR_ASSIGN,", "+            TokenTypes.COLON, // TODO: dont flag after \"case\"", "+            TokenTypes.DIV,", "+            TokenTypes.DIV_ASSIGN,", "+            TokenTypes.EQUAL,", "+            TokenTypes.GE,", "+            TokenTypes.GT,", "+            TokenTypes.LAND,", "+            TokenTypes.LCURLY,", "+            TokenTypes.LE,", "+            TokenTypes.LOR,", "+            TokenTypes.LT,", "+            TokenTypes.MINUS,", "+            TokenTypes.MINUS_ASSIGN,", "+            TokenTypes.MOD,", "+            TokenTypes.MOD_ASSIGN,", "+            TokenTypes.NOT_EQUAL,", "+            TokenTypes.PLUS,", "+            TokenTypes.PLUS_ASSIGN,", "+            TokenTypes.QUESTION,", "+            TokenTypes.RCURLY,", "+            TokenTypes.SL,", "+            TokenTypes.SL_ASSIGN,", "+            TokenTypes.SR,", "+            TokenTypes.SR_ASSIGN,", "+            TokenTypes.STAR,", "+            TokenTypes.STAR_ASSIGN,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9ddea4c53d70aafb16b5f2388ac6473", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d4f1261a61913b28d746aeb929bd23f372372a4c", "commitAfterChange": "fdd9ae82975be0bf0d8df991a50bad10b660aa2c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "       public void testWhitespace()         throws Exception", "signatureAfterChange": "       public void testWhitespace()         throws Exception", "diff": ["-            filepath + \":14: '=' is not proceeded with whitespace.\",", "-            filepath + \":16: '=' is not proceeded with whitespace.\",", "+            filepath + \":14: '=' is not followed by whitespace.\",", "+            filepath + \":16: '=' is not followed by whitespace.\",", "-            filepath + \":25: '=' is not proceeded with whitespace.\",", "+            filepath + \":25: '=' is not followed by whitespace.\",", "-            filepath + \":26: '+=' is not proceeded with whitespace.\",", "-            filepath + \":27: '-=' is not proceeded with whitespace.\",", "-            filepath + \":27: '-' is proceeded with whitespace.\",", "-            filepath + \":27: '+' is proceeded with whitespace.\",", "+            filepath + \":26: '+=' is not followed by whitespace.\",", "+            filepath + \":27: '-=' is not followed by whitespace.\",", "+            filepath + \":27: '-' is followed by whitespace.\",", "+            filepath + \":27: '+' is followed by whitespace.\",", "-            filepath + \":29: '++' is proceeded with whitespace.\",", "-            filepath + \":29: '--' is proceeded with whitespace.\",", "-            filepath + \":35: 'synchronized' is not proceeded with whitespace.\",", "-            filepath + \":37: 'try' is not proceeded with whitespace.\",", "-            filepath + \":39: 'catch' is not proceeded with whitespace.\",", "-            filepath + \":56: 'if' is not proceeded with whitespace.\",", "-            filepath + \":74: 'return' is not proceeded with whitespace.\",", "+            filepath + \":29: '++' is followed by whitespace.\",", "+            filepath + \":29: '--' is followed by whitespace.\",", "+            filepath + \":35: 'synchronized' is not followed by whitespace.\",", "+            filepath + \":37: 'try' is not followed by whitespace.\",", "+            filepath + \":39: 'catch' is not followed by whitespace.\",", "+            filepath + \":56: 'if' is not followed by whitespace.\",", "+            filepath + \":74: 'return' is not followed by whitespace.\",", "-            filepath + \":95: '?' is not proceeded with whitespace.\",", "+            filepath + \":95: '?' is not followed by whitespace.\",", "-            filepath + \":95: ':' is not proceeded with whitespace.\",", "+            filepath + \":95: ':' is not followed by whitespace.\",", "-            filepath + \":96: '==' is not proceeded with whitespace.\",", "-            filepath + \":102: '*' is not proceeded with whitespace.\",", "+            filepath + \":96: '==' is not followed by whitespace.\",", "+            filepath + \":102: '*' is not followed by whitespace.\",", "-            filepath + \":109: '!' is proceeded with whitespace.\",", "-            filepath + \":110: '~' is proceeded with whitespace.\",", "+            filepath + \":109: '!' is followed by whitespace.\",", "+            filepath + \":110: '~' is followed by whitespace.\",", "-            filepath + \":118: '%' is not proceeded with whitespace.\",", "+            filepath + \":118: '%' is not followed by whitespace.\",", "-            filepath + \":119: '%' is not proceeded with whitespace.\",", "+            filepath + \":119: '%' is not followed by whitespace.\",", "-            filepath + \":122: '/' is not proceeded with whitespace.\",", "+            filepath + \":122: '/' is not followed by whitespace.\",", "-            filepath + \":123: '/' is not proceeded with whitespace.\",", "+            filepath + \":123: '/' is not followed by whitespace.\","]}]}