{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9242d1aa461b402d82a5278e191b4417", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52b9107e1e03980ae3fb35ea8dd295b0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/VerifierImpl.java", "commitBeforeChange": "bd7cfcb3e58603a5115829d5677267d71e75a731", "commitAfterChange": "1c35230164ef3745a246bb2d8a3f6fb116916221", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void verifyMethodJavadoc(MyModifierSet aMods,                                     MyCommonAST aReturnType,                                     MethodSignature aSig)", "signatureAfterChange": "     public void verifyMethodJavadoc(MyModifierSet aMods,                                     MyCommonAST aReturnType,                                     MethodSignature aSig)", "diff": ["+        // Always verify the parameters are ok", "+        for (Iterator it = aSig.getParams().iterator(); it.hasNext();) {", "+            verifyParameter((LineText)it.next());", "+        }", "+", "+", "+        // now check the javadoc", "-            : !\"void\".equals(aReturnType.getFirstChild().getText());", "+            : !\"void\".equals(aReturnType.getText().trim());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce63d090d416015bcd0d99ee78f80103", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/PackageHtmlCheck.java", "commitBeforeChange": "4ebf621616e3c9ea2284e7109d19abbbe1a94efc", "commitAfterChange": "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void process(File[] aFiles)", "signatureAfterChange": "     public void process(File[] aFiles)", "diff": ["-        final Set directories = getParentDirs(javaFiles);", "-        for (final Iterator it = directories.iterator(); it.hasNext();) {", "-            final File dir = (File) it.next();", "+        final Set<File> directories = getParentDirs(javaFiles);", "+        for (final Iterator<File> it = directories.iterator(); it.hasNext();) {", "+            final File dir = it.next();"]}]}