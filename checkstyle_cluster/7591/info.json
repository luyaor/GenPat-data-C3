{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "44588bf0fa3b44d7bb74e9dadab65dea", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72050f756aafef7b25fe42bd7069bd29", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "commitBeforeChange": "899f12f19f0f7684f4a93b0d200fd8bed7a84666", "commitAfterChange": "05211d164a1156c7d7b17e7cf72e49903bc532ac", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public OperatorWrapCheck()", "signatureAfterChange": "     public OperatorWrapCheck()", "diff": ["-        super(OperatorWrapOption.NL, OperatorWrapOption.class);", "+        super(WrapOption.NL, WrapOption.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8acc7854b4dbd8511daec9ea59ee1ddf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "b3133035a4fa0e086dfb0dfbefbc7f1540521bbc", "commitAfterChange": "add2bdfb27494bff5fa9c305d9782f57c6170b18", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void addError(AuditEvent aEvt)", "signatureAfterChange": "     public void addError(AuditEvent aEvt)", "diff": ["-    /** @see AuditListener **/", "-    public void addError(AuditEvent aEvt)", "-    {", "-        // Print an Emacs compliant line. If the column number is non zero,", "-        // then also display it.", "-        if (aEvt.getColumn() > 0) {", "-            mWriter.println(aEvt.getFileName()", "-                            + \":\" + aEvt.getLine()", "-                            + \":\" + aEvt.getColumn()", "-                            + \": \" + aEvt.getMessage());", "-            mWriter.println(aEvt.getFileName()", "-                            + \":\" + aEvt.getLine()", "-                            + \": \" + aEvt.getMessage());", "+     **/", "+    public void addError(AuditEvent aEvt)", "+    {", "+        if (aEvt.getColumn() > 0) {", "+            mErrorWriter.println(aEvt.getFileName()", "+                                 + \":\" + aEvt.getLine()", "+                                 + \":\" + aEvt.getColumn()", "+                                 + \": \" + aEvt.getMessage());", "+        }", "+        else {", "+            mErrorWriter.println(aEvt.getFileName()", "+                                 + \":\" + aEvt.getLine()", "+                                 + \": \" + aEvt.getMessage());"]}]}