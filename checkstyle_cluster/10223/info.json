{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a1726b5a6a30fdf1acd4eab6286804f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04befa27f514b318f0a3398f1bf8a37d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java", "commitBeforeChange": "839778122441a69ad3607375d9fe5a320499c1cd", "commitAfterChange": "b930ba24beb9c8c165b4ba1bf530cee4c2d87b0f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setTarget(String target)", "signatureAfterChange": "     public void setTarget(String target)", "diff": ["-        for (String type : target.split(\", \")) {", "-            customTarget.add(Utils.getTokenId(type));", "+        final String[] sTarget = target.split(\",\");", "+        for (int i = 0; i < sTarget.length; i++) {", "+            customTarget.add(Utils.getTokenId(sTarget[i].trim()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "077a8314fee6ecdbcfb3efd7b0ce9160", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     static void remove(Component c, boolean recursive)", "signatureAfterChange": "     static void remove(Component c, boolean recursive)", "diff": ["-            for (int i = 0; i < comps.length; i++) {", "-                remove(comps[i], recursive);", "+            for (Component element : comps) {", "+                remove(element, recursive);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12a00b5e5cd7e26b3cde620e2615fa71", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/PackageHtmlCheck.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected final Set<File> getParentDirs(File[] aFiles)", "signatureAfterChange": "     protected final Set<File> getParentDirs(File[] aFiles)", "diff": ["-        for (int i = 0; i < aFiles.length; i++) {", "-            final File f = aFiles[i].getAbsoluteFile();", "+        for (File element : aFiles) {", "+            final File f = element.getAbsoluteFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17785ee14d6668e6afe32ad66a5085a8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java", "commitBeforeChange": "0dc308ff69bce4d52ef76002bc4fe3988955ceb6", "commitAfterChange": "e6538f822f3fb690d01b3f27aabb6785d9732a29", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setTarget(String target)", "signatureAfterChange": "     public void setTarget(String target)", "diff": ["-        for (int i = 0; i < sTarget.length; i++) {", "-            customTarget.add(Utils.getTokenId(sTarget[i].trim()));", "+        for (String aSTarget : sTarget) {", "+            customTarget.add(Utils.getTokenId(aSTarget.trim()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18281f26a68158f2c72ef73ac470bcbb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "6a0bad784f056988b3b84b75baa397ac78102a24", "commitAfterChange": "7770f2a2c25c41bf024355f19caac358419110a6", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private static int compareImports(String import1, String import2)", "signatureAfterChange": "     private static int compareImports(String import1, String import2)", "diff": ["-        for (int i = 0; i < import1Tokens.length; i++) {", "-            if (i == import2Tokens.length) {", "-                break;", "-            }", "+        for (int i = 0; i < import1Tokens.length && i != import2Tokens.length; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a71cd5b6d6a694285c42340e0971a4a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void registerCheck(Check aCheck)         throws CheckstyleException", "signatureAfterChange": "     private void registerCheck(Check aCheck)         throws CheckstyleException", "diff": ["-        for (int i = 0; i < tokens.length; i++) {", "-            registerCheck(tokens[i], aCheck);", "+        for (int element : tokens) {", "+            registerCheck(element, aCheck);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f42534b4cdd3d945c4d3036e060b884", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private Checker createChecker()", "signatureAfterChange": "     private Checker createChecker()", "diff": ["-            for (int i = 0; i < listeners.length; i++) {", "-                c.addListener(listeners[i]);", "+            for (AuditListener element : listeners) {", "+                c.addListener(element);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "327a6477b0cb6530e03146c768cfbfa7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public boolean isReference(String aEnt)", "signatureAfterChange": "     public boolean isReference(String aEnt)", "diff": ["-        for (int i = 0; i < ENTITIES.length; i++) {", "-            if (name.equals(ENTITIES[i])) {", "+        for (String element : ENTITIES) {", "+            if (name.equals(element)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "339bdc1cc87a506c269b42bd0df46c16", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "37e93fff0cfec313e9a6e82a29b2dc71b1add664", "commitAfterChange": "835a5700d8d70436b198c80aba63f843da0b4dab", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setAllowedAnnotations(String userAnnotations)", "signatureAfterChange": "     public void setAllowedAnnotations(String userAnnotations)", "diff": ["-        Collections.addAll(annotations, userAnnotations.split(\", \"));", "+        final String[] sAnnotations = userAnnotations.split(\",\");", "+        for (int i = 0; i < sAnnotations.length; i++) {", "+            sAnnotations[i] = sAnnotations[i].trim();", "+        }", "+", "+        Collections.addAll(annotations, sAnnotations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38b15393f9f8657e784dc1e5450e5635", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java", "commitBeforeChange": "839778122441a69ad3607375d9fe5a320499c1cd", "commitAfterChange": "b930ba24beb9c8c165b4ba1bf530cee4c2d87b0f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setTagOrder(String order)", "signatureAfterChange": "     public void setTagOrder(String order)", "diff": ["-        Collections.addAll(customOrder, order.split(\", \"));", "-        tagOrder = customOrder;", "+        final String[] sOrder = order.split(\",\");", "+        for (int i = 0; i < sOrder.length; i++) {", "+            customOrder.add(sOrder[i].trim());", "+        }", "+        this.tagOrder = customOrder;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e8ea7e0fd6ff6eb2b135c654c18053a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setAllowedAnnotations(String aAnnotations)", "signatureAfterChange": "     public void setAllowedAnnotations(String userAnnotations)", "diff": ["-    public void setAllowedAnnotations(String aAnnotations)", "+    public void setAllowedAnnotations(String userAnnotations)", "-        for (String annotation : aAnnotations.split(\", \")) {", "+        for (String annotation : userAnnotations.split(\", \")) {", "-        mAllowedAnnotations = annotations;", "+        allowedAnnotations = annotations;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "498b89cb4fbbd4c7963ec4963e423944", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public void process(File[] aFiles)", "signatureAfterChange": "     public void process(File[] aFiles)", "diff": ["-        for (int i = 0; i < javaFiles.length; i++) {", "-            process(javaFiles[i]);", "+        for (File element : javaFiles) {", "+            process(element);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5823a409fac73ee5d6e179c4063bd971", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "       private void makeDropTarget(final Component c, boolean recursive)             throws TooManyListenersException", "signatureAfterChange": "       private void makeDropTarget(final Component c, boolean recursive)             throws TooManyListenersException", "diff": ["-            for (int i = 0; i < comps.length; i++)", "-                makeDropTarget(comps[i], recursive);", "+            for (Component element : comps)", "+                makeDropTarget(element, recursive);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c39537492d5a29af6cd6390c65154fc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/IllegalImportCheck.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean isIllegalImport(String aImportText)", "signatureAfterChange": "     private boolean isIllegalImport(String aImportText)", "diff": ["-        for (int i = 0; i < mIllegalPkgs.length; i++) {", "-            if (aImportText.startsWith(mIllegalPkgs[i] + \".\")) {", "+        for (String element : mIllegalPkgs) {", "+            if (aImportText.startsWith(element + \".\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fcee127f37663c452be8318db5eeb3c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java", "commitBeforeChange": "0dc308ff69bce4d52ef76002bc4fe3988955ceb6", "commitAfterChange": "e6538f822f3fb690d01b3f27aabb6785d9732a29", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setTagOrder(String order)", "signatureAfterChange": "     public void setTagOrder(String order)", "diff": ["-        for (int i = 0; i < sOrder.length; i++) {", "-            customOrder.add(sOrder[i].trim());", "+        for (String aSOrder : sOrder) {", "+            customOrder.add(aSOrder.trim());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "646ae63fcce810c49e678cadd4c2da77", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static void traverse(File aNode, List<File> aFiles)", "signatureAfterChange": "     private static void traverse(File aNode, List<File> aFiles)", "diff": ["-                for (int i = 0; i < nodes.length; i++) {", "-                    traverse(nodes[i], aFiles);", "+                for (File element : nodes) {", "+                    traverse(element, aFiles);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88b6a8e075fa80a76c05a0c6438aac71", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected File[] scanFileSets()", "signatureAfterChange": "     protected File[] scanFileSets()", "diff": ["-            for (int j = 0; j < names.length; j++) {", "+            for (String element : names) {", "-                        + names[j];", "+                        + element;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c8169617359129891a09b2058df2f0f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "       public void openFile(File aFile, final Component aParent)", "signatureAfterChange": "       public void openFile(File aFile, final Component aParent)", "diff": ["-                for (int i = 0; i < sourceLines.length; i++) {", "-                    mJTextArea.append(sourceLines[i] + \"\\n\");", "+                for (String element : sourceLines) {", "+                    mJTextArea.append(element + \"\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ba741402c1bc5a070e8ee47d8fc45f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IllegalImportCheck.java", "commitBeforeChange": "e52c0ac5417459612b64b564150bb6487d5ce504", "commitAfterChange": "9118f376bee8c9281c4458b96fbda8f3ff49bbdc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setIllegalPkgs(String[] aFrom)", "signatureAfterChange": "     public void setIllegalPkgs(String[] aFrom)", "diff": ["-        mIllegalPkgs.clear();", "-        for (int i = 0; i < aFrom.length; i++) {", "-            final String s = aFrom[i];", "-            mIllegalPkgs.add(s);", "-        }", "+        mIllegalPkgs = aFrom;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a581695bc738101753d708f0ad3f150d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "commitAfterChange": "26513d52336c42432ee21565b253297ba4174530", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void openFile(File file, final Component parent)", "signatureAfterChange": "      public void openFile(File file, final Component parent)", "diff": ["-                    textArea.append(element + \"\\n\");", "+                    textArea.append(element + System.lineSeparator());", "-                    textArea.append(element + \"\\n\");", "+                    textArea.append(element + System.lineSeparator());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7bd1588d981e1ae538b4fb9489ac854", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "a1706551793b62548d9dcc93731b656f07b125a4", "commitAfterChange": "00fb7f0c1852eb015933c7c121284597de29caad", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public void process(File[] aFiles)", "signatureAfterChange": "     public void process(File[] aFiles)", "diff": ["-        for (int i = 0; i < aFiles.length; i++) {", "-            process(aFiles[i]);", "+        File[] javaFiles = filter(aFiles);", "+", "+        for (int i = 0; i < javaFiles.length; i++) {", "+            process(javaFiles[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9a370e7389d3b7ab7b2c5993b9f7310", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void setConfigLocation(String aLocation)", "signatureAfterChange": "     private void setConfigLocation(String location)", "diff": ["-    private void setConfigLocation(String aLocation)", "+    private void setConfigLocation(String location)", "-        if (mConfigLocation != null) {", "+        if (configLocation != null) {", "-        mConfigLocation = aLocation;", "+        configLocation = location;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c27442bbbc413948d4ecf4bd0e509f55", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/SeparatorWrapCheck.java", "commitBeforeChange": "30438ebdf9fd28a94613e2aaecde776d906349a7", "commitAfterChange": "5c9e55ae70af0456e1634211ccac54c40a92cfba", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                && substringBeforeToken.length() == 0) {", "+                && substringBeforeToken.isEmpty()) {", "-                 && substringAfterToken.length() == 0) {", "+                 && substringAfterToken.isEmpty()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c956f37516c1f2f22641d5ce435ae8e3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SingleLineJavadocCheck.java", "commitBeforeChange": "0dc308ff69bce4d52ef76002bc4fe3988955ceb6", "commitAfterChange": "e6538f822f3fb690d01b3f27aabb6785d9732a29", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setIgnoredTags(String tags)", "signatureAfterChange": "     public void setIgnoredTags(String tags)", "diff": ["-        for (int i = 0; i < sTags.length; i++) {", "-            ignoredTags.add(sTags[i].trim());", "+        for (String sTag : sTags) {", "+            ignoredTags.add(sTag.trim());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4b8115ae938cd5a022753506b8923cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Override     public int hashCode()", "signatureAfterChange": "     @Override     public int hashCode()", "diff": ["-        for (int i = 0; i < mArgs.length; i++) {", "-            result = HASH_MULT * result + mArgs[i].hashCode();", "+        for (Object element : mArgs) {", "+            result = HASH_MULT * result + element.hashCode();"]}]}