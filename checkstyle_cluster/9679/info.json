{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f388e4474aba5ab9e17234183d51284", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dc9d38504b1895b44480ce744786840", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "commitAfterChange": "4c1148db9982918e65f8d1156e8fb9c07b206fc9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void reportCComment(int startLineNo, int startColNo,             int endLineNo, int endColNo)", "signatureAfterChange": "     public void reportCComment(int startLineNo, int startColNo,             int endLineNo, int endColNo)", "diff": ["-        final String[] cc = extractCComment(startLineNo, startColNo,", "+        final String[] cComment = extractCComment(startLineNo, startColNo,", "-        final Comment comment = new Comment(cc, startColNo, endLineNo,", "+        final Comment comment = new Comment(cComment, startColNo, endLineNo,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e141314e2f6b845b634a2ba32edf4b2b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/CommentSuppressor.java", "commitBeforeChange": "8a6f12d9e9f4f5e9f9b9a04dfa5be8d42ad747c7", "commitAfterChange": "331992aacd23576c72862ea75d83f15e09af958c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public boolean shouldSuppress(int startLineNo, int startColNo,             int endLineNo, int endColNo)", "signatureAfterChange": "      @Override     public boolean shouldSuppress(int startLineNo, int startColNo,             int endLineNo, int endColNo)", "diff": ["+", "-        return currentContents != null", "-                && currentContents.hasIntersectionWithComment(startLineNo,", "-                        startColNo, endLineNo, endColNo);", "+        return currentContents", "+                .hasIntersectionWithComment(startLineNo, startColNo, endLineNo, endColNo);"]}]}