{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "03bb010a8e4e490a0990f961a1aa839a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a8af59d752f0c2f655aaa4acdd85f65", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void countTokens(AST aAST, int aDepth)", "signatureAfterChange": "     private void countTokens(AST ast, int depth)", "diff": ["-    private void countTokens(AST aAST, int aDepth)", "+    private void countTokens(AST ast, int depth)", "-        if (aDepth <= mMaximumDepth) {", "+        if (depth <= maximumDepth) {", "-            if (aDepth >= mMinimumDepth) {", "-                final int type = aAST.getType();", "-                if (type <= mCounts.length) {", "-                    mCounts[type - 1]++;", "+            if (depth >= minimumDepth) {", "+                final int type = ast.getType();", "+                if (type <= counts.length) {", "+                    counts[type - 1]++;", "-            AST child = aAST.getFirstChild();", "-            final int nextDepth = aDepth + 1;", "+            AST child = ast.getFirstChild();", "+            final int nextDepth = depth + 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beaa3a0346f030fe8c77202cfdaffe26", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 36, "signatureBeforeChange": "     public void setTypePattern(String aPat)", "signatureAfterChange": "     public void setTypePattern(final String aPat)", "diff": ["-    public void setTypePattern(String aPat)", "+    public void setTypePattern(final String aPat)", "-        try {", "-            mConfig.setTypePat(aPat);", "-        }", "-        catch (RESyntaxException ex) {", "-            throw new BuildException(\"Unable to parse typePattern - \", ex);", "-        }", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    try {", "+                        mConfig.setTypePat(aPat);", "+                    }", "+                    catch (RESyntaxException ex) {", "+                        throw new BuildException(", "+                            \"Unable to parse typePattern - \", ex);", "+                    }", "+                }", "+            });"]}]}