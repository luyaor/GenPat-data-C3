{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7eeeaa730a09687084b33a6b1e49d812", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c64cb12fb75e42835dece536aa9ffcd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final int tokenType = aAST.getType();", "+        final int tokenType = ast.getType();", "-            mCounters.push(new Counter());", "+            counters.push(new Counter());", "-        if (isCountable(aAST)) {", "+        if (isCountable(ast)) {", "-            for (final Counter c : mCounters) {", "+            for (final Counter c : counters) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c23a3db4bbdade6061e4830db49e4bd0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/MethodParamPadCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if ((aAST.getType() == TokenTypes.METHOD_CALL)) {", "-            parenAST = aAST;", "+        if ((ast.getType() == TokenTypes.METHOD_CALL)) {", "+            parenAST = ast;", "-            parenAST = aAST.findFirstToken(TokenTypes.LPAREN);", "+            parenAST = ast.findFirstToken(TokenTypes.LPAREN);", "-            if (!mAllowLineBreaks) {", "+            if (!allowLineBreaks) {"]}]}