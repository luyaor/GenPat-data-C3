{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "877fef826b25307499dacbfc8697f7c5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c92aaa517889f25a92a6829e716bda1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "260d2b935c0b25688a11077ada9405b791857fd8", "commitAfterChange": "ad42ed29799a13b9426a05cc94b4a4aaba709c2c", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Test     public void testStaticGroupsOrderAbove() throws Exception", "signatureAfterChange": "      @Test     public void testStaticGroupsOrderAbove() throws Exception", "diff": ["-        checkConfig.addAttribute(\"groups\", \"org, java\");", "+        checkConfig.addAttribute(\"groups\", \"org, java, sun\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6508b4d78cbd1ce276ccbf7469b7b690", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule527localvariablenames/LocalVariableNameTest.java", "commitBeforeChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "commitAfterChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void localVariableNameTest() throws Exception", "signatureAfterChange": "      @Test     public void localVariableNameTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"LocalVariableNameInput_Simple\");", "+        final String filePath = builder.getFilePath(\"InputLocalVariableNameSimple\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d217a9019e18d21cf911ff6cc05895d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyBlockTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void emptyBlockTestCatch() throws Exception", "signatureAfterChange": "      @Test     public void emptyBlockTestCatch() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"EmptyBlockInputCatch\");", "+        final String filePath = builder.getFilePath(\"InputEmptyBlockCatch\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4b51ea35cd36cad5bc32e7a60608219", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testMemberExcludes()         throws Exception", "signatureAfterChange": "      @Test     public void testMemberExcludes()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAvoidStaticImportCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAvoidStaticImport.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bda1c5298910a8947e2ddf0a692a8e69", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/NoFinalizerCheckTest.java", "commitBeforeChange": "7dfac0f667e848d2642ee5b5e8fd11cd908aca62", "commitAfterChange": "3c63c31901ca2e6714fe922f695135718198dd06", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testHasNoFinalizer()         throws Exception", "signatureAfterChange": "      @Test     public void testHasNoFinalizer()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"coding/InputIllegalThrowsCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"coding/InputFallThrough.java\"), expected);"]}]}