{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af92a1b9f3278e95367879a8c086962a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "231e11133570fc7c88a4a1f0f566b3be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void realExecute()", "signatureAfterChange": "     private void realExecute()", "diff": ["-        if ((mFileName == null) && mFileSets.isEmpty()) {", "+        if ((fileName == null) && fileSets.isEmpty()) {", "-        if (mConfigLocation == null) {", "+        if (configLocation == null) {", "-            log(\"Using configuration \" + mConfigLocation, Project.MSG_VERBOSE);", "+            log(\"Using configuration \" + configLocation, Project.MSG_VERBOSE);", "-            final boolean ok = (numErrs <= mMaxErrors)", "-                    && (numWarnings <= mMaxWarnings);", "+            final boolean ok = (numErrs <= maxErrors)", "+                    && (numWarnings <= maxWarnings);", "-                if (mFailureProperty != null) {", "-                    getProject().setProperty(mFailureProperty, failureMsg);", "+                if (failureProperty != null) {", "+                    getProject().setProperty(failureProperty, failureMsg);", "-                if (mFailOnViolation) {", "+                if (failOnViolation) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8e683304ca9b2f1779d0162ee090276", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractAccessControlNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected boolean shouldCheckInScope(DetailAST aModifiers)", "signatureAfterChange": "     protected boolean shouldCheckInScope(DetailAST modifiers)", "diff": ["-    protected boolean shouldCheckInScope(DetailAST aModifiers)", "+    protected boolean shouldCheckInScope(DetailAST modifiers)", "-        if (aModifiers == null) {", "+        if (modifiers == null) {", "-            return mApplyToPackage;", "+            return applyToPackage;", "-        final boolean isPublic = aModifiers", "+        final boolean isPublic = modifiers", "-        final boolean isProtected = aModifiers", "+        final boolean isProtected = modifiers", "-        final boolean isPrivate = aModifiers", "+        final boolean isPrivate = modifiers", "-        return (mApplyToPublic && isPublic)", "-                || (mApplyToProtected && isProtected)", "-                || (mApplyToPackage && isPackage)", "-                || (mApplyToPrivate && isPrivate);", "+        return (applyToPublic && isPublic)", "+                || (applyToProtected && isProtected)", "+                || (applyToPackage && isPackage)", "+                || (applyToPrivate && isPrivate);"]}]}