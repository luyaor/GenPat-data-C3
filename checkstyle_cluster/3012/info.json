{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "245b421b4640f05412cb69ecfe5e709f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bc34e2b4632b7444d6bcb6dab964054", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheckTest.java", "commitBeforeChange": "5d698f4a58b66958b13cb04735fefa3f4fa4b9e7", "commitAfterChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIt() throws Exception", "signatureAfterChange": "     @Test     public void testIt() throws Exception", "diff": ["-            \"46:5: Method 'doh' is not designed for extension - needs to be abstract, final or empty.\",", "-            \"54:5: Method 'aNativeMethod' is not designed for extension - needs to be abstract, final or empty.\",", "+            \"46:5: \" + getCheckMessage(MSG_KEY, \"doh\"),", "+            \"54:5: \" + getCheckMessage(MSG_KEY, \"aNativeMethod\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed4db9f303db06de31a785205222e4b0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "ba4d62dc78cf7a648771b1be9646cac4bab27676", "commitAfterChange": "677acc1e8491acffd24c859e553b06362da0d471", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIgnoreMethodNames() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreMethodNames() throws Exception", "diff": ["-            \"16:13: Declaring variables, return values or parameters of type 'java.util.Hashtable' is not allowed.\",", "+            \"16:13: Declaring variables, return values or parameters of type 'java.util.TreeSet' is not allowed.\","]}]}