{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7c4da91c9e9cef773302aa4f3ce9804", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ae71936a3e39cb4f81c26097ce0b7aa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "87ef77fe452f7821066ad4906e1c0cf643fa1334", "commitAfterChange": "09f1ba2f35f928d4377637fa284d1ac334617a22", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-        //we do not want to check colon for cases and defaults", "-        if ((type == TokenTypes.COLON)", "-            && ((parentType == TokenTypes.LITERAL_DEFAULT)", "-                || (parentType == TokenTypes.LITERAL_CASE)))", "-        {", "-            return;", "+        if ((type == TokenTypes.COLON)) {", "+            //we do not want to check colon for cases and defaults", "+            if (parentType == TokenTypes.LITERAL_DEFAULT", "+                || parentType == TokenTypes.LITERAL_CASE)", "+            {", "+                return;", "+            }", "+            else if (parentType == TokenTypes.FOR_EACH_CLAUSE", "+                && this.mIgnoreEnhancedForColon)", "+            {", "+                return;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38cf23a1c66f8e44d05bd9dbbe1a6788", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RightCurlyCheck.java", "commitBeforeChange": "476a7dd02fcecea5a991772080b36470ab3d4166", "commitAfterChange": "7f9839943c55dbff0b1d42661fb312b625d35228", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["+        // handle if-then-else without curlies:", "+        // if (cond)", "+        //     return 1;", "+        // else", "+        //     return 2;", "+        if (rcurly == null || rcurly.getType() != TokenTypes.RCURLY) {", "+            return;", "+        }", "+", "-        if ((rcurly != null) && (nextToken != null)) {", "+        if (nextToken != null) {"]}]}