{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69e1264cb2d746fbb0d55c2a83c9a56b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75535a484bef1830c980ac80fe916284", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/HeaderCheck.java", "commitBeforeChange": "46146514c3c40ee8077578ad39f1289395afb3de", "commitAfterChange": "0340dcb26d5db9625e8e1f093f39165b8bdb18bf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected boolean isMatch(int aLineNumber)", "signatureAfterChange": "     protected boolean isMatch(int aLineNumber)", "diff": ["-        final String[] lines = getLines();", "-        return mHeaderLines[aLineNumber].equals(lines[aLineNumber]);", "-    }", "+        final String line = getLines()[aLineNumber];", "+        // skip lines we are meant to ignore", "+        return isIgnoreLine(aLineNumber + 1)", "+            || getHeaderLines()[aLineNumber].equals(line);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1fce081e680d71190c17329af08c6b4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RegexpHeaderCheck.java", "commitBeforeChange": "46146514c3c40ee8077578ad39f1289395afb3de", "commitAfterChange": "0340dcb26d5db9625e8e1f093f39165b8bdb18bf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected boolean isMatch(int aLineNumber)", "signatureAfterChange": "     private boolean isMatch(int aLineNo, int aHeaderLineNo)", "diff": ["-    /** @see HeaderCheck */", "-    protected boolean isMatch(int aLineNumber)", "+     */", "+    private boolean isMatch(int aLineNo, int aHeaderLineNo)", "-        final String[] lines = getLines();", "-        return mHeaderRegexps[aLineNumber].match(lines[aLineNumber]);", "+        final String line = getLines()[aLineNo];", "+        return mHeaderRegexps[aHeaderLineNo].match(line);", "+    }"]}]}