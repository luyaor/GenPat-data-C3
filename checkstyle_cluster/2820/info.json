{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d2a21ff75094937cf9e646463b1bbfab", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a50c1556d9d427134eef622c50ad88d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/AbstractUsageCheck.java", "commitBeforeChange": "b3ffae34fdb31aa74aee4e58fe07cb8d8915ac70", "commitAfterChange": "7728bbad2df48a48d31879ecf215127d624534d3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private int getReferenceCount(DetailAST aAST)", "signatureAfterChange": "     private int getReferenceCount(DetailAST aAST)", "diff": ["+        if (ident == null) {", "+            return 0;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b14fc0e5e537711f2216b58889d01b6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java", "commitBeforeChange": "2a587d52747ba29050509a2028c53072ef36e867", "commitAfterChange": "b9f232ffe08853fbfd0239d53d683d4fe5c6b817", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean hasEmptyLineBefore(DetailAST token)", "signatureAfterChange": "     private boolean hasEmptyLineBefore(DetailAST token)", "diff": ["+        if (lineNo == 1) {", "+            return false;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9115183cfb37eb8442a50a7130ed5a2d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "829cb74749cc8233e5052839067f5dc1c9be61ae", "commitAfterChange": "53f37c17b3f75843a4880540f01fbbd6b03eacf9", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public boolean accept(AuditEvent aEvent)", "signatureAfterChange": "     public boolean accept(AuditEvent aEvent)", "diff": ["+        if (currentContents == null) {", "+            // we have no contents, so we can not filter.", "+            // TODO: perhaps we should notify user somehow?", "+            return true;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a12fc7231f99ae057da0581bc9108d3c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "6f1f7bd3fdcca84404e97964b3e48de6db5024ec", "commitAfterChange": "20a7915f5f06d2056e50672bf4681978e130000b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean checkSlist(final DetailAST aAST, boolean aUseBreak,                                boolean aUseContinue)", "signatureAfterChange": "     private boolean checkSlist(final DetailAST aAST, boolean aUseBreak,                                boolean aUseContinue)", "diff": ["+        if (lastStmt == null) {", "+            // if last case in switch is empty then slist is empty", "+            // since this is a last case it is not a fall-through", "+            return true;", "+        }"]}]}