{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "93a791bdabb3704f3f63fad20c789c37", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e84fe0518546c667e6c9433d8bf172dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/CSVFilterTest.java", "commitBeforeChange": "ff6c49e6a715d8372ac77a34aa77d9eaff6db154", "commitAfterChange": "911065320fb39299f442ea08f775cfe08ba2a2ed", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testDecideRangePlusValue()", "signatureAfterChange": "      @Test     public void testDecideRangePlusValue()", "diff": ["-        assertFalse(\"less than\", filter.accept(new Integer(-1)));", "-        assertTrue(\"equal 0\", filter.accept(new Integer(0)));", "-        assertTrue(\"equal 1\", filter.accept(new Integer(1)));", "-        assertTrue(\"equal 2\", filter.accept(new Integer(2)));", "-        assertFalse(\"greater than\", filter.accept(new Integer(3)));", "-        assertTrue(\"equal 10\", filter.accept(new Integer(10)));", "+        assertFalse(\"less than\", filter.accept(Integer.valueOf(-1)));", "+        assertTrue(\"equal 0\", filter.accept(Integer.valueOf(0)));", "+        assertTrue(\"equal 1\", filter.accept(Integer.valueOf(1)));", "+        assertTrue(\"equal 2\", filter.accept(Integer.valueOf(2)));", "+        assertFalse(\"greater than\", filter.accept(Integer.valueOf(3)));", "+        assertTrue(\"equal 10\", filter.accept(Integer.valueOf(10)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1437b0c5899d5305b877ca14a4d23f0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/CSVFilterTest.java", "commitBeforeChange": "a5df850a2343050a535be52d7ddf119c337f9695", "commitAfterChange": "1079f0ab995bc25218f9e38af7968552f26a5df5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testDecideRangePlusValue()", "signatureAfterChange": "      @Test     public void testDecideRangePlusValue()", "diff": ["-        assertFalse(\"less than\", filter.accept(Integer.valueOf(-1)));", "-        assertTrue(\"equal 0\", filter.accept(Integer.valueOf(0)));", "-        assertTrue(\"equal 1\", filter.accept(Integer.valueOf(1)));", "-        assertTrue(\"equal 2\", filter.accept(Integer.valueOf(2)));", "-        assertFalse(\"greater than\", filter.accept(Integer.valueOf(3)));", "-        assertTrue(\"equal 10\", filter.accept(Integer.valueOf(10)));", "+        assertFalse(\"less than\", filter.accept(-1));", "+        assertTrue(\"equal 0\", filter.accept(0));", "+        assertTrue(\"equal 1\", filter.accept(1));", "+        assertTrue(\"equal 2\", filter.accept(2));", "+        assertFalse(\"greater than\", filter.accept(3));", "+        assertTrue(\"equal 10\", filter.accept(10));"]}]}