{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d629e0c4f085b88bd8022eac202c662", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3864dc59ee18c893528a08d26461caa7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AbstractViolationReporter.java", "commitBeforeChange": "36d1d1bd0f1375a8685fb90331e0190918bf8a92", "commitAfterChange": "3bf83180c94eb14314d929682b260d1ce43eadb3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected String getMessageBundle()", "signatureAfterChange": "     protected String getMessageBundle()", "diff": ["-        final int endIndex = className.lastIndexOf('.');", "-        final String packageName = className.substring(0, endIndex);", "-        return packageName + \".\" + \"messages\";", "+        return getMessageBundle(className);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e1f2dc1a397573a264232af4cda1da7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/CovariantEqualsCheck.java", "commitBeforeChange": "e03dd7a0a03f9cf91e466ebee911ef0fa10130a4", "commitAfterChange": "9eb27f99a33fb67020c697bc2e4c5643aee0ae03", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            final DetailAST definer = getDefiner(aAST);", "-            final int type = definer.getType();", "-            if ((type == TokenTypes.CLASS_DEF)", "-                || (type == TokenTypes.LITERAL_NEW))", "-            {", "+            if (isEqualsMethod(aAST) && !ScopeUtils.inInterfaceBlock(aAST)) {", "+                final DetailAST definer = getDefiner(aAST);", "-                final ClassAttributes attrs =", "-                        (ClassAttributes) mClassStack.getLast();", "+                ClassAttributes attrs =", "+                    (ClassAttributes) mClassStack.getLast();", "-                    mClassStack.add(new ClassAttributes(definer));", "+                    final ClassAttributes definerAttrs =", "+                        new ClassAttributes(definer);", "+                    mClassStack.add(definerAttrs);", "+                    attrs = definerAttrs;", "-                if (!ScopeUtils.inInterfaceBlock(aAST)", "-                    && isEqualsMethod(aAST))", "-                {", "-                    if (hasObjectParameter(aAST)) {", "-                        attrs.setHasEqualsObject();", "-                    }", "-                    else {", "-                        attrs.addEqualsNode(aAST);", "-                    }", "+                if (hasObjectParameter(aAST)) {", "+                    attrs.setHasEqualsObject();", "+                }", "+                else {", "+                    attrs.addEqualsNode(aAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd8b887f79d4b287f48b6fbe34181ef6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "bdda55ed1b207cab5e7f8ab3e6ebfb4d07a62a5a", "commitAfterChange": "b4cec8170a1d89159620b327a453ce13215d4eea", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            DetailAST astNode = ast.getParent();", "-            while (astNode != constantDefAST) {", "-                final int type = astNode.getType();", "-                if (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) < 0) {", "-                    reportMagicNumber(ast);", "-                    break;", "-                }", "+            final boolean found = isMagicNumberExists(ast, constantDefAST);", "+            if (found) {", "+                reportMagicNumber(ast);", "-                astNode = astNode.getParent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f81f12d12987c5463e35748ad56e2e8b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "6d20b67e0f1bfedc2132a887257d72edde4c857b", "commitAfterChange": "99f8726600ebd9f73b86eacf5e44d0335266d8fc", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static String encode(String value)", "signatureAfterChange": "     public static String encode(String value)", "diff": ["-                    final int nextSemi = value.indexOf(';', i);", "-                    if (nextSemi < 0", "-                        || !isReference(value.substring(i, nextSemi + 1))) {", "-                        sb.append(\"&amp;\");", "-                    }", "-                    else {", "-                        sb.append('&');", "-                    }", "+                    sb.append(encodeAmpersend(value, i));"]}]}