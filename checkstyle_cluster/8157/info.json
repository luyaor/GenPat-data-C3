{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23d53cb2afd69aae342ebda11a9dcc77", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a76561f9a42da5589a1f99f085fbc0e5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/PkgControlTest.java", "commitBeforeChange": "a2c4566348d41c5eed923c33670cb48bf30c951b", "commitAfterChange": "e292d5fa53a78828d45565e27d305eb3f7cb9d6a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Before     public void setUp() throws Exception", "signatureAfterChange": "      @Before     public void setUp() throws Exception", "diff": ["-        pcRoot.addGuard(new Guard(false, false, \"org.springframework\", false));", "-        pcRoot.addGuard(new Guard(false, false, \"org.hibernate\", false));", "-        pcRoot.addGuard(new Guard(true, false, \"org.apache.commons\", false));", "+        pcRoot.addGuard(new Guard(false, false, \"org.springframework\", false, false));", "+        pcRoot.addGuard(new Guard(false, false, \"org.hibernate\", false, false));", "+        pcRoot.addGuard(new Guard(true, false, \"org.apache.commons\", false, false));", "-        pcCommon.addGuard(new Guard(true, false, \"org.hibernate\", false));", "+        pcCommon.addGuard(new Guard(true, false, \"org.hibernate\", false, false));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2de6341e28c7496515bcc26da95be29", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/doclets/TokenTypesDocletTest.java", "commitBeforeChange": "72faf5617ac6ed96b46ad71c60cf0eda95947531", "commitAfterChange": "0406304865b4fdd6e5294f0bcd948f1158f4ae84", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private static RootDoc getRootDoc(JavadocTool javadocTool, ListBuffer<String[]> options,             ListBuffer<String> names) throws Exception", "signatureAfterChange": "      private static RootDoc getRootDoc(JavadocTool javadocTool, ListBuffer<String[]> options,             ListBuffer<String> names) throws Exception", "diff": ["+", "-                    true, false, false);", "+                    false, false, false);", "-                    true, false, false);", "+                    false, false, false);"]}]}