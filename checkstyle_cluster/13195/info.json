{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54f76a6d8ee85b34f5c4dddc77c9531b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b85dc53abd580537c24516e1f07c68bf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ScopeUtils.java", "commitBeforeChange": "6a0bad784f056988b3b84b75baa397ac78102a24", "commitAfterChange": "7770f2a2c25c41bf024355f19caac358419110a6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static boolean inEnumBlock(DetailAST aAST)", "signatureAfterChange": "     public static boolean inEnumBlock(DetailAST aAST)", "diff": ["-             token != null;", "+             token != null && !retVal;", "-            if (type == TokenTypes.INTERFACE_DEF", "-                || type == TokenTypes.ANNOTATION_DEF", "-                || type == TokenTypes.CLASS_DEF) {", "-                break; // in an interface, annotation or class", "-            }", "-            else if (type == TokenTypes.LITERAL_NEW) {", "-                break; // inner implementation, enums can't be inner classes", "-            }", "-            else if (type == TokenTypes.ENUM_DEF) {", "+            if (type == TokenTypes.ENUM_DEF) {", "-                break;", "+            }", "+            else if (type == TokenTypes.INTERFACE_DEF", "+                || type == TokenTypes.ANNOTATION_DEF", "+                || type == TokenTypes.CLASS_DEF", "+                || type == TokenTypes.LITERAL_NEW) {", "+                break; // in an interface, annotation or class"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc2aba3012b42e6d0522e3ee452c0f05", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ScopeUtils.java", "commitBeforeChange": "6a0bad784f056988b3b84b75baa397ac78102a24", "commitAfterChange": "7770f2a2c25c41bf024355f19caac358419110a6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static boolean inInterfaceBlock(DetailAST aAST)", "signatureAfterChange": "     public static boolean inInterfaceBlock(DetailAST aAST)", "diff": ["-             token != null;", "+             token != null && !retVal;", "+", "-            if (type == TokenTypes.CLASS_DEF", "-                || type == TokenTypes.ENUM_DEF", "-                || type == TokenTypes.ANNOTATION_DEF) {", "-                break; // in a class, enum or annotation", "-            }", "-            else if (type == TokenTypes.LITERAL_NEW) {", "-                break; // inner implementation", "-            }", "-            else if (type == TokenTypes.INTERFACE_DEF) {", "+", "+            if (type == TokenTypes.INTERFACE_DEF) {", "-                break;", "+            }", "+            else if (type == TokenTypes.CLASS_DEF", "+                || type == TokenTypes.ENUM_DEF", "+                || type == TokenTypes.ANNOTATION_DEF", "+                || type == TokenTypes.LITERAL_NEW) {", "+                break; // in a class, enum or annotation"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea6fec35d3e1040e41e7699bc7fdfd18", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ScopeUtils.java", "commitBeforeChange": "6a0bad784f056988b3b84b75baa397ac78102a24", "commitAfterChange": "7770f2a2c25c41bf024355f19caac358419110a6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static boolean inAnnotationBlock(DetailAST aAST)", "signatureAfterChange": "     public static boolean inAnnotationBlock(DetailAST aAST)", "diff": ["-             token != null;", "+             token != null && !retVal;", "-            if (type == TokenTypes.CLASS_DEF", "+            if (type == TokenTypes.ANNOTATION_DEF) {", "+                retVal = true;", "+            }", "+            else if (type == TokenTypes.CLASS_DEF", "-                || type == TokenTypes.INTERFACE_DEF) {", "+                || type == TokenTypes.INTERFACE_DEF", "+                || type == TokenTypes.LITERAL_NEW) {", "-            else if (type == TokenTypes.LITERAL_NEW) {", "-                break; // inner implementation", "-            }", "-            else if (type == TokenTypes.ANNOTATION_DEF) {", "-                retVal = true;", "-                break;", "-            }", "+"]}]}