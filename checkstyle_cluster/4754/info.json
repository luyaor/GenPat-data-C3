{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b5c37aa9f395f1d8fed6886e0c8d004", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59e33fa3807de9bc7ee18d8d790901c3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtilsTest.java", "commitBeforeChange": "7d097b6fa682f8dcfedd95da2db8fed980c51705", "commitAfterChange": "d8286130e83dc672d30cd00eddbf6b5f77112521", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testTagPositions()", "signatureAfterChange": "      @Test     public void testTagPositions()", "diff": ["-    public void testTagPositions() {", "-        String [] text = { \"/** @see elsewhere\",", "-                           \"    also {@link Name value} */\" };", "-        Comment comment = new Comment(text, 1, 2, text[1].length());", "+    public void testTagPositions()", "+    {", "+        final String [] text = {", "+            \"/** @see elsewhere\",", "+            \"    also {@link Name value} */\",", "+        };", "+        final Comment comment = new Comment(text, 1, 2, text[1].length());", "-        List<JavadocTag> tags = JavadocUtils.getJavadocTags(", "-            comment, JavadocUtils.JavadocTagType.ALL).validTags;", "+        final List<JavadocTag> tags = JavadocUtils.getJavadocTags(", "+            comment, JavadocUtils.JavadocTagType.ALL).getValidTags();", "-        for (JavadocTag tag : tags) {", "+        for (final JavadocTag tag : tags) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "997ac44e67adc658cd80c0e60e43754d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "7d097b6fa682f8dcfedd95da2db8fed980c51705", "commitAfterChange": "d8286130e83dc672d30cd00eddbf6b5f77112521", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void processJavadoc(DetailAST aAST)", "signatureAfterChange": "     private void processJavadoc(DetailAST aAST)", "diff": ["-    private void processJavadoc(DetailAST aAST) {", "+    private void processJavadoc(DetailAST aAST)", "+    {", "-            final JavadocTags tags =", "-                JavadocUtils.getJavadocTags(cmt, JavadocUtils.JavadocTagType.ALL);", "-            for (JavadocTag tag : tags.validTags) {", "+            final JavadocTags tags = JavadocUtils.getJavadocTags(cmt,", "+                    JavadocUtils.JavadocTagType.ALL);", "+            for (final JavadocTag tag : tags.getValidTags()) {", "-                    Pattern pattern = Utils.getPattern(\"(.+?)(?:\\\\s+|#|\\\\$).*\");", "-                    Matcher matcher = pattern.matcher(identifier);", "+                    final Pattern pattern =", "+                        Utils.getPattern(\"(.+?)(?:\\\\s+|#|\\\\$).*\");", "+                    final Matcher matcher = pattern.matcher(identifier);"]}]}