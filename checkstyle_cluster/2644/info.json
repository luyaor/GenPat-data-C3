{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c7f7b4156dd1fdcf290c32510dee2c1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58a9905e47007eab80d0ec33b334048e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "96c668724bc05a11ceb031dda71efe1e9e69480d", "commitAfterChange": "788b41973d5747c7b4699a853b62168cf0001df6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testMultipleSuppression()         throws CheckstyleException, PatternSyntaxException", "signatureAfterChange": "      public void testMultipleSuppression()         throws CheckstyleException, PatternSyntaxException", "diff": ["-        SuppressElement se0 = new SuppressElement(\"file0\", \"check0\");", "+        SuppressElement se0 = new SuppressElement(\"file0\");", "+        se0.setChecks(\"check0\");", "-        SuppressElement se1 = new SuppressElement(\"file1\", \"check1\");", "+        SuppressElement se1 = new SuppressElement(\"file1\");", "+        se1.setChecks(\"check1\");", "-        SuppressElement se2 = new SuppressElement(\"file2\", \"check2\");", "+        SuppressElement se2 = new SuppressElement(\"file2\");", "+        se2.setChecks(\"check2\");", "-        SuppressElement se3 = new SuppressElement(\"file3\", \"check3\");", "+        SuppressElement se3 = new SuppressElement(\"file3\");", "+        se3.setChecks(\"check3\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "610372a9bd5f125e92686852298bab4d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "dc3fc5fab0cb1cadd5793065d8e44bbd2c5f67e2", "commitAfterChange": "0855fff95e4aac170ac5ab74cd1872f20555a214", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public ExpressionHandler getHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "signatureAfterChange": "     public ExpressionHandler getHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "diff": ["+            LOG.debug(\"couldn't instantiate constructor for \" + aAst, e);", "-                                       + aAst, e);", "+                                       + aAst);", "+            LOG.debug(\"couldn't access constructor for \" + aAst, e);", "-                                       + aAst,", "-                                       e);", "+                                       + aAst);", "+            LOG.debug(\"couldn't instantiate constructor for \" + aAst, e);", "-                                       + aAst, e);", "+                                       + aAst);"]}]}