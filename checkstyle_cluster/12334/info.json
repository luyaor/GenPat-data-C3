{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8300cd7ca471a4d5cde8302734bd1359", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45246cf5946d373eebb84eb7fae7d4e5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule713atclauses/AtclauseOrderTest.java", "commitBeforeChange": "aa79a38ac03631aa4301c0a66152d6ca15e445c7", "commitAfterChange": "f344001be15449e2f9702aabe9a5499436cff4dd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          @Test     public void noFinalizerExtendedTest() throws Exception", "signatureAfterChange": "          @Test     public void testIncorrect() throws Exception", "diff": ["-    public void noFinalizerExtendedTest() throws Exception {", "-        ", "-        String msg = getCheckMessage(NoFinalizerCheck.class, \"avoid.finalizer.method\");", "+    public void testIncorrect() throws Exception {", "+        final String tagOrder = \"[@param, @return, @throws, @deprecated]\";", "+        String msg = getCheckMessage(AtclauseOrderCheck.class, \"at.clause.order\", tagOrder);", "-            \"9: \" + msg,", "-            \"21: \" + msg,", "-            \"33: \" + msg,", "-            \"45: \" + msg,", "-            \"57: \" + msg,", "+            \"40: \" + msg,", "+            \"51: \" + msg,", "+            \"62: \" + msg,", "-            \"79: \" + msg,", "-            \"119: \" + msg,", "-            \"136: \" + msg,", "+            \"86: \" + msg,", "+            \"87: \" + msg,", "+            \"101: \" + msg,", "+            \"123: \" + msg,", "+            \"134: \" + msg,", "+            \"135: \" + msg,", "+            \"153: \" + msg,", "+            \"172: \" + msg,", "+            \"183: \" + msg,", "+            \"185: \" + msg,", "+            \"199: \" + msg,", "+            \"202: \" + msg,", "+            \"213: \" + msg,", "+            \"223: \" + msg,", "+            \"230: \" + msg,", "+            \"237: \" + msg,", "+            \"247: \" + msg,", "+            \"248: \" + msg,", "+            \"259: \" + msg,", "+            \"261: \" + msg,", "-        Configuration checkConfig = builder.getCheckConfig(\"NoFinalizer\");", "-        String filePath = builder.getFilePath(\"NoFinalizeExtendInput\");", "+        Configuration checkConfig = builder.getCheckConfig(\"AtclauseOrder\");", "+        String filePath = builder.getFilePath(\"InputIncorrectAtClauseOrderCheck\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7070de1a27e6669369256d9e0a9d758e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule43onestatement/OneStatementPerLineTest.java", "commitBeforeChange": "6985c4758d4a3252951a6a26b8efdd7b5f0adff4", "commitAfterChange": "b405880b6e79f143c3ba3651fe6c8b68324fca51", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void oneStatmentTest() throws IOException, Exception", "signatureAfterChange": "      @Test     public void oneStatmentTest() throws IOException, Exception", "diff": ["-        ", "+", "-            \"45:18: \" + msg,", "-            \"47:19: \" + msg,", "-            \"49:40: \" + msg,", "-            \"52:23: \" + msg,", "-            \"53:33: \" + msg,", "-            \"54:55: \" + msg,", "-            \"63:11: \" + msg,", "-            \"90:22: \" + msg,", "-            \"92:23: \" + msg,", "-            \"94:44: \" + msg,", "-            \"97:27: \" + msg,", "-            \"98:37: \" + msg,", "-            \"99:59: \" + msg,", "+            \"6:59: \" + msg,", "+            \"58:21: \" + msg,", "+            \"60:21: \" + msg,", "+            \"62:42: \" + msg,", "+            \"65:25: \" + msg,", "+            \"66:35: \" + msg,", "+            \"76:14: \" + msg,", "+            \"103:25: \" + msg,", "+            \"105:25: \" + msg,", "+            \"107:46: \" + msg,", "+            \"110:29: \" + msg,", "+            \"111:39: \" + msg,", "+            \"119:15: \" + msg,", "+            \"131:23: \" + msg,", "+            \"146:59: \" + msg,", "+            \"155:4: \" + msg,", "+            \"186:19: \" + msg,", "+            \"204:15: \" + msg,", "+            \"212:15: \" + msg,", "+            \"224:6: \" + msg,", "+            \"233:22: \" + msg,", "+            \"323:39: \" + msg,", "-        ", "+", "-        ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89eb0a3862bde7d05012a1ff8b5ad86b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule712paragraphs/JavadocParagraphTest.java", "commitBeforeChange": "41d538f9be41a0561ca7a28b159c034bcd3810e8", "commitAfterChange": "bb3f80410619472799c401651c43afb761f7906e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          @Test     public void javadocParagraphIncorrectTest() throws IOException, Exception", "signatureAfterChange": "          @Test     public void javadocParagraphIncorrectTest() throws IOException, Exception", "diff": ["+        String msgMisplaced = getCheckMessage(JavadocParagraphCheck.class, \"javadoc.paragraph.misplaced.tag\");", "-        \t\"5: \" + msgBefore,", "-        \t\"6: \" + msgBefore,", "-        \t\"12: \" + msgBefore,", "-        \t\"21: \" + msgBefore,", "-        \t\"30: \" + msgRed,", "-        \t\"31: \" + msgBefore,", "-        \t\"32: \" + msgBefore,", "-        \t\"33: \" + msgBefore,", "-        \t\"37: \" + msgBefore,", "-        \t\"43: \" + msgRed,", "-        \t\"48: \" + msgBefore,", "-        \t\"49: \" + msgBefore,", "-        \t\"59: \" + msgRed,", "-        \t\"68: \" + msgBefore,", "-        \t\"73: \" + msgBefore,", "+                \"5: \" + msgMisplaced,", "+                \"5: \" + msgBefore,", "+                \"6: \" + msgMisplaced,", "+                \"6: \" + msgBefore,", "+                \"12: \" + msgMisplaced,", "+                \"12: \" + msgBefore,", "+                \"14: \" + msgMisplaced,", "+                \"21: \" + msgBefore,", "+                \"30: \" + msgRed,", "+                \"31: \" + msgMisplaced,", "+                \"31: \" + msgBefore,", "+                \"32: \" + msgMisplaced,", "+                \"32: \" + msgBefore,", "+                \"33: \" + msgMisplaced,", "+                \"33: \" + msgBefore,", "+                \"37: \" + msgMisplaced,", "+                \"37: \" + msgBefore,", "+                \"43: \" + msgMisplaced,", "+                \"43: \" + msgRed,", "+                \"46: \" + msgMisplaced,", "+                \"48: \" + msgMisplaced,", "+                \"48: \" + msgBefore,", "+                \"49: \" + msgMisplaced,", "+                \"49: \" + msgBefore,", "+                \"59: \" + msgRed,", "+                \"68: \" + msgMisplaced,", "+                \"68: \" + msgBefore,", "+                \"70: \" + msgMisplaced,", "+                \"73: \" + msgMisplaced,", "+                \"73: \" + msgBefore,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae7216aad4b77400f757194f8e0d3575", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheckTest.java", "commitBeforeChange": "3a51c61b4aa4b8feaa7eae8648a28d94d62bab0c", "commitAfterChange": "39f40e57858c8a5c6310bf35e6649b03188b6996", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAllowByTailComment() throws Exception", "signatureAfterChange": "      @Test     public void testAllowByTailComment() throws Exception", "diff": ["-            \"15: \" + MSG,", "-            \"19: \" + MSG,", "-            \"24: \" + MSG,", "-            \"26: \" + MSG,", "-            \"31: \" + MSG,", "-            \"33: \" + MSG,", "-            \"34: \" + MSG,", "+            \"13: \" + MSG,", "+            \"21: \" + MSG,", "+            \"27: \" + MSG,", "+            \"29: \" + MSG,", "+            \"30: \" + MSG,", "+            \"54: \" + MSG,", "+            \"55: \" + MSG,", "+            \"56: \" + MSG,", "+            \"57: \" + MSG,", "+            \"68: \" + MSG,", "+            \"69: \" + MSG,", "+            \"70: \" + MSG,", "+            \"71: \" + MSG,", "+            \"72: \" + MSG,", "+            \"73: \" + MSG,", "+            \"75: \" + MSG,", "+            \"78: \" + MSG,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4edea6db36f76816e9efcaac094ae0f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheckTest.java", "commitBeforeChange": "3a51c61b4aa4b8feaa7eae8648a28d94d62bab0c", "commitAfterChange": "39f40e57858c8a5c6310bf35e6649b03188b6996", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testAllowEscapesForControlCharacterst() throws Exception", "signatureAfterChange": "      @Test     public void testAllowEscapesForControlCharacterst() throws Exception", "diff": ["-            \"10: \" + MSG,", "-            \"15: \" + MSG,", "-            \"16: \" + MSG,", "-            \"24: \" + MSG,", "-            \"25: \" + MSG,", "-            \"31: \" + MSG,", "-            \"32: \" + MSG,", "-            \"33: \" + MSG,", "-            \"34: \" + MSG,", "+            \"9: \" + MSG,", "+            \"13: \" + MSG,", "+            \"14: \" + MSG,", "+            \"21: \" + MSG,", "+            \"22: \" + MSG,", "+            \"27: \" + MSG,", "+            \"28: \" + MSG,", "+            \"29: \" + MSG,", "+            \"30: \" + MSG,", "+            \"38: \" + MSG,", "+            \"54: \" + MSG,", "+            \"55: \" + MSG,", "+            \"56: \" + MSG,", "+            \"57: \" + MSG,", "+            \"69: \" + MSG,", "+            \"70: \" + MSG,", "+            \"71: \" + MSG,", "+            \"72: \" + MSG,", "+            \"73: \" + MSG,", "+            \"75: \" + MSG,", "+            \"78: \" + MSG,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc857d9fcae672f72d0bb28cf84e6e7c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheckTest.java", "commitBeforeChange": "3a51c61b4aa4b8feaa7eae8648a28d94d62bab0c", "commitAfterChange": "39f40e57858c8a5c6310bf35e6649b03188b6996", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-            \"10: \" + MSG,", "-            \"15: \" + MSG,", "-            \"16: \" + MSG,", "-            \"19: \" + MSG,", "-            \"24: \" + MSG,", "-            \"25: \" + MSG,", "-            \"26: \" + MSG,", "-            \"31: \" + MSG,", "-            \"32: \" + MSG,", "-            \"33: \" + MSG,", "-            \"34: \" + MSG,", "+            \"9: \" + MSG,", "+            \"13: \" + MSG,", "+            \"14: \" + MSG,", "+            \"17: \" + MSG,", "+            \"21: \" + MSG,", "+            \"22: \" + MSG,", "+            \"23: \" + MSG,", "+            \"27: \" + MSG,", "+            \"28: \" + MSG,", "+            \"29: \" + MSG,", "+            \"30: \" + MSG,", "+            \"38: \" + MSG,", "+            \"54: \" + MSG,", "+            \"55: \" + MSG,", "+            \"56: \" + MSG,", "+            \"57: \" + MSG,", "+            \"68: \" + MSG,", "+            \"69: \" + MSG,", "+            \"70: \" + MSG,", "+            \"71: \" + MSG,", "+            \"72: \" + MSG,", "+            \"73: \" + MSG,", "+            \"75: \" + MSG,", "+            \"78: \" + MSG,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd3982edd7bc00380f1f5f33d4c3acad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule713atclauses/JavadocTagContinuationIndentationTest.java", "commitBeforeChange": "f344001be15449e2f9702aabe9a5499436cff4dd", "commitAfterChange": "2aeea0413772d6083e90882838c7d41a488f5423", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @Test     public void noFinalizerExtendedTest() throws Exception", "signatureAfterChange": "      @Test     public void testWithDefaultConfiguration() throws Exception", "diff": ["+    public void testWithDefaultConfiguration() throws Exception {", "+        ConfigurationBuilder builder = new ConfigurationBuilder(new File(\"src/it/\"));", "+        String msg = getCheckMessage(JavadocTagContinuationIndentationCheck.class,", "+                \"tag.continuation.indent\", 4);", "+            \"47: \" + msg,", "+            \"109: \" + msg,", "+            \"112: \" + msg,", "+            \"203: \" + msg,", "+            \"206: \" + msg,", "+            \"221: \" + msg,", "+            \"223: \" + msg,", "+            \"285: \" + msg,", "+            \"288: \" + msg,", "+            \"290: \" + msg,", "+            \"310: \" + msg,", "+            \"322: \" + msg,", "-    ", "-    @Test", "-    public void noFinalizerExtendedTest() throws Exception {", "-        ", "-        String msg = getCheckMessage(NoFinalizerCheck.class, \"avoid.finalizer.method\");", "-", "-        final String[] expected = {", "-            \"9: \" + msg,", "-            \"21: \" + msg,", "-            \"33: \" + msg,", "-            \"45: \" + msg,", "-            \"57: \" + msg,", "-            \"69: \" + msg,", "-            \"79: \" + msg,", "-            \"119: \" + msg,", "-            \"136: \" + msg,", "-        };", "-", "-        Configuration checkConfig = builder.getCheckConfig(\"NoFinalizer\");", "-        String filePath = builder.getFilePath(\"NoFinalizeExtendInput\");", "+        Configuration checkConfig = builder.getCheckConfig(\"JavadocTagContinuationIndentation\");", "+        String filePath = builder.getFilePath(\"InputJavaDocTagContinuationIndentation\");"]}]}