{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f4fd7332ef54c8d4e14ec772e69fb0b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dda8028806e2112b195b619a214e1f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/CovariantEqualsCheck.java", "commitBeforeChange": "a03dc8c1c9b1a7308be5e92324efab3413f6a771", "commitAfterChange": "d91d824ac797f1901858507d1b7b36b08c499569", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        DetailAST child = (DetailAST) objBlock.getFirstChild();", "-        while (child != null) {", "-            if (child.getType() == TokenTypes.METHOD_DEF) {", "-                if (isEqualsMethod(child)) {", "-                    if (hasObjectParameter(child)) {", "-                        mHasEqualsObject = true;", "-                    }", "-                    else {", "-                        mEqualsMethods.add(child);", "+        if (objBlock != null) {", "+            DetailAST child = (DetailAST) objBlock.getFirstChild();", "+            while (child != null) {", "+                if (child.getType() == TokenTypes.METHOD_DEF) {", "+                    if (isEqualsMethod(child)) {", "+                        if (hasObjectParameter(child)) {", "+                            mHasEqualsObject = true;", "+                        }", "+                        else {", "+                            mEqualsMethods.add(child);", "+                        }", "+                child = (DetailAST) child.getNextSibling();", "-            child = (DetailAST) child.getNextSibling();", "-        }", "-", "-        // report equals method definitions", "-        if (!mHasEqualsObject) {", "-            final Iterator it = mEqualsMethods.iterator();", "-            while (it.hasNext()) {", "-                final DetailAST equalsAST = (DetailAST) it.next();", "-                final DetailAST nameNode =", "-                    equalsAST.findFirstToken(TokenTypes.IDENT);", "-                log(", "-                    nameNode.getLineNo(),", "-                    nameNode.getColumnNo(),", "-                    \"covariant.equals\");", "+    ", "+            // report equals method definitions", "+            if (!mHasEqualsObject) {", "+                final Iterator it = mEqualsMethods.iterator();", "+                while (it.hasNext()) {", "+                    final DetailAST equalsAST = (DetailAST) it.next();", "+                    final DetailAST nameNode =", "+                        equalsAST.findFirstToken(TokenTypes.IDENT);", "+                    log(", "+                        nameNode.getLineNo(),", "+                        nameNode.getColumnNo(),", "+                        \"covariant.equals\");", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0955b1cc3f239d367eec15440a482c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/CovariantEqualsCheck.java", "commitBeforeChange": "cc822a77b4846b180eef883288627aff2d85384d", "commitAfterChange": "a03dc8c1c9b1a7308be5e92324efab3413f6a771", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "         public void addEqualsNode(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-         */", "-        public void addEqualsNode(DetailAST aAST)", "-        {", "-            if (!mHasEqualsObject) {", "-                mEqualsNodes.add(aAST);", "-            }", "-        }", "+        mEqualsMethods.clear();", "+        mHasEqualsObject = false;", "+", "+        // examine method definitions for equals methods", "+        final DetailAST objBlock = aAST.findFirstToken(TokenTypes.OBJBLOCK);", "+        DetailAST child = (DetailAST) objBlock.getFirstChild();", "+        while (child != null) {", "+            if (child.getType() == TokenTypes.METHOD_DEF) {", "+                if (isEqualsMethod(child)) {", "+                    if (hasObjectParameter(child)) {", "+                        mHasEqualsObject = true;", "+                    }", "+                    else {", "+                        mEqualsMethods.add(child);", "+                    }", "+            child = (DetailAST) child.getNextSibling();", "+        // report equals method definitions", "+        if (!mHasEqualsObject) {", "+            final Iterator it = mEqualsMethods.iterator();", "+            while (it.hasNext()) {", "+                final DetailAST equalsAST = (DetailAST) it.next();", "+                final DetailAST nameNode =", "+                    equalsAST.findFirstToken(TokenTypes.IDENT);", "+                log(", "+                    nameNode.getLineNo(),", "+                    nameNode.getColumnNo(),", "+                    \"covariant.equals\");"]}]}