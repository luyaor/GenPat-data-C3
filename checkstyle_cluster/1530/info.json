{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0cd4d5fae03620cae4ef307d12c037d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0be66d59268d40aa464dbd34dc33b111", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheckTest.java", "commitBeforeChange": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c", "commitAfterChange": "7d5db23ad528c95e0fbdfcd1293424c6240db07b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Test     public void testSetHeader()", "signatureAfterChange": "     @Test     public void testSetHeader()", "diff": ["-            fail(String.format(\"%s should have been thrown\", ConversionException.class));", "+            fail(String.format(Locale.ROOT, \"%s should have been thrown\",", "+                    ConversionException.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d4118620df99cda01b6b37dc1d9ea3f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AllChecksPresentOnAvailableChecksPageTest.java", "commitBeforeChange": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c", "commitAfterChange": "7d5db23ad528c95e0fbdfcd1293424c6240db07b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private static boolean isPresent(String availableChecks, String checkName)", "signatureAfterChange": "      private static boolean isPresent(String availableChecks, String checkName)", "diff": ["-        final String linkPattern = String.format(LINK_TEMPLATE, checkName);", "+        final String linkPattern = String.format(Locale.ROOT, LINK_TEMPLATE, checkName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10ed18935be36f70051b7cc96b666d6d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "1f33757f8fc4f5f6f52620658b7665dda5f03387", "commitAfterChange": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private Checker createChecker()", "signatureAfterChange": "     private Checker createChecker()", "diff": ["-            throw new BuildException(String.format(\"Unable to create a Checker: \"", "+            throw new BuildException(String.format(Locale.ROOT, \"Unable to create a Checker: \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1410c6b6bfbb3ca30f8c34a4e3db1be9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c", "commitAfterChange": "7d5db23ad528c95e0fbdfcd1293424c6240db07b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testNonExistingClass() throws Exception", "signatureAfterChange": "      @Test     public void testNonExistingClass() throws Exception", "diff": ["-            String.format(\"cannot initialize module TreeWalker - %1$s%n\"", "+            String.format(Locale.ROOT, \"cannot initialize module TreeWalker - %1$s%n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3464a67f7c4d88168f377a9ab4f1c642", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AllChecksTest.java", "commitBeforeChange": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c", "commitAfterChange": "7d5db23ad528c95e0fbdfcd1293424c6240db07b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefaultTokensAreSubsetOfAcceptableTokens() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultTokensAreSubsetOfAcceptableTokens() throws Exception", "diff": ["-                    String errorMessage = String.format(\"%s's default tokens must be a subset\"", "-                        + \" of acceptable tokens.\", check.getName());", "+                    String errorMessage = String.format(Locale.ROOT,", "+                            \"%s's default tokens must be a subset\"", "+                            + \" of acceptable tokens.\", check.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41ce1fe5edc72eea18e1ef43bdd20ff4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AllChecksTest.java", "commitBeforeChange": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c", "commitAfterChange": "7d5db23ad528c95e0fbdfcd1293424c6240db07b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testRequiredTokensAreSubsetOfDefaultTokens() throws Exception", "signatureAfterChange": "      @Test     public void testRequiredTokensAreSubsetOfDefaultTokens() throws Exception", "diff": ["-                    String errorMessage = String.format(\"%s's required tokens must be a subset\"", "-                        + \" of default tokens.\", check.getName());", "+                    String errorMessage = String.format(Locale.ROOT,", "+                            \"%s's required tokens must be a subset\"", "+                            + \" of default tokens.\", check.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e97076e5cc015bd945555f774297b92", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "1f33757f8fc4f5f6f52620658b7665dda5f03387", "commitAfterChange": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void registerCheck(String token, Check check) throws CheckstyleException", "signatureAfterChange": "     private void registerCheck(String token, Check check) throws CheckstyleException", "diff": ["-            final String message = String.format(\"Check '%s' waits for comment type \"", "+            final String message = String.format(Locale.ROOT, \"Check '%s' waits for comment type \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "627d44e0b35e4870c4fdfff6df9f1879", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "1f33757f8fc4f5f6f52620658b7665dda5f03387", "commitAfterChange": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private String formMissingTranslationName(String fullBundleName, String languageCode)", "signatureAfterChange": "     private String formMissingTranslationName(String fullBundleName, String languageCode)", "diff": ["-        return String.format(\"%s_%s%s\", fullBundleName, languageCode, extension);", "+        return String.format(Locale.ROOT, \"%s_%s%s\", fullBundleName, languageCode, extension);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63598a08b1dcdcb74415de227b02e4ed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AllChecksTest.java", "commitBeforeChange": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c", "commitAfterChange": "7d5db23ad528c95e0fbdfcd1293424c6240db07b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testAllChecksAreReferencedInConfigFile() throws Exception", "signatureAfterChange": "      @Test     public void testAllChecksAreReferencedInConfigFile() throws Exception", "diff": ["-                String errorMessage = String.format(\"%s is not referenced in checkstyle_checks.xml\", check);", "+                String errorMessage = String.format(Locale.ROOT,", "+                        \"%s is not referenced in checkstyle_checks.xml\", check);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63c5d7eae0f2ce1006387914392ea05d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "1f33757f8fc4f5f6f52620658b7665dda5f03387", "commitAfterChange": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private AuditListener[] getListeners()", "signatureAfterChange": "     private AuditListener[] getListeners()", "diff": ["-            throw new BuildException(String.format(\"Unable to create listeners: \"", "+            throw new BuildException(String.format(Locale.ROOT, \"Unable to create listeners: \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86848f8b9eb9a1c4211566997f8b03e6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AllChecksTest.java", "commitBeforeChange": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c", "commitAfterChange": "7d5db23ad528c95e0fbdfcd1293424c6240db07b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testAllCheckstyleModulesHaveXdocDocumentation() throws Exception", "signatureAfterChange": "      @Test     public void testAllCheckstyleModulesHaveXdocDocumentation() throws Exception", "diff": ["-                final String missingModuleMessage = String.format(", "+                final String missingModuleMessage = String.format(Locale.ROOT,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c361254c131895d6df13853b22742bfc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AllChecksTest.java", "commitBeforeChange": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c", "commitAfterChange": "7d5db23ad528c95e0fbdfcd1293424c6240db07b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testRequiredTokensAreSubsetOfAcceptableTokens() throws Exception", "signatureAfterChange": "      @Test     public void testRequiredTokensAreSubsetOfAcceptableTokens() throws Exception", "diff": ["-                    String errorMessage = String.format(\"%s's required tokens must be a subset\"", "-                        + \" of acceptable tokens.\", check.getName());", "+                    String errorMessage = String.format(Locale.ROOT,", "+                            \"%s's required tokens must be a subset\"", "+                            + \" of acceptable tokens.\", check.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e68eb9169f3aa9313b2e1d129e07f73c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "1f33757f8fc4f5f6f52620658b7665dda5f03387", "commitAfterChange": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static Configuration loadConfiguration(InputSource configSource,             PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(InputSource configSource,             PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "diff": ["-            final String message = String.format(\"%s - %s:%s:%s\", UNABLE_TO_PARSE_EXCEPTION_PREFIX,", "+            final String message = String.format(Locale.ROOT, \"%s - %s:%s:%s\",", "+                    UNABLE_TO_PARSE_EXCEPTION_PREFIX,"]}]}