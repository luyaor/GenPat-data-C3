{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06f39990cd420825ca443718cb2cd4bb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ee8888cb27921b8fb80cd375022d42b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "41758923b8e4dcb9aae1ee967407826bda38d97b", "commitAfterChange": "e464c231eccec72f964131d9aeb5e49982c4b3bb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public ExpressionHandler getHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "signatureAfterChange": "     public ExpressionHandler getHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "diff": ["-        int type = aAst.getType();", "+        if (aAst.getType() == TokenTypes.METHOD_CALL) {", "+            return createMethodCallHandler(aIndentCheck, aAst, aParent);", "+        }", "+", "+        Integer type = new Integer(aAst.getType());", "-            Constructor handlerCtor = (Constructor) mTypeHandlers.get(", "-                new Integer(type));", "+            Constructor handlerCtor = (Constructor) mTypeHandlers.get(type);", "+        ///CLOVER:OFF", "+        ///CLOVER:ON"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4933253289b65febcfb06a422f60832c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "     public void leaveToken(DetailAST aAST)", "diff": ["-        int tokenType = aAST.getType();", "+        final int tokenType = aAST.getType();", "-            Counter counter = (Counter) mCounters.pop();", "+            final Counter counter = (Counter) mCounters.pop();", "-            int count = counter.getCount();", "+            final int count = counter.getCount();", "-            Counter counter = (Counter) mCounters.pop();", "+            final Counter counter = (Counter) mCounters.pop();", "-            int count = counter.getCount();", "+            final int count = counter.getCount();"]}]}