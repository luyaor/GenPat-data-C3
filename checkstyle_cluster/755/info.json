{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "673ea7d45ce7960ddef35d49484f0e43", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "467ec1e4102849bc02b7d4b8de5f25a3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "9556af52eb24bdafa48b02d2214f478acf615de6", "commitAfterChange": "65989e76a40bf085059ee2bf9c695c6b45a771fb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void addError(AuditEvent aEvt)", "signatureAfterChange": "     public void addError(AuditEvent aEvt)", "diff": ["-        mWriter.println(\"<error \" +", "-                        \"line=\\\"\" + aEvt.getLine() + \"\\\" \" +", "-                        \"message=\\\"\" + encode(aEvt.getMessage()) + \"\\\"/>\");", "+        mWriter.print(\"<error\" + \" line=\\\"\" + aEvt.getLine() + \"\\\"\");", "+        if (aEvt.getColumn() > 0) {", "+            mWriter.print(\" column=\\\"\" + aEvt.getColumn() + \"\\\"\");", "+        }", "+        mWriter.println(\" message=\\\"\" + encode(aEvt.getMessage()) + \"\\\"/>\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7663415399bf7ad16cda799b5b5bdb56", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/GuardTest.java", "commitBeforeChange": "28c5d6f06244f45a5673a3ef5bd0d927b0042496", "commitAfterChange": "a5d30bf353dde01376d45fb031d9236b11a835d1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testGuard()", "signatureAfterChange": "      public void testPkgGuard2()", "diff": ["-    public void testGuard()", "-        final Guard g = new Guard(true, \"pkg\");", "-        assertEquals(AccessResult.UNKNOWN, g.verify(\"asda\"));", "-        assertEquals(AccessResult.UNKNOWN, g.verify(\"p\"));", "-        assertEquals(AccessResult.ALLOWED, g.verify(\"pkg.a\"));", "-        assertEquals(AccessResult.UNKNOWN, g.verify(\"pkg\"));", "+", "+    public void testPkgGuard2()", "+    {", "+        final Guard g = new Guard(true, false, \"pkg\", true);", "+        assertNotNull(g);", "+        assertEquals(AccessResult.UNKNOWN, g.verifyImport(\"asda\", \"ignored\"));", "+        assertEquals(AccessResult.UNKNOWN, g.verifyImport(\"p\", \"ignored\"));", "+        assertEquals(AccessResult.ALLOWED, g.verifyImport(\"pkg.a\", \"ignored\"));", "+        assertEquals(AccessResult.UNKNOWN, g.verifyImport(\"pkg.a.b\", \"ignored\"));", "+        assertEquals(AccessResult.UNKNOWN, g.verifyImport(\"pkg\", \"ignored\"));", "+    }"]}]}