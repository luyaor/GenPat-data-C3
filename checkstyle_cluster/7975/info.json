{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "04a22c662dc04e9a3ef6c9b5b87e78ba", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a8480aad938bd23baf79ce7327bbd7c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "bcbd31a5ecc3aa9b5f0677acb17c441142e57c6f", "commitAfterChange": "fa9bf2e0ef561ab0e112157fd55c52ffac1b5715", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public TreeWalker()", "signatureAfterChange": "     public TreeWalker()", "diff": ["+        // Tree walker can use two possible algorithms for", "+        // tree processing (iterative and recursive.", "+        // Recursive is default for now.", "+        String recursive =", "+            System.getProperty(\"checkstyle.use.recursive.algorithm\", \"true\");", "+        mRecursive = \"true\".equals(recursive);", "+        if (mRecursive) {", "+            Utils.getExceptionLogger()", "+                .debug(\"TreeWalker uses recursive algorithm\");", "+        }", "+        else {", "+            Utils.getExceptionLogger()", "+                .debug(\"TreeWalker uses iterative algorithm\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d67b8b88cf1adf0d4e43cee9be430a0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java", "commitBeforeChange": "96c668724bc05a11ceb031dda71efe1e9e69480d", "commitAfterChange": "788b41973d5747c7b4699a853b62168cf0001df6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void startElement(String aNamespaceURI,                              String aLocalName,                              String aQName,                              Attributes aAtts)         throws SAXException", "signatureAfterChange": "     public void startElement(String aNamespaceURI,                              String aLocalName,                              String aQName,                              Attributes aAtts)         throws SAXException", "diff": ["-            if (checks == null) {", "-                throw new SAXException(\"missing checks attribute\");", "+            final String modId = aAtts.getValue(\"id\");", "+            if ((checks == null) && (modId == null)) {", "+                throw new SAXException(\"missing checks and id attribute\");", "-                suppress = new SuppressElement(files, checks);", "+                suppress = new SuppressElement(files);", "+                if (modId != null) {", "+                    suppress.setModuleId(modId);", "+                }", "+                if (checks != null) {", "+                    suppress.setChecks(checks);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee50e6bf8c95be850e91d234a9b2e604", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "39c810009d787616a45ad2efa57525cbc57eff34", "commitAfterChange": "1e7bbb8cd8a0d8d2167792e917c7cb79a36b20b0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void process(File aFile)", "signatureAfterChange": "     private void process(File aFile)", "diff": ["+            Utils.getExceptionLogger()", "+                .debug(\"FileNotFoundException occured.\", fnfe);", "+            Utils.getExceptionLogger().debug(\"IOException occured.\", ioe);", "+            Utils.getExceptionLogger()", "+                .debug(\"RecognitionException occured.\", re);", "+            Utils.getExceptionLogger()", "+                .debug(\"TokenStreamException occured.\", te);", "+            Utils.getExceptionLogger().debug(\"Throwable occured.\", err);"]}]}