{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95a1c83e8afec39533acefed317598dd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88cfd7d75ebf42217b554e2943dba1e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     @Override     public boolean accept(AuditEvent aEvent)", "signatureAfterChange": "     @Override     public boolean accept(AuditEvent event)", "diff": ["-    public boolean accept(AuditEvent aEvent)", "+    public boolean accept(AuditEvent event)", "-        if (aEvent.getLocalizedMessage() == null) {", "+        if (event.getLocalizedMessage() == null) {", "-        final Tag matchTag = findNearestMatch(aEvent);", "+        final Tag matchTag = findNearestMatch(event);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9760412534f9115738d119c8ae1169cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     @Override     public boolean accept(AuditEvent aEvent)", "signatureAfterChange": "     @Override     public boolean accept(AuditEvent event)", "diff": ["-    public boolean accept(AuditEvent aEvent)", "+    public boolean accept(AuditEvent event)", "-        if (aEvent.getLocalizedMessage() == null) {", "+        if (event.getLocalizedMessage() == null) {", "-        for (final Iterator<Tag> iter = mTags.iterator(); iter.hasNext();) {", "+        for (final Iterator<Tag> iter = tags.iterator(); iter.hasNext();) {", "-            if (tag.isMatch(aEvent)) {", "+            if (tag.isMatch(event)) {"]}]}