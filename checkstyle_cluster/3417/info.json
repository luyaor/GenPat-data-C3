{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f4621cb171789d5ba5b8a646e97cf89", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b452108ff0cbc217f39a68010a6f4cf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "1116ce8c8cfdfbdd1445a7f123dbe89467824077", "commitAfterChange": "cd7d040b4d2c4a80e87ef9b5be9bbd964f19e97d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected AbstractClassCouplingCheck(int aDefaultMax)", "signatureAfterChange": "     protected AbstractClassCouplingCheck(int aDefaultMax)", "diff": ["-", "-        mIgnoredClassNames.add(\"boolean\");", "-        mIgnoredClassNames.add(\"byte\");", "-        mIgnoredClassNames.add(\"char\");", "-        mIgnoredClassNames.add(\"double\");", "-        mIgnoredClassNames.add(\"float\");", "-        mIgnoredClassNames.add(\"int\");", "-        mIgnoredClassNames.add(\"long\");", "-        mIgnoredClassNames.add(\"short\");", "-        mIgnoredClassNames.add(\"void\");", "-        mIgnoredClassNames.add(\"Boolean\");", "-        mIgnoredClassNames.add(\"Byte\");", "-        mIgnoredClassNames.add(\"Character\");", "-        mIgnoredClassNames.add(\"Double\");", "-        mIgnoredClassNames.add(\"Float\");", "-        mIgnoredClassNames.add(\"Integer\");", "-        mIgnoredClassNames.add(\"Long\");", "-        mIgnoredClassNames.add(\"Object\");", "-        mIgnoredClassNames.add(\"Short\");", "-        mIgnoredClassNames.add(\"String\");", "-        mIgnoredClassNames.add(\"StringBuffer\");", "-        mIgnoredClassNames.add(\"Void\");", "-        mIgnoredClassNames.add(\"ArrayIndexOutOfBoundsException\");", "-        mIgnoredClassNames.add(\"Exception\");", "-        mIgnoredClassNames.add(\"RuntimeException\");", "-        mIgnoredClassNames.add(\"IllegalArgumentException\");", "-        mIgnoredClassNames.add(\"IllegalStateException\");", "-        mIgnoredClassNames.add(\"IndexOutOfBoundsException\");", "-        mIgnoredClassNames.add(\"NullPointerException\");", "-        mIgnoredClassNames.add(\"Throwable\");", "-        mIgnoredClassNames.add(\"SecurityException\");", "-        mIgnoredClassNames.add(\"UnsupportedOperationException\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a306005cbfaeaf6016f3c13ad11588a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/ClassResolverTest.java", "commitBeforeChange": "b6d9344d1c152f225a22ce9ce09341b3cc9488af", "commitAfterChange": "72faf5617ac6ed96b46ad71c60cf0eda95947531", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testMisc() throws ClassNotFoundException", "signatureAfterChange": "     @Test     public void testMisc() throws ClassNotFoundException", "diff": ["-        final Set<String> imps = Sets.newHashSet();", "-        imps.add(\"java.io.File\");", "-        imps.add(\"nothing.will.match.*\");", "-        imps.add(\"java.applet.*\");", "-        ClassResolver cr =", "+        final Set<String> imports = Sets.newHashSet();", "+        imports.add(\"java.io.File\");", "+        imports.add(\"nothing.will.match.*\");", "+        imports.add(\"java.applet.*\");", "+        ClassResolver classResolver =", "-                              null, imps);", "-        assertNotNull(cr);", "+                null, imports);", "+        assertNotNull(classResolver);", "-            cr.resolve(\"who.will.win.the.world.cup\", \"\");", "+            classResolver.resolve(\"who.will.win.the.world.cup\", \"\");", "-        cr.resolve(\"java.lang.String\", \"\");", "-        cr.resolve(\"StringBuffer\", \"\");", "-        cr.resolve(\"AppletContext\", \"\");", "+        classResolver.resolve(\"java.lang.String\", \"\");", "+        classResolver.resolve(\"StringBuffer\", \"\");", "+        classResolver.resolve(\"AppletContext\", \"\");", "-            cr.resolve(\"ChoiceFormat\", \"\");", "+            classResolver.resolve(\"ChoiceFormat\", \"\");", "-        imps.add(\"java.text.ChoiceFormat\");", "-        ClassResolver newClassResolver = new ClassResolver(Thread.currentThread().getContextClassLoader(), null, imps);", "+        imports.add(\"java.text.ChoiceFormat\");", "+        ClassResolver newClassResolver = new ClassResolver(", "+                Thread.currentThread().getContextClassLoader(), null, imports);", "-                Thread.currentThread().getContextClassLoader(), \"java.util\", imps);", "+                Thread.currentThread().getContextClassLoader(), \"java.util\", imports);"]}]}