{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f6a81e2ec78efeff0e32047c91c5fe4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a8480aad938bd23baf79ce7327bbd7c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "bcbd31a5ecc3aa9b5f0677acb17c441142e57c6f", "commitAfterChange": "fa9bf2e0ef561ab0e112157fd55c52ffac1b5715", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public TreeWalker()", "signatureAfterChange": "     public TreeWalker()", "diff": ["+        // Tree walker can use two possible algorithms for", "+        // tree processing (iterative and recursive.", "+        // Recursive is default for now.", "+        String recursive =", "+            System.getProperty(\"checkstyle.use.recursive.algorithm\", \"true\");", "+        mRecursive = \"true\".equals(recursive);", "+        if (mRecursive) {", "+            Utils.getExceptionLogger()", "+                .debug(\"TreeWalker uses recursive algorithm\");", "+        }", "+        else {", "+            Utils.getExceptionLogger()", "+                .debug(\"TreeWalker uses iterative algorithm\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfe81b15da4696742cd2d97ba78aa1e4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "59aa66c3cc43db0a7cd8bb0ea3a39b6f4339fe88", "commitAfterChange": "a24df47cafeab03fd65cf72b460aad3d2fafce3d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public TreeWalker()", "signatureAfterChange": "     public TreeWalker()", "diff": ["-        // Tree walker can use two possible algorithms for", "-        // tree processing (iterative and recursive.", "-        // Recursive is default for now.", "-        final String recursive =", "-            System.getProperty(\"checkstyle.use.recursive.algorithm\", \"false\");", "-        mRecursive = \"true\".equals(recursive);", "-        if (mRecursive) {", "-            LOG.debug(\"TreeWalker uses recursive algorithm\");", "-        }", "-        else {", "-            LOG.debug(\"TreeWalker uses iterative algorithm\");", "-        }"]}]}