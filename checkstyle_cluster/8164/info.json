{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "987540a2424e0ae4c53c5a837ffa4793", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "158e7b8f8ce14e3180161d2c6a283a2a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultConfiguration.java", "commitBeforeChange": "7d5d0f8d2afac17932827866f93504cd8f664443", "commitAfterChange": "267ba659ac62583f14c8c25d3cf4587070e1966c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void addAttribute(String aName, String aValue)", "signatureAfterChange": "     public void addAttribute(String aName, String aValue)", "diff": ["-        mAttributeMap.put(aName, aValue);", "+        final String current = mAttributeMap.put(aName, aValue);", "+        if (null == current) {", "+            mAttributeMap.put(aName, aValue);", "+        }", "+        else {", "+            mAttributeMap.put(aName, current + \",\" + aValue);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d52a983daaf4189023239e42e5a5058", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "480de89b47d955e50c39475ed68ec31a36e8d1ea", "commitAfterChange": "702a1a957607881e72bb94b3104c2603ef10891f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DefaultLogger(OutputStream infoStream,                          boolean closeInfoAfterUse,                          OutputStream errorStream,                          boolean closeErrorAfterUse)", "signatureAfterChange": "     public DefaultLogger(OutputStream infoStream,                          boolean closeInfoAfterUse,                          OutputStream errorStream,                          boolean closeErrorAfterUse) throws UnsupportedEncodingException", "diff": ["-                         boolean closeErrorAfterUse)", "+                         boolean closeErrorAfterUse) throws UnsupportedEncodingException", "-        infoWriter = new PrintWriter(infoStream);", "+        final Writer infoStreamWriter = new OutputStreamWriter(infoStream, \"UTF-8\");", "+        final Writer errorStreamWriter = new OutputStreamWriter(errorStream, \"UTF-8\");", "+        infoWriter = new PrintWriter(infoStreamWriter);", "-            : new PrintWriter(errorStream);", "+            : new PrintWriter(errorStreamWriter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "349330f80f3aaea84dbf1812a8c9d738", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/coding/InputModifiedControl.java", "commitBeforeChange": "f5efd9eb390e7ad95dfb2c7931101556de8a8253", "commitAfterChange": "0ac000841c1535baabe230787649013331289f3f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     void method1()", "signatureAfterChange": "     void method1()", "diff": ["+", "+        String[] sa = {\"a\", \"b\"};", "+        for(String s:sa) {}", "+        for(String s:sa) {", "+            s = \"new string\";", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "370a776125b5beacf8380582f212ad2d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheckTest.java", "commitBeforeChange": "2a01965deb18e6301b72cb8b2b131cba896b7a4e", "commitAfterChange": "c18071b7561b99767e871be9d4d7711eb15b76f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testIntegerOverflow() throws Exception", "signatureAfterChange": "      public void testIntegerOverflow() throws Exception", "diff": ["+", "+        final long largerThanMaxInt = 3486784401L;", "+        // use i18n for number formating so test wont fail in non-english environments", "+        final String expectedComplexity = NumberFormat.getInstance().format(largerThanMaxInt);", "+", "-            \"9:5: NPath Complexity is 3,486,784,401 (max allowed is 0).\" // larger than MAXINT", "+            \"9:5: NPath Complexity is \" + expectedComplexity + \" (max allowed is 0).\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dd01d5bfc84e0af990f9723f36768e3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/UtilsTest.java", "commitBeforeChange": "9ef2cd212112e371b015310faefa2b8f3f2a7cc7", "commitAfterChange": "4a0711b2be983dce1598c23f6e446fc7d11878e4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testLengthExpandedTabs()         throws Exception", "signatureAfterChange": "     public void testLengthExpandedTabs()         throws Exception", "diff": ["+", "+        final RE r1 = Utils.getRE(\"a\");", "+        final RE r2 = Utils.getRE(\"a\");", "+        assertEquals(r1, r2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3bcc19969545d9a9b9d7c8e971fdcb5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "57a28c890cc5bed67231e8d016ec1673c13c63be", "commitAfterChange": "9b3c6b1be571a0c008e6b7b72a3fe31a3e88f931", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     void parseFile(String aFilename)         throws FileNotFoundException, IOException, SAXException", "signatureAfterChange": "     void parseFile(String aFilename)         throws FileNotFoundException, IOException, SAXException", "diff": ["-        parseInputSource(new InputSource(new FileReader(aFilename)));", "+        final Reader configReader =", "+            new BufferedReader(new FileReader(aFilename), TWO_KB);", "+        final InputSource inputSource = new InputSource(configReader);", "+        parseInputSource(inputSource);", "+        configReader.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b40e008d9d834c4f79ad73934712a2ed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/naming/InputMethodNameExtra.java", "commitBeforeChange": "d0a19311e37764cde921c38a618691aa340d252e", "commitAfterChange": "fb5961a477902af14dd1337c8e7eb3ce7b36d6a4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void doit()", "signatureAfterChange": "     public void doit()", "diff": ["-        createNameHistoryDetails(historyDetails, previousNameService, entityId,", "+        Object historyDetails = null;", "+\t\tObject previousNameService = null;", "+\t\tObject entityId = null;", "+\t\tObject agencyName = null;", "+\t\tcreateNameHistoryDetails(historyDetails, previousNameService, entityId,", "-                    return getPreviousName(TypeOfName.AGENCY_NAME);", "+                    return getPreviousName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce475666752f6ded8309c51a282bed33", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule528typevariablenames/ClassTypeParameterNameTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testClassDefault() throws Exception", "signatureAfterChange": "      @Test     public void testClassDefault() throws Exception", "diff": ["+        final Configuration configuration = getCheckConfig(\"ClassTypeParameterName\");", "+        final String format = configuration.getAttribute(\"format\");", "-        final String filePath = builder.getFilePath(\"InputClassTypeParameterName\");", "+        final String filePath = getPath(\"InputClassTypeParameterName.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf463511291fb5f1e8f7d32035eff907", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AbstractLoader.java", "commitBeforeChange": "6d74014969c04dd78a399644bbee772457d608c8", "commitAfterChange": "4c43406153cb5abc6c394a32625af9a7b1c6811e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public InputSource resolveEntity(String aPublicId, String aSystemId)         throws SAXException", "signatureAfterChange": "     public InputSource resolveEntity(String aPublicId, String aSystemId)         throws SAXException", "diff": ["-        if (mPublicId.equals(aPublicId)) {", "+        if (mPublicIdToResourceNameMap.keySet().contains(aPublicId)) {", "+            final String dtdResourceName =", "+                    (String) mPublicIdToResourceNameMap.get(aPublicId);", "-                .getResourceAsStream(mDtdResourceName);", "+                .getResourceAsStream(dtdResourceName);", "-                    \"Unable to load internal dtd \" + mDtdResourceName);", "+                    \"Unable to load internal dtd \" + dtdResourceName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d56f9f9d86099acf80c8c45bd83fd413", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "495227c6086c83d4cb4547f7a3fe7ff8976853ea", "commitAfterChange": "20483ae032296610315fafb9a8774cfdd0e13857", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 91, "signatureBeforeChange": "     public void setCacheFile(String aCacheFile)", "signatureAfterChange": "     private void setStringProperty(Properties aProps, String aName)", "diff": ["-     */", "-    public void setCacheFile(String aCacheFile)", "-    {", "-        mCacheFile = aCacheFile;", "+     */", "+    private void setStringProperty(Properties aProps, String aName)", "+    {", "+        final String str = aProps.getProperty(aName);", "+        if (str != null) {", "+            setStringProperty(aName, aProps.getProperty(aName));", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffab33c66ba18ae01eecfd0e091399d1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "703368166431ff7895b910417e971c61c0083c53", "commitAfterChange": "7968b294181371d74866361b41e5119d898b8136", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void auditStarted(AuditEvent aEvt)", "signatureAfterChange": "     public void auditStarted(AuditEvent aEvt)", "diff": ["-        mWriter.println(\"<checkstyle>\");", "+", "+        final ResourceBundle compilationProperties =", "+            ResourceBundle.getBundle(\"checkstylecompilation\");", "+        final String version =", "+            compilationProperties.getString(\"checkstyle.compile.version\");", "+", "+        mWriter.println(\"<checkstyle version=\\\"\" + version + \"\\\">\");"]}]}