{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cc70424264bad43b92885d8c5e43ebe1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02023123ad628190666b7e1b966f8615", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "f8ea4c69a2228c5aca6c0b6e08a39a613d157708", "commitAfterChange": "8d6fa332a9c8b0c350dfcb1d923d70bc5f3d921b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     void reportCComment(int aStartLineNo, int aStartColNo,                         int aEndLineNo, int aEndColNo);", "signatureAfterChange": "     void reportCComment(int aStartLineNo, int aStartColNo,                                int aEndLineNo, int aEndColNo)", "diff": ["+                               int aEndLineNo, int aEndColNo)", "+    {", "+        if (mLines[aStartLineNo - 1].indexOf(\"/**\", aStartColNo) != -1) {", "+            final String[] cc =", "+                extractCComment(aStartLineNo, aStartColNo,", "+                                aEndLineNo, aEndColNo);", "+            mComments.put(new Integer(aEndLineNo - 1), cc);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "738a36e56fec375be0c65c80d11d24d5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "f8ea4c69a2228c5aca6c0b6e08a39a613d157708", "commitAfterChange": "8d6fa332a9c8b0c350dfcb1d923d70bc5f3d921b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     void clearMessages();", "signatureAfterChange": "     void clearMessages()", "diff": ["-     **/", "-    void clearMessages();", "+    /** Clears the list of error messages. Use before processing a file. **/", "+    void clearMessages()", "+    {", "+        mLines = null;", "+        mPkgName = null;", "+        mInInterface.clear();", "+        mInScope.clear();", "+        mMessages.clear();", "+        mComments.clear();", "+        mImports.clear();", "+        mReferenced.clear();", "+        mMethodBlockLevel = 0;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85e9a3272f4eb29abec6d840a40de8ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "b3133035a4fa0e086dfb0dfbefbc7f1540521bbc", "commitAfterChange": "add2bdfb27494bff5fa9c305d9782f57c6170b18", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public OutputStream getOutputStream()", "signatureAfterChange": "     protected void closeStreams()", "diff": ["-    /** @see AuditListener **/", "-    public OutputStream getOutputStream()", "-    {", "-        return mStream;", "-    }", "+     */", "+    protected void closeStreams()", "+    {", "+        if (mCloseInfo) {", "+            mInfoWriter.flush();", "+        }", "+        else {", "+            mInfoWriter.flush();", "+            mInfoWriter.close();", "+        }", "+", "+        if (mCloseError) {", "+            mErrorWriter.flush();", "+        }", "+        else {", "+            mErrorWriter.flush();", "+            mErrorWriter.close();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b960e9c4c88135b6f3437115a41f307", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "f8ea4c69a2228c5aca6c0b6e08a39a613d157708", "commitAfterChange": "8d6fa332a9c8b0c350dfcb1d923d70bc5f3d921b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     void verifyParameter(LineText aParam);", "signatureAfterChange": "     void verifyParameter(LineText aParam)", "diff": ["-    void verifyParameter(LineText aParam);", "+    void verifyParameter(LineText aParam)", "+    {", "+        if (!mConfig.getParamRegexp().match(aParam.getText())) {", "+            log(aParam.getLineNo(),", "+                \"parameter '\" + aParam.getText() +", "+                \"' must match pattern '\" + mConfig.getParamPat() + \"'.\");", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a28775a27d29c9ef0190490ef39909dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "9acdd1b97e561748ae8cc61e11dcc145885ecb6d", "commitAfterChange": "c617457933a978f5fd861d7ea43d05bccf045c16", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     void verifyMethod(MyModifierSet aMods,                       MyCommonAST aReturnType,                       MethodSignature aSig)", "signatureAfterChange": "     void verifyMethod(MyModifierSet aMods,                       MyCommonAST aReturnType,                       MethodSignature aSig)", "diff": ["+        // Calculate line number. Unfortunately aReturnType does not contain a", "+        // valid line number", "+        final int lineNo = (aMods.size() > 0)", "+            ? aMods.getFirstLineNo()", "+            : aSig.getLineNo();", "+", "+        // no need to check constructor names", "+        if (aReturnType != null &&", "+            !mConfig.getMethodRegexp().match(aSig.getName())) {", "+            log(lineNo,", "+                \"method name '\" + aSig.getName() +", "+                \"' must match pattern '\" + mConfig.getMethodPat() + \"'.\");", "+        }", "+", "-", "-", "-        // Calculate line number. Unfortunately aReturnType does not contain a", "-        // valid line number", "-        final int lineNo = (aMods.size() > 0)", "-            ? aMods.getFirstLineNo()", "-            : aSig.getLineNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f75b52f630d69faf33adfa5a408bbf2e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "73ff80b4536cb765f9904caac5b603518d719c65", "commitAfterChange": "c8a57d0b859775e67e3f079ba052c07f505caf64", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     void verifyMethod(MethodSignature aSig)", "signatureAfterChange": "     void verifyMethod(MethodSignature aSig)", "diff": ["+        // Check for to many parameters", "+        // TODO: Add documentation and a test", "+        if (aSig.getParams().size() > mConfig.getMaxParameters()) {", "+            log(aSig.getFirstLineNo(),", "+                aSig.getFirstColNo(),", "+                \"More than \" + mConfig.getMaxParameters() + \" parameters.\");", "+        }"]}]}