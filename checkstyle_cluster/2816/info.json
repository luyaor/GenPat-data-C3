{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "19e128daca3d4483f517597f9d9070d7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfad2c597f774da2ad8b11b584b75203", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "595d070db0215c3cf0555d5074719cffc673c890", "commitAfterChange": "868d96b45918b5bb0db4b80bdf5b70f5202d6590", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAst)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST aAst)", "diff": ["-        if (TokenTypes.FOR_ITERATOR == aAst.getType()) {", "+        switch (aAst.getType()) {", "+        case TokenTypes.FOR_ITERATOR:", "+            break;", "+        case TokenTypes.EXPR:", "+            mExprDepth--;", "+            break;", "+        default:", "+            break;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb32d4977dd31e09bb1ee21606012e4e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "e6638c3344a90ec1716feb1830790efe430a123a", "commitAfterChange": "98684b95a5eb4e6a8bad5ddb347de0c64b0d2df9", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private static String getStringExpr(DetailAST aAST)", "signatureAfterChange": "     private static String getStringExpr(DetailAST aAST)", "diff": ["-            if (firstChild.getType() == TokenTypes.STRING_LITERAL) {", "+            switch (firstChild.getType()) {", "+            case TokenTypes.STRING_LITERAL:", "+            case TokenTypes.IDENT:", "+                return firstChild.getText();", "+            default:", "+                throw new IllegalArgumentException(\"String literal AST expected: \"", "+                        + firstChild);", "-            throw new IllegalArgumentException(\"String literal AST expected: \"", "-                + firstChild);"]}]}