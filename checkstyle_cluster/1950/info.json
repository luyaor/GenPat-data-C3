{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cb36cff8f5b6288623b9df4ba9aef2ac", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "056b5fbb7b2c061ec2e4fde64c59dfb8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingCtorCheck.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public MissingCtorCheck()", "signatureAfterChange": "     public MissingCtorCheck()", "diff": ["-        setLimitedTokens(Utils.getTokenName(TokenTypes.CTOR_DEF));", "+        setLimitedTokens(TokenUtils.getTokenName(TokenTypes.CTOR_DEF));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b2c1d9b3d9d054b6e3292f1f4163f47", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheckTest.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testInterfaceSpecific()         throws Exception", "signatureAfterChange": "      @Test     public void testInterfaceSpecific()         throws Exception", "diff": ["-        checkConfig.addAttribute(\"tokens\", Utils.getTokenName(TokenTypes.INTERFACE_DEF));", "+        checkConfig.addAttribute(\"tokens\", TokenUtils.getTokenName(TokenTypes.INTERFACE_DEF));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "156731e7d676836c62e12600ea4aaa30", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setLimitedTokens(String... limitedTokensParam)", "signatureAfterChange": "     public void setLimitedTokens(String... limitedTokensParam)", "diff": ["-            limitedTokens[i] = Utils.getTokenId(limitedTokensParam[i]);", "+            limitedTokens[i] = TokenUtils.getTokenId(limitedTokensParam[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31dd3ddf53fc46b2c6edf81b13190df0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void registerCheck(String token, Check check)", "signatureAfterChange": "     private void registerCheck(String token, Check check)", "diff": ["-        else if (Utils.isCommentType(token)) {", "+        else if (TokenUtils.isCommentType(token)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c7f654670b25d5287ec660a7900bdbe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheckTest.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testEnumSpecific()         throws Exception", "signatureAfterChange": "      @Test     public void testEnumSpecific()         throws Exception", "diff": ["-        checkConfig.addAttribute(\"tokens\", Utils.getTokenName(TokenTypes.ENUM_DEF));", "+        checkConfig.addAttribute(\"tokens\", TokenUtils.getTokenName(TokenTypes.ENUM_DEF));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c8163820f83e5e1d87668d1aa6e30ec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public int[] getAcceptableTokens()", "signatureAfterChange": "      @Override     public int[] getAcceptableTokens()", "diff": ["-            result[i] = Utils.getTokenId(name);", "+            result[i] = TokenUtils.getTokenId(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "651549a911ddd00ef58ebd0515d77586", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void registerCheck(int tokenID, Check check)", "signatureAfterChange": "     private void registerCheck(int tokenID, Check check)", "diff": ["-        registerCheck(Utils.getTokenName(tokenID), check);", "+        registerCheck(TokenUtils.getTokenName(tokenID), check);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "694864983db0dfd1f5478f73091d5947", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeModel.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public Object getValueAt(Object node, int column)", "signatureAfterChange": "      @Override     public Object getValueAt(Object node, int column)", "diff": ["-                return Utils.getTokenName(ast.getType());", "+                return TokenUtils.getTokenName(ast.getType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79af4de75eb2c8ff7f9545560cb5928f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenTextCheck.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public int[] getAcceptableTokens()", "signatureAfterChange": "      @Override     public int[] getAcceptableTokens()", "diff": ["-        return Utils.getAllTokenIds();", "+        return TokenUtils.getAllTokenIds();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83c8ca326df40a39d4e098ac5e91dc92", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setTarget(String target)", "signatureAfterChange": "     public void setTarget(String target)", "diff": ["-            customTarget.add(Utils.getTokenId(aSTarget.trim()));", "+            customTarget.add(TokenUtils.getTokenId(aSTarget.trim()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "845805b19752254b0266ab00c4d3728e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheckTest.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testAnnotationSpecific()         throws Exception", "signatureAfterChange": "      @Test     public void testAnnotationSpecific()         throws Exception", "diff": ["-        checkConfig.addAttribute(\"tokens\", Utils.getTokenName(TokenTypes.ANNOTATION_DEF));", "+        checkConfig.addAttribute(\"tokens\", TokenUtils.getTokenName(TokenTypes.ANNOTATION_DEF));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85ca0ae299d73fe13c8ac61d969b9cf4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/TokenTypesTest.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testGetShortDescription()", "signatureAfterChange": "     @Test     public void testGetShortDescription()", "diff": ["-                \"The <code>==</code> (equal) operator.\", Utils", "+                \"The <code>==</code> (equal) operator.\", TokenUtils"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dd9539e4f21e3b9e40e29fbfb4c2619", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheckTest.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testClassSpecific()         throws Exception", "signatureAfterChange": "      @Test     public void testClassSpecific()         throws Exception", "diff": ["-        checkConfig.addAttribute(\"tokens\", Utils.getTokenName(TokenTypes.CLASS_DEF));", "+        checkConfig.addAttribute(\"tokens\", TokenUtils.getTokenName(TokenTypes.CLASS_DEF));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbbd9e037d3075a6886ef549b1981172", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenCheck.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public int[] getAcceptableTokens()", "signatureAfterChange": "      @Override     public int[] getAcceptableTokens()", "diff": ["-        return Utils.getAllTokenIds();", "+        return TokenUtils.getAllTokenIds();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1e8515c48918c638d5b3aa1bc5ca06b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void logAsTotal(DetailAST ast)", "signatureAfterChange": "     private void logAsTotal(DetailAST ast)", "diff": ["-        final String name = Utils.getTokenName(ast.getType());", "+        final String name = TokenUtils.getTokenName(ast.getType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5d524cecb4be3617f6b5c18980656a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void registerCheck(Check check)         throws CheckstyleException", "signatureAfterChange": "     private void registerCheck(Check check)         throws CheckstyleException", "diff": ["-                final int tokenId = Utils.getTokenId(token);", "+                final int tokenId = TokenUtils.getTokenId(token);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8f8aadb8c30588b3409095e23c1afdf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingSwitchDefaultCheck.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public MissingSwitchDefaultCheck()", "signatureAfterChange": "     public MissingSwitchDefaultCheck()", "diff": ["-        setLimitedTokens(Utils.getTokenName(TokenTypes.LITERAL_DEFAULT));", "+        setLimitedTokens(TokenUtils.getTokenName(TokenTypes.LITERAL_DEFAULT));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9de14b30a6b09e31484aa753ace7ab3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public final void setIgnoreOccurrenceContext(String... strRep)", "signatureAfterChange": "     public final void setIgnoreOccurrenceContext(String... strRep)", "diff": ["-            final int type = Utils.getTokenId(s);", "+            final int type = TokenUtils.getTokenId(s);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0af6f1e187a2e9d8d2a192c11c3dd92", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void setConstantWaiverParentToken(String... tokens)", "signatureAfterChange": "     public void setConstantWaiverParentToken(String... tokens)", "diff": ["-            constantWaiverParentToken[i] = Utils.getTokenId(tokens[i]);", "+            constantWaiverParentToken[i] = TokenUtils.getTokenId(tokens[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9c8828bb924480238eca3d1adf73716", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void setMemberModifiers(String modifiers)", "signatureAfterChange": "     public void setMemberModifiers(String modifiers)", "diff": ["-            modifiersList.add(Utils.getTokenId(modifier.trim()));", "+            modifiersList.add(TokenUtils.getTokenId(modifier.trim()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc255f2b4fc7ea49238516f6c86c2b64", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private Collection<Check> getListOfChecks(DetailAST ast, AstState astState)", "signatureAfterChange": "     private Collection<Check> getListOfChecks(DetailAST ast, AstState astState)", "diff": ["-        final String tokenType = Utils.getTokenName(ast.getType());", "+        final String tokenType = TokenUtils.getTokenName(ast.getType());"]}]}