{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "03a0e490aa3dd5f0484ab680a4b0b75a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "610372a9bd5f125e92686852298bab4d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "dc3fc5fab0cb1cadd5793065d8e44bbd2c5f67e2", "commitAfterChange": "0855fff95e4aac170ac5ab74cd1872f20555a214", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public ExpressionHandler getHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "signatureAfterChange": "     public ExpressionHandler getHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "diff": ["+            LOG.debug(\"couldn't instantiate constructor for \" + aAst, e);", "-                                       + aAst, e);", "+                                       + aAst);", "+            LOG.debug(\"couldn't access constructor for \" + aAst, e);", "-                                       + aAst,", "-                                       e);", "+                                       + aAst);", "+            LOG.debug(\"couldn't instantiate constructor for \" + aAst, e);", "-                                       + aAst, e);", "+                                       + aAst);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbba8b1f36c2fe571afcc3d46d037860", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/digester/com/puppycrawl/tools/checkstyle/ConfigurationRuleParser.java", "commitBeforeChange": "b2217341ecb6ae71c6f36fa22789e6e6e78d383d", "commitAfterChange": "4bcc70534f6cfef49a52e4a6d7aadee7b9bd0044", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void addRuleInstances(Digester aDigester)", "signatureAfterChange": "     public void addRuleInstances(Digester aDigester)", "diff": ["+        ", "+        aDigester.addFactoryCreate(", "+            \"*/config\", new ConfigRuleFactory());", "+        aDigester.addRule(", "+            \"*/config\", new PatternRule(\"pattern\"));", "+        aDigester.addSetNext(\"*/config\", \"add\", ruleClassName);"]}]}