{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b76e296d73c69a9e43a0d3e8cf89fd1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3df3522b9fe9e548315d3183cd9fd760", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/VerifierImpl.java", "commitBeforeChange": "85a53ccdaf182d3d87d30006320f892b24087f35", "commitAfterChange": "517e2450caba6b5e492d8a94c19cb879bada3759", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void verifyType(MyModifierSet aMods, MyCommonAST aType)", "signatureAfterChange": "     public void verifyType(MyModifierSet aMods, MyCommonAST aType)", "diff": ["+        if (!mConfig.getTypeRegexp().match(aType.getText())) {", "+            log(aType.getLineNo(),", "+                \"type name '\" + aType.getText() +", "+                \"' must match pattern '\" + mConfig.getTypePat() + \"'.\");", "+        }", "+", "+        //", "+        // Only Javadoc testing below", "+        //", "+        if (mConfig.isIgnoreJavadoc()) {", "+            return;", "+        }", "+", "-", "-        if (!mConfig.getTypeRegexp().match(aType.getText())) {", "-            log(aType.getLineNo(),", "-                \"type name '\" + aType.getText() +", "-                \"' must match pattern '\" + mConfig.getTypePat() + \"'.\");", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef2df5708f58bd33675c9c5e7a1471fd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/VerifierImpl.java", "commitBeforeChange": "85a53ccdaf182d3d87d30006320f892b24087f35", "commitAfterChange": "517e2450caba6b5e492d8a94c19cb879bada3759", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void verifyMethodJavadoc(MyModifierSet aMods,                                     MyCommonAST aReturnType,                                     MethodSignature aSig)", "signatureAfterChange": "     public void verifyMethodJavadoc(MyModifierSet aMods,                                     MyCommonAST aReturnType,                                     MethodSignature aSig)", "diff": ["+        if (mConfig.isIgnoreJavadoc()) {", "+            return; // no need to really check anything", "+        }", "+"]}]}