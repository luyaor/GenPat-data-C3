{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2660e3dbca80f3a544fc9c81d546fcb3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "178b0380ae389ec255a815d2e7099744", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/NoFinalizerCheck.java", "commitBeforeChange": "911065320fb39299f442ea08f775cfe08ba2a2ed", "commitAfterChange": "2ee144e379c8c9f382135f183e84d04851b69fd1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public NoFinalizerCheck()", "diff": ["+     */", "+    public NoFinalizerCheck()", "-", "-    @Override", "-    public void visitToken(DetailAST aAST)", "-    {", "-        final DetailAST mid = aAST.findFirstToken(TokenTypes.IDENT);", "-        final String methodName = mid.getText();", "-", "-        if (\"finalize\".equals(methodName)) {", "-", "-            final DetailAST params = aAST.findFirstToken(TokenTypes.PARAMETERS);", "-            final boolean hasEmptyParamList =", "-                !params.branchContains(TokenTypes.PARAMETER_DEF);", "-", "-            if (hasEmptyParamList) {", "-                log(aAST.getLineNo(), \"avoid.finalizer.method\");", "-            }", "-        }", "+        super(\"finalize\", \"avoid.finalizer.method\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47ac195d200528e50f179f759d5a44f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/NoCloneCheck.java", "commitBeforeChange": "911065320fb39299f442ea08f775cfe08ba2a2ed", "commitAfterChange": "2ee144e379c8c9f382135f183e84d04851b69fd1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r     @Override\r     public void visitToken(DetailAST aAST)", "signatureAfterChange": "\r     public NoCloneCheck()", "diff": ["+     */\r", "+    public NoCloneCheck()\r", "-\r", "-    @Override\r", "-    public void visitToken(DetailAST aAST)\r", "-    {\r", "-        final DetailAST mid = aAST.findFirstToken(TokenTypes.IDENT);\r", "-        final String methodName = mid.getText();\r", "-\r", "-        if (\"clone\".equals(methodName)) {\r", "-            final DetailAST params = aAST.findFirstToken(TokenTypes.PARAMETERS);\r", "-            final boolean hasEmptyParamList =\r", "-                !params.branchContains(TokenTypes.PARAMETER_DEF);\r", "-\r", "-            if (hasEmptyParamList) {\r", "-                log(aAST.getLineNo(), \"avoid.clone.method\");\r", "-            }\r", "-        }\r", "+        super(\"clone\", \"avoid.clone.method\");\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2bad5cd7c1008e90cc620ce86047c46", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "ca2572e99a8cca7a52101da71916bfdd5d675fb2", "commitAfterChange": "d734bff020d3525c811a0b273021a5ac5665ade8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Class<?> resolve(String name, String currentClass)         throws ClassNotFoundException", "signatureAfterChange": "     public Class<?> resolve(String name, String currentClass)         throws ClassNotFoundException", "diff": ["-        //inner class of this class???", "+        // see if inner class of this class", "+        clazz = resolveInnerClass(name, currentClass);", "+        if (clazz != null) {", "+            return clazz;", "+        }", "+", "+        clazz = resolveByStarImports(name);", "+        if (clazz != null) {", "+            return clazz;", "+        }", "+", "+", "+        // Giving up, the type is unknown, so load the class to generate an", "+        // exception", "+        return safeLoad(name);", "+    }", "-                return safeLoad(innerClass);", "-        // try star imports", "-                    return clazz;", "-", "-        // Giving up, the type is unknown, so load the class to generate an", "-        // exception", "-        return safeLoad(name);"]}]}