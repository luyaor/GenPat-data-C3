{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9ddfa526e7100e82c7073b2d757b43f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b40e008d9d834c4f79ad73934712a2ed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/naming/InputMethodNameExtra.java", "commitBeforeChange": "d0a19311e37764cde921c38a618691aa340d252e", "commitAfterChange": "fb5961a477902af14dd1337c8e7eb3ce7b36d6a4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void doit()", "signatureAfterChange": "     public void doit()", "diff": ["-        createNameHistoryDetails(historyDetails, previousNameService, entityId,", "+        Object historyDetails = null;", "+\t\tObject previousNameService = null;", "+\t\tObject entityId = null;", "+\t\tObject agencyName = null;", "+\t\tcreateNameHistoryDetails(historyDetails, previousNameService, entityId,", "-                    return getPreviousName(TypeOfName.AGENCY_NAME);", "+                    return getPreviousName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0b2246498f272e62e4d8d6de505b56d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private static DetailAST         getNextSubTreeNode(DetailAST aCurrentNodeAst, DetailAST aSubTreeRootAst)", "signatureAfterChange": "     private static DetailAST         getNextSubTreeNode(DetailAST currentNodeAst, DetailAST subTreeRootAst)", "diff": ["-        getNextSubTreeNode(DetailAST aCurrentNodeAst, DetailAST aSubTreeRootAst)", "+        getNextSubTreeNode(DetailAST currentNodeAst, DetailAST subTreeRootAst)", "-        DetailAST currentNode = aCurrentNodeAst;", "+        DetailAST currentNode = currentNodeAst;", "-                if (currentNode.getParent().equals(aSubTreeRootAst)) {", "+                if (currentNode.getParent().equals(subTreeRootAst)) {"]}]}