{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c0c4c098ae92a0b4a323f5279f3d7e1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70832ced97ea0931e748d437139ba43e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ForHandler.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private void checkForParams()", "signatureAfterChange": "     private void checkForParams()", "diff": ["-        IndentLevel expected = new IndentLevel(getLevel(), getBasicOffset());", "+        final IndentLevel expected =", "+            new IndentLevel(getLevel(), getBasicOffset());", "+        final DetailAST init = getMainAst().findFirstToken(TokenTypes.FOR_INIT);", "-        DetailAST init = getMainAst().findFirstToken(TokenTypes.FOR_INIT);", "-            DetailAST cond =", "+            final DetailAST cond =", "-            DetailAST iter =", "+            final DetailAST iter =", "-            DetailAST forEach =", "+            final DetailAST forEach ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c053f69ec8dd41f0f396f1adfa5aff8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/MethodParamPadTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void operatorWrapTest() throws Exception", "signatureAfterChange": "      @Test     public void operatorWrapTest() throws Exception", "diff": ["-        Class<MethodParamPadCheck> clazz = MethodParamPadCheck.class;", "-        String messageKey = \"line.previous\";", "+        final Class<MethodParamPadCheck> clazz = MethodParamPadCheck.class;", "+        final String messageKey = \"line.previous\";", "-        Configuration checkConfig = builder.getCheckConfig(\"MethodParamPad\");", "-        String filePath = builder.getFilePath(\"MethodParamPadInput\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"MethodParamPad\");", "+        final String filePath = builder.getFilePath(\"MethodParamPadInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}]}