{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "10b9996ff2d3567e9001e8477ffa7075", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "773ff94cd2f11e61ce244a7d12a72891", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "f8ea4c69a2228c5aca6c0b6e08a39a613d157708", "commitAfterChange": "8d6fa332a9c8b0c350dfcb1d923d70bc5f3d921b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 20, "signatureBeforeChange": "     void reportImport(int aLineNo, String aType);", "signatureAfterChange": "     void reportImport(int aLineNo, String aType)", "diff": ["-    void reportImport(int aLineNo, String aType);", "+    void reportImport(int aLineNo, String aType)", "+    {", "+        if (!mConfig.isIgnoreImports()) {", "+            // Check for a duplicate import", "+            final Iterator it = mImports.iterator();", "+            while (it.hasNext()) {", "+                final LineText lt = (LineText) it.next();", "+                if (aType.equals(lt.getText())) {", "+                    log(aLineNo,", "+                        \"Duplicate import to line \" + lt.getLineNo() + \".\");", "+                }", "+            }", "+            // Add to list to check for duplicates and usage", "+            mImports.add(new LineText(aLineNo, aType));", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fb6e6b91e5004dd6ad4cb790443a699", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RedundantImportCheck.java", "commitBeforeChange": "aa5dbacdcbf20a9b56e2f7ecb577bb47778b0c54", "commitAfterChange": "84c1f8375fa540e7b0313b95af6be6000e3c4c71", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["+            // Check for a duplicate import", "+            final Iterator it = mImports.iterator();", "+            while (it.hasNext()) {", "+                final FullIdent full = (FullIdent) it.next();", "+                if (imp.getText().equals(full.getText())) {", "+                    log(aAST.getLineNo(),", "+                        aAST.getColumnNo(),", "+                        \"import.duplicate\",", "+                        new Integer(full.getLineNo()));", "+                }", "+            }", "+", "+            mImports.add(imp);"]}]}