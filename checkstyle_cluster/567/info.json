{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc5f36dc008612d5a27f24da7ca21be5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20fd665ab7ceaf382b34f5b7b708400d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/doclets/TokenTypesDoclet.java", "commitBeforeChange": "0e7ff063f8a07d9a5bf13a8b2c22bb8b8abf8162", "commitAfterChange": "9fe85771081f675ffba46da219957c3450801c92", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static boolean start(RootDoc root)             throws FileNotFoundException, UnsupportedEncodingException", "signatureAfterChange": "     public static boolean start(RootDoc root)             throws FileNotFoundException, UnsupportedEncodingException", "diff": ["-            if (classes.length != 1", "-                || !\"TokenTypes\".equals(classes[0].name())) {", "-                final String message =", "-                    \"The doclet should be used for TokenTypes only\";", "-                throw new IllegalArgumentException(message);", "-            }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25742ed9f7f8c38412fd4382b0280f24", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "93587ecf374c8dd9f040fd3667efc47a3d84ff5d", "commitAfterChange": "b06e2e0015944ceaa74a10134bf06ac5c9e53782", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void setIllegalClassNames(String[] aClassNames)", "signatureAfterChange": "     public void setIllegalClassNames(String[] aClassNames)", "diff": ["-            final int lastDot = name.lastIndexOf(\".\");", "-            if ((lastDot > 0) && (lastDot < (name.length() - 1))) {", "-                final String shortName =", "-                    name.substring(name.lastIndexOf(\".\") + 1);", "-                mIllegalClassNames.add(shortName);", "-            }"]}]}