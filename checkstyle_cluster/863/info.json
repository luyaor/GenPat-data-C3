{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "028aa3b0f971033ff2501adad8456803", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ac02b635dd44d1b3444e53ffa9dc70a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/whitespace/TypecastParenPadCheckTest.java", "commitBeforeChange": "35e4a41c1027d5078cbaf0d3988a21c12a2daf7e", "commitAfterChange": "e55435125ea57e96f0bf876dd13e78b0ae02cd52", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDefault()         throws Exception", "signatureAfterChange": "     public void testDefault()         throws Exception", "diff": ["-            \"89:21: ')' is preceeded with whitespace.\",", "+            \"89:21: ')' is preceded with whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a70882c2ccf11fba9c3f620ad0925dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      @Test     public void negativeNumberInAttribute()         throws IOException", "signatureAfterChange": "      @Test     public void negativeNumberInAttribute()         throws IOException", "diff": ["-        String filename = getHtmlPath(\"NegativeNumberInAttribute.txt\");", "+        String filename = getHtmlPath(\"InputNegativeNumberInAttribute.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cfceebed4a3743b4773b21e58b2368a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void paramWithGeneric()         throws IOException", "signatureAfterChange": "      @Test     public void paramWithGeneric()         throws IOException", "diff": ["-        String filename = getDocPath(\"ParamWithGeneric.txt\");", "+        String filename = getDocPath(\"InputParamWithGeneric.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa93a3866986f48a7bc807f3200c0334", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheckTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testNpe() throws Exception", "signatureAfterChange": "      @Test     public void testNpe() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputNoWhiteSpaceAfterCheckFormerNpe.java\"),", "+        verify(checkConfig, getPath(\"InputNoWhiteSpaceAfterCheckFormerNpe.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b48a497340ddf54ba548b37944190215", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingSwitchDefaultCheckTest.java", "commitBeforeChange": "bca492cc217f781c64091ec00cccf17d60be893c", "commitAfterChange": "d74f5bb61c9d8a45af94f5539b2001d25e1f3076", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testMissingSwitchDefault() throws Exception", "signatureAfterChange": "      @Test     public void testMissingSwitchDefault() throws Exception", "diff": ["-            \"17:9: \" + getCheckMessage(MSG_KEY, \"default\"),", "+            \"17: \" + getCheckMessage(MSG_KEY, \"default\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5e89f57aaeb4bc92e656319e50b5aac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void test() throws Exception", "signatureAfterChange": "      @Test     public void test() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"BooleanExpressionComplexityCheckTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputBooleanExpressionComplexity.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6d1fe009c6238cc8a96c254857f565b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/Java7StringSwitchTest.java", "commitBeforeChange": "2fe5ade8b31c0c7b32fab4e25f1ec73c9ab31b8d", "commitAfterChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testCanParse()         throws Exception", "signatureAfterChange": "      @Test     public void testCanParse()         throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"grammars/InputJava7StringSwitch.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJava7StringSwitch.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc34249f67763b51b0729cadb8688366", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 43, "signatureBeforeChange": "      @Test     public void testInvalidWhileWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testInvalidWhileWithChecker()         throws Exception", "diff": ["-        final String fname = getPath(\"indentation/InputInvalidWhileIndent.java\");", "+        final String fname = getPath(\"InputInvalidWhileIndent.java\");"]}]}