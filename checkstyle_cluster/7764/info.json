{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc6fecb3ddb58f3acc3c2356334f6724", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c21376a9f03e9de10326f620790f0f7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-    public void beginTree(DetailAST aRootAST)", "+    public void beginTree(DetailAST rootAST)", "-        final Deque<LexicalFrame> aFrameStack = Lists.newLinkedList();", "-        aFrameStack.add(new GlobalFrame());", "+        final Deque<LexicalFrame> frameStack = Lists.newLinkedList();", "+        frameStack.add(new GlobalFrame());", "-        mFrames = Maps.newHashMap();", "+        frames = Maps.newHashMap();", "-        DetailAST curNode = aRootAST;", "+        DetailAST curNode = rootAST;", "-            collectDeclarations(aFrameStack, curNode);", "+            collectDeclarations(frameStack, curNode);", "-                endCollectingDeclarations(aFrameStack, curNode);", "+                endCollectingDeclarations(frameStack, curNode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed6547b14059541def4098461542ca07", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "f010eb47869bae692609de487d6140373e02f3a3", "commitAfterChange": "907a19906f790ce8faea7aa74e12608538dca1b6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST aRootAST)", "diff": ["-        mFrames = new FrameStack();", "+        final FrameStack aFrameStack = new FrameStack();", "+        mFrames = Maps.newHashMap();", "+", "+        DetailAST curNode = aRootAST;", "+        while (curNode != null) {", "+            collectDeclarations(aFrameStack, curNode);", "+            DetailAST toVisit = curNode.getFirstChild();", "+            while (curNode != null && toVisit == null) {", "+                endCollectingDeclarations(aFrameStack, curNode);", "+                toVisit = curNode.getNextSibling();", "+                if (toVisit == null) {", "+                    curNode = curNode.getParent();", "+                }", "+            }", "+            curNode = toVisit;", "+        }"]}]}