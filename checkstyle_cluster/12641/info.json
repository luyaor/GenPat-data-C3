{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c260a40d152ec517c448386c30cbbff4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "225af4f6f8c4f24c379bc7697074f650", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void checkSingleLine(int aLineNum, IndentLevel aIndentLevel)", "signatureAfterChange": "     private void checkSingleLine(int aLineNum, IndentLevel aIndentLevel)", "diff": ["-        String line = mIndentCheck.getLines()[aLineNum - 1];", "-        int start = getLineStart(line);", "+        final String line = mIndentCheck.getLines()[aLineNum - 1];", "+        final int start = getLineStart(line);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f0b7c0f131cc44e62e03efdb53694b7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected final void checkExpressionSubtree(         DetailAST aTree,         IndentLevel aLevel,         boolean aFirstLineMatches,         boolean aAllowNesting     )", "signatureAfterChange": "     protected final void checkExpressionSubtree(         DetailAST aTree,         IndentLevel aLevel,         boolean aFirstLineMatches,         boolean aAllowNesting     )", "diff": ["-        LineSet subtreeLines = new LineSet();", "-        int firstLine = getFirstLine(Integer.MAX_VALUE, aTree);", "+        final LineSet subtreeLines = new LineSet();", "+        final int firstLine = getFirstLine(Integer.MAX_VALUE, aTree);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a82f8fdc090fccb03b8293357558429", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/IfHandler.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void checkCondExpr()", "signatureAfterChange": "     private void checkCondExpr()", "diff": ["-        DetailAST condAst = (DetailAST)", "+        final DetailAST condAst = (DetailAST)", "-        IndentLevel expected = new IndentLevel(getLevel(), getBasicOffset());", "-", "+        final IndentLevel expected =", "+            new IndentLevel(getLevel(), getBasicOffset());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d47879bd083a7c43364b0b736be5c69", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            String name = ident.getText();", "-            int groupIdx = getGroupNumber(name);", "+            final String name = ident.getText();", "+            final int groupIdx = getGroupNumber(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cd52264ffe235b504806975d352de85", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     private void checkThrowsTags(List aTags, List aThrows,         boolean aReportExpectedTags)", "signatureAfterChange": "     private void checkThrowsTags(List aTags, List aThrows,         boolean aReportExpectedTags)", "diff": ["-            Token token = new Token(tag.getArg1(), tag.getLineNo(), tag", "+            final Token token = new Token(tag.getArg1(), tag.getLineNo(), tag", "-            ClassInfo documentedCI = createClassInfo(token,", "+            final ClassInfo documentedCI = createClassInfo(token,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b12d80facae7c14f80eb4c469b8c2379", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        ExpressionHandler handler = mHandlerFactory.getHandler(this, aAST,", "+        final ExpressionHandler handler = mHandlerFactory.getHandler(this, aAST,", "-        catch (NullPointerException npe) {", "+        catch (final NullPointerException npe) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9906c133220cd489f9170bd03aa8575", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private Vector getJavadocTags(TextBlock aCmt)", "signatureAfterChange": "     private Vector getJavadocTags(TextBlock aCmt)", "diff": ["-        Vector tags = new Vector();", "+        final Vector tags = new Vector();", "-            Matcher tagMatcher = tagPattern.matcher(s);", "+            final Matcher tagMatcher = tagPattern.matcher(s);"]}]}