{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e4494f4b0a07dbf6650ff11575906c2b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35e8730e2eac8cd233668ebc06334753", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "098124a60184d272c580db0dbeb71a8181cf4127", "commitAfterChange": "7552a0b72e07c9a0070e84789b5abe6d293de6e0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     static String replaceProperties(             String aValue, PropertyResolver aProps, String aDefaultValue)         throws CheckstyleException", "signatureAfterChange": "     static String replaceProperties(             String aValue, PropertyResolver aProps, String aDefaultValue)         throws CheckstyleException", "diff": ["-        final List<String> fragments = new ArrayList<String>();", "-        final List<String> propertyRefs = new ArrayList<String>();", "+        final List<String> fragments = Lists.newArrayList();", "+        final List<String> propertyRefs = Lists.newArrayList();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a0059c67667a9307e6ae70a28a61695", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "commitAfterChange": "26513d52336c42432ee21565b253297ba4174530", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private static int compareImports(String import1, String import2)", "signatureAfterChange": "     private static int compareImports(String import1, String import2)", "diff": ["-        final String[] import1Tokens = import1.split(\"\\\\.\");", "-        final String[] import2Tokens = import2.split(\"\\\\.\");", "+        final String separator = \"\\\\.\";", "+        final String[] import1Tokens = import1.split(separator);", "+        final String[] import2Tokens = import2.split(separator);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccd9d0ff17be05c4bf4225ba71433c22", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "ca634f7cafbf0d8f21eac1c4badacbe2f3cf8832", "commitAfterChange": "ff5cbc39c4882b3a3dcdbedcad9393e170148725", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private Entry<DetailAST, Integer> calculateDistanceBetweenScopes(             DetailAST ast, DetailAST variable)", "signatureAfterChange": "     private Entry<DetailAST, Integer> calculateDistanceBetweenScopes(             DetailAST ast, DetailAST variable)", "diff": ["-            final List<DetailAST> variableUsageExpressions = new ArrayList<DetailAST>();", "+            final List<DetailAST> variableUsageExpressions = new ArrayList<>();", "-        return new SimpleEntry<DetailAST, Integer>(variableUsageAst, dist);", "+        return new SimpleEntry<>(variableUsageAst, dist);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7bb8671566cc087fdb6c896f4e43b46", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Utils.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public static File[] filterFilesByExtension(             File[] aFiles, String[] aFileExtensions)", "signatureAfterChange": "     public static File[] filterFilesByExtension(             File[] aFiles, String[] aFileExtensions)", "diff": ["-        final ArrayList files = new ArrayList(aFiles.length);", "+        final List<File> files = new ArrayList<File>(aFiles.length);", "-        return (File[]) files.toArray(new File[files.size()]);", "+        return files.toArray(new File[files.size()]);"]}]}