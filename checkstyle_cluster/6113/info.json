{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b58d60dc7d2d635f71e74a2aa2c8eb2", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b6ed53d5c82a4dbb1ee3db6e5a04cca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "0855fff95e4aac170ac5ab74cd1872f20555a214", "commitAfterChange": "b3f216962675b06505885a2e82af150e6b12bb56", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processVariable(DetailAST aAST)", "signatureAfterChange": "     private void processVariable(DetailAST aAST)", "diff": ["-                    if (aFieldsSet.contains(name)) {", "-                        if ((mRegexp == null) || (!getRegexp().match(name))) {", "-                            if (!isIgnoredSetterParam(aAST, name)) {", "-                                log(nameAST.getLineNo(), nameAST.getColumnNo(),", "-                                    \"hidden.field\", name);", "-                                break;", "-                            }", "-                        }", "+                    if (aFieldsSet.contains(name)", "+                        && ((mRegexp == null) || (!getRegexp().match(name)))", "+                        && !isIgnoredSetterParam(aAST, name))", "+                    {", "+                        log(nameAST.getLineNo(), nameAST.getColumnNo(),", "+                            \"hidden.field\", name);", "+                        break;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "563939dec0ba54c49f2d238365d6ab87", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "0868085098dfde138eee8817c66cd4d214633403", "commitAfterChange": "ae0e7def779cddabf1e93ee744b9b341ef27647f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void verifyBrace(final DetailAST brace,                              final DetailAST startToken)", "signatureAfterChange": "     private void verifyBrace(final DetailAST brace,                              final DetailAST startToken)", "diff": ["-                // not on the same line", "-                if (startToken.getLineNo() + 1 == brace.getLineNo()) {", "-                    if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {", "-                        log(brace.getLineNo(), brace.getColumnNo(),", "-                                MSG_KEY_LINE_NEW, \"{\");", "-                    }", "-                    else if (prevLineLen + 2 <= maxLineLength) {", "-                        log(brace.getLineNo(), brace.getColumnNo(),", "-                                MSG_KEY_LINE_PREVIOUS, \"{\");", "-                    }", "-                }", "-                else if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {", "-                    log(brace.getLineNo(), brace.getColumnNo(),", "-                            MSG_KEY_LINE_NEW, \"{\");", "-                }", "+", "+                validateNewLinePosion(brace, startToken, braceLine, prevLineLen);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a5ab7aa446c7e5496d3293b1ae2a9b2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "38bba612c02504fcb3db2bdbcdf1dda2252d179f", "commitAfterChange": "319b04ff74aaf0c08b9c417274872be47b93b346", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void checkUnusedTypeParamTags(         final List<JavadocTag> tags,         final List<String> typeParamNames)", "signatureAfterChange": "     private void checkUnusedTypeParamTags(         final List<JavadocTag> tags,         final List<String> typeParamNames)", "diff": ["-                matcher.find();", "-                final String typeParamName = matcher.group(1).trim();", "-                if (!typeParamNames.contains(typeParamName)) {", "-                    log(tag.getLineNo(), tag.getColumnNo(),", "-                        UNUSED_TAG,", "-                        JavadocTagInfo.PARAM.getText(),", "-                        OPEN_ANGLE_BRACKET + typeParamName + CLOSE_ANGLE_BRACKET);", "+                if (matcher.find()) {", "+                    final String typeParamName = matcher.group(1).trim();", "+                    if (!typeParamNames.contains(typeParamName)) {", "+                        log(tag.getLineNo(), tag.getColumnNo(),", "+                            UNUSED_TAG,", "+                            JavadocTagInfo.PARAM.getText(),", "+                            OPEN_ANGLE_BRACKET + typeParamName + CLOSE_ANGLE_BRACKET);", "+                    }"]}]}