{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62d15d2f26c56051fbc5f3866def0c58", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d38d86ae420e177dd53f8601975e4ec9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Override     protected final void processAST(DetailAST aAST)", "signatureAfterChange": "      @Override     protected final void processAST(DetailAST ast)", "diff": ["-    protected final void processAST(DetailAST aAST)", "+    protected final void processAST(DetailAST ast)", "-        if ((aAST.getType() == TokenTypes.METHOD_DEF || aAST.getType() == TokenTypes.CTOR_DEF)", "-            && (getMethodsNumberOfLine(aAST) <= mMinLineCount)", "-            || hasAllowedAnnotations(aAST))", "+        if ((ast.getType() == TokenTypes.METHOD_DEF || ast.getType() == TokenTypes.CTOR_DEF)", "+            && (getMethodsNumberOfLine(ast) <= minLineCount)", "+            || hasAllowedAnnotations(ast))", "-        final Scope theScope = calculateScope(aAST);", "-        if (shouldCheck(aAST, theScope)) {", "+        final Scope theScope = calculateScope(ast);", "+        if (shouldCheck(ast, theScope)) {", "-            final TextBlock cmt = contents.getJavadocBefore(aAST.getLineNo());", "+            final TextBlock cmt = contents.getJavadocBefore(ast.getLineNo());", "-                if (!isMissingJavadocAllowed(aAST)) {", "-                    log(aAST, \"javadoc.missing\");", "+                if (!isMissingJavadocAllowed(ast)) {", "+                    log(ast, \"javadoc.missing\");", "-                checkComment(aAST, cmt);", "+                checkComment(ast, cmt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd361c0ee2647e9ce139acb4bd9233e8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "5e7932be70b20345b77f6fc2adb8423f2d6a091c", "commitAfterChange": "cdf0ac0f4c4fb8ab63c4bb7d144a71682c6e400a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        if (!ScopeUtils.inCodeBlock(aAST)) {", "-            final DetailAST mods =", "-                aAST.findFirstToken(TokenTypes.MODIFIERS);", "-            final Scope declaredScope = ScopeUtils.getScopeFromMods(mods);", "-            final Scope variableScope =", "-                ScopeUtils.inInterfaceBlock(aAST)", "-                    ? Scope.PUBLIC", "-                    : declaredScope;", "+        if (shouldCheck(aAST)) {", "+            final FileContents contents = getFileContents();", "+            final TextBlock cmt =", "+                contents.getJavadocBefore(aAST.getLineNo());", "-            if (variableScope.isIn(mScope)) {", "-                final Scope surroundingScope =", "-                    ScopeUtils.getSurroundingScope(aAST);", "-", "-                if ((surroundingScope == null)", "-                    || surroundingScope.isIn(mScope))", "-                {", "-                    final FileContents contents = getFileContents();", "-                    final TextBlock cmt =", "-                        contents.getJavadocBefore(aAST.getLineNo());", "-", "-                    checkComment(cmt);", "-                }", "-            }", "+            checkComment(cmt);", "+    }"]}]}