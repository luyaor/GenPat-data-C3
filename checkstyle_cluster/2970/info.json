{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e7600e33188a76dde3c802e767770bc", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02338a415b543bee1556eee2aae8f66f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "6e96026ec6d95fc5eadd3044cab91c24c73c8e0c", "commitAfterChange": "e00c478dd61d9d883e41b500b780ab217582c2e7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public int process(List<File> aFiles)", "signatureAfterChange": "     public int process(List<File> aFiles)", "diff": ["-        for (FileSetCheck fsc : mFileSetChecks) {", "+        for (final FileSetCheck fsc : mFileSetChecks) {", "-        for (File f : aFiles) {", "+        for (final File f : aFiles) {", "-                for (FileSetCheck fsc : mFileSetChecks) {", "+                for (final FileSetCheck fsc : mFileSetChecks) {", "-        for (FileSetCheck fsc : mFileSetChecks) {", "+        for (final FileSetCheck fsc : mFileSetChecks) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04d5f601061a8d73696109532dbf2165", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SeverityMatchFilterTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testSeverity()", "signatureAfterChange": "      @Test     public void testSeverity()", "diff": ["-        SeverityLevel errorLevel = SeverityLevel.ERROR;", "-        LocalizedMessage errorMessage =", "+        final SeverityLevel errorLevel = SeverityLevel.ERROR;", "+        final LocalizedMessage errorMessage =", "-        SeverityLevel infoLevel = SeverityLevel.INFO;", "-        LocalizedMessage infoMessage =", "+        final SeverityLevel infoLevel = SeverityLevel.INFO;", "+        final LocalizedMessage infoMessage ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "067a2f469b2ead0bfa2ca962be03ef60", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule53camelcase/AbbreviationAsWordInNameTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void abbreviationAsWordInNameTest() throws Exception", "signatureAfterChange": "      @Test     public void abbreviationAsWordInNameTest() throws Exception", "diff": ["-        int maxCapitalCount = 1;", "-        String msg = getCheckMessage(clazz, MSG_KEY, maxCapitalCount);", "+        final int maxCapitalCount = 1;", "+        final String msg = getCheckMessage(clazz, MSG_KEY, maxCapitalCount);", "-        String filePath = builder.getFilePath(\"InputAbbreviationAsWordInTypeNameCheck\");", "+        final String filePath = builder.getFilePath(\"InputAbbreviationAsWordInTypeNameCheck\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "076c8ec5ffdabd12f9f348a8c00444f3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule731selfexplanatory/JavadocMethodTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void javadocMethodTest() throws Exception", "signatureAfterChange": "      @Test     public void javadocMethodTest() throws Exception", "diff": ["-        String msg = getCheckMessage(JavadocMethodCheck.class, \"javadoc.missing\");", "+        final String msg = getCheckMessage(JavadocMethodCheck.class, \"javadoc.missing\");", "-        Configuration checkConfig = builder.getCheckConfig(\"JavadocMethod\");", "-        String filePath = builder.getFilePath(\"InputJavadocMethodCheck\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"JavadocMethod\");", "+        final String filePath = builder.getFilePath(\"InputJavadocMethodCheck\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "091eac3e0f9977d041b048adc3cf2009", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule43onestatement/OneStatementPerLineTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void oneStatementTest() throws Exception", "signatureAfterChange": "      @Test     public void oneStatementTest() throws Exception", "diff": ["-        String msg = getCheckMessage(OneStatementPerLineCheck.class, \"multiple.statements.line\");", "+        final String msg = getCheckMessage(OneStatementPerLineCheck.class,", "+            \"multiple.statements.line\");", "-        Configuration checkConfig = builder.getCheckConfig(\"OneStatementPerLine\");", "-        String filePath = builder.getFilePath(\"OneStatementPerLineInput\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"OneStatementPerLine\");", "+        final String filePath = builder.getFilePath(\"OneStatementPerLineInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0af2b55c8e602519c4e6f237ee1cfc08", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/comments/CompareTreesWithComments.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private static boolean isAstEqualsSafe(DetailAST expected, DetailAST actual)", "signatureAfterChange": "      private static boolean isAstEqualsSafe(DetailAST expected, DetailAST actual)", "diff": ["-            DetailAST childExpected = expected.getFirstChild();", "-            DetailAST childActual = actual.getFirstChild();", "+            final DetailAST childExpected = expected.getFirstChild();", "+            final DetailAST childActual = actual.getFirstChild();", "-                DetailAST nextSiblingExpected = expected.getNextSibling();", "-                DetailAST nextSiblingActual = actual.getNextSibling();", "+                final DetailAST nextSiblingExpected = expected.getNextSibling();", "+                final DetailAST nextSiblingActual = actual.getNextSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d326607b2f3b2424bd1df08aa415e4a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CommitValidationTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private static RevCommitsPair resolveRevCommitsPair(Repository repo)", "signatureAfterChange": "      private static RevCommitsPair resolveRevCommitsPair(Repository repo)", "diff": ["-            ObjectId headId = repo.resolve(Constants.HEAD);", "-            RevCommit headCommit = revWalk.parseCommit(headId);", "+            final ObjectId headId = repo.resolve(Constants.HEAD);", "+            final RevCommit headCommit = revWalk.parseCommit(headId);", "-                RevCommit firstParent = headCommit.getParent(0);", "-                RevCommit secondParent = headCommit.getParent(1);", "+                final RevCommit firstParent = headCommit.getParent(0);", "+                final RevCommit secondParent = headCommit.getParent(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15e5ecfd216edf744444c1afdb8ffc10", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testUnableToReadSuppressions() throws Exception", "signatureAfterChange": "      @Test     public void testUnableToReadSuppressions() throws Exception", "diff": ["-        Class<SuppressionsLoader> loaderClass = SuppressionsLoader.class;", "-        Method loadSuppressions =", "+        final Class<SuppressionsLoader> loaderClass = SuppressionsLoader.class;", "+        final Method loadSuppressions =", "-        InputSource inputSource = new InputSource();", "+        final InputSource inputSource = new InputSource();", "-        String sourceName = \"suppressions_none.xml\";", "+        final String sourceName = \"suppressions_none.xml\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b86beb791c0e6b917a90f8c024fef47", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter6programpractice/rule64finalizers/NoFinalizerTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void noFinalizerExtendedTest() throws Exception", "signatureAfterChange": "      @Test     public void noFinalizerExtendedTest() throws Exception", "diff": ["-        String msg = getCheckMessage(NoFinalizerCheck.class, \"avoid.finalizer.method\");", "+        final String msg = getCheckMessage(NoFinalizerCheck.class, \"avoid.finalizer.method\");", "-        Configuration checkConfig = builder.getCheckConfig(\"NoFinalizer\");", "-        String filePath = builder.getFilePath(\"NoFinalizeExtendInput\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"NoFinalizer\");", "+        final String filePath = builder.getFilePath(\"NoFinalizeExtendInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20677d32eb4efa36a0ea21327b36c526", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PropertyCacheFileTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testExceptionNoSuchAlgorithmException() throws Exception", "signatureAfterChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testExceptionNoSuchAlgorithmException() throws Exception", "diff": ["-        Configuration config = new DefaultConfiguration(\"myName\");", "+        final Configuration config = new DefaultConfiguration(\"myName\");", "-        PropertyCacheFile cache = new PropertyCacheFile(config, filePath);", "+        final PropertyCacheFile cache = new PropertyCacheFile(config, filePath);", "-        Class<?>[] param = new Class<?>[1];", "+        final Class<?>[] param = new Class<?>[1];", "-        Method method = PropertyCacheFile.class.getDeclaredMethod(\"getConfigHashCode\", param);", "+        final Method method = PropertyCacheFile.class.getDeclaredMethod(\"getConfigHashCode\", param);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "248f4eb10c113f038f03b0b70653859d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CommitValidationTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testCommitMessageHasSingleLine() throws Exception", "signatureAfterChange": "      @Test     public void testCommitMessageHasSingleLine() throws Exception", "diff": ["-            String commitId = commit.getId().getName();", "-            String commitMessage = commit.getFullMessage();", "-            Matcher matcher = NEWLINE_PATTERN.matcher(commitMessage);", "+            final String commitId = commit.getId().getName();", "+            final String commitMessage = commit.getFullMessage();", "+            final Matcher matcher = NEWLINE_PATTERN.matcher(commitMessage);", "-                boolean isFoundNewLineCharacterAtTheEndOfMessage =", "+                final boolean isFoundNewLineCharacterAtTheEndOfMessage ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29aac8bb2d72d5b4ceefc698203b3783", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessageTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testBundleReloadUrlNotNullStreamNull() throws IOException", "signatureAfterChange": "      @Test     public void testBundleReloadUrlNotNullStreamNull() throws IOException", "diff": ["-        ClassLoader classloader = mock(ClassLoader.class);", "-        String resource = \"com/puppycrawl/tools/checkstyle/checks/coding/messages_en.properties\";", "+        final ClassLoader classloader = mock(ClassLoader.class);", "+        final String resource =", "+            \"com/puppycrawl/tools/checkstyle/checks/coding/messages_en.properties\";", "-        URL url = getMockUrl(null);", "+        final URL url = getMockUrl(null);", "-        LocalizedMessage.UTF8Control control = new LocalizedMessage.UTF8Control();", "+        final LocalizedMessage.UTF8Control control = new LocalizedMessage.UTF8Control();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b88d5a834b20c9c0d84ced889ccd25c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule43onestatement/OneStatementPerLineTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void oneStatementNonCompilableInputTest() throws Exception", "signatureAfterChange": "      @Test     public void oneStatementNonCompilableInputTest() throws Exception", "diff": ["-        String msg = getCheckMessage(OneStatementPerLineCheck.class, \"multiple.statements.line\");", "+        final String msg = getCheckMessage(OneStatementPerLineCheck.class,", "+            \"multiple.statements.line\");", "-        Configuration checkConfig = builder.getCheckConfig(\"OneStatementPerLine\");", "-        String filePath = new File(\"src/test/resources-noncompilable/\"", "+        final Configuration checkConfig = builder.getCheckConfig(\"OneStatementPerLine\");", "+        final String filePath = new File(\"src/test/resources-noncompilable/\"", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ca267f266d324c389c8dc34487dec2d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static Configuration loadConfiguration(InputStream aConfigStream,         PropertyResolver aOverridePropsResolver, boolean aOmitIgnoredModules)         throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(InputStream aConfigStream,         PropertyResolver aOverridePropsResolver, boolean aOmitIgnoredModules)         throws CheckstyleException", "diff": ["-        catch (ParserConfigurationException e) {", "+        catch (final ParserConfigurationException e) {", "-        catch (SAXParseException e) {", "+        catch (final SAXParseException e) {", "-        catch (SAXException e) {", "+        catch (final SAXException e) {", "-        catch (IOException e) {", "+        catch (final IOException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fe5487b447caeafe6cfe6a53800b654", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "b4e77fd043c8546f6abf99cc0196c4d47e6084b1", "commitAfterChange": "829ae4c34f89ac06043265cdb3d80639988d85d8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testRemoveFilter() throws Exception", "signatureAfterChange": "      @Test     public void testRemoveFilter() throws Exception", "diff": ["-        DebugChecker c= new DebugChecker();", "-        DebugFilter f = new DebugFilter();", "-        DebugFilter f2 = new DebugFilter();", "+        final DebugChecker c= new DebugChecker();", "+        final DebugFilter f = new DebugFilter();", "+        final DebugFilter f2 = new DebugFilter();", "-        TreeSet<LocalizedMessage> msgs = Sets.newTreeSet();", "+        final TreeSet<LocalizedMessage> msgs = Sets.newTreeSet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30ebd898f08de2041ce39d67af128888", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4832nocstylearray/ArrayTypeStyleTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void arrayTypeStyleTest() throws Exception", "signatureAfterChange": "      @Test     public void arrayTypeStyleTest() throws Exception", "diff": ["-        String msg = getCheckMessage(ArrayTypeStyleCheck.class, \"array.type.style\");", "+        final String msg = getCheckMessage(ArrayTypeStyleCheck.class, \"array.type.style\");", "-        Configuration checkConfig = builder.getCheckConfig(\"ArrayTypeStyle\");", "-        String filePath = builder.getFilePath(\"ArrayTypeStyleInput\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"ArrayTypeStyle\");", "+        final String filePath = builder.getFilePath(\"ArrayTypeStyleInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "379c9e2d16fa4f752c9c8241d30e4571", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule713atclauses/NonEmptyAtclauseDescriptionTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testSpaceSequence() throws Exception", "signatureAfterChange": "      @Test     public void testSpaceSequence() throws Exception", "diff": ["-        String msg = getCheckMessage(NonEmptyAtclauseDescriptionCheck.class, \"non.empty.atclause\");", "+        final String msg = getCheckMessage(NonEmptyAtclauseDescriptionCheck.class,", "+            \"non.empty.atclause\");", "-        Configuration checkConfig = builder.getCheckConfig(\"NonEmptyAtclauseDescription\");", "-        String filePath = builder.getFilePath(\"InputNonEmptyAtclauseDescriptionCheckSpaceSeq\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"NonEmptyAtclauseDescription\");", "+        final String filePath = builder", "+            .getFilePath(\"InputNonEmptyAtclauseDescriptionCheckSpaceSeq\");", "-        Integer[] warnList = getLineNumbersFromExpected(expected);", "+        final Integer[] warnList = getLineNumbersFromExpected(expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b83528d644c24e31b98802b6ae33c65", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testMultipleSuppression()         throws CheckstyleException", "signatureAfterChange": "      @Test     public void testMultipleSuppression()         throws CheckstyleException", "diff": ["-        SuppressElement se0 = new SuppressElement(\"file0\");", "+        final SuppressElement se0 = new SuppressElement(\"file0\");", "-        SuppressElement se1 = new SuppressElement(\"file1\");", "+        final SuppressElement se1 = new SuppressElement(\"file1\");", "-        SuppressElement se2 = new SuppressElement(\"file2\");", "+        final SuppressElement se2 = new SuppressElement(\"file2\");", "-        SuppressElement se3 = new SuppressElement(\"file3\");", "+        final SuppressElement se3 = new SuppressElement(\"file3\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ca8afb26ebaa771617b0d852505c991", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "77945f29623d52060c05e643679a7004e6b8e18d", "commitAfterChange": "f09c190dff9530b6b47ec14b3ac6d2162ba77b26", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws BuildException", "diff": ["-                DefaultContext context = new DefaultContext();", "-                ClassLoader loader =", "+                final DefaultContext context = new DefaultContext();", "+                final ClassLoader loader =", "-                ", "+", "-                    ModuleFactory moduleFactory =", "+                    final ModuleFactory moduleFactory =", "-                        mPackageNamesFile.getAbsolutePath());", "+                            mPackageNamesFile.getAbsolutePath());", "-                AuditListener[] listeners = getListeners();", "+                final AuditListener[] listeners = getListeners();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d6e920375e9407ec9088966737748c6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testWrongFile() throws Exception", "signatureAfterChange": "      @Test     public void testWrongFile() throws Exception", "diff": ["-        NewlineAtEndOfFileCheck check = new NewlineAtEndOfFileCheck();", "+        final NewlineAtEndOfFileCheck check = new NewlineAtEndOfFileCheck();", "-        File impossibleFile = new File(\"\");", "-        Set<LocalizedMessage> messages = check.process(impossibleFile, Lists.newArrayList(\"txt\"));", "+        final File impossibleFile = new File(\"\");", "+        final Set<LocalizedMessage> messages = check.process(impossibleFile,", "+            Lists.newArrayList(\"txt\"));", "-        Iterator<LocalizedMessage> iterator = messages.iterator();", "+        final Iterator<LocalizedMessage> iterator = messages.iterator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "455001e08b3d17938d8a693000bb3032", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule521packagenames/PackageNameTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void badPackageName3Test() throws Exception", "signatureAfterChange": "      @Test     public void badPackageName3Test() throws Exception", "diff": ["-        String packagePath = \"com.google.checkstyle.test.chapter5naming.rule521$packagenames\";", "-        String msg = getCheckMessage(checkConfig.getMessages(), MSG_KEY, packagePath, format);", "+        final String packagePath = \"com.google.checkstyle.test.chapter5naming.rule521$packagenames\";", "+        final String msg = getCheckMessage(checkConfig.getMessages(), MSG_KEY, packagePath, format);", "-        String filePath = builder.getFilePath(\"PackageBadNameInput3\");", "+        final String filePath = builder.getFilePath(\"PackageBadNameInput3\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45c903afeda38f77f8192b3b789c0ad5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/UtilsTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testLengthExpandedTabs()         throws Exception", "signatureAfterChange": "     @Test     public void testLengthExpandedTabs()         throws Exception", "diff": ["-        String s1 = \"\\t\";", "+        final String s1 = \"\\t\";", "-        String s2 = \"  \\t\";", "+        final String s2 = \"  \\t\";", "-        String s3 = \"\\t\\t\";", "+        final String s3 = \"\\t\\t\";", "-        String s4 = \" \\t \";", "+        final String s4 = \" \\t \";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "583ad74f19285f909aa7bad6541537f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule711generalform/SingleLineJavadocTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test(expected = Exception.class)     public void customInlineTagTest() throws Exception", "signatureAfterChange": "      @Test(expected = Exception.class)     public void customInlineTagTest() throws Exception", "diff": ["-        String msg = getCheckMessage(SingleLineJavadocCheck.class, \"singleline.javadoc\");", "+        final String msg = getCheckMessage(SingleLineJavadocCheck.class, \"singleline.javadoc\");", "-        Configuration checkConfig = builder.getCheckConfig(\"SingleLineJavadocCheck\");", "-        String filePath = builder.getFilePath(\"InputSingleLineJavadocCheckError\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"SingleLineJavadocCheck\");", "+        final String filePath = builder.getFilePath(\"InputSingleLineJavadocCheckError\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6474dc015f9410a667e183bb5dadc91b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule713atclauses/AtclauseOrderTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIncorrect() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrect() throws Exception", "diff": ["-        String msg = getCheckMessage(AtclauseOrderCheck.class, \"at.clause.order\", tagOrder);", "+        final String msg = getCheckMessage(AtclauseOrderCheck.class, \"at.clause.order\", tagOrder);", "-        Configuration checkConfig = builder.getCheckConfig(\"AtclauseOrder\");", "-        String filePath = builder.getFilePath(\"InputIncorrectAtClauseOrderCheck\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"AtclauseOrder\");", "+        final String filePath = builder.getFilePath(\"InputIncorrectAtClauseOrderCheck\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "647b39e5d2e885804b09597a6e6048c3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testLogIOExceptionFileNotFound() throws Exception", "signatureAfterChange": "      @Test     public void testLogIOExceptionFileNotFound() throws Exception", "diff": ["-        TranslationCheck check = new TranslationCheck();", "-        DefaultConfiguration checkConfig = createCheckConfig(TranslationCheck.class);", "+        final TranslationCheck check = new TranslationCheck();", "+        final DefaultConfiguration checkConfig = createCheckConfig(TranslationCheck.class);", "-        Checker checker = createChecker(checkConfig);", "+        final Checker checker = createChecker(checkConfig);", "-        Method loadKeys = check.getClass().getDeclaredMethod(\"loadKeys\", File.class);", "+        final Method loadKeys = check.getClass().getDeclaredMethod(\"loadKeys\", File.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65572708baf11186e5ef8b07ff28080a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule713atclauses/NonEmptyAtclauseDescriptionTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        String msg = getCheckMessage(NonEmptyAtclauseDescriptionCheck.class, \"non.empty.atclause\");", "+        final String msg = getCheckMessage(NonEmptyAtclauseDescriptionCheck.class,", "+            \"non.empty.atclause\");", "-        Configuration checkConfig = builder.getCheckConfig(\"NonEmptyAtclauseDescription\");", "-        String filePath = builder.getFilePath(\"InputNonEmptyAtclauseDescriptionCheck\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"NonEmptyAtclauseDescription\");", "+        final String filePath = builder.getFilePath(\"InputNonEmptyAtclauseDescriptionCheck\");", "-        Integer[] warnList = getLineNumbersFromExpected(expected);", "+        final Integer[] warnList = getLineNumbersFromExpected(expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67ba5c327af814a3e8381bc2f63361fe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule521packagenames/PackageNameTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void badPackageNameTest() throws Exception", "signatureAfterChange": "      @Test     public void badPackageNameTest() throws Exception", "diff": ["-        String packagePath =", "+        final String packagePath =", "-        String msg = getCheckMessage(checkConfig.getMessages(), MSG_KEY, packagePath, format);", "+        final String msg = getCheckMessage(checkConfig.getMessages(), MSG_KEY, packagePath, format);", "-        String filePath = builder.getFilePath(\"PackageNameInputBad\");", "+        final String filePath = builder.getFilePath(\"PackageNameInputBad\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6806690f0e1b7f12766b16396a02a9a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter6programpractice/rule64finalizers/NoFinalizerTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void noFinalizerBasicTest() throws Exception", "signatureAfterChange": "      @Test     public void noFinalizerBasicTest() throws Exception", "diff": ["-        String msg = getCheckMessage(NoFinalizerCheck.class, \"avoid.finalizer.method\");", "+        final String msg = getCheckMessage(NoFinalizerCheck.class, \"avoid.finalizer.method\");", "-        Configuration checkConfig = builder.getCheckConfig(\"NoFinalizer\");", "-        String filePath = builder.getFilePath(\"NoFinalizerInput\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"NoFinalizer\");", "+        final String filePath = builder.getFilePath(\"NoFinalizerInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "804598661ba3100c32cb12bfcbd2cb7b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4842fallthrow/FallThroughTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void fallThroughTest() throws Exception", "signatureAfterChange": "      @Test     public void fallThroughTest() throws Exception", "diff": ["-        String msg = getCheckMessage(FallThroughCheck.class, \"fall.through\");", "+        final String msg = getCheckMessage(FallThroughCheck.class, \"fall.through\");", "-        Configuration checkConfig = builder.getCheckConfig(\"FallThrough\");", "-        String filePath = builder.getFilePath(\"FallThroughInput\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"FallThrough\");", "+        final String filePath = builder.getFilePath(\"FallThroughInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "848a27084ffe33a9512e8ed9675359b9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "5d4dd44322aac232442d224ee28d4b6d7ab17d76", "commitAfterChange": "53197d9be9366ccf9ebccc1e6e31270c1dff8e95", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void addError(AuditEvent aEvt)", "signatureAfterChange": "     public void addError(AuditEvent aEvt)", "diff": ["-        String fileName = aEvt.getFileName();", "-        String message = aEvt.getMessage();", "+        final String fileName = aEvt.getFileName();", "+        final String message = aEvt.getMessage();", "-        int bufLen = fileName.length() + message.length() + 12;", "-", "-        StringBuffer sb = new StringBuffer(bufLen);", "+        final int bufLen = fileName.length() + message.length() + 12;", "+        final StringBuffer sb = new StringBuffer(bufLen);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0d1e95904a880a79327904b5fdee202", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolderTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Test     public void testGetAnnotationTargetWrongArg() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testGetAnnotationTargetWrongArg() throws ReflectiveOperationException", "diff": ["-        SuppressWarningsHolder holder = new SuppressWarningsHolder();", "-        Method getAnnotationTarget = holder.getClass()", "+        final SuppressWarningsHolder holder = new SuppressWarningsHolder();", "+        final Method getAnnotationTarget = holder.getClass()", "-        DetailAST methodDef = new DetailAST();", "+        final DetailAST methodDef = new DetailAST();", "-        DetailAST parent = new DetailAST();", "+        final DetailAST parent = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b203b8974b917f51898701d6b6094209", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SeverityMatchFilterTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAcceptOnMatch()", "signatureAfterChange": "      @Test     public void testAcceptOnMatch()", "diff": ["-        SeverityLevel errorLevel = SeverityLevel.ERROR;", "-        LocalizedMessage errorMessage =", "+        final SeverityLevel errorLevel = SeverityLevel.ERROR;", "+        final LocalizedMessage errorMessage =", "-        SeverityLevel infoLevel = SeverityLevel.INFO;", "-        LocalizedMessage infoMessage = new LocalizedMessage(0, 0, \"\", \"\", null, infoLevel, null,", "-            getClass(), null);", "+        final SeverityLevel infoLevel = SeverityLevel.INFO;", "+        final LocalizedMessage infoMessage = new LocalizedMessage(0, 0, \"\", \"\", null, infoLevel,", "+            null, getClass(), null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7be904aa21817dc77cda6280ecef99a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testUnableToFindSuppressions() throws Exception", "signatureAfterChange": "      @Test     public void testUnableToFindSuppressions() throws Exception", "diff": ["-        Class<SuppressionsLoader> loaderClass = SuppressionsLoader.class;", "-        Method loadSuppressions =", "+        final Class<SuppressionsLoader> loaderClass = SuppressionsLoader.class;", "+        final Method loadSuppressions =", "-        String sourceName = \"suppressions_none.xml\";", "-        InputSource inputSource = new InputSource(sourceName);", "+        final String sourceName = \"suppressions_none.xml\";", "+        final InputSource inputSource = new InputSource(sourceName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9c04cf7e25bc2b6b19d094e97655f7a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "b4e77fd043c8546f6abf99cc0196c4d47e6084b1", "commitAfterChange": "829ae4c34f89ac06043265cdb3d80639988d85d8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDestroy() throws Exception", "signatureAfterChange": "      @Test     public void testDestroy() throws Exception", "diff": ["-        DebugChecker c= new DebugChecker();", "-        DebugAuditAdapter aa = new DebugAuditAdapter();", "+        final DebugChecker c= new DebugChecker();", "+        final DebugAuditAdapter aa = new DebugAuditAdapter();", "-        DebugFilter f = new DebugFilter();", "+        final DebugFilter f = new DebugFilter();", "-        TreeSet<LocalizedMessage> msgs = Sets.newTreeSet();", "+        final TreeSet<LocalizedMessage> msgs = Sets.newTreeSet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2359e3e92d855c3adb025ae9c987b59", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule521packagenames/PackageNameTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void badPackageName2Test() throws Exception", "signatureAfterChange": "      @Test     public void badPackageName2Test() throws Exception", "diff": ["-        String packagePath = \"com.google.checkstyle.test.chapter5naming.rule521_packagenames\";", "-        String msg = getCheckMessage(checkConfig.getMessages(), MSG_KEY, packagePath, format);", "+        final String packagePath = \"com.google.checkstyle.test.chapter5naming.rule521_packagenames\";", "+        final String msg = getCheckMessage(checkConfig.getMessages(), MSG_KEY, packagePath, format);", "-        String filePath = builder.getFilePath(\"BadPackageNameInput2\");", "+        final String filePath = builder.getFilePath(\"BadPackageNameInput2\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf758018936659b5a4bc37b7f19ed837", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public JTreeTable(TreeTableModel treeTableModel)", "signatureAfterChange": "      public JTreeTable(TreeTableModel treeTableModel)", "diff": ["-        ListToTreeSelectionModelWrapper selectionWrapper = new", "+        final ListToTreeSelectionModelWrapper selectionWrapper = new", "-        Action expand = new AbstractAction() {", "+        final Action expand = new AbstractAction() {", "-        KeyStroke stroke = KeyStroke.getKeyStroke(\"ENTER\");", "-        String command = \"expand/collapse\";", "+        final KeyStroke stroke = KeyStroke.getKeyStroke(\"ENTER\");", "+        final String command = \"expand/collapse\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6509564226ad4d2ea64becb0e5a5216", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testParents()", "signatureAfterChange": "      @Test     public void testParents()", "diff": ["-        DetailAST parent = new DetailAST();", "+        final DetailAST parent = new DetailAST();", "-        DetailAST method = new DetailAST();", "+        final DetailAST method = new DetailAST();", "-        DetailAST ctor = new DetailAST();", "+        final DetailAST ctor = new DetailAST();", "-        DeclarationOrderCheck check = new DeclarationOrderCheck();", "+        final DeclarationOrderCheck check = new DeclarationOrderCheck();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de0bd4b268fe21b514772862f11edf2b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule332nolinewrap/NoLineWrapTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void goodLineLength() throws Exception", "signatureAfterChange": "      @Test     public void goodLineLength() throws Exception", "diff": ["-        int maxLineLength = 100;", "+        final int maxLineLength = 100;", "-        Configuration checkConfig = builder.getCheckConfig(\"LineLength\");", "-        String filePath = builder.getFilePath(\"LineLengthInput2\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"LineLength\");", "+        final String filePath = builder.getFilePath(\"LineLengthInput2\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3d581831172bb3403d8b8f59d32284c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SeverityMatchFilterTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testDefault()", "signatureAfterChange": "      @Test     public void testDefault()", "diff": ["-        SeverityLevel errorLevel = SeverityLevel.ERROR;", "-        LocalizedMessage errorMessage =", "+        final SeverityLevel errorLevel = SeverityLevel.ERROR;", "+        final LocalizedMessage errorMessage =", "-        SeverityLevel infoLevel = SeverityLevel.INFO;", "-        LocalizedMessage infoMessage =", "+        final SeverityLevel infoLevel = SeverityLevel.INFO;", "+        final LocalizedMessage infoMessage ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e84b95f75638b4e7c1ac351ffb15ccd5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule233nonascii/AvoidEscapedUnicodeCharactersCheckTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void unicodeEscapesTest() throws Exception", "signatureAfterChange": "      @Test     public void unicodeEscapesTest() throws Exception", "diff": ["-        String msg = getCheckMessage(AvoidEscapedUnicodeCharactersCheck.class, \"forbid.escaped.unicode.char\");", "+        final String msg = getCheckMessage(AvoidEscapedUnicodeCharactersCheck.class,", "+            \"forbid.escaped.unicode.char\");", "-        Configuration checkConfig = builder.getCheckConfig(\"AvoidEscapedUnicodeCharacters\");", "-        String filePath = builder.getFilePath(\"AvoidEscapedUnicodeCharactersInput\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"AvoidEscapedUnicodeCharacters\");", "+        final String filePath = builder.getFilePath(\"AvoidEscapedUnicodeCharactersInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e88277411772607faea39f549d040a59", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     public void testGetFullImportIdent()", "signatureAfterChange": "      @Test     public void testGetFullImportIdent()", "diff": ["-            Class<?> clazz = CustomImportOrderCheck.class;", "-            Object t = clazz.getConstructor().newInstance();", "-            Method method = clazz.getDeclaredMethod(\"getFullImportIdent\", DetailAST.class);", "+            final Class<?> clazz = CustomImportOrderCheck.class;", "+            final Object t = clazz.getConstructor().newInstance();", "+            final Method method = clazz.getDeclaredMethod(\"getFullImportIdent\", DetailAST.class);", "-        String expected = \"\";", "+        final String expected = \"\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eab94f307e96d41784d38ab9c545ac74", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessageTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testBundleReloadUrlNotNull() throws IOException", "signatureAfterChange": "      @Test     public void testBundleReloadUrlNotNull() throws IOException", "diff": ["-        ClassLoader classloader = mock(ClassLoader.class);", "+        final ClassLoader classloader = mock(ClassLoader.class);", "-        URL url = getMockUrl(mockConnection);", "-        String resource = \"com/puppycrawl/tools/checkstyle/checks/coding/messages_en.properties\";", "+        final URL url = getMockUrl(mockConnection);", "+        final String resource =", "+            \"com/puppycrawl/tools/checkstyle/checks/coding/messages_en.properties\";", "-        LocalizedMessage.UTF8Control control = new LocalizedMessage.UTF8Control();", "+        final LocalizedMessage.UTF8Control control = new LocalizedMessage.UTF8Control();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec7aee6d538213b685f147120d07733b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4843defaultcasepresent/MissingSwitchDefaultTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void missingSwitchDefaultTest() throws Exception", "signatureAfterChange": "      @Test     public void missingSwitchDefaultTest() throws Exception", "diff": ["-        String msg = getCheckMessage(MissingSwitchDefaultCheck.class, \"missing.switch.default\");", "+        final String msg = getCheckMessage(MissingSwitchDefaultCheck.class,", "+            \"missing.switch.default\");", "-        Configuration checkConfig = builder.getCheckConfig(\"MissingSwitchDefault\");", "-        String filePath = builder.getFilePath(\"MissingSwitchDefaultInput\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"MissingSwitchDefault\");", "+        final String filePath = builder.getFilePath(\"MissingSwitchDefaultInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eccb2fdc520b40fe72ced7e027781beb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static ModuleFactory loadModuleFactory(             InputSource aSource, String aSourceName)         throws CheckstyleException", "signatureAfterChange": "     private static ModuleFactory loadModuleFactory(             InputSource aSource, String aSourceName)         throws CheckstyleException", "diff": ["-        catch (FileNotFoundException e) {", "+        catch (final FileNotFoundException e) {", "-        catch (ParserConfigurationException e) {", "+        catch (final ParserConfigurationException e) {", "-        catch (SAXException e) {", "+        catch (final SAXException e) {", "-        catch (IOException e) {", "+        catch (final IOException e) {"]}]}