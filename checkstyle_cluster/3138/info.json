{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "26535ec82f327c7e34be4a8a01bac7ae", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1847422258fd4b169df1986c05ab4296", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "e9ec5bfbd5ab91852c3ec1b30492df5c06cdd3b1", "commitAfterChange": "904de34fcd984edce3d6042a5a17e2a969254588", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private boolean isColonOfCaseOrDefault(int currentType, int parentType)", "signatureAfterChange": "     private boolean isColonOfCaseOrDefault(int currentType, int parentType)", "diff": ["-        if (currentType == TokenTypes.COLON) {", "-            //we do not want to check colon for cases and defaults", "-            if (parentType == TokenTypes.LITERAL_DEFAULT", "-                || parentType == TokenTypes.LITERAL_CASE) {", "-                return true;", "-            }", "-            else if (parentType == TokenTypes.FOR_EACH_CLAUSE", "-                && ignoreEnhancedForColon) {", "-                return true;", "-            }", "-        }", "-        return false;", "+        return currentType == TokenTypes.COLON", "+                && (parentType == TokenTypes.LITERAL_DEFAULT", "+                    || parentType == TokenTypes.LITERAL_CASE);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ae71936a3e39cb4f81c26097ce0b7aa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "87ef77fe452f7821066ad4906e1c0cf643fa1334", "commitAfterChange": "09f1ba2f35f928d4377637fa284d1ac334617a22", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-        //we do not want to check colon for cases and defaults", "-        if ((type == TokenTypes.COLON)", "-            && ((parentType == TokenTypes.LITERAL_DEFAULT)", "-                || (parentType == TokenTypes.LITERAL_CASE)))", "-        {", "-            return;", "+        if ((type == TokenTypes.COLON)) {", "+            //we do not want to check colon for cases and defaults", "+            if (parentType == TokenTypes.LITERAL_DEFAULT", "+                || parentType == TokenTypes.LITERAL_CASE)", "+            {", "+                return;", "+            }", "+            else if (parentType == TokenTypes.FOR_EACH_CLAUSE", "+                && this.mIgnoreEnhancedForColon)", "+            {", "+                return;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea6fec35d3e1040e41e7699bc7fdfd18", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ScopeUtils.java", "commitBeforeChange": "6a0bad784f056988b3b84b75baa397ac78102a24", "commitAfterChange": "7770f2a2c25c41bf024355f19caac358419110a6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static boolean inAnnotationBlock(DetailAST aAST)", "signatureAfterChange": "     public static boolean inAnnotationBlock(DetailAST aAST)", "diff": ["-             token != null;", "+             token != null && !retVal;", "-            if (type == TokenTypes.CLASS_DEF", "+            if (type == TokenTypes.ANNOTATION_DEF) {", "+                retVal = true;", "+            }", "+            else if (type == TokenTypes.CLASS_DEF", "-                || type == TokenTypes.INTERFACE_DEF) {", "+                || type == TokenTypes.INTERFACE_DEF", "+                || type == TokenTypes.LITERAL_NEW) {", "-            else if (type == TokenTypes.LITERAL_NEW) {", "-                break; // inner implementation", "-            }", "-            else if (type == TokenTypes.ANNOTATION_DEF) {", "-                retVal = true;", "-                break;", "-            }", "+"]}]}