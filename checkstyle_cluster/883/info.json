{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "edbd3f1dfdb6ba02dd4045b9c492fbfa", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da63a7dfbaef23054ad9891e1e2d5454", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "61f8aaca7bcb8750909bcc95eb5c27c72c7d824d", "commitAfterChange": "bf529ef600fa9ef2034d0412c198b2121f2b94f2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-            \"12:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "-            \"21:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "-            \"30:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "-            \"39:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"10:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"14:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"18:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"22:5: \" + getCheckMessage(MSG_KEY_LINE_PREVIOUS, \"{\", 5),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e34131b3cc7fcfcc46dbdd503b9e0b6b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheckTest.java", "commitBeforeChange": "d814d1352b63136a400cd8f4dffd03d68c9ccd24", "commitAfterChange": "3edd1b53a5d8d407fd33d8c514db8bc1c7274fe5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testStaticVisibilityFromAnonymousClasses() throws Exception", "signatureAfterChange": "      @Test     public void testStaticVisibilityFromAnonymousClasses() throws Exception", "diff": ["-            \"10:95: \" + getCheckMessage(MSG_KEY, \"other\"),", "-            \"16:92: \" + getCheckMessage(MSG_KEY, \"other\"),", "-            \"24:99: \" + getCheckMessage(MSG_KEY, \"other\"),", "-            \"34:103: \" + getCheckMessage(MSG_KEY, \"other\"),", "+            \"10:97: \" + getCheckMessage(MSG_KEY, \"other\"),", "+            \"16:94: \" + getCheckMessage(MSG_KEY, \"other\"),", "+            \"24:101: \" + getCheckMessage(MSG_KEY, \"other\"),", "+            \"34:105: \" + getCheckMessage(MSG_KEY, \"other\"),", "-        verify(checkConfig, getPath(\"InputHidenFieldStaticVisibility.java\"), expected);", "+        verify(checkConfig, getPath(\"InputHiddenFieldStaticVisibility.java\"), expected);"]}]}