{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e331b692c297acdff440f92c3e8a1d29", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19556e4276726c54134251090fc6ba17", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "f1dced161ab0c818f0e1e125fc5b88b71f5b171e", "commitAfterChange": "af095344e1501d55b2dfbbd18deaf305e814601c", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     private static List<JavadocTag> getMethodTags(TextBlock comment)", "signatureAfterChange": "     private static List<JavadocTag> getMethodTags(TextBlock comment)", "diff": ["-                int col = noargMultilineStart.start(1) - 1;", "-                if (i == 0) {", "-                    col += comment.getStartColNo();", "-                }", "+                final int col = noargMultilineStart.start(1) - 1;", "-                    if (multilineCont.find()) {", "-                        remIndex = lines.length;", "-                        final String lFin = multilineCont.group(1);", "-                        if (!lFin.equals(NEXT_TAG)", "-                            && !lFin.equals(END_JAVADOC)) {", "-                            tags.add(new JavadocTag(currentLine, col, p1));", "-                        }", "+                    multilineCont.find();", "+                    remIndex = lines.length;", "+                    final String lFin = multilineCont.group(1);", "+                    if (!lFin.equals(NEXT_TAG)", "+                        && !lFin.equals(END_JAVADOC)) {", "+                        tags.add(new JavadocTag(currentLine, col, p1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e766b5acde07ce6fecb21aea95c6fd97", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "af095344e1501d55b2dfbbd18deaf305e814601c", "commitAfterChange": "e3366844c45fb800a290c0d30ed956f1d249de29", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public SuppressWithNearbyCommentFilter()", "signatureAfterChange": "     public SuppressWithNearbyCommentFilter()", "diff": ["-        if (DEFAULT_COMMENT_FORMAT != null) {", "-            setCommentFormat(DEFAULT_COMMENT_FORMAT);", "-        }", "-        if (DEFAULT_CHECK_FORMAT != null) {", "-            setCheckFormat(DEFAULT_CHECK_FORMAT);", "-        }", "-        if (DEFAULT_INFLUENCE_FORMAT != null) {", "-            setInfluenceFormat(DEFAULT_INFLUENCE_FORMAT);", "-        }", "+        setCommentFormat(DEFAULT_COMMENT_FORMAT);", "+        setCheckFormat(DEFAULT_CHECK_FORMAT);", "+        setInfluenceFormat(DEFAULT_INFLUENCE_FORMAT);"]}]}