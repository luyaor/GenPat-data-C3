{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "80c1e86db2a6b51a3b53f9c45fe55393", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df3fe5b0898a5db157eb08903e45d1e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "ea704b1cfd23923b91679828ca0bca0035944478", "commitAfterChange": "5c481899d4cfcb8369dcd0851aef21c2d8c5088a", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 27, "signatureBeforeChange": "         @Override         public void syntaxError(                 Recognizer<?, ?> aRecognizer, Object aOffendingSymbol,                 int aLine, int aCharPositionInLine,                 String aMsg, RecognitionException aEx)", "signatureAfterChange": "         @Override         public void syntaxError(                 Recognizer<?, ?> aRecognizer, Object aOffendingSymbol,                 int aLine, int aCharPositionInLine,                 String aMsg, RecognitionException aEx)", "diff": ["-                mErrorMessage = createLogMessage(lineNumber,", "+                mErrorMessage = new ParseErrorMessage(lineNumber,", "-                mErrorMessage = createLogMessage(lineNumber,", "+                mErrorMessage = new ParseErrorMessage(lineNumber,", "-                    mErrorMessage = createLogMessage(lineNumber,", "+                    mErrorMessage = new ParseErrorMessage(lineNumber,", "-                    mErrorMessage = createLogMessage(lineNumber, JAVADOC_PARSE_TOKEN_ERROR,", "+                    mErrorMessage = new ParseErrorMessage(lineNumber, JAVADOC_PARSE_TOKEN_ERROR,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa2873e7812d416131c4c528d436bc08", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/VerifierImpl.java", "commitBeforeChange": "20caaeb1488a4dacc770f22d463228eeb213d9ad", "commitAfterChange": "3ded7a11556a6258bcddd3ebe2d69a2058675601", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     private void checkHeader()", "signatureAfterChange": "     private void checkHeader()", "diff": ["-        if (mHeaderLines.length > mLines.length) {", "+        if (mConfig.getHeaderLines().length > mLines.length) {", "-            for (int i = 0; i < mHeaderLines.length; i++) {", "-                if ((i != (mHeaderIgnoreLineNo - 1)) &&", "-                    !mHeaderLines[i].equals(mLines[i]))", "+            for (int i = 0; i < mConfig.getHeaderLines().length; i++) {", "+                if ((i != (mConfig.getHeaderIgnoreLineNo() - 1)) &&", "+                    !mConfig.getHeaderLines()[i].equals(mLines[i]))", "-                        mHeaderLines[i] + \"'.\");", "+                        mConfig.getHeaderLines()[i] + \"'.\");"]}]}