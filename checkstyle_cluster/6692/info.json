{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e4bff90a943bcb1df85ed6269837e8a9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67546083a367cbd7b9c0f840a8f5f672", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testLegalAbstractClassNames() throws Exception", "signatureAfterChange": "      @Test     public void testLegalAbstractClassNames() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"legalAbstractClassNames\", \"AbstractClass\");", "+        checkConfig.addAttribute(\"legalAbstractClassNames\", \"AbstractClass\");", "-        verify(mCheckConfig, getPath(\"coding\" + File.separator + \"InputIllegalType.java\"), expected);", "+        verify(checkConfig, getPath(\"coding\" + File.separator + \"InputIllegalType.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d029e121a89d86dbfd3ae6088a40fcec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIgnoreMethodNames() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreMethodNames() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"ignoredMethodNames\", \"table2\");", "+        checkConfig.addAttribute(\"ignoredMethodNames\", \"table2\");", "-        verify(mCheckConfig, getPath(\"coding\" + File.separator + \"InputIllegalType.java\"), expected);", "+        verify(checkConfig, getPath(\"coding\" + File.separator + \"InputIllegalType.java\"), expected);"]}]}