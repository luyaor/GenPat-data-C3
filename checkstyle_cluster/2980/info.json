{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57deebe8c57e992d867dcd713b3cfa9b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12377db4fb2c1ff022d2a6080c1ccce8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void testWithTypecast()         throws Exception", "signatureAfterChange": "      @Test     public void testWithTypecast()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest16.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest16.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a3f450c72d6f3b34e75aa39b180a3d1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testWithoutArgsFullLambdaBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithoutArgsFullLambdaBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest3.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest3.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c18a31b6d7026bd1cee342ef586f00a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testWithFewArgWIthTypeOneLine()         throws Exception", "signatureAfterChange": "      @Test     public void testWithFewArgWIthTypeOneLine()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest12.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest12.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21163b7dd2ae50ce10e4c994a87b8976", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testWithOneArgWithoutTypeOneLineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithoutTypeOneLineBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest6.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest6.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "340e944ae63332553e2d73dc8c737cb4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testLambdaInVariableInitialization()         throws Exception", "signatureAfterChange": "      @Test     public void testLambdaInVariableInitialization()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest1.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest1.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79285db20f9d1e462e0a92f9991cd35a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testWithFewArgsWithoutTypeFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithFewArgsWithoutTypeFullBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest9.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest9.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79426a38600fac969bf17d8c8c3de5ab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testWIthMultilineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWIthMultilineBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest14.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest14.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aa31251bc229f2053262e4e06b0bbeb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testWithFewArgWithTypeFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithFewArgWithTypeFullBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest13.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest13.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "992fc4db3ef3a908710f85f55fed04dc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheckTest.java", "commitBeforeChange": "61f8aaca7bcb8750909bcc95eb5c27c72c7d824d", "commitAfterChange": "bf529ef600fa9ef2034d0412c198b2121f2b94f2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testSingleLineLambda() throws Exception", "signatureAfterChange": "      @Test     public void testSingleLineLambda() throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/blocks/InputSingleLineLambda.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputSingleLineLambda.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6df3dd115f8fee1464d6e2eb06fcf4c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testWithOneArgWithoutTypeFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithoutTypeFullBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest7.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest7.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abecb0ae3a603cece3b25ab9b09cc7ac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Test     public void testCasesFromSpec()         throws Exception", "signatureAfterChange": "      @Test     public void testCasesFromSpec()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest15.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest15.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8c2c51f450aab0ff839ebd54d0a2daf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testWithOneArgWithoutParenthesesWithoutTypeFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithoutParenthesesWithoutTypeFullBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest11.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest11.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c74a14ecce5a8e1b4ed4c8466cda445e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testWithFewArgsWithoutTypeOneLineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithFewArgsWithoutTypeOneLineBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest8.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest8.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e911fbf77119634c5cabd811653a3e4c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     public void testInAssignment()         throws Exception", "signatureAfterChange": "      @Test     public void testInAssignment()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest17.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest17.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eee9103aa728c54bfadc35880bd3c0c7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "      @Test     public void testInTernary()         throws Exception", "signatureAfterChange": "      @Test     public void testInTernary()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest18.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest18.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0331756cad4174c60a8a1a3d7b4237e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testWithoutArgsOneLineLambdaBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithoutArgsOneLineLambdaBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest2.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5ae698827c1fcc8a4947443e7bb0427", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testWithOneArgWithOneLineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithOneLineBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest4.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest4.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f879b0c773ff46cf48b836d01a0d0a05", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testWithOneArgWithFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithFullBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest5.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest5.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbc8ac0b892551eeb9077645f1eec101", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testWithOneArgWithoutParenthesesWithoutTypeOneLineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithoutParenthesesWithoutTypeOneLineBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest10.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest10.java\"), expected);"]}]}