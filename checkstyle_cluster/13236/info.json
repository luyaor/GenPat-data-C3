{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3bf9d38689dd3df9b9d7db3d60e9223f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85509134f3743f1d566054e2f9e9b94e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "262209477f39964a63103613f3e2c985da083371", "commitAfterChange": "08638b5f739d9929698860048c052da2d5f80209", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected final ClassInfo findClassAlias(final String aName)", "signatureAfterChange": "     protected final ClassInfo findClassAlias(final String aName)", "diff": ["-            final Map paramMap = (Map) mTypeParams.get(i);", "-            ci = (ClassInfo) paramMap.get(aName);", "+            final Map<String, ClassInfo> paramMap = mTypeParams.get(i);", "+            ci = paramMap.get(aName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a1f0ffcaab687a47332f1bbf2b3c681", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TodoCommentCheck.java", "commitBeforeChange": "7c20c36cea276a2b9abb09e8b19eb5825e6a921a", "commitAfterChange": "262209477f39964a63103613f3e2c985da083371", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void checkCppComments(FileContents aContents)", "signatureAfterChange": "     private void checkCppComments(FileContents aContents)", "diff": ["-        final Map comments = aContents.getCppComments();", "-        for (final Iterator it = comments.keySet().iterator(); it.hasNext();) {", "-            final Integer key = (Integer) it.next();", "-            final String cmt = ((TextBlock) comments.get(key)).getText()[0];", "+        final Map<Integer, TextBlock> comments = aContents.getCppComments();", "+        for (final Iterator<Integer> it = comments.keySet().iterator(); it", "+                .hasNext();)", "+        {", "+            final Integer key = it.next();", "+            final String cmt = (comments.get(key)).getText()[0];"]}]}