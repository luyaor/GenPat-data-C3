{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f3b88cdfb36e126818724b9bb321e4c8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12a7d674df8d49b6c25902fd3a90fcca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "5ce771ac776af4197ce832792a049e9357ca90b8", "commitAfterChange": "1d614c3a7ecf8a3ede4df8a50da46e71792d0025", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void visitExpr(DetailAST aAst)", "signatureAfterChange": "     private void visitExpr(DetailAST aAst)", "diff": ["-        if (mExprDepth == 1) {", "-            if (!mInForHeader && (mLastStatementEnd == aAst.getLineNo())) {", "-                log(aAst, \"multiple.statements.line\");", "-            }", "+        if (mExprDepth == 1", "+                && !mInForHeader", "+                && (mLastStatementEnd == aAst.getLineNo()))", "+        {", "+            log(aAst, \"multiple.statements.line\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "feddd440e653b39c35ea76d2e710071d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "5b4a81a4e1449e2baf5adca4b821c23bc87f4de2", "commitAfterChange": "b69e47845e1903966ddf39efdf49e103ff5a5248", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (hasUnicodeChar(literal)) {", "-            if (!(allowByTailComment && haastrailComment(ast)", "-                    || isAllCharactersEscaped(literal)", "-                    || allowEscapesForControlCharacters", "-                            && isOnlyUnicodeValidChars(literal, sUnicodeControl)", "-                    || allowNonPrintableEscapes", "-                            && isOnlyUnicodeValidChars(literal, sNonPrintableChars)))", "-            {", "-                log(ast.getLineNo(), \"forbid.escaped.unicode.char\");", "-            }", "+        if (hasUnicodeChar(literal) && !(allowByTailComment && haastrailComment(ast)", "+                || isAllCharactersEscaped(literal)", "+                || allowEscapesForControlCharacters", "+                        && isOnlyUnicodeValidChars(literal, sUnicodeControl)", "+                || allowNonPrintableEscapes", "+                        && isOnlyUnicodeValidChars(literal, sNonPrintableChars)))", "+        {", "+            log(ast.getLineNo(), \"forbid.escaped.unicode.char\");"]}]}