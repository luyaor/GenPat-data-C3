{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c6fad76dfcbe54418462d63457a0f2e5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55fc6612f603cfcd4bd9cd224580cb54", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "9acdd1b97e561748ae8cc61e11dcc145885ecb6d", "commitAfterChange": "c617457933a978f5fd861d7ea43d05bccf045c16", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     void verifyVariable(MyVariable aVar)", "signatureAfterChange": "     void verifyVariable(MyVariable aVar)", "diff": ["-        if (inMethodBlock()) {", "+        if (inMethodBlock())", "+        {", "+            checkVariable(aVar,", "+                          mConfig.getLocalVarRegexp(),", "+                          mConfig.getLocalVarPat());", "-        final Scope declaredScope =", "-            aVar.getModifierSet().getVisibilityScope();", "+        final MyModifierSet mods = aVar.getModifierSet();", "+        final Scope declaredScope = mods.getVisibilityScope();", "-            final MyModifierSet mods = aVar.getModifierSet();", "-                    if (mods.containsPrivate()) {", "+                    if (Scope.PRIVATE.equals(variableScope)) {", "-                if (mods.containsPrivate() ||", "-                    (mConfig.isAllowProtected() && mods.containsProtected()))", "+                final boolean isPckg = Scope.PACKAGE.equals(variableScope);", "+                final boolean isProt = Scope.PROTECTED.equals(variableScope);", "+                if (Scope.PRIVATE.equals(variableScope) ||", "+                    (mConfig.isAllowPackage() && isPckg) ||", "+                    (mConfig.isAllowProtected() && isProt))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d82651b1b11c82c48e141437556c100c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/VerifierImpl.java", "commitBeforeChange": "20caaeb1488a4dacc770f22d463228eeb213d9ad", "commitAfterChange": "3ded7a11556a6258bcddd3ebe2d69a2058675601", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void verifyVariable(MyVariable aVar, boolean aInInterface)", "signatureAfterChange": "     public void verifyVariable(MyVariable aVar, boolean aInInterface)", "diff": ["-            if (!mRelaxJavadoc || inInterfaceBlock() ||", "+            if (!mConfig.isRelaxJavadoc() || inInterfaceBlock() ||", "-                          mStaticFinalRegexp,", "-                          mStaticFinalPat);", "+                          mConfig.getStaticFinalRegexp(),", "+                          mConfig.getStaticFinalPat());", "-                                      mStaticFinalRegexp,", "-                                      mStaticFinalPat);", "+                                      mConfig.getStaticFinalRegexp(),", "+                                      mConfig.getStaticFinalPat());", "-                        checkVariable(aVar, mStaticRegexp, mStaticPat);", "+                        checkVariable(aVar,", "+                                      mConfig.getStaticRegexp(),", "+                                      mConfig.getStaticPat());", "-                    (mAllowProtected && mods.containsProtected()))", "+                    (mConfig.isAllowProtected() && mods.containsProtected()))", "-                    checkVariable(aVar, mMemberRegexp, mMemberPat);", "+                    checkVariable(aVar,", "+                                  mConfig.getMemberRegexp(),", "+                                  mConfig.getMemberPat());"]}]}