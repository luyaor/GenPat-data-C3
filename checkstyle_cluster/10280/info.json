{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09e2b0af339bf4d0ef81ab8e28a4a825", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e999268e4ae2fdff2637a5484818f64", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected final AbstractClassInfo findClassAlias(final String name)", "signatureAfterChange": "     protected final AbstractClassInfo findClassAlias(final String name)", "diff": ["-        AbstractClassInfo ci = null;", "+        AbstractClassInfo classInfo = null;", "-            ci = paramMap.get(name);", "-            if (ci != null) {", "+            classInfo = paramMap.get(name);", "+            if (classInfo != null) {", "-        return ci;", "+        return classInfo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1517e9548dad52b88b822e6b7f75e4d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected final AbstractClassInfo createClassInfo(final Token name,                                               final String surroundingClass)", "signatureAfterChange": "     protected final AbstractClassInfo createClassInfo(final Token name,                                               final String surroundingClass)", "diff": ["-        final AbstractClassInfo ci = findClassAlias(name.getText());", "-        if (ci != null) {", "-            return new ClassAlias(name, ci);", "+        final AbstractClassInfo classInfo = findClassAlias(name.getText());", "+        if (classInfo != null) {", "+            return new ClassAlias(name, classInfo);"]}]}