{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "512226f323084585beeb7d1429ebd891", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6437835a95b466a03c0d925577309367", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Comment.java", "commitBeforeChange": "52e2087c404986f8e12cd8579be7b2333961e1a3", "commitAfterChange": "c38185458ab824874b8465c46b4dc42646440aaa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Comment(final String[] aText, final int aFirstCol,             final int aLastLine, final int aLastCol)", "signatureAfterChange": "     public Comment(final String[] aText, final int aFirstCol,             final int aLastLine, final int aLastCol)", "diff": ["-        for (int i = 0; i < mText.length; i++) {", "-            mText[i] = aText[i];", "-        }", "+        System.arraycopy(aText, 0, mText, 0, mText.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cc4eac081104c324bbf0229ed27afc7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "1079f0ab995bc25218f9e38af7968552f26a5df5", "commitAfterChange": "f45fee0aa4ba2f6f286c9e0336543c20e311a681", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private static void verifyConfigNode(         DefaultConfiguration config, String name, int childrenLength,         Properties atts) throws Exception", "signatureAfterChange": "      private static void verifyConfigNode(         DefaultConfiguration config, String name, int childrenLength,         Properties atts) throws Exception", "diff": ["-        for (int i = 0; i < attNames.length; i++) {", "+        for (String attName : attNames) {", "-                \"attribute[\" + attNames[i] + \"]\",", "-                atts.get(attNames[i]),", "-                config.getAttribute(attNames[i]));", "+                \"attribute[\" + attName + \"]\",", "+                atts.get(attName),", "+                config.getAttribute(attName));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82340498b641d0fe2ed290bcbb4018d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheck.java", "commitBeforeChange": "0dc308ff69bce4d52ef76002bc4fe3988955ceb6", "commitAfterChange": "e6538f822f3fb690d01b3f27aabb6785d9732a29", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static String getCommentFirstLine(DetailAST catchAst)", "signatureAfterChange": "     private static String getCommentFirstLine(DetailAST catchAst)", "diff": ["-            for (int i = 0; i < lines.length; i++) {", "-                if (!lines[i].isEmpty()) {", "-                    commentContent = lines[i];", "+            for (String line : lines) {", "+                if (!line.isEmpty()) {", "+                    commentContent = line;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc2799928da0ada7947b16a756ed060b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     @Override     public void visitToken(DetailAST aAST)", "diff": ["-        for (int i = 0; i < mLimitedTokens.length; i++) {", "-            final int tokenCount = mCounts[mLimitedTokens[i] - 1];", "+        for (int element : mLimitedTokens) {", "+            final int tokenCount = mCounts[element - 1];", "-                    TokenTypes.getTokenName(mLimitedTokens[i]);", "+                    TokenTypes.getTokenName(element);", "-                    TokenTypes.getTokenName(mLimitedTokens[i]);", "+                    TokenTypes.getTokenName(element);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e26554caedd84547a6d54eb2f484bcad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "1079f0ab995bc25218f9e38af7968552f26a5df5", "commitAfterChange": "f45fee0aa4ba2f6f286c9e0336543c20e311a681", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testReplacePropertiesNoReplace()         throws CheckstyleException", "signatureAfterChange": "      @Test     public void testReplacePropertiesNoReplace()         throws CheckstyleException", "diff": ["-        for (int i = 0; i < testValues.length; i++) {", "+        for (String testValue : testValues) {", "-                testValues[i], new PropertiesExpander(props), null);", "-            assertEquals(\"\\\"\" + testValues[i] + \"\\\"\", value, testValues[i]);", "+                testValue, new PropertiesExpander(props), null);", "+            assertEquals(\"\\\"\" + testValue + \"\\\"\", value, testValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ead1d4ce3a775a252c17dd493d104607", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "1079f0ab995bc25218f9e38af7968552f26a5df5", "commitAfterChange": "f45fee0aa4ba2f6f286c9e0336543c20e311a681", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testReplacePropertiesReplace()         throws CheckstyleException", "signatureAfterChange": "      @Test     public void testReplacePropertiesReplace()         throws CheckstyleException", "diff": ["-        for (int i = 0; i < testValues.length; i++) {", "+        for (String[] testValue : testValues) {", "-                testValues[i][0], new PropertiesExpander(props), null);", "-            assertEquals(\"\\\"\" + testValues[i][0] + \"\\\"\",", "-                testValues[i][1], value);", "+                testValue[0], new PropertiesExpander(props), null);", "+            assertEquals(\"\\\"\" + testValue[0] + \"\\\"\",", "+                testValue[1], value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f167f3359f9d85b334b3e23f1e5ea9f0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/XMLLoggerTest.java", "commitBeforeChange": "1079f0ab995bc25218f9e38af7968552f26a5df5", "commitAfterChange": "f45fee0aa4ba2f6f286c9e0336543c20e311a681", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testEncode()         throws IOException", "signatureAfterChange": "      @Test     public void testEncode()         throws IOException", "diff": ["-        for (int i = 0; i < encodings.length; i++) {", "-            final String encoded = XMLLogger.encode(encodings[i][0]);", "-            assertEquals(\"\\\"\" + encodings[i][0] + \"\\\"\", encodings[i][1], encoded);", "+        for (String[] encoding : encodings) {", "+            final String encoded = XMLLogger.encode(encoding[0]);", "+            assertEquals(\"\\\"\" + encoding[0] + \"\\\"\", encoding[1], encoded);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1bf1e14541ae787d559e05fe7b866d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/DetailASTTest.java", "commitBeforeChange": "1079f0ab995bc25218f9e38af7968552f26a5df5", "commitAfterChange": "f45fee0aa4ba2f6f286c9e0336543c20e311a681", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void checkDir(File dir) throws Exception", "signatureAfterChange": "      private void checkDir(File dir) throws Exception", "diff": ["-        for (int i = 0; i < files.length; i++) {", "-            if (files[i].isFile()) {", "-                checkFile(files[i].getCanonicalPath());", "+        for (File file : files) {", "+            if (file.isFile()) {", "+                checkFile(file.getCanonicalPath());", "-            else if (files[i].isDirectory()) {", "-                checkDir(files[i]);", "+            else if (file.isDirectory()) {", "+                checkDir(file);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff1069a1d1809bafea86684a9d32e63f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "commitBeforeChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "commitAfterChange": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static boolean isInContext(DetailAST aAST, int[][] aContextSet)", "signatureAfterChange": "     private static boolean isInContext(DetailAST aAST, int[][] aContextSet)", "diff": ["-        for (int i = 0; i < aContextSet.length; i++) {", "+        for (int[] element : aContextSet) {", "-            final int len = aContextSet[i].length;", "+            final int len = element.length;", "-                final int expectedType = aContextSet[i][j];", "+                final int expectedType = element[j];"]}]}