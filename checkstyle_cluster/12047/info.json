{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5dd173a07ffc48adfbfa360038ade8ec", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5caf2d294a3040b33331ee70ff883b8e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void notifyVisit(DetailAST aAST, AstState aAstState)", "signatureAfterChange": "     private void notifyVisit(DetailAST ast, AstState astState)", "diff": ["-    private void notifyVisit(DetailAST aAST, AstState aAstState)", "+    private void notifyVisit(DetailAST ast, AstState astState)", "-        final String tokenType = TokenTypes.getTokenName(aAST.getType());", "+        final String tokenType = TokenTypes.getTokenName(ast.getType());", "-        if (aAstState == AstState.WITH_COMMENTS) {", "-            if (!mTokenToCommentChecks.containsKey(tokenType)) {", "+        if (astState == AstState.WITH_COMMENTS) {", "+            if (!tokenToCommentChecks.containsKey(tokenType)) {", "-            visitors = mTokenToCommentChecks.get(tokenType);", "+            visitors = tokenToCommentChecks.get(tokenType);", "-            if (!mTokenToOrdinaryChecks.containsKey(tokenType)) {", "+            if (!tokenToOrdinaryChecks.containsKey(tokenType)) {", "-            visitors = mTokenToOrdinaryChecks.get(tokenType);", "+            visitors = tokenToOrdinaryChecks.get(tokenType);", "-            c.visitToken(aAST);", "+            c.visitToken(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9c4e2141a23b1e660a50a3b584dd6eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void notifyLeave(DetailAST aAST, AstState aAstState)", "signatureAfterChange": "     private void notifyLeave(DetailAST ast, AstState astState)", "diff": ["-    private void notifyLeave(DetailAST aAST, AstState aAstState)", "+    private void notifyLeave(DetailAST ast, AstState astState)", "-        final String tokenType = TokenTypes.getTokenName(aAST.getType());", "+        final String tokenType = TokenTypes.getTokenName(ast.getType());", "-        if (aAstState == AstState.WITH_COMMENTS) {", "-            if (!mTokenToCommentChecks.containsKey(tokenType)) {", "+        if (astState == AstState.WITH_COMMENTS) {", "+            if (!tokenToCommentChecks.containsKey(tokenType)) {", "-            visitors = mTokenToCommentChecks.get(tokenType);", "+            visitors = tokenToCommentChecks.get(tokenType);", "-            if (!mTokenToOrdinaryChecks.containsKey(tokenType)) {", "+            if (!tokenToOrdinaryChecks.containsKey(tokenType)) {", "-            visitors = mTokenToOrdinaryChecks.get(tokenType);", "+            visitors = tokenToOrdinaryChecks.get(tokenType);", "-            ch.leaveToken(aAST);", "+            ch.leaveToken(ast);"]}]}