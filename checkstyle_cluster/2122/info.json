{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c74f9c53f9a4a42d95fa9ae0b22ccd7", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "049e1db66eec3327f43ffe398f5f8114", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (TokenTypes.INTERFACE_DEF == ast.getType()) {", "+        if (ast.getType() == TokenTypes.INTERFACE_DEF) {", "-        else if (TokenTypes.CTOR_DEF == ast.getType()", "+        else if (ast.getType() == TokenTypes.CTOR_DEF"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "065e14acc05069983c392aac5bbcebb1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (TokenTypes.METHOD_DEF == ast.getType()) {", "+        if (ast.getType() == TokenTypes.METHOD_DEF) {", "-            final boolean inInterface = TokenTypes.INTERFACE_DEF == ast.getType();", "+            final boolean inInterface = ast.getType() == TokenTypes.INTERFACE_DEF;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06b48164749fc5e2b131bf0d9a6f1952", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private static boolean isCountable(DetailAST ast)", "signatureAfterChange": "     private static boolean isCountable(DetailAST ast)", "diff": ["-        if (TokenTypes.EXPR == tokenType) {", "+        if (tokenType == TokenTypes.EXPR) {", "-        else if (TokenTypes.VARIABLE_DEF == tokenType) {", "+        else if (tokenType == TokenTypes.VARIABLE_DEF) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0935c6b346b1fb6d34fa2b01b80dfc69", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTag.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public boolean isThrowsTag()", "signatureAfterChange": "     public boolean isThrowsTag()", "diff": ["-        return JavadocTagInfo.THROWS == tagInfo", "-            || JavadocTagInfo.EXCEPTION == tagInfo;", "+        return tagInfo == JavadocTagInfo.THROWS", "+            || tagInfo == JavadocTagInfo.EXCEPTION;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "281e3460e47e6731c98776363b3b98e6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/AbstractParenPadCheck.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected void processRight(DetailAST ast)", "signatureAfterChange": "     protected void processRight(DetailAST ast)", "diff": ["-            if (PadOption.NOSPACE == getAbstractOption()", "+            if (getAbstractOption() == PadOption.NOSPACE", "-            else if (PadOption.SPACE == getAbstractOption()", "+            else if (getAbstractOption() == PadOption.SPACE"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29df01664e7b18466ac4fc942973e0fa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void logCommaViolation(final DetailAST ast)", "signatureAfterChange": "     private void logCommaViolation(final DetailAST ast)", "diff": ["-        if (TrailingArrayComma.ALWAYS == this.comma", "+        if (this.comma == TrailingArrayComma.ALWAYS", "-        else if (TrailingArrayComma.NEVER == this.comma", "+        else if (this.comma == TrailingArrayComma.NEVER"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b511ff0375606ac2b67207b6727733b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/MethodParamPadCheck.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            if (PadOption.NOSPACE == getAbstractOption()", "+            if (getAbstractOption() == PadOption.NOSPACE", "-            else if (PadOption.SPACE == getAbstractOption()", "+            else if (getAbstractOption() == PadOption.SPACE"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "420abc65e394aa776e8a2609cfdfe0aa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Override     public void addError(AuditEvent evt)", "signatureAfterChange": "     @Override     public void addError(AuditEvent evt)", "diff": ["-        if (SeverityLevel.IGNORE != severityLevel) {", "+        if (severityLevel != SeverityLevel.IGNORE) {", "-            if (SeverityLevel.WARNING == severityLevel) {", "+            if (severityLevel == SeverityLevel.WARNING) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cd26a9f7cc046df3d1a48817eb37989", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportCheck.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(final DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(final DetailAST ast)", "diff": ["-        if (!allowClassImports && TokenTypes.IMPORT == ast.getType()) {", "+        if (!allowClassImports && ast.getType() == TokenTypes.IMPORT) {", "-            && TokenTypes.STATIC_IMPORT == ast.getType()) {", "+            && ast.getType() == TokenTypes.STATIC_IMPORT) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6ad6dbb405b9a10a4fdbe93c65c86c1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForInitializerPadCheck.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                if (PadOption.NOSPACE == option", "+                if (option == PadOption.NOSPACE", "-                else if (PadOption.SPACE == option", "+                else if (option == PadOption.SPACE"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c37de74a72444fba7c8323c17c2276bf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/AbstractParenPadCheck.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected void processLeft(DetailAST ast)", "signatureAfterChange": "     protected void processLeft(DetailAST ast)", "diff": ["-            if (PadOption.NOSPACE == getAbstractOption()", "+            if (getAbstractOption() == PadOption.NOSPACE", "-            else if (PadOption.SPACE == getAbstractOption()", "+            else if (getAbstractOption() == PadOption.SPACE"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7ab603ee7ad8b7118b3f1be63686ec4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForIteratorPadCheck.java", "commitBeforeChange": "e5ec819a74d1cb02e36559c50e8c8bcbbef012fc", "commitAfterChange": "4d6e2376db89b69167de867bfc28f8d8624a6b78", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                if (PadOption.NOSPACE == getAbstractOption()", "+                if (getAbstractOption() == PadOption.NOSPACE", "-                else if (PadOption.SPACE == getAbstractOption()", "+                else if (getAbstractOption() == PadOption.SPACE"]}]}