{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d79dcb868c07477e4299bb7636b0ca8", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5d8bb3f6a643edb9a98c31d38727179", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java", "commitBeforeChange": "38bd8f7f3e30a8667792dccd591d8dc0461082df", "commitAfterChange": "91db1968e34b4f777ab146e37a827c20b35e5c52", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     @Override     public void visitToken(DetailAST aAST)", "diff": ["-                    log(modifier.getLineNo(),", "-                        modifier.getColumnNo(),", "-                        \"redundantModifier\",", "-                        new String[] {modifier.getText()});", "+                    log(modifier.getLineNo(), modifier.getColumnNo(),", "+                            \"redundantModifier\", modifier.getText());", "-                        log(modifier.getLineNo(),", "-                            modifier.getColumnNo(),", "-                            \"redundantModifier\",", "-                            new String[] {modifier.getText()});", "+                        log(modifier.getLineNo(), modifier.getColumnNo(),", "+                                \"redundantModifier\", modifier.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecd406a992311f2deacd380f3d8520a3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/RedundantImportCheck.java", "commitBeforeChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "commitAfterChange": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     @Override     public void visitToken(DetailAST aAST)", "diff": ["-                    log(aAST.getLineNo(),", "-                        aAST.getColumnNo(),", "-                        \"import.duplicate\",", "-                        new Integer(full.getLineNo()),", "-                        imp.getText());", "+                    log(aAST.getLineNo(), aAST.getColumnNo(),", "+                            \"import.duplicate\", full.getLineNo(),", "+                            imp.getText());", "-                    log(aAST.getLineNo(),", "-                        aAST.getColumnNo(),", "-                        \"import.duplicate\",", "-                        new Integer(full.getLineNo()),", "-                        imp.getText());", "+                    log(aAST.getLineNo(), aAST.getColumnNo(),", "+                        \"import.duplicate\", full.getLineNo(), imp.getText());"]}]}