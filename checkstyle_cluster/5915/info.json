{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0cc18814aacd8a862780715b67597cf7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d277cbc0f2c1ab401037600bd11964c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "3f853ae96a24f2079901c3d47c6e6a7fa0604654", "commitAfterChange": "2ad4b0830d3892f718134e198a0bcbe9fbf5d8c7", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private int compare(String currentImport, String previousImport)", "signatureAfterChange": "     private static int compareImports(String import1, String import2)", "diff": ["-    private int compare(String currentImport, String previousImport)", "+    private static int compareImports(String import1, String import2)", "-        int indexOfPreviousDotCurrent = 0;", "-        int indexOfNextDotCurrent = 0;", "-        String tokenCurrent = \"\";", "-        int indexOfPreviousDotPrevious = 0;", "-        int indexOfNextDotPrevious = 0;", "-        String tokenPrevious = \"\";", "-        final int currentImportDomainCount = countDomains(currentImport);", "-        final int previousImportDomainCount = countDomains(previousImport);", "-", "-        while (currentImport.lastIndexOf(\".\") != indexOfPreviousDotCurrent - 1", "-                && previousImport.lastIndexOf(\".\") != indexOfPreviousDotPrevious - 1)", "-        {", "-            indexOfNextDotCurrent = currentImport.indexOf(\".\", indexOfPreviousDotCurrent + 1);", "-            indexOfNextDotPrevious = previousImport.indexOf(\".\", indexOfPreviousDotPrevious + 1);", "-            tokenCurrent = currentImport.substring(indexOfPreviousDotCurrent,", "-                    indexOfNextDotCurrent);", "-            tokenPrevious = previousImport.substring(indexOfPreviousDotPrevious,", "-                    indexOfNextDotPrevious);", "-            result = tokenCurrent.compareToIgnoreCase(tokenPrevious);", "+        final String[] import1Tokens = import1.split(\"\\\\.\");", "+        final String[] import2Tokens = import2.split(\"\\\\.\");", "+        for (int i = 0; i < import1Tokens.length; i++) {", "+            if (i == import2Tokens.length) {", "+                break;", "+            }", "+            final String import1Token = import1Tokens[i];", "+            final String import2Token = import2Tokens[i];", "+            result = import1Token.compareToIgnoreCase(import2Token);", "-                return result;", "-            }", "-            indexOfPreviousDotCurrent = indexOfNextDotCurrent + 1;", "-            indexOfPreviousDotPrevious = indexOfNextDotPrevious + 1;", "-        }", "-", "-        if (result == 0 && (currentImport.lastIndexOf(\".\") == indexOfPreviousDotCurrent - 1", "-                || previousImport.lastIndexOf(\".\") == indexOfPreviousDotPrevious - 1))", "-        {", "-            if (currentImportDomainCount != previousImportDomainCount) {", "-                getClassName(indexOfNextDotPrevious, previousImport);", "-                return currentImportDomainCount - previousImportDomainCount;", "-            }", "-            else {", "-                getClassName(indexOfNextDotPrevious, previousImport);", "-                return getClassName(indexOfNextDotCurrent,", "-                        currentImport).compareToIgnoreCase(getClassName(indexOfNextDotPrevious,", "-                                previousImport));", "+                break;", "-        return 0;", "+        return result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea720cffb92e69dc6d0bdf787eaf4ad5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "85413204e184248152b2b3c5d4e540b09aba27bf", "commitAfterChange": "8fe7c3a914d75fa7b20fb5115b08dade9ed7c88c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-    public void execute()", "-        throws BuildException", "+    public void execute() throws BuildException", "+    {", "+        final ClassLoader loader = Thread.currentThread()", "+                .getContextClassLoader();", "+        try {", "+            Thread.currentThread().setContextClassLoader(", "+                    getClass().getClassLoader());", "+            realExecute();", "+        }", "+        finally {", "+            Thread.currentThread().setContextClassLoader(loader);", "+        }", "+    }", "-        final ResourceBundle compilationProperties =", "-            ResourceBundle.getBundle(\"checkstylecompilation\");", "-        final String version =", "-            compilationProperties.getString(\"checkstyle.compile.version\");", "-        final String compileTimestamp =", "-            compilationProperties.getString(\"checkstyle.compile.timestamp\");", "-                \"Must specify atleast one of 'file' or nested 'fileset'.\",", "-                getLocation());", "-                    new SeverityLevelCounter(SeverityLevel.WARNING);", "-            log(\"Running Checkstyle \" + version", "-                    + \" on \" + files.length + \" files\", Project.MSG_INFO);", "-                throw new BuildException(", "-                        \"Got \" + numErrs + \" errors and \"", "-                        + numWarnings + \" warnings.\",", "-                                         getLocation());"]}]}