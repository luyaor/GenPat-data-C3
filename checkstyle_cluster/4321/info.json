{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "820a53b99d97fd91420b872f806772ad", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f47603274775af63a9ab8b9baab4120", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule522typenames/TypeNameTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void typeNameTest() throws Exception", "signatureAfterChange": "      @Test     public void typeNameTest() throws Exception", "diff": ["-        Configuration checkConfig = builder.getCheckConfig(\"TypeName\");", "-        String msgKey = \"name.invalidPattern\";", "-        String format = \"^[A-Z][a-zA-Z0-9]*$\";", "+        final Configuration checkConfig = builder.getCheckConfig(\"TypeName\");", "+        final String msgKey = \"name.invalidPattern\";", "+        final String format = \"^[A-Z][a-zA-Z0-9]*$\";", "-            \"3:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"inputHeaderClass\", format),", "-            \"5:22: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"InputHeader___Interface\", format),", "-            \"7:17: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"inputHeaderEnum\", format),", "-            \"9:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"NoValid$Name\", format),", "-            \"11:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$NoValidName\", format),", "-            \"13:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"NoValidName$\", format),", "+            \"3:7: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"inputHeaderClass\",", "+                format),", "+            \"5:22: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"InputHeader___Interface\",", "+                format),", "+            \"7:17: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"inputHeaderEnum\",", "+                format),", "+            \"9:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"NoValid$Name\",", "+                format),", "+            \"11:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$NoValidName\",", "+                format),", "+            \"13:11: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"NoValidName$\",", "+                format),", "-        String filePath = builder.getFilePath(\"TypeNameInput\");", "+        final String filePath = builder.getFilePath(\"TypeNameInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8b8ad635918f500a8bf2234f7eb6559", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule525nonconstantfieldnames/MemberNameTest.java", "commitBeforeChange": "a244f057057913003dd17e952ee76a844f0fb76b", "commitAfterChange": "dc0a1a2fccdf6a642b05dee98206c7dd487162bd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void memberNameTest() throws Exception", "signatureAfterChange": "      @Test     public void memberNameTest() throws Exception", "diff": ["-            \"5:16: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"mPublic\", format),", "-            \"6:19: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"mProtected\", format),", "-            \"7:9: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"mPackage\", format),", "-            \"8:17: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"mPrivate\", format),", "-            \"10:16: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"_public\", format),", "-            \"11:19: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"prot_ected\", format),", "-            \"12:9: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"package_\", format),", "-            \"13:17: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"priva$te\", format),", "-            \"20:9: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"ABC\", format),", "-            \"21:15: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"C_D_E\", format),", "-            \"23:16: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$mPublic\", format),", "-            \"24:19: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"mPro$tected\", format),", "-            \"25:9: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"mPackage$\", format),", "+            \"5:16: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPublic\", format),", "+            \"6:19: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mProtected\", format),", "+            \"7:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPackage\", format),", "+            \"8:17: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPrivate\", format),", "+            \"10:16: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"_public\", format),", "+            \"11:19: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"prot_ected\", format),", "+            \"12:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"package_\", format),", "+            \"13:17: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"priva$te\", format),", "+            \"20:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"ABC\", format),", "+            \"21:15: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"C_D_E\", format),", "+            \"23:16: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"$mPublic\", format),", "+            \"24:19: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPro$tected\", format),", "+            \"25:9: \" + getCheckMessage(checkConfig.getMessages(), MSG_KEY, \"mPackage$\", format),"]}]}