{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c361a66eece0ecba7b8ec7417eb1816", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2b766231aed721ea421f1b428a4ae41", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "da2d75a1780c1691dc4aa45489f9e9674b1c652e", "commitAfterChange": "36b91a59d62c9505b835717f00f470c499cf9b30", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            case TokenTypes.LITERAL_FOR:", "-            case TokenTypes.STATIC_INIT:", "-            case TokenTypes.INSTANCE_INIT:", "-                scopeStack.push(new HashMap<String, DetailAST>());", "+                scopeStack.push(new ScopeData());", "-                    insertVariable(ast);", "+                    insertParameter(ast);", "+                        && !ast.branchContains(TokenTypes.FINAL)", "-                        && shouldCheckEnhancedForLoopVariable(ast)", "-                        && !ast.branchContains(TokenTypes.FINAL)) {", "+                        && shouldCheckEnhancedForLoopVariable(ast)) {", "-                        && ast.getParent().getFirstChild() == ast) {", "+                        && isFirstChild(ast)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa25f703a3bddf434297282a99eec509", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "0d66a67b0d3920031422d5bb02f0fc02ce580bae", "commitAfterChange": "c9c475a6c7a8cb728ba1c091b386db46f11a781f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                if (ScopeUtils.inInterfaceBlock(ast)", "-                    || inAbstractOrNativeMethod(ast)", "-                    || inLambda(ast)) {", "-                    break;", "+                if (!inLambda(ast)", "+                        && !ast.branchContains(TokenTypes.FINAL)", "+                        && !inAbstractOrNativeMethod(ast)", "+                        && !ScopeUtils.inInterfaceBlock(ast)) {", "+                    insertVariable(ast);", "+                break;", "-                        && shouldCheckEnhancedForLoopVariable(ast)", "+                        && shouldCheckEnhancedForLoopVariable(ast)"]}]}