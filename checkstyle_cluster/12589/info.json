{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "37120523fed21d9847a3edc765830634", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d9358b4e65d3ef33ebad55ae6f99528", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheck.java", "commitBeforeChange": "3dd97d4e85dfae29b5fb032cfe44a2d5e5761f38", "commitAfterChange": "840034a6cb56eb86154ebdedecd60b3c2140b806", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Override     public void visitToken(final DetailAST ast)", "signatureAfterChange": "     @Override     public void visitToken(final DetailAST ast)", "diff": ["-        final DetailAST token = warningHolder.findFirstToken(TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR);", "+        final DetailAST token =", "+                warningHolder.findFirstToken(TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR);", "-                        throw new IllegalStateException(\"Should never get here, type: \"", "-                                + fChild.getType() + \" text: \" + fChild.getText());", "+                        // #1252 - cases like @SuppressWarnings(\"un\" + \"used\") or", "+                        // @SuppressWarnings((String) \"unused\")"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7997bbc12635ee0e7f6071019d30540", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheck.java", "commitBeforeChange": "4ea1896f464b0f6c0ddfca3d8d9c9f84703bae5e", "commitAfterChange": "eef13e8c5ee6922af938d9eef3d73799ce71798b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Override     public void visitToken(final DetailAST ast)", "signatureAfterChange": "     @Override     public void visitToken(final DetailAST ast)", "diff": ["-        DetailAST warning = warningHolder.findFirstToken(TokenTypes.EXPR);", "+        final DetailAST token = warningHolder.findFirstToken(TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR);", "+        DetailAST warning;", "+", "+        if (token != null) {", "+            // case like '@SuppressWarnings(value = UNUSED)'", "+            warning = token.findFirstToken(TokenTypes.EXPR);", "+        }", "+        else {", "+            warning = warningHolder.findFirstToken(TokenTypes.EXPR);", "+        }"]}]}