{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f25f42c35d5ba19ad3c0630af3ae3b0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "619911b50d7bba36a088d3ccd70b8ac1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean isEmptyCtorBlock(DetailAST aAST, int aParentType)", "signatureAfterChange": "     private boolean isEmptyCtorBlock(DetailAST ast, int parentType)", "diff": ["-    private boolean isEmptyCtorBlock(DetailAST aAST, int aParentType)", "+    private boolean isEmptyCtorBlock(DetailAST ast, int parentType)", "-        return mAllowEmptyCtors", "-            && isEmptyBlock(aAST, aParentType, TokenTypes.CTOR_DEF);", "+        return allowEmptyCtors", "+            && isEmptyBlock(ast, parentType, TokenTypes.CTOR_DEF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9cd01b090138df2c170448fea6ce5d0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean isEmptyMethodBlock(DetailAST aAST, int aParentType)", "signatureAfterChange": "     private boolean isEmptyMethodBlock(DetailAST ast, int parentType)", "diff": ["-    private boolean isEmptyMethodBlock(DetailAST aAST, int aParentType)", "+    private boolean isEmptyMethodBlock(DetailAST ast, int parentType)", "-        return mAllowEmptyMethods", "-            && isEmptyBlock(aAST, aParentType, TokenTypes.METHOD_DEF);", "+        return allowEmptyMethods", "+            && isEmptyBlock(ast, parentType, TokenTypes.METHOD_DEF);"]}]}