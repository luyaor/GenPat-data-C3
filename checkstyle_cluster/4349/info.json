{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05a231c68622afff40302222c584e634", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "406f61d53cc2f8c51c97e3d5036b5141", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheck.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final DetailAST slistToken = aAST.findFirstToken(TokenTypes.SLIST);", "+        final DetailAST slistToken = ast.findFirstToken(TokenTypes.SLIST);", "-                ? slistToken : aAST.findFirstToken(TokenTypes.LCURLY);", "+                ? slistToken : ast.findFirstToken(TokenTypes.LCURLY);", "-                            MSG_KEY_BLOCK_NO_STMT,", "-                        aAST.getText());", "+                        MSG_KEY_BLOCK_NO_STMT,", "+                        ast.getText());", "-                        MSG_KEY_BLOCK_EMPTY,", "-                    aAST.getText());", "+                    MSG_KEY_BLOCK_EMPTY,", "+                    ast.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57eb63814309f5f68c829046e3c7c486", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final DetailAST slistAST = aAST.findFirstToken(TokenTypes.SLIST);", "+        final DetailAST slistAST = ast.findFirstToken(TokenTypes.SLIST);", "-        if ((aAST.getType() == TokenTypes.LITERAL_ELSE)", "-            && (aAST.findFirstToken(TokenTypes.LITERAL_IF) != null))", "+        if ((ast.getType() == TokenTypes.LITERAL_ELSE)", "+            && (ast.findFirstToken(TokenTypes.LITERAL_IF) != null))", "-        if (aAST.getType() == TokenTypes.LITERAL_IF) {", "-            skipStatement = isSkipIfBlock(aAST);", "+        if (ast.getType() == TokenTypes.LITERAL_IF) {", "+            skipStatement = isSkipIfBlock(ast);", "-            log(aAST.getLineNo(), MSG_KEY_NEED_BRACES, aAST.getText());", "+            log(ast.getLineNo(), MSG_KEY_NEED_BRACES, ast.getText());"]}]}