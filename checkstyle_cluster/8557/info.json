{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "98dba8f4b04aa0e3557c46a2d3f35790", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e3f1d640250165ead851dd985d5a77a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "230d434a1933305dd893713aa6d73a5e0953a03f", "commitAfterChange": "4d769d48f134d2e7d40111763e29f0870c9a7db5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void configure(Configuration aConfiguration)             throws CheckstyleException", "signatureAfterChange": "     public void configure(Configuration aConfiguration)             throws CheckstyleException", "diff": ["-        context.add(\"classLoader\", this.getClassLoader());", "+        context.add(\"classLoader\", mLoader);", "-                FileSetCheck fsc =", "+                final FileSetCheck fsc =", "-                        mPackageNames, getClassLoader(), name);", "-                fsc.setPackageNames(mPackageNames);", "+                        getPackageNames(),", "+                        getClass().getClassLoader(),", "+                        name);", "+                fsc.setPackageNames(getPackageNames());", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10218d7e4a9e7830b4873272e07032b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "bd9efb5e66d8a99fb1bd616213e4966d088d6932", "commitAfterChange": "dba6c944cdbf9acfbb40b9a2d8e6315fb14d87f0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void processVariable(DetailAST ast)", "signatureAfterChange": "     private void processVariable(DetailAST ast)", "diff": ["-            if (isStaticOrInstanceField(ast, name)", "-                && !isMatchingRegexp(name)", "-                && !isIgnoredSetterParam(ast, name)", "-                && !isIgnoredConstructorParam(ast)", "-                && !isIgnoredParamOfAbstractMethod(ast)) {", "+            if ((isStaticFieldHiddenFromAnonymousClass(ast, name)", "+                        || isStaticOrInstanceField(ast, name))", "+                    && !isMatchingRegexp(name)", "+                    && !isIgnoredParam(ast, name)) {", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3afccbef6f835f58c0189ba2053dc241", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/JavadocTagInfo.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     @Override     public String toString()", "signatureAfterChange": "     @Override     public String toString()", "diff": ["-        return \"text [\" + this.mText + \"] name [\" + this.mName", "-            + \"] type [\" + this.mType", "-            + \"] validInPackageHtml [\" + this.mValidInPackageHtml", "-            + \"] validInOverviewHtml [\" + this.mValidInOverviewHtml + \"]\";", "+        return \"text [\" + this.text + \"] name [\" + this.name", "+            + \"] type [\" + this.type", "+            + \"] validInPackageHtml [\" + this.validInPackageHtml", "+            + \"] validInOverviewHtml [\" + this.validInOverviewHtml + \"]\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64253f36f3cca5a7beb68696f1c3a97e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "14f2b27f8f5947d09384867c4483422bfbbb3e14", "commitAfterChange": "4509e18f16ec2819feee6fa6393c0821d74965dc", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "     private void checkThrowsTags(List aTags, List aThrows)", "signatureAfterChange": "     private void checkThrowsTags(List aTags, List aThrows)", "diff": ["+                    final ClassResolver cr = new ClassResolver(", "+                        Thread.currentThread().getContextClassLoader(),", "+                        mPkgName, mImports);", "-                        reqd = !Utils.isRuntimeException(", "-                            tag.getArg1(),", "-                            this.getClass().getClassLoader());", "+                        reqd = !RuntimeException.class.isAssignableFrom(", "+                            cr.resolve(tag.getArg1()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f057d05e82da0cbb629e1f22cc10797", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XDocsPagesTest.java", "commitBeforeChange": "948e489ba62f19d0d9c51d800c25e0470b4b4e1c", "commitAfterChange": "4cdfe5c510b5a9975320aee2f58ebc9357ad6d68", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private static void validateUsageExample(String fileName, String sectionName, Node subSection)", "signatureAfterChange": "      private static void validateUsageExample(String fileName, String sectionName, Node subSection)", "diff": ["+", "+                Assert.assertTrue(fileName + \" section '\" + sectionName", "+                        + \"' should be in google_checks.xml or not reference 'Google Style'\",", "+                        GOOGLE_CHECKS.contains(sectionName));", "+", "+                Assert.assertTrue(fileName + \" section '\" + sectionName", "+                        + \"' should be in sun_checks.xml or not reference 'Sun Style'\",", "+                        SUN_CHECKS.contains(sectionName));"]}]}