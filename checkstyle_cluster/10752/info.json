{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b98236066153bcffa13337cae92d536c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dcf65244b459978a2cb716609a434a8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java", "commitBeforeChange": "7d5db23ad528c95e0fbdfcd1293424c6240db07b", "commitAfterChange": "051988943b56d781f0263538beeafb38deb696ed", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testWithoutLineSeparator() throws Exception", "signatureAfterChange": "      @Test     public void testWithoutLineSeparator() throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/tools/\"", "-                + \"checkstyle/imports/\"", "-                + \"InputCustomImportOrderSamePackage.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputCustomImportOrderSamePackage.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76dff7c6f3df1e4065c293079153f0e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testMethodReferences2() throws Exception", "signatureAfterChange": "      @Test     public void testMethodReferences2() throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/tools/\"", "-                + \"checkstyle/whitespace/\"", "-                + \"InputGenericWhitespaceMethodRef.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputGenericWhitespaceMethodRef.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82b8a70c64070c989ef93b0d679fb091", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/MethodReferencesTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testFromSpec()         throws Exception", "signatureAfterChange": "      @Test     public void testFromSpec()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/\"", "-                + \"puppycrawl/tools/checkstyle/grammars/java8/\"", "-                + \"InputMethodReferencesTest2.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputMethodReferencesTest2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2a7589f30a0888083baa7c8f9c34a02", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/MethodReferencesTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCanParse()         throws Exception", "signatureAfterChange": "      @Test     public void testCanParse()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/\"", "-                + \"puppycrawl/tools/checkstyle/grammars/java8/\"", "-                + \"InputMethodReferencesTest.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputMethodReferencesTest.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa0ab8ff5c2730b9abf838da4743de97", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheckTest.java", "commitBeforeChange": "47e6c23b4d9cd01731a90e3caeea33ca53a15516", "commitAfterChange": "d2725210b241372a2526d0767e04adfb853d5202", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testLambdaExpression() throws Exception", "signatureAfterChange": "      @Test     public void testLambdaExpression() throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/tools/\"", "-                + \"checkstyle/coding/\"", "-                + \"InputInnerAssignmentLambdaExpressions.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputInnerAssignmentLambdaExpressions.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac7f0d392e5cbaee73ac4dca4058fae2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheckTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testMethodReferences() throws Exception", "signatureAfterChange": "      @Test     public void testMethodReferences() throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/tools/\"", "-                + \"checkstyle/grammars/java8/\"", "-                + \"InputMethodReferencesTest3.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputMethodReferencesTest3.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be9acf7657ebd4de58490fc79ad829a5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "7d5db23ad528c95e0fbdfcd1293424c6240db07b", "commitAfterChange": "051988943b56d781f0263538beeafb38deb696ed", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 30, "signatureBeforeChange": "      @Test     public void testMultiplePatternMatches() throws Exception", "signatureAfterChange": "      @Test     public void testMultiplePatternMatches() throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/tools/\"", "-                + \"checkstyle/imports/\"", "-                + \"InputImportOrder_MultiplePatternMatches.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputImportOrder_MultiplePatternMatches.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb829409c65cfc09fbb302e33cb3ff05", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/MethodReferencesTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testGenericInPostfixExpressionBeforeReference()         throws Exception", "signatureAfterChange": "      @Test     public void testGenericInPostfixExpressionBeforeReference()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/\"", "-                + \"puppycrawl/tools/checkstyle/grammars/java8/\"", "-                + \"InputMethodReferencesTest3.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputMethodReferencesTest3.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce4d9f0bbfc597792ca0ca0f3613cb99", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java", "commitBeforeChange": "7d5db23ad528c95e0fbdfcd1293424c6240db07b", "commitAfterChange": "051988943b56d781f0263538beeafb38deb696ed", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testStaticSamePackage() throws Exception", "signatureAfterChange": "      @Test     public void testStaticSamePackage() throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/tools/\"", "-                + \"checkstyle/imports/\"", "-                + \"InputCustomImportOrderSamePackage.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputCustomImportOrderSamePackage.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfac6b2da4ef6e163646c231ae29ee18", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheckTest.java", "commitBeforeChange": "d6b61b75ad66e02e8745eaef9adfbda70fdfda68", "commitAfterChange": "115a5df29dd256bb946c950b8f80d02a28f57edf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void oneStatementNonCompilableInputTest() throws Exception", "signatureAfterChange": "      @Test     public void oneStatementNonCompilableInputTest() throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/\"", "-                + \"com/puppycrawl/tools/checkstyle/coding/\"", "-                + \"InputOneStatementPerLineCheck.java\").getCanonicalPath(),", "-            expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputOneStatementPerLineCheck.java\"), expected);"]}]}