{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e26e7ec0e5360556d99adaddd130cdff", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66ce8583437934060edb9653a53a7a70", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AuditEvent.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public AuditEvent(Object aSrc, String aFileName, LocalizedMessage aMessage)", "signatureAfterChange": "     public AuditEvent(Object src, String fileName, LocalizedMessage message)", "diff": ["-    public AuditEvent(Object aSrc, String aFileName, LocalizedMessage aMessage)", "+    public AuditEvent(Object src, String fileName, LocalizedMessage message)", "-        super(aSrc);", "-        mFileName = aFileName;", "-        mMessage = aMessage;", "+        super(src);", "+        this.fileName = fileName;", "+        this.message = message;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bec716bec14e6992b67559564b1be72", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "         private RegularClass(final Token aName,                              final String aSurroundingClass,                              final AbstractTypeAwareCheck aCheck)", "signatureAfterChange": "         private RegularClass(final Token name,                              final String surroundingClass,                              final AbstractTypeAwareCheck check)", "diff": ["-        private RegularClass(final Token aName,", "-                             final String aSurroundingClass,", "-                             final AbstractTypeAwareCheck aCheck)", "+        private RegularClass(final Token name,", "+                             final String surroundingClass,", "+                             final AbstractTypeAwareCheck check)", "-            super(aName);", "-            mSurroundingClass = aSurroundingClass;", "-            mCheck = aCheck;", "+            super(name);", "+            this.surroundingClass = surroundingClass;", "+            this.check = check;"]}]}