{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "292c1bced056d26ed18b37749530b1f8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49f13ea0e47b6a570da4f9ddcb914750", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/CSVFilter.java", "commitBeforeChange": "e67c9bf04683ef3268feaef287af05103c46a5a3", "commitAfterChange": "cf5851ed2977d062777a16d013b4b8ec24d73ffc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public boolean equals(Object object)", "signatureAfterChange": "      @Override     public boolean equals(Object object)", "diff": ["+    public boolean equals(Object object) {", "+        if (this == object) {", "+            return true;", "+        }", "+        if (object == null || getClass() != object.getClass()) {", "+            return false;", "+        }", "+        final CSVFilter csvFilter = (CSVFilter) object;", "+        return Objects.equals(filters, csvFilter.filters);", "-", "-    @Override", "-    public boolean equals(Object object) {", "-        if (object instanceof CSVFilter) {", "-            final CSVFilter other = (CSVFilter) object;", "-            return this.filters.equals(other.filters);", "-        }", "-        return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e39efb96e305471a570cd674599b5ce3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FilterSet.java", "commitBeforeChange": "e8255c208f9b75bda2d724e901fc210fff9ab15a", "commitAfterChange": "d8c8ab30778cd179a6d6430bbd05eed5e777684a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public boolean equals(Object object)", "signatureAfterChange": "      @Override     public boolean equals(Object o)", "diff": ["+    public boolean equals(Object o) {", "+        if (this == o) {", "+            return true;", "+        }", "+        if (o == null || getClass() != o.getClass()) {", "+            return false;", "+        }", "+        final FilterSet filterSet = (FilterSet) o;", "+        return Objects.equals(filters, filterSet.filters);", "-", "-    @Override", "-    public boolean equals(Object object) {", "-        if (object instanceof FilterSet) {", "-            final FilterSet other = (FilterSet) object;", "-            return this.filters.equals(other.filters);", "-        }", "-        return false;"]}]}