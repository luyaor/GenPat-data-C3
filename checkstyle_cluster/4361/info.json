{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57cd27b4418aaaaa4d38a8febac2f71f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01e1b60f0259f81aa3c57c269abfe08f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodDefHandler.java", "commitBeforeChange": "343e946b076a5344e380c76e5b3ea23438b6fc93", "commitAfterChange": "e3a48d1527341456a798c3f0c1986de6898a8c60", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void checkType()", "signatureAfterChange": "                 @Override                 public DetailAST findLastNode(DetailAST aFirstNode)", "diff": ["-     */", "-    private void checkType()", "-    {", "-        final DetailAST type = getMainAst().findFirstToken(TokenTypes.TYPE);", "-        final DetailAST ident = ExpressionHandler.getFirstToken(type);", "-        final int columnNo = expandedTabsColumnNo(ident);", "-        if (startsLine(ident) && !getLevel().accept(columnNo)) {", "-            logError(ident, \"return type\", columnNo);", "-        }", "-    }", "+            new LineWrappingHandler(getIndentCheck(), getMainAst()) {", "+                @Override", "+                public DetailAST findLastNode(DetailAST aFirstNode)", "+                {", "+                    return aFirstNode.getLastChild().getPreviousSibling();", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b5ca594c8becbad38ce6678f89e6589", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodDefHandler.java", "commitBeforeChange": "343e946b076a5344e380c76e5b3ea23438b6fc93", "commitAfterChange": "e3a48d1527341456a798c3f0c1986de6898a8c60", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void checkIndentation()", "signatureAfterChange": "      @Override     public void checkIndentation()", "diff": ["-        checkIdent();", "-        checkThrows();", "-        if (getMainAst().getType() != TokenTypes.CTOR_DEF) {", "-            checkType();", "-        }", "-        checkParameters();", "+        final LineWrappingHandler lineWrap =", "+            new LineWrappingHandler(getIndentCheck(), getMainAst()) {", "+                @Override", "+                public DetailAST findLastNode(DetailAST aFirstNode)", "+                {", "+                    return aFirstNode.getLastChild().getPreviousSibling();", "+                }", "+            };", "+        lineWrap.checkIndentation();"]}]}