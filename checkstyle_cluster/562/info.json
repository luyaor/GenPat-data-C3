{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1cf5f33baa89427d1c9a3ce0ec59416e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e1dc866f346c206eca42034aa6b5229", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SingleLineJavadocCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setIgnoredTags(String tags)", "signatureAfterChange": "     public void setIgnoredTags(String tags)", "diff": ["-        final List<String> ignoredTags = new ArrayList<>();", "+        final List<String> tagList = new ArrayList<>();", "-            ignoredTags.add(sTag.trim());", "+            tagList.add(sTag.trim());", "-        this.ignoredTags = ignoredTags;", "+        this.ignoredTags = tagList;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23d9133394eb5af8f9478bf3cb0c8692", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AllChecksTest.java", "commitBeforeChange": "bf9325be913ce46a1427232c455f4830b574ba44", "commitAfterChange": "745e21f1e4d202dd8dba577585f35f7d3f10d839", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private static Set<String> getCheckStyleChecksReferencedInConfig(String configFilePath)         throws ParserConfigurationException, IOException, SAXException", "signatureAfterChange": "     private static Set<String> getCheckStyleChecksReferencedInConfig(String configFilePath)         throws ParserConfigurationException, IOException, SAXException", "diff": ["-        final Set<String> checksReferencedInCheckstyleChecksXML = new HashSet<>();", "+        final Set<String> checksReferencedInCheckstyleChecksXml = new HashSet<>();", "-                    checksReferencedInCheckstyleChecksXML.add(checkName);", "+                    checksReferencedInCheckstyleChecksXml.add(checkName);", "-        return checksReferencedInCheckstyleChecksXML;", "+        return checksReferencedInCheckstyleChecksXml;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27a6c039a37cbc7d91f8fd942a07fa4f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/transmogrify/ClassDef.java", "commitBeforeChange": "cf27285c85613a0963903ddf6b683aa586f90aa5", "commitAfterChange": "adc04337ea44d4e6b0ff8ec5efedd11ecd263646", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public IMethod getMethodDefinition(String name, ISignature signature)", "signatureAfterChange": "      public IMethod getMethodDefinition(String name, ISignature signature)", "diff": ["-            IClass[] interfaces = getInterfaces();", "+            IClass[] myInterfaces = getInterfaces();", "-                index < interfaces.length && result == null;", "+                index < myInterfaces.length && result == null;", "-                result = interfaces[index].getMethodDefinition(name, signature);", "+                result = myInterfaces[index].getMethodDefinition(name, signature);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b530c068bc55bb670912bb266783bc4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CheckUtils.java", "commitBeforeChange": "f0ea60f77bbc5e524320b042d7a90eefbf2bd00d", "commitAfterChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static FullIdent createFullType(DetailAST typeAST)", "signatureAfterChange": "     public static FullIdent createFullType(DetailAST typeAST)", "diff": ["-        final DetailAST arrayDeclAST =", "+        final DetailAST arrayDeclaratorAST =", "-        if (arrayDeclAST == null) {", "+        if (arrayDeclaratorAST == null) {", "-            fullType = createFullTypeNoArrays(arrayDeclAST);", "+            fullType = createFullTypeNoArrays(arrayDeclaratorAST);"]}]}