{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e03e12a2456b9e42cf43b21f898b1c3b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01077ce2f1e826229d1b84dc11c3c69a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "aede54ee77fb0887148db30be804b36758111698", "commitAfterChange": "a0411608c3ce7871e4f02234879c79e3b8922120", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     void verifyLParen(int aLineNo, int aColNo)", "signatureAfterChange": "     void verifyLParen(int aLineNo, int aColNo)", "diff": ["-        if (mConfig.isIgnoreWhitespace()", "-            || (PadOption.IGNORE == mConfig.getParenPadOption()))", "-        {", "-            return;", "-        }", "-", "-        final String line = mLines[aLineNo - 1];", "-        final int after = aColNo - 1;", "-        if (after < line.length()) {", "-            if ((PadOption.NOSPACE == mConfig.getParenPadOption())", "-                && (Character.isWhitespace(line.charAt(after))))", "-            {", "-                mMessages.add(aLineNo, after, \"ws.followed\", \"(\");", "-            }", "-            else if ((PadOption.SPACE == mConfig.getParenPadOption())", "-                     && !Character.isWhitespace(line.charAt(after))", "-                     && (line.charAt(after) != ')'))", "-            {", "-                mMessages.add(aLineNo, after, \"ws.notFollowed\", \"(\");", "-            }", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a4d8411197932e2193216bd44cfe78b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "8c80de169203a31d3ffc2368712a34a50d783165", "commitAfterChange": "850590186419416b1c02eba137fc6ec042de7f8b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     void verifyOpBegin(int aLineNo, int aColNo, String aText)", "signatureAfterChange": "     void verifyOpBegin(int aLineNo, int aColNo, String aText)", "diff": ["-        final WrapOpOption wOp = mConfig.getWrapOpOption();", "-", "-        if (wOp != WrapOpOption.IGNORE) {", "-", "-            // Check if rest of line is whitespace, and not just the operator", "-            // by itself. This last bit is to handle the operator on a line by", "-            // itself.", "-            if (wOp == WrapOpOption.NL", "-                && !aText.equals(mLines[aLineNo - 1].trim())", "-                && (mLines[aLineNo - 1].substring(aColNo + aText.length() - 1)", "-                    .trim().length() == 0))", "-            {", "-                mMessages.add(aLineNo, aColNo - 1, \"line.new\", aText);", "-            }", "-            else if (wOp == WrapOpOption.EOL", "-                     && Utils.whitespaceBefore(aColNo - 1, mLines[aLineNo - 1]))", "-            {", "-                mMessages.add(aLineNo, aColNo - 1, \"line.previous\", aText);", "-            }", "-        }"]}]}