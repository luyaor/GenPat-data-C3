{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ecc122a75d8280cbb129b970518bc978", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "890b932b8069105a608ce4112c42aa22", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "3ded7a11556a6258bcddd3ebe2d69a2058675601", "commitAfterChange": "69138e40225407ef560fd9d06d2903de37c83c2c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 33, "signatureBeforeChange": "     RE getParamRegexp()", "signatureAfterChange": "     private static int getIntProperty(Properties aProps, PrintStream aLog,                                       String aName, int aDefault)", "diff": ["+     */", "+    private static int getIntProperty(Properties aProps, PrintStream aLog,", "+                                      String aName, int aDefault)", "+        int retVal = aDefault;", "+        final String strRep = aProps.getProperty(aName);", "+        if (strRep != null) {", "+            try {", "+                retVal = Integer.parseInt(strRep);", "+            }", "+            catch (NumberFormatException nfe) {", "+                aLog.println(\"Unable to parse \" + aName +", "+                             \" property with value \" + strRep +", "+                             \", defaulting to \" + aDefault + \".\");", "+            }", "+        }", "+        return retVal;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8555f38b756848126802f4376e375a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "3da466b9bfd816807a77d923fa2f323966d072bf", "commitAfterChange": "9ad235214f2376816f2af945a05368b38e77db88", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 96, "signatureBeforeChange": "     public void setIgnoreWhitespace(boolean aTo)", "signatureAfterChange": "     private void setBooleanFlag(Properties aProps, String aName)", "diff": ["-     */", "-    public void setIgnoreWhitespace(boolean aTo)", "-    {", "-        mIgnoreWhitespace = aTo;", "-    }", "+     */", "+    private void setBooleanFlag(Properties aProps, String aName)", "+    {", "+        String strRep = aProps.getProperty(aName);", "+        if (strRep != null) {", "+            strRep = strRep.toLowerCase().trim();", "+            if (strRep.equals(\"true\") || strRep.equals(\"yes\")", "+                || strRep.equals(\"on\"))", "+            {", "+                setBooleanFlag(aName, true);", "+            }", "+        }", "+    }"]}]}