{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc439143cdb44086a7d0c8a1bc921f69", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0eaf53e867beba6724638334a2c96bb6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        AbstractClassNameCheck classNameCheckObj = new AbstractClassNameCheck();", "-        int[] actual = classNameCheckObj.getRequiredTokens();", "-        int[] expected = {", "+        final AbstractClassNameCheck classNameCheckObj = new AbstractClassNameCheck();", "+        final int[] actual = classNameCheckObj.getRequiredTokens();", "+        final int[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24ace5953fa1dbdc31cefec7831ecb02", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        RedundantModifierCheck redundantModifierCheckObj = new RedundantModifierCheck();", "-        int[] actual = redundantModifierCheckObj.getRequiredTokens();", "-        int[] expected = ArrayUtils.EMPTY_INT_ARRAY;", "+        final RedundantModifierCheck redundantModifierCheckObj = new RedundantModifierCheck();", "+        final int[] actual = redundantModifierCheckObj.getRequiredTokens();", "+        final int[] expected = ArrayUtils.EMPTY_INT_ARRAY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "795434373fc9b86e35f3535ded7a4a68", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        AbstractClassNameCheck classNameCheckObj = new AbstractClassNameCheck();", "-        int[] actual = classNameCheckObj.getAcceptableTokens();", "-        int[] expected = {", "+        final AbstractClassNameCheck classNameCheckObj = new AbstractClassNameCheck();", "+        final int[] actual = classNameCheckObj.getAcceptableTokens();", "+        final int[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "939cbbcfc045c86c8587daf78d8222ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        RedundantModifierCheck redundantModifierCheckObj = new RedundantModifierCheck();", "-        int[] actual = redundantModifierCheckObj.getAcceptableTokens();", "-        int[] expected = {", "+        final RedundantModifierCheck redundantModifierCheckObj = new RedundantModifierCheck();", "+        final int[] actual = redundantModifierCheckObj.getAcceptableTokens();", "+        final int[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e81f9e2257753acc25dd51153d38f802", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/LocalFinalVariableNameCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        LocalFinalVariableNameCheck localFinalVariableNameCheckObj =", "+        final LocalFinalVariableNameCheck localFinalVariableNameCheckObj =", "-        int[] actual = localFinalVariableNameCheckObj.getAcceptableTokens();", "-        int[] expected = {", "+        final int[] actual = localFinalVariableNameCheckObj.getAcceptableTokens();", "+        final int[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa78020ae3a63794a8b1aaac331745c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/ConstantNameCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        ConstantNameCheck constantNameCheckObj = new ConstantNameCheck();", "-        int[] actual = constantNameCheckObj.getAcceptableTokens();", "-        int[] expected = {", "+        final ConstantNameCheck constantNameCheckObj = new ConstantNameCheck();", "+        final int[] actual = constantNameCheckObj.getAcceptableTokens();", "+        final int[] expected = {"]}]}