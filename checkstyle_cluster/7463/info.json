{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d89658bb7d69178c9d927e6f04dfec4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07a07e87049821f154800b2b8b30f135", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MemberDefHandler.java", "commitBeforeChange": "82f4a9852de874b4849a67f53f4e541d13db869b", "commitAfterChange": "24c13109a52b0b5085b5db2e8b0ae96655d9480c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void checkIndentation()", "signatureAfterChange": "      @Override     public void checkIndentation()", "diff": ["-            new LineWrappingHandler(getIndentCheck(), getMainAst()) {", "-                @Override", "-                public DetailAST findLastNode(DetailAST firstNode)", "-                {", "-                    DetailAST lastNode = getFirstNode().getLastChild();", "-                    if (lastNode.getType() != TokenTypes.SEMI) {", "-                        lastNode = getFirstNode().getNextSibling();", "-                    }", "-                    return lastNode;", "-                }", "-            };", "+            new LineWrappingHandler(getIndentCheck(), getMainAst(),", "+                getVarDefStatementSemicolon(getMainAst()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ce2efa13a8f0c753d6fb5dc83154d91", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ElseHandler.java", "commitBeforeChange": "e1d06c0a92d22352051d90b1e30271578ebc6b84", "commitAfterChange": "79694f0d50ed0940bdee84f8d51385f8ed7c4a7f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected void checkToplevelToken()", "signatureAfterChange": "      @Override     protected void checkToplevelToken()", "diff": ["-        if (ifAST != null) {", "-            final DetailAST slist = ifAST.findFirstToken(TokenTypes.SLIST);", "-            if (slist != null) {", "-                final DetailAST lcurly = slist.getLastChild();", "-                if (lcurly != null", "-                    && lcurly.getLineNo() == getMainAst().getLineNo()) {", "-                    // indentation checked as part of LITERAL IF check", "-                    return;", "-                }", "+        final DetailAST slist = ifAST.findFirstToken(TokenTypes.SLIST);", "+        if (slist != null) {", "+            final DetailAST lcurly = slist.getLastChild();", "+            if (lcurly.getLineNo() == getMainAst().getLineNo()) {", "+                // indentation checked as part of LITERAL IF check", "+                return;"]}]}