{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e55a2dee5bebd5439e911811aaa3ef6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1091b5ea20eef89227bf94f9d4f0eb92", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenTextCheck.java", "commitBeforeChange": "262209477f39964a63103613f3e2c985da083371", "commitAfterChange": "08638b5f739d9929698860048c052da2d5f80209", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int[] getAcceptableTokens()", "signatureAfterChange": "     @Override     public int[] getAcceptableTokens()", "diff": ["+    @Override", "-        final Set tokenNames = getTokenNames();", "+        final Set<String> tokenNames = getTokenNames();", "-        final Iterator it = tokenNames.iterator();", "-        while (it.hasNext()) {", "-            final String name = (String) it.next();", "+        for (String name : tokenNames) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c900c0b24e8d739d5c7f0e888f3e196f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "262209477f39964a63103613f3e2c985da083371", "commitAfterChange": "08638b5f739d9929698860048c052da2d5f80209", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "     @Override     public void finishTree(DetailAST aRootAST)", "diff": ["+    @Override", "-        final Set keys = mStringMap.keySet();", "-        final Iterator keyIterator = keys.iterator();", "-        while (keyIterator.hasNext()) {", "-            final String key = (String) keyIterator.next();", "-            final ArrayList hits = (ArrayList) mStringMap.get(key);", "+        final Set<String> keys = mStringMap.keySet();", "+        for (String key : keys) {", "+            final List<StringInfo> hits = mStringMap.get(key);", "-                final StringInfo firstFinding = (StringInfo) hits.get(0);", "+                final StringInfo firstFinding = hits.get(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce1639648494e7de83c1646848c0db90", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenCheck.java", "commitBeforeChange": "262209477f39964a63103613f3e2c985da083371", "commitAfterChange": "08638b5f739d9929698860048c052da2d5f80209", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int[] getAcceptableTokens()", "signatureAfterChange": "     @Override     public int[] getAcceptableTokens()", "diff": ["+    @Override", "-        final Set tokenNames = getTokenNames();", "+        final Set<String> tokenNames = getTokenNames();", "-            final Iterator it = tokenNames.iterator();", "-            while (it.hasNext()) {", "-                final String name = (String) it.next();", "+            for (String name : tokenNames) {"]}]}