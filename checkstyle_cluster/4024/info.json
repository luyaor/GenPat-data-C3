{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18720aa79f607ff6e103be5dd87d51c8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41f7b168c214311560e6d133903af489", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreak/MethodParamPadTest.java", "commitBeforeChange": "648871b6c87c84d3c24d58512a2f4ecd47f62017", "commitAfterChange": "cdfa561939a3475cd4c36b47a2433a0f70c9b6ff", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void operatorWrapTest() throws Exception", "signatureAfterChange": "      @Test     public void operatorWrapTest() throws Exception", "diff": ["-        final String messageKey = \"line.previous\";", "+        final String messageKeyPrevious = \"line.previous\";", "+        final String messageKeyPreceded = \"ws.preceded\";", "-            \"83:9: \" + getCheckMessage(clazz, messageKey, \"(\"),", "-            \"128:13: \" + getCheckMessage(clazz, messageKey, \"(\"),", "-            \"130:9: \" + getCheckMessage(clazz, messageKey, \"(\"),", "+            \"83:9: \" + getCheckMessage(clazz, messageKeyPrevious, \"(\"),", "+            \"128:13: \" + getCheckMessage(clazz, messageKeyPrevious, \"(\"),", "+            \"130:9: \" + getCheckMessage(clazz, messageKeyPrevious, \"(\"),", "+            \"353:15: \" + getCheckMessage(clazz, messageKeyPreceded, \"(\"),", "+            \"358:13: \" + getCheckMessage(clazz, messageKeyPrevious, \"(\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c1a24dc93e5d1ac8d76e9a324f28be5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheckTest.java", "commitBeforeChange": "c56dce9222a819b4741b4c0cd664d38c58b31050", "commitAfterChange": "866daeeb2ad31e6a5a78235aa46819d9f966ee1c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testSurroundingCode() throws Exception", "signatureAfterChange": "      @Test     public void testSurroundingCode() throws Exception", "diff": ["-            \"136: \" + getCheckMessage(MSG_KEY_SINGLE, 137, 20, 16),", "+            \"90: \" + getCheckMessage(MSG_KEY_SINGLE, 91, 14, 8),", "+            \"98: \" + getCheckMessage(MSG_KEY_SINGLE, 99, 13, 8),", "+            \"108: \" + getCheckMessage(MSG_KEY_SINGLE, 109, 33, 8),", "-        verify(checkConfig, getPath(\"InputCommentsIndentationSurroundingCode.java\"), expected);", "+        final String testInputFile = \"InputCommentsIndentationSurroundingCode.java\";", "+        verify(checkConfig, getPath(testInputFile), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8fe9dfc2d4a8e6481ab0f581873ded2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheckTest.java", "commitBeforeChange": "c56dce9222a819b4741b4c0cd664d38c58b31050", "commitAfterChange": "866daeeb2ad31e6a5a78235aa46819d9f966ee1c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testTokens() throws Exception", "signatureAfterChange": "      @Test     public void testCheckOnlyBlockComments() throws Exception", "diff": ["-    public void testTokens() throws Exception {", "-            \"136: \" + getCheckMessage(MSG_KEY_SINGLE, 137, 20, 16),", "-        verify(checkConfig, getPath(\"InputCommentsIndentationSurroundingCode.java\"), expected);", "+", "+    @Test", "+    public void testCheckOnlyBlockComments() throws Exception {", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(CommentsIndentationCheck.class);", "+        checkConfig.addAttribute(\"tokens\", \"BLOCK_COMMENT_BEGIN\");", "+        final String[] expected = {", "+            \"23: \" + getCheckMessage(MSG_KEY_BLOCK, 24, 16, 12),", "+            \"25: \" + getCheckMessage(MSG_KEY_BLOCK, 27, 16, 12),", "+            \"28: \" + getCheckMessage(MSG_KEY_BLOCK, 31, 16, 12),", "+            \"51: \" + getCheckMessage(MSG_KEY_BLOCK, 53, 23, 36),", "+            };", "+        final String testInputFile = \"InputCommentsIndentationSurroundingCode.java\";", "+        verify(checkConfig, getPath(testInputFile), expected);"]}]}