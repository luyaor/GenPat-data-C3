{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd51f8f775fb3301bbe252419117c908", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dd57e1179b52f5e13d034f68b2e02c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private static ParseTree getNextSibling(ParseTree aNode)", "signatureAfterChange": "     private static ParseTree getNextSibling(ParseTree node)", "diff": ["-    private static ParseTree getNextSibling(ParseTree aNode)", "+    private static ParseTree getNextSibling(ParseTree node)", "-        if (aNode.getParent() == null) {", "+        if (node.getParent() == null) {", "-        final ParseTree parent = aNode.getParent();", "+        final ParseTree parent = node.getParent();", "-            if (currentNode.equals(aNode)) {", "+            if (currentNode.equals(node)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd5f51c60f288b37778300c95193e3c8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private static int getTokenType(ParseTree aNode)", "signatureAfterChange": "     private static int getTokenType(ParseTree node)", "diff": ["-    private static int getTokenType(ParseTree aNode)", "+    private static int getTokenType(ParseTree node)", "-        if (aNode.getChildCount() == 0) {", "-            tokenType = ((TerminalNode) aNode).getSymbol().getType();", "+        if (node.getChildCount() == 0) {", "+            tokenType = ((TerminalNode) node).getSymbol().getType();", "-            final String className = getNodeClassNameWithoutContext(aNode);", "+            final String className = getNodeClassNameWithoutContext(node);"]}]}