{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81bf45b22f79db046a580765c0805479", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07315b714826ed89413755ca3412b4c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/Main.java", "commitBeforeChange": "748df52c1317e298203bf28e48545d3e50db59f1", "commitAfterChange": "6cc11418ffa1c0be34411c0e4a296b748f2a0842", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main(String[] args)", "signatureAfterChange": "     public static void main(String[] args)", "diff": ["-        JFrame frame = new JFrame(\"CheckStyle\");", "-        frame.getContentPane().add(new ParseTreeInfoPanel());", "+        final JFrame frame = new JFrame(\"CheckStyle\");", "+        final ParseTreeInfoPanel panel = new ParseTreeInfoPanel();", "+        frame.getContentPane().add(panel);", "+        if (args.length >= 1) {", "+            final File f = new File(args[0]);", "+            panel.openFile(f, frame);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d7d675ad99c67dfb0b2b91214f2a3bb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "10f348bbfd91fd8c2bd7776aff3c03f549380a44", "commitAfterChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void processIdent(DetailAST ast)", "signatureAfterChange": "     private void processIdent(DetailAST ast)", "diff": ["-                if (checkMethods && isClassMethod(ast)) {", "-                    log(ast, MSG_METHOD, ast.getText());", "+                if (checkMethods) {", "+                    final AbstractFrame frame = checkMethod(ast);", "+                    if (frame != null) {", "+                        logViolation(MSG_METHOD, ast, frame);", "+                    }", "-                    processField(ast, parentType);", "+                    final AbstractFrame frame = processField(ast, parentType);", "+                    if (frame != null) {", "+                        logViolation(MSG_VARIABLE, ast, frame);", "+                    }", "+        }", "+    }"]}]}