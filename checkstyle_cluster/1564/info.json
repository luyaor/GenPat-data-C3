{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9239ca0aaf9acb6e7f88a9c72acb7bb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4e3e0b939073fe44136b5b8d8185fad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "2f987d2f183f9c2db612d2c25ff17f650edd45e1", "commitAfterChange": "576d593f6cb309d0959639fa707d0a01f28a6609", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private static String getCanonicalName(DetailAST importAst)", "signatureAfterChange": "     private static String getImportedTypeCanonicalName(DetailAST importAst)", "diff": ["-    private static String getCanonicalName(DetailAST importAst) {", "+    private static String getImportedTypeCanonicalName(DetailAST importAst) {", "-            if (toVisit != null", "-                   && (toVisit.getType() == TokenTypes.IDENT", "-                      || toVisit.getType() == TokenTypes.STAR)) {", "+            if (toVisit != null && toVisit.getType() == TokenTypes.IDENT) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aed56b2ea88e91e5ead9e959cfa9c130", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "ec414646eaf9ceb7de4b6e75b6c11d446cd0971f", "commitAfterChange": "90178ab2e4bfac216cf861188006818ebce10293", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private static DetailAST findClassOrMethodInWhichItIsDefined(DetailAST ast)", "signatureAfterChange": "     private static DetailAST findClassOrConstructorOrMethodInWhichItIsDefined(DetailAST ast)", "diff": ["-    private static DetailAST findClassOrMethodInWhichItIsDefined(DetailAST ast) {", "+    private static DetailAST findClassOrConstructorOrMethodInWhichItIsDefined(DetailAST ast) {", "-                || astTraverse.getType() == TokenTypes.CLASS_DEF)) {", "+                || astTraverse.getType() == TokenTypes.CLASS_DEF", "+                || astTraverse.getType() == TokenTypes.CTOR_DEF)) {"]}]}