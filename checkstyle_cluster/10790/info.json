{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c80d7e3138986638c6f097c441f24646", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dd549855a70fff0071cf06db038ab01", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "204c073294cdca6756bcd546d6af85a797ad7d79", "commitAfterChange": "6784e5bcd5baa6b5086bf8b63709856d685a74c8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if ((ast.getType() == TokenTypes.VARIABLE_DEF)", "-            || (ast.getType() == TokenTypes.PARAMETER_DEF))", "-        {", "-            processVariable(ast);", "-            return;", "-        }", "+        final int type = ast.getType();", "+        switch (type) {", "+            case TokenTypes.VARIABLE_DEF:", "+            case TokenTypes.PARAMETER_DEF:", "+                processVariable(ast);", "+                break;", "+            default:", "+                visitOtherTokens(ast, type);", "+        }", "+    }", "-                new FieldFrame(currentFrame, isStaticInnerType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c52c0c6c19f52d05e43278a598baee88", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/HideUtilityClassConstructorCheck.java", "commitBeforeChange": "3a7ab7d24d0b865fd95a8c72ce7e765a801ea555", "commitAfterChange": "7874cc4909f6e5104f42060528b9069669993533", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-", "-        final DetailAST objBlock = ast.findFirstToken(TokenTypes.OBJBLOCK);", "-        DetailAST child = objBlock.getFirstChild();", "-        boolean hasMethodOrField = false;", "-        boolean hasNonStaticMethodOrField = false;", "-        boolean hasNonPrivateStaticMethodOrField = false;", "-        boolean hasDefaultCtor = true;", "-        boolean hasPublicCtor = false;", "-        while (child != null) {", "-            final int type = child.getType();", "-            if (type == TokenTypes.METHOD_DEF", "-                    || type == TokenTypes.VARIABLE_DEF) {", "-                hasMethodOrField = true;", "-                final DetailAST modifiers =", "-                    child.findFirstToken(TokenTypes.MODIFIERS);", "-                final boolean isStatic =", "-                    modifiers.branchContains(TokenTypes.LITERAL_STATIC);", "-                final boolean isPrivate =", "-                    modifiers.branchContains(TokenTypes.LITERAL_PRIVATE);", "+        final Details details = new Details(ast);", "+        details.invoke();", "-                if (!isStatic && !isPrivate) {", "-                    hasNonStaticMethodOrField = true;", "-                }", "-                if (isStatic && !isPrivate) {", "-                    hasNonPrivateStaticMethodOrField = true;", "-                }", "-            }", "-            if (type == TokenTypes.CTOR_DEF) {", "-                hasDefaultCtor = false;", "-                final DetailAST modifiers =", "-                    child.findFirstToken(TokenTypes.MODIFIERS);", "-                if (!modifiers.branchContains(TokenTypes.LITERAL_PRIVATE)", "-                    && !modifiers.branchContains(TokenTypes.LITERAL_PROTECTED)) {", "-                    // treat package visible as public", "-                    // for the purpose of this Check", "-                    hasPublicCtor = true;", "-                }", "-", "-            }", "-            child = child.getNextSibling();", "-        }", "+        final boolean hasDefaultCtor = details.isHasDefaultCtor();", "+        final boolean hasPublicCtor = details.isHasPublicCtor();", "+        final boolean hasMethodOrField = details.isHasMethodOrField();", "+        final boolean hasNonStaticMethodOrField = details.isHasNonStaticMethodOrField();", "+        final boolean hasNonPrivateStaticMethodOrField =", "+                details.isHasNonPrivateStaticMethodOrField();"]}]}