{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "925a285a490851bfedab2a87282a12be", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02338a415b543bee1556eee2aae8f66f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "6e96026ec6d95fc5eadd3044cab91c24c73c8e0c", "commitAfterChange": "e00c478dd61d9d883e41b500b780ab217582c2e7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public int process(List<File> aFiles)", "signatureAfterChange": "     public int process(List<File> aFiles)", "diff": ["-        for (FileSetCheck fsc : mFileSetChecks) {", "+        for (final FileSetCheck fsc : mFileSetChecks) {", "-        for (File f : aFiles) {", "+        for (final File f : aFiles) {", "-                for (FileSetCheck fsc : mFileSetChecks) {", "+                for (final FileSetCheck fsc : mFileSetChecks) {", "-        for (FileSetCheck fsc : mFileSetChecks) {", "+        for (final FileSetCheck fsc : mFileSetChecks) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29aac8bb2d72d5b4ceefc698203b3783", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessageTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testBundleReloadUrlNotNullStreamNull() throws IOException", "signatureAfterChange": "      @Test     public void testBundleReloadUrlNotNullStreamNull() throws IOException", "diff": ["-        ClassLoader classloader = mock(ClassLoader.class);", "-        String resource = \"com/puppycrawl/tools/checkstyle/checks/coding/messages_en.properties\";", "+        final ClassLoader classloader = mock(ClassLoader.class);", "+        final String resource =", "+            \"com/puppycrawl/tools/checkstyle/checks/coding/messages_en.properties\";", "-        URL url = getMockUrl(null);", "+        final URL url = getMockUrl(null);", "-        LocalizedMessage.UTF8Control control = new LocalizedMessage.UTF8Control();", "+        final LocalizedMessage.UTF8Control control = new LocalizedMessage.UTF8Control();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de0bd4b268fe21b514772862f11edf2b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule332nolinewrap/NoLineWrapTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void goodLineLength() throws Exception", "signatureAfterChange": "      @Test     public void goodLineLength() throws Exception", "diff": ["-        int maxLineLength = 100;", "+        final int maxLineLength = 100;", "-        Configuration checkConfig = builder.getCheckConfig(\"LineLength\");", "-        String filePath = builder.getFilePath(\"LineLengthInput2\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"LineLength\");", "+        final String filePath = builder.getFilePath(\"LineLengthInput2\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}]}