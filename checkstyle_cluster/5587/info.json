{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c600bf3c700e39f8067f44352de978b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07c1d98802dec42cd10251c28cfe6a00", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                log(nextGroup, \"fall.through\");", "+                log(nextGroup, MSG_FALL_THROUGH);", "-                log(ast, \"fall.through.last\");", "+                log(ast, MSG_FALL_THROUGH_LAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10cdd13fec85f6c2df9a1a5ea762d367", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleVariableDeclarationsCheck.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                    log(firstNode, \"multiple.variable.declarations.comma\");", "+                    log(firstNode, MSG_MULTIPLE_COMMA);", "-                log(firstNode, \"multiple.variable.declarations\");", "+                log(firstNode, MSG_MULTIPLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18add6e1d3902ae721529e1b58590f33", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Override     public void visitToken(final DetailAST aAST)", "signatureAfterChange": "     @Override     public void visitToken(final DetailAST aAST)", "diff": ["-            this.log(aAST.getLineNo(), \"tag.not.valid.on\",", "+            this.log(aAST.getLineNo(), MSG_KEY_TAG_NOT_VALID_ON,", "-            this.log(aAST.getLineNo(), \"annotation.missing.override\");", "+            this.log(aAST.getLineNo(), MSG_KEY_ANNOTATION_MISSING_OVERRIDE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22f797331a405fa667a9342b9c677f7b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java", "commitBeforeChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "commitAfterChange": "26513d52336c42432ee21565b253297ba4174530", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public static String getTokenName(int iD)", "signatureAfterChange": "     public static String getTokenName(int iD)", "diff": ["-            throw new IllegalArgumentException(\"Unknown javdoc token id. Given id: \" + iD);", "+            throw new IllegalArgumentException(UNKNOWN_JAVADOC_TOKEN_ID_EXCEPTION_MESSAGE + iD);", "-            throw new IllegalArgumentException(\"Unknown javdoc token id. Given id: \" + iD);", "+            throw new IllegalArgumentException(UNKNOWN_JAVADOC_TOKEN_ID_EXCEPTION_MESSAGE + iD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3598ada2bb3569ee9af4d44516ee0655", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java", "commitBeforeChange": "27149f3504a2f350b74f456a9bffbae76a460060", "commitAfterChange": "5ede09997c283b4c418f0f540848e006be04fa87", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-                log(0, \"noNewlineAtEOF\", file.getPath());", "+                log(0, MSG_KEY_NO_NEWLINE_EOF, file.getPath());", "-            log(0, \"unable.open\", file.getPath());", "+            log(0, MSG_KEY_UNABLE_OPEN, file.getPath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ce0354c3bbcec765987f76c74a095f3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java", "commitBeforeChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "commitAfterChange": "5d698f4a58b66958b13cb04735fefa3f4fa4b9e7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-            log(1, \"header.missing\");", "+            log(1, MSG_MISSING);", "-                    log(i + 1, \"header.mismatch\", getHeaderLines().get(i));", "+                    log(i + 1, MSG_MISMATCH, getHeaderLines().get(i));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ea579fcffd879844473f30a926693d5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(final DetailAST methodCall)", "signatureAfterChange": "      @Override     public void visitToken(final DetailAST methodCall)", "diff": ["-                \"equals.avoid.null\");", "+                MSG_EQUALS_AVOID_NULL);", "-                \"equalsIgnoreCase.avoid.null\");", "+                MSG_EQUALS_IGNORE_CASE_AVOID_NULL);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68f213cebbf354a70dc55da329811601", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "commitAfterChange": "26513d52336c42432ee21565b253297ba4174530", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void logWarningMessage(DetailAST currentNode, int currentIndent)", "signatureAfterChange": "     private void logWarningMessage(DetailAST currentNode, int currentIndent)", "diff": ["-                        \"indentation.error\", currentNode.getText(),", "+                        MSG_INDENTATION_ERROR, currentNode.getText(),", "-                        \"indentation.error\", currentNode.getText(),", "+                        MSG_INDENTATION_ERROR, currentNode.getText(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bd275645c82279ef9d5472442e08162", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForInitializerPadCheck.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                    log(semi.getLineNo(), before, \"ws.preceded\", \";\");", "+                    log(semi.getLineNo(), before, MSG_PRECEDED, \";\");", "-                    log(semi.getLineNo(), before, \"ws.notPreceded\", \";\");", "+                    log(semi.getLineNo(), before, MSG_NOT_PRECEDED, \";\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c1cc54d47d0ecbdeaff78057fc0bfeb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void logCommaViolation(final DetailAST aAST)", "signatureAfterChange": "     private void logCommaViolation(final DetailAST aAST)", "diff": ["-                rCurly.getColumnNo(), \"annotation.trailing.comma.missing\");", "+                rCurly.getColumnNo(), MSG_KEY_ANNOTATION_TRAILING_COMMA_MISSING);", "-                comma.getColumnNo(), \"annotation.trailing.comma.present\");", "+                comma.getColumnNo(), MSG_KEY_ANNOTATION_TRAILING_COMMA_PRESENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8008571486189bbc28fe5fcfd70f8422", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static Configuration loadConfiguration(InputSource configSource,         PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(InputSource configSource,         PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "diff": ["-            throw new CheckstyleException(\"unable to parse configuration stream\"", "+            throw new CheckstyleException(UNABLE_TO_PARSE_EXCEPTION_PREFIX", "-            throw new CheckstyleException(\"unable to parse configuration stream\", e);", "+            throw new CheckstyleException(UNABLE_TO_PARSE_EXCEPTION_PREFIX, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87536ba1fd34f052e1286724a847b0bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static Configuration loadConfiguration(String config,         PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(String config,         PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "diff": ["-                        throw new CheckstyleException(\"unable to find \" + config);", "+                        throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + config);", "-                    throw new CheckstyleException(\"unable to find \" + config, e);", "+                    throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + config, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89f3802d1bb814f8b4b6a7e18954731c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheck.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-                    log(lineNum, tabPosition + 1, \"containsTab\");", "+                    log(lineNum, tabPosition + 1, CONTAINS_TAB);", "-                    log(lineNum, tabPosition + 1, \"file.containsTab\");", "+                    log(lineNum, tabPosition + 1, FILE_CONTAINS_TAB);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a62666adeb04264ed1007d1a75ca8bf9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "commitBeforeChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "commitAfterChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void visitClassDef(DetailAST ast)", "signatureAfterChange": "     private void visitClassDef(DetailAST ast)", "diff": ["-                    \"illegal.abstract.class.name\", className, getFormat());", "+                    ILLEGAL_ABSTRACT_CLASS_NAME, className, getFormat());", "-                \"no.abstract.class.modifier\", className);", "+                NO_ABSTRACT_CLASS_MODIFIER, className);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af4e7b03b153b3754cd48845808786b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "commitAfterChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void logChildError(int line,                                int actualLevel,                                IndentLevel expectedLevel)", "signatureAfterChange": "     private void logChildError(int line,                                int actualLevel,                                IndentLevel expectedLevel)", "diff": ["-        String messageKey = \"indentation.child.error\";", "+        String messageKey = MSG_CHILD_ERROR;", "-            messageKey = \"indentation.child.error.multi\";", "+            messageKey = MSG_CHILD_ERROR_MULTI;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b37cdf9dca16ba18055e893e1df0a529", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "commitAfterChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected final void logError(DetailAST ast, String subtypeName,                                   int actualLevel, IndentLevel expectedLevel)", "signatureAfterChange": "     protected final void logError(DetailAST ast, String subtypeName,                                   int actualLevel, IndentLevel expectedLevel)", "diff": ["-        String messageKey = \"indentation.error\";", "+        String messageKey = MSG_ERROR;", "-            messageKey = \"indentation.error.multi\";", "+            messageKey = MSG_ERROR_MULTI;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b381af5e5a823c55864d36890d0a67cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void checkParagraphTag(DetailNode tag)", "signatureAfterChange": "     private void checkParagraphTag(DetailNode tag)", "diff": ["-            log(tag.getLineNumber(), \"javadoc.paragraph.redundant.paragraph\");", "+            log(tag.getLineNumber(), MSG_REDUNDANT_PARAGRAPH);", "-            log(tag.getLineNumber(), \"javadoc.paragraph.line.before\");", "+            log(tag.getLineNumber(), MSG_LINE_BEFORE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3a338a94ae3f693dac433f3b7d198dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheck.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-                        \"block.noStmt\",", "+                            MSG_KEY_BLOCK_NO_STMT,", "-                    \"block.empty\",", "+                        MSG_KEY_BLOCK_EMPTY,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b749bd2a8d9f66eacd67cae760c0a63f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-                log(0, \"javadoc.legacyPackageHtml\");", "+                log(0, MSG_LEGACY_PACKAGE_HTML);", "-            log(0, \"javadoc.packageInfo\");", "+            log(0, MSG_PACKAGE_INFO);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8a2f11b7572cf3a66f6d42e11fadbd6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "commitAfterChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-                            log(importObject.getLineNumber(), \"custom.import.order.line.separator\",", "+                            log(importObject.getLineNumber(), MSG_LINE_SEPARATOR,", "-                log(importObject.getLineNumber(), \"custom.import.order.lex\", fullImportIdent);", "+                log(importObject.getLineNumber(), MSG_LEX, fullImportIdent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4f4d718f3b2b68dac83fadf54a1ec0a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitJavadocToken(DetailNode ast)", "signatureAfterChange": "      @Override     public void visitJavadocToken(DetailNode ast)", "diff": ["-            log(ast.getLineNumber(), \"summary.first.sentence\");", "+            log(ast.getLineNumber(), SUMMARY_FIRST_SENTENCE);", "-                log(ast.getLineNumber(), \"summary.javaDoc\");", "+                log(ast.getLineNumber(), SUMMARY_JAVADOC);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d14a99dafed063678dc3eaa9789ebd2e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheck.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void checkAnnotations(DetailAST aModifierNode, int aCorrectLevel)", "signatureAfterChange": "     private void checkAnnotations(DetailAST aModifierNode, int aCorrectLevel)", "diff": ["-                    \"annotation.location.alone\", getAnnotationName(annotation));", "+                        MSG_KEY_ANNOTATION_LOCATION_ALONE, getAnnotationName(annotation));", "-                log(annotation.getLineNo(), \"annotation.location\",", "+                log(annotation.getLineNo(), MSG_KEY_ANNOTATION_LOCATION,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d60001bb945e4bcebc86068fddc52513", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "commitAfterChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void logWrongImportGroupOrder(int currentImportLine, String importGroup)", "signatureAfterChange": "     private void logWrongImportGroupOrder(int currentImportLine, String importGroup)", "diff": ["-            log(currentImportLine, \"custom.import.order.nongroup.import\");", "+            log(currentImportLine, MSG_NONGROUP_IMPORT);", "-            log(currentImportLine, \"custom.import.order\", importGroup);", "+            log(currentImportLine, MSG_ORDER, importGroup);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d645a8165ab815f584fd98cffb1b5196", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DefaultLogger(OutputStream infoStream,                          boolean closeInfoAfterUse,                          OutputStream errorStream,                          boolean closeErrorAfterUse) throws UnsupportedEncodingException", "signatureAfterChange": "     public DefaultLogger(OutputStream infoStream,                          boolean closeInfoAfterUse,                          OutputStream errorStream,                          boolean closeErrorAfterUse) throws UnsupportedEncodingException", "diff": ["-        final Writer infoStreamWriter = new OutputStreamWriter(infoStream, \"UTF-8\");", "-        final Writer errorStreamWriter = new OutputStreamWriter(errorStream, \"UTF-8\");", "+        final Writer infoStreamWriter = new OutputStreamWriter(infoStream, UTF8_CHARSET_NAME);", "+        final Writer errorStreamWriter = new OutputStreamWriter(errorStream, UTF8_CHARSET_NAME);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e699d485dd222596f5ea6453fa0ad6fb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            log(lineNo, colNo, \"line.new\", text);", "+            log(lineNo, colNo, LINE_NEW, text);", "-            log(lineNo, colNo, \"line.previous\", text);", "+            log(lineNo, colNo, LINE_PREVIOUS, text);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e83f8a435a0e95592ea00916b74cd537", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java", "commitBeforeChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "commitAfterChange": "0b98c0389e2cf745cb125a89dece57538fc672b7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                            \"annotation.order\",", "+                            MSG_ANNOTATION_ORDER,", "-                            \"mod.order\", error.getText());", "+                            MSG_MODIFIER_ORDER, error.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8d9fb04a12c7b135f37371866ed40d8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     private void checkReturnTag(List<JavadocTag> tags, int lineNo,         boolean reportExpectedTags)", "signatureAfterChange": "     private void checkReturnTag(List<JavadocTag> tags, int lineNo,         boolean reportExpectedTags)", "diff": ["-                        \"javadoc.duplicateTag\",", "+                        MSG_DUPLICATE_TAG,", "-            log(lineNo, \"javadoc.return.expected\");", "+            log(lineNo, MSG_RETURN_EXPECTED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb57db300f4ca566d0a53206059a3d94", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void checkCheckClosingParens(final DetailAST aAST)", "signatureAfterChange": "     private void checkCheckClosingParens(final DetailAST aAST)", "diff": ["-            this.log(aAST.getLineNo(), \"annotation.parens.missing\");", "+            this.log(aAST.getLineNo(), MSG_KEY_ANNOTATION_PARENS_MISSING);", "-            this.log(aAST.getLineNo(), \"annotation.parens.present\");", "+            this.log(aAST.getLineNo(), MSG_KEY_ANNOTATION_PARENS_PRESENT);"]}]}