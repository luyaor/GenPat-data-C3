{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bdc4a6d1b4d3daae7db84cdb228507cf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13f8c12de66d0a07dfc619cd3909a832", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "      @Test     public void dollarInLink()         throws IOException", "signatureAfterChange": "      @Test     public void dollarInLink()         throws IOException", "diff": ["-        String filename = getDocPath(\"InputDollarInLink.txt\");", "-        ParseTree generatedTree = parseJavadoc(getFileContent(new File(filename)));", "-        ParseTree expectedTree = ParseTreeBuilder.treeDollarInLink();", "+        final String filename = getDocPath(\"InputDollarInLink.txt\");", "+        final ParseTree generatedTree = parseJavadoc(getFileContent(new File(filename)));", "+        final ParseTree expectedTree = ParseTreeBuilder.treeDollarInLink();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81ca4c1d6c99ee726dbf283c4d40ac3d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/CommonUtilsTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testFileExtensions()", "signatureAfterChange": "      @Test     public void testFileExtensions()", "diff": ["-        File pdfFile = new File(\"file.pdf\");", "+        final File pdfFile = new File(\"file.pdf\");", "-        File javaFile = new File(\"file.java\");", "+        final File javaFile = new File(\"file.java\");", "-        File emptyExtensionFile = new File(\"file.\");", "+        final File emptyExtensionFile = new File(\"file.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97f88356eacc6677c5f2fae9f1f5ada0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/AnnotationUtilityTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testContainsAnnotationTrue() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testContainsAnnotationTrue() throws ReflectiveOperationException", "diff": ["-        DetailAST ast = new DetailAST();", "+        final DetailAST ast = new DetailAST();", "-        DetailAST ast2 = new DetailAST();", "+        final DetailAST ast2 = new DetailAST();", "-        DetailAST ast3 = new DetailAST();", "+        final DetailAST ast3 = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a118acc7ccf8cb444ff6b305d4e047cf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      @Test     public void negativeNumberInAttribute()         throws IOException", "signatureAfterChange": "      @Test     public void negativeNumberInAttribute()         throws IOException", "diff": ["-        String filename = getHtmlPath(\"InputNegativeNumberInAttribute.txt\");", "-        ParseTree generatedTree = parseJavadoc(getFileContent(new File(filename)));", "-        ParseTree expectedTree = ParseTreeBuilder.treeNegativeNumberInAttribute();", "+        final String filename = getHtmlPath(\"InputNegativeNumberInAttribute.txt\");", "+        final ParseTree generatedTree = parseJavadoc(getFileContent(new File(filename)));", "+        final ParseTree expectedTree = ParseTreeBuilder.treeNegativeNumberInAttribute();"]}]}