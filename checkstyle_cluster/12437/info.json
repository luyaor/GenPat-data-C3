{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "28a5d34fbc2b0771210a51e72f13ca3a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d2db1a2284651183460932c6ec9a250", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java", "commitBeforeChange": "ed89c9edb524243b0df61e83a5ac0930f070e6d7", "commitAfterChange": "afa74495ee4a6dce6f4ba97f7fb2842a99faa7db", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test(expected = CheckstyleException.class)     public void testWrongFormatURI() throws Exception", "signatureAfterChange": "      @Test     public void testUrlIncorrectUrl() throws Exception", "diff": ["-    @Test(expected = CheckstyleException.class)", "-    public void testWrongFormatURI() throws Exception {", "-        checkConfig.addAttribute(\"file\",", "-                \"aaa://src\");", "-        final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;", "+", "+    @Test", "+    public void testUrlIncorrectUrl() throws Exception {", "+        final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);", "+        checkConfig.addAttribute(\"url\", \"https://{WrongCharsInURL}\");", "+        final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;", "+", "+        try {", "+            verify(checkConfig, getPath(\"imports\" + File.separator", "+                    + \"InputImportControl.java\"), expected);", "+            fail(\"Test should fail if exception was not thrown\");", "+        }", "+        catch (final CheckstyleException ex) {", "+            final String message = ((InvocationTargetException) ex.getCause().getCause())", "+                    .getTargetException().getMessage();", "+            assertTrue(message.startsWith(\"Syntax error in url \"));", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaafce838af684046b16d99083253d1e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/digester/com/puppycrawl/tools/checkstyle/DigesterLoaderTest.java", "commitBeforeChange": "b2217341ecb6ae71c6f36fa22789e6e6e78d383d", "commitAfterChange": "4bcc70534f6cfef49a52e4a6d7aadee7b9bd0044", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main(String[] args)", "signatureAfterChange": "     public static void main(String[] args)", "diff": ["+        //test rules with elements named by shortened class name", "-            System.out.println(config.toString());", "+            System.out.println(config);", "+        ", "+        //test rules with config elements", "+        try {", "+            final String inputFname = \"src/digester/checkstyle_checksB.xml\";", "+            final String rulesFname = \"src/digester/checkstyle_rulesB.xml\";", "+            final Configuration config =", "+                ConfigurationDigesterLoader.loadConfiguration(", "+                    rulesFname, inputFname, null);", "+            System.out.println(config);", "+", "+        }", "+        catch (Exception exc) {", "+            exc.printStackTrace();", "+        }", "+"]}]}