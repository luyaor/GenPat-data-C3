{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9cc596b9abb0e4798e6ed6996fd7421b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10c8a3c1797ac3ad7cc718776600829c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckConfiguration.java", "commitBeforeChange": "1efd41aa924264e0899f5819e1b30a55d715f98b", "commitAfterChange": "e20d45697c937fbb8ae3eb3b43bffb43e211237f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     Check createInstance(ClassLoader aLoader)         throws ClassNotFoundException, InstantiationException,         IllegalAccessException, InvocationTargetException,         NoSuchMethodException", "signatureAfterChange": "     Check createInstance(ClassLoader aLoader)         throws ClassNotFoundException, InstantiationException,         IllegalAccessException, InvocationTargetException,         NoSuchMethodException", "diff": ["-            PropertyUtils.setSimpleProperty(check, key, value);", "+            BeanUtils.copyProperty(check, key, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "425f2e50e1cffe20ce93bd3bc95d2d87", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "ec414646eaf9ceb7de4b6e75b6c11d446cd0971f", "commitAfterChange": "90178ab2e4bfac216cf861188006818ebce10293", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private static boolean isSameVariables(DetailAST ast1, DetailAST ast2)", "signatureAfterChange": "     private static boolean isSameVariables(DetailAST ast1, DetailAST ast2)", "diff": ["-            findClassOrMethodInWhichItIsDefined(ast1);", "+            findClassOrConstructorOrMethodInWhichItIsDefined(ast1);", "-            findClassOrMethodInWhichItIsDefined(ast2);", "+            findClassOrConstructorOrMethodInWhichItIsDefined(ast2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5315c5936f1fa2a96fd362fe9ca73506", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "c2d3932843e70e4bb5df7161800aca248f9af778", "commitAfterChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static String hexEncode(byte[] aByteArray)", "signatureAfterChange": "     private static String hexEncode(byte[] aByteArray)", "diff": ["-            buf.append(sHexChars[high]);", "-            buf.append(sHexChars[low]);", "+            buf.append(HEX_CHARS[high]);", "+            buf.append(HEX_CHARS[low]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c542a1130f867e8b5473de980ef361e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "dc0a1a2fccdf6a642b05dee98206c7dd487162bd", "commitAfterChange": "859c809b0562032ab6a24956d20a28e1ff6431dc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ParseTreeInfoPanel()", "signatureAfterChange": "     public ParseTreeInfoPanel()", "diff": ["-        add(sp, BorderLayout.NORTH);", "+        add(sp, BorderLayout.PAGE_START);", "-        add(p, BorderLayout.SOUTH);", "+        add(p, BorderLayout.PAGE_END);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7787954441797ca0b6d1fdd42d7288a5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "1ce6badd8f1852081fee56fd6184ecfe8c128c69", "commitAfterChange": "30438ebdf9fd28a94613e2aaecde776d906349a7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                        && isOnlyUnicodeValidChars(literal, sUnicodeControl)", "+                        && isOnlyUnicodeValidChars(literal, UNICODE_CONTROL)", "-                        && isOnlyUnicodeValidChars(literal, sNonPrintableChars))) {", "+                        && isOnlyUnicodeValidChars(literal, NON_PRINTABLE_CHARS))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a80523ffc0f834dfe2d6b2ae1e857dc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/JUnitTestCaseCheck.java", "commitBeforeChange": "05526332666bc5142f8cf29a941435527c20fb9c", "commitAfterChange": "fa51f3e5724119e4bf1f1b649d1f618211fe6394", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void checkSetUpTearDownMethod(DetailAST aAST, String aActualName,                                           String aExpectedName)", "signatureAfterChange": "     private void checkSetUpTearDownMethod(DetailAST aAST, String aActualName,                                           String aExpectedName)", "diff": ["-        checkReturnValue(aAST, TEAR_DOWN_METHOD_NAME);", "-        checkParameters(aAST, TEAR_DOWN_METHOD_NAME);", "+        checkReturnValue(aAST, aActualName);", "+        checkParameters(aAST, aActualName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c0a44a388c6146911e8d8006c59cd66", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private PkgControl getRoot()", "signatureAfterChange": "     private PkgControl getRoot()", "diff": ["-        assert mStack.size() == 1;", "-        return mStack.peek();", "+        assert stack.size() == 1;", "+        return stack.peek();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f259230bef2477dde66d721feb521df", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheck.java", "commitBeforeChange": "28a4f2fe029422414814eeb6858f0b9c0cef7039", "commitAfterChange": "40f4c37a21b1c8444f39f12c5f92e79af10be34f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void fillSortedRelevantChecksums()", "signatureAfterChange": "     private void fillSortedRelevantChecksums()", "diff": ["-        for (int i = 0; i < mLineChecksums.length; i++) {", "+        for (int i = 0; i < mLineBlockChecksums.length; i++) {", "-            final long[] checksums = mLineChecksums[i];", "+            final long[] checksums = mLineBlockChecksums[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7d7bd613c8f96d71c16eb4b5a9565fc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void finishProcessing()", "signatureAfterChange": "      @Override     public void finishProcessing()", "diff": ["-            arrangePropertyFiles(mPropertyFiles, mBasenameSeparator);", "+            arrangePropertyFiles(propertyFiles, basenameSeparator);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe6f508f3dd1d7a13351fe00cd4b79a6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "4f9debc29b039e7a7e408aa24fb13b6fe71debce", "commitAfterChange": "c4c966c9712ae2c9ce8f2f215598477d4b59586f", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public static DetailAST parse(FileContents aContents)         throws TokenStreamException, RecognitionException", "signatureAfterChange": "     public static DetailAST parse(FileContents aContents)         throws TokenStreamException, RecognitionException", "diff": ["-            jl.setFileContents(aContents);", "+            jl.setCommentListener(aContents);", "-            jl.setFileContents(aContents);", "+            jl.setCommentListener(aContents);"]}]}