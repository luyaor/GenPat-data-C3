{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6b53451cd4b7d96231bb7b41af3af540", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52b9107e1e03980ae3fb35ea8dd295b0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/VerifierImpl.java", "commitBeforeChange": "bd7cfcb3e58603a5115829d5677267d71e75a731", "commitAfterChange": "1c35230164ef3745a246bb2d8a3f6fb116916221", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void verifyMethodJavadoc(MyModifierSet aMods,                                     MyCommonAST aReturnType,                                     MethodSignature aSig)", "signatureAfterChange": "     public void verifyMethodJavadoc(MyModifierSet aMods,                                     MyCommonAST aReturnType,                                     MethodSignature aSig)", "diff": ["+        // Always verify the parameters are ok", "+        for (Iterator it = aSig.getParams().iterator(); it.hasNext();) {", "+            verifyParameter((LineText)it.next());", "+        }", "+", "+", "+        // now check the javadoc", "-            : !\"void\".equals(aReturnType.getFirstChild().getText());", "+            : !\"void\".equals(aReturnType.getText().trim());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0b23d5713e461365ca03e608b3c3b7d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "contrib/bcel/src/checkstyle/com/puppycrawl/tools/checkstyle/bcel/VisitorSet.java", "commitBeforeChange": "65603924fdf47c194fc2ef9e0bc60bfc81ee4166", "commitAfterChange": "2707ab4393bd5a585f1f794c43515b8a1b900078", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitCode(Code aCode)", "signatureAfterChange": "     public void visitCode(Code aCode)", "diff": ["-    {", "+    {   ", "+        for (Iterator iter = mVisitors.iterator(); iter.hasNext();) {", "+            IDeepVisitor visitor = (IDeepVisitor) iter.next();", "+            Visitor v = visitor.getClassFileVisitor();", "+            aCode.accept(v);", "+        }", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddd14118f98e0355b300bb12dcfcd389", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "12acba75f487de0313bb34e02a69081d5a592792", "commitAfterChange": "b3caa3b7ad0a135038c2c1c5bda4fccb897a00c4", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void destroy()", "signatureAfterChange": "     public void destroy()", "diff": ["-        super.destroy();", "+        for (Iterator it = mAllChecks.iterator(); it.hasNext();) {", "+            final Check c = (Check) it.next();", "+            c.destroy();", "+        }", "+        super.destroy();"]}]}