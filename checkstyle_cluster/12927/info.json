{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a3d16ae8df7d7f8d6cab23dfe82c1c9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19802be5beaffd3ede37c2c040cb13fd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/OperatorWrapTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void operatorWrapTest() throws Exception", "signatureAfterChange": "      @Test     public void operatorWrapTest() throws Exception", "diff": ["-        Class<OperatorWrapCheck> clazz = OperatorWrapCheck.class;", "-        String messageKey = \"line.new\";", "+        final Class<OperatorWrapCheck> clazz = OperatorWrapCheck.class;", "+        final String messageKey = \"line.new\";", "-        Configuration checkConfig = builder.getCheckConfig(\"OperatorWrap\");", "-        String filePath = builder.getFilePath(\"OperatorWrapInput\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"OperatorWrap\");", "+        final String filePath = builder.getFilePath(\"OperatorWrapInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbb00b347d039827490e339ac4ecda2f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/OperatorWrapTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void operatorWrapTestAssign() throws Exception", "signatureAfterChange": "      @Test     public void operatorWrapTestAssign() throws Exception", "diff": ["-        DefaultConfiguration newCheckConfig = createCheckConfig(OperatorWrapCheck.class);", "+        final DefaultConfiguration newCheckConfig = createCheckConfig(OperatorWrapCheck.class);", "-        String messageKey = \"line.previous\";", "-        Class<OperatorWrapCheck> clazz = OperatorWrapCheck.class;", "+        final String messageKey = \"line.previous\";", "+        final Class<OperatorWrapCheck> clazz = OperatorWrapCheck.class;", "-        String filePath = builder.getFilePath(\"OperatorWrapAssignInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final String filePath = builder.getFilePath(\"OperatorWrapAssignInput\");", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}]}