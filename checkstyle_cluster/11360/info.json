{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36a72bec7866793643821b18f7d49d47", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7394f6ef23c657ef4df114b51f97689d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/CSVFilterTest.java", "commitBeforeChange": "a9bfdceec2a2d86a622c03fbd4052f007b5e70cc", "commitAfterChange": "1e7d8eef0641edcf97316618c8fab40bd248133d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          public void testDecideEmptyRange()", "signatureAfterChange": "          public void testDecideEmptyRange()", "diff": ["-        assertEquals(\"less than\", Filter.NEUTRAL, filter.decide(new Integer(-1)));", "-        assertEquals(\"equal 0\", Filter.NEUTRAL, filter.decide(new Integer(0)));", "-        assertEquals(\"equal 1\", Filter.NEUTRAL, filter.decide(new Integer(1)));", "-        assertEquals(\"equal 2\", Filter.NEUTRAL, filter.decide(new Integer(2)));", "-        assertEquals(\"greater than\", Filter.NEUTRAL, filter.decide(new Integer(3)));", "+        assertFalse(\"less than\", filter.accept(new Integer(-1)));", "+        assertFalse(\"equal 0\", filter.accept(new Integer(0)));", "+        assertFalse(\"equal 1\", filter.accept(new Integer(1)));", "+        assertFalse(\"equal 2\", filter.accept(new Integer(2)));", "+        assertFalse(\"greater than\", filter.accept(new Integer(3)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf83fcf52a2d33d37c398caef09dc5be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/IntRangeFilterTest.java", "commitBeforeChange": "a9bfdceec2a2d86a622c03fbd4052f007b5e70cc", "commitAfterChange": "1e7d8eef0641edcf97316618c8fab40bd248133d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testDecideEmpty()", "signatureAfterChange": "      public void testDecideEmpty()", "diff": ["-        assertEquals(\"out\", Filter.NEUTRAL, filter.decide(new Integer(-1)));", "-        assertEquals(\"out\", Filter.NEUTRAL, filter.decide(new Integer(0)));", "-        assertEquals(\"out\", Filter.NEUTRAL, filter.decide(new Integer(5)));", "-        assertEquals(\"out\", Filter.NEUTRAL, filter.decide(new Integer(10)));", "-        assertEquals(\"out\", Filter.NEUTRAL, filter.decide(new Integer(11)));", "+        assertFalse(\"out\", filter.accept(new Integer(-1)));", "+        assertFalse(\"out\", filter.accept(new Integer(0)));", "+        assertFalse(\"out\", filter.accept(new Integer(5)));", "+        assertFalse(\"out\", filter.accept(new Integer(10)));", "+        assertFalse(\"out\", filter.accept(new Integer(11)));"]}]}