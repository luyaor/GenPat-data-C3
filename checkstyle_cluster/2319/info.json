{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "313801879991f8adba1ec7db15e42f1e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0531d890bb92d1e8b02f2ea69bd6686a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/HeaderCheck.java", "commitBeforeChange": "ff2f5fe363c60cede0af7fc4eb2e2936a765b9be", "commitAfterChange": "2b36d7dec160fdd7f5a92366709ddc2d586ebef5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void beginTree()", "signatureAfterChange": "     public void beginTree()", "diff": ["-        if (mHeaderLines != null) {", "+        if (mHeaderLines == null) {", "+            log(1, \"Unable to check as missing lines to check.\");", "+            return;", "+        }", "-            final String[] lines = getLines();", "+        final String[] lines = getLines();", "-            if (mHeaderLines.length > lines.length) {", "-                log(1, \"header.missing\");", "-            }", "-            else {", "-                for (int i = 0; i < mHeaderLines.length; i++) {", "-                    // skip lines we are meant to ignore", "-                    if (isIgnoreLine(i + 1)) {", "-                        continue;", "-                    }", "+        if (mHeaderLines.length > lines.length) {", "+            log(1, \"header.missing\");", "+        }", "+        else {", "+            for (int i = 0; i < mHeaderLines.length; i++) {", "+                // skip lines we are meant to ignore", "+                if (isIgnoreLine(i + 1)) {", "+                    continue;", "+                }", "-                    if (!isMatch(i)) {", "-                        log(i + 1, \"header.mismatch\", mHeaderLines[i]);", "-                        break; // stop checking", "-                    }", "+                if (!isMatch(i)) {", "+                    log(i + 1, \"header.mismatch\", mHeaderLines[i]);", "+                    break; // stop checking"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a40511dae15945e2b9e89656af1abb80", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "e389849df6d5ee4ba99aba175fbb0f4d6ade40ee", "commitAfterChange": "7823165cce4d7978fe928d8ada0a4861c950ff0f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void checkHtml(final DetailAST aAST, final TextBlock aComment)", "signatureAfterChange": "     private void checkHtml(final DetailAST aAST, final TextBlock aComment)", "diff": ["-                htmlStack.push(tag);", "+                //We only push html tags that are allowed", "+                if (isAllowedTag(tag)) {", "+                    htmlStack.push(tag);", "+                }"]}]}