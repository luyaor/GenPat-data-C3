{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b34620820f237c0f57af091e82f7c97", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c92b09b8a2dc1423f502749eec1d5ee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ObjectBlockHandler.java", "commitBeforeChange": "9988d4d007b7d7b1417efc1e06de9309cb7c3e54", "commitAfterChange": "81d67e4777b4ea86c092a6be901d016f5dd6e1fe", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     protected void checkRCurly()", "signatureAfterChange": "      @Override     protected void checkRCurly()", "diff": ["-", "-    @Override", "-        final DetailAST lcurly = getLCurly();", "-        if (!level.accept(rcurlyPos)", "-            && (rcurlyMustStart() || startsLine(rcurly))", "-                && !areOnSameLine(rcurly, lcurly)) {", "+        if (!level.accept(rcurlyPos) && startsLine(rcurly)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10218d7e4a9e7830b4873272e07032b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "bd9efb5e66d8a99fb1bd616213e4966d088d6932", "commitAfterChange": "dba6c944cdbf9acfbb40b9a2d8e6315fb14d87f0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void processVariable(DetailAST ast)", "signatureAfterChange": "     private void processVariable(DetailAST ast)", "diff": ["-            if (isStaticOrInstanceField(ast, name)", "-                && !isMatchingRegexp(name)", "-                && !isIgnoredSetterParam(ast, name)", "-                && !isIgnoredConstructorParam(ast)", "-                && !isIgnoredParamOfAbstractMethod(ast)) {", "+            if ((isStaticFieldHiddenFromAnonymousClass(ast, name)", "+                        || isStaticOrInstanceField(ast, name))", "+                    && !isMatchingRegexp(name)", "+                    && !isIgnoredParam(ast, name)) {", "+    }"]}]}