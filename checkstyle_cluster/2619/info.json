{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b401ecb8c0ab97aeaa49df0161122ff", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6084b85638e6245688e71a89d8d14cda", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "78cec4f822cd966a1293ce0c743d4514517385dc", "commitAfterChange": "2cf54ade2182e29c413f23e2235a896247d7a2ad", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testLoadFromURL() throws Exception", "signatureAfterChange": "      @Test     public void testLoadFromURL() throws Exception", "diff": ["-        boolean online = isInternetReachable();", "+        final String[] urlCandidates = {", "+            \"http://checkstyle.sourceforge.net/files/suppressions_none.xml\",", "+            \"https://raw.githubusercontent.com/checkstyle/checkstyle/master/src/site/resources/files/suppressions_none.xml\",", "+        };", "+        FilterSet actualFilterSet = null;", "-        Assume.assumeTrue(online);", "+        for (String url : urlCandidates) {", "+            actualFilterSet = loadFilterSet(url);", "-        FilterSet fc = null;", "-", "-        int attemptCount = 0;", "-        final int attemptLimit = 5;", "-        while (attemptCount <= attemptLimit) {", "-            try {", "-", "-                fc = SuppressionsLoader", "-                        .loadSuppressions(\"http://checkstyle.sourceforge.net/files/suppressions_none.xml\");", "+            if (actualFilterSet != null) {", "-", "-            }", "-            catch (CheckstyleException ex) {", "-                // for some reason Travis CI failed some times(unstable) on reading this file", "-                if (attemptCount < attemptLimit", "-                        && ex.getMessage().contains(\"Unable to read\")) {", "-                    attemptCount++;", "-                    // wait for bad/disconnection time to pass", "-                    Thread.sleep(1000);", "-                }", "-                else {", "-                    throw ex;", "-                }", "-", "-        final FilterSet fc2 = new FilterSet();", "-        assertEquals(fc, fc2);", "+        // Use Assume.assumeNotNull(actualFilterSet) instead of the if-condition", "+        // when https://github.com/jayway/powermock/issues/428 will be fixed", "+        if (actualFilterSet != null) {", "+            final FilterSet expectedFilterSet = new FilterSet();", "+            assertEquals(expectedFilterSet, actualFilterSet);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73d16909dff77f8f51370dbb258d0c62", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "a25d3f86b30087d62c82f023b4f2630e734b673f", "commitAfterChange": "ec5630294a3cee09e34beb716dcda3f8f19ffb5a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testLoadFromURL() throws CheckstyleException, InterruptedException", "signatureAfterChange": "      @Test     public void testLoadFromURL()         throws CheckstyleException, InterruptedException", "diff": ["-    public void testLoadFromURL() throws CheckstyleException, InterruptedException", "+    public void testLoadFromURL()", "+        throws CheckstyleException, InterruptedException", "-    \tFilterSet fc = null;", "-    \t", "-    \tint attemptCount = 0;", "-    \twhile (attemptCount < 5)", "-    \ttry{", "-    \t\t", "-    \t\tfc = SuppressionsLoader.loadSuppressions(\"http://checkstyle.sourceforge.net/files/suppressions_none.xml\");", "-    \t\tbreak;", "-    \t\t", "-    \t} catch (CheckstyleException ex) {", "-    \t\t// for some reason Travis CI failed some times(unstable) on reading this file", "-    \t\tif (ex.getMessage().contains(\"unable to read\")) {", "-    \t\t\tattemptCount++;", "-    \t\t\t// wait for bad/disconnection time to pass", "-    \t\t\tThread.sleep(1000);", "-    \t\t} else {", "-    \t\t\tthrow ex;", "-    \t\t}", "-    \t}", "-    \t", "+        FilterSet fc = null;", "+", "+        int attemptCount = 0;", "+        final int attemptLimit = 5;", "+        while (attemptCount <= attemptLimit) {", "+            try {", "+", "+                fc = SuppressionsLoader", "+                        .loadSuppressions(\"http://checkstyle.sourceforge.net/files/suppressions_none.xml\");", "+                break;", "+", "+            }", "+            catch (CheckstyleException ex) {", "+                // for some reason Travis CI failed some times(unstable) on reading this file", "+                if (attemptCount < attemptLimit", "+                        && ex.getMessage().contains(\"unable to read\"))", "+                {", "+                    attemptCount++;", "+                    // wait for bad/disconnection time to pass", "+                    Thread.sleep(1000);", "+                }", "+                else {", "+                    throw ex;", "+                }", "+            }", "+        }", "+"]}]}