{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ee4283bcfb01683cc3f3a4e01420879", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c921d9b85f629c77d81c3ef65d40f8c4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "290ae38a14021785018fbfa7c2651200534a88ca", "commitAfterChange": "1dacd5303bfe94b9d5476059b6a5676146d96708", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-        catch (final RecognitionException re) {", "-            final String exceptionMsg = String.format(msg, \"RecognitionException\", fileName);", "-            Utils.getExceptionLogger().error(exceptionMsg);", "-            getMessageCollector().add(", "-                new LocalizedMessage(", "-                    re.getLine(),", "-                    re.getColumn(),", "-                    Defn.CHECKSTYLE_BUNDLE,", "-                    \"general.exception\",", "-                    new String[] {re.getMessage()},", "-                    getId(),", "-                    this.getClass(), null));", "-        }", "+            String message = \"TokenStreamRecognitionException occured\";", "-                getMessageCollector().add(", "-                    new LocalizedMessage(", "-                        re.getLine(),", "-                        re.getColumn(),", "-                        Defn.CHECKSTYLE_BUNDLE,", "-                        \"general.exception\",", "-                        new String[] {re.getMessage()},", "-                        getId(),", "-                        this.getClass(), null));", "+                message = re.getMessage();", "-            else {", "-                getMessageCollector().add(", "-                    new LocalizedMessage(", "-                        0,", "-                        Defn.CHECKSTYLE_BUNDLE,", "-                        \"general.exception\",", "-                        new String[]", "-                        {\"TokenStreamRecognitionException occured.\"},", "-                        getId(),", "-                        this.getClass(), null));", "-            }", "+            getMessageCollector().add(createLocalizedMessage(message));", "-        catch (final TokenStreamException te) {", "-            final String exceptionMsg = String.format(msg,", "-                    \"TokenStreamException\", fileName);", "+        // RecognitionException and any other (need to check if needed)", "+        catch (Throwable ex) {", "+            final String exceptionMsg = String.format(msg, ex.getClass().getSimpleName(), fileName);", "-            getMessageCollector().add(", "-                new LocalizedMessage(", "-                    0,", "-                    Defn.CHECKSTYLE_BUNDLE,", "-                    \"general.exception\",", "-                    new String[] {te.getMessage()},", "-                    getId(),", "-                    this.getClass(), null));", "-        }", "-        catch (final Throwable err) {", "-            final String exceptionMsg = String.format(msg, \"Exception\", fileName);", "-            Utils.getExceptionLogger().error(exceptionMsg);", "-            getMessageCollector().add(", "-                new LocalizedMessage(", "-                    0,", "-                    Defn.CHECKSTYLE_BUNDLE,", "-                    \"general.exception\",", "-                    new String[] {\"\" + err},", "-                    getId(),", "-                    this.getClass(), null));", "+            getMessageCollector().add(createLocalizedMessage(ex.getMessage()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb9370bf29346458f1805f6520f8b1ce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "54a09706ec1db32435b09e6b6910813325558f8d", "commitAfterChange": "abff1a2489ea8af10e1bc0a335551262d22f44e7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void process(File aFile)", "signatureAfterChange": "     public int process(File[] aFiles)", "diff": ["+        for (int i = 0; i < mFileSetChecks.size(); i++) {", "+            FileSetCheck fileSetCheck = (FileSetCheck) mFileSetChecks.get(i);", "+            fileSetCheck.process(aFiles);", "-     **/", "-    private void process(File aFile)", "-    {", "-        // check if already checked and passed the file", "-        final String fileName = aFile.getPath();", "-        final long timestamp = aFile.lastModified();", "-        if (mCache.alreadyChecked(fileName, timestamp)) {", "-            return;", "-        }", "-", "-        mMessages.reset();", "-        try {", "-            fireFileStarted(fileName);", "-            final String[] lines = Utils.getLines(fileName);", "-            final FileContents contents = new FileContents(fileName, lines);", "-            final DetailAST rootAST = TreeWalker.parse(contents);", "-            mWalker.walk(rootAST, contents, mConfig.getClassLoader());", "-        }", "-        catch (FileNotFoundException fnfe) {", "-            mMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE,", "-                                               \"general.fileNotFound\", null));", "-        }", "-        catch (IOException ioe) {", "-            mMessages.add(new LocalizedMessage(", "-                              0, Defn.CHECKSTYLE_BUNDLE,", "-                              \"general.exception\",", "-                              new String[] {ioe.getMessage()}));", "-        }", "-        catch (RecognitionException re) {", "-            mMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE,", "-                                               \"general.exception\",", "-                                               new String[] {re.getMessage()}));", "-        }", "-        catch (TokenStreamException te) {", "-            mMessages.add(new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE,", "-                                               \"general.exception\",", "-                                               new String[] {te.getMessage()}));", "-        }", "-", "-        if (mMessages.size() == 0) {", "-            mCache.checkedOk(fileName, timestamp);", "-        }", "-        else {", "-            fireErrors(fileName, mMessages.getMessages());", "-        }", "-", "-        fireFileFinished(fileName);", "-    }"]}]}