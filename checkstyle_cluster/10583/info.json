{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61c761ede9902601fa5f6cefe4d74624", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "266bcac4b40c1c1b2ca72c3a52dd8c4d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheck.java", "commitBeforeChange": "7c5092271d95f34b5ddcb160e85ea460daaadb5d", "commitAfterChange": "423ed9e469db620671459827b58c89025d8f6c66", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(final DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(final DetailAST ast)", "diff": ["-        if (token != null) {", "-            // case like '@SuppressWarnings(value = UNUSED)'", "-            warning = token.findFirstToken(TokenTypes.EXPR);", "+        if (token == null) {", "+            warning = warningHolder.findFirstToken(TokenTypes.EXPR);", "-            warning = warningHolder.findFirstToken(TokenTypes.EXPR);", "+            // case like '@SuppressWarnings(value = UNUSED)'", "+            warning = token.findFirstToken(TokenTypes.EXPR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4934adb0762ecc98d27336e4b3cbabb3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheck.java", "commitBeforeChange": "7c5092271d95f34b5ddcb160e85ea460daaadb5d", "commitAfterChange": "423ed9e469db620671459827b58c89025d8f6c66", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static DetailAST findWarningsHolder(final DetailAST annotation)", "signatureAfterChange": "     private static DetailAST findWarningsHolder(final DetailAST annotation)", "diff": ["-        if (annValuePair != null) {", "+        if (annValuePair == null) {", "-                annValuePair.findFirstToken(TokenTypes.ANNOTATION_ARRAY_INIT);", "+                    annotation.findFirstToken(TokenTypes.ANNOTATION_ARRAY_INIT);", "-                annotation.findFirstToken(TokenTypes.ANNOTATION_ARRAY_INIT);", "+                    annValuePair.findFirstToken(TokenTypes.ANNOTATION_ARRAY_INIT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4df022f595bfc99417f1f20194bc0eec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "commitBeforeChange": "7c5092271d95f34b5ddcb160e85ea460daaadb5d", "commitAfterChange": "423ed9e469db620671459827b58c89025d8f6c66", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private static DetailAST findExpressionBlockInForLoop(DetailAST literalFor)", "signatureAfterChange": "     private static DetailAST findExpressionBlockInForLoop(DetailAST literalFor)", "diff": ["-        if (forEachClause != null) {", "-            firstToken = forEachClause.findFirstToken(TokenTypes.EXPR);", "+        if (forEachClause == null) {", "+            firstToken = literalFor.findFirstToken(TokenTypes.EXPR);", "-            firstToken = literalFor.findFirstToken(TokenTypes.EXPR);", "+            firstToken = forEachClause.findFirstToken(TokenTypes.EXPR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73b0d9275cd148099077d7bcbcdd26e3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "commitBeforeChange": "423ed9e469db620671459827b58c89025d8f6c66", "commitAfterChange": "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static String getAnnotationName(DetailAST annotation)", "signatureAfterChange": "     private static String getAnnotationName(DetailAST annotation)", "diff": ["-        if (dotAst != null) {", "-            name = dotAst.findFirstToken(TokenTypes.IDENT).getText();", "+        if (dotAst == null) {", "+            name = annotation.findFirstToken(TokenTypes.IDENT).getText();", "-            name = annotation.findFirstToken(TokenTypes.IDENT).getText();", "+            name = dotAst.findFirstToken(TokenTypes.IDENT).getText();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a574981fd66e21074eb4195a757d09fd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java", "commitBeforeChange": "d15507116c3e38fbe553284a1266e5deb7a52aa3", "commitAfterChange": "22c396868005e7ecf77b09c52ab312d54f662235", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-                final DetailAST paramDef =", "-                    ast.findFirstToken(TokenTypes.VARIABLE_DEF);", "-                if (shouldCheckEnhancedForLoopVariable(paramDef)) {", "+                if (!skipEnhancedForLoopVariable) {", "+                    final DetailAST paramDef = ast.findFirstToken(TokenTypes.VARIABLE_DEF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aebb088e4d2f8112d8ce3da9afc794eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ConstantNameCheck.java", "commitBeforeChange": "4bbe4acd319fa60dac09d28aaa9f7b18f18dee1f", "commitAfterChange": "eecd476fa8c6dba62f919a5ff1740d108848c867", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-                    Utils.findFirstToken(aAST.getFirstChild(),", "-                                         TokenTypes.MODIFIERS);", "+                    aAST.findFirstToken(TokenTypes.MODIFIERS);", "-                Utils.findFirstToken(aAST.getFirstChild(), TokenTypes.IDENT);", "+                aAST.findFirstToken(TokenTypes.IDENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b604755b236ba9a068d78193a01e1995", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "35de50c9405825eeb68357df2625b693d2748ed9", "commitAfterChange": "da6a8d083cb82a94707146de559911578f39affe", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void processTypeParams(DetailAST ast)", "signatureAfterChange": "     private void processTypeParams(DetailAST ast)", "diff": ["-                final DetailAST param = child;", "-                    param.findFirstToken(TokenTypes.IDENT).getText();", "+                    child.findFirstToken(TokenTypes.IDENT).getText();", "-                    param.findFirstToken(TokenTypes.TYPE_UPPER_BOUNDS);", "+                    child.findFirstToken(TokenTypes.TYPE_UPPER_BOUNDS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7997bbc12635ee0e7f6071019d30540", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheck.java", "commitBeforeChange": "4ea1896f464b0f6c0ddfca3d8d9c9f84703bae5e", "commitAfterChange": "eef13e8c5ee6922af938d9eef3d73799ce71798b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Override     public void visitToken(final DetailAST ast)", "signatureAfterChange": "     @Override     public void visitToken(final DetailAST ast)", "diff": ["-        DetailAST warning = warningHolder.findFirstToken(TokenTypes.EXPR);", "+        final DetailAST token = warningHolder.findFirstToken(TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR);", "+        DetailAST warning;", "+", "+        if (token != null) {", "+            // case like '@SuppressWarnings(value = UNUSED)'", "+            warning = token.findFirstToken(TokenTypes.EXPR);", "+        }", "+        else {", "+            warning = warningHolder.findFirstToken(TokenTypes.EXPR);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "feb563d9a74d8d74995c1e976a5970d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java", "commitBeforeChange": "52a0d103606992f9a3a43c3425fab88eae1ed150", "commitAfterChange": "d80e678fa0939d845583a3acc7501859254c5f2c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "       @Override     public void leaveToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-", "-                leaveForEach(ast);", "+                final DetailAST paramDef =", "+                    ast.findFirstToken(TokenTypes.VARIABLE_DEF);", "+                if (shouldCheckEnhancedForLoopVariable(paramDef)) {", "+                    leaveForEach(paramDef);", "+                }", "-                leaveForDef(ast);", "+                if (!getCurrentVariables().isEmpty()) {", "+                    leaveForDef(ast);", "+                }"]}]}