{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41d5dc6f0b212971dcb3b0f359aed16f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c5c896e9266e57e368fc4a515347171", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/BaseCheckTestCase.java", "commitBeforeChange": "6568a9b88220366da3fc9e58fc9de93af9a6520d", "commitAfterChange": "f116754656b534e1a44e797e21b06290dfcf8ad8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      protected void verify(Checker aC, String aFilename, String[] aExpected)         throws Exception", "signatureAfterChange": "      protected void verify(Checker aC, String aFileName, String[] aExpected)             throws Exception", "diff": ["-    protected void verify(Checker aC, String aFilename, String[] aExpected)", "+    protected void verify(Checker aC, String aFileName, String[] aExpected)", "+            throws Exception", "+    {", "+        verify(aC, aFileName, aFileName, aExpected);", "+    }", "-        final int errs = aC.process(new File[] {new File(aFilename)});", "-            assertEquals(aFilename + \":\" + aExpected[i], lnr.readLine());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2d1de3b028dc36bbd682530a7f847ce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/BaseCheckTestCase.java", "commitBeforeChange": "6568a9b88220366da3fc9e58fc9de93af9a6520d", "commitAfterChange": "f116754656b534e1a44e797e21b06290dfcf8ad8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "      protected void verify(Checker aC, String aFilename, String[] aExpected)         throws Exception", "signatureAfterChange": "      protected void verify(Checker aC, String aProcessedFilename,             String aMessageFileName, String[] aExpected)         throws Exception", "diff": ["-    protected void verify(Checker aC, String aFilename, String[] aExpected)", "+", "+    protected void verify(Checker aC, String aProcessedFilename,", "+            String aMessageFileName, String[] aExpected)", "-        final int errs = aC.process(new File[] {new File(aFilename)});", "+        final int errs = aC.process(new File[] {new File(aProcessedFilename)});", "-            assertEquals(aFilename + \":\" + aExpected[i], lnr.readLine());", "+            assertEquals(aMessageFileName + \":\" + aExpected[i], lnr.readLine());"]}]}