{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f596075eddbc973449bfc43a307eb980", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f241534d0e47b8a98df53180b999c39e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheckTest.java", "commitBeforeChange": "41d538f9be41a0561ca7a28b159c034bcd3810e8", "commitAfterChange": "bb3f80410619472799c401651c43afb761f7906e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIncorrect() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrect() throws Exception", "diff": ["+            \"7: \" + getCheckMessage(MSG_MISPLACED_TAG),", "+            \"7: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"8: \" + getCheckMessage(MSG_MISPLACED_TAG),", "+            \"8: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"14: \" + getCheckMessage(MSG_MISPLACED_TAG),", "+            \"14: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"16: \" + getCheckMessage(MSG_MISPLACED_TAG),", "+            \"23: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"25: \" + getCheckMessage(MSG_MISPLACED_TAG),", "+            \"32: \" + getCheckMessage(MSG_MISPLACED_TAG),", "+            \"32: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"32: \" + getCheckMessage(MSG_REDUNDANT_PARAGRAPH),", "+            \"33: \" + getCheckMessage(MSG_MISPLACED_TAG),", "+            \"33: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"34: \" + getCheckMessage(MSG_MISPLACED_TAG),", "+            \"34: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"35: \" + getCheckMessage(MSG_MISPLACED_TAG),", "+            \"35: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"39: \" + getCheckMessage(MSG_MISPLACED_TAG),", "+            \"39: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"45: \" + getCheckMessage(MSG_MISPLACED_TAG),", "+            \"45: \" + getCheckMessage(MSG_REDUNDANT_PARAGRAPH),", "+            \"48: \" + getCheckMessage(MSG_MISPLACED_TAG),", "+            \"50: \" + getCheckMessage(MSG_MISPLACED_TAG),", "+            \"50: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"51: \" + getCheckMessage(MSG_MISPLACED_TAG),", "+            \"51: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"61: \" + getCheckMessage(MSG_REDUNDANT_PARAGRAPH),", "+            \"62: \" + getCheckMessage(MSG_TAG_AFTER),", "+            \"70: \" + getCheckMessage(MSG_MISPLACED_TAG),", "+            \"70: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"72: \" + getCheckMessage(MSG_MISPLACED_TAG),", "+            \"75: \" + getCheckMessage(MSG_MISPLACED_TAG),", "+            \"75: \" + getCheckMessage(MSG_LINE_BEFORE),", "+        };", "+        verify(checkConfig, getPath(\"javadoc/InputIncorrectJavaDocParagraphCheck.java\"), expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdaac12bf82ec9ad31bdd2e911c9587e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyRightCurlyTest.java", "commitBeforeChange": "af52963008a800390e8b356db5811886572f37a3", "commitAfterChange": "3a5a73d5c110418f712f5a9a838c6b4106506fdd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          @Test     public void leftCurlyMethodsTest() throws IOException, Exception", "signatureAfterChange": "          @Test     public void leftCurlyMethodsTest() throws IOException, Exception", "diff": ["-        ", "-        String checkMessagePrevious = getCheckMessage(LeftCurlyCheck.class, \"line.previous\", \"{\");", "-            \"4:1: \" + checkMessagePrevious,", "-            \"9:5: \" + checkMessagePrevious,", "-            \"16:5: \" + checkMessagePrevious,", "-            \"19:5: \" + checkMessagePrevious,", "-            \"23:5: \" + checkMessagePrevious,", "-            \"31:1: \" + checkMessagePrevious,", "-            \"33:5: \" + checkMessagePrevious,", "-            \"38:9: \" + checkMessagePrevious,", "-            \"41:9: \" + checkMessagePrevious,", "-            \"45:9: \" + checkMessagePrevious,", "-            \"57:5: \" + checkMessagePrevious,", "-            \"61:5: \" + checkMessagePrevious,", "-            \"69:5: \" + checkMessagePrevious,", "-            \"72:5: \" + checkMessagePrevious, ", "-            \"76:5: \" + checkMessagePrevious,", "+            \"4:1: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 1),", "+            \"9:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"16:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"19:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"23:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"31:1: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 1),", "+            \"33:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"38:9: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 9),", "+            \"41:9: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 9),", "+            \"45:9: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 9),", "+            \"57:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"61:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"69:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"72:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"76:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),"]}]}