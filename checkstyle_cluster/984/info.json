{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "66de3df49763c9cec29c030bc5dc0575", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8867886977ebf5ab7b94d2722d7c1c6f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "e380ac8df92c051d843d380d5e8a6fe90af9df9d", "commitAfterChange": "ab2f93f9bf61816d84154e636d32c81c05854e24", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private static Properties loadProperties(File file)", "signatureAfterChange": "     private static Properties loadProperties(File file)             throws CheckstyleException", "diff": ["+            throws CheckstyleException", "-        catch (final IOException ex) {", "-            System.out.println(\"Unable to load properties from file: \"", "-                + file.getAbsolutePath());", "-            ex.printStackTrace(System.out);", "-            System.exit(1);", "+        catch (final IOException e) {", "+            throw new CheckstyleException(String.format(", "+                    \"Unable to load properties from file '%s'.\", file.getAbsolutePath()), e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c0155f66ce4e7e5c69dc4f5d6b8c686", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "fe6e0fd4231aaba97cf423899f93697400880c93", "commitAfterChange": "b84b3fd04ad9c45e1466e35b707a2b59f5baf66b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main(String[] aArgs)", "signatureAfterChange": "     public static void main(String[] aArgs)", "diff": ["-        catch (RESyntaxException rese) {", "-            System.out.println(\"Unable to create an regexp object: \"", "-                               + rese.getMessage());", "-            rese.printStackTrace(System.out);", "-            System.exit(1);", "-        }", "-        catch (IOException ex) {", "-            System.out.println(\"I/O error occurred: \" + ex.getMessage());", "-            ex.printStackTrace(System.out);", "+        catch (Exception e) {", "+            System.out.println(\"Unable to create Checker: \"", "+                               + e.getMessage());", "+            e.printStackTrace(System.out);"]}]}