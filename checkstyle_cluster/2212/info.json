{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e035881525ce599eef1b7ed9dd689bb5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16e9cda352b53307d115b9f0fa27b20d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "52e2087c404986f8e12cd8579be7b2333961e1a3", "commitAfterChange": "c38185458ab824874b8465c46b4dc42646440aaa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setIgnoreStringsRegexp(String aIgnoreStringsRegexp)", "signatureAfterChange": "     public void setIgnoreStringsRegexp(String aIgnoreStringsRegexp)", "diff": ["-        mIgnoreStringsRegexp = aIgnoreStringsRegexp;", "-        if ((mIgnoreStringsRegexp != null)", "-            && (mIgnoreStringsRegexp.length() > 0))", "+        if ((aIgnoreStringsRegexp != null)", "+            && (aIgnoreStringsRegexp.length() > 0))", "-            mPattern = Utils.getPattern(mIgnoreStringsRegexp);", "+            mPattern = Utils.getPattern(aIgnoreStringsRegexp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50e1a2c7e6d7e9e025e9126e3c1e6317", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "423ed9e469db620671459827b58c89025d8f6c66", "commitAfterChange": "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final void setIgnoreStringsRegexp(String ignoreStringsRegexp)", "signatureAfterChange": "     public final void setIgnoreStringsRegexp(String ignoreStringsRegexp)", "diff": ["-        if (ignoreStringsRegexp != null", "-            && !ignoreStringsRegexp.isEmpty()) {", "-            pattern = CommonUtils.createPattern(ignoreStringsRegexp);", "+        if (ignoreStringsRegexp == null || ignoreStringsRegexp.isEmpty()) {", "+            pattern = null;", "-            pattern = null;", "+            pattern = CommonUtils.createPattern(ignoreStringsRegexp);"]}]}