{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8458be8ae12d99fd801d71d144073da4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14667532430fa527114aa59151e3c026", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "9d11d6a0b07b63e3581468183f2ec359bafbf300", "commitAfterChange": "ee2e1a5cb3c7dd02bf6b63c418126e41735ee0ea", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private Properties createOverridingProperties()", "signatureAfterChange": "     private Properties createOverridingProperties()", "diff": ["-        // Now override the properties specified", "+        // override with Ant properties like ${basedir}", "+        Hashtable antProps = this.getProject().getProperties();", "+        for (Iterator it = antProps.keySet().iterator(); it.hasNext();) {", "+            final String key = (String) it.next();", "+            final String value = String.valueOf(antProps.get(key));", "+            retVal.put(key, value);", "+        }", "+", "+        // override with properties specified in subelements"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e217cb03d4aff2929eb433ce53d7de0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private Properties createOverridingProperties()", "signatureAfterChange": "     private Properties createOverridingProperties()", "diff": ["-        final Hashtable antProps = this.getProject().getProperties();", "-        for (final Iterator it = antProps.keySet().iterator(); it.hasNext();) {", "+        final Hashtable<?, ?> antProps = this.getProject().getProperties();", "+        for (final Iterator<?> it = antProps.keySet().iterator(); it.hasNext();)", "+        {", "-        for (final Iterator it = mOverrideProps.iterator(); it.hasNext();) {", "-            final Property p = (Property) it.next();", "+        for (Property p : mOverrideProps) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93a329282d8ed3e21bef9230176f7cdf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckConfiguration.java", "commitBeforeChange": "9fdee8a722d4d2d72796a1bc8397d5f23a342843", "commitAfterChange": "03c8a0a7ee9fa35ce22491785c9630c2eb698471", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     Check createInstance(ClassLoader aLoader)         throws ClassNotFoundException, InstantiationException,         IllegalAccessException", "signatureAfterChange": "     Check createInstance(ClassLoader aLoader)         throws ClassNotFoundException, InstantiationException,         IllegalAccessException, InvocationTargetException,         NoSuchMethodException", "diff": ["-        IllegalAccessException", "+        IllegalAccessException, InvocationTargetException,", "+        NoSuchMethodException", "+        // Loop setting the properties", "+        final Iterator keyIt = mProperties.keySet().iterator();", "+        while (keyIt.hasNext()) {", "+            final String key = (String) keyIt.next();", "+            final String value = (String) mProperties.get(key);", "+            PropertyUtils.setSimpleProperty(check, key, value);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e12c4c45e267da1c75c382ecd206c82a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "898b05afda02cf917cad7182ed9b37e8032dd4c4", "commitAfterChange": "18f4f7efe927bef2c50ce97c860a64b8198cbb07", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void checkPropertyFileSets(Map aPropFiles)", "signatureAfterChange": "     private void checkPropertyFileSets(Map aPropFiles)", "diff": ["-        final Set keySet = aPropFiles.keySet();", "+        final Set entrySet = aPropFiles.entrySet();", "-        for (Iterator iterator = keySet.iterator(); iterator.hasNext();) {", "-            final String baseName = (String) iterator.next();", "-            final Set files = (Set) aPropFiles.get(baseName);", "+        for (Iterator iterator = entrySet.iterator(); iterator.hasNext();) {", "+            final Map.Entry entry = (Map.Entry) iterator.next();", "+            final Set files = (Set) entry.getValue();"]}]}