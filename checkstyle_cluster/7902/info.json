{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0bbd93f4d03be71704066fb18dbce9ce", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67d83ffaf5c3bfa3bc3c4858e0a7f618", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "commitAfterChange": "6ee4a0f805d528cdee03cfc175502d15b5722dab", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void checkCheckClosingParens(final DetailAST ast)", "signatureAfterChange": "     private void checkCheckClosingParens(final DetailAST ast)", "diff": ["-            && !ast.branchContains(TokenTypes.EXPR)", "-            && !ast.branchContains(TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR)", "-            && !ast.branchContains(TokenTypes.ANNOTATION_ARRAY_INIT)", "-            && parenExists) {", "+                 && parenExists", "+                 && !ast.branchContains(TokenTypes.EXPR)", "+                 && !ast.branchContains(TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR)", "+                 && !ast.branchContains(TokenTypes.ANNOTATION_ARRAY_INIT)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70d11c9a320623587b70f83d87519b18", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "e0471bb7f2840ebfa4adaa5fea697b4b3c31f782", "commitAfterChange": "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean containsAllSafeTokens(final DetailAST expr)", "signatureAfterChange": "     private boolean containsAllSafeTokens(final DetailAST expr)", "diff": ["-        if (arg.branchContains(TokenTypes.PLUS_ASSIGN)", "-                || arg.branchContains(TokenTypes.IDENT)) {", "-            return false;", "-        }", "-", "-        //must be just String literals if got here", "-        return true;", "+        //must be just String literals to return true", "+        return !arg.branchContains(TokenTypes.PLUS_ASSIGN)", "+                && !arg.branchContains(TokenTypes.IDENT);"]}]}