{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d684ec9f7ea1b77fdc3676aaa87864e7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21995900f49b3796b8dead1140b94712", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "commitAfterChange": "cb5a59fc6baf5de204e3cc99be6ba9865e44350a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static DetailAST skipAnnotationOnlyLines(DetailAST ast)", "signatureAfterChange": "     private static DetailAST skipAnnotationOnlyLines(DetailAST ast)", "diff": ["-        DetailAST lastAnnot = findLastAnnotation(modifiers);", "-        if (lastAnnot == null) {", "+        DetailAST lastAnnotation = findLastAnnotation(modifiers);", "+        if (lastAnnotation == null) {", "-        if (lastAnnot.getNextSibling() == null) {", "+        if (lastAnnotation.getNextSibling() == null) {", "-            tokenAfterLast = lastAnnot.getNextSibling();", "+            tokenAfterLast = lastAnnotation.getNextSibling();", "-        if (tokenAfterLast.getLineNo() > lastAnnot.getLineNo()) {", "+        if (tokenAfterLast.getLineNo() > lastAnnotation.getLineNo()) {", "-        final int lastAnnotLineNumber = lastAnnot.getLineNo();", "-        while (lastAnnot.getPreviousSibling() != null", "-               && lastAnnot.getPreviousSibling().getLineNo() == lastAnnotLineNumber) {", "-            lastAnnot = lastAnnot.getPreviousSibling();", "+        final int lastAnnotationLineNumber = lastAnnotation.getLineNo();", "+        while (lastAnnotation.getPreviousSibling() != null", "+               && lastAnnotation.getPreviousSibling().getLineNo() == lastAnnotationLineNumber) {", "+            lastAnnotation = lastAnnotation.getPreviousSibling();", "-        return lastAnnot;", "+        return lastAnnotation;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e7c1a16025ceb956d0b1666c0956d04", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "46378dadb508320f14737a44c75a832dc5c8120c", "commitAfterChange": "9ddad74e484384e5ca2d88ab0fe21922189e2b85", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static DetailAST skipAnnotationOnlyLines(DetailAST ast)", "signatureAfterChange": "     private static DetailAST skipAnnotationOnlyLines(DetailAST ast)", "diff": ["+        DetailAST resultNode = ast;", "-        if (modifiers == null) {", "-            return ast;", "-        }", "-        DetailAST lastAnnotation = findLastAnnotation(modifiers);", "-        if (lastAnnotation == null) {", "-            // There are no annotations.", "-            return ast;", "-        }", "-        final DetailAST tokenAfterLast;", "-        if (lastAnnotation.getNextSibling() == null) {", "-            tokenAfterLast = modifiers.getNextSibling();", "-        }", "-        else {", "-            tokenAfterLast = lastAnnotation.getNextSibling();", "-        }", "+        if (modifiers != null) {", "+            DetailAST lastAnnotation = findLastAnnotation(modifiers);", "-        if (tokenAfterLast.getLineNo() > lastAnnotation.getLineNo()) {", "-            return tokenAfterLast;", "+            if (lastAnnotation != null) {", "+                final DetailAST tokenAfterLast;", "+", "+                if (lastAnnotation.getNextSibling() == null) {", "+                    tokenAfterLast = modifiers.getNextSibling();", "+                }", "+                else {", "+                    tokenAfterLast = lastAnnotation.getNextSibling();", "+                }", "+", "+                if (tokenAfterLast.getLineNo() > lastAnnotation.getLineNo()) {", "+                    resultNode = tokenAfterLast;", "+                }", "+                else {", "+                    final int lastAnnotationLineNumber = lastAnnotation.getLineNo();", "+                    while (lastAnnotation.getPreviousSibling() != null", "+                           && lastAnnotation.getPreviousSibling().getLineNo()", "+                               == lastAnnotationLineNumber) {", "+", "+                        lastAnnotation = lastAnnotation.getPreviousSibling();", "+                    }", "+                    resultNode = lastAnnotation;", "+                }", "+            }", "-        final int lastAnnotationLineNumber = lastAnnotation.getLineNo();", "-        while (lastAnnotation.getPreviousSibling() != null", "-               && lastAnnotation.getPreviousSibling().getLineNo() == lastAnnotationLineNumber) {", "-            lastAnnotation = lastAnnotation.getPreviousSibling();", "-        }", "-        return lastAnnotation;", "+        return resultNode;"]}]}