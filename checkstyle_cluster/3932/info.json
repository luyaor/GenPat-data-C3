{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "39d301450f22e81cd3a172cd98cddd65", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18f61fdacf7b5d807b2f94150300bad0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "commitBeforeChange": "3c0c72f96477afb542ee37b3336f4b7b7613ff29", "commitAfterChange": "6f0a3dee5efc6217383f9bfd6d7a3a116b1c885b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-        switch (aAST.getType()) {", "-        case TokenTypes.CLASS_DEF:", "+        if (TokenTypes.CLASS_DEF == aAST.getType()) {", "-            break;", "-        default:", "-            throw new IllegalStateException(aAST.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb1abc4130b207d66c2c98035349ec28", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "b5f92edbe545596878aa10bd50742b5f2c43c08a", "commitAfterChange": "8da777a68ad936f1a4e07d59cee17ecab2fc293e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private static DetailAST createCommentAstFromToken(Token token)", "signatureAfterChange": "     private static DetailAST createCommentAstFromToken(Token token)", "diff": ["-        switch (token.getType()) {", "-            case TokenTypes.SINGLE_LINE_COMMENT:", "-                return createSlCommentNode(token);", "-            case TokenTypes.BLOCK_COMMENT_BEGIN:", "-                return createBlockCommentNode(token);", "-            default:", "-                throw new IllegalArgumentException(\"Unknown comment type\");", "+        if (token.getType() == TokenTypes.SINGLE_LINE_COMMENT) {", "+            return createSlCommentNode(token);", "+        }", "+        else {", "+            return createBlockCommentNode(token);"]}]}