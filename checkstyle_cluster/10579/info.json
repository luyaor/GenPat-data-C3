{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad77e04ba232c9557a1b9ae4c8000494", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e21acf3d72556fda6c638363dc27a4e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/MagicNumberCheck.java", "commitBeforeChange": "ee3ea77d620d2f21a18a0fe878a911a975545024", "commitAfterChange": "b5203fd519f61b652a6d56a24eb9d18388eb2155", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private float parseFloat(String aText, int aType)", "signatureAfterChange": "     private float parseFloat(String aText, int aType)", "diff": ["+        float result = 0;", "-            return Float.parseFloat(aText);", "+            result = Float.parseFloat(aText);", "-            return (float) Double.parseDouble(aText);", "+            result = (float) Double.parseDouble(aText);", "-                    return (float) Integer.parseInt(aText, radix);", "-                }", "-                else {", "-                    return 0;", "+                    result = (float) Integer.parseInt(aText, radix);", "-                    return (float) Long.parseLong(aText, radix);", "+                    result = (float) Long.parseLong(aText, radix);", "-                else {", "-                    return 0;", "-                } ", "-            }", "-            else {", "-                return 0;", "+        return result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5302e05f7dad97a7c1d86bde4510c5a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeModel.java", "commitBeforeChange": "e66c64585f4af36b70b1371a55a3b145ac9c0661", "commitAfterChange": "a09875b9f9ff2d59416331a989b09335ee57c89c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public Class<?> getColumnClass(int column)", "signatureAfterChange": "      @Override     public Class<?> getColumnClass(int column)", "diff": ["+        Class<?> columnClass;", "+", "-                return TreeTableModel.class;", "+                columnClass = TreeTableModel.class;", "+                break;", "-                return String.class;", "+                columnClass = String.class;", "+                break;", "-                return Integer.class;", "+                columnClass = Integer.class;", "+                break;", "-                return Integer.class;", "+                columnClass = Integer.class;", "+                break;", "-                return String.class;", "+                columnClass = String.class;", "+                break;", "-                return Object.class;", "+                columnClass = Object.class;", "+        return columnClass;"]}]}