{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "daf4dd60091b571f5156c3198adcf3dd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6628e9b73717559a6eacb97d3ac9ace6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "59aa66c3cc43db0a7cd8bb0ea3a39b6f4339fe88", "commitAfterChange": "a24df47cafeab03fd65cf72b460aad3d2fafce3d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void registerCheck(String aToken, Check aCheck)", "signatureAfterChange": "     private void registerCheck(String aToken, Check aCheck)", "diff": ["-        mTokenToChecks.put(aToken, aCheck);", "+        if (aCheck.isCommentNodesRequired()) {", "+            mTokenToCommentChecks.put(aToken, aCheck);", "+        }", "+        else if (TokenTypes.isCommentType(aToken)) {", "+            LOG.warn(\"Check '\"", "+                    + aCheck.getClass().getName()", "+                    + \"' waits for comment type token ('\"", "+                    + aToken", "+                    + \"') and should override 'isCommentNodesRequred()'\"", "+                    + \" method to return 'true'\");", "+        }", "+        else {", "+            mTokenToOrdinaryChecks.put(aToken, aCheck);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f057d05e82da0cbb629e1f22cc10797", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/internal/XDocsPagesTest.java", "commitBeforeChange": "948e489ba62f19d0d9c51d800c25e0470b4b4e1c", "commitAfterChange": "4cdfe5c510b5a9975320aee2f58ebc9357ad6d68", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private static void validateUsageExample(String fileName, String sectionName, Node subSection)", "signatureAfterChange": "      private static void validateUsageExample(String fileName, String sectionName, Node subSection)", "diff": ["+", "+                Assert.assertTrue(fileName + \" section '\" + sectionName", "+                        + \"' should be in google_checks.xml or not reference 'Google Style'\",", "+                        GOOGLE_CHECKS.contains(sectionName));", "+", "+                Assert.assertTrue(fileName + \" section '\" + sectionName", "+                        + \"' should be in sun_checks.xml or not reference 'Sun Style'\",", "+                        SUN_CHECKS.contains(sectionName));"]}]}