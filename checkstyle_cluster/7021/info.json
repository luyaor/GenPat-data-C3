{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "348a9cd60b7400b243c84fb4dec87cb9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7deb4c7c1ddb42571e02b0b642421eaa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void checkParam(final DetailAST aParam)", "signatureAfterChange": "     private void checkParam(final DetailAST param)", "diff": ["-    private void checkParam(final DetailAST aParam)", "+    private void checkParam(final DetailAST param)", "-        if (!aParam.branchContains(TokenTypes.FINAL) && !isIgnoredParam(aParam)) {", "-            final DetailAST paramName = aParam.findFirstToken(TokenTypes.IDENT);", "-            final DetailAST firstNode = CheckUtils.getFirstNode(aParam);", "+        if (!param.branchContains(TokenTypes.FINAL) && !isIgnoredParam(param)) {", "+            final DetailAST paramName = param.findFirstToken(TokenTypes.IDENT);", "+            final DetailAST firstNode = CheckUtils.getFirstNode(param);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f24a70112fb130503420c88ad79000d6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "da2d75a1780c1691dc4aa45489f9e9674b1c652e", "commitAfterChange": "36b91a59d62c9505b835717f00f470c499cf9b30", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void insertVariable(DetailAST ast)", "signatureAfterChange": "     private void insertVariable(DetailAST ast)", "diff": ["+     */", "+    private void insertVariable(DetailAST ast) {", "+        final Map<String, DetailAST> scope = scopeStack.peek().scope;", "+        final DetailAST astNode = ast.findFirstToken(TokenTypes.IDENT);", "+        scope.put(astNode.getText(), astNode);", "+        if (!isInitialized(astNode)) {", "+            scopeStack.peek().uninitializedVariables.add(astNode);", "+        }", "+    }", "-    private void insertVariable(DetailAST ast) {", "-        final Map<String, DetailAST> state = scopeStack.peek();", "-        final DetailAST astNode = ast.findFirstToken(TokenTypes.IDENT);", "-        state.put(astNode.getText(), astNode);"]}]}