{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f38a3a91af0fc6e2ea49782c2ba8e06", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d9f527b2976a61b82171d0ab56478ed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testNL() throws Exception", "signatureAfterChange": "      @Test     public void testNL() throws Exception", "diff": ["-            \"49:14: '{' should be on a new line.\",", "-            \"53:14: '{' should be on a new line.\",", "-            \"58:18: '{' should be on a new line.\",", "-            \"62:18: '{' should be on a new line.\",", "-            \"67:12: '{' should be on a new line.\",", "-            \"72:18: '{' should be on a new line.\",", "+            \"49:14: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"53:14: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"58:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"62:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"67:12: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"72:18: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec87e52470739c051f0a2bc931413317", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testText()         throws Exception", "signatureAfterChange": "      @Test     public void testText()         throws Exception", "diff": ["-            \"52:65: Empty catch block.\",", "-            \"72:52: Empty catch block.\",", "-            \"73:45: Empty catch block.\",", "-            \"75:13: Empty try block.\",", "-            \"77:17: Empty finally block.\",", "-            \"178:5: Empty INSTANCE_INIT block.\",", "+            \"52:65: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"catch\"),", "+            \"72:52: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"catch\"),", "+            \"73:45: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"catch\"),", "+            \"75:13: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"try\"),", "+            \"77:17: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"finally\"),", "+            \"178:5: \" + getCheckMessage(MSG_KEY_BLOCK_EMPTY, \"INSTANCE_INIT\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0c24c0b21d1e256defa8c62217b1abf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testMultipleEmptyLinesBetweenClassMembers() throws Exception", "signatureAfterChange": "      @Test     public void testMultipleEmptyLinesBetweenClassMembers() throws Exception", "diff": ["-            \"21: 'package' has more than 1 empty lines before.\",", "-            \"24: 'import' has more than 1 empty lines before.\",", "-            \"33: 'VARIABLE_DEF' has more than 1 empty lines before.\",", "-            \"38: 'VARIABLE_DEF' has more than 1 empty lines before.\",", "-            \"43: 'METHOD_DEF' has more than 1 empty lines before.\",", "+            \"21: \" + getCheckMessage(MSG_MULTIPLE_LINES, \"package\"),", "+            \"24: \" + getCheckMessage(MSG_MULTIPLE_LINES, \"import\"),", "+            \"33: \" + getCheckMessage(MSG_MULTIPLE_LINES, \"VARIABLE_DEF\"),", "+            \"38: \" + getCheckMessage(MSG_MULTIPLE_LINES, \"VARIABLE_DEF\"),", "+            \"43: \" + getCheckMessage(MSG_MULTIPLE_LINES, \"METHOD_DEF\"),"]}]}