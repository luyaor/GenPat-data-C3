{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac5a3b98b86b652ecac1745c0a0f3ca5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86b8ea83f90436eb355195ee2255bb80", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java", "commitBeforeChange": "f712557e039eab29eff53c512320216592a23cd3", "commitAfterChange": "f1dced161ab0c818f0e1e125fc5b88b71f5b171e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void validate(Details details, DetailAST rcurly, DetailAST lcurly)", "signatureAfterChange": "     private void validate(Details details, DetailAST rcurly, DetailAST lcurly)", "diff": ["-", "-        if (shouldCheckLastRcurly) {", "+        else if (shouldCheckLastRcurly) {", "-                && rcurly.getLineNo() == nextToken.getLineNo()", "+                && !isAloneOnLine(details)", "+        else if (getAbstractOption() == RightCurlyOption.ALONE_OR_SINGLELINE", "+                && !isAloneOnLine(details)", "+                && !isSingleLineBlock(details)", "+                && !isAnonInnerClassInit(lcurly)", "+                && !isEmptyBody(lcurly)) {", "+            log(rcurly, MSG_KEY_LINE_ALONE, \"}\");", "+        }", "+        else if (shouldStartLine) {", "+            final boolean startsLine =", "+                Utils.whitespaceBefore(rcurly.getColumnNo(),", "+                    getLines()[rcurly.getLineNo() - 1]);", "+", "+            if (!startsLine && lcurly.getLineNo() != rcurly.getLineNo()) {", "+                log(rcurly, MSG_KEY_LINE_NEW, \"}\");", "+            }", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daa41e6cd89470d0d9905f7b2edc35bb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java", "commitBeforeChange": "ae0e7def779cddabf1e93ee744b9b341ef27647f", "commitAfterChange": "c99f34002b7340ec8d0888f8f9b3992df798e408", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["+", "+        validate(details, rcurly, lcurly);", "+", "+        if (!shouldStartLine) {", "+            return;", "+        }", "+        final boolean startsLine =", "+                Utils.whitespaceBefore(rcurly.getColumnNo(),", "+                        getLines()[rcurly.getLineNo() - 1]);", "+", "+        if (!startsLine && lcurly.getLineNo() != rcurly.getLineNo()) {", "+            log(rcurly, MSG_KEY_LINE_NEW, \"}\");", "+        }", "+    }", "-        }", "-", "-        if (!shouldStartLine) {", "-            return;", "-        }", "-        final boolean startsLine =", "-                Utils.whitespaceBefore(rcurly.getColumnNo(),", "-                        getLines()[rcurly.getLineNo() - 1]);", "-", "-        if (!startsLine && lcurly.getLineNo() != rcurly.getLineNo()) {", "-            log(rcurly, MSG_KEY_LINE_NEW, \"}\");"]}]}