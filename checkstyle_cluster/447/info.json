{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fdeddda94dbeb5a5d084bf972c6334c7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6acfb88f436de9633dda7e92e0c2546d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected final void checkExpressionSubtree(         DetailAST tree,         IndentLevel level,         boolean firstLineMatches,         boolean allowNesting     )", "signatureAfterChange": "     protected final void checkExpressionSubtree(         DetailAST tree,         IndentLevel indentLevel,         boolean firstLineMatches,         boolean allowNesting     )", "diff": ["-        IndentLevel level,", "+        IndentLevel indentLevel,", "-        checkLinesIndent(subtreeLines, level, firstLineMatches, firstLine);", "+        checkLinesIndent(subtreeLines, indentLevel, firstLineMatches, firstLine);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd784c53f86210a93ee4f681202768df", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "113ea8405c8b753540ee3423d7e37e383f269155", "commitAfterChange": "7f7db38a097a95c264307123924779380fb40077", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 27, "signatureBeforeChange": "     protected final void checkExpressionSubtree(         DetailAST aTree,         int aLevel,         boolean aFirstLineMatches,         boolean aAllowNesting     )", "signatureAfterChange": "     protected final int getBraceAdjustement()", "diff": ["-        int aLevel,", "-        boolean aFirstLineMatches,", "-        boolean aAllowNesting", "-    )", "-    {", "-        checkExpressionSubtree(aTree, new IndentLevel(aLevel),", "-                               aFirstLineMatches, aAllowNesting);", "-    }", "+     */", "+    protected final int getBraceAdjustement()", "+    {", "+        return getIndentCheck().getBraceAdjustement();", "+    }"]}]}