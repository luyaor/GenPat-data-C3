{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "db5b56d01d40bcf89e8afce5447e21ef", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8712bf3f8cbd09017703716611801c5a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "61b8d9ef88db402a1927e77cd4b06d3a1880554b", "commitAfterChange": "da7118ff79f2831d98b83bb7aceb02162223b102", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testBraces()         throws Exception", "signatureAfterChange": "      public void testBraces()         throws Exception", "diff": ["-            filepath + \":29: 'do' construct must use '{}'s.\",", "-            filepath + \":41: 'while' construct must use '{}'s.\",", "-            filepath + \":42: 'while' construct must use '{}'s.\",", "-            filepath + \":44: 'while' construct must use '{}'s.\",", "-            filepath + \":45: 'if' construct must use '{}'s.\",", "-            filepath + \":58: 'for' construct must use '{}'s.\",", "-            filepath + \":58:23: ';' is not followed by whitespace.\",", "-            filepath + \":58:29: ';' is not followed by whitespace.\",", "-            filepath + \":59: 'for' construct must use '{}'s.\",", "-            filepath + \":61: 'for' construct must use '{}'s.\",", "-            filepath + \":63: 'if' construct must use '{}'s.\",", "-            filepath + \":82: 'if' construct must use '{}'s.\",", "-            filepath + \":83: 'if' construct must use '{}'s.\",", "-            filepath + \":85: 'if' construct must use '{}'s.\",", "-            filepath + \":87: 'else' construct must use '{}'s.\",", "-            filepath + \":89: 'if' construct must use '{}'s.\",", "-            filepath + \":97: 'else' construct must use '{}'s.\",", "-            filepath + \":99: 'if' construct must use '{}'s.\",", "-            filepath + \":100: 'if' construct must use '{}'s.\"", "-        };", "-        verify(c, filepath, expected);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee06c044dd4722e3fde332d6a8be7439", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "346387c717048391485fb28f877531aab1095de1", "commitAfterChange": "f020066f8bdfb378df36904af3df8b5bc48858fd", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void testNonExistingClass() throws Exception", "signatureAfterChange": "      @Test     public void testNonExistingClass() throws Exception", "diff": ["-        final String cause = \"Unable to instantiate 'NonExistingClass' class,\"", "-            + \" it is also not possible to instantiate it as\"", "-            + \" com.puppycrawl.tools.checkstyle.checks.annotation.NonExistingClass,\"", "-            + \" com.puppycrawl.tools.checkstyle.checks.blocks.NonExistingClass,\"", "-            + \" com.puppycrawl.tools.checkstyle.checks.coding.NonExistingClass,\"", "-            + \" com.puppycrawl.tools.checkstyle.checks.design.NonExistingClass,\"", "-            + \" com.puppycrawl.tools.checkstyle.checks.header.NonExistingClass,\"", "-            + \" com.puppycrawl.tools.checkstyle.checks.imports.NonExistingClass,\"", "-            + \" com.puppycrawl.tools.checkstyle.checks.indentation.NonExistingClass,\"", "-            + \" com.puppycrawl.tools.checkstyle.checks.javadoc.NonExistingClass,\"", "-            + \" com.puppycrawl.tools.checkstyle.checks.metrics.NonExistingClass,\"", "-            + \" com.puppycrawl.tools.checkstyle.checks.modifier.NonExistingClass,\"", "-            + \" com.puppycrawl.tools.checkstyle.checks.naming.NonExistingClass,\"", "-            + \" com.puppycrawl.tools.checkstyle.checks.regexp.NonExistingClass,\"", "-            + \" com.puppycrawl.tools.checkstyle.checks.sizes.NonExistingClass,\"", "-            + \" com.puppycrawl.tools.checkstyle.checks.whitespace.NonExistingClass,\"", "-            + \" com.puppycrawl.tools.checkstyle.checks.NonExistingClass,\"", "-            + \" com.puppycrawl.tools.checkstyle.filters.NonExistingClass,\"", "-            + \" com.puppycrawl.tools.checkstyle.NonExistingClass.\"", "-            + \" Please recheck that class name is specified as canonical name or read\"", "-            + \" how to configure short name usage\"", "-            + \" http://checkstyle.sourceforge.net/config.html#Packages.\"", "-            + \" Please also recheck that provided ClassLoader to Checker is configured correctly.\";", "-        final String expectedExceptionMessage =", "-            String.format(Locale.ROOT, \"cannot initialize module TreeWalker - %1$s%n\"", "-                + \"Cause: com.puppycrawl.tools.checkstyle.api.CheckstyleException: %1$s%n\"", "-                + \"Checkstyle ends with 1 errors.%n\", cause);", "+                final String expectedExceptionMessage =", "+                        String.format(Locale.ROOT, \"Checkstyle ends with 1 errors.%n\");", "-                assertEquals(\"\", systemErr.getLog());", "+", "+                final String cause = \"com.puppycrawl.tools.checkstyle.api.CheckstyleException:\"", "+                        + \" cannot initialize module TreeWalker - \"", "+                        + \"Unable to instantiate 'NonExistingClass' class, \"", "+                        + \"it is also not possible to instantiate it as \";", "+                assertTrue(systemErr.getLog().startsWith(cause));"]}]}