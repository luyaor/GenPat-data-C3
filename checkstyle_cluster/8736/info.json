{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ddd9496f2a6f0f6aa3d73d3deb8339d0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7729b36b7c810eac72fca080de3d9901", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "         public boolean containsStaticField(String aField)", "signatureAfterChange": "         public boolean containsStaticField(String field)", "diff": ["-        public boolean containsStaticField(String aField)", "+        public boolean containsStaticField(String field)", "-            return mStaticFields.contains(aField)", "-                    || (mParent != null)", "-                    && mParent.containsStaticField(aField);", "+            return staticFields.contains(field)", "+                    || (parent != null)", "+                    && parent.containsStaticField(field);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fb488e7befe21ac3baf857404f32ca9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "         public boolean containsInstanceField(String aField)", "signatureAfterChange": "         public boolean containsInstanceField(String field)", "diff": ["-        public boolean containsInstanceField(String aField)", "+        public boolean containsInstanceField(String field)", "-            return mInstanceFields.contains(aField)", "+            return instanceFields.contains(field)", "-                    && (mParent != null)", "-                    && mParent.containsInstanceField(aField);", "+                    && (parent != null)", "+                    && parent.containsInstanceField(field);"]}]}