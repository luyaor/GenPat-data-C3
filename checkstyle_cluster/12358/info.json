{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b3236f8c954f3e9df9ad64550b705ef", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32bcc3308c1ccca8ffc9abd0c3e845d6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "eeb20e6c8cc86d2d283c254ddcddf89f46aa5190", "commitAfterChange": "d56a2a366c6f9e3e8639d492d548ae562b75dc81", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public int[] getDefaultTokens()", "signatureAfterChange": "      @Override     public int[] getDefaultTokens()", "diff": ["-        return new int[] {", "-            TokenTypes.INTERFACE_DEF,", "-            TokenTypes.CLASS_DEF,", "-            TokenTypes.ANNOTATION_DEF,", "-            TokenTypes.ENUM_DEF,", "-            TokenTypes.CTOR_DEF,", "-            TokenTypes.METHOD_DEF,", "-            TokenTypes.ENUM_CONSTANT_DEF,", "-            TokenTypes.LITERAL_WHILE,", "-            TokenTypes.LITERAL_TRY,", "-            TokenTypes.LITERAL_CATCH,", "-            TokenTypes.LITERAL_FINALLY,", "-            TokenTypes.LITERAL_SYNCHRONIZED,", "-            TokenTypes.LITERAL_SWITCH,", "-            TokenTypes.LITERAL_DO,", "-            TokenTypes.LITERAL_IF,", "-            TokenTypes.LITERAL_ELSE,", "-            TokenTypes.LITERAL_FOR,", "-            TokenTypes.STATIC_INIT,", "-        };", "+        return getAcceptableTokens();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6ae6992cf2de01f0718dbc67dd5d8af", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java", "commitBeforeChange": "52a0d103606992f9a3a43c3425fab88eae1ed150", "commitAfterChange": "d80e678fa0939d845583a3acc7501859254c5f2c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public int[] getDefaultTokens()", "signatureAfterChange": "      @Override     public int[] getDefaultTokens()", "diff": ["+", "-        return new int[] {", "-            TokenTypes.OBJBLOCK,", "-            TokenTypes.LITERAL_FOR,", "-            TokenTypes.FOR_ITERATOR,", "-            TokenTypes.FOR_EACH_CLAUSE,", "-            TokenTypes.ASSIGN,", "-            TokenTypes.PLUS_ASSIGN,", "-            TokenTypes.MINUS_ASSIGN,", "-            TokenTypes.STAR_ASSIGN,", "-            TokenTypes.DIV_ASSIGN,", "-            TokenTypes.MOD_ASSIGN,", "-            TokenTypes.SR_ASSIGN,", "-            TokenTypes.BSR_ASSIGN,", "-            TokenTypes.SL_ASSIGN,", "-            TokenTypes.BAND_ASSIGN,", "-            TokenTypes.BXOR_ASSIGN,", "-            TokenTypes.BOR_ASSIGN,", "-            TokenTypes.INC,", "-            TokenTypes.POST_INC,", "-            TokenTypes.DEC,", "-            TokenTypes.POST_DEC,", "-        };", "+        return getAcceptableTokens();"]}]}