{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "21882fd535f5e95448c5f426a2c03e33", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06c5f00066434d5d372b93db1a18c59b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setChecks(final String aChecks)", "signatureAfterChange": "     public void setChecks(final String checks)", "diff": ["-    public void setChecks(final String aChecks)", "+    public void setChecks(final String checks)", "-        mCheckPattern = aChecks;", "-        mCheckRegexp = Utils.getPattern(aChecks);", "+        checkPattern = checks;", "+        checkRegexp = Utils.getPattern(checks);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0811a11ce45a94c8d204f89ade7096f0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testConfigure_NoSuchAttribute()", "signatureAfterChange": "      @Test     public void testConfigureNoSuchAttribute()", "diff": ["-    public void testConfigure_NoSuchAttribute() {", "+    public void testConfigureNoSuchAttribute() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20e22304926285bfba1e49e95d7ef600", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Path createClasspath()", "signatureAfterChange": "     public Path createClasspath()", "diff": ["-    /** @return a created path for locating classes */", "+    /** @return a created path for locating cluses */", "-        if (mClasspath == null) {", "-            mClasspath = new Path(getProject());", "+        if (classpath == null) {", "+            classpath = new Path(getProject());", "-        return mClasspath.createPath();", "+        return classpath.createPath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23f9b1f29b1d9ca4200be49f26b0e0ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "ecc852d48b9d26398926b255e3cd68572119c106", "commitAfterChange": "751257987b2ef5f301e2deb3b55302196e5015af", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     void setLines(String[] aLines)", "signatureAfterChange": "     void setLines(String[] aLines)", "diff": ["+        mMessages.setLines(mLines);", "-                log(i + 1, \"maxLineLen\",", "-                    new Integer(mConfig.getMaxLineLength()));", "+                mMessages.add(i + 1, \"maxLineLen\",", "+                              new Integer(mConfig.getMaxLineLength()));", "-                    log(i + 1, tabPosition, \"containsTab\");", "+                    mMessages.add(i + 1, tabPosition, \"containsTab\");", "-            log(1, \"maxLen\",", "-                \"file\",", "-                new Integer(mLines.length),", "-                new Integer(mConfig.getMaxFileLength()));", "+            mMessages.add(1, \"maxLen\",", "+                          \"file\",", "+                          new Integer(mLines.length),", "+                          new Integer(mConfig.getMaxFileLength()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2686145b8d8e41b15950dcabf5912441", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected List<File> scanFileSets()", "signatureAfterChange": "     protected List<File> scanFileSets()", "diff": ["-        if (mFileName != null) {", "+        if (fileName != null) {", "-            list.add(new File(mFileName));", "+            list.add(new File(fileName));", "-        for (int i = 0; i < mFileSets.size(); i++) {", "-            final FileSet fs = mFileSets.get(i);", "+        for (int i = 0; i < fileSets.size(); i++) {", "+            final FileSet fs = fileSets.get(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "305018b3ee04ca8776b92db319978a27", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setExcludedClasses(String aExcludedClasses)         throws ConversionException", "signatureAfterChange": "     public void setExcludedClasses(String excludedClasses)         throws ConversionException", "diff": ["-    public void setExcludedClasses(String aExcludedClasses)", "+    public void setExcludedClasses(String excludedClasses)", "-            mExcludedClasses = aExcludedClasses;", "-            mExcludedClassesPattern = Utils.getPattern(mExcludedClasses);", "+            excludedClasses = excludedClasses;", "+            excludedClassesPattern = Utils.getPattern(excludedClasses);", "-                                          + mExcludedClasses,", "+                                          + excludedClasses,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3494fef84bec42b462edb2a582d6214d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void finishLocalSetup()", "signatureAfterChange": "      @Override     public void finishLocalSetup()", "diff": ["-        checkContext.add(\"classLoader\", mClassLoader);", "+        checkContext.add(\"classLoader\", classLoader);", "-        checkContext.add(\"tabWidth\", String.valueOf(mTabWidth));", "+        checkContext.add(\"tabWidth\", String.valueOf(tabWidth));", "-        mChildContext = checkContext;", "+        childContext = checkContext;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fa2baec2729c5c5a29385553509a4f6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void leaveClassDef()", "signatureAfterChange": "     private void leaveClassDef()", "diff": ["-        mContext.checkCoupling();", "-        mContext = mContextStack.pop();", "+        context.checkCoupling();", "+        context = contextStack.pop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40da0462b9fa008d4d5a3d864cbe8d33", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private Properties createOverridingProperties()", "signatureAfterChange": "     private Properties createOverridingProperties()", "diff": ["-        if (mPropertiesFile != null) {", "+        if (propertiesFile != null) {", "-                inStream = new FileInputStream(mPropertiesFile);", "+                inStream = new FileInputStream(propertiesFile);", "-                        + mPropertiesFile + \"'\", e, getLocation());", "+                        + propertiesFile + \"'\", e, getLocation());", "-                        + mPropertiesFile + \"'\", e, getLocation());", "+                        + propertiesFile + \"'\", e, getLocation());", "-        for (Property p : mOverrideProps) {", "+        for (Property p : overrideProps) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52f1e53989f0c0dd737f1e0f15250fc9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "0382b7907b54e95408344863915a847dabc37f12", "commitAfterChange": "eb5896a4a1d66552f5100046413f15d62b485b62", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected final ClassInfo findClassAlias(final String name)", "signatureAfterChange": "     protected final AbstractClassInfo findClassAlias(final String name)", "diff": ["-    protected final ClassInfo findClassAlias(final String name) {", "-        ClassInfo ci = null;", "-        final Iterator<Map<String, ClassInfo>> iterator = typeParams.descendingIterator();", "+    protected final AbstractClassInfo findClassAlias(final String name) {", "+        AbstractClassInfo ci = null;", "+        final Iterator<Map<String, AbstractClassInfo>> iterator = typeParams.descendingIterator();", "-            final Map<String, ClassInfo> paramMap = iterator.next();", "+            final Map<String, AbstractClassInfo> paramMap = iterator.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53ecbd578b50f23955c7fbd9b0c21eec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "          @Override         public void dragEnter(DropTargetDragEvent evt)", "signatureAfterChange": "          @Override         public void dragEnter(DropTargetDragEvent evt)", "diff": ["-                    final JComponent jc = (JComponent) component;", "-                    normalBorder = jc.getBorder();", "-                    jc.setBorder(dragBorder);", "+                    final JComponent comp = (JComponent) this.component;", "+                    normalBorder = comp.getBorder();", "+                    comp.setBorder(dragBorder);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55f8b554eef5554f05f7dea37f685be1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTag.java", "commitBeforeChange": "443e534a3c98c0b30f24647da724fe918f17a006", "commitAfterChange": "66d73fe6189267fee3423e2e8d7fc2d68599a43f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-                + \", arg1='\" + arg1 + \"'}\";", "+                + \", firstArg='\" + firstArg + \"'}\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "565ac3723c5243721a91b1fd30d5a722", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private String getCustomMessage()", "signatureAfterChange": "     private String getCustomMessage()", "diff": ["-        if (mCustomMessage == null) {", "+        if (customMessage == null) {", "-        return MessageFormat.format(mCustomMessage, mArgs);", "+        return MessageFormat.format(customMessage, args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60f65cb4f8c8c7fce2f29824108c583e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "10f348bbfd91fd8c2bd7776aff3c03f549380a44", "commitAfterChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 41, "signatureBeforeChange": "         protected BlockFrame(LexicalFrame parent)", "signatureAfterChange": "         protected BlockFrame(AbstractFrame parent)", "diff": ["-        protected BlockFrame(LexicalFrame parent) {", "-            super(parent);", "+        protected BlockFrame(AbstractFrame parent) {", "+            super(parent, null);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68a4d834f9433fad6b85d0b0e1167bc1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultContext.java", "commitBeforeChange": "17c08660fa40c844057c33e2de04c67af41393b0", "commitAfterChange": "0989b5c3954e46b156bf5d2344327f650ddafc8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Collection<String> getAttributeNames()", "signatureAfterChange": "     public ImmutableCollection<String> getAttributeNames()", "diff": ["-    public Collection<String> getAttributeNames()", "+    public ImmutableCollection<String> getAttributeNames()", "-        return Collections.unmodifiableCollection(mEntries.keySet());", "+        return ImmutableList.copyOf(mEntries.keySet());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e53537fe569c5bc8a71d6565a039abc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "ea963bb721aafd9584242cedf2781f0294f2b18d", "commitAfterChange": "5d6ae80b84896f831695b51050943e7b76c20ea6", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "      @Test(expected = IllegalStateException.class)     public void testVisitTokenSwitchReflection() throws Exception", "signatureAfterChange": "      @Test(expected = IllegalStateException.class)     public void testVisitTokenSwitchReflection() throws Exception", "diff": ["-                ImportOrderOption C = PowerMockito.mock(ImportOrderOption.class);", "-                Whitebox.setInternalState(C, \"name\", \"NEW_OPTION_FOR_UT\");", "-                Whitebox.setInternalState(C, \"ordinal\", 5);", "-                return C;", "+                ImportOrderOption importOrderOption = PowerMockito.mock(ImportOrderOption.class);", "+                Whitebox.setInternalState(importOrderOption, \"name\", \"NEW_OPTION_FOR_UT\");", "+                Whitebox.setInternalState(importOrderOption, \"ordinal\", 5);", "+                return importOrderOption;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e8945fb4dd5541a7027812bd53efdde", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "0382b7907b54e95408344863915a847dabc37f12", "commitAfterChange": "eb5896a4a1d66552f5100046413f15d62b485b62", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public ExpressionHandler getHandler(IndentationCheck indentCheck,         DetailAST ast, ExpressionHandler parent)", "signatureAfterChange": "     public AbstractExpressionHandler getHandler(IndentationCheck indentCheck,         DetailAST ast, AbstractExpressionHandler parent)", "diff": ["-    public ExpressionHandler getHandler(IndentationCheck indentCheck,", "-        DetailAST ast, ExpressionHandler parent) {", "-        final ExpressionHandler handler =", "+    public AbstractExpressionHandler getHandler(IndentationCheck indentCheck,", "+        DetailAST ast, AbstractExpressionHandler parent) {", "+        final AbstractExpressionHandler handler =", "-        ExpressionHandler expHandler = null;", "+        AbstractExpressionHandler expHandler = null;", "-                expHandler = (ExpressionHandler) handlerCtor.newInstance(", "+                expHandler = (AbstractExpressionHandler) handlerCtor.newInstance("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72fa425cde0ad36b0add3a875ff23334", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "443e534a3c98c0b30f24647da724fe918f17a006", "commitAfterChange": "66d73fe6189267fee3423e2e8d7fc2d68599a43f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ParseTreeInfoPanel()", "signatureAfterChange": "     public ParseTreeInfoPanel()", "diff": ["-        jTextArea = new JTextArea(20, 15);", "-        jTextArea.setEditable(false);", "-        treeTable.setEditor(jTextArea);", "-        treeTable.setLinePositionMap(lines2position);", "+        textArea = new JTextArea(20, 15);", "+        textArea.setEditable(false);", "+        treeTable.setEditor(textArea);", "+        treeTable.setLinePositionMap(linesToPosition);", "-        final JScrollPane sp2 = new JScrollPane(jTextArea);", "+        final JScrollPane sp2 = new JScrollPane(textArea);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f56b7c17e6336aa5deb09348c5ad2b2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setClasspath(Path aClasspath)", "signatureAfterChange": "     public void setClasspath(Path classpath)", "diff": ["-    public void setClasspath(Path aClasspath)", "+    public void setClasspath(Path classpath)", "-        if (mClasspath == null) {", "-            mClasspath = aClasspath;", "+        if (classpath == null) {", "+            this.classpath = classpath;", "-            mClasspath.append(aClasspath);", "+            this.classpath.append(classpath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8593aa2dacb33cb3d9380d2641d41392", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-            if (count > methodMax) {", "+            if (count > methodMaximum) {", "-                        count, methodMax);", "+                        count, methodMaximum);", "-            if (count > classMax) {", "+            if (count > classMaximum) {", "-                        count, classMax);", "+                        count, classMaximum);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88e09f4108f574e5e0d6b1d216964f5b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "commitAfterChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "          @Override         public void dragEnter(DropTargetDragEvent evt)", "signatureAfterChange": "          @Override         public void dragEnter(DropTargetDragEvent evt)", "diff": ["-                if (mC instanceof JComponent) {", "-                    final JComponent jc = (JComponent) mC;", "+                if (component instanceof JComponent) {", "+                    final JComponent jc = (JComponent) component;", "-                    jc.setBorder(mDragBorder);", "+                    jc.setBorder(dragBorder);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88e73926d9e64636806d1fd2313edc26", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d4f1261a61913b28d746aeb929bd23f372372a4c", "commitAfterChange": "fdd9ae82975be0bf0d8df991a50bad10b660aa2c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testBracesOff()         throws Exception", "signatureAfterChange": "      public void testBracesOff()         throws Exception", "diff": ["-            filepath + \":41: 'while' is not proceeded with whitespace.\",", "-            filepath + \":58: 'for' is not proceeded with whitespace.\",", "+            filepath + \":41: 'while' is not followed by whitespace.\",", "+            filepath + \":58: 'for' is not followed by whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fe2d5979e67720825d471ec83ecc299", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java", "commitBeforeChange": "f313f31ab30308796ce76d167ad1f08e79e28fdd", "commitAfterChange": "829a44bde41c971bcb61e5f476e222d2896e519f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        if (container.getType() != TokenTypes.CLASS_DEF) {", "+        if (container.getType() == TokenTypes.INTERFACE_DEF) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91359ab6bc9bee8e114c137f3f16ef08", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "65277d30422d758d9a6195fac042e239131942ec", "commitAfterChange": "7e34b7d4089b49b9cefe727f62e1319ac3e4e135", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private Set loadKeys(File aFile)", "signatureAfterChange": "     private Set loadKeys(File aFile)", "diff": ["-        InputStream inputStream = null;", "-        Set keys = new HashSet();", "+        final Set keys = new HashSet();", "+        InputStream inStream = null;", "-            inputStream = new FileInputStream(aFile);", "-            Properties properties = new Properties();", "-            properties.load(inputStream);", "+            inStream = new FileInputStream(aFile);", "+            Properties props = new Properties();", "+            props.load(inStream);", "-            Enumeration e = properties.propertyNames();", "+            final Enumeration e = props.propertyNames();", "-                inputStream.close();", "+                inStream.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92825cdb50d7169c72a536fe72ce53b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "         public Context(DetailAST aAST)", "signatureAfterChange": "         public Context(DetailAST ast)", "diff": ["-        public Context(DetailAST aAST)", "+        public Context(DetailAST ast)", "-            mAST = aAST;", "-            mCount = 0;", "+            this.ast = ast;", "+            count = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97cfbd780cbfe8e234c7a3bd19f76506", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "02ae6023b5b6f66e495393a6f87e4beb4b4ab3d0", "commitAfterChange": "584f7ee1232be96284255540e7249023c327ca8f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public final void leaveToken(DetailAST ast)", "signatureAfterChange": "      @Override     public final void leaveToken(DetailAST ast)", "diff": ["-            int dotIdx = currentClass.lastIndexOf('$');", "+            int dotIdx = currentClassName.lastIndexOf('$');", "-                dotIdx = currentClass.lastIndexOf('.');", "+                dotIdx = currentClassName.lastIndexOf('.');", "-                currentClass = \"\";", "+                currentClassName = \"\";", "-                currentClass = currentClass.substring(0, dotIdx);", "+                currentClassName = currentClassName.substring(0, dotIdx);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a79859f1a3899dbc0b36b65662a3d4d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void checkIndentation()", "signatureAfterChange": "     public void checkIndentation()", "diff": ["-        final DetailAST firstNode = firstNodesOnLines.get(firstNodesOnLines.firstKey());", "-        if (firstNode.getType() == TokenTypes.AT) {", "-            checkAnnotationIndentation(firstNode, firstNodesOnLines);", "+        final DetailAST firstLineNode = firstNodesOnLines.get(firstNodesOnLines.firstKey());", "+        if (firstLineNode.getType() == TokenTypes.AT) {", "+            checkAnnotationIndentation(firstLineNode, firstNodesOnLines);", "-        final int firstNodeIndent = getFirstNodeIndent(firstNode);", "+        final int firstNodeIndent = getFirstNodeIndent(firstLineNode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ab2ab098618784afb0edc2c4b486a89", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "         public boolean isOn()", "signatureAfterChange": "         public boolean isReportingOn()", "diff": ["-        public boolean isOn() {", "-            return on;", "+        public boolean isReportingOn() {", "+            return reportingOn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4f8f46027b9e4d81d860d5baab6b95c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/HtmlTag.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-        final int startOfText = mPosition;", "+        final int startOfText = position;", "-            Math.min(startOfText + HtmlTag.MAX_TEXT_LEN, mText.length());", "-        return mText.substring(startOfText, endOfText);", "+            Math.min(startOfText + HtmlTag.MAX_TEXT_LEN, text.length());", "+        return text.substring(startOfText, endOfText);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab3f1b15d8657b76592e8b96ef688036", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck.java", "commitBeforeChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "commitAfterChange": "29027109bf962f47b6a6000fdca69b5679ce4b43", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private URI resolveHeaderFile() throws IOException", "signatureAfterChange": "     private URI resolveHeaderFile() throws IOException", "diff": ["-            final URL url = new URL(mFilename);", "+            final URL url = new URL(filename);", "-            final File file = new File(mFilename);", "+            final File file = new File(filename);", "-                            .getResource(mFilename);", "+                            .getResource(filename);", "-                        throw new FileNotFoundException(mFilename);", "+                        throw new FileNotFoundException(filename);", "-                    throw new FileNotFoundException(mFilename);", "+                    throw new FileNotFoundException(filename);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acc74c454f6f10ea96ae0d3a86b03026", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/doclets/TokenTypesDoclet.java", "commitBeforeChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "commitAfterChange": "319f297e13e5c175a62489ff555cff7c463d3c7b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static boolean validOptions(String[][] aOptions,                                        DocErrorReporter aReporter)", "signatureAfterChange": "     public static boolean validOptions(String[][] options,                                        DocErrorReporter reporter)", "diff": ["-    public static boolean validOptions(String[][] aOptions,", "-                                       DocErrorReporter aReporter)", "+    public static boolean validOptions(String[][] options,", "+                                       DocErrorReporter reporter)", "-        for (final String[] opt : aOptions) {", "+        for (final String[] opt : options) {", "-                    aReporter.printError(\"Only one -destfile option allowed.\");", "+                    reporter.printError(\"Only one -destfile option allowed.\");", "-            aReporter.printError(message);", "+            reporter.printError(message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae2353edebacb8edcd5ccf118c165ac7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "443e534a3c98c0b30f24647da724fe918f17a006", "commitAfterChange": "66d73fe6189267fee3423e2e8d7fc2d68599a43f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void openAst(DetailAST parseTree, final Component parent)", "signatureAfterChange": "      public void openAst(DetailAST parseTree, final Component parent)", "diff": ["-        getLines2position().clear();", "+        getLinesToPosition().clear();", "-        getLines2position().add(0);", "+        getLinesToPosition().add(0);", "-        if (!jTextArea.getText().isEmpty()) {", "-            jTextArea.replaceRange(\"\", 0, jTextArea.getText().length());", "+        if (!textArea.getText().isEmpty()) {", "+            textArea.replaceRange(\"\", 0, textArea.getText().length());", "-        jTextArea.moveCaretPosition(0);", "+        textArea.moveCaretPosition(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3cd5e5c5eb3dd863379f336de615d00", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultConfiguration.java", "commitBeforeChange": "17c08660fa40c844057c33e2de04c67af41393b0", "commitAfterChange": "0989b5c3954e46b156bf5d2344327f650ddafc8d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Map<String, String> getMessages()", "signatureAfterChange": "     public ImmutableMap<String, String> getMessages()", "diff": ["-    public Map<String, String> getMessages()", "+    public ImmutableMap<String, String> getMessages()", "-        return Collections.unmodifiableMap(mMessages);", "+        return ImmutableMap.copyOf(mMessages);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b40930366bf65616e6b368eacf9b5982", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenTextCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            String message = getMessage();", "-            if (message.isEmpty()) {", "-                message = MSG_KEY;", "+            String customMessage = getMessage();", "+            if (customMessage.isEmpty()) {", "+                customMessage = MSG_KEY;", "-                message,", "+                customMessage,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4b910de21ab98992784a068533a1eca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "          @Override         @SuppressWarnings(\"unchecked\")         public void drop(DropTargetDropEvent evt)", "signatureAfterChange": "          @Override         @SuppressWarnings(\"unchecked\")         public void drop(DropTargetDropEvent evt)", "diff": ["-                final Transferable tr = evt.getTransferable();", "+                final Transferable transferable = evt.getTransferable();", "-                if (tr.isDataFlavorSupported(DataFlavor.javaFileListFlavor)) {", "+                if (transferable.isDataFlavorSupported(DataFlavor.javaFileListFlavor)) {", "-                    final List<File> fileList = (List<File>) tr.getTransferData(", "+                    final List<File> fileList = (List<File>) transferable.getTransferData(", "-                    final JComponent jc = (JComponent) component;", "-                    jc.setBorder(normalBorder);", "+                    final JComponent comp = (JComponent) component;", "+                    comp.setBorder(normalBorder);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d508795628f3423c74389ffeb283961d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "commitAfterChange": "4c1148db9982918e65f8d1156e8fb9c07b206fc9", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-                for (DetailAST var : state.values()) {", "-                    log(var.getLineNo(), var.getColumnNo(), MSG_KEY, var", "+                for (DetailAST node : state.values()) {", "+                    log(node.getLineNo(), node.getColumnNo(), MSG_KEY, node"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9e6fcd787c0530a7a233643a8465254", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressElementTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testDecideByFileNameAndModuleMatching_CheckRegExpMatch()", "signatureAfterChange": "      @Test     public void testDecideByFileNameAndModuleMatchingCheckRegExpMatch()", "diff": ["-    public void testDecideByFileNameAndModuleMatching_CheckRegExpMatch() {", "+    public void testDecideByFileNameAndModuleMatchingCheckRegExpMatch() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db4c167849e29f9aab7d98d72a94b596", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "         public FieldFrame(FieldFrame aParent, boolean aStaticType)", "signatureAfterChange": "         public FieldFrame(FieldFrame parent, boolean staticType)", "diff": ["-        public FieldFrame(FieldFrame aParent, boolean aStaticType)", "+        public FieldFrame(FieldFrame parent, boolean staticType)", "-            mParent = aParent;", "-            mStaticType = aStaticType;", "+            this.parent = parent;", "+            this.staticType = staticType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7e3f000560093f9ba37dfe7cc43882e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Check.java", "commitBeforeChange": "dcf0d774fa59e2131e4bb2f50523da10ce3305af", "commitAfterChange": "7af9e82fc16545a8153b529fba91df0fb310e2e6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public final void setFilename(String aFilename)", "signatureAfterChange": "     public final void setFileContents(FileContents aContents)", "diff": ["-    public final void setFilename(String aFilename)", "+    public final void setFileContents(FileContents aContents)", "-        getTreeContext().put(FILENAME_ATTRIBUTE, aFilename);", "+        getTreeContext().put(FILE_CONTENTS_ATTRIBUTE, aContents);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9b3d2fa1ca181db36573ea47ee10ae0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java", "commitBeforeChange": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4", "commitAfterChange": "c3674faad8a38656e910750fb22a7eef714fb8a7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        final DetailAST declAST = typeAST.getParent();", "-        if (declAST.getType() == TokenTypes.METHOD_DEF) {", "+        final DetailAST parentAst = typeAST.getParent();", "+        if (parentAst.getType() == TokenTypes.METHOD_DEF) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb5065345f3d8e0fb12157ac97d99a58", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/RegexpCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setMessage(String aMessage)", "signatureAfterChange": "     public void setMessage(String message)", "diff": ["-    public void setMessage(String aMessage)", "+    public void setMessage(String message)", "-        mMessage = (aMessage == null) ? \"\" : aMessage;", "+        this.message = (message == null) ? \"\" : message;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef504ab0aea683047d5d3bbe712a56e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AnnotationLocationCheck.java", "commitBeforeChange": "9250096ccfee8b3d7a942106a25a9623c66fa54a", "commitAfterChange": "f9e79c3905e3bf5c18d63853b96aac371bc05f80", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public final void setAllowSameLineSingleParrametterlessAnnotation(boolean aAllow)", "signatureAfterChange": "     public final void setAllowSamelineSingleParameterlessAnnotation(boolean aAllow)", "diff": ["-    public final void setAllowSameLineSingleParrametterlessAnnotation(boolean aAllow)", "+    public final void setAllowSamelineSingleParameterlessAnnotation(boolean aAllow)", "-        mAllowSameLineSingleParametterlessAnnotation = aAllow;", "+        mAllowSamelineSingleParameterlessAnnotation = aAllow;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f095b2c28f3dc346232ec66db9655ffa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public int getLineNo()", "signatureAfterChange": "     public int getLineNo()", "diff": ["-        if (mLineNo == NOT_INITIALIZED) {", "+        if (lineNo == NOT_INITIALIZED) {", "-        return mLineNo;", "+        return lineNo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f23b90dd4720855f5fd45aa7d034513c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "443e534a3c98c0b30f24647da724fe918f17a006", "commitAfterChange": "66d73fe6189267fee3423e2e8d7fc2d68599a43f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void openFile(File file, final Component parent)", "signatureAfterChange": "      public void openFile(File file, final Component parent)", "diff": ["-                getLines2position().clear();", "+                getLinesToPosition().clear();", "-                getLines2position().add(0);", "+                getLinesToPosition().add(0);", "-                    getLines2position().add(jTextArea.getText().length());", "-                    jTextArea.append(element + \"\\n\");", "+                    getLinesToPosition().add(textArea.getText().length());", "+                    textArea.append(element + \"\\n\");", "-                if (!jTextArea.getText().isEmpty()) {", "-                    jTextArea.replaceRange(\"\", 0, jTextArea.getText()", "+                if (!textArea.getText().isEmpty()) {", "+                    textArea.replaceRange(\"\", 0, textArea.getText()", "-                    jTextArea.append(element + \"\\n\");", "+                    textArea.append(element + \"\\n\");", "-                jTextArea.moveCaretPosition(0);", "+                textArea.moveCaretPosition(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f43f37798fd34216ff50898c8a048165", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Utils.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static RE createRE(String aPattern)         throws ConversionException", "signatureAfterChange": "     public static Pattern createPattern(String aPattern)         throws ConversionException", "diff": ["-    public static RE createRE(String aPattern)", "+    public static Pattern createPattern(String aPattern)", "-        RE retVal = null;", "+        Pattern retVal = null;", "-            retVal = getRE(aPattern);", "+            retVal = getPattern(aPattern);", "-        catch (RESyntaxException e) {", "+        catch (PatternSyntaxException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f896238058e527987bf73969c035e9fc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "ecc852d48b9d26398926b255e3cd68572119c106", "commitAfterChange": "751257987b2ef5f301e2deb3b55302196e5015af", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 55, "signatureBeforeChange": "     private void checkImports()", "signatureAfterChange": "     private void checkImports()", "diff": ["-                log(imp.getLineNo(), \"import.lang\");", "+                mMessages.add(imp.getLineNo(), \"import.lang\");", "-                log(imp.getLineNo(), \"import.same\");", "+                mMessages.add(imp.getLineNo(), \"import.same\");", "-                log(imp.getLineNo(), \"import.unused\", imp.getText());", "+                mMessages.add(imp.getLineNo(), \"import.unused\", imp.getText());", "-                log(imp.getLineNo(), \"import.illegal\", imp.getText());", "+                mMessages.add(imp.getLineNo(), \"import.illegal\", imp.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb33336846a42d97f03e6df7802bb007", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentLevel.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-        if (mLevels.cardinality() == 1) {", "-            return String.valueOf(mLevels.nextSetBit(0));", "+        if (levels.cardinality() == 1) {", "+            return String.valueOf(levels.nextSetBit(0));", "-        for (int i = mLevels.nextSetBit(0); i >= 0;", "-            i = mLevels.nextSetBit(i + 1))", "+        for (int i = levels.nextSetBit(0); i >= 0;", "+            i = levels.nextSetBit(i + 1))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc4f974042e83eff3ee3750e9fbad46c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "a13ebd482ce5dd891ba99d4c22a7cd5ff7d8e2dc", "commitAfterChange": "dad4fa599aa3570980fcaff4cb5f37941847a7a1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testFinishLocalSetupFullyInitialized() throws Exception", "signatureAfterChange": "      @Test     public void testFinishLocalSetupFullyInitialized() throws Exception", "diff": ["-        final Checker c = new Checker();", "-        c.setModuleClassLoader(Thread.currentThread().getContextClassLoader());", "+        final Checker checker = new Checker();", "+        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());", "-        c.setModuleFactory(factory);", "+        checker.setModuleFactory(factory);", "-        c.finishLocalSetup();", "+        checker.finishLocalSetup();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe2a0bc0d93aee0450e438885dda7f7d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java", "commitBeforeChange": "9dd69b267b626af533ddf8bc0d37b4fd3744fa6e", "commitAfterChange": "57b908199dfa5c2c9bf9388d92925ccfb312812f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static FilterSet loadSuppressions(String filename)         throws CheckstyleException", "signatureAfterChange": "     public static FilterSet loadSuppressions(String filename)         throws CheckstyleException", "diff": ["-                        throw new CheckstyleException(\"unable to find \" + filename);", "+                        throw new CheckstyleException(UNABLE_TO_FIND_ERROR_MESSAGE + filename);", "-                    throw new CheckstyleException(\"unable to find \" + filename, e);", "+                    throw new CheckstyleException(UNABLE_TO_FIND_ERROR_MESSAGE + filename, e);"]}]}