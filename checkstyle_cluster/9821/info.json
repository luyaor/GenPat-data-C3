{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac941a92d5ea3fc1bd9cccc2d9db5e5f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2023efa6d08946201d6de79b7a45b7de", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "24f73e69dc69add5fb33af0f54af7ad186b285eb", "commitAfterChange": "75da2ef6ac77766baac7016606457dc1f7bbfd7b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testWithAnnotations() throws Exception", "signatureAfterChange": "      @Test     public void testWithAnnotations() throws Exception", "diff": ["-        checkConfig.addAttribute(\"tokens\", \"LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, \"", "-            + \"LITERAL_ELSE, CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, \"", "-            + \"STATIC_INIT, INSTANCE_INIT\");", "+        checkConfig.addAttribute(\"tokens\", \"LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, \"", "+            + \"LITERAL_IF, LITERAL_ELSE, CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, \"", "+            + \"LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b9f04d60eaa25e0f036fdfa457e9515", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "24f73e69dc69add5fb33af0f54af7ad186b285eb", "commitAfterChange": "75da2ef6ac77766baac7016606457dc1f7bbfd7b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testAloneOrSingleLine() throws Exception", "signatureAfterChange": "      @Test     public void testAloneOrSingleLine() throws Exception", "diff": ["-        checkConfig.addAttribute(\"tokens\", \"LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, \"", "-            + \"LITERAL_ELSE, CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, \"", "-            + \"STATIC_INIT, INSTANCE_INIT\");", "+        checkConfig.addAttribute(\"tokens\", \"LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, \"", "+            + \"LITERAL_IF, LITERAL_ELSE, CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, \"", "+            + \"LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT\");"]}]}