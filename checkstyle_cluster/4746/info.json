{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a6393e4dcabaffcb9dbc185739ce835", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5de87c6fa8eb68146eeafc820ad410d1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/NonEmptyAtclauseDescriptionCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testCheck()             throws Exception", "signatureAfterChange": "     @Test     public void testCheck()             throws Exception", "diff": ["-            \"26: At-clause should have a non-empty description.\",", "+            \"26: \" + getCheckMessage(MSG_KEY),", "-            \"27: At-clause should have a non-empty description.\",", "+            \"27: \" + getCheckMessage(MSG_KEY),", "-            \"28: At-clause should have a non-empty description.\",", "+            \"28: \" + getCheckMessage(MSG_KEY),", "-            \"37: At-clause should have a non-empty description.\",", "+            \"37: \" + getCheckMessage(MSG_KEY),", "-            \"38: At-clause should have a non-empty description.\",", "+            \"38: \" + getCheckMessage(MSG_KEY),", "-            \"39: At-clause should have a non-empty description.\",", "-            \"75: At-clause should have a non-empty description.\",", "-            \"76: At-clause should have a non-empty description.\",", "-            \"77: At-clause should have a non-empty description.\",", "-            \"78: At-clause should have a non-empty description.\",", "-            \"79: At-clause should have a non-empty description.\",", "-            \"80: At-clause should have a non-empty description.\",", "-            \"89: At-clause should have a non-empty description.\",", "-            \"90: At-clause should have a non-empty description.\",", "-            \"91: At-clause should have a non-empty description.\",", "-            \"92: At-clause should have a non-empty description.\",", "-            \"93: At-clause should have a non-empty description.\",", "+            \"39: \" + getCheckMessage(MSG_KEY),", "+            \"75: \" + getCheckMessage(MSG_KEY),", "+            \"76: \" + getCheckMessage(MSG_KEY),", "+            \"77: \" + getCheckMessage(MSG_KEY),", "+            \"78: \" + getCheckMessage(MSG_KEY),", "+            \"79: \" + getCheckMessage(MSG_KEY),", "+            \"80: \" + getCheckMessage(MSG_KEY),", "+            \"89: \" + getCheckMessage(MSG_KEY),", "+            \"90: \" + getCheckMessage(MSG_KEY),", "+            \"91: \" + getCheckMessage(MSG_KEY),", "+            \"92: \" + getCheckMessage(MSG_KEY),", "+            \"93: \" + getCheckMessage(MSG_KEY),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea17045351c4c0a0fe9f870c8869062b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIncorrect() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrect() throws Exception", "diff": ["-            \"7: <p> tag should be precede with empty line.\",", "-            \"8: <p> tag should be precede with empty line.\",", "-            \"14: <p> tag should be precede with empty line.\",", "-            \"23: <p> tag should be precede with empty line.\",", "-            \"32: <p> tag should be precede with empty line.\",", "-            \"32: Redundant <p> tag.\",", "-            \"33: <p> tag should be precede with empty line.\",", "-            \"34: <p> tag should be precede with empty line.\",", "-            \"35: <p> tag should be precede with empty line.\",", "-            \"39: <p> tag should be precede with empty line.\",", "-            \"45: Redundant <p> tag.\",", "-            \"50: <p> tag should be precede with empty line.\",", "-            \"51: <p> tag should be precede with empty line.\",", "-            \"61: Redundant <p> tag.\",", "-            \"62: Empty line should be followed by <p> tag on the next line.\",", "-            \"70: <p> tag should be precede with empty line.\",", "-            \"75: <p> tag should be precede with empty line.\",", "+            \"7: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"8: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"14: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"23: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"32: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"32: \" + getCheckMessage(MSG_REDUNDANT_PARAGRAPH),", "+            \"33: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"34: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"35: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"39: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"45: \" + getCheckMessage(MSG_REDUNDANT_PARAGRAPH),", "+            \"50: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"51: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"61: \" + getCheckMessage(MSG_REDUNDANT_PARAGRAPH),", "+            \"62: \" + getCheckMessage(MSG_TAG_AFTER),", "+            \"70: \" + getCheckMessage(MSG_LINE_BEFORE),", "+            \"75: \" + getCheckMessage(MSG_LINE_BEFORE),"]}]}