{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f997f6c93829383e2276d01160b4c5a1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "633c99ee2db71473a5be9009073ab585", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void setOffCommentFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setOffCommentFormat(String format)         throws ConversionException", "diff": ["-    public void setOffCommentFormat(String aFormat)", "+    public void setOffCommentFormat(String format)", "-            mOffRegexp = Utils.getPattern(aFormat);", "+            offRegexp = Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "969469b6401b4e1fa8eb346e5ef60baa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void setOnCommentFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setOnCommentFormat(String format)         throws ConversionException", "diff": ["-    public void setOnCommentFormat(String aFormat)", "+    public void setOnCommentFormat(String format)", "-            mOnRegexp = Utils.getPattern(aFormat);", "+            onRegexp = Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}]}