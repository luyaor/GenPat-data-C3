{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac6920e9466f352ba3eb861894cee32f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f0dcfe9a67f4cceb77a0d57f07b69d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "6a30bbf32961d8bc124754b78abbfe2b32d3158f", "commitAfterChange": "5ace8fc09d4e301959a420f0f36de73c84f7a820", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public void testEmptyConfiguration()         throws Exception", "signatureAfterChange": "          public void testEmptyConfiguration()         throws Exception", "diff": ["-        Configuration config =", "-            loadConfiguration(\"empty_configuration.xml\");", "-                    ", "-        GlobalProperties globalProps =", "-            new GlobalProperties(new Properties(), System.out);", "-        assertEquals(\"properties\", globalProps.getProperties(),", "-            config.getProperties());", "-                ", "-        CheckConfiguration[] checkConfigs = config.getCheckConfigurations();", "-        assertEquals(\"checkConfigs.length\", 0, checkConfigs.length);", "+//        Configuration config =", "+//            loadConfiguration(\"empty_configuration.xml\");", "+//                    ", "+//        GlobalProperties globalProps =", "+//            new GlobalProperties(new Properties(), System.out);", "+//        assertEquals(\"properties\", globalProps.getProperties(),", "+//            config.getProperties());", "+//                ", "+//        CheckConfiguration[] checkConfigs = config.getCheckConfigurations();", "+//        assertEquals(\"checkConfigs.length\", 0, checkConfigs.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9270bca3b133c29fa1a44eb1eff12906", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "440cf6836f278602a790d764f257777be80d8b9e", "commitAfterChange": "686afc521a11088c57632352eb6fd60a682b03d6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "          public void testEmptyConfiguration()         throws Exception", "signatureAfterChange": "      public void testEmptyConfiguration() throws Exception", "diff": ["-    ", "-    public void testEmptyConfiguration()", "-        throws Exception", "+", "+    public void testEmptyConfiguration() throws Exception", "-//        Configuration config =", "-//            loadConfiguration(\"empty_configuration.xml\");", "-//                    ", "-//        GlobalProperties globalProps =", "-//            new GlobalProperties(new Properties(), System.out);", "-//        assertEquals(\"properties\", globalProps.getProperties(),", "-//            config.getProperties());", "-//                ", "-//        CheckConfiguration[] checkConfigs = config.getCheckConfigurations();", "-//        assertEquals(\"checkConfigs.length\", 0, checkConfigs.length);", "+        final DefaultConfiguration config =", "+            (DefaultConfiguration) loadConfiguration(\"empty_configuration.xml\");", "+        verifyConfigNode(config, \"configuration\", 0, new Properties());"]}]}