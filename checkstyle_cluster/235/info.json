{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c24a71712b7a8422b2f4182b86ea752e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bc72f67c9f2ec0df88d9857f20e75bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "9e29d2c98961b47c897c02e75dd2a672d1045b31", "commitAfterChange": "a031901307ecd3b1ae035d7ac185bc221472b396", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void checkHtml(TextBlock aComment)", "signatureAfterChange": "     private void checkHtml(final DetailAST aAST, final TextBlock aComment)", "diff": ["-    private void checkHtml(TextBlock aComment)", "+    private void checkHtml(final DetailAST aAST, final TextBlock aComment)", "+        final List typeParameters =", "+            CheckUtils.getTypeParameterNames(aAST);", "-            if (!isSingleTag(htag) && !htag.getId().equals(lastFound)) {", "+            if (!isSingleTag(htag)", "+                && !htag.getId().equals(lastFound)", "+                && !typeParameters.contains(htag.getId()))", "+            {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c08757a47267e1a452b06a833d7fafe1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private boolean containsForbiddenFragment(String aFirstSentence)", "signatureAfterChange": "     private boolean containsForbiddenFragment(String firstSentence)", "diff": ["-    private boolean containsForbiddenFragment(String aFirstSentence)", "+    private boolean containsForbiddenFragment(String firstSentence)", "-        // This regexp is used to convert multiline javadoc to single line without stars.", "-        String javadocText = aFirstSentence.replaceAll(\"\\n[ ]+(\\\\*)|^[ ]+(\\\\*)\", \" \");", "+        // This regexp is used to convert multiline javdoc to single line without stars.", "+        String javadocText = firstSentence.replaceAll(\"\\n[ ]+(\\\\*)|^[ ]+(\\\\*)\", \" \");", "-        return mForbiddenSummaryFragments.matcher(javadocText).find();", "+        return forbiddenSummaryFragments.matcher(javadocText).find();"]}]}