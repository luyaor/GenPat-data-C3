{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "441114a358c472b44df177e534ab560d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e984c47489b0753a29ec63ecc308d46", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpMultilineCheckTest.java", "commitBeforeChange": "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2", "commitAfterChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testIgnoreCaseTrue() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCaseTrue() throws Exception", "diff": ["-            \"69: Line matches the illegal pattern '\" + illegal + \"'.\",", "+            \"69: \" + getCheckMessage(REGEXP_EXCEEDED, illegal),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1398b3cb35860737e38ef5a48c779bc1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheckTest.java", "commitBeforeChange": "0b98c0389e2cf745cb125a89dece57538fc672b7", "commitAfterChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testIntegerOverflow() throws Exception", "signatureAfterChange": "      @Test     public void testIntegerOverflow() throws Exception", "diff": ["-            \"9:5: NPath Complexity is \" + expectedComplexity + \" (max allowed is 0).\",", "+            \"9:5: \" + getCheckMessage(MSG_KEY, largerThanMaxInt, 0),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "240a8591d3b0c11d12dfe613df5a9a6a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpMultilineCheckTest.java", "commitBeforeChange": "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2", "commitAfterChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testIt() throws Exception", "signatureAfterChange": "      @Test     public void testIt() throws Exception", "diff": ["-            \"69: Line matches the illegal pattern '\" + illegal + \"'.\",", "+            \"69: \" + getCheckMessage(REGEXP_EXCEEDED, illegal),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "250a81b5af364fc457a6217cadcb9e8b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheckTest.java", "commitBeforeChange": "5d698f4a58b66958b13cb04735fefa3f4fa4b9e7", "commitAfterChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testMax() throws Exception", "signatureAfterChange": "      @Test     public void testMax() throws Exception", "diff": ["-            \"22:20: Throws count is 3 (max allowed is 2).\",", "+            \"22:20: \" + getCheckMessage(MSG_KEY, 3, 2),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27cf3ffa0c9eb4e98946c89f346559c0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2", "commitAfterChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testIt() throws Exception", "signatureAfterChange": "      @Test     public void testIt() throws Exception", "diff": ["-            \"69: Line matches the illegal pattern '\" + illegal + \"'.\",", "+            \"69: \" + getCheckMessage(REGEXP_EXCEEDED, illegal),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "572a38decf65ac450c20dc5cb9b2c88e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheckTest.java", "commitBeforeChange": "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2", "commitAfterChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testIgnoreCaseTrue() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCaseTrue() throws Exception", "diff": ["-            \"69: Line matches the illegal pattern '\" + illegal + \"'.\",", "+            \"69: \" + getCheckMessage(REGEXP_EXCEEDED, illegal),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6420660e742de13fc9b32c076dd21dc6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheckTest.java", "commitBeforeChange": "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2", "commitAfterChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testIt() throws Exception", "signatureAfterChange": "      @Test     public void testIt() throws Exception", "diff": ["-            \"69: Line matches the illegal pattern '\" + illegal + \"'.\",", "+            \"69: \" + getCheckMessage(REGEXP_EXCEEDED, illegal),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7211aaa7d4003495941b3a06984d8b86", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheckTest.java", "commitBeforeChange": "0b98c0389e2cf745cb125a89dece57538fc672b7", "commitAfterChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void test() throws Exception", "signatureAfterChange": "     @Test     public void test() throws Exception", "diff": ["-            \"6:1: Class Fan-Out Complexity is 3 (max allowed is 0).\",", "+            \"6:1: \" + getCheckMessage(MSG_KEY, 3, 0),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83027e7ebdc7cf78df1328325f848338", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheckTest.java", "commitBeforeChange": "4cc300a8e53fec7264ecfb5702369de14fd8a242", "commitAfterChange": "2e3654c59be793a9e9d06f38f0624bfae0e075bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault()         throws Exception", "signatureAfterChange": "     @Test     public void testDefault()         throws Exception", "diff": ["-            \"194:10: More than 7 parameters.\",", "+            \"194:10: More than 7 parameters (found 9).\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bfdc87a5f00f741a9cae3f2c15ba7b6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/NestedTryDepthCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCustonestingDepth() throws Exception", "signatureAfterChange": "      @Test     public void testCustonestingDepth() throws Exception", "diff": ["-            \"34:21: Nested try depth is 3 (max allowed is 2).\",", "+            \"34:21: \" + getCheckMessage(MSG_KEY, 3, 2),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b38138613b127e01604ed05e7478aa2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2", "commitAfterChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testIgnoreCommentsInlineEnd() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCommentsInlineEnd() throws Exception", "diff": ["-            \"22: Line matches the illegal pattern '\" + illegal + \"'.\",", "+            \"22: \" + getCheckMessage(REGEXP_EXCEEDED, illegal),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6c63f918be5d2a0af26d0442830b484", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheckTest.java", "commitBeforeChange": "5d698f4a58b66958b13cb04735fefa3f4fa4b9e7", "commitAfterChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testFormat() throws Exception", "signatureAfterChange": "      @Test     public void testFormat() throws Exception", "diff": ["-            \"34:13: The field 'errorCode' must be declared final.\",", "+            \"34:13: \" + getCheckMessage(MSG_KEY, \"errorCode\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb5314ebf6432f154dd85cd58a2ff300", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2", "commitAfterChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testIgnoreCommentsFalseCStyle() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCommentsFalseCStyle() throws Exception", "diff": ["-            \"19: Line matches the illegal pattern '\" + illegal + \"'.\",", "+            \"19: \" + getCheckMessage(REGEXP_EXCEEDED, illegal),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4fedd77c2e24ed9e4e98d5867cd1ea7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/OuterTypeNumberCheckTest.java", "commitBeforeChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "commitAfterChange": "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "     @Test     public void testDefault() throws Exception", "diff": ["-            \"6:1: Outer types defined is 3 (max allowed is 1).\",", "+            \"6:1: \" + getCheckMessage(MSG_KEY, 3, 1),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d71a0ec30310b4215d8dccae00407fd1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheckTest.java", "commitBeforeChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "commitAfterChange": "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault()         throws Exception", "signatureAfterChange": "     @Test     public void testDefault()         throws Exception", "diff": ["-            \"194:10: More than 7 parameters (found 9).\",", "+            \"194:10: \" + getCheckMessage(MSG_KEY, 7, 9),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d77deecd3eb9167ae482fa59f720fbe3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2", "commitAfterChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testIgnoreCommentsInlineMiddle() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCommentsInlineMiddle() throws Exception", "diff": ["-            \"23: Line matches the illegal pattern '\" + illegal + \"'.\",", "+            \"23: \" + getCheckMessage(REGEXP_EXCEEDED, illegal),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2b8bb63ea62e176b6720e82937a0aa0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testNative() throws Exception", "signatureAfterChange": "      @Test     public void testNative() throws Exception", "diff": ["-            \"20:12: Using 'native' is not allowed.\",", "+            \"20:12: \" + getCheckMessage(MSG_KEY, \"native\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e43630f2f989b662b03891fbaa2f2ed5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2", "commitAfterChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testIgnoreCaseTrue() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCaseTrue() throws Exception", "diff": ["-            \"69: Line matches the illegal pattern '\" + illegal + \"'.\",", "+            \"69: \" + getCheckMessage(REGEXP_EXCEEDED, illegal),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9695eb53567d4e99e1aa9fafae6bd2e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2", "commitAfterChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testIgnoreCommentsFalseCppStyle() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCommentsFalseCppStyle() throws Exception", "diff": ["-            \"4: Line matches the illegal pattern '\" + illegal + \"'.\",", "+            \"4: \" + getCheckMessage(REGEXP_EXCEEDED, illegal),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa2abb0463f70f7d01cb8e735f2ba0d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenTextCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testCaseSensitive()         throws Exception", "signatureAfterChange": "     @Test     public void testCaseSensitive()         throws Exception", "diff": ["-            \"24:28: Token text matches the illegal pattern 'a href'.\",", "+            \"24:28: \" + getCheckMessage(MSG_KEY, \"a href\"),"]}]}