{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f3764344ddcdb19a6efead48efe37dc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05c653def555472339f79994cce1d7f4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testWithFewArgsWithoutTypeOneLineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithFewArgsWithoutTypeOneLineBody()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest8.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda8.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b3f62cf9ae5c0d1a508dbb43885214b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "c977a637ce4d87bd3643420ec52c39e724dbdde3", "commitAfterChange": "ff5ffa96021281519cc087dfd35609a06340f349", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "          public void testIgnoreNegativeOctalHex()          throws Exception", "signatureAfterChange": "          public void testIgnoreNegativeOctalHex()          throws Exception", "diff": ["-              \"131:32: '378' is a magic number.\",", "+              \"131:20: '378' is a magic number.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4146c9cb22e0e0c775ec1fa5024ca694", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void allowNonPrintableEscapes() throws Exception", "signatureAfterChange": "      @Test     public void allowNonPrintableEscapes() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputAvoidEscapedUnicodeCharactersCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAvoidEscapedUnicodeCharacters.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "741408b2edf676e513db691d022410c8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefault()         throws Exception", "signatureAfterChange": "      @Test     public void testDefault()         throws Exception", "diff": ["+", "-            \"52:29: \" + getCheckMessage(LINE_NEW, \"&\"),", "+            \"52:30: \" + getCheckMessage(LINE_NEW, \"&\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aabfe7b0cc33267c0657ae0f932b372c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "commitAfterChange": "7e5e919ce7db115c5893fa23e07a3cf1acfc3f10", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testTypeAndVariablesAndMethodNamesWithIgnores() throws Exception", "signatureAfterChange": "      @Test     public void testTypeAndVariablesAndMethodNamesWithIgnores() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"naming/InputAbbreviationAsWordInTypeNameCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abab7a02c552710e16dc5085249d9c69", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter6programpractice/rule62donotignoreexceptions/EmptyBlockTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void emptyBlockTestCatch() throws Exception", "signatureAfterChange": "      @Test     public void emptyBlockTestCatch() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"EmptyBlockInputCatch\");", "+        final String filePath = builder.getFilePath(\"InputEmptyBlockCatch\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4ae3b9bc6191f2baee14717c75afb55", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule3421overloadsplit/OverloadMethodsDeclarationOrderTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}]}