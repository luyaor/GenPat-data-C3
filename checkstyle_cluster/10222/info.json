{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "788c7cbf7a7df6d9a1607d08f937a402", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1847422258fd4b169df1986c05ab4296", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "e9ec5bfbd5ab91852c3ec1b30492df5c06cdd3b1", "commitAfterChange": "904de34fcd984edce3d6042a5a17e2a969254588", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private boolean isColonOfCaseOrDefault(int currentType, int parentType)", "signatureAfterChange": "     private boolean isColonOfCaseOrDefault(int currentType, int parentType)", "diff": ["-        if (currentType == TokenTypes.COLON) {", "-            //we do not want to check colon for cases and defaults", "-            if (parentType == TokenTypes.LITERAL_DEFAULT", "-                || parentType == TokenTypes.LITERAL_CASE) {", "-                return true;", "-            }", "-            else if (parentType == TokenTypes.FOR_EACH_CLAUSE", "-                && ignoreEnhancedForColon) {", "-                return true;", "-            }", "-        }", "-        return false;", "+        return currentType == TokenTypes.COLON", "+                && (parentType == TokenTypes.LITERAL_DEFAULT", "+                    || parentType == TokenTypes.LITERAL_CASE);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e92444b77fe3c0b0d13d94a1c597fe04", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java", "commitBeforeChange": "2282f82cb7fd2055245d3bcb4b76c6c27fdd5455", "commitAfterChange": "f1dc9b205d1ccdba85e34f4cb7adf9ffd4af2361", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static boolean hasLineBreakBefore(DetailAST rightCurly)", "signatureAfterChange": "     private static boolean hasLineBreakBefore(DetailAST rightCurly)", "diff": ["-        if (rightCurly != null) {", "-            final DetailAST previousToken = rightCurly.getPreviousSibling();", "-            if (previousToken != null", "-                    && rightCurly.getLineNo() == previousToken.getLineNo()) {", "-                return false;", "-            }", "-        }", "-        return true;", "+        final DetailAST previousToken = rightCurly.getPreviousSibling();", "+        return previousToken == null", "+                || rightCurly.getLineNo() != previousToken.getLineNo();"]}]}