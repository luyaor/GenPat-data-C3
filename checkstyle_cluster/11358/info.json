{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f049b564734a2f3436b10fbdce4400c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57cedbe8f43b8a7f19499073d8b40aa8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "7d5e825abd68a4ffcb86865149b917edf76a47b6", "commitAfterChange": "f9374238b2870cad6c090589ec18933983e1c902", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "         public Tag(int line, int column, String text, boolean on)             throws ConversionException", "signatureAfterChange": "         public Tag(int line, int column, String text, boolean on, SuppressionCommentFilter filter)             throws ConversionException", "diff": ["-        public Tag(int line, int column, String text, boolean on)", "+        public Tag(int line, int column, String text, boolean on, SuppressionCommentFilter filter)", "-            tagCheckRegexp = checkRegexp;", "+            tagCheckRegexp = filter.checkRegexp;", "-                        expandFromCoont(text, checkFormat, onRegexp);", "+                        expandFromCoont(text, filter.checkFormat, filter.onRegexp);", "-                    if (messageFormat != null) {", "+                    if (filter.messageFormat != null) {", "-                            expandFromCoont(text, messageFormat, onRegexp);", "+                            expandFromCoont(text, filter.messageFormat, filter.onRegexp);", "-                        expandFromCoont(text, checkFormat, offRegexp);", "+                        expandFromCoont(text, filter.checkFormat, filter.offRegexp);", "-                    if (messageFormat != null) {", "+                    if (filter.messageFormat != null) {", "-                                messageFormat,", "-                                offRegexp);", "+                                filter.messageFormat,", "+                                filter.offRegexp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2ef91eb186090614da135ca2da9dbe5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "7d5e825abd68a4ffcb86865149b917edf76a47b6", "commitAfterChange": "f9374238b2870cad6c090589ec18933983e1c902", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "         public Tag(String text, int line)             throws ConversionException", "signatureAfterChange": "         public Tag(String text, int line, SuppressWithNearbyCommentFilter filter)             throws ConversionException", "diff": ["-        public Tag(String text, int line)", "+        public Tag(String text, int line, SuppressWithNearbyCommentFilter filter)", "-            tagCheckRegexp = checkRegexp;", "+            tagCheckRegexp = filter.checkRegexp;", "-                format = expandFrocomment(text, checkFormat, commentRegexp);", "+                format = expandFrocomment(text, filter.checkFormat, filter.commentRegexp);", "-                if (messageFormat != null) {", "+                if (filter.messageFormat != null) {", "-                         text, messageFormat, commentRegexp);", "+                         text, filter.messageFormat, filter.commentRegexp);", "-                if (influenceFormat != null) {", "+                if (filter.influenceFormat != null) {", "-                        text, influenceFormat, commentRegexp);", "+                        text, filter.influenceFormat, filter.commentRegexp);", "-                                + \"' using \" + influenceFormat, e);", "+                                + \"' using \" + filter.influenceFormat, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d82651b1b11c82c48e141437556c100c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/VerifierImpl.java", "commitBeforeChange": "20caaeb1488a4dacc770f22d463228eeb213d9ad", "commitAfterChange": "3ded7a11556a6258bcddd3ebe2d69a2058675601", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void verifyVariable(MyVariable aVar, boolean aInInterface)", "signatureAfterChange": "     public void verifyVariable(MyVariable aVar, boolean aInInterface)", "diff": ["-            if (!mRelaxJavadoc || inInterfaceBlock() ||", "+            if (!mConfig.isRelaxJavadoc() || inInterfaceBlock() ||", "-                          mStaticFinalRegexp,", "-                          mStaticFinalPat);", "+                          mConfig.getStaticFinalRegexp(),", "+                          mConfig.getStaticFinalPat());", "-                                      mStaticFinalRegexp,", "-                                      mStaticFinalPat);", "+                                      mConfig.getStaticFinalRegexp(),", "+                                      mConfig.getStaticFinalPat());", "-                        checkVariable(aVar, mStaticRegexp, mStaticPat);", "+                        checkVariable(aVar,", "+                                      mConfig.getStaticRegexp(),", "+                                      mConfig.getStaticPat());", "-                    (mAllowProtected && mods.containsProtected()))", "+                    (mConfig.isAllowProtected() && mods.containsProtected()))", "-                    checkVariable(aVar, mMemberRegexp, mMemberPat);", "+                    checkVariable(aVar,", "+                                  mConfig.getMemberRegexp(),", "+                                  mConfig.getMemberPat());"]}]}