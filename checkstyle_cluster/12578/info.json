{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "52592dd21d85da92a92e99e21ab869d9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45b445db0de5e7a7b0b298c14263c6d5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/indentation/InputCommentsIndentationSurroundingCode.java", "commitBeforeChange": "c56dce9222a819b4741b4c0cd664d38c58b31050", "commitAfterChange": "866daeeb2ad31e6a5a78235aa46819d9f966ee1c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "          private void foo32()", "signatureAfterChange": "      public void foo10()         throws Exception", "diff": ["-    ", "-    private void foo32() {", "-        if (true) {", "-            switch(1) {", "-            case 0:", "-                ", "-            case 1:", "-                    // initialize b", "-                int b = 10;", "-            }", "-            ", "-        }", "+", "+    public void foo10()", "+        throws Exception {", "+", "+        final String pattern = \"^foo$\";", "+", "+        final String[] expected = {", "+            \"7:13: \" + foo9(\"\", \"\", \"\"),", "+            // comment", "+        };", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be32d0b343ab7f3f8d089b133e3a57d5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java", "commitBeforeChange": "06f9b6d2558f73962f2e7d984001db0086819c1d", "commitAfterChange": "bd2731070adac1d8b714025e7c7fbbae278499a0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     private static void initConverters()", "signatureAfterChange": "     private static void initConverters()", "diff": ["-", "-        boolean booleanArray[] = new boolean[0];", "-        byte byteArray[] = new byte[0];", "-        char charArray[] = new char[0];", "-        double doubleArray[] = new double[0];", "-        float floatArray[] = new float[0];", "-        int intArray[] = new int[0];", "-        long longArray[] = new long[0];", "-        short shortArray[] = new short[0];", "+        boolean[] booleanArray = new boolean[0];", "+        byte[] byteArray = new byte[0];", "+        char[] charArray = new char[0];", "+        double[] doubleArray = new double[0];", "+        float[] floatArray = new float[0];", "+        int[] intArray = new int[0];", "+        long[] longArray = new long[0];", "+        short[] shortArray = new short[0];", "-        ConvertUtils.register(new BooleanArrayConverter(),", "-                booleanArray.getClass());", "+        ConvertUtils.register(", "+            new BooleanArrayConverter(), booleanArray.getClass());", "-        ConvertUtils.register(new ByteArrayConverter(byteArray),", "-                byteArray.getClass());", "+        ConvertUtils.register(", "+            new ByteArrayConverter(byteArray), byteArray.getClass());", "-        ConvertUtils.register(new CharacterArrayConverter(),", "-                charArray.getClass());", "+        ConvertUtils.register(", "+            new CharacterArrayConverter(), charArray.getClass());", "-        ConvertUtils.register(new DoubleArrayConverter(doubleArray),", "-                doubleArray.getClass());", "+        ConvertUtils.register(", "+            new DoubleArrayConverter(doubleArray), doubleArray.getClass());", "-        ConvertUtils.register(new FloatArrayConverter(),", "-                floatArray.getClass());", "+        ConvertUtils.register(new FloatArrayConverter(), floatArray.getClass());", "-        ConvertUtils.register(new IntegerArrayConverter(),", "-                intArray.getClass());", "+        ConvertUtils.register(new IntegerArrayConverter(), intArray.getClass());", "-        ConvertUtils.register(new ShortArrayConverter(),", "-                shortArray.getClass());", "-        ConvertUtils.register(new StringArrayConverter(),", "-                        String[].class);", "-        ConvertUtils.register(new IntegerArrayConverter(),", "-                        Integer[].class);", "+        ConvertUtils.register(new ShortArrayConverter(), shortArray.getClass());", "+        // TODO: investigate:", "+        // StringArrayConverter doesn't properly convert an array of tokens with", "+        // elements containing an underscore, \"_\".", "+        // Hacked a replacement class :(", "+        //        ConvertUtils.register(new StringArrayConverter(),", "+        //                        String[].class);", "+        ConvertUtils.register(new StrArrayConverter(), String[].class);", "+        ConvertUtils.register(new IntegerArrayConverter(), Integer[].class);", "-"]}]}