{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "040bffdd94a56d90aa378d8db3e45ce3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00806fffaa47cb636332fba50b961051", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java", "commitBeforeChange": "b14f255427c0b12054de2873fe300b4f4e691bd4", "commitAfterChange": "cc7aeaec906dc3c864477e3050510009b2a946ee", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-            postprocessLiteralNew(literalNewAST);", "+            postProcessLiteralNew(literalNewAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06f15ffee1dd53f3db7dd2495a08470a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean isStaticOrOnstanceField(DetailAST ast, String name)", "signatureAfterChange": "     private boolean isStaticOrOnstanceField(DetailAST ast, String name)", "diff": ["-                || !inStatic(ast) && frame.containsInstanceField(name);", "+                || !isInStatic(ast) && frame.containsInstanceField(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0826dee46c9ce9ade8bce33be8a1e559", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/comments/CommentsTest.java", "commitBeforeChange": "2057a77c3a524b86dff382ac8abdca71dd03764a", "commitAfterChange": "03f41815802b1ce6a0ca906c9f28c5a98344a932", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testCompareExpectedTreeWithInput_1() throws Exception", "signatureAfterChange": "      @Test     public void testCompareExpectedTreeWithInput_1() throws Exception", "diff": ["-        CompareTreesWithComments.expectedTree = buildInput_1();", "+        CompareTreesWithComments.expectedTree = buildInput1();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b8573c569835cc10400557b7ea36fcd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java", "commitBeforeChange": "896af516b0028ff2a26cc1888dfaba620d3fe9e0", "commitAfterChange": "55c92042eb6986e905529de841d3d1c9a7b2b6dd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void visitLiteralFor(DetailAST ast)", "signatureAfterChange": "     private void visitLiteralFor(DetailAST ast)", "diff": ["-        if (!isPreceedsEmptyForInit(parenAst)) {", "+        if (!isPrecedingEmptyForInit(parenAst)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fc3caa7a42febbcff48e7073ed2013a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "92358288d94bd806a7cdd0958f382d81416542c8", "commitAfterChange": "2795663daebc7d8b608992327e4580d37bb32a6d", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "     private void checkThrowsTags(List aTags, List aThrows)", "signatureAfterChange": "     private void checkThrowsTags(List aTags, List aThrows)", "diff": ["-                if (mConfig.isEnableCheckUnusedThrows()) {", "+                if (mConfig.isCheckUnusedThrows()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1271a4fc326269872c836bb7ab441b3c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "commitAfterChange": "cb5a59fc6baf5de204e3cc99be6ba9865e44350a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void verifyBrace(final DetailAST brace,                              final DetailAST startToken)", "signatureAfterChange": "     private void verifyBrace(final DetailAST brace,                              final DetailAST startToken)", "diff": ["-                validateNewLinePosion(brace, startToken, braceLine);", "+                validateNewLinePosition(brace, startToken, braceLine);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1437bf42b289874d7e9fe2fce5092d5d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java", "commitBeforeChange": "13a49cc45b1527357934dd7802c24686d7bb7858", "commitAfterChange": "24d7448294b03e49709c8e5588e89c27091ba0f2", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void checkSingleLine(int lineNum, IndentLevel indentLevel)", "signatureAfterChange": "     private void checkSingleLine(int lineNum, IndentLevel indentLevel)", "diff": ["-        if (indentLevel.greaterThan(start)) {", "+        if (indentLevel.isGreaterThan(start)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14d8d3eed934746f8cec42eb942a26f3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractDeclarationCollector.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static void collectVariableDeclarations(DetailAST ast, LexicalFrame frame)", "signatureAfterChange": "     private static void collectVariableDeclarations(DetailAST ast, LexicalFrame frame)", "diff": ["-            if (ScopeUtils.inInterfaceBlock(ast)", "+            if (ScopeUtils.isInInterfaceBlock(ast)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a2c06cf68f83003ed261cb9362d5dbd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "443e534a3c98c0b30f24647da724fe918f17a006", "commitAfterChange": "66d73fe6189267fee3423e2e8d7fc2d68599a43f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private ParseStatus parseJavadocAsDetailNode(DetailAST javadocCommentAst)", "signatureAfterChange": "     private ParseStatus parseJavadocAsDetailNode(DetailAST javadocCommentAst)", "diff": ["-            final DetailNode tree = convertParseTree2DetailNode(parseTree);", "+            final DetailNode tree = convertParseTreeToDetailNode(parseTree);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b78028ad8b4c018b3ed5c6c8f583287", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private Set<Object> loadKeys(File file)", "signatureAfterChange": "     private Set<Object> loadKeys(File file)", "diff": ["-            logIOException(e, file);", "+            logIoException(e, file);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23d438697f18cd7452a8a4a0821ae0cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/InnerAssignmentCheck.java", "commitBeforeChange": "fc24f5f8b689ce613cdd0bb2c00e8e50cddc7da5", "commitAfterChange": "14e0b00df5c0e48e03490c9a4ec82a7adaf8d227", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        final boolean assigment = isAssigment(parent1);", "+        final boolean assigment = isAssignment(parent1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27e3eb5dbd3aa91e2c918c112b1b4d27", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "896af516b0028ff2a26cc1888dfaba620d3fe9e0", "commitAfterChange": "55c92042eb6986e905529de841d3d1c9a7b2b6dd", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            && !isAnnonimousInnerClassEnd(currentType, nextChar)) {", "+            && !isAnonymousInnerClassEnd(currentType, nextChar)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c1ed149cf07e03d864feff99d2b39e8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void checkParagraphTag(DetailNode tag)", "signatureAfterChange": "     private void checkParagraphTag(DetailNode tag)", "diff": ["-        if (isFirstPtagraph(tag)) {", "+        if (isFirstParagraph(tag)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "442ac36aff54572d1c1e4ba88a955f2f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "d345f3beb27f3d8e3fde06f7e2c7612ddf691b95", "commitAfterChange": "c4a7d06206d86f52665eae47af4db28dc59d93a3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean hasIgnoreAnnotation(DetailAST variableDef)", "signatureAfterChange": "     private boolean hasIgnoreAnnotation(DetailAST variableDef)", "diff": ["-                 containsMatchingAnnotation(variableDef);", "+                 findMatchingAnnotation(variableDef);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d10d25a8ec9665496a2f9d7b9f2553d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "1e541f0b988df01b3ff13885521d39790df74cef", "commitAfterChange": "8985e645a8a591b19c729cff16b8440b70a8022e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processNestedGenerics(DetailAST ast, String line, int after)", "signatureAfterChange": "     private void processNestedGenerics(DetailAST ast, String line, int after)", "diff": ["-            && whitespaceBetween(after, indexOfAmp, line)) {", "+            && containsWhitespaceBetween(after, indexOfAmp, line)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "568ac86d67fc427c6099b21b33f24ae3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (inIgnoreList(ast)", "+        if (isInIgnoreList(ast)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5851aa8b64a60906991c63253f499266", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpMultilineCheckTest.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testNoStackOverflowError() throws Exception", "signatureAfterChange": "      @Test     public void testNoStackOverflowError() throws Exception", "diff": ["-        Files.write(makeLargeXYString(), file, Charsets.UTF_8);", "+        Files.write(makeLargeXyString(), file, Charsets.UTF_8);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58df8c45a51916b2f2c27d53048c8419", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/ExecutableStatementCountCheck.java", "commitBeforeChange": "b8f9b199ad7de16619cec1f288bd751fad8bc4a9", "commitAfterChange": "b0bb7e1b50237a03ce4e977af15665c07e20f078", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "     public void leaveToken(DetailAST aAST)", "diff": ["-            leaveMethodDef(aAST);", "+            leaveMemberDef(aAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b4ce61e3276c21ad85a49f4070c1070", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "b69e47845e1903966ddf39efdf49e103ff5a5248", "commitAfterChange": "b59542ba03c159d88187de39e55a7c164735a220", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (hasUnicodeChar(literal) && !(allowByTailComment && haastrailComment(ast)", "+        if (hasUnicodeChar(literal) && !(allowByTailComment && hasTrailComment(ast)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "685c87af69fc89965ff2b61d04d929ef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "a210010f0d98c85de06228ffc6c605c57df7340f", "commitAfterChange": "e2b4e687d7b8f9d6d5e1346d874b90e4567aff81", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     private void checkComment(DetailAST ast, TextBlock comment)", "signatureAfterChange": "     private void checkComment(DetailAST ast, TextBlock comment)", "diff": ["-            if (CheckUtils.isVoidMethod(ast)) {", "+            if (CheckUtils.isNonVoidMethod(ast)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c5fefc39a8239bcb7f3f2c99946249c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "commitAfterChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                collectReferecesFromJavadoc(ast);", "+                collectReferencesFromJavadoc(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73a52fb71f063515a19371b57364d89f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "bf9325be913ce46a1427232c455f4830b574ba44", "commitAfterChange": "745e21f1e4d202dd8dba577585f35f7d3f10d839", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "         public AuditListener createListener(Task task) throws IOException", "signatureAfterChange": "         public AuditListener createListener(Task task) throws IOException", "diff": ["-                return createXMLLogger(task);", "+                return createXmlLogger(task);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77a87de89a040f0e5bb6ab88c10e6343", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "5cd16d56a2ef2a3daaf1674666a9a5e6f2ddfe78", "commitAfterChange": "f9a9d6c3d321eeb2879efb7f48f02fe21a51c06c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public LineWrappingHandler(IndentationCheck instance, DetailAST firstNode, DetailAST lastNode)", "signatureAfterChange": "     public LineWrappingHandler(IndentationCheck instance, DetailAST firstNode, DetailAST lastNode)", "diff": ["-        forceStrictCondition = indentCheck.getForceStrictCondition();", "+        forceStrictCondition = indentCheck.isForceStrictCondition();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87e72b8995fd656bb73c29456cacd1b9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/comments/CommentsTest.java", "commitBeforeChange": "2057a77c3a524b86dff382ac8abdca71dd03764a", "commitAfterChange": "03f41815802b1ce6a0ca906c9f28c5a98344a932", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCompareExpectedTreeWithInput_2() throws Exception", "signatureAfterChange": "      @Test     public void testCompareExpectedTreeWithInput_2() throws Exception", "diff": ["-        CompareTreesWithComments.expectedTree = buildInput_2();", "+        CompareTreesWithComments.expectedTree = buildInput2();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "885072c63f2f6fed09a17ff155ff2a77", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private boolean isSetterMethod(DetailAST aMethodAST, String aName)", "signatureAfterChange": "     private boolean isSetterMethod(DetailAST aMethodAST, String aName)", "diff": ["-                    || setterCanReturnItsClass && frame.embeddedIn(returnType)) {", "+                    || setterCanReturnItsClass && frame.isEmbeddedIn(returnType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89a227688fe9b9ed4ec521346921aa07", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AllChecksTest.java", "commitBeforeChange": "3ebddae1b928b69793717d4e207b660b31fefdb5", "commitAfterChange": "63f01249f8da8e1454492e04106bc14075fe4dbd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testAllChecksAreReferencedInConfigFile() throws Exception", "signatureAfterChange": "      @Test     public void testAllChecksAreReferencedInConfigFile() throws Exception", "diff": ["-        final Set<String> checksNames = getChecksNames(checksFromClassPath);", "+        final Set<String> checksNames = getSimpleNames(checksFromClassPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f3d79949e878236eb15e942cca56b28", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/IfHandler.java", "commitBeforeChange": "113ea8405c8b753540ee3423d7e37e383f269155", "commitAfterChange": "7f7db38a097a95c264307123924779380fb40077", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected void checkToplevelToken()", "signatureAfterChange": "     protected void checkToplevelToken()", "diff": ["-        if (isElseIf()) {", "+        if (isIfAfterElse()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3ed6174d8e82990d142f4d9cf1a3508", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedCheck.java", "commitBeforeChange": "904de34fcd984edce3d6042a5a17e2a969254588", "commitAfterChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean containsJavadocTag(final TextBlock javadoc)", "signatureAfterChange": "     private boolean containsJavadocTag(final TextBlock javadoc)", "diff": ["-                found = validateTagAtTheRestOfComment(lines, found, currentLine, i);", "+                found = checkTagAtTheRestOfComment(lines, found, currentLine, i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5ffdbba22a5baca90353f1b993c564a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "commitAfterChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public final void setCustomImportOrderRules(final String inputCustomImportOrder)", "signatureAfterChange": "     public final void setCustomImportOrderRules(final String inputCustomImportOrder)", "diff": ["-            addRuleastoList(currentState);", "+            addRulesToList(currentState);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a64ace70cafac2cf15500e37c27c26db", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "d814d1352b63136a400cd8f4dffd03d68c9ccd24", "commitAfterChange": "3edd1b53a5d8d407fd33d8c514db8bc1c7274fe5", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected IndentLevel getChildrenExpectedLevel()", "signatureAfterChange": "     protected IndentLevel getChildrenExpectedLevel()", "diff": ["-        if (getLevel().isMultiLevel() && hasCurlys()) {", "+        if (getLevel().isMultiLevel() && hasCurlies()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7ca8f47faaa3b84384a40695c3b621e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "721bd2c690356f4ef6a4dd451600fad311fdde76", "commitAfterChange": "a47526404dfcbf638b937ce8a35357151dc12369", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     void registerCheck(Check aCheck)            throws CheckstyleException", "signatureAfterChange": "     void registerCheck(Check aCheck)            throws CheckstyleException", "diff": ["-        final Set checkTokens = aCheck.getTokens();", "+        final Set checkTokens = aCheck.getTokenNames();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "addb8a62407896e0b57771c99019c0fd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "bf529ef600fa9ef2034d0412c198b2121f2b94f2", "commitAfterChange": "ce196814d857a4244a80c51d5151cc35e90b6749", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static String encode(String value)", "signatureAfterChange": "     public static String encode(String value)", "diff": ["-                    sb.append(encodeAmpersend(value, i));", "+                    sb.append(encodeAmpersand(value, i));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae7a48cbbe1ccb1144eef9a24a78bd11", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b14f255427c0b12054de2873fe300b4f4e691bd4", "commitAfterChange": "cc7aeaec906dc3c864477e3050510009b2a946ee", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void processVariable(DetailAST ast)", "signatureAfterChange": "     private void processVariable(DetailAST ast)", "diff": ["-            if (isStaticOrOnstanceField(ast, name)", "+            if (isStaticOrInstanceField(ast, name)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2b7bfe74eadfdeb757fa03c562dd13b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "a360c43b35478a740c799b97b8eb69333b4c66b8", "commitAfterChange": "bc83a3a82fc14ac5f83dca972d7e48776d2b98d9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            processIDENT(ast);", "+            processIdent(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cde90d554355523836e10d376542c135", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "commitAfterChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private boolean matchesImportGroup(boolean isStatic, String importPath, String currentGroup)", "signatureAfterChange": "     private boolean matchesImportGroup(boolean isStatic, String importPath, String currentGroup)", "diff": ["-                || matchesStandartImportGroup(isStatic, importPath, currentGroup)", "+                || matchesStandardImportGroup(isStatic, importPath, currentGroup)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2dc6350dd733fe14cb4b5209f6b05ac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (count > max && !ignoreNumberOfParameters(ast)) {", "+        if (count > max && !shouldIgnoreNumberOfParameters(ast)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc172265846224fe83f1ed2354fc3381", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "03f2be49f7ad3fc9d0143782b020a169f28e50a9", "commitAfterChange": "0c2a64d9f02ab5b94bbf4213cb2978f7b459b6f5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                    checkName = removeChecktylePrefixIfExests(checkName);", "+                    checkName = removeCheckstylePrefixIfExists(checkName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb7513951d67f504b12f68dbecd3093d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java", "commitBeforeChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "commitAfterChange": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                checkClassContructorModifiers(ast);", "+                checkClassConstructorModifiers(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebb18fb80058e8c1220690357408ef55", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                if (iastypeField(ast) && !hasEmptyLineAfter(ast)) {", "+                if (isTypeField(ast) && !hasEmptyLineAfter(ast)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ece9a3a20c0415b2aedb8972a60d7332", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "1f54d3d6892c2c5561abe9e7ef5ef91650cc7288", "commitAfterChange": "f418179fceee506395546e5e08ed168fa120a34c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     public boolean accept(AuditEvent event)", "signatureAfterChange": "      @Override     public boolean accept(AuditEvent event)", "diff": ["-                if (matchTag(event)) {", "+                if (matchesTag(event)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7bb0f013f365ccd274340747b7cc6a8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "3c7c3cbe88a2bec0962702305db4f2b05117501c", "commitAfterChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public LineColumn lineColumn(int pos)", "signatureAfterChange": "     public LineColumn lineColumn(int pos)", "diff": ["-        final int[] lineBreaks = lineBreaks();", "+        final int[] lineBreaks = findLineBreaks();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc4a63145d842b7dddc613d262c536be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SingleLineJavadocCheck.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitJavadocToken(DetailNode ast)", "signatureAfterChange": "      @Override     public void visitJavadocToken(DetailNode ast)", "diff": ["-        if (isSingleLineJavdoc()", "+        if (isSingleLineJavadoc()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcdb26450f08920b7bbec6847a9efc46", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "f2429b81399fa12e4dd90aff86e91132b24849e0", "commitAfterChange": "15818b826024e6fef6c21e2831ec246af0a8ba7a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     @Override     public boolean accept(AuditEvent event)", "signatureAfterChange": "     @Override     public boolean accept(AuditEvent event)", "diff": ["-        // file and check match?", "-        if (isFileNameAndModuleMatching(event)) {", "+        // reject if file or check module mismatch?", "+        if (isFileNameAndModuleNotMatching(event)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdf136c4d66e55527b60effd8610fd56", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            final DetailAST error = checkOrderSuggestedByJLS(mods);", "+            final DetailAST error = checkOrderSuggestedByJls(mods);"]}]}