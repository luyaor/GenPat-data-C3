{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc8ef8a8d0670fff85cd8f57461f3772", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "716fdc8926b3d3360f2979a7d511249a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void startElement(final String namespaceURI,                              final String localName,                              final String qName,                              final Attributes attributes)         throws SAXException", "signatureAfterChange": "      @Override     public void startElement(final String namespaceURI,                              final String localName,                              final String qName,                              final Attributes attributes)         throws SAXException", "diff": ["-            final Guard g;", "+            final Guard guard;", "-                g = new Guard(isAllow, isLocalOnly, pkg, exactMatch, regex);", "+                guard = new Guard(isAllow, isLocalOnly, pkg, exactMatch, regex);", "-                g = new Guard(isAllow, isLocalOnly, clazz, regex);", "+                guard = new Guard(isAllow, isLocalOnly, clazz, regex);", "-            final PkgControl pc = stack.peek();", "-            pc.addGuard(g);", "+            final PkgControl pkgControl = stack.peek();", "+            pkgControl.addGuard(guard);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be9c3c833952c1d5388005cd30c54c68", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "a2c4566348d41c5eed923c33670cb48bf30c951b", "commitAfterChange": "e292d5fa53a78828d45565e27d305eb3f7cb9d6a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void startElement(final String aNamespaceURI,                              final String aLocalName,                              final String aQName,                              final Attributes aAtts)         throws SAXException", "signatureAfterChange": "      @Override     public void startElement(final String aNamespaceURI,                              final String aLocalName,                              final String aQName,                              final Attributes aAtts)         throws SAXException", "diff": ["+            final boolean regex = (aAtts.getValue(\"regex\") != null);", "-                g = new Guard(isAllow, isLocalOnly, pkg, exactMatch);", "+                g = new Guard(isAllow, isLocalOnly, pkg, exactMatch, regex);", "+                // handle class names which can be normal class names or regular", "+                // expressions", "-                g = new Guard(isAllow, isLocalOnly, clazz);", "+                g = new Guard(isAllow, isLocalOnly, clazz, regex);"]}]}