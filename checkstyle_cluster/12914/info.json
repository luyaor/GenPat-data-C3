{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ddd985c6a33de30ecd3859741a569d2c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8de382b09d7ac4df6f8a182a3314f963", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "8fe7c3a914d75fa7b20fb5115b08dade9ed7c88c", "commitAfterChange": "d9f789a649da036865f9bf0c6d48f35753881abe", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static ResourceBundle getBundle(String aBundleName)", "signatureAfterChange": "     private ResourceBundle getBundle(String aBundleName)", "diff": ["-    private static ResourceBundle getBundle(String aBundleName)", "+    private ResourceBundle getBundle(String aBundleName)", "-        ResourceBundle bundle = (ResourceBundle) sBundleCache.get(aBundleName);", "-        if (bundle == null) {", "-            bundle = ResourceBundle.getBundle(aBundleName, sLocale);", "-            sBundleCache.put(aBundleName, bundle);", "+        synchronized (sBundleCache) {", "+            ResourceBundle bundle = (ResourceBundle) sBundleCache", "+                    .get(aBundleName);", "+            if (bundle == null) {", "+                bundle = ResourceBundle.getBundle(aBundleName, sLocale,", "+                        mSourceClass.getClassLoader());", "+                sBundleCache.put(aBundleName, bundle);", "+            }", "+            return bundle;", "-        return bundle;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfd4f79419ed2903696f8feda53077be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "commitBeforeChange": "42fc689da0fd2f8b9d6e1ea42da65479f5ad9121", "commitAfterChange": "38be87d86ccef8820fb52315c612fe0d16188013", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-        if (!publicTypeFound) {", "-            // skip first top-level type.", "-            lineNumberTypeMap.remove(lineNumberTypeMap.firstKey());", "-        }", "+        if (!lineNumberTypeMap.isEmpty()) {", "+            if (!publicTypeFound) {", "+                // skip first top-level type.", "+                lineNumberTypeMap.remove(lineNumberTypeMap.firstKey());", "+            }", "-        for (Map.Entry<Integer, String> entry", "-                : lineNumberTypeMap.entrySet())", "-        {", "-            log(entry.getKey(), MSG_KEY, entry.getValue());", "+            for (Map.Entry<Integer, String> entry", "+                    : lineNumberTypeMap.entrySet())", "+            {", "+                log(entry.getKey(), MSG_KEY, entry.getValue());", "+            }", "-"]}]}