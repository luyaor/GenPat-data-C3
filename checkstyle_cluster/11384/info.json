{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e05309cabcc123c37b0f2750061276de", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4045844e742d63b90afccf51ce4eb78", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4861blockcommentstyle/CommentsIndentationTest.java", "commitBeforeChange": "866daeeb2ad31e6a5a78235aa46819d9f966ee1c", "commitAfterChange": "e21676f52f3d68294122244cea63b4ecbe92de8f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void commentsIndentationTest() throws Exception", "signatureAfterChange": "      @Test     public void testSurroundingCode() throws Exception", "diff": ["-    public void commentsIndentationTest() throws Exception {", "-", "-            \"1: \" + getCheckMessage(CommentsIndentationCheck.class,", "-                \"comments.indentation.single\", 2, 1, 0),", "-            \"13: \" + getCheckMessage(CommentsIndentationCheck.class,", "-                \"comments.indentation.single\", 14, 8, 6),", "-            \"23: \" + getCheckMessage(CommentsIndentationCheck.class,", "-                \"comments.indentation.block\", 24, 8, 4),", "-            \"25: \" + getCheckMessage(CommentsIndentationCheck.class,", "-                \"comments.indentation.block\", 27, 8, 4),", "-            \"28: \" + getCheckMessage(CommentsIndentationCheck.class,", "-                \"comments.indentation.block\", 31, 8, 4),", "-            \"50: \" + getCheckMessage(CommentsIndentationCheck.class,", "-                \"comments.indentation.single\", 51, 23, 19),", "-            \"51: \" + getCheckMessage(CommentsIndentationCheck.class,", "-                \"comments.indentation.block\", 53, 19, 32),", "-        };", "-        final String filePath = builder.getFilePath(\"CommentsIndentationInput\");", "+", "+    @Test", "+    public void testSurroundingCode() throws Exception {", "+        final String[] expected = {", "+            \"13: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",", "+                14, 14, 12),", "+            \"23: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.block\",", "+                24, 16, 12),", "+            \"25: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.block\",", "+                27, 16, 12),", "+            \"28: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.block\",", "+                31, 16, 12),", "+            \"50: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",", "+                51, 27, 23),", "+            \"51: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.block\",", "+                53, 23, 36),", "+            \"90: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",", "+                91, 14, 8),", "+            \"98: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",", "+                99, 13, 8),", "+            \"108: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\",", "+                109, 33, 8),", "+            };", "+", "+        final Configuration checkConfig = builder.getCheckConfig(\"CommentsIndentation\");", "+        final String filePath =", "+            builder.getFilePath(\"CommentsIndentationSurroundingCodeInput\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccadac0db96d33605d478231324fd86c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4861blockcommentstyle/CommentsIndentationTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void commentsIndentationTest() throws Exception", "signatureAfterChange": "      @Test     public void commentsIndentationTest() throws Exception", "diff": ["-            \"1: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\", 2, 1, 0),", "-            \"13: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\", 14, 8, 6),", "-            \"23: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.block\", 24, 8, 4),", "-            \"25: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.block\", 27, 8, 4),", "-            \"28: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.block\", 31, 8, 4),", "-            \"50: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.single\", 51, 23, 19),", "-            \"51: \" + getCheckMessage(CommentsIndentationCheck.class, \"comments.indentation.block\", 53, 19, 32),", "+            \"1: \" + getCheckMessage(CommentsIndentationCheck.class,", "+                \"comments.indentation.single\", 2, 1, 0),", "+            \"13: \" + getCheckMessage(CommentsIndentationCheck.class,", "+                \"comments.indentation.single\", 14, 8, 6),", "+            \"23: \" + getCheckMessage(CommentsIndentationCheck.class,", "+                \"comments.indentation.block\", 24, 8, 4),", "+            \"25: \" + getCheckMessage(CommentsIndentationCheck.class,", "+                \"comments.indentation.block\", 27, 8, 4),", "+            \"28: \" + getCheckMessage(CommentsIndentationCheck.class,", "+                \"comments.indentation.block\", 31, 8, 4),", "+            \"50: \" + getCheckMessage(CommentsIndentationCheck.class,", "+                \"comments.indentation.single\", 51, 23, 19),", "+            \"51: \" + getCheckMessage(CommentsIndentationCheck.class,", "+                \"comments.indentation.block\", 53, 19, 32),", "-        Configuration checkConfig = builder.getCheckConfig(\"CommentsIndentation\");", "-        String filePath = builder.getFilePath(\"CommentsIndentationInput\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"CommentsIndentation\");", "+        final String filePath = builder.getFilePath(\"CommentsIndentationInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}]}