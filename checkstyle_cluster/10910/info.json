{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09eac0290020fd9d38ba572a123ed476", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47dfdc3c09b95b6c24028982404fd078", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        AvoidNestedBlocksCheck constantNameCheckObj = new AvoidNestedBlocksCheck();", "-        int[] actual = constantNameCheckObj.getAcceptableTokens();", "-        int[] expected = {TokenTypes.SLIST };", "+        final AvoidNestedBlocksCheck constantNameCheckObj = new AvoidNestedBlocksCheck();", "+        final int[] actual = constantNameCheckObj.getAcceptableTokens();", "+        final int[] expected = {TokenTypes.SLIST };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d12aa4175b3ac8ad3cfbd52dc3d26ed7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        EmptyCatchBlockCheck constantNameCheckObj = new EmptyCatchBlockCheck();", "-        int[] actual = constantNameCheckObj.getAcceptableTokens();", "-        int[] expected = {TokenTypes.LITERAL_CATCH };", "+        final EmptyCatchBlockCheck constantNameCheckObj = new EmptyCatchBlockCheck();", "+        final int[] actual = constantNameCheckObj.getAcceptableTokens();", "+        final int[] expected = {TokenTypes.LITERAL_CATCH };"]}]}