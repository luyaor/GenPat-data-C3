{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f05c77f66d63c4fc37d1ce28be6e5a5b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24249881826448fdcc61f0e27429bd56", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule333orderingandsoacing/CustomImportOrderTest.java", "commitBeforeChange": "accb0bf5bcca0213c55996af02cc42bbc22f313c", "commitAfterChange": "cd12de2a24713a494393912e2277b67770eb79fe", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void customImportTest_3() throws IOException, Exception", "signatureAfterChange": "      @Test     public void customImportTest_3() throws IOException, Exception", "diff": ["-                \"4: \" + getCheckMessage(clazz, msgLex, \"java.awt.Button.ABORT\"),", "-                \"8: \" + getCheckMessage(clazz, msgOrder, \"STANDARD_JAVA_PACKAGE\"),", "-                \"9: \" + getCheckMessage(clazz, msgOrder, \"STANDARD_JAVA_PACKAGE\"),", "-                \"10: \" + getCheckMessage(clazz, msgOrder, \"STANDARD_JAVA_PACKAGE\"),", "-                \"11: \" + getCheckMessage(clazz, msgOrder, \"STANDARD_JAVA_PACKAGE\"),", "+                \"4: \" + getCheckMessage(clazz, msgLex, \"java.awt.Button.ABORT\", \"java.io.File.createTempFile\"),", "+                \"8: \" + getCheckMessage(clazz, msgOrder, STD, SPECIAL, \"java.util.StringTokenizer\"),", "+                \"9: \" + getCheckMessage(clazz, msgOrder, STD, SPECIAL, \"java.util.*\"),", "+                \"10: \" + getCheckMessage(clazz, msgOrder, STD, SPECIAL, \"java.util.concurrent.AbstractExecutorService\"),", "+                \"11: \" + getCheckMessage(clazz, msgOrder, STD, SPECIAL, \"java.util.concurrent.*\"),", "-                \"16: \" + getCheckMessage(clazz, msgOrder, \"SPECIAL_IMPORTS\"),", "+                \"16: \" + getCheckMessage(clazz, msgOrder, SPECIAL, STD, \"com.google.common.reflect.*\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51887f665f479f59d6ea107bb7adc55e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule333orderingandsoacing/CustomImportOrderTest.java", "commitBeforeChange": "accb0bf5bcca0213c55996af02cc42bbc22f313c", "commitAfterChange": "cd12de2a24713a494393912e2277b67770eb79fe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void customImportTest_2() throws IOException, Exception", "signatureAfterChange": "      @Test     public void customImportTest_2() throws IOException, Exception", "diff": ["-            \"4: \" + getCheckMessage(clazz, msgLex, \"java.awt.Button.ABORT\"),", "-            \"7: \" + getCheckMessage(clazz, msgOrder, \"STANDARD_JAVA_PACKAGE\"),", "-            \"8: \" + getCheckMessage(clazz, msgOrder, \"STANDARD_JAVA_PACKAGE\"),", "-            \"9: \" + getCheckMessage(clazz, msgOrder, \"STANDARD_JAVA_PACKAGE\"),", "-            \"10: \" + getCheckMessage(clazz, msgOrder, \"STANDARD_JAVA_PACKAGE\"),", "-            \"11: \" + getCheckMessage(clazz, msgOrder, \"STANDARD_JAVA_PACKAGE\"),", "+            \"4: \" + getCheckMessage(clazz, msgLex, \"java.awt.Button.ABORT\", \"java.io.File.createTempFile\"),", "+            \"7: \" + getCheckMessage(clazz, msgOrder, STD, SPECIAL, \"java.util.List\"),", "+            \"8: \" + getCheckMessage(clazz, msgOrder, STD, SPECIAL, \"java.util.StringTokenizer\"),", "+            \"9: \" + getCheckMessage(clazz, msgOrder, STD, SPECIAL, \"java.util.*\"),", "+            \"10: \" + getCheckMessage(clazz, msgOrder, STD, SPECIAL, \"java.util.concurrent.AbstractExecutorService\"),", "+            \"11: \" + getCheckMessage(clazz, msgOrder, STD, SPECIAL, \"java.util.concurrent.*\"),", "-            \"16: \" + getCheckMessage(clazz, msgOrder, \"SPECIAL_IMPORTS\"),", "+            \"16: \" + getCheckMessage(clazz, msgOrder, SPECIAL, STD, \"com.google.common.reflect.*\"),"]}]}