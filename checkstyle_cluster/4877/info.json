{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "251ac144e7a7ed29bc6b7a33e9a6420f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d67960a26be1cabb109279fe64e06f3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpMultilineCheckTest.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     @Ignore @Test     public void testCarriageReturn() throws Exception", "signatureAfterChange": "     @Ignore @Test     public void testCarriageReturn() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"format\", illegal);", "+        checkConfig.addAttribute(\"format\", illegal);", "-        verify(mCheckConfig, getPath(\"InputLineBreaks.java\"), expected);", "+        verify(checkConfig, getPath(\"InputLineBreaks.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "141e972212791c57b1bd9e7cf52a6fc2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testScopeInnerInterfacesPublic() throws Exception", "signatureAfterChange": "      @Test     public void testScopeInnerInterfacesPublic() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"scope\", Scope.PUBLIC.getName());", "+        checkConfig.addAttribute(\"scope\", Scope.PUBLIC.getName());", "-        verify(mCheckConfig, getPath(\"InputScopeInnerInterfaces.java\"), expected);", "+        verify(checkConfig, getPath(\"InputScopeInnerInterfaces.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1717c96f5106e9d19b40e53cd35f0439", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIncorrect() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrect() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"forbiddenSummaryFragments\",", "+        checkConfig.addAttribute(\"forbiddenSummaryFragments\",", "-        verify(mCheckConfig, getPath(\"javadoc/InputIncorrectSummaryJavaDocCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"javadoc/InputIncorrectSummaryJavaDocCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "227ee1ba59062dd1c37879bd8aaa28c8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testScopeAnonInnerAnonInner() throws Exception", "signatureAfterChange": "      @Test     public void testScopeAnonInnerAnonInner() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"scope\", Scope.ANONINNER.getName());", "+        checkConfig.addAttribute(\"scope\", Scope.ANONINNER.getName());", "-        verify(mCheckConfig, getPath(\"InputScopeAnonInner.java\"), expected);", "+        verify(checkConfig, getPath(\"InputScopeAnonInner.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22bda349f1bbfa5eae4f889287b606ca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testStarImports() throws Exception", "signatureAfterChange": "      @Test     public void testStarImports() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"illegalClassNames\", \"List\");", "+        checkConfig.addAttribute(\"illegalClassNames\", \"List\");", "-        verify(mCheckConfig, getPath(\"coding\" + File.separator", "+        verify(checkConfig, getPath(\"coding\" + File.separator"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "265ea5facceabefb7807a8379c373ae6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testNLWithAnnotations() throws Exception", "signatureAfterChange": "      @Test     public void testNLWithAnnotations() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"option\", LeftCurlyOption.NL.toString());", "+        checkConfig.addAttribute(\"option\", LeftCurlyOption.NL.toString());", "-        verify(mCheckConfig, getPath(\"InputLeftCurlyAnnotations.java\"), expected);", "+        verify(checkConfig, getPath(\"InputLeftCurlyAnnotations.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "272bc43ae936435e5c1e678bf2b7280b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testTagsWithSubclassesAllowed() throws Exception", "signatureAfterChange": "      @Test     public void testTagsWithSubclassesAllowed() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"allowThrowsTagsForSubclasses\", \"true\");", "+        checkConfig.addAttribute(\"allowThrowsTagsForSubclasses\", \"true\");", "-        verify(mCheckConfig, getSrcPath(\"checks/javadoc/InputTags.java\"), expected);", "+        verify(checkConfig, getSrcPath(\"checks/javadoc/InputTags.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cf31ffddfeddd956ce270897fd161ca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void testAllowMissingJavadoc() throws Exception", "signatureAfterChange": "      @Test     public void testAllowMissingJavadoc() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"allowMissingJavadoc\", \"true\");", "+        checkConfig.addAttribute(\"allowMissingJavadoc\", \"true\");", "-        verify(mCheckConfig, getPath(\"javadoc\" + File.separator", "+        verify(checkConfig, getPath(\"javadoc\" + File.separator"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32ab8905bb4d583a5c378499d46b403d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testNLOW() throws Exception", "signatureAfterChange": "      @Test     public void testNLOW() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"option\", LeftCurlyOption.NLOW.toString());", "+        checkConfig.addAttribute(\"option\", LeftCurlyOption.NLOW.toString());", "-        verify(mCheckConfig, getPath(\"InputScopeInnerInterfaces.java\"), expected);", "+        verify(checkConfig, getPath(\"InputScopeInnerInterfaces.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39cee478c61bfbcfecfb859f6c091643", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/TrailingCommentCheckTest.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testLegalComment() throws Exception", "signatureAfterChange": "      @Test     public void testLegalComment() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"legalComment\", \"^NOI18N$\");", "+        checkConfig.addAttribute(\"legalComment\", \"^NOI18N$\");", "-        verify(mCheckConfig, getPath(\"InputTrailingComment.java\"), expected);", "+        verify(checkConfig, getPath(\"InputTrailingComment.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c728fee7498039dfa8b767188f99b99", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testSame() throws Exception", "signatureAfterChange": "     @Test     public void testSame() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"option\", RightCurlyOption.SAME.toString());", "+        checkConfig.addAttribute(\"option\", RightCurlyOption.SAME.toString());", "-        verify(mCheckConfig, getPath(\"InputLeftCurlyOther.java\"), expected);", "+        verify(checkConfig, getPath(\"InputLeftCurlyOther.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cb49c6e165c6d497a342a6441e833d3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testPeriod() throws Exception", "signatureAfterChange": "      @Test     public void testPeriod() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"period\", \"_\");", "+        checkConfig.addAttribute(\"period\", \"_\");", "-        verify(mCheckConfig, getPath(\"javadoc/InputSummaryJavadocCheckPeriod.java\"), expected);", "+        verify(checkConfig, getPath(\"javadoc/InputSummaryJavadocCheckPeriod.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40e553798d591bb5d73176274440f059", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testAlone() throws Exception", "signatureAfterChange": "      @Test     public void testAlone() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"option\", RightCurlyOption.ALONE.toString());", "+        checkConfig.addAttribute(\"option\", RightCurlyOption.ALONE.toString());", "-        verify(mCheckConfig, getPath(\"InputLeftCurlyOther.java\"), expected);", "+        verify(checkConfig, getPath(\"InputLeftCurlyOther.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47908a7f24ee5bc3f8defd2fbfb343c1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpMultilineCheckTest.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testIt() throws Exception", "signatureAfterChange": "      @Test     public void testIt() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"format\", illegal);", "+        checkConfig.addAttribute(\"format\", illegal);", "-        verify(mCheckConfig, getPath(\"InputSemantic.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSemantic.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cbbfa4ad12ad56d52a962674bdcca5d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testIt() throws Exception", "signatureAfterChange": "      @Test     public void testIt() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"format\", illegal);", "+        checkConfig.addAttribute(\"format\", illegal);", "-        verify(mCheckConfig, getPath(\"InputSemantic.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSemantic.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "529d555fb05d177ef3ed434fd1137c0c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "       @Test     public void testMissingTag() throws Exception", "signatureAfterChange": "       @Test     public void testMissingTag() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"tag\", \"@missingtag\");", "+        checkConfig.addAttribute(\"tag\", \"@missingtag\");", "-        verify(mCheckConfig, getPath(\"InputWriteTag.java\"), expected);", "+        verify(checkConfig, getPath(\"InputWriteTag.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5982baf3c3ad5965ed799d660e455a8d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testNL2() throws Exception", "signatureAfterChange": "      @Test     public void testNL2() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"option\", LeftCurlyOption.NL.toString());", "+        checkConfig.addAttribute(\"option\", LeftCurlyOption.NL.toString());", "-        verify(mCheckConfig, getPath(\"InputLeftCurlyMethod.java\"), expected);", "+        verify(checkConfig, getPath(\"InputLeftCurlyMethod.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "599a40e4f3d44c853dbc014a4489448f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testNL() throws Exception", "signatureAfterChange": "      @Test     public void testNL() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"option\", LeftCurlyOption.NL.toString());", "+        checkConfig.addAttribute(\"option\", LeftCurlyOption.NL.toString());", "-        verify(mCheckConfig, getPath(\"InputScopeInnerInterfaces.java\"), expected);", "+        verify(checkConfig, getPath(\"InputScopeInnerInterfaces.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b0acb3c2c176df9ee349c46a93c0743", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testScopeAnonInnerPrivate() throws Exception", "signatureAfterChange": "      @Test     public void testScopeAnonInnerPrivate() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"scope\", Scope.PRIVATE.getName());", "+        checkConfig.addAttribute(\"scope\", Scope.PRIVATE.getName());", "-        verify(mCheckConfig, getPath(\"InputScopeAnonInner.java\"), expected);", "+        verify(checkConfig, getPath(\"InputScopeAnonInner.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63dd5f8d07003747888b5a12f194b466", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testScopes2() throws Exception", "signatureAfterChange": "      @Test     public void testScopes2() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"scope\", Scope.PROTECTED.getName());", "+        checkConfig.addAttribute(\"scope\", Scope.PROTECTED.getName());", "-        verify(mCheckConfig, getPath(\"javadoc\" + File.separator", "+        verify(checkConfig, getPath(\"javadoc\" + File.separator"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67546083a367cbd7b9c0f840a8f5f672", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testLegalAbstractClassNames() throws Exception", "signatureAfterChange": "      @Test     public void testLegalAbstractClassNames() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"legalAbstractClassNames\", \"AbstractClass\");", "+        checkConfig.addAttribute(\"legalAbstractClassNames\", \"AbstractClass\");", "-        verify(mCheckConfig, getPath(\"coding\" + File.separator + \"InputIllegalType.java\"), expected);", "+        verify(checkConfig, getPath(\"coding\" + File.separator + \"InputIllegalType.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6abd86c480d44818be7844059d268600", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testMissingFormat() throws Exception", "signatureAfterChange": "      @Test     public void testMissingFormat() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"tag\", \"@author\");", "+        checkConfig.addAttribute(\"tag\", \"@author\");", "-        verify(mCheckConfig, getPath(\"InputWriteTag.java\"), expected);", "+        verify(checkConfig, getPath(\"InputWriteTag.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d04d6f5d56874ab1805976bc417cd67", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCorrect() throws Exception", "signatureAfterChange": "      @Test     public void testCorrect() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"forbiddenSummaryFragments\",", "+        checkConfig.addAttribute(\"forbiddenSummaryFragments\",", "-        verify(mCheckConfig, getPath(\"javadoc/InputCorrectSummaryJavaDocCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"javadoc/InputCorrectSummaryJavaDocCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fcdb015f0083bc4e3ffaf717998a681", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testScopeAnonInnerWithResolver() throws Exception", "signatureAfterChange": "      @Test     public void testScopeAnonInnerWithResolver() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"allowUndeclaredRTE\", \"true\");", "+        checkConfig.addAttribute(\"allowUndeclaredRTE\", \"true\");", "-        verify(mCheckConfig, getPath(\"InputScopeAnonInner.java\"), expected);", "+        verify(checkConfig, getPath(\"InputScopeAnonInner.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d718f84b4e648b924d813e71cf47462", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForInitializerPadCheckTest.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testSpaceOption() throws Exception", "signatureAfterChange": "      @Test     public void testSpaceOption() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"option\", PadOption.SPACE.toString());", "+        checkConfig.addAttribute(\"option\", PadOption.SPACE.toString());", "-        verify(mCheckConfig, getPath(\"InputForWhitespace.java\"), expected);", "+        verify(checkConfig, getPath(\"InputForWhitespace.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84d29828949b1cd679248c929e81d735", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheckTest.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testIt() throws Exception", "signatureAfterChange": "      @Test     public void testIt() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"format\", illegal);", "+        checkConfig.addAttribute(\"format\", illegal);", "-        verify(mCheckConfig, getPath(\"InputSemantic.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSemantic.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8980eef9e7c773eb81ce3e464c6c50c4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testNoJavadoc() throws Exception", "signatureAfterChange": "      @Test     public void testNoJavadoc() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"scope\", Scope.NOTHING.getName());", "+        checkConfig.addAttribute(\"scope\", Scope.NOTHING.getName());", "-        verify(mCheckConfig, getPath(\"InputPublicOnly.java\"), expected);", "+        verify(checkConfig, getPath(\"InputPublicOnly.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89df5ba0e0b4b7a113dcb0fc6758c39e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testSameFileNameFalsePositive() throws Exception", "signatureAfterChange": "      @Test     public void testSameFileNameFalsePositive() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"illegalClassNames\", \"java.util.GregorianCalendar, SubCalendar, \"", "+        checkConfig.addAttribute(\"illegalClassNames\", \"java.util.GregorianCalendar, SubCalendar, \"", "-        verify(mCheckConfig, getPath(\"coding\" + File.separator", "+        verify(checkConfig, getPath(\"coding\" + File.separator"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ccae281b0f53ae44ac39f24c59ff33f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "      @Test     public void test_generics_2() throws Exception", "signatureAfterChange": "      @Test     public void test_generics_2() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"allowThrowsTagsForSubclasses\", \"true\");", "+        checkConfig.addAttribute(\"allowThrowsTagsForSubclasses\", \"true\");", "-        verify(mCheckConfig, getPath(\"javadoc/TestGenerics.java\"), expected);", "+        verify(checkConfig, getPath(\"javadoc/TestGenerics.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9afb438d01a83ddc7582555115795387", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "      @Test     public void testSkipCertainMethods() throws Exception", "signatureAfterChange": "      @Test     public void testSkipCertainMethods() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"ignoreMethodNamesRegex\", \"^foo.*$\");", "+        checkConfig.addAttribute(\"ignoreMethodNamesRegex\", \"^foo.*$\");", "-        verify(mCheckConfig, getPath(\"javadoc/InputJavadocMethodIgnoreNameRegex.java\"), expected);", "+        verify(checkConfig, getPath(\"javadoc/InputJavadocMethodIgnoreNameRegex.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d9b306bcee88849e4a9d8d9233a8333", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Before     public void setUp()", "signatureAfterChange": "      @Before     public void setUp()", "diff": ["-        mCheckConfig = createCheckConfig(JavadocMethodCheck.class);", "-        mCheckConfig.addAttribute(\"validateThrows\", \"true\");", "+        checkConfig = createCheckConfig(JavadocMethodCheck.class);", "+        checkConfig.addAttribute(\"validateThrows\", \"true\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab12e3914502aa580cf37913c5d0d622", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      @Test     public void testSetterGetterOn() throws Exception", "signatureAfterChange": "      @Test     public void testSetterGetterOn() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"allowMissingPropertyJavadoc\", \"true\");", "+        checkConfig.addAttribute(\"allowMissingPropertyJavadoc\", \"true\");", "-        verify(mCheckConfig, getPath(\"javadoc\" + File.separator", "+        verify(checkConfig, getPath(\"javadoc\" + File.separator"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad876e276d8e5b884768a65393226f46", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     @Test     public void testRelaxedJavadoc() throws Exception", "signatureAfterChange": "     @Test     public void testRelaxedJavadoc() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"scope\", Scope.PROTECTED.getName());", "+        checkConfig.addAttribute(\"scope\", Scope.PROTECTED.getName());", "-        verify(mCheckConfig, getPath(\"InputPublicOnly.java\"), expected);", "+        verify(checkConfig, getPath(\"InputPublicOnly.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bca7164b9b55b2554fd25860cb8436d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testNL3() throws Exception", "signatureAfterChange": "      @Test     public void testNL3() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"option\", LeftCurlyOption.NL.toString());", "+        checkConfig.addAttribute(\"option\", LeftCurlyOption.NL.toString());", "-        verify(mCheckConfig, getPath(\"InputLeftCurlyOther.java\"), expected);", "+        verify(checkConfig, getPath(\"InputLeftCurlyOther.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c871d62a8542782b0abf8c090ec2eb0d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForIteratorPadCheckTest.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testSpaceOption() throws Exception", "signatureAfterChange": "      @Test     public void testSpaceOption() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"option\", PadOption.SPACE.toString());", "+        checkConfig.addAttribute(\"option\", PadOption.SPACE.toString());", "-        verify(mCheckConfig, getPath(\"InputForWhitespace.java\"), expected);", "+        verify(checkConfig, getPath(\"InputForWhitespace.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d029e121a89d86dbfd3ae6088a40fcec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIgnoreMethodNames() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreMethodNames() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"ignoredMethodNames\", \"table2\");", "+        checkConfig.addAttribute(\"ignoredMethodNames\", \"table2\");", "-        verify(mCheckConfig, getPath(\"coding\" + File.separator + \"InputIllegalType.java\"), expected);", "+        verify(checkConfig, getPath(\"coding\" + File.separator + \"InputIllegalType.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d78d0d2ef9feea9decf4252d3c72b384", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testFormat() throws Exception", "signatureAfterChange": "      @Test     public void testFormat() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"format\", \"^$\");", "+        checkConfig.addAttribute(\"format\", \"^$\");", "-        verify(mCheckConfig, getPath(\"coding\" + File.separator + \"InputIllegalType.java\"), expected);", "+        verify(checkConfig, getPath(\"coding\" + File.separator + \"InputIllegalType.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb3da07864fdc688f6f830a28898903e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpMultilineCheckTest.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testIllegalFailBelowErrorLimit() throws Exception", "signatureAfterChange": "      @Test     public void testIllegalFailBelowErrorLimit() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"format\", illegal);", "+        checkConfig.addAttribute(\"format\", illegal);", "-        verify(mCheckConfig, getPath(\"InputSemantic.java\"), expected);", "+        verify(checkConfig, getPath(\"InputSemantic.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efcdc538df2ea4e0655c52b764e9ddf9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testSameFileNameGeneral() throws Exception", "signatureAfterChange": "      @Test     public void testSameFileNameGeneral() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"illegalClassNames\", \"List, GregorianCalendar, java.io.File, ArrayList\");", "+        checkConfig.addAttribute(\"illegalClassNames\", \"List, GregorianCalendar, java.io.File, ArrayList\");", "-        verify(mCheckConfig, getPath(\"coding\" + File.separator", "+        verify(checkConfig, getPath(\"coding\" + File.separator"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fce76bfcaf120a4c727ffac872a4bf5c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testTagsWithResolver() throws Exception", "signatureAfterChange": "      @Test     public void testTagsWithResolver() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"allowUndeclaredRTE\", \"true\");", "+        checkConfig.addAttribute(\"allowUndeclaredRTE\", \"true\");", "-        verify(mCheckConfig, getSrcPath(\"checks/javadoc/InputTags.java\"), expected);", "+        verify(checkConfig, getSrcPath(\"checks/javadoc/InputTags.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcebdf938bdde7fe11bbe05e0aeb5c4b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testNoPeriod() throws Exception", "signatureAfterChange": "      @Test     public void testNoPeriod() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"period\", \"\");", "+        checkConfig.addAttribute(\"period\", \"\");", "-        verify(mCheckConfig, getPath(\"javadoc/InputSummaryJavadocCheckNoPeriod.java\"), expected);", "+        verify(checkConfig, getPath(\"javadoc/InputSummaryJavadocCheckNoPeriod.java\"), expected);"]}]}