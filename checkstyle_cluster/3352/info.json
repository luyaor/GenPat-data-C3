{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "87bb5102773f4835e5e45578bfc0d3aa", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "197577c1766397576bfc5cf3626e5ff2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule53camelcase/AbbreviationAsWordInNameTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void abbreviationAsWordInNameTest() throws Exception", "signatureAfterChange": "      @Test     public void abbreviationAsWordInNameTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"InputAbbreviationAsWordInTypeNameCheck\");", "+        final String filePath = getPath(\"InputAbbreviationAsWordInTypeNameCheck.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Configuration checkConfig = getCheckConfig(\"AbbreviationAsWordInName\");", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c09ebfd632ee7779de2371c0427b2d8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule527localvariablenames/LocalVariableNameTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void oneCharTest() throws Exception", "signatureAfterChange": "      @Test     public void oneCharTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"InputLocalVariableNameOneCharVarName\");", "+        final String filePath = getPath(\"InputLocalVariableNameOneCharVarName.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}]}