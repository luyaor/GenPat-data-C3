{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30bd98a60e7dea04dda9d989661783fd", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30a3f49203a55eaf7c01ffab92ca8b15", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "5b07a9df8af02f337432119e3349344ae13c7065", "commitAfterChange": "e5f09c7fd2b5115bd164a5ed4f0a5e376c2dc2d7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Class resolve(String aName) throws ClassNotFoundException", "signatureAfterChange": "     public Class resolve(String aName) throws ClassNotFoundException", "diff": ["-            if (imp.endsWith(aName) && isLoadable(imp)) {", "-                return safeLoad(imp);", "+            if (imp.endsWith(aName)) {", "+                if (isLoadable(imp)) {", "+                    return safeLoad(imp);", "+                }", "+                // perhaps this is a import for inner class", "+                // let's try load it.", "+                int dot = imp.lastIndexOf(\".\");", "+                if (dot != -1) {", "+                    final String innerName = imp.substring(0, dot) + \"$\"", "+                        + imp.substring(dot + 1);", "+                    if (isLoadable(innerName)) {", "+                        return safeLoad(innerName);", "+                    }", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57aa22dff52d1bb084c7acf43fc70012", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "38c44ee0e91230d52f7eda98404049fec8456d7b", "commitAfterChange": "a4222b86ea273554e5f42c834dd81a029a069ac1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void setupChild(Configuration aChildConf)         throws CheckstyleException", "signatureAfterChange": "     protected void setupChild(Configuration aChildConf)         throws CheckstyleException", "diff": ["+            if (child instanceof AutomaticBean) {", "+                final AutomaticBean bean = (AutomaticBean) child;", "+                bean.contextualize(mChildContext);", "+                bean.configure(aChildConf);", "+            }", "-                fsc.contextualize(mChildContext);", "-                fsc.configure(aChildConf);", "-                addFileSetCheck(fsc);", "+                 addFileSetCheck(fsc);", "-                filter.contextualize(mChildContext);", "-                filter.configure(aChildConf);", "+            else if (child instanceof AuditListener) {", "+                final AuditListener listener = (AuditListener) child;", "+                addListener(listener);", "+            }"]}]}