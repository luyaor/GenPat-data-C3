{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "375cc8a3710e1caaa17b2f671c7c0106", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2e7ccf3bf56653cabcfc0ba51d8ecbb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheck.java", "commitBeforeChange": "b821f5eb95ef5f175921e4387ac6b15fce370824", "commitAfterChange": "6cbcc2f1ee6d1c17cb1e542a9e81a894b5d91f77", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void findDuplicatesInFiles(int aI, int aJ)", "signatureAfterChange": "     private void findDuplicatesInFiles(int aI, int aJ)", "diff": ["-        final int iBlockCount = mLineBlockChecksums[aI].length;", "+        final long[] iLineBlockChecksums = mLineBlockChecksums[aI];", "+        final long[] jSortedBlockChecksums = mSortedRelevantChecksums[aJ];", "+        final int iBlockCount = iLineBlockChecksums.length;", "-                    mSortedRelevantChecksums[aJ],", "-                    mLineBlockChecksums[aI][blockIdx]) >= 0)", "+                    jSortedBlockChecksums,", "+                    iLineBlockChecksums[blockIdx]) >= 0)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c58e6e35cfc2867ce4fe7be19b92f86f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "f34eba11cbd8559d4d06f96e19affa70abaf86ff", "commitAfterChange": "0e3fe5643667a53079dbd114e5b1e9aa91fde083", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "     int process(String aFileName)", "signatureAfterChange": "     private int process(String aFileName)", "diff": ["-    int process(String aFileName)", "+    private int process(String aFileName)", "-        final long timestamp = new File(aFileName).lastModified();", "+        final File f = new File(aFileName);", "+        final long timestamp = f.lastModified();", "+            fireFileStarted(aFileName);", "-                             \"Got a RecognitionException -\" +", "-                             re.getMessage())};", "+                             \"Got a RecognitionException -\" + re.getMessage())};", "-            displayErrors(aFileName, errors);", "+            fireErrors(aFileName, errors);", "+", "+        fireFileFinished(aFileName);"]}]}