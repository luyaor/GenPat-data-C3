{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ab15fcb9abaa0883174aa1b5299d89d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25a45347867bb7e902dd1f66ade3cf3e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     private void register(int aType, Class<?> aHandlerClass)", "signatureAfterChange": "     private void register(int type, Class<?> handlerClass)", "diff": ["-    private void register(int aType, Class<?> aHandlerClass)", "+    private void register(int type, Class<?> handlerClass)", "-            final Constructor<?> ctor = aHandlerClass", "+            final Constructor<?> ctor = handlerClass", "-            mTypeHandlers.put(aType, ctor);", "+            typeHandlers.put(type, ctor);", "-                                       + aHandlerClass);", "+                                       + handlerClass);", "-            LOG.debug(\"couldn't find ctor for \" + aHandlerClass, e);", "+            LOG.debug(\"couldn't find ctor for \" + handlerClass, e);", "-                                       + aHandlerClass);", "+                                       + handlerClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c442e0a498cb4ec120cb6500129b5fa9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     private void register(int aType, Class aHandlerClass)", "signatureAfterChange": "     private void register(int aType, Class<?> aHandlerClass)", "diff": ["-    private void register(int aType, Class aHandlerClass)", "+    private void register(int aType, Class<?> aHandlerClass)", "-            final Constructor ctor = aHandlerClass.getConstructor(new Class[] {", "-                IndentationCheck.class,", "-                DetailAST.class,             // current AST", "-                ExpressionHandler.class,     // parent", "-            });", "+            final Constructor<?> ctor = aHandlerClass", "+                    .getConstructor(new Class[] {IndentationCheck.class,", "+                        DetailAST.class, // current AST", "+                        ExpressionHandler.class, // parent", "+                    });"]}]}