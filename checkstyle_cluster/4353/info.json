{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "15a4ea47ef3e1ab0f86a4a958db33305", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0889da01a6d0d09d3e2b38abb8c1e547", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/usage/UnusedPrivateFieldCheckTest.java", "commitBeforeChange": "5f6970f2542204e3f23ac0466f81d9dc981cd3f5", "commitAfterChange": "5efa04e1bbcb5e90f72296f68534f2e626850ceb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public void testIgnoreFormat() throws Exception", "signatureAfterChange": "          public void testIgnoreFormat() throws Exception", "diff": ["-                \"10:17: Unused field 'mUnreadPrimitive'.\",", "-                \"20:17: Unused field 'mUnused2'.\",", "-                \"22:30: Unused field 'SUNUSED'.\",", "-                \"64:17: Unused field 'mUnused'.\",", "+                \"10:17: Unused private field 'mUnreadPrimitive'.\",", "+                \"20:17: Unused private field 'mUnused2'.\",", "+                \"22:30: Unused private field 'SUNUSED'.\",", "+                \"64:17: Unused private field 'mUnused'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a03faf2f1107e6823d69a94b374bf7d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "f8a53831f0fa98f317ea7dbc6490b5e91b6cc5d9", "commitAfterChange": "5703b6e33550d6e9706f42e253c2cc7d83a358bf", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "       public void testScopeInnerInterfacesPublic()         throws Exception", "signatureAfterChange": "       public void testScopeInnerInterfacesPublic()         throws Exception", "diff": ["-            filepath + \":7: type is missing a Javadoc comment.\",", "-            filepath + \":38: type is missing a Javadoc comment.\",", "+            filepath + \":7: Missing a Javadoc comment.\",", "+            filepath + \":38: Missing a Javadoc comment.\",", "-            filepath + \":43:9: method is missing a Javadoc comment.\",", "-            filepath + \":44:9: method is missing a Javadoc comment.\"", "+            filepath + \":43:9: Missing a Javadoc comment.\",", "+            filepath + \":44:9: Missing a Javadoc comment.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bb07f22cf180ca98dd7abc70d769138", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "a1cecb5e0658862f957e60a8d5b2ade13b592101", "commitAfterChange": "659e6ec7aa7251ea0a825f48c1a523431ff09b79", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public void testRelaxedJavadoc()         throws Exception", "signatureAfterChange": "     public void testRelaxedJavadoc()         throws Exception", "diff": ["-            filepath + \":59: method is missing a Javadoc comment.\",", "-            filepath + \":64: method is missing a Javadoc comment.\",", "-            filepath + \":79: method is missing a Javadoc comment.\",", "-            filepath + \":84: method is missing a Javadoc comment.\"", "+            filepath + \":59:5: method is missing a Javadoc comment.\",", "+            filepath + \":64:5: method is missing a Javadoc comment.\",", "+            filepath + \":79:5: method is missing a Javadoc comment.\",", "+            filepath + \":84:5: method is missing a Javadoc comment.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2134dce4f781d3150844d5808cfe7bb1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "5f3eced2d85c10407b5ba1f38c06af05715d9bd7", "commitAfterChange": "de60ea7b86b5ea25338dfe8a300db9d179004812", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testStringLiteralEquality() throws Exception", "signatureAfterChange": "      @Test     public void testStringLiteralEquality() throws Exception", "diff": ["-            \"11:18: Literal Strings should be compared using equals(), not '=='.\",", "-            \"16:20: Literal Strings should be compared using equals(), not '=='.\",", "-            \"21:22: Literal Strings should be compared using equals(), not '=='.\",", "+            \"7:18: Literal Strings should be compared using equals(), not '=='.\",", "+            \"12:20: Literal Strings should be compared using equals(), not '=='.\",", "+            \"17:22: Literal Strings should be compared using equals(), not '=='.\",", "-        verify(checkConfig, getPath(\"coding\" + File.separator + \"InputStringLiteralEquality.java\"), expected);", "+        verify(checkConfig, getPath(\"checks\" + File.separator + \"InputStringLiteralEquality.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "243e4051840e923a31bb893a4f1c12b7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "45379946e7cc7bcd45b5b587b7c1232400aea4f6", "commitAfterChange": "ceedf8077728da8d462bbdf607a89da82e9a5f2b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testWaiverParentToken()             throws Exception", "signatureAfterChange": "      @Test     public void testWaiverParentToken()             throws Exception", "diff": ["-            \"185:26: \" + getCheckMessage(MSG_KEY, \"42\"),", "-            \"189:32: \" + getCheckMessage(MSG_KEY, \"43\"),", "-            \"193:26: \" + getCheckMessage(MSG_KEY, \"-44\"),", "-            \"197:32: \" + getCheckMessage(MSG_KEY, \"-45\"),", "+            \"185:31: \" + getCheckMessage(MSG_KEY, \"42\"),", "+            \"189:37: \" + getCheckMessage(MSG_KEY, \"43\"),", "+            \"193:31: \" + getCheckMessage(MSG_KEY, \"-44\"),", "+            \"197:37: \" + getCheckMessage(MSG_KEY, \"-45\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2727ea38a8a66d942f8e9f17d730368d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "45379946e7cc7bcd45b5b587b7c1232400aea4f6", "commitAfterChange": "ceedf8077728da8d462bbdf607a89da82e9a5f2b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault()         throws Exception", "signatureAfterChange": "      @Test     public void testDefault()         throws Exception", "diff": ["-            \"185:26: \" + getCheckMessage(MSG_KEY, \"42\"),", "-            \"189:32: \" + getCheckMessage(MSG_KEY, \"43\"),", "-            \"193:26: \" + getCheckMessage(MSG_KEY, \"-44\"),", "-            \"197:32: \" + getCheckMessage(MSG_KEY, \"-45\"),", "+            \"185:31: \" + getCheckMessage(MSG_KEY, \"42\"),", "+            \"189:37: \" + getCheckMessage(MSG_KEY, \"43\"),", "+            \"193:31: \" + getCheckMessage(MSG_KEY, \"-44\"),", "+            \"197:37: \" + getCheckMessage(MSG_KEY, \"-45\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a73c533fc8644838b78ec1798ccd39e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/IllegalInstantiationCheckTest.java", "commitBeforeChange": "acc3f40015ffe1263cfa684ca4b29939249e9aed", "commitAfterChange": "c2b22a74a2e85bbb2cfd4e0e2379bb062cb58dd1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testIt() throws Exception", "signatureAfterChange": "      public void testIt() throws Exception", "diff": ["-            \"30:16: Avoid instantiation of java.lang.Boolean.\",", "-            \"37:21: Avoid instantiation of \" +", "+            \"31:16: Avoid instantiation of java.lang.Boolean.\",", "+            \"38:21: Avoid instantiation of \" +", "-            \"40:18: Avoid instantiation of java.io.File.\",", "-            \"43:21: Avoid instantiation of java.awt.Color.\"", "+            \"41:18: Avoid instantiation of java.io.File.\",", "+            \"44:21: Avoid instantiation of java.awt.Color.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4640439813c22609d7653af439a1fd88", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "dc764f3b6ad475854cd0d22655db3f96e7eb7ed3", "commitAfterChange": "a1cecb5e0658862f957e60a8d5b2ade13b592101", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void testModifierChecks()         throws Exception", "signatureAfterChange": "      public void testModifierChecks()         throws Exception", "diff": ["-            filepath + \":14: 'final' modifier out of order with the JLS suggestions.\",", "-            filepath + \":18: 'private' modifier out of order with the JLS suggestions.\",", "-            filepath + \":24: 'private' modifier out of order with the JLS suggestions.\",", "-            filepath + \":32: redundant 'public' modifier.\",", "+            filepath + \":14:1: 'final' modifier out of order with the JLS suggestions.\",", "+            filepath + \":18:5: 'private' modifier out of order with the JLS suggestions.\",", "+            filepath + \":24:5: 'private' modifier out of order with the JLS suggestions.\",", "+            filepath + \":32:9: redundant 'public' modifier.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49fe4b69d5c9f561eb569d1baafda4c9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "      public void testRegexpHeader()         throws Exception", "signatureAfterChange": "      public void testRegexpHeader()         throws Exception", "diff": ["-            filepath + \":39:57: ')' is preceeded by whitespace.\",", "-            filepath + \":43:14: ')' is preceeded by whitespace.\",", "+            filepath + \":39:57: ')' is preceeded with whitespace.\",", "+            filepath + \":43:14: ')' is preceeded with whitespace.\",", "-            filepath + \":53:57: ')' is preceeded by whitespace.\",", "-            filepath + \":57:14: ')' is preceeded by whitespace.\",", "+            filepath + \":53:57: ')' is preceeded with whitespace.\",", "+            filepath + \":57:14: ')' is preceeded with whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "507fafe767591694c9e5ee663de44e62", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "45379946e7cc7bcd45b5b587b7c1232400aea4f6", "commitAfterChange": "ceedf8077728da8d462bbdf607a89da82e9a5f2b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testIgnoreFieldDeclaration()             throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreFieldDeclaration()             throws Exception", "diff": ["-            \"185:26: \" + getCheckMessage(MSG_KEY, \"42\"),", "-            \"189:32: \" + getCheckMessage(MSG_KEY, \"43\"),", "-            \"193:26: \" + getCheckMessage(MSG_KEY, \"-44\"),", "-            \"197:32: \" + getCheckMessage(MSG_KEY, \"-45\"),", "+            \"185:31: \" + getCheckMessage(MSG_KEY, \"42\"),", "+            \"189:37: \" + getCheckMessage(MSG_KEY, \"43\"),", "+            \"193:31: \" + getCheckMessage(MSG_KEY, \"-44\"),", "+            \"197:37: \" + getCheckMessage(MSG_KEY, \"-45\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "633d62ede0ba4d93d48062417431e37e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/usage/UnusedLocalVariableCheckTest.java", "commitBeforeChange": "5f6970f2542204e3f23ac0466f81d9dc981cd3f5", "commitAfterChange": "5efa04e1bbcb5e90f72296f68534f2e626850ceb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDefault() throws Exception", "signatureAfterChange": "     public void testDefault() throws Exception", "diff": ["-            \"13:13: Unread local variable 'mUnreadPrimitive'.\",", "-            \"24:16: Unread local variable 'unreadObject'.\",", "-            \"36:15: Unread local variable 'unreadArray'.\",", "-            \"45:13: Unread local variable 'java'.\",", "+            \"13:13: Unused local variable 'mUnreadPrimitive'.\",", "+            \"24:16: Unused local variable 'unreadObject'.\",", "+            \"36:15: Unused local variable 'unreadArray'.\",", "+            \"45:13: Unused local variable 'java'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "638084703c27103711d17c3e192a9720", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceBeforeCheckTest.java", "commitBeforeChange": "35e4a41c1027d5078cbaf0d3988a21c12a2daf7e", "commitAfterChange": "e55435125ea57e96f0bf876dd13e78b0ae02cd52", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testDefault() throws Exception", "signatureAfterChange": "      public void testDefault() throws Exception", "diff": ["-            \"30:14: '++' is preceeded with whitespace.\",", "-            \"30:21: '--' is preceeded with whitespace.\",", "-            \"176:18: ';' is preceeded with whitespace.\",", "-            \"178:23: ';' is preceeded with whitespace.\",", "+            \"30:14: '++' is preceded with whitespace.\",", "+            \"30:21: '--' is preceded with whitespace.\",", "+            \"176:18: ';' is preceded with whitespace.\",", "+            \"178:23: ';' is preceded with whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "693af2179c8b24a5fdf672b0db697f2e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/InnerAssignmentCheckTest.java", "commitBeforeChange": "8809d19699c1da9d5992d2e23671255fafd619d5", "commitAfterChange": "96d6745a12127bd547e32137713b33aa9327aeb8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testIt() throws Exception", "signatureAfterChange": "     public void testIt() throws Exception", "diff": ["-            \"102:15: Avoid inner assignments.\",", "-            \"102:19: Avoid inner assignments.\",", "-            \"104:39: Avoid inner assignments.\",", "-            \"106:35: Avoid inner assignments.\",", "+            \"102:15: Inner assignments should be avoided.\",", "+            \"102:19: Inner assignments should be avoided.\",", "+            \"104:39: Inner assignments should be avoided.\",", "+            \"106:35: Inner assignments should be avoided.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b9d2397de2fe9e948ce5e7330901c89", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "     @Test     public void testDefault() throws Exception", "diff": ["-            \"3: Wrong order for 'java.awt.Dialog' import.\",", "-            \"7: Wrong order for 'javax.swing.JComponent' import.\",", "-            \"9: Wrong order for 'java.io.File' import.\",", "-            \"11: Wrong order for 'java.io.IOException' import.\",", "+            \"5: Wrong order for 'java.awt.Dialog' import.\",", "+            \"9: Wrong order for 'javax.swing.JComponent' import.\",", "+            \"11: Wrong order for 'java.io.File' import.\",", "+            \"13: Wrong order for 'java.io.IOException' import.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80f3b14ca49c5f5594ba433b8402870f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "f8a53831f0fa98f317ea7dbc6490b5e91b6cc5d9", "commitAfterChange": "5703b6e33550d6e9706f42e253c2cc7d83a358bf", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void testIgnoreAccess()         throws Exception", "signatureAfterChange": "      public void testIgnoreAccess()         throws Exception", "diff": ["-            filepath + \":14: type is missing a Javadoc comment.\",", "+            filepath + \":14: Missing a Javadoc comment.\",", "-            filepath + \":21: type is missing a Javadoc comment.\",", "+            filepath + \":21: Missing a Javadoc comment.\",", "-            filepath + \":24:16: variable name 'data' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\",", "-            filepath + \":27: type is missing a Javadoc comment.\",", "+            filepath + \":24:16: Name 'data' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\",", "+            filepath + \":27: Missing a Javadoc comment.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83b1b05c11e615779b69b2c30cf193c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "96d3aaea19657ac233d9a57b46a52bc0b35eda95", "commitAfterChange": "5f3eced2d85c10407b5ba1f38c06af05715d9bd7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testIllegalTokenDefault() throws Exception", "signatureAfterChange": "      @Test     public void testIllegalTokenDefault() throws Exception", "diff": ["-            \"11:9: Using 'LITERAL_SWITCH' is not allowed.\",", "-            \"14:18: Using 'POST_DEC' is not allowed.\",", "-            \"15:18: Using 'POST_INC' is not allowed.\",", "+            \"8:9: Using 'LITERAL_SWITCH' is not allowed.\",", "+            \"11:18: Using 'POST_DEC' is not allowed.\",", "+            \"12:18: Using 'POST_INC' is not allowed.\",", "-        verify(checkConfig, getPath(\"InputIllegalTokens.java\"), expected);", "+        verify(checkConfig, getPath(\"checks/InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "845d51b7eb5131a9e42aae919ccddb79", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java", "commitBeforeChange": "7c262e61e676982d7d33a42971b885d97b95f456", "commitAfterChange": "3bcfcac9eec4009cac1f76dff6f946a35a063bb2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAllVariants() throws Exception", "signatureAfterChange": "      @Test     public void testAllVariants() throws Exception", "diff": ["-            \"3:1: Name 'InputAbstractClassName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-            \"6:1: Name 'NonAbstractClassName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-            \"9:1: Name 'FactoryWithBadName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-            \"13:5: Name 'NonAbstractInnerClass' must match pattern '^Abstract.*$|^.*Factory$'.\",", "+            \"3:1: Name 'InputAbstractClassName' must match pattern '^Abstract.+$|^.*Factory$'.\",", "+            \"6:1: Name 'NonAbstractClassName' must match pattern '^Abstract.+$|^.*Factory$'.\",", "+            \"9:1: Name 'FactoryWithBadName' must match pattern '^Abstract.+$|^.*Factory$'.\",", "+            \"13:5: Name 'NonAbstractInnerClass' must match pattern '^Abstract.+$|^.*Factory$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84ea0851b764bc719d2a849fc945ec20", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "      public void testScopeAnonInnerAnonInner()         throws Exception", "signatureAfterChange": "      public void testScopeAnonInnerAnonInner()         throws Exception", "diff": ["-            filepath + \":39:57: ')' is preceeded by whitespace.\",", "-            filepath + \":43:14: ')' is preceeded by whitespace.\",", "+            filepath + \":39:57: ')' is preceeded with whitespace.\",", "+            filepath + \":43:14: ')' is preceeded with whitespace.\",", "-            filepath + \":53:57: ')' is preceeded by whitespace.\",", "-            filepath + \":57:14: ')' is preceeded by whitespace.\",", "+            filepath + \":53:57: ')' is preceeded with whitespace.\",", "+            filepath + \":57:14: ')' is preceeded with whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8547ceb3a4205e9baacac8f628abda74", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d92ceb81a67bb10b98f5ce305f839ba535a1c6ee", "commitAfterChange": "9aa8268e473071cbe26aa9d3a8631f1902e3fef0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void testIgnoreAccess()         throws Exception", "signatureAfterChange": "      public void testIgnoreAccess()         throws Exception", "diff": ["-            filepath + \":17:20: variable 'fData' missing Javadoc.\",", "-            filepath + \":17:20: variable 'fData' must be private and have accessor methods.\",", "+            filepath + \":17:20: Variable 'fData' missing Javadoc.\",", "+            filepath + \":17:20: Variable 'fData' must be private and have accessor methods.\",", "-            filepath + \":24:16: variable 'data' missing Javadoc.\",", "+            filepath + \":24:16: Variable 'data' missing Javadoc.\",", "-            filepath + \":30:24: variable 'rData' missing Javadoc.\",", "+            filepath + \":30:24: Variable 'rData' missing Javadoc.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8952abf794f8e0d358fc172995eae608", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "4d0adc9deed7f3df296f8016941414ec1600955b", "commitAfterChange": "1edf43ab329e96db26a3ed3a4f4a1abdaa4b1a3a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testWhitespaceOff()         throws Exception", "signatureAfterChange": "      public void testWhitespaceOff()         throws Exception", "diff": ["-            filepath + \":59: '{' should be on the previous line.\",", "-            filepath + \":63: '{' should be on the previous line.\",", "-            filepath + \":75: '{' should be on the previous line.\",", "-            filepath + \":79: '{' should be on the previous line.\",", "+            filepath + \":59:9: '{' should be on the previous line.\",", "+            filepath + \":63:9: '{' should be on the previous line.\",", "+            filepath + \":75:9: '{' should be on the previous line.\",", "+            filepath + \":79:9: '{' should be on the previous line.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d18967cd9ef4212787602f1edef8cd4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "592d5d86b9cedfa04ad9990d23b244414aaad685", "commitAfterChange": "a5031acb330edaa2311acbce4945f7b44fc76b29", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-            \"2: 'import' should be separated from previous statement.\",", "-            \"16: 'CLASS_DEF' should be separated from previous statement.\",", "-            \"19: 'VARIABLE_DEF' should be separated from previous statement.\",", "-            \"58: 'INTERFACE_DEF' should be separated from previous statement.\",", "+            \"20: 'import' should be separated from previous statement.\",", "+            \"33: 'CLASS_DEF' should be separated from previous statement.\",", "+            \"36: 'VARIABLE_DEF' should be separated from previous statement.\",", "+            \"75: 'INTERFACE_DEF' should be separated from previous statement.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9643be71ece77139f931fb95438e1bdf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      public void testPackageHtml()         throws Exception", "signatureAfterChange": "      public void testPackageHtml()         throws Exception", "diff": ["-            filepath + \":39:57: ')' is preceeded by whitespace.\",", "-            filepath + \":43:14: ')' is preceeded by whitespace.\",", "+            filepath + \":39:57: ')' is preceeded with whitespace.\",", "+            filepath + \":43:14: ')' is preceeded with whitespace.\",", "-            filepath + \":53:57: ')' is preceeded by whitespace.\",", "-            filepath + \":57:14: ')' is preceeded by whitespace.\",", "+            filepath + \":53:57: ')' is preceeded with whitespace.\",", "+            filepath + \":57:14: ')' is preceeded with whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5dec2c9468800a270ac707616d85501", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/MultipleVariableDeclarationsCheckTest.java", "commitBeforeChange": "fbf91151ca0d04a36c45e15ebb0c048fb898f4f7", "commitAfterChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testIt() throws Exception", "signatureAfterChange": "     public void testIt() throws Exception", "diff": ["-            \"4:5: Only one varibale definition per line allowed.\",", "+            \"4:5: Only one variable definition per line allowed.\",", "-            \"8:9: Only one varibale definition per line allowed.\",", "-            \"12:5: Only one varibale definition per line allowed.\",", "-            \"15:5: Only one varibale definition per line allowed.\",", "+            \"8:9: Only one variable definition per line allowed.\",", "+            \"12:5: Only one variable definition per line allowed.\",", "+            \"15:5: Only one variable definition per line allowed.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6bf3f8765cb0c34ac69a5a845091c10", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsTest.java", "commitBeforeChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "commitAfterChange": "fdc81723bdfd6af2ffc2c901cd8dd5b2fe948267", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r     @Test\r     public void testCompactDefault() throws Exception", "signatureAfterChange": "\r     @Test\r     public void testCompactDefault() throws Exception", "diff": ["-            \"82:84: The warning '' cannot be suppressed at this location.\",\r", "-            \"82:97: The warning '   ' cannot be suppressed at this location.\",\r", "-            \"82:171: The warning '' cannot be suppressed at this location.\",\r", "-            \"82:184: The warning '   ' cannot be suppressed at this location.\",\r", "+            \"82:94: The warning '' cannot be suppressed at this location.\",\r", "+            \"82:107: The warning '   ' cannot be suppressed at this location.\",\r", "+            \"82:181: The warning '' cannot be suppressed at this location.\",\r", "+            \"82:194: The warning '   ' cannot be suppressed at this location.\",\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b75938344e1e0b7c53603656e496e7f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/RedundantThrowsCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testAllowSubclasses() throws Exception", "signatureAfterChange": "      @Test     public void testAllowSubclasses() throws Exception", "diff": ["-            \"13:16: Redundant throws: 'RuntimeException' is unchecked exception.\",", "-            \"19:29: Redundant throws: 'java.io.IOException' listed more then one time.\",", "-            \"39:27: Redundant throws: 'NullPointerException' is unchecked exception.\",", "-            \"39:49: Redundant throws: 'RuntimeException' is unchecked exception.\",", "+            \"15:16: Redundant throws: 'RuntimeException' is unchecked exception.\",", "+            \"21:29: Redundant throws: 'java.io.IOException' listed more then one time.\",", "+            \"41:27: Redundant throws: 'NullPointerException' is unchecked exception.\",", "+            \"41:49: Redundant throws: 'RuntimeException' is unchecked exception.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b768387621fe52c49f9603268c605eda", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MemberNameCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testUnderlined() throws Exception", "signatureAfterChange": "      @Test     public void testUnderlined() throws Exception", "diff": ["-            \"3:16: Name 'mPublic' must match pattern '^_[a-z]*$'.\",", "-            \"4:19: Name 'mProtected' must match pattern '^_[a-z]*$'.\",", "-            \"5:9: Name 'mPackage' must match pattern '^_[a-z]*$'.\",", "-            \"6:17: Name 'mPrivate' must match pattern '^_[a-z]*$'.\",", "+            \"5:16: Name 'mPublic' must match pattern '^_[a-z]*$'.\",", "+            \"6:19: Name 'mProtected' must match pattern '^_[a-z]*$'.\",", "+            \"7:9: Name 'mPackage' must match pattern '^_[a-z]*$'.\",", "+            \"8:17: Name 'mPrivate' must match pattern '^_[a-z]*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8468772ae034e3d442c0e9a30fe538c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "      public void testScopeAnonInnerPrivate()         throws Exception", "signatureAfterChange": "      public void testScopeAnonInnerPrivate()         throws Exception", "diff": ["-            filepath + \":39:57: ')' is preceeded by whitespace.\",", "-            filepath + \":43:14: ')' is preceeded by whitespace.\",", "+            filepath + \":39:57: ')' is preceeded with whitespace.\",", "+            filepath + \":43:14: ')' is preceeded with whitespace.\",", "-            filepath + \":53:57: ')' is preceeded by whitespace.\",", "-            filepath + \":57:14: ')' is preceeded by whitespace.\",", "+            filepath + \":53:57: ')' is preceeded with whitespace.\",", "+            filepath + \":57:14: ')' is preceeded with whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf118b4407ef1fafcc8d082438ee9e8c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "4d0adc9deed7f3df296f8016941414ec1600955b", "commitAfterChange": "1edf43ab329e96db26a3ed3a4f4a1abdaa4b1a3a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "       public void testWhitespace()         throws Exception", "signatureAfterChange": "       public void testWhitespace()         throws Exception", "diff": ["-            filepath + \":59: '{' should be on the previous line.\",", "-            filepath + \":63: '{' should be on the previous line.\",", "+            filepath + \":59:9: '{' should be on the previous line.\",", "+            filepath + \":63:9: '{' should be on the previous line.\",", "-            filepath + \":75: '{' should be on the previous line.\",", "+            filepath + \":75:9: '{' should be on the previous line.\",", "-            filepath + \":79: '{' should be on the previous line.\",", "+            filepath + \":79:9: '{' should be on the previous line.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1acaf7a11e9603bf84daf279a2cc796", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheckTest.java", "commitBeforeChange": "8787efc822fd27a4a3f3dd795c34525ccc08d297", "commitAfterChange": "2fe9f501d86b6e70aa64f4474ae0863bb0b928d5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIt() throws Exception", "signatureAfterChange": "     @Test     public void testIt() throws Exception", "diff": ["-            \"6:9: Reference to instance variable 'i' needs \\\"this.\\\".\",", "-            \"12:9: Method call to 'method1' needs \\\"this.\\\".\",", "-            \"26:9: Reference to instance variable 'i' needs \\\"this.\\\".\",", "-            \"51:9: Reference to instance variable 'z' needs \\\"this.\\\".\",", "+            \"8:9: Reference to instance variable 'i' needs \\\"this.\\\".\",", "+            \"14:9: Method call to 'method1' needs \\\"this.\\\".\",", "+            \"28:9: Reference to instance variable 'i' needs \\\"this.\\\".\",", "+            \"53:9: Reference to instance variable 'z' needs \\\"this.\\\".\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c347a4caed0aed032a37746ffba21fa7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsTest.java", "commitBeforeChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "commitAfterChange": "fdc81723bdfd6af2ffc2c901cd8dd5b2fe948267", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r     @Test\r     public void testCompactNoUncheckedUnused() throws Exception", "signatureAfterChange": "\r     @Test\r     public void testCompactNoUncheckedUnused() throws Exception", "diff": ["-            \"82:38: The warning 'unchecked' cannot be suppressed at this location.\",\r", "-            \"82:105: The warning 'unused' cannot be suppressed at this location.\",\r", "-            \"82:125: The warning 'unchecked' cannot be suppressed at this location.\",\r", "-            \"82:192: The warning 'unused' cannot be suppressed at this location.\",\r", "+            \"82:48: The warning 'unchecked' cannot be suppressed at this location.\",\r", "+            \"82:115: The warning 'unused' cannot be suppressed at this location.\",\r", "+            \"82:135: The warning 'unchecked' cannot be suppressed at this location.\",\r", "+            \"82:202: The warning 'unused' cannot be suppressed at this location.\",\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfd41c900f4770438b55e3e188fad2bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MemberNameCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefaults() throws Exception", "signatureAfterChange": "      @Test     public void testDefaults() throws Exception", "diff": ["-            \"8:16: Name '_public' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            \"9:19: Name '_protected' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            \"10:9: Name '_package' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            \"11:17: Name '_private' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "+            \"10:16: Name '_public' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "+            \"11:19: Name '_protected' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "+            \"12:9: Name '_package' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "+            \"13:17: Name '_private' must match pattern '^[a-z][a-zA-Z0-9]*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d609fadeb2bef4aa8db83af7b0e8920c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "dc764f3b6ad475854cd0d22655db3f96e7eb7ed3", "commitAfterChange": "a1cecb5e0658862f957e60a8d5b2ade13b592101", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      public void testIgnoreAccess()         throws Exception", "signatureAfterChange": "      public void testIgnoreAccess()         throws Exception", "diff": ["-            filepath + \":17: variable 'fData' missing Javadoc.\",", "-            filepath + \":17: variable 'fData' must be private and have accessor methods.\",", "+            filepath + \":17:20: variable 'fData' missing Javadoc.\",", "+            filepath + \":17:20: variable 'fData' must be private and have accessor methods.\",", "-            filepath + \":24: variable 'data' missing Javadoc.\",", "+            filepath + \":24:16: variable 'data' missing Javadoc.\",", "-            filepath + \":30: variable 'rData' missing Javadoc.\",", "+            filepath + \":30:24: variable 'rData' missing Javadoc.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d652f73183a8c42692e99bf4e12ff9f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java", "commitBeforeChange": "7c262e61e676982d7d33a42971b885d97b95f456", "commitAfterChange": "3bcfcac9eec4009cac1f76dff6f946a35a063bb2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIllegalAbstractClassName() throws Exception", "signatureAfterChange": "     @Test     public void testIllegalAbstractClassName() throws Exception", "diff": ["-            \"3:1: Name 'InputAbstractClassName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-            \"6:1: Name 'NonAbstractClassName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-            \"9:1: Name 'FactoryWithBadName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-            \"13:5: Name 'NonAbstractInnerClass' must match pattern '^Abstract.*$|^.*Factory$'.\",", "+            \"3:1: Name 'InputAbstractClassName' must match pattern '^Abstract.+$|^.*Factory$'.\",", "+            \"6:1: Name 'NonAbstractClassName' must match pattern '^Abstract.+$|^.*Factory$'.\",", "+            \"9:1: Name 'FactoryWithBadName' must match pattern '^Abstract.+$|^.*Factory$'.\",", "+            \"13:5: Name 'NonAbstractInnerClass' must match pattern '^Abstract.+$|^.*Factory$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d961a9a1777466691e8a58e138d9de7e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsTest.java", "commitBeforeChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "commitAfterChange": "fdc81723bdfd6af2ffc2c901cd8dd5b2fe948267", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r     @Test\r     public void testCompactNoUnWildcard() throws Exception", "signatureAfterChange": "\r     @Test\r     public void testCompactNoUnWildcard() throws Exception", "diff": ["-            \"82:38: The warning 'unchecked' cannot be suppressed at this location.\",\r", "-            \"82:105: The warning 'unused' cannot be suppressed at this location.\",\r", "-            \"82:125: The warning 'unchecked' cannot be suppressed at this location.\",\r", "-            \"82:192: The warning 'unused' cannot be suppressed at this location.\",\r", "+            \"82:48: The warning 'unchecked' cannot be suppressed at this location.\",\r", "+            \"82:115: The warning 'unused' cannot be suppressed at this location.\",\r", "+            \"82:135: The warning 'unchecked' cannot be suppressed at this location.\",\r", "+            \"82:202: The warning 'unused' cannot be suppressed at this location.\",\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de1cf535a62a15082c73e10a80713dcb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "85221f6a4054191749796c207ce223be73cff163", "commitAfterChange": "d0a19311e37764cde921c38a618691aa340d252e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testAllowNoEmptyLineBetweenFields() throws Exception", "signatureAfterChange": "      @Test     public void testAllowNoEmptyLineBetweenFields() throws Exception", "diff": ["-            \"20: 'import' should be separated from previous statement.\",", "-            \"33: 'CLASS_DEF' should be separated from previous statement.\",", "-            \"37: 'STATIC_INIT' should be separated from previous statement.\",", "-            \"75: 'INTERFACE_DEF' should be separated from previous statement.\",", "+            \"21: 'import' should be separated from previous statement.\",", "+            \"35: 'CLASS_DEF' should be separated from previous statement.\",", "+            \"39: 'STATIC_INIT' should be separated from previous statement.\",", "+            \"77: 'INTERFACE_DEF' should be separated from previous statement.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de32b852712838684b90b5450766d8dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "f8a53831f0fa98f317ea7dbc6490b5e91b6cc5d9", "commitAfterChange": "5703b6e33550d6e9706f42e253c2cc7d83a358bf", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      public void testInner()         throws Exception", "signatureAfterChange": "      public void testInner()         throws Exception", "diff": ["-            filepath + \":14: type is missing a Javadoc comment.\",", "+            filepath + \":14: Missing a Javadoc comment.\",", "-            filepath + \":21: type is missing a Javadoc comment.\",", "+            filepath + \":21: Missing a Javadoc comment.\",", "-            filepath + \":24:16: variable name 'data' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\",", "-            filepath + \":27: type is missing a Javadoc comment.\",", "+            filepath + \":24:16: Name 'data' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\",", "+            filepath + \":27: Missing a Javadoc comment.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edbc388e2d424bd17970dc44b0237dea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/InnerAssignmentCheckTest.java", "commitBeforeChange": "acc3f40015ffe1263cfa684ca4b29939249e9aed", "commitAfterChange": "c2b22a74a2e85bbb2cfd4e0e2379bb062cb58dd1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testIt() throws Exception", "signatureAfterChange": "      public void testIt() throws Exception", "diff": ["-            \"101:15: Avoid inner assignments.\",", "-            \"101:19: Avoid inner assignments.\",", "-            \"103:39: Avoid inner assignments.\",", "-            \"105:35: Avoid inner assignments.\",", "+            \"102:15: Avoid inner assignments.\",", "+            \"102:19: Avoid inner assignments.\",", "+            \"104:39: Avoid inner assignments.\",", "+            \"106:35: Avoid inner assignments.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f42225f61522f2cc82b77a3428bf2593", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "4d0adc9deed7f3df296f8016941414ec1600955b", "commitAfterChange": "1edf43ab329e96db26a3ed3a4f4a1abdaa4b1a3a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testWhitespaceCastParenOff()         throws Exception", "signatureAfterChange": "      public void testWhitespaceCastParenOff()         throws Exception", "diff": ["-            filepath + \":59: '{' should be on the previous line.\",", "-            filepath + \":63: '{' should be on the previous line.\",", "-            filepath + \":75: '{' should be on the previous line.\",", "+            filepath + \":59:9: '{' should be on the previous line.\",", "+            filepath + \":63:9: '{' should be on the previous line.\",", "+            filepath + \":75:9: '{' should be on the previous line.\",", "-            filepath + \":79: '{' should be on the previous line.\",", "+            filepath + \":79:9: '{' should be on the previous line.\","]}]}