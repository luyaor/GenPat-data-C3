{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a8c320a47498a0e203bd4d339fef6883", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bddc363780b93b039e3b8de4356df3cc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "39ce82b920cf83358bf0c291e9ed826b5662c7e8", "commitAfterChange": "abe2b200312ee72aa552026b1a34e8bd72bfdc4e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void registerCheck(Check check)         throws CheckstyleException", "signatureAfterChange": "     private void registerCheck(Check check)         throws CheckstyleException", "diff": ["-                try {", "-                    final int tokenId = TokenTypes.getTokenId(token);", "-                    if (Arrays.binarySearch(acceptableTokens, tokenId) >= 0) {", "-                        registerCheck(token, check);", "-                    }", "-                    else {", "-                        throw new IllegalArgumentException(\"Token \\\"\"", "-                            + token + \"\\\" was not found in Acceptable tokens list\"", "-                                    + \" in check \" + check);", "-                    }", "+                final int tokenId = TokenTypes.getTokenId(token);", "+                if (Arrays.binarySearch(acceptableTokens, tokenId) >= 0) {", "+                    registerCheck(token, check);", "-                catch (final IllegalArgumentException ex) {", "+                else {", "-                                + \" in check \" + check, ex);", "+                                + \" in check \" + check);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6876c83e995caa33970a312b2b475be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "5f0d69b64d947d8ab99e8303266e68238592e00a", "commitAfterChange": "5ce7d2562fa583fdb812c6742b1198d0c99ccd6a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     void registerCheck(Check aCheck)            throws CheckstyleException", "signatureAfterChange": "     void registerCheck(Check aCheck)            throws CheckstyleException", "diff": ["-                String token = (String) it.next();", "-                int tokenId = TokenTypes.getTokenId(token);", "-                if (Arrays.binarySearch(acceptableTokens, tokenId) >= 0) {", "-                    registerCheck(token, aCheck);", "+                final String token = (String) it.next();", "+                try {", "+                    int tokenId = TokenTypes.getTokenId(token);                    ", "+                    if (Arrays.binarySearch(acceptableTokens, tokenId) >= 0) {", "+                        registerCheck(token, aCheck);", "+                    }", "+                    // TODO: else error message?", "-                // TODO: else error message?", "+                catch (IllegalArgumentException ex) {", "+                    throw new CheckstyleException(\"illegal token \\\"\"", "+                        + token + \"\\\" in check \" + aCheck);", "+                }"]}]}