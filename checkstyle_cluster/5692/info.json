{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b2a6c2def86ec60b602ef3c5568576f7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d225209486084198c4617383f88c2ff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/TreeTableModelAdapter.java", "commitBeforeChange": "2915ccf21a2f350034d9170d0b2e075e61f091ff", "commitAfterChange": "57d522e2095abd90e35aa7602d4826c55d5d3bdf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public TreeTableModelAdapter(TreeTableModel treeTableModel, JTree tree)", "signatureAfterChange": "      public TreeTableModelAdapter(TreeTableModel treeTableModel, JTree tree)", "diff": ["-        tree.addTreeExpansionListener(new TreeExpansionListener() {", "-            // Don't use fireTableRowsInserted() here; the selection model", "-            // would get updated twice.", "-            @Override", "-            public void treeExpanded(TreeExpansionEvent event) {", "-                fireTableDataChanged();", "-            }", "-", "-            @Override", "-            public void treeCollapsed(TreeExpansionEvent event) {", "-                fireTableDataChanged();", "-            }", "-        });", "+        tree.addTreeExpansionListener(new UpdatingTreeExpansionListener());", "-        treeTableModel.addTreeModelListener(new TreeModelListener() {", "-            @Override", "-            public void treeNodesChanged(TreeModelEvent e) {", "-                delayedFireTableDataChanged();", "-            }", "-", "-            @Override", "-            public void treeNodesInserted(TreeModelEvent e) {", "-                delayedFireTableDataChanged();", "-            }", "-", "-            @Override", "-            public void treeNodesRemoved(TreeModelEvent e) {", "-                delayedFireTableDataChanged();", "-            }", "-", "-            @Override", "-            public void treeStructureChanged(TreeModelEvent e) {", "-                delayedFireTableDataChanged();", "-            }", "-        });", "+        treeTableModel.addTreeModelListener(new UpdatingTreeModelListener());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b81b67b1dfbe45a2fcfd2ffa244655be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "8e168c23bde5fed98dea0141b0cdcf11a74a7454", "commitAfterChange": "6f1840f011cea3a523d9df1278d4a0af98e1d967", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "     private void checkThrowsTags(List<JavadocTag> tags,             List<ExceptionInfo> throwsList, boolean reportExpectedTags)", "signatureAfterChange": "     private void checkThrowsTags(List<JavadocTag> tags,             List<ExceptionInfo> throwsList, boolean reportExpectedTags)", "diff": ["-            boolean found = foundThrows.contains(documentedEx);", "-            // First look for matches on the exception name", "-            ListIterator<ExceptionInfo> throwIt = throwsList.listIterator();", "-            while (!found && throwIt.hasNext()) {", "-                final ExceptionInfo ei = throwIt.next();", "-", "-                if (ei.getName().getText().equals(", "-                        documentedCI.getName().getText())) {", "-                    found = true;", "-                    ei.setFound();", "-                    foundThrows.add(documentedEx);", "-                }", "-            }", "-", "-            // Now match on the exception type", "-            throwIt = throwsList.listIterator();", "-            while (!found && throwIt.hasNext()) {", "-                final ExceptionInfo ei = throwIt.next();", "-", "-                if (documentedCI.getClazz() == ei.getClazz()) {", "-                    found = true;", "-                    ei.setFound();", "-                    foundThrows.add(documentedEx);", "-                }", "-                else if (allowThrowsTagsForSubclasses) {", "-                    found = isSubclass(documentedCI.getClazz(), ei.getClazz());", "-                }", "-            }", "+            final boolean found = foundThrows.contains(documentedEx)", "+                    || isInThrows(throwsList, documentedCI, foundThrows);"]}]}