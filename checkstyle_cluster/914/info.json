{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a845fdb94669e366e3b31007db85dbc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "067a2f469b2ead0bfa2ca962be03ef60", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule53camelcase/AbbreviationAsWordInNameTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void abbreviationAsWordInNameTest() throws Exception", "signatureAfterChange": "      @Test     public void abbreviationAsWordInNameTest() throws Exception", "diff": ["-        int maxCapitalCount = 1;", "-        String msg = getCheckMessage(clazz, MSG_KEY, maxCapitalCount);", "+        final int maxCapitalCount = 1;", "+        final String msg = getCheckMessage(clazz, MSG_KEY, maxCapitalCount);", "-        String filePath = builder.getFilePath(\"InputAbbreviationAsWordInTypeNameCheck\");", "+        final String filePath = builder.getFilePath(\"InputAbbreviationAsWordInTypeNameCheck\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "076c8ec5ffdabd12f9f348a8c00444f3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule731selfexplanatory/JavadocMethodTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void javadocMethodTest() throws Exception", "signatureAfterChange": "      @Test     public void javadocMethodTest() throws Exception", "diff": ["-        String msg = getCheckMessage(JavadocMethodCheck.class, \"javadoc.missing\");", "+        final String msg = getCheckMessage(JavadocMethodCheck.class, \"javadoc.missing\");", "-        Configuration checkConfig = builder.getCheckConfig(\"JavadocMethod\");", "-        String filePath = builder.getFilePath(\"InputJavadocMethodCheck\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"JavadocMethod\");", "+        final String filePath = builder.getFilePath(\"InputJavadocMethodCheck\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0af2b55c8e602519c4e6f237ee1cfc08", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/comments/CompareTreesWithComments.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private static boolean isAstEqualsSafe(DetailAST expected, DetailAST actual)", "signatureAfterChange": "      private static boolean isAstEqualsSafe(DetailAST expected, DetailAST actual)", "diff": ["-            DetailAST childExpected = expected.getFirstChild();", "-            DetailAST childActual = actual.getFirstChild();", "+            final DetailAST childExpected = expected.getFirstChild();", "+            final DetailAST childActual = actual.getFirstChild();", "-                DetailAST nextSiblingExpected = expected.getNextSibling();", "-                DetailAST nextSiblingActual = actual.getNextSibling();", "+                final DetailAST nextSiblingExpected = expected.getNextSibling();", "+                final DetailAST nextSiblingActual = actual.getNextSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d326607b2f3b2424bd1df08aa415e4a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CommitValidationTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private static RevCommitsPair resolveRevCommitsPair(Repository repo)", "signatureAfterChange": "      private static RevCommitsPair resolveRevCommitsPair(Repository repo)", "diff": ["-            ObjectId headId = repo.resolve(Constants.HEAD);", "-            RevCommit headCommit = revWalk.parseCommit(headId);", "+            final ObjectId headId = repo.resolve(Constants.HEAD);", "+            final RevCommit headCommit = revWalk.parseCommit(headId);", "-                RevCommit firstParent = headCommit.getParent(0);", "-                RevCommit secondParent = headCommit.getParent(1);", "+                final RevCommit firstParent = headCommit.getParent(0);", "+                final RevCommit secondParent = headCommit.getParent(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15e5ecfd216edf744444c1afdb8ffc10", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testUnableToReadSuppressions() throws Exception", "signatureAfterChange": "      @Test     public void testUnableToReadSuppressions() throws Exception", "diff": ["-        Class<SuppressionsLoader> loaderClass = SuppressionsLoader.class;", "-        Method loadSuppressions =", "+        final Class<SuppressionsLoader> loaderClass = SuppressionsLoader.class;", "+        final Method loadSuppressions =", "-        InputSource inputSource = new InputSource();", "+        final InputSource inputSource = new InputSource();", "-        String sourceName = \"suppressions_none.xml\";", "+        final String sourceName = \"suppressions_none.xml\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20677d32eb4efa36a0ea21327b36c526", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PropertyCacheFileTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testExceptionNoSuchAlgorithmException() throws Exception", "signatureAfterChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testExceptionNoSuchAlgorithmException() throws Exception", "diff": ["-        Configuration config = new DefaultConfiguration(\"myName\");", "+        final Configuration config = new DefaultConfiguration(\"myName\");", "-        PropertyCacheFile cache = new PropertyCacheFile(config, filePath);", "+        final PropertyCacheFile cache = new PropertyCacheFile(config, filePath);", "-        Class<?>[] param = new Class<?>[1];", "+        final Class<?>[] param = new Class<?>[1];", "-        Method method = PropertyCacheFile.class.getDeclaredMethod(\"getConfigHashCode\", param);", "+        final Method method = PropertyCacheFile.class.getDeclaredMethod(\"getConfigHashCode\", param);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fe5487b447caeafe6cfe6a53800b654", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "b4e77fd043c8546f6abf99cc0196c4d47e6084b1", "commitAfterChange": "829ae4c34f89ac06043265cdb3d80639988d85d8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testRemoveFilter() throws Exception", "signatureAfterChange": "      @Test     public void testRemoveFilter() throws Exception", "diff": ["-        DebugChecker c= new DebugChecker();", "-        DebugFilter f = new DebugFilter();", "-        DebugFilter f2 = new DebugFilter();", "+        final DebugChecker c= new DebugChecker();", "+        final DebugFilter f = new DebugFilter();", "+        final DebugFilter f2 = new DebugFilter();", "-        TreeSet<LocalizedMessage> msgs = Sets.newTreeSet();", "+        final TreeSet<LocalizedMessage> msgs = Sets.newTreeSet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "455001e08b3d17938d8a693000bb3032", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule521packagenames/PackageNameTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void badPackageName3Test() throws Exception", "signatureAfterChange": "      @Test     public void badPackageName3Test() throws Exception", "diff": ["-        String packagePath = \"com.google.checkstyle.test.chapter5naming.rule521$packagenames\";", "-        String msg = getCheckMessage(checkConfig.getMessages(), MSG_KEY, packagePath, format);", "+        final String packagePath = \"com.google.checkstyle.test.chapter5naming.rule521$packagenames\";", "+        final String msg = getCheckMessage(checkConfig.getMessages(), MSG_KEY, packagePath, format);", "-        String filePath = builder.getFilePath(\"PackageBadNameInput3\");", "+        final String filePath = builder.getFilePath(\"PackageBadNameInput3\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67ba5c327af814a3e8381bc2f63361fe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule521packagenames/PackageNameTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void badPackageNameTest() throws Exception", "signatureAfterChange": "      @Test     public void badPackageNameTest() throws Exception", "diff": ["-        String packagePath =", "+        final String packagePath =", "-        String msg = getCheckMessage(checkConfig.getMessages(), MSG_KEY, packagePath, format);", "+        final String msg = getCheckMessage(checkConfig.getMessages(), MSG_KEY, packagePath, format);", "-        String filePath = builder.getFilePath(\"PackageNameInputBad\");", "+        final String filePath = builder.getFilePath(\"PackageNameInputBad\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0d1e95904a880a79327904b5fdee202", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolderTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Test     public void testGetAnnotationTargetWrongArg() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testGetAnnotationTargetWrongArg() throws ReflectiveOperationException", "diff": ["-        SuppressWarningsHolder holder = new SuppressWarningsHolder();", "-        Method getAnnotationTarget = holder.getClass()", "+        final SuppressWarningsHolder holder = new SuppressWarningsHolder();", "+        final Method getAnnotationTarget = holder.getClass()", "-        DetailAST methodDef = new DetailAST();", "+        final DetailAST methodDef = new DetailAST();", "-        DetailAST parent = new DetailAST();", "+        final DetailAST parent = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9c04cf7e25bc2b6b19d094e97655f7a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "b4e77fd043c8546f6abf99cc0196c4d47e6084b1", "commitAfterChange": "829ae4c34f89ac06043265cdb3d80639988d85d8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDestroy() throws Exception", "signatureAfterChange": "      @Test     public void testDestroy() throws Exception", "diff": ["-        DebugChecker c= new DebugChecker();", "-        DebugAuditAdapter aa = new DebugAuditAdapter();", "+        final DebugChecker c= new DebugChecker();", "+        final DebugAuditAdapter aa = new DebugAuditAdapter();", "-        DebugFilter f = new DebugFilter();", "+        final DebugFilter f = new DebugFilter();", "-        TreeSet<LocalizedMessage> msgs = Sets.newTreeSet();", "+        final TreeSet<LocalizedMessage> msgs = Sets.newTreeSet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e84b95f75638b4e7c1ac351ffb15ccd5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule233nonascii/AvoidEscapedUnicodeCharactersCheckTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void unicodeEscapesTest() throws Exception", "signatureAfterChange": "      @Test     public void unicodeEscapesTest() throws Exception", "diff": ["-        String msg = getCheckMessage(AvoidEscapedUnicodeCharactersCheck.class, \"forbid.escaped.unicode.char\");", "+        final String msg = getCheckMessage(AvoidEscapedUnicodeCharactersCheck.class,", "+            \"forbid.escaped.unicode.char\");", "-        Configuration checkConfig = builder.getCheckConfig(\"AvoidEscapedUnicodeCharacters\");", "-        String filePath = builder.getFilePath(\"AvoidEscapedUnicodeCharactersInput\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"AvoidEscapedUnicodeCharacters\");", "+        final String filePath = builder.getFilePath(\"AvoidEscapedUnicodeCharactersInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}]}