{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fdce509350775c6dd370235df7e93b68", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80be7286f236373393ba75bf2e4067ed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IndentationCheck.java", "commitBeforeChange": "bf6758b29dbb6f0e22d4951ea3bd25fdf45299fc", "commitAfterChange": "eaad55fdba73e17e103dc6600867f26fd6a3896b", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 2, "signatureBeforeChange": "                           public abstract void checkIndentation();", "signatureAfterChange": "     public int getIndentationAmount()", "diff": ["-        ", "-        public abstract void checkIndentation();", "+     */", "+    public int getIndentationAmount()", "+    {", "+        return mIndentationAmount;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b897c4e2164a4a0517540b555ea6b8d8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IndentationCheck.java", "commitBeforeChange": "bf6758b29dbb6f0e22d4951ea3bd25fdf45299fc", "commitAfterChange": "eaad55fdba73e17e103dc6600867f26fd6a3896b", "methodNumberBeforeChange": 152, "methodNumberAfterChange": 7, "signatureBeforeChange": "          public void checkIndentation()", "signatureAfterChange": "     public void indentationLog(int aLine, String aKey)", "diff": ["-", "-        public void checkIndentation() ", "-        {", "-", "-            // TODO: still need to better deal with the modifiers and \"class\"", "-            checkModifiers();", "-            ", "-            LineSet lines = new LineSet();", "-", "-            // checks that line with class name starts at correct indentation,", "-            //  and following lines (in implements and extends clauses) are ", "-            //  indented at least one level", "-            DetailAST ident = mMainAst.findFirstToken(TokenTypes.IDENT);", "-            int lineStart = getLineStart(ident);", "-            if (lineStart != getLevel()) {", "-                logError(ident, \"ident\", lineStart);", "-            }", "-", "-            lines.addLineAndCol(new Integer(ident.getLineNo()), lineStart);", "-            ", "-            DetailAST impl = mMainAst.findFirstToken(", "-                TokenTypes.IMPLEMENTS_CLAUSE);", "-            if (impl != null && impl.getFirstChild() != null) {", "-                findSubtreeLines(lines, impl, false);", "-            }", "-", "-            DetailAST ext = mMainAst.findFirstToken(TokenTypes.EXTENDS_CLAUSE);", "-            if (ext != null && ext.getFirstChild() != null) {", "-                findSubtreeLines(lines, ext, false);", "-            }", "-            ", "-            checkLinesIndent(ident.getLineNo(), lines.lastLine(), getLevel());", "-            ", "-            super.checkIndentation();", "-        }", "+     */", "+    public void indentationLog(int aLine, String aKey)", "+    {", "+        log(aLine, aKey);", "+    }"]}]}