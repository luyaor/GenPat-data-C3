{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de3fc7417aaeceee8ddfbe9f55a39e33", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d6328814ae6857f36c6813e82d93158", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testScopes() throws Exception", "signatureAfterChange": "      @Test     public void testScopes() throws Exception", "diff": ["-            \"1: Missing a Javadoc comment.\",", "-            \"13: Missing a Javadoc comment.\",", "-            \"25: Missing a Javadoc comment.\",", "-            \"37: Missing a Javadoc comment.\",", "-            \"50: Missing a Javadoc comment.\",", "-            \"61: Missing a Javadoc comment.\",", "-            \"73: Missing a Javadoc comment.\",", "-            \"85: Missing a Javadoc comment.\",", "-            \"97: Missing a Javadoc comment.\",", "+            \"3: Missing a Javadoc comment.\",", "+            \"15: Missing a Javadoc comment.\",", "+            \"27: Missing a Javadoc comment.\",", "+            \"39: Missing a Javadoc comment.\",", "+            \"52: Missing a Javadoc comment.\",", "+            \"63: Missing a Javadoc comment.\",", "+            \"75: Missing a Javadoc comment.\",", "+            \"87: Missing a Javadoc comment.\",", "+            \"99: Missing a Javadoc comment.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e7caaa679a2134047574009f54ffe9a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "contrib/j2ee/src/tests/RemoteInterfaceCheckTest.java", "commitBeforeChange": "24a774b1e89f010f7ac70c66f2c0d75e5ce53b87", "commitAfterChange": "9f4164a450bed42bb632400bc2d53ffcc9775235", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDefault()             throws Exception", "signatureAfterChange": "     public void testDefault()             throws Exception", "diff": ["-            \"20:19: Method createSomething does not throw java.rmi.RemoteException.\",", "-            \"20:19: Method createSomething does not throw javax.ejb.CreateException.\",", "-            \"20:19: Method createSomething is not public.\",", "-            \"20:19: Void createSomething method.\",", "-            \"22:19: Method findSomething does not throw java.rmi.RemoteException.\",", "-            \"22:19: Method findSomething does not throw javax.ejb.FinderException.\",", "-            \"22:19: Method findSomething is not public.\",", "-            \"22:19: Void findSomething method.\",", "+            \"20:19: Method createSomething must be non-void.\",", "+            \"20:19: Method createSomething must be public.\",", "+            \"20:19: Method createSomething must throw java.rmi.RemoteException.\",", "+            \"20:19: Method createSomething must throw javax.ejb.CreateException.\",", "+            \"22:19: Method findSomething must be non-void.\",", "+            \"22:19: Method findSomething must be public.\",", "+            \"22:19: Method findSomething must throw java.rmi.RemoteException.\",", "+            \"22:19: Method findSomething must throw javax.ejb.FinderException.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cac54739299556f4c8f92413eedf351", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "contrib/j2ee/src/tests/HomeInterfaceCheckTest.java", "commitBeforeChange": "24a774b1e89f010f7ac70c66f2c0d75e5ce53b87", "commitAfterChange": "9f4164a450bed42bb632400bc2d53ffcc9775235", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDefault()             throws Exception", "signatureAfterChange": "     public void testDefault()             throws Exception", "diff": ["-            \"14:18: Home interface has no findByPrimaryKey method.\",", "-            \"20:19: Method createSomething does not throw java.rmi.RemoteException.\",", "-            \"20:19: Method createSomething does not throw javax.ejb.CreateException.\",", "-            \"20:19: Method createSomething is not public.\",", "-            \"20:19: Void createSomething method.\",", "-            \"22:19: Method findSomething does not throw java.rmi.RemoteException.\",", "-            \"22:19: Method findSomething does not throw javax.ejb.FinderException.\",", "-            \"22:19: Method findSomething is not public.\",", "-            \"22:19: Void findSomething method.\",", "+            \"14:18: Home interface must have method findByPrimaryKey.\",", "+            \"20:19: Method createSomething must be non-void.\",", "+            \"20:19: Method createSomething must be public.\",", "+            \"20:19: Method createSomething must throw java.rmi.RemoteException.\",", "+            \"20:19: Method createSomething must throw javax.ejb.CreateException.\",", "+            \"22:19: Method findSomething must be non-void.\",", "+            \"22:19: Method findSomething must be public.\",", "+            \"22:19: Method findSomething must throw java.rmi.RemoteException.\",", "+            \"22:19: Method findSomething must throw javax.ejb.FinderException.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "944f5e05681988d3269ce49bdd551016", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheckTest.java", "commitBeforeChange": "8ba42086fe599b7a9d94b06c191a789d16817aac", "commitAfterChange": "e873b95e9fc081e7dc582893c3949bfbea6dc567", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testAllowAllCharactersEscaped() throws Exception", "signatureAfterChange": "      @Test     public void testAllowAllCharactersEscaped() throws Exception", "diff": ["-            \"5: \" + MSG,", "-            \"13: \" + MSG,", "-            \"14: \" + MSG,", "-            \"27: \" + MSG,", "-            \"28: \" + MSG,", "-            \"29: \" + MSG,", "-            \"38: \" + MSG,", "+            \"11: \" + MSG,", "+            \"15: \" + MSG,", "+            \"16: \" + MSG,", "+            \"31: \" + MSG,", "+            \"32: \" + MSG,", "+            \"33: \" + MSG,", "+            \"42: \" + MSG,"]}]}