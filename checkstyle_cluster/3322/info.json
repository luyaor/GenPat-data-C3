{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2822fbcf80d5c4878a91c1f962e09485", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12f7428c68a4b51cf685c3f0447e63b2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java", "commitBeforeChange": "52a0d103606992f9a3a43c3425fab88eae1ed150", "commitAfterChange": "d80e678fa0939d845583a3acc7501859254c5f2c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void leaveForEach(DetailAST forEach)", "signatureAfterChange": "     private void leaveForEach(DetailAST paramDef)", "diff": ["-    private void leaveForEach(DetailAST forEach) {", "-        final DetailAST paramDef =", "-            forEach.findFirstToken(TokenTypes.VARIABLE_DEF);", "+     */", "+    private void leaveForEach(DetailAST paramDef) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b4024b8603482f1289745f32930697b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "08d2cfda07ace5188a7883eb708ffa00bd3437db", "commitAfterChange": "454af2c194e82c740e26ae814cbbf57d365b411e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private int[] findLineBreaks()", "signatureAfterChange": "     private int[] findLineBreaks()", "diff": ["-                lineBreaks[lineNo++] = fullText.length();", "-            }", "-            if (lineNo != lineBreaks.length) {", "-                throw new ConcurrentModificationException(\"Text changed.\");", "+                lineBreaks[lineNo] = fullText.length();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "761bdebbed618a357d455890ee849b9d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "commitBeforeChange": "5f68bb50fd191fec409f5edb90755a18fce3e0ac", "commitAfterChange": "b436b3cd9860529718b95c36dafe565fe68f6293", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        boolean skipStatement = false;", "-        if (ast.getType() == TokenTypes.LITERAL_IF) {", "-            skipStatement = isSkipIfBlock(ast);", "-        }", "+", "+        final boolean skipStatement = isSkipStatement(ast);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6edd9a36b2dfcb3e4d9ddcd5d42a30f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractTypeParameterNameCheck.java", "commitBeforeChange": "2441120489b874c4f3171463b98d71dc96726a94", "commitAfterChange": "20d8e4338d13bc49c1fbbf1e293dbe255638fcea", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     protected final boolean mustCheckName(DetailAST ast)", "signatureAfterChange": "      @Override     protected final boolean mustCheckName(DetailAST ast)", "diff": ["-", "-    @Override", "-        DetailAST location =", "+        final DetailAST location =", "-", "-        if (location.getType() == TokenTypes.MODIFIERS) {", "-            location = location.getParent();", "-        }", "-", "-        return location.getType() == this.location;", "+        return location.getType() == getLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de9f7b8cf11ebef86e68a8846728cfe3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/SimplifyBooleanReturnCheck.java", "commitBeforeChange": "26fcfecd439f1742e7c0fd120684473c944401a4", "commitAfterChange": "e6571e6f5703fdd89bc6cbeddcce767e58ddbf50", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        // paranoia - what an untrusting sole :-)", "-        if (aAST.getType() != TokenTypes.LITERAL_IF) {", "-            throw new IllegalArgumentException(\"not an if\");", "-        }", "-"]}]}