{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1bcaf3849c1cfb869ff4c3e46a2e9318", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b30abb3969bb87711ab23097dbe137c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java", "commitBeforeChange": "93c68168f3b6ef88cfdcd31e059fd22dda7eaeb9", "commitAfterChange": "0ff261c5acaae68262f9083b15b4c0db4f72af90", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     DetailAST checkOrderSuggestedByJLS(List<DetailAST> modifiers)", "signatureAfterChange": "     DetailAST checkOrderSuggestedByJLS(List<DetailAST> modifiers)", "diff": ["-        while (i < JLS_ORDER.length) {", "+        while (modifier != null) {", "-            else if (!it.hasNext()) {", "-                //Reached end of modifiers without problem", "-                return null;", "+            else if (it.hasNext()) {", "+                modifier = it.next();", "-                modifier = it.next();", "+                //Reached end of modifiers without problem", "+                modifier = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6ea7291a09430b22ee2ff7e98f1e8cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java", "commitBeforeChange": "f7e41edb947dad22e10eeaa2e68e6f44b4bfa747", "commitAfterChange": "0b4ae9160bb82574a8d21d9a03dbfc8aaa45fdae", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     static DetailAST checkOrderSuggestedByJLS(List<DetailAST> modifiers)", "signatureAfterChange": "     static DetailAST checkOrderSuggestedByJLS(List<DetailAST> modifiers)", "diff": ["-        DetailAST modifier;", "-        do {", "-            modifier = it.next();", "-        }", "-        while (it.hasNext() && modifier.getType() == TokenTypes.ANNOTATION);", "+        DetailAST modifier = skipAnnotations(it);", "-            while (modifier != null) {", "+            while (modifier != null", "+                    && offendingModifier == null) {", "+", "-                    break;"]}]}