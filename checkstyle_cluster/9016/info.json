{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6b636a975a6065a80092cd4f70374665", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c908940307988cdd40fa78bc16f6074", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(final DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(final DetailAST ast)", "diff": ["-    public void visitToken(final DetailAST aAST)", "+    public void visitToken(final DetailAST ast)", "-        if (!mAllowClassImports && (TokenTypes.IMPORT == aAST.getType())) {", "-            final DetailAST startingDot = aAST.getFirstChild();", "+        if (!allowClassImports && (TokenTypes.IMPORT == ast.getType())) {", "+            final DetailAST startingDot = ast.getFirstChild();", "-        else if (!mAllowStaticMemberImports", "-            && (TokenTypes.STATIC_IMPORT == aAST.getType()))", "+        else if (!allowStaticMemberImports", "+            && (TokenTypes.STATIC_IMPORT == ast.getType()))", "-            final DetailAST startingDot = aAST.getFirstChild().getNextSibling();", "+            final DetailAST startingDot = ast.getFirstChild().getNextSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e50f54c3c63615be4a64c1fdc23afd6a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void visitVariableDef(DetailAST aAST)", "signatureAfterChange": "     private void visitVariableDef(DetailAST ast)", "diff": ["-    private void visitVariableDef(DetailAST aAST)", "+    private void visitVariableDef(DetailAST ast)", "-        if (mChecking && (aAST.getParent().getType() == TokenTypes.OBJBLOCK)) {", "+        if (checking && (ast.getParent().getType() == TokenTypes.OBJBLOCK)) {", "-                aAST.findFirstToken(TokenTypes.MODIFIERS);", "+                ast.findFirstToken(TokenTypes.MODIFIERS);", "-                log(aAST.getLineNo(),  aAST.getColumnNo(), \"mutable.exception\",", "-                        aAST.findFirstToken(TokenTypes.IDENT).getText());", "+                log(ast.getLineNo(),  ast.getColumnNo(), \"mutable.exception\",", "+                        ast.findFirstToken(TokenTypes.IDENT).getText());"]}]}