{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05ffe9028b1d23f38bf4775df7e2cdbd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "847c18cabd07ea68bc890eefcdbe9b23", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void logMatch(final int aLineNo,         final int aColNum, final String aWarningText)", "signatureAfterChange": "     private void logMatch(final int lineNo,         final int colNum, final String warningText)", "diff": ["-    private void logMatch(final int aLineNo,", "-        final int aColNum, final String aWarningText)", "+    private void logMatch(final int lineNo,", "+        final int colNum, final String warningText)", "-        final Matcher matcher = this.getRegexp().matcher(aWarningText);", "+        final Matcher matcher = this.getRegexp().matcher(warningText);", "-            this.log(aLineNo, aColNum,", "-                    MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, aWarningText);", "+            this.log(lineNo, colNum,", "+                    MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, warningText);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbe882e72d47e8cef466edba78596b43", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ArrayInitHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private int getNextFirstNonblankOnLineAfter(int aLineNo, int aColumnNo)", "signatureAfterChange": "     private int getNextFirstNonblankOnLineAfter(int lineNo, int columnNo)", "diff": ["-    private int getNextFirstNonblankOnLineAfter(int aLineNo, int aColumnNo)", "+    private int getNextFirstNonblankOnLineAfter(int lineNo, int columnNo)", "-        int columnNo = aColumnNo + 1;", "-        final String line = getIndentCheck().getLines()[aLineNo - 1];", "+        int realColumnNo = columnNo + 1;", "+        final String line = getIndentCheck().getLines()[lineNo - 1];", "-        while ((columnNo < lineLength)", "-               && Character.isWhitespace(line.charAt(columnNo)))", "+        while ((realColumnNo < lineLength)", "+               && Character.isWhitespace(line.charAt(realColumnNo)))", "-            columnNo++;", "+            realColumnNo++;", "-        return (columnNo == lineLength) ? -1 : columnNo;", "+        return (realColumnNo == lineLength) ? -1 : realColumnNo;"]}]}