{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ae3202e7f981779c52f4422ba3ec9cc0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3729a8ad80e46c6f9aa68d4e7028fe2c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private BitSet getBranchTokenTypes()", "signatureAfterChange": "     private BitSet getBranchTokenTypes()", "diff": ["-        if (mBranchTokenTypes == null) {", "+        if (branchTokenTypes == null) {", "-            mBranchTokenTypes = new BitSet();", "-            mBranchTokenTypes.set(getType());", "+            branchTokenTypes = new BitSet();", "+            branchTokenTypes.set(getType());", "-                mBranchTokenTypes.or(childTypes);", "+                branchTokenTypes.or(childTypes);", "-        return mBranchTokenTypes;", "+        return branchTokenTypes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5eee8929ff216a244f1e6c7897fb88fc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testMethod() throws Exception", "signatureAfterChange": "      @Test     public void testMethod() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"tag\", \"@todo\");", "-        mCheckConfig.addAttribute(\"tagFormat\", \"\\\\S\");", "-        mCheckConfig.addAttribute(\"tokens\",", "+        checkConfig.addAttribute(\"tag\", \"@todo\");", "+        checkConfig.addAttribute(\"tagFormat\", \"\\\\S\");", "+        checkConfig.addAttribute(\"tokens\",", "-        mCheckConfig.addAttribute(\"severity\", \"ignore\");", "+        checkConfig.addAttribute(\"severity\", \"ignore\");", "-        verify(mCheckConfig, getPath(\"InputWriteTag.java\"), expected);", "+        verify(checkConfig, getPath(\"InputWriteTag.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0c9a2627b2872da4a4def751841eff4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FullIdent.java", "commitBeforeChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "commitAfterChange": "abfc952fd0ed88f6246b1d969a8a980ea63f0bd6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void append(DetailAST ast)", "signatureAfterChange": "     private void append(DetailAST ast)", "diff": ["-        if (colNo == 0) {", "-            colNo = ast.getColumnNo();", "+        if (columnNo == 0) {", "+            columnNo = ast.getColumnNo();", "-            colNo = Math.min(colNo, ast.getColumnNo());", "+            columnNo = Math.min(columnNo, ast.getColumnNo());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddd04eb708353c7d64017cb43b4220bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testEnumsAndAnnotations() throws Exception", "signatureAfterChange": "      @Test     public void testEnumsAndAnnotations() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"tag\", \"@incomplete\");", "-        mCheckConfig.addAttribute(\"tagFormat\", \".*\");", "-        mCheckConfig.addAttribute(\"severity\", \"ignore\");", "-        mCheckConfig.addAttribute(\"tagSeverity\", \"error\");", "-        mCheckConfig.addAttribute(\"tokens\",", "+        checkConfig.addAttribute(\"tag\", \"@incomplete\");", "+        checkConfig.addAttribute(\"tagFormat\", \".*\");", "+        checkConfig.addAttribute(\"severity\", \"ignore\");", "+        checkConfig.addAttribute(\"tagSeverity\", \"error\");", "+        checkConfig.addAttribute(\"tokens\",", "-        verify(mCheckConfig, getPath(\"InputWriteTag2.java\"), expected);", "+        verify(checkConfig, getPath(\"InputWriteTag2.java\"), expected);"]}]}