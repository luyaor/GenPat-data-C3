{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "20a8b31aa44380dc465e60e22e11cace", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45b07bd1e3cd19e56e2680511f7ed5a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "a69a0461d2125ceac1e5a123c3ff24a94a784d50", "commitAfterChange": "fcbd40f3ce04fe3011bf0e1b2642ac1fd049f5de", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public final void leaveToken(DetailAST aAST)", "signatureAfterChange": "     public final void leaveToken(DetailAST aAST)", "diff": ["-        if (aAST.getType() == TokenTypes.CLASS_DEF) {", "+        if (aAST.getType() == TokenTypes.CLASS_DEF", "+            || aAST.getType() == TokenTypes.ENUM_DEF)", "+        {", "+        else if (aAST.getType() != TokenTypes.PACKAGE_DEF", "+                 && aAST.getType() != TokenTypes.IMPORT)", "+        {", "+            leaveAST(aAST);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8b27c090cc59a89eadfa66af635f123", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/WhitespaceAroundCheck.java", "commitBeforeChange": "4a5ccfb6fe4d4d2cf9d74419b3292bbb46ad4149", "commitAfterChange": "59378eb655ad45ca3f6e32b050882c85156d62ff", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["+            // Check for \"return;\"", "-                 && (aAST.getFirstChild().getType() == TokenTypes.SEMI)))", "+                && (aAST.getFirstChild().getType() == TokenTypes.SEMI))", "+            // Check for \"})\". Happens with anon-inners", "+            && !((aAST.getType() == TokenTypes.RCURLY)", "+                && (line.charAt(after) == ')')))"]}]}