{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1932925ad2867ad8d12922c4cea55571", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57dc0bbad9cbb69c728e0b649f6a313d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java", "commitBeforeChange": "97956e1ae5d6842401ea0bfab121e8fb8d51c14d", "commitAfterChange": "d4ef19e679f276411a0de3b07e579c217d15f098", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      protected Checker createChecker(Configuration aCheckConfig)         throws Exception", "signatureAfterChange": "      protected Checker createChecker(Configuration aCheckConfig)         throws Exception", "diff": ["-        final Checker c = new Checker();", "+        final Checker checker = new Checker();", "-        c.setLocaleCountry(locale.getCountry());", "-        c.setLocaleLanguage(locale.getLanguage());", "-        c.setModuleClassLoader(Thread.currentThread().getContextClassLoader());", "-        c.configure(dc);", "-        c.addListener(new BriefLogger(stream));", "-        return c;", "+        checker.setLocaleCountry(locale.getCountry());", "+        checker.setLocaleLanguage(locale.getLanguage());", "+        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());", "+        checker.configure(dc);", "+        checker.addListener(new BriefLogger(stream));", "+        return checker;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61c6f3fde0e342ee43599f02a6135120", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java", "commitBeforeChange": "9cc86b38df9a086713d1fcdf01b451b41c0d6f65", "commitAfterChange": "e9ec5bfbd5ab91852c3ec1b30492df5c06cdd3b1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testCacheFile_changeInConfig() throws Exception", "signatureAfterChange": "      @Test     public void testCacheFile_changeInConfig() throws Exception", "diff": ["-        checker = new Checker();", "-        checker.setLocaleCountry(locale.getCountry());", "-        checker.setLocaleLanguage(locale.getLanguage());", "-        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());", "-        checker.configure(checkerConfig);", "-        checker.addListener(new BriefLogger(stream));", "+        Checker otherChecker = new Checker();", "+        otherChecker.setLocaleCountry(locale.getCountry());", "+        otherChecker.setLocaleLanguage(locale.getLanguage());", "+        otherChecker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());", "+        otherChecker.configure(checkerConfig);", "+        otherChecker.addListener(new BriefLogger(stream));", "-        verify(checker, pathToEmptyFile, pathToEmptyFile, expected);", "+        verify(otherChecker, pathToEmptyFile, pathToEmptyFile, expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6d64a9dc480a3b6a7c4ba871c8ece2d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java", "commitBeforeChange": "97956e1ae5d6842401ea0bfab121e8fb8d51c14d", "commitAfterChange": "d4ef19e679f276411a0de3b07e579c217d15f098", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      protected Checker createChecker(Configuration checkConfig)             throws Exception", "signatureAfterChange": "      protected Checker createChecker(Configuration checkConfig)             throws Exception", "diff": ["-        final Checker c = new Checker();", "+        final Checker checker = new Checker();", "-        c.setLocaleCountry(locale.getCountry());", "-        c.setLocaleLanguage(locale.getLanguage());", "-        c.setModuleClassLoader(Thread.currentThread().getContextClassLoader());", "-        c.configure(dc);", "-        c.addListener(new BriefLogger(stream));", "-        return c;", "+        checker.setLocaleCountry(locale.getCountry());", "+        checker.setLocaleLanguage(locale.getLanguage());", "+        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());", "+        checker.configure(dc);", "+        checker.addListener(new BriefLogger(stream));", "+        return checker;"]}]}