{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4c5fc68ee5a2dbcffac72fe6e4eaa05", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "190bd082e9a67466ce7ad87803adeadf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "69976b5365b7c33a602dd814337e2db1136288fc", "commitAfterChange": "ac8eadea0b1fb183d56cd809a34a7b9047b47d47", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 24, "signatureBeforeChange": "      @Test     public void testValidMethodWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testValidMethodWithChecker()         throws Exception", "diff": ["-        final Checker c = createChecker(checkConfig);", "+", "+        checkConfig.addAttribute(\"arrayInitIndent\", \"4\");", "+        checkConfig.addAttribute(\"basicOffset\", \"4\");", "+        checkConfig.addAttribute(\"braceAdjustment\", \"0\");", "+        checkConfig.addAttribute(\"caseIndent\", \"4\");", "+        checkConfig.addAttribute(\"forceStrictCondition\", \"false\");", "+        checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\");", "+        checkConfig.addAttribute(\"tabWidth\", \"4\");", "+        checkConfig.addAttribute(\"throwsIndent\", \"4\");", "-            \"125: \" + getCheckMessage(MSG_ERROR, \"void\", 4, 8),", "-            \"126: \" + getCheckMessage(MSG_ERROR, \"method5\", 4, 8),", "+            \"129: \" + getCheckMessage(MSG_ERROR, \"void\", 4, 8),", "+            \"130: \" + getCheckMessage(MSG_ERROR, \"method5\", 4, 8),", "-        verify(c, fname, expected);", "+        verifyWarns(checkConfig, fname, expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b31b68882a897192bea1938ad1f3300", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "69976b5365b7c33a602dd814337e2db1136288fc", "commitAfterChange": "ac8eadea0b1fb183d56cd809a34a7b9047b47d47", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 42, "signatureBeforeChange": "      @Test     public void testValidClassDefWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testValidClassDefWithChecker()         throws Exception", "diff": ["-        final Checker c = createChecker(checkConfig);", "+", "+        checkConfig.addAttribute(\"arrayInitIndent\", \"4\");", "+        checkConfig.addAttribute(\"basicOffset\", \"4\");", "+        checkConfig.addAttribute(\"braceAdjustment\", \"0\");", "+        checkConfig.addAttribute(\"caseIndent\", \"4\");", "+        checkConfig.addAttribute(\"forceStrictCondition\", \"false\");", "+        checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\");", "+        checkConfig.addAttribute(\"tabWidth\", \"4\");", "+        checkConfig.addAttribute(\"throwsIndent\", \"4\");", "-            \"46: \" + getCheckMessage(MSG_ERROR, \"class\", 0, 4),", "-            \"68: \" + getCheckMessage(MSG_ERROR, \"int\", 8, 12),", "+            \"49: \" + getCheckMessage(MSG_ERROR, \"class\", 0, 4),", "+            \"71: \" + getCheckMessage(MSG_ERROR, \"int\", 8, 12),", "-        verify(c, fname, expected);", "+        verifyWarns(checkConfig, fname, expected);"]}]}