{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7577a7190981fac985b3166b781e3ff", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a0bbb7f486bbfb7a405a94c416a1aa7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheck.java", "commitBeforeChange": "9f93c2258ef0512b743f5927be201ff55a9d5c57", "commitAfterChange": "23c8774d2e2fd245de1e5df02758fd23702c565e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean isCorrectLocation(DetailAST annotation, boolean hasParams)", "signatureAfterChange": "     private boolean isCorrectLocation(DetailAST annotation, boolean hasParams)", "diff": ["-        final boolean allowingCondition = hasParams ? allowSamelineParameterizedAnnotation", "-            : allowSamelineSingleParameterlessAnnotation;", "+        final boolean allowingCondition;", "+", "+        if (hasParams) {", "+            allowingCondition = allowSamelineParameterizedAnnotation;", "+        }", "+        else {", "+            allowingCondition = allowSamelineSingleParameterlessAnnotation;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92748222519adb745f2fdbd1f5823f62", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "9f93c2258ef0512b743f5927be201ff55a9d5c57", "commitAfterChange": "23c8774d2e2fd245de1e5df02758fd23702c565e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static String extractPropertyIdentifier(final File file,             final String basenameSeparator)", "signatureAfterChange": "     private static String extractPropertyIdentifier(final File file,             final String basenameSeparator)", "diff": ["-        final int cutoffIdx = underscoreIdx == -1 ? dotIdx : underscoreIdx;", "+        final int cutoffIdx;", "+", "+        if (underscoreIdx == -1) {", "+            cutoffIdx = dotIdx;", "+        }", "+        else {", "+            cutoffIdx = underscoreIdx;", "+        }"]}]}