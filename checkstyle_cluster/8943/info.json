{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e9a4a9e827060ab3ebf6c67bb7055f8a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1167e29a9c91b23708750d8b76ca2ab7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "4c653936fa5fe49ebda5bf3f4820ad9e0ea6c594", "commitAfterChange": "3215661e63d0022c2790c92fa269a2255cefcc33", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void checkPropertyFileSets(Map aPropFiles)", "signatureAfterChange": "     private void checkPropertyFileSets(Map aPropFiles)", "diff": ["-        Set keySet = aPropFiles.keySet();", "+        final Set keySet = aPropFiles.keySet();", "-            String baseName = (String) iterator.next();", "-            Set files = (Set) aPropFiles.get(baseName);", "+            final String baseName = (String) iterator.next();", "+            final Set files = (Set) aPropFiles.get(baseName);", "-                Set keys = new HashSet();", "-                Map fileMap = new HashMap();", "+                final Set keys = new HashSet();", "+                final Map fileMap = new HashMap();", "-                    File file = (File) iter.next();", "-                    Set fileKeys = loadKeys(file);", "+                    final File file = (File) iter.next();", "+                    final Set fileKeys = loadKeys(file);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e79548579e4b528d99deb40c62fc762", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "commitBeforeChange": "d7ec6a95ac09e00b8d72b7db4f664a6ffa7e9562", "commitAfterChange": "2f70947ed74ab968324fdcf83f808ff1d88df1fb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        DetailAST modifiers = aAST.findFirstToken(TokenTypes.MODIFIERS);", "+        final DetailAST modifiers = aAST.findFirstToken(TokenTypes.MODIFIERS);", "-        DetailAST implementation = aAST.findFirstToken(TokenTypes.SLIST);", "+        final DetailAST implementation = aAST.findFirstToken(TokenTypes.SLIST);", "-        DetailAST classDef = findContainingClass(aAST);", "-        DetailAST classMods = classDef.findFirstToken(TokenTypes.MODIFIERS);", "+        final DetailAST classDef = findContainingClass(aAST);", "+        final DetailAST classMods =", "+            classDef.findFirstToken(TokenTypes.MODIFIERS);", "-        DetailAST objBlock = classDef.findFirstToken(TokenTypes.OBJBLOCK);", "+        final DetailAST objBlock = classDef.findFirstToken(TokenTypes.OBJBLOCK);", "-                DetailAST ctorMods =", "+                final DetailAST ctorMods =", "-            String name = aAST.findFirstToken(TokenTypes.IDENT).getText();", "+            final String name = aAST.findFirstToken(TokenTypes.IDENT).getText();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ab3fdc29109d326b0087c6958dc59da", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolderTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testIsSuppressed() throws Exception", "signatureAfterChange": "      @Test     public void testIsSuppressed() throws Exception", "diff": ["-        Class<?> entry = Class", "+        final Class<?> entry = Class", "-        Constructor<?> entryConstructor = entry.getDeclaredConstructor(String.class, int.class,", "-                int.class, int.class, int.class);", "+        final Constructor<?> entryConstructor = entry.getDeclaredConstructor(String.class,", "+                int.class, int.class, int.class, int.class);", "-        Object entryInstance = entryConstructor.newInstance(\"MockEntry\", 100, 100, 350, 350);", "+        final Object entryInstance = entryConstructor.newInstance(\"MockEntry\", 100, 100, 350, 350);", "-        List<Object> entriesList = new ArrayList<>();", "+        final List<Object> entriesList = new ArrayList<>();", "-        ThreadLocal<?> threadLocal = mock(ThreadLocal.class);", "+        final ThreadLocal<?> threadLocal = mock(ThreadLocal.class);", "-        SuppressWarningsHolder holder = new SuppressWarningsHolder();", "-        Field entries = holder.getClass().getDeclaredField(\"ENTRIES\");", "+        final SuppressWarningsHolder holder = new SuppressWarningsHolder();", "+        final Field entries = holder.getClass().getDeclaredField(\"ENTRIES\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c034e9320fdf63076135d6fcc3ce2538", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolderTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testIsSuppressedWithAllArgument() throws Exception", "signatureAfterChange": "      @Test     public void testIsSuppressedWithAllArgument() throws Exception", "diff": ["-        Class<?> entry = Class", "+        final Class<?> entry = Class", "-        Constructor<?> entryConstr = entry.getDeclaredConstructor(String.class, int.class,", "+        final Constructor<?> entryConstr = entry.getDeclaredConstructor(String.class, int.class,", "-        Object entryInstance = entryConstr.newInstance(\"all\", 100, 100, 350, 350);", "+        final Object entryInstance = entryConstr.newInstance(\"all\", 100, 100, 350, 350);", "-        List<Object> entriesList = new ArrayList<>();", "+        final List<Object> entriesList = new ArrayList<>();", "-        ThreadLocal<?> threadLocal = mock(ThreadLocal.class);", "+        final ThreadLocal<?> threadLocal = mock(ThreadLocal.class);", "-        SuppressWarningsHolder holder = new SuppressWarningsHolder();", "-        Field entries = holder.getClass().getDeclaredField(\"ENTRIES\");", "+        final SuppressWarningsHolder holder = new SuppressWarningsHolder();", "+        final Field entries = holder.getClass().getDeclaredField(\"ENTRIES\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c206ed06afc04cc3c49f6ccf0f2028fe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/WhitespaceAroundTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void genericWhitespaceTest() throws Exception", "signatureAfterChange": "      @Test     public void genericWhitespaceTest() throws Exception", "diff": ["-        String msgPreceded = \"ws.preceded\";", "-        String msgFollowed = \"ws.followed\";", "-        String msgNotPreceded = \"ws.notPreceded\";", "-        String msgIllegalFollow = \"ws.illegalFollow\";", "-        Configuration checkConfig = builder.getCheckConfig(\"GenericWhitespace\");", "+        final String msgPreceded = \"ws.preceded\";", "+        final String msgFollowed = \"ws.followed\";", "+        final String msgNotPreceded = \"ws.notPreceded\";", "+        final String msgIllegalFollow = \"ws.illegalFollow\";", "+        final Configuration checkConfig = builder.getCheckConfig(\"GenericWhitespace\");", "-        String filePath = builder.getFilePath(\"GenericWhitespaceInput\");", "+        final String filePath = builder.getFilePath(\"GenericWhitespaceInput\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}]}