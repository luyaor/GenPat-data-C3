{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e6ae5f4605fa615154b79bf216d4f21", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1223390cccf52de760f40c1f40477b2b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/indentation/InputInvalidIfIndent.java", "commitBeforeChange": "41758923b8e4dcb9aae1ee967407826bda38d97b", "commitAfterChange": "e464c231eccec72f964131d9aeb5e49982c4b3bb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void  populatedIfTest()", "signatureAfterChange": "     public void  populatedIfTest()", "diff": ["-                // TODO: broken", "-//                System.", "-//            getProperty(\"blah\");", "+", "+              System.", "+          getProperty(\"blah\");", "-//            System.                         // TODO: broken", "-//          getProperty(\"blah\");", "+          System.", "+        getProperty(\"blah\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30bf68012a11bc6e7a8d133e66925e1f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "dc764f3b6ad475854cd0d22655db3f96e7eb7ed3", "commitAfterChange": "a1cecb5e0658862f957e60a8d5b2ade13b592101", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     void verifyMethod(MethodSignature aSig)", "signatureAfterChange": "     void verifyMethod(MethodSignature aSig)", "diff": ["-            log(aSig.getLineNo(), \"redundant 'public' modifier.\");", "+            log(aSig.getModSet().getFirstLineNo(),", "+                aSig.getModSet().getFirstColNo(),", "+                \"redundant 'public' modifier.\");", "-        final String[] jd = getJavadocBefore(aSig.getLineNo() - 1);", "+        final String[] jd = getJavadocBefore(aSig.getFirstLineNo() - 1);", "-            log(aSig.getLineNo(), \"method is missing a Javadoc comment.\");", "+            log(aSig.getFirstLineNo(), \"method is missing a Javadoc comment.\");", "-            final List tags = getMethodTags(jd, aSig.getLineNo() - 1);", "+            final List tags = getMethodTags(jd, aSig.getFirstLineNo() - 1);", "-                    checkReturnTag(tags, aSig.getLineNo());", "+                    checkReturnTag(tags, aSig.getFirstLineNo());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "663fe91e1dce8062e8a527b2f47b1740", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "c2176a24006cd8ed232815900ec4f78042a46a2d", "commitAfterChange": "ed89c9edb524243b0df61e83a5ac0930f070e6d7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Override     public final void visitToken(DetailAST blockCommentNode)", "signatureAfterChange": "      @Override     public final void visitToken(DetailAST blockCommentNode)", "diff": ["-            if (TREE_CACHE.containsKey(treeCacheKey)) {", "-                ps = TREE_CACHE.get(treeCacheKey);", "+            if (TREE_CACHE.get().containsKey(treeCacheKey)) {", "+                ps = TREE_CACHE.get().get(treeCacheKey);", "-                TREE_CACHE.put(treeCacheKey, ps);", "+                TREE_CACHE.get().put(treeCacheKey, ps);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2e9f4f50df7724e51a2fd8524255e45", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "6970485b88600343de72af03a6bf87cf78e6cf55", "commitAfterChange": "4d0adc9deed7f3df296f8016941414ec1600955b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     void verifyMethod(MethodSignature aSig)", "signatureAfterChange": "     void verifyMethod(MethodSignature aSig)", "diff": ["-            !mConfig.getMethodRegexp().match(aSig.getName()))", "+            !mConfig.getMethodRegexp().match(aSig.getName().getText()))", "-            log(aSig.getLineNo(),", "+            log(aSig.getName().getLineNo(),", "+                aSig.getName().getColumnNo(),"]}]}