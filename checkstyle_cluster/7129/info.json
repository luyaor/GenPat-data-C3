{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "510ed2fddfd4fecd86628bdcea3bf0f4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0989eb042df3a209326861827b4d5986", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "91db1968e34b4f777ab146e37a827c20b35e5c52", "commitAfterChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     @Override     public void visitToken(DetailAST aAST)", "diff": ["-                    \"ws.notPreceded\", new Object[]{aAST.getText()});", "+                    \"ws.notPreceded\", aAST.getText());", "-            log(", "-                aAST.getLineNo(),", "-                aAST.getColumnNo() + aAST.getText().length(),", "-                \"ws.notFollowed\",", "-                new Object[] {aAST.getText()});", "+            log(aAST.getLineNo(), aAST.getColumnNo() + aAST.getText().length(),", "+                    \"ws.notFollowed\", aAST.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09e3c6917a300141251430d93494c56b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/j2ee/EntityBeanCheck.java", "commitBeforeChange": "91db1968e34b4f777ab146e37a827c20b35e5c52", "commitAfterChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void checkAbstract(DetailAST aAST)", "signatureAfterChange": "     private void checkAbstract(DetailAST aAST)", "diff": ["-            logName(aAST, \"abstract.bean\", new Object[] {});", "+            logName(aAST, \"abstract.bean\");", "-            logName(aAST, \"nonabstract.bean\", new Object[] {});", "+            logName(aAST, \"nonabstract.bean\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1817ec4064693a895194794e2d122c58", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "a49d4e972a6bfd26e73e42337ff75d50b4df8959", "commitAfterChange": "54a09706ec1db32435b09e6b6910813325558f8d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private int process(File aFile)", "signatureAfterChange": "     private void process(File aFile)", "diff": ["-    private int process(File aFile)", "+    private void process(File aFile)", "-            return 0;", "+            return;", "-        return mMessages.size();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "223e6799cc9e79b868dc45fa49cec124", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheck.java", "commitBeforeChange": "78e9ce870170ca3ef88fd78f8e0af0681c958eb3", "commitAfterChange": "ea4085cd15fefe1e70a495798187c425295c74b6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        final String[] lines = getLines();", "-        final String line = lines[targetAST.getLineNo() - 1];", "+        final String line = getLines()[targetAST.getLineNo() - 1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "256f73650bd7af5a891a3b37aeac2444", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForInitializerPadCheck.java", "commitBeforeChange": "15557f448c4d9287dc19e4013e9d952638e528cd", "commitAfterChange": "6ab9f8b8984a5a2fbbf5265d3a813ba466a4dc7b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                final PadOption option = getAbstractOption();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bbc74834fa1d417797393c3eb62d2e0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheckTest.java", "commitBeforeChange": "5190c8f656ae194fe8dc5be6a11ec95cf5aaf016", "commitAfterChange": "3d77a286572dd25d338d4acf7cd16b478f1a8c90", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testIt()             throws Exception", "signatureAfterChange": "     public void testIt()             throws Exception", "diff": ["-        final String fname = getPath(\"InputSemantic.java\");", "-        verify(checkConfig, fname, expected);", "+        verify(checkConfig, getPath(\"InputSemantic.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f1f44648b7fe43028371eef090e9d63", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PropertyCacheFileTest.java", "commitBeforeChange": "7770f2a2c25c41bf024355f19caac358419110a6", "commitAfterChange": "bb5eb6c08eb4cae392147567654f6d45d6174cbf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCtor() throws IOException", "signatureAfterChange": "      @Test     public void testCtor() throws IOException", "diff": ["-            PropertyCacheFile cache = new PropertyCacheFile(null, \"\");", "+            new PropertyCacheFile(null, \"\");", "-            PropertyCacheFile cache = new PropertyCacheFile(config, null);", "+            new PropertyCacheFile(config, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34a558b36a13442440d7b242c409208d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "4018efa9fefa66e599369ace1cb189b02ae64fa7", "commitAfterChange": "3da466b9bfd816807a77d923fa2f323966d072bf", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 58, "signatureBeforeChange": "     private String getIllegalInstantiation(String aClassName)", "signatureAfterChange": "     private String getIllegalInstantiation(String aClassName)", "diff": ["-            final String illegalBase = basename(illegal);", "-            if (illegal.length() - javaLang.length() == aClassName.length()", "+            if (((illegal.length() - javaLang.length()) == aClassName.length())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "374f6d4d44ba48565e5535f23e7310a3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "f464a296056168259e1f84333507fcb797d93cdc", "commitAfterChange": "3ded17ac3d61b4284299319f5f60ee220154fded", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     void verifyRCurly(MyCommonAST aBrace, int aStartLine)", "signatureAfterChange": "     void verifyRCurly(MyCommonAST aBrace, int aStartLine)", "diff": ["-        final RightCurlyOption option = mConfig.getRCurly();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "383045fe476478bc0716b77bae63a212", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/JavadocTypeCheckTest.java", "commitBeforeChange": "a0054eede02fe6109973ab4b94f3657d1ed187a3", "commitAfterChange": "730ade67d5f3f286c1004ce9a772fd4bc3bc9307", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void testNoAuthor()         throws Exception", "signatureAfterChange": "          public void testVersionRegularEx()         throws Exception", "diff": ["-", "-    public void testNoAuthor()", "-        checkConfig.addAttribute(\"allowNoAuthor\", \"false\");", "-        checkConfig.addAttribute(\"requireVersion\", \"false\");", "-            \"11: Type Javadoc comment is missing an @author tag.\"", "+    ", "+    public void testVersionRegularEx()", "+        throws Exception", "+    {", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(JavadocTypeCheck.class);", "+        checkConfig.addAttribute(\"versionFormat\", \"[:digit:].*\");", "+", "+        final Checker c = createChecker(checkConfig);", "+        final String fname = getPath(\"InputJavadoc.java\");", "+        final String[] expected = {", "+        };", "+        verify(c, fname, expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "392886eb3b67cfe7202c3865d48c787d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PropertyCacheFileTest.java", "commitBeforeChange": "7770f2a2c25c41bf024355f19caac358419110a6", "commitAfterChange": "bb5eb6c08eb4cae392147567654f6d45d6174cbf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testNonAccessibleFile() throws IOException", "signatureAfterChange": "      @Test     public void testNonAccessibleFile() throws IOException", "diff": ["-        PropertyCacheFile cache = new PropertyCacheFile(config, file.getAbsolutePath());", "+        new PropertyCacheFile(config, file.getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e4ca7bd3620d93791a237d8360464f9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/j2ee/AbstractBeanCheck.java", "commitBeforeChange": "91db1968e34b4f777ab146e37a827c20b35e5c52", "commitAfterChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected void checkBean(         DetailAST aAST,         String aBeanType,         boolean aAllowAbstract)", "signatureAfterChange": "     protected void checkBean(         DetailAST aAST,         String aBeanType,         boolean aAllowAbstract)", "diff": ["-                \"illegalmodifier.bean\",", "-                new Object[] {arg, \"final\"});", "+                \"illegalmodifier.bean\", arg, \"final\");", "-                \"illegalmodifier.bean\",", "-                new Object[] {arg, \"abstract\"});", "+                \"illegalmodifier.bean\", arg, \"abstract\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f9a67237f49ca81b633e323a2790dbc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "21c76786c66c9a688e8a71898258ae61bcaec39d", "commitAfterChange": "1bba9f0056f13a18be51d41e6d9c8645ed04343e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     void verifyLCurlyOther(int aOtherLine, MyCommonAST aBrace)", "signatureAfterChange": "     void verifyLCurlyOther(int aOtherLine, MyCommonAST aBrace)", "diff": ["-        checkLCurly(aOtherLine, aBrace, mConfig.getLCurlyOther());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fbe84a43c75cd6f5f9c44260d2ec66f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/j2ee/MethodChecker.java", "commitBeforeChange": "91db1968e34b4f777ab146e37a827c20b35e5c52", "commitAfterChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void checkMethod(         DetailAST aMethodAST,         boolean aAllowFinal)", "signatureAfterChange": "     public void checkMethod(         DetailAST aMethodAST,         boolean aAllowFinal)", "diff": ["-            logName(aMethodAST, \"nonpublicmethod.bean\", new Object[] {});", "+            logName(aMethodAST, \"nonpublicmethod.bean\");", "-            logName(aMethodAST, \"illegalmodifiermethod.bean\",", "-                new Object[] {\"final\"});", "+            logName(aMethodAST, \"illegalmodifiermethod.bean\", \"final\");", "-            logName(aMethodAST, \"illegalmodifiermethod.bean\",", "-                new Object[] {\"static\"});", "+            logName(aMethodAST, \"illegalmodifiermethod.bean\", \"static\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4322fc1bf67e3936a9abb971e6a32b5f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/transmogrify/SymbolTable.java", "commitBeforeChange": "0218e797e0e8fb90baa52fb542590be366ec6eac", "commitAfterChange": "f0be1ede99878862d9dc12bdb32bc4d6447b2426", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void defineMethod(MethodDef method)", "signatureAfterChange": "   public void defineMethod(MethodDef method)", "diff": ["-    final Scope scope = getCurrentScope();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ff0542d5ab19cc136bb40dbef41b055", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.java", "commitBeforeChange": "2af259b791c8655a2b9862099763f860d3d7ae42", "commitAfterChange": "e90dbc731d23b31eaf01461041bdc67d9b999224", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setCharset(String aCharset)         throws UnsupportedEncodingException", "signatureAfterChange": "     public void setCharset(String aCharset)         throws UnsupportedEncodingException", "diff": ["-            final String hack = new String(new byte[] {}, aCharset);", "+            new String(new byte[] {}, aCharset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "565b28d937029d826da62b2a923420ff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "96c668724bc05a11ceb031dda71efe1e9e69480d", "commitAfterChange": "788b41973d5747c7b4699a853b62168cf0001df6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean hasFallTruComment(DetailAST aCurrentCase,             DetailAST aNextCase)", "signatureAfterChange": "     private boolean hasFallTruComment(DetailAST aCurrentCase,             DetailAST aNextCase)", "diff": ["-        final int startColNo = aCurrentCase.getColumnNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cee43ba082da74f30984d52fb3ba963", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/InputSemantic.java", "commitBeforeChange": "3d0256c50f6b1626af530c9e56920a72c5508bfe", "commitAfterChange": "3f6653f424d19ea54cc3fe64a42c2c4f76a27b06", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     Boolean getBoolean()", "signatureAfterChange": "     Boolean getBoolean()", "diff": ["-        Boolean b = new java.lang.Boolean(true);", "+        return new java.lang.Boolean(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d4e6d8c8f237882f9a8e856ad6aabde", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/j2ee/MessageBeanMethodChecker.java", "commitBeforeChange": "91db1968e34b4f777ab146e37a827c20b35e5c52", "commitAfterChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Override     protected void checkCreateMethod(DetailAST aMethodAST)", "signatureAfterChange": "     @Override     protected void checkCreateMethod(DetailAST aMethodAST)", "diff": ["-                logName(aMethodAST, \"nonvoidmethod.bean\", new Object[] {});", "+                logName(aMethodAST, \"nonvoidmethod.bean\");", "-                logName(aMethodAST, \"paramcount.bean\", new Object[] {\"0\"});", "+                logName(aMethodAST, \"paramcount.bean\", \"0\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61e9f09aa9e829df8fcc1de35dee4604", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheckTest.java", "commitBeforeChange": "d44cb066cbd89ce3c8d99c04d2fd28dbae68a6d9", "commitAfterChange": "e36ae750f6378b9a3cd8e5171c6e6b710bf10959", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testTagSeverity() throws Exception", "signatureAfterChange": "      @Test     public void testTagSeverity() throws Exception", "diff": ["-        final boolean printSeverity = true;", "-        verify(checkConfig, printSeverity, getPath(\"InputWriteTag.java\"), expected);", "+        verify(checkConfig, getPath(\"InputWriteTag.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69dd72f20920f7a1eda0b65253a6e2de", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "2213adc2bc733b0878c662c314b183b4f7dff1e7", "commitAfterChange": "2cca9c57c92b49eb3f7d09a50393c54e40f8e0ea", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     void verifyLCurlyMethod(int aMethodLine, MyCommonAST aBrace)", "signatureAfterChange": "     void verifyLCurlyMethod(int aMethodLine, MyCommonAST aBrace)", "diff": ["-        checkLCurly(aMethodLine, aBrace, mConfig.getLCurlyMethod());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dede66435877e1e424d8755dfb1c798", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/FileTextTest.java", "commitBeforeChange": "7770f2a2c25c41bf024355f19caac358419110a6", "commitAfterChange": "bb5eb6c08eb4cae392147567654f6d45d6174cbf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testUnsupportedCharset() throws IOException", "signatureAfterChange": "      @Test     public void testUnsupportedCharset() throws IOException", "diff": ["-            FileText o = new FileText(new File(\"any name\"), charsetName);", "+            new FileText(new File(\"any name\"), charsetName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e6df96280eac2d534551de16238c11f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java", "commitBeforeChange": "96c668724bc05a11ceb031dda71efe1e9e69480d", "commitAfterChange": "788b41973d5747c7b4699a853b62168cf0001df6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void checkTag(             int aLineNo,             String[] aCmt,             String aTag,             Pattern aTagRE,             Pattern aFormatRE,             String aFormat)", "signatureAfterChange": "     private void checkTag(             int aLineNo,             String[] aCmt,             String aTag,             Pattern aTagRE,             Pattern aFormatRE,             String aFormat)", "diff": ["-            Object[] args = {aTag};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "897f6c4a1ead8fbc885539c5c2155ebc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "4927e940af916a6aca73b76a68e68c6b158df645", "commitAfterChange": "57d8e4b099c3ff185e85b9633cb9a911bf37d8cc", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     void verifyLCurlyType(int aTypeLine, MyCommonAST aBrace)", "signatureAfterChange": "     void verifyLCurlyType(int aTypeLine, MyCommonAST aBrace)", "diff": ["-        checkLCurly(aTypeLine, aBrace, mConfig.getLCurlyType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89c215313ff7b1740ed5bac21b8bfecb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/j2ee/ContainerManagedMethodChecker.java", "commitBeforeChange": "91db1968e34b4f777ab146e37a827c20b35e5c52", "commitAfterChange": "ef58eba6d1b95443ff240ed05634c7e373b3445a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected void checkSelectMethod(DetailAST aMethodAST)", "signatureAfterChange": "     protected void checkSelectMethod(DetailAST aMethodAST)", "diff": ["-            log(aMethodAST, \"nonpublic.bean\", new Object[] {\"Method\"});", "+            log(aMethodAST, \"nonpublic.bean\", \"Method\");", "-            log(aMethodAST, \"nonabstract.bean\", new Object[] {\"Method\"});", "+            log(aMethodAST, \"nonabstract.bean\", \"Method\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93461d8f5c666c18255abf66d5842f80", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheckTest.java", "commitBeforeChange": "0db81f33e13f9829ee7de0b261f042017084b78f", "commitAfterChange": "70a6e2e6d34fa5a404e88e45cd62a20a06e19556", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testTagPrintSeverityFalse() throws Exception", "signatureAfterChange": "      @Test     public void testTagIncomplete() throws Exception", "diff": ["+    public void testTagIncomplete() throws Exception {", "+            \"11: \" + getCheckMessage(WRITE_TAG, \"@incomplete\",", "-", "-    @Test", "-    public void testTagPrintSeverityFalse() throws Exception {", "-        checkConfig.addAttribute(\"tag\", \"@incomplete\");", "-        checkConfig.addAttribute(\"tagFormat\", \"\\\\S\");", "-        checkConfig.addAttribute(\"tagSeverity\", \"warning\");", "-        final String[] expected = {", "-            \"11: \" + getCheckMessage(WRITE_TAG, \"@incomplete\", \"This class needs more code...\"),", "-        };", "-        final boolean printSeverity = false;", "-        verify(checkConfig, printSeverity, getPath(\"InputWriteTag.java\"), expected);", "+        verify(checkConfig, getPath(\"InputWriteTag.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b40914ae4916b75d188d093d7da95a0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "441025a2f72ecf7e2545f2fb393b36a4be7a755d", "commitAfterChange": "66cc059f7129ce961b3dc833c3150b2dbd89590b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processVariable(DetailAST aAST)", "signatureAfterChange": "     private void processVariable(DetailAST aAST)", "diff": ["-                boolean inStatic = inStatic(aAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4e25f74504959571de94a570720cad9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PropertiesExpanderTest.java", "commitBeforeChange": "7770f2a2c25c41bf024355f19caac358419110a6", "commitAfterChange": "bb5eb6c08eb4cae392147567654f6d45d6174cbf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test(expected = IllegalArgumentException.class)     public void testCtorException()  throws CheckstyleException", "signatureAfterChange": "      @Test(expected = IllegalArgumentException.class)     public void testCtorException()  throws CheckstyleException", "diff": ["-        PropertiesExpander object = new PropertiesExpander(null);", "+        new PropertiesExpander(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6284ea31ee1c3ef8ac79b4f9ef74b63", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4822variabledistance/VariableDeclarationUsageDistanceTest.java", "commitBeforeChange": "7770f2a2c25c41bf024355f19caac358419110a6", "commitAfterChange": "bb5eb6c08eb4cae392147567654f6d45d6174cbf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void arrayTypeStyleTest() throws IOException, Exception", "signatureAfterChange": "      @Test     public void arrayTypeStyleTest() throws IOException, Exception", "diff": ["-        ", "-        String msg = \"variable.declaration.usage.distance\";", "+", "-        ", "+", "-        ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7527629f4aa7ba6706f3b04e63ecde6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AllChecksTest.java", "commitBeforeChange": "10ebe0d8d371b78306faeffd9250975d9c8e0854", "commitAfterChange": "2ba55edc4e35866afbb154e3ea03cf03e56ab9bc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testAllChecksAreReferencedInConfigFile() throws Exception", "signatureAfterChange": "      @Test     public void testAllChecksAreReferencedInConfigFile() throws Exception", "diff": ["-        final String configFilePath = \"config/checkstyle_checks.xml\";", "-                getCheckStyleChecksReferencedInConfig(configFilePath);", "+                getCheckStyleChecksReferencedInConfig(CONFIG_PATH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8f26e0c3c52b11b9d3b8b02968efbcd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/PackageNamesLoaderTest.java", "commitBeforeChange": "ec0085226c3762e2d0d786ba1181e4e1d0496c0c", "commitAfterChange": "b8d0a65d5059b806bcf801db797232d4662d340d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public void testNoFile()         throws CheckstyleException", "signatureAfterChange": "          public void testNoFile()         throws CheckstyleException", "diff": ["-            String[] pkgNames = PackageNamesLoader.loadPackageNames(\"NoFile\");", "+            PackageNamesLoader.loadPackageNames(\"NoFile\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b90226dee7267fe54144d8310d4bdc87", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "081c654df8d801f576506265681654a730cfc375", "commitAfterChange": "24d8ecc0aeb8e55eee83a0eabe34c67027400680", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     private static String getClassShortName(String canonicalClassName)", "signatureAfterChange": "     private static String getClassShortName(String canonicalClassName)", "diff": ["-        final String shortClassName = canonicalClassName", "+        return canonicalClassName", "-        return shortClassName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5d8bb3f6a643edb9a98c31d38727179", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java", "commitBeforeChange": "38bd8f7f3e30a8667792dccd591d8dc0461082df", "commitAfterChange": "91db1968e34b4f777ab146e37a827c20b35e5c52", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     @Override     public void visitToken(DetailAST aAST)", "diff": ["-                    log(modifier.getLineNo(),", "-                        modifier.getColumnNo(),", "-                        \"redundantModifier\",", "-                        new String[] {modifier.getText()});", "+                    log(modifier.getLineNo(), modifier.getColumnNo(),", "+                            \"redundantModifier\", modifier.getText());", "-                        log(modifier.getLineNo(),", "-                            modifier.getColumnNo(),", "-                            \"redundantModifier\",", "-                            new String[] {modifier.getText()});", "+                        log(modifier.getLineNo(), modifier.getColumnNo(),", "+                                \"redundantModifier\", modifier.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c92121aa2e0626aad1a42f342807b497", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/SeverityLevelCounterTest.java", "commitBeforeChange": "7770f2a2c25c41bf024355f19caac358419110a6", "commitAfterChange": "bb5eb6c08eb4cae392147567654f6d45d6174cbf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test(expected = IllegalArgumentException.class)     public void testCtorException()", "signatureAfterChange": "      @Test(expected = IllegalArgumentException.class)     public void testCtorException()", "diff": ["-        final SeverityLevelCounter o = new SeverityLevelCounter(null);", "+        new SeverityLevelCounter(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d24e5b4fba396dda3685c203e25c35f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "35de50c9405825eeb68357df2625b693d2748ed9", "commitAfterChange": "da6a8d083cb82a94707146de559911578f39affe", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static boolean isOnTheSameLine(DetailAST ast, int lastStatementEnd,                                            int forStatementEnd)", "signatureAfterChange": "     private static boolean isOnTheSameLine(DetailAST ast, int lastStatementEnd,                                            int forStatementEnd)", "diff": ["-        final boolean onTheSameLine =", "-            lastStatementEnd == ast.getLineNo() && forStatementEnd != ast.getLineNo();", "-        return onTheSameLine;", "+        return lastStatementEnd == ast.getLineNo() && forStatementEnd != ast.getLineNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dec50fdc2e5028ba87ed14a46614acb7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/JavadocTypeCheckTest.java", "commitBeforeChange": "a0054eede02fe6109973ab4b94f3657d1ed187a3", "commitAfterChange": "730ade67d5f3f286c1004ce9a772fd4bc3bc9307", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testNoVersion()         throws Exception", "signatureAfterChange": "      public void testVersionRequired()         throws Exception", "diff": ["-    public void testNoVersion()", "-        checkConfig.addAttribute(\"allowNoAuthor\", \"true\");", "-        checkConfig.addAttribute(\"requireVersion\", \"true\");", "-            \"11: Type Javadoc comment is missing an @version tag.\"", "+", "+    public void testVersionRequired()", "+        throws Exception", "+    {", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(JavadocTypeCheck.class);", "+        checkConfig.addAttribute(\"versionFormat\", \"\\\\S\");", "+", "+        final Checker c = createChecker(checkConfig);", "+        final String fname = getPath(\"InputWhitespace.java\");", "+        final String[] expected = {", "+            \"13: Type Javadoc comment is missing an @version tag.\"", "+        };", "+        verify(c, fname, expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0df5c98ae144f3397cc61d971322b48", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PackageObjectFactoryTest.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test(expected = IllegalArgumentException.class)     public void testCtorException()  throws CheckstyleException", "signatureAfterChange": "      @Test(expected = IllegalArgumentException.class)     public void testCtorException()  throws CheckstyleException", "diff": ["-        PackageObjectFactory factory = new PackageObjectFactory(", "-                new HashSet<String>(), null);", "+        new PackageObjectFactory(new HashSet<String>(), null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8c0fa66e34b63b976596a36f2793502", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "503bc5b788ccb1374d87eaebc533e13f45308c5d", "commitAfterChange": "42a0f5684e1e25e2e119d3c052579af30de1884d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public Checker(Configuration aConfig, CheckConfiguration[] aConfigs)         throws CheckstyleException", "signatureAfterChange": "     public Checker(Configuration aConfig, CheckConfiguration[] aConfigs)         throws CheckstyleException", "diff": ["-        mMessages = new LocalizedMessages(mConfig.getTabWidth());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9c83c72497d6c3d8b0ae55c2b1750f9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "89ee699fae396abf7706ecaa59e8dbe6c833a67d", "commitAfterChange": "f243d4d74885edb0a40920246011fa6549635afd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private String getCommentText(String[] aComments)", "signatureAfterChange": "     private String getCommentText(String[] aComments)", "diff": ["-        boolean foundTag = false;", "-"]}]}