{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7d7e53402c41d0ad035f6827bae28c6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f440983edacc4481a86b3ba52956f4bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/transmogrify/Resolver.java", "commitBeforeChange": "c608ff940a62b9717d645c05ad0954578c955430", "commitAfterChange": "69e6c6f4482b3975af3345b1831c48be1ad7f325", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "     private IClass resolveArithmeticExpression(         SymTabAST expression,         Scope location,         IClass context,         boolean referencePhase)", "signatureAfterChange": "     private IClass resolveArithmeticExpression(         SymTabAST expression,         Scope location,         IClass context,         boolean referencePhase)", "diff": ["-        SymTabAST leftChild = (SymTabAST) (expression.getFirstChild());", "-        SymTabAST rightChild = (SymTabAST) (leftChild.getNextSibling());", "-", "+        SymTabAST leftChild = findLeftChild(expression);", "+        ", "+                ", "+        SymTabAST rightChild = findRightSibling(leftChild);", "+", "-            (IClass) (resolveExpression(rightChild,", "-                location,", "-                context,", "-                referencePhase));", "+                    (IClass) (resolveExpression(rightChild,", "+                        location,", "+                        context,", "+                        referencePhase));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5e01a60d3d6c7d4b6761e901d09b11b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/transmogrify/Resolver.java", "commitBeforeChange": "c608ff940a62b9717d645c05ad0954578c955430", "commitAfterChange": "69e6c6f4482b3975af3345b1831c48be1ad7f325", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 53, "signatureBeforeChange": "      private IClass resolveShiftOperator(         SymTabAST expression,         Scope location,         IClass context,         boolean referencePhase)", "signatureAfterChange": "      private IClass resolveShiftOperator(         SymTabAST expression,         Scope location,         IClass context,         boolean referencePhase)", "diff": ["-        SymTabAST leftChild = (SymTabAST) expression.getFirstChild();", "-        SymTabAST rightChild = (SymTabAST) leftChild.getNextSibling();", "+        SymTabAST leftChild = findLeftChild(expression);", "+        SymTabAST rightChild = findRightSibling(leftChild);"]}]}