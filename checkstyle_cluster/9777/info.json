{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d364d0718757e791674a12755fe3c2b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c4f109c4a10f3dbc7afc6cc162e60eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheck.java", "commitBeforeChange": "eb29e863de490162290425654a7fdcbd41d084df", "commitAfterChange": "b219e2ff881703c4b0edeee01de12635531676a9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected boolean hasText(final DetailAST slistAST)", "signatureAfterChange": "     protected boolean hasText(final DetailAST slistAST)", "diff": ["-        if (rcurlyAST != null) {", "-            final int slistLineNo = slistAST.getLineNo();", "-            final int slistColNo = slistAST.getColumnNo();", "-            final int rcurlyLineNo = rcurlyAST.getLineNo();", "-            final int rcurlyColNo = rcurlyAST.getColumnNo();", "-            final String[] lines = getLines();", "-            if (slistLineNo == rcurlyLineNo) {", "-                // Handle braces on the same line", "-                final String txt = lines[slistLineNo - 1]", "+        final int slistLineNo = slistAST.getLineNo();", "+        final int slistColNo = slistAST.getColumnNo();", "+        final int rcurlyLineNo = rcurlyAST.getLineNo();", "+        final int rcurlyColNo = rcurlyAST.getColumnNo();", "+        final String[] lines = getLines();", "+        if (slistLineNo == rcurlyLineNo) {", "+            // Handle braces on the same line", "+            final String txt = lines[slistLineNo - 1]", "-                if (StringUtils.isNotBlank(txt)) {", "-                    retVal = true;", "-                }", "+            if (StringUtils.isNotBlank(txt)) {", "+                retVal = true;", "+            }", "+        }", "+        else {", "+            // check only whitespace of first & last lines", "+            if (lines[slistLineNo - 1]", "+                    .substring(slistColNo + 1).trim().length() != 0", "+                    || lines[rcurlyLineNo - 1]", "+                            .substring(0, rcurlyColNo).trim().length() != 0) {", "+                retVal = true;", "-                // check only whitespace of first & last lines", "-                if (lines[slistLineNo - 1]", "-                     .substring(slistColNo + 1).trim().length() != 0", "-                    || lines[rcurlyLineNo - 1]", "-                        .substring(0, rcurlyColNo).trim().length() != 0) {", "-                    retVal = true;", "-                }", "-                else {", "-                    // check if all lines are also only whitespace", "-                    for (int i = slistLineNo; i < rcurlyLineNo - 1; i++) {", "-                        if (lines[i].trim().length() > 0) {", "-                            retVal = true;", "-                            break;", "-                        }", "+                // check if all lines are also only whitespace", "+                for (int i = slistLineNo; i < rcurlyLineNo - 1; i++) {", "+                    if (lines[i].trim().length() > 0) {", "+                        retVal = true;", "+                        break;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50c090683500010710cb5d4309367262", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/EmptyBlockCheck.java", "commitBeforeChange": "d471c9cd5437242b7d9e3f3c19409854fc74e50c", "commitAfterChange": "982b3963ca007c6101f69cf50c010f07292dab0e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public EmptyBlockCheck()", "signatureAfterChange": "      private boolean hasText(final DetailAST slistAST)", "diff": ["-     */", "-    public EmptyBlockCheck()", "-    {", "-        mCheckFor.add(\"if\");", "-        mCheckFor.add(\"try\");", "-        mCheckFor.add(\"catch\");", "-        mCheckFor.add(\"finally\");", "-        // TODO: currently there is no way to differenciate between if and", "-        // else is not available as a parent token, instead if has two", "-        // statement children needs grammar change or workaround here to make", "-        // config simple", "-    }", "+    private boolean hasText(final DetailAST slistAST)", "+    {", "+        boolean retVal = false;", "+        ", "+        final DetailAST rcurlyAST = slistAST.findFirstToken(TokenTypes.RCURLY);", "+        if (rcurlyAST != null) {", "+            final int slistLineNo = slistAST.getLineNo();", "+            final int slistColNo = slistAST.getColumnNo();", "+            final int rcurlyLineNo = rcurlyAST.getLineNo();", "+            final int rcurlyColNo = rcurlyAST.getColumnNo();", "+            final String[] lines = getLines();", "+            if (slistLineNo == rcurlyLineNo) {", "+                // Handle braces on the same line", "+                final String txt = lines[slistLineNo - 1]", "+                    .substring(slistColNo + 1, rcurlyColNo);", "+                if (txt.trim().length() != 0) {", "+                     retVal = true;", "+                }", "+            }", "+            else {", "+                // check only whitespace of first & last lines", "+                if ((lines[slistLineNo - 1]", "+                     .substring(slistColNo + 1).trim().length() != 0)", "+                    || (lines[rcurlyLineNo - 1]", "+                        .substring(0, rcurlyColNo).trim().length() != 0))", "+                {", "+                    retVal = true;", "+                }", "+                else {", "+                    // check if all lines are also only whitespace", "+                    for (int i = slistLineNo; i < (rcurlyLineNo - 1); i++)", "+                    {", "+                        if (lines[i].trim().length() > 0) {", "+                            retVal = true;", "+                            break;", "+                        }", "+                    }", "+                }", "+            }", "+        }               ", "+        return retVal;"]}]}