{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3dac46fbaaae17870f490a29b0a8ac30", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c23381ede903ef371b30939ffd0c9ea2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java", "commitBeforeChange": "b30ed9fc87c0a74860cc355af259fc29f6d1b76f", "commitAfterChange": "a72e93613b8151d683fa83e5636212ed2f1413af", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static FilterSet loadSuppressions(String aFilename)         throws CheckstyleException", "signatureAfterChange": "     public static FilterSet loadSuppressions(String aFilename)         throws CheckstyleException", "diff": ["-            // check for the file in the classpath", "-            fis = SuppressionsLoader.class.getResourceAsStream(aFilename);", "-", "+            if (aFilename.matches(\"^https?://.+\")) {", "+                // this is a URL, load it as such", "+                try {", "+                    fis = new URL(aFilename).openStream();", "+                }", "+                catch (MalformedURLException e1) {", "+                    throw new CheckstyleException(", "+                        \"Invalid URL: \" + aFilename, e1);", "+                }", "+                catch (IOException e1) {", "+                    throw new CheckstyleException(", "+                        \"unable to read \" + aFilename, e1);", "+                }", "+            }", "+            else {", "+                // check for the file in the classpath", "+                fis = SuppressionsLoader.class.getResourceAsStream(aFilename);", "+            }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd0516643a726cf58c36952a729623d1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "59222296258fecc02db44eeae1cb65b44b68c267", "commitAfterChange": "91875d1901eaf53e869e6179ceb6e45a3ab14e77", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          public void actionPerformed(ActionEvent e)", "signatureAfterChange": "          public void actionPerformed(ActionEvent e)", "diff": ["-            final Component parent = SwingUtilities.getRoot(ParseTreeInfoPanel.this);", "+            final Component parent =", "+                SwingUtilities.getRoot(ParseTreeInfoPanel.this);", "-            if (file != null) {", "-                try {", "-                    DetailAST parseTree = parseFile(file.getAbsolutePath());", "-                    mParseTreeModel.setParseTree(parseTree);", "-                }", "-                catch (IOException ex) {", "-                    JOptionPane.showMessageDialog(parent,", "-                            \"Could not open \" + file + \": \" + ex.getMessage());", "-                }", "-                catch (ANTLRException ex) {", "-                    JOptionPane.showMessageDialog(parent,", "-                            \"Could not parse \" + file + \": \" + ex.getMessage());", "-                }", "+            openFile(file, parent);", "+        }"]}]}