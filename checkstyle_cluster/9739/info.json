{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "014a8f61b8da586cfa4bf1f1a378d4d1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e4aab1d380cb8392dbfc5ce837dd750", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheck.java", "commitBeforeChange": "5dfb3f5a9e0206f9f80f9f067faa3dbe7766cef9", "commitAfterChange": "13b7c634337e38d20daa92ca9d5e069a2e72ec55", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public synchronized void process(List<File> aFiles)", "signatureAfterChange": "      @Override     protected void processFiltered(File aFile, List<String> aLines)", "diff": ["-    /** {@inheritDoc} */", "-    public synchronized void process(List<File> aFiles)", "+", "+    @Override", "+    protected void processFiltered(File aFile, List<String> aLines)", "+    {", "+        mFiles.add(aFile);", "+    }", "-        mFiles = filter(aFiles);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dff4faaa5ed721f973ebffc88da8be1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "6f1840f011cea3a523d9df1278d4a0af98e1d967", "commitAfterChange": "f0e75896a4c9a79d1cd4e414ae3fc7011268eb80", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void realExecute()", "signatureAfterChange": "     private void realExecute()", "diff": ["-            // Process the files", "-            long startTime = System.currentTimeMillis();", "-            final List<File> files = scanFileSets();", "-            long endTime = System.currentTimeMillis();", "-            log(\"To locate the files took \" + (endTime - startTime) + TIME_SUFFIX,", "-                Project.MSG_VERBOSE);", "-", "-            log(\"Running Checkstyle \" + version + \" on \" + files.size()", "-                    + \" files\", Project.MSG_INFO);", "-            log(\"Using configuration \" + configLocation, Project.MSG_VERBOSE);", "-", "-            startTime = System.currentTimeMillis();", "-            final int numErrs = checker.process(files);", "-            endTime = System.currentTimeMillis();", "-            log(\"To process the files took \" + (endTime - startTime) + TIME_SUFFIX,", "-                Project.MSG_VERBOSE);", "-            final int numWarnings = warningCounter.getCount();", "-            final boolean ok = numErrs <= maxErrors", "-                    && numWarnings <= maxWarnings;", "-", "-            // Handle the return status", "-            if (!ok) {", "-                final String failureMsg =", "-                        \"Got \" + numErrs + \" errors and \" + numWarnings", "-                                + \" warnings.\";", "-                if (failureProperty != null) {", "-                    getProject().setProperty(failureProperty, failureMsg);", "-                }", "-", "-                if (failOnViolation) {", "-                    throw new BuildException(failureMsg, getLocation());", "-                }", "-            }", "+            processFiles(checker, warningCounter, version);"]}]}