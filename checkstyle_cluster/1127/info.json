{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b45fad86d2c4733259977b3e587b216e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0492a33021beb73432827bd5d1041163", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "d86a9de35b58eeed409ed9fc3cbef252fda4cb84", "commitAfterChange": "5d7063c660b241bce251f1a8c89394619f2791fb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        String currentString = aAST.getText();", "-        ArrayList i = (ArrayList) mStringMap.get(currentString);", "-        if (i == null) {", "-            i = new ArrayList();", "-            mStringMap.put(currentString, i);", "+        final String currentString = aAST.getText();", "+        ArrayList hitList = (ArrayList) mStringMap.get(currentString);", "+        if (hitList == null) {", "+            hitList = new ArrayList();", "+            mStringMap.put(currentString, hitList);", "-        i.add(new StringInfo(line, col));", "+        hitList.add(new StringInfo(line, col));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d8ffa66593701759a2c6806b04913fb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "4795a2b48559bb4609ae0ed8d55679fdb59b7ef3", "commitAfterChange": "253622ab83a78434d28d050df40cdedcec303713", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        ArrayList hitList = (ArrayList) mStringMap.get(currentString);", "-        if (hitList == null) {", "-            hitList = new ArrayList();", "-            mStringMap.put(currentString, hitList);", "+        if ((mPattern == null) || !mPattern.matcher(currentString).find()) {", "+            ArrayList hitList = (ArrayList) mStringMap.get(currentString);", "+            if (hitList == null) {", "+                hitList = new ArrayList();", "+                mStringMap.put(currentString, hitList);", "+            }", "+            final int line = aAST.getLineNo();", "+            final int col = aAST.getColumnNo();", "+            hitList.add(new StringInfo(line, col));", "-        final int line = aAST.getLineNo();", "-        final int col = aAST.getColumnNo();", "-        hitList.add(new StringInfo(line, col));"]}]}