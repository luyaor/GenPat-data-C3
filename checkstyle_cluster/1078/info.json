{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4874cdf0a0ec61dc731992e8104a085f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a4ef3927fc279650cf61b41b62e2be6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportCheck.java", "commitBeforeChange": "32f5f97181f9049af5411a5b8f151b51f1c5f165", "commitAfterChange": "731b581a1c0406506266226c50be8796179464e5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST aAST) ", "-            log(aAST.getLineNo(), \"import.avoidStar\", name.getText());", "+            boolean exempt = false;", "+            for (int i = 0; i < m_excludes.length && !exempt; i++) {", "+                if (name.getText().equals(m_excludes[i])) {", "+                    exempt = true;", "+                }", "+            }", "+            if (!exempt) {", "+                log(aAST.getLineNo(), \"import.avoidStar\", name.getText());", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62a75a8cad0c6c0f5a7a9007f97f53f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/MethodLengthCheck.java", "commitBeforeChange": "ee8467d36723b5b3562b4f101e84950a4320ecf1", "commitAfterChange": "8a12b000f238052a19f41c2d00affdf5cbb69a8e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            final int length =", "+            int length =", "+", "+            if (!mCountEmpty) {", "+                final FileContents contents = getFileContents();", "+                final int lastLine = closingBrace.getLineNo();", "+                for (int i = openingBrace.getLineNo() - 1; i < lastLine; i++) {", "+                    if (contents.lineIsBlank(i) || contents.lineIsComment(i)) {", "+                        length--;", "+                    }", "+                }", "+            }"]}]}