{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84d37f2a5117dbe8be488f5830d59c6b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ca6212eefaaf9116df51abb223cfa99", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testIt3()         throws Exception", "signatureAfterChange": "      @Test     public void testIt3()         throws Exception", "diff": ["-            \"41:14: \" + getCheckMessage(WS_NOT_FOLLOWED, \"while\"),", "-            \"58:12: \" + getCheckMessage(WS_NOT_FOLLOWED, \"for\"),", "+            \"37:14: \" + getCheckMessage(WS_NOT_FOLLOWED, \"while\"),", "+            \"54:12: \" + getCheckMessage(WS_NOT_FOLLOWED, \"for\"),", "-            \"115:27: \" + getCheckMessage(WS_NOT_FOLLOWED, \"{\"),", "-            \"115:27: \" + getCheckMessage(WS_NOT_PRECEDED, \"}\"),", "-            \"118:40: \" + getCheckMessage(WS_NOT_FOLLOWED, \"{\"),", "-            \"118:40: \" + getCheckMessage(WS_NOT_PRECEDED, \"}\"),", "+            \"111:27: \" + getCheckMessage(WS_NOT_FOLLOWED, \"{\"),", "+            \"111:27: \" + getCheckMessage(WS_NOT_PRECEDED, \"}\"),", "+            \"114:40: \" + getCheckMessage(WS_NOT_FOLLOWED, \"{\"),", "+            \"114:40: \" + getCheckMessage(WS_NOT_PRECEDED, \"}\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "321928dca48f937f58a6c2359d928e9a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "      @Test     public void test_generics_3() throws Exception", "signatureAfterChange": "      @Test     public void test_generics_3() throws Exception", "diff": ["-            \"6:8: Unused @throws tag for 'RE'.\",", "-            \"15:34: Expected @throws tag for 'RE'.\",", "-            \"31:13: Expected @param tag for '<NPE>'.\",", "-            \"38:12: Unused @throws tag for 'E'.\",", "-            \"41:38: Expected @throws tag for 'RuntimeException'.\",", "-            \"42:13: Expected @throws tag for 'java.lang.RuntimeException'.\",", "+            \"8:8: Unused @throws tag for 'RE'.\",", "+            \"17:34: Expected @throws tag for 'RE'.\",", "+            \"33:13: Expected @param tag for '<NPE>'.\",", "+            \"40:12: Unused @throws tag for 'E'.\",", "+            \"43:38: Expected @throws tag for 'RuntimeException'.\",", "+            \"44:13: Expected @throws tag for 'java.lang.RuntimeException'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36cee0a52153503671ded0dfb0122ff9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheckTest.java", "commitBeforeChange": "ae3860dcdddada15b09dba876a5b8a06652656c2", "commitAfterChange": "6a8584adbd9ad33ae2b89c0deb6481f62dd14257", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testSimple() throws Exception", "signatureAfterChange": "      @Test     public void testSimple() throws Exception", "diff": ["-            \"39:19: \" + getCheckMessage(MSG_KEY, \"mNumCreated2\"),", "-            \"49:23: \" + getCheckMessage(MSG_KEY, \"sTest1\"),", "-            \"51:26: \" + getCheckMessage(MSG_KEY, \"sTest3\"),", "-            \"53:16: \" + getCheckMessage(MSG_KEY, \"sTest2\"),", "-            \"56:9: \" + getCheckMessage(MSG_KEY, \"mTest1\"),", "-            \"58:16: \" + getCheckMessage(MSG_KEY, \"mTest2\"),", "+            \"33:19: \" + getCheckMessage(MSG_KEY, \"mNumCreated2\"),", "+            \"43:23: \" + getCheckMessage(MSG_KEY, \"sTest1\"),", "+            \"45:26: \" + getCheckMessage(MSG_KEY, \"sTest3\"),", "+            \"47:16: \" + getCheckMessage(MSG_KEY, \"sTest2\"),", "+            \"50:9: \" + getCheckMessage(MSG_KEY, \"mTest1\"),", "+            \"52:16: \" + getCheckMessage(MSG_KEY, \"mTest2\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bacbf9d67186058671c173709171b4b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "      public void testSemantic()         throws Exception", "signatureAfterChange": "      public void testSemantic()         throws Exception", "diff": ["-            filepath + \":19:21: Avoid instantiation of java.lang.Boolean\",", "-            filepath + \":24:21: Avoid instantiation of java.lang.Boolean\",", "-            filepath + \":30:16: Avoid instantiation of java.lang.Boolean\",", "+            filepath + \":19:21: Avoid instantiation of java.lang.Boolean.\",", "+            filepath + \":24:21: Avoid instantiation of java.lang.Boolean.\",", "+            filepath + \":30:16: Avoid instantiation of java.lang.Boolean.\",", "-                               \"com.puppycrawl.tools.checkstyle.InputModifier\",", "-            filepath + \":40:18: Avoid instantiation of java.io.File\",", "-            filepath + \":43:21: Avoid instantiation of java.awt.Color\",", "+                               \"com.puppycrawl.tools.checkstyle.InputModifier.\",", "+            filepath + \":40:18: Avoid instantiation of java.io.File.\",", "+            filepath + \":43:21: Avoid instantiation of java.awt.Color.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bad6d2311e63ba97a868d3f6264b898", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeParameterNameTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testMethodFooName()         throws Exception", "signatureAfterChange": "      @Test     public void testMethodFooName()         throws Exception", "diff": ["-            \"5:13: Name 'TT' must match pattern '^foo$'.\",", "-            \"7:6: Name 'e_e' must match pattern '^foo$'.\",", "-            \"17:6: Name 'Tfo$o2T' must match pattern '^foo$'.\",", "-            \"26:10: Name '_fo' must match pattern '^foo$'.\",", "-            \"33:6: Name 'E' must match pattern '^foo$'.\",", "-            \"35:14: Name 'T' must match pattern '^foo$'.\",", "+            \"7:13: Name 'TT' must match pattern '^foo$'.\",", "+            \"9:6: Name 'e_e' must match pattern '^foo$'.\",", "+            \"19:6: Name 'Tfo$o2T' must match pattern '^foo$'.\",", "+            \"28:10: Name '_fo' must match pattern '^foo$'.\",", "+            \"35:6: Name 'E' must match pattern '^foo$'.\",", "+            \"37:14: Name 'T' must match pattern '^foo$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fe1f2a7227517e64501d201087799fc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "dc764f3b6ad475854cd0d22655db3f96e7eb7ed3", "commitAfterChange": "a1cecb5e0658862f957e60a8d5b2ade13b592101", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void testSimple()         throws Exception", "signatureAfterChange": "      public void testSimple()         throws Exception", "diff": ["-            filepath + \":39: variable 'mNumCreated2' must be private and have accessor methods.\",", "+            filepath + \":39:19: variable 'mNumCreated2' must be private and have accessor methods.\",", "-            filepath + \":49: variable 'sTest1' must be private and have accessor methods.\",", "-            filepath + \":51: variable 'sTest3' must be private and have accessor methods.\",", "-            filepath + \":53: variable 'sTest2' must be private and have accessor methods.\",", "-            filepath + \":56: variable 'mTest1' must be private and have accessor methods.\",", "-            filepath + \":58: variable 'mTest2' must be private and have accessor methods.\",", "+            filepath + \":49:23: variable 'sTest1' must be private and have accessor methods.\",", "+            filepath + \":51:26: variable 'sTest3' must be private and have accessor methods.\",", "+            filepath + \":53:16: variable 'sTest2' must be private and have accessor methods.\",", "+            filepath + \":56:9: variable 'mTest1' must be private and have accessor methods.\",", "+            filepath + \":58:16: variable 'mTest2' must be private and have accessor methods.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "541f7eb45ea7aaa9cc6324cea4b85b2e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheckTest.java", "commitBeforeChange": "7f92af2b87261b54a684b63fde75136d1049b59f", "commitAfterChange": "0cc473e04f76ecbb551349fb81a87300d23945b7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void test() throws Exception", "signatureAfterChange": "      @Test     public void test() throws Exception", "diff": ["-        checkConfig.addAttribute(\"classMaximum\", \"0\");", "-        checkConfig.addAttribute(\"fileMaximum\", \"0\");", "+        checkConfig.addAttribute(\"classMaximum\", \"1\");", "+        checkConfig.addAttribute(\"fileMaximum\", \"2\");", "-                \"2:1: NCSS for this file is 35 (max allowed is 0).\",", "-                \"9:1: NCSS for this class is 22 (max allowed is 0).\",", "+                \"2:1: NCSS for this file is 35 (max allowed is 2).\",", "+                \"9:1: NCSS for this class is 22 (max allowed is 1).\",", "-                \"49:5: NCSS for this class is 2 (max allowed is 0).\",", "-                \"56:1: NCSS for this class is 10 (max allowed is 0).\",", "+                \"49:5: NCSS for this class is 2 (max allowed is 1).\",", "+                \"56:1: NCSS for this class is 10 (max allowed is 1).\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd18de10ef198885da3d5bf7279502d3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/RedundantThrowsCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefaults() throws Exception", "signatureAfterChange": "      @Test     public void testDefaults() throws Exception", "diff": ["-            \"7:37: Redundant throws: 'java.io.FileNotFoundException' is subclass of 'java.io.IOException'.\",", "-            \"13:16: Redundant throws: 'RuntimeException' is unchecked exception.\",", "-            \"19:29: Redundant throws: 'java.io.IOException' listed more then one time.\",", "-            \"39:27: Redundant throws: 'NullPointerException' is subclass of 'RuntimeException'.\",", "-            \"39:27: Redundant throws: 'NullPointerException' is unchecked exception.\",", "-            \"39:49: Redundant throws: 'RuntimeException' is unchecked exception.\",", "+            \"9:37: Redundant throws: 'java.io.FileNotFoundException' is subclass of 'java.io.IOException'.\",", "+            \"15:16: Redundant throws: 'RuntimeException' is unchecked exception.\",", "+            \"21:29: Redundant throws: 'java.io.IOException' listed more then one time.\",", "+            \"41:27: Redundant throws: 'NullPointerException' is subclass of 'RuntimeException'.\",", "+            \"41:27: Redundant throws: 'NullPointerException' is unchecked exception.\",", "+            \"41:49: Redundant throws: 'RuntimeException' is unchecked exception.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da71a1799754f1c982b5371c507c32e3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundTest.java", "commitBeforeChange": "bc8c9509f93a8f73a0059dcf5526b801d27a0b2a", "commitAfterChange": "ab50d42d93880d48c8aef9c88c37174bd941463f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testEmptyTypes() throws Exception", "signatureAfterChange": "      @Test     public void testEmptyTypes() throws Exception", "diff": ["-            \"14:91: '{' is not followed by whitespace.\",", "-            \"14:91: '}' is not preceded with whitespace.\",", "-            \"15:32: '{' is not followed by whitespace.\",", "-            \"15:32: '}' is not preceded with whitespace.\",", "-            \"16:21: '{' is not followed by whitespace.\",", "-            \"16:21: '}' is not preceded with whitespace.\",", "+            \"29:95: '{' is not followed by whitespace.\",", "+            \"29:95: '}' is not preceded with whitespace.\",", "+            \"30:33: '{' is not followed by whitespace.\",", "+            \"30:33: '}' is not preceded with whitespace.\",", "+            \"31:21: '{' is not followed by whitespace.\",", "+            \"31:21: '}' is not preceded with whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efd427892754d26305aeb0c1d6bf5231", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "adce874628730a881c533bb04db2688d03a60fc6", "commitAfterChange": "33b703a724ddd2090f771cb9834c85e0ccb569e1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void testInvalidArrayInitWithChecker()         throws Exception", "signatureAfterChange": "      public void testInvalidArrayInitWithChecker()         throws Exception", "diff": ["-            \"17: class def child at indentation level 2 not at correct indentation, 4\",", "-            \"18: class def child at indentation level 6 not at correct indentation, 4\",", "-            \"20: class def child at indentation level 2 not at correct indentation, 4\",", "+            \"17: member def type at indentation level 2 not at correct indentation, 4\",", "+            \"18: member def type at indentation level 6 not at correct indentation, 4\",", "+            \"20: member def type at indentation level 2 not at correct indentation, 4\",", "-            \"24: class def child at indentation level 6 not at correct indentation, 4\",", "+            \"24: member def type at indentation level 6 not at correct indentation, 4\",", "-            \"59: class def child at indentation level 2 not at correct indentation, 4\",", "-            \"61: class def child at indentation level 6 not at correct indentation, 4\",", "+            \"59: member def type at indentation level 2 not at correct indentation, 4\",", "+            \"61: member def type at indentation level 6 not at correct indentation, 4\","]}]}