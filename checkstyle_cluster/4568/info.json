{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4579b71e22fa8c1276089764ea37d3ca", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06ea395c578359c46c300b3fe7361f27", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void registerCheck(String aToken, Check aCheck)", "signatureAfterChange": "     private void registerCheck(String token, Check check)", "diff": ["-    private void registerCheck(String aToken, Check aCheck)", "+    private void registerCheck(String token, Check check)", "-        if (aCheck.isCommentNodesRequired()) {", "-            mTokenToCommentChecks.put(aToken, aCheck);", "+        if (check.isCommentNodesRequired()) {", "+            tokenToCommentChecks.put(token, check);", "-        else if (TokenTypes.isCommentType(aToken)) {", "+        else if (TokenTypes.isCommentType(token)) {", "-                    + aCheck.getClass().getName()", "+                    + check.getClass().getName()", "-                    + aToken", "+                    + token", "-            mTokenToOrdinaryChecks.put(aToken, aCheck);", "+            tokenToOrdinaryChecks.put(token, check);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6628e9b73717559a6eacb97d3ac9ace6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "59aa66c3cc43db0a7cd8bb0ea3a39b6f4339fe88", "commitAfterChange": "a24df47cafeab03fd65cf72b460aad3d2fafce3d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void registerCheck(String aToken, Check aCheck)", "signatureAfterChange": "     private void registerCheck(String aToken, Check aCheck)", "diff": ["-        mTokenToChecks.put(aToken, aCheck);", "+        if (aCheck.isCommentNodesRequired()) {", "+            mTokenToCommentChecks.put(aToken, aCheck);", "+        }", "+        else if (TokenTypes.isCommentType(aToken)) {", "+            LOG.warn(\"Check '\"", "+                    + aCheck.getClass().getName()", "+                    + \"' waits for comment type token ('\"", "+                    + aToken", "+                    + \"') and should override 'isCommentNodesRequred()'\"", "+                    + \" method to return 'true'\");", "+        }", "+        else {", "+            mTokenToOrdinaryChecks.put(aToken, aCheck);", "+        }"]}]}