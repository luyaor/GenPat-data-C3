{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fdd2d19b0b4755f0426bd4790f1b144d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ce89559bbdd0af293e015e4ab397fcd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setTagFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setTagFormat(String format)         throws ConversionException", "diff": ["-    public void setTagFormat(String aFormat)", "+    public void setTagFormat(String format)", "-            mTagFormat = aFormat;", "-            mTagFormatRE = Utils.getPattern(aFormat);", "+            tagFormat = format;", "+            tagFormatRE = Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6342860f5518c3290e2773043980ba5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setTag(String aTag)         throws ConversionException", "signatureAfterChange": "     public void setTag(String tag)         throws ConversionException", "diff": ["-    public void setTag(String aTag)", "+    public void setTag(String tag)", "-            mTag = aTag;", "-            mTagRE = Utils.getPattern(aTag + \"\\\\s*(.*$)\");", "+            this.tag = tag;", "+            tagRE = Utils.getPattern(tag + \"\\\\s*(.*$)\");", "-            throw new ConversionException(\"unable to parse \" + aTag, e);", "+            throw new ConversionException(\"unable to parse \" + tag, e);"]}]}