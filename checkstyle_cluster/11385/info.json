{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7d705467e124415def79bad97589b43", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3935b36448bf4ec1b994ad83f6d115bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testStyleCompactNoArray() throws Exception", "signatureAfterChange": "      @Test     public void testStyleCompactNoArray() throws Exception", "diff": ["-            \"5: Annotation style must be 'COMPACT_NO_ARRAY'.\",", "-            \"20: Annotation style must be 'COMPACT_NO_ARRAY'.\",", "-            \"41: Annotation style must be 'COMPACT_NO_ARRAY'.\",", "-            \"43: Annotation style must be 'COMPACT_NO_ARRAY'.\",", "-            \"47: Annotation style must be 'COMPACT_NO_ARRAY'.\",", "+            \"5: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"COMPACT_NO_ARRAY\"),", "+            \"20: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"COMPACT_NO_ARRAY\"),", "+            \"41: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"COMPACT_NO_ARRAY\"),", "+            \"43: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"COMPACT_NO_ARRAY\"),", "+            \"47: \" + getCheckMessage(MSG_KEY_ANNOTATION_INCORRECT_STYLE, \"COMPACT_NO_ARRAY\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0c24c0b21d1e256defa8c62217b1abf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testMultipleEmptyLinesBetweenClassMembers() throws Exception", "signatureAfterChange": "      @Test     public void testMultipleEmptyLinesBetweenClassMembers() throws Exception", "diff": ["-            \"21: 'package' has more than 1 empty lines before.\",", "-            \"24: 'import' has more than 1 empty lines before.\",", "-            \"33: 'VARIABLE_DEF' has more than 1 empty lines before.\",", "-            \"38: 'VARIABLE_DEF' has more than 1 empty lines before.\",", "-            \"43: 'METHOD_DEF' has more than 1 empty lines before.\",", "+            \"21: \" + getCheckMessage(MSG_MULTIPLE_LINES, \"package\"),", "+            \"24: \" + getCheckMessage(MSG_MULTIPLE_LINES, \"import\"),", "+            \"33: \" + getCheckMessage(MSG_MULTIPLE_LINES, \"VARIABLE_DEF\"),", "+            \"38: \" + getCheckMessage(MSG_MULTIPLE_LINES, \"VARIABLE_DEF\"),", "+            \"43: \" + getCheckMessage(MSG_MULTIPLE_LINES, \"METHOD_DEF\"),"]}]}