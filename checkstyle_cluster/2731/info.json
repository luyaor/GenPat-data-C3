{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b2b4d1335edbe542ff122d6f3ec32eb5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70759f8d7e21fece7874e2d3ec19d30d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-    public void finishTree(DetailAST aRootAST)", "+    public void finishTree(DetailAST rootAST)", "-        final Counter counter = mCounters.pop();", "+        final Counter counter = counters.pop();", "-        if (count > mFileMax) {", "-            log(aRootAST.getLineNo(), aRootAST.getColumnNo(), \"ncss.file\",", "-                    count, mFileMax);", "+        if (count > fileMax) {", "+            log(rootAST.getLineNo(), rootAST.getColumnNo(), \"ncss.file\",", "+                    count, fileMax);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8f191c650512093b3261a5c22ba1266", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java", "commitBeforeChange": "a077b7282714b38286a09dcea10b710e5121a246", "commitAfterChange": "e6f4dad587d318233ff9343c5b66d831b7035fcf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void visitLiteralThrows(DetailAST ast)", "signatureAfterChange": "     private void visitLiteralThrows(DetailAST ast)", "diff": ["-        // Account for all the commas!", "-        final int count = (ast.getChildCount() + 1) / 2;", "-        if (count > getMax()) {", "-            log(ast.getLineNo(),  ast.getColumnNo(), MSG_KEY,", "-                count, getMax());", "+        if (!isOverriding(ast)) {", "+            // Account for all the commas!", "+            final int count = (ast.getChildCount() + 1) / 2;", "+            if (count > getMax()) {", "+                log(ast.getLineNo(),  ast.getColumnNo(), MSG_KEY,", "+                    count, getMax());", "+            }"]}]}