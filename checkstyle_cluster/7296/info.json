{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c6d1d13073758b161638554b32ad03f4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "133648a89e8044e792f7a01d54b3c3eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SingleLineJavadocCheck.java", "commitBeforeChange": "3004b4d8810fae5956864d1493ea94f183b9442c", "commitAfterChange": "86c1e2d4b740f38d45167254bff5fb84b0d7ed92", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private boolean hasJavadocInlineTags(DetailNode javadocRoot)", "signatureAfterChange": "     private boolean hasJavadocInlineTags(DetailNode javadocRoot)", "diff": ["-        return JavadocUtils.branchContains(javadocRoot, JavadocTokenTypes.JAVADOC_INLINE_TAG);", "+        DetailNode javadocTagSection =", "+                JavadocUtils.findFirstToken(javadocRoot, JavadocTokenTypes.JAVADOC_INLINE_TAG);", "+        boolean foundTag = false;", "+        while (javadocTagSection != null) {", "+            if (!isTagIgnored(javadocTagSection)) {", "+                foundTag = true;", "+                break;", "+            }", "+            javadocTagSection = JavadocUtils.getNextSibling(", "+                    javadocTagSection, JavadocTokenTypes.JAVADOC_INLINE_TAG);", "+        }", "+        return foundTag;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d04098e3a8cc039405559c27e878223", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "1181c2e17292151b96e4253f01300505fe4153d2", "commitAfterChange": "3004b4d8810fae5956864d1493ea94f183b9442c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static List<String> validateCli(CommandLine cmdLine)", "signatureAfterChange": "     private static List<String> validateCli(CommandLine cmdLine)", "diff": ["-        if (!cmdLine.hasOption(\"c\")) {", "-            result.add(\"Must specify a config XML file.\");", "-        }", "-        else {", "+        if (cmdLine.hasOption(\"c\")) {", "+            final String configLocation = cmdLine.getOptionValue(\"c\");", "+            final File configFile =  new File(configLocation);", "+            if (!configFile.exists()) {", "+                result.add(String.format(\"unable to find '%s'.\", configLocation));", "+            }", "+", "+", "+", "+", "+        else {", "+            result.add(\"Must specify a config XML file.\");", "+        }"]}]}