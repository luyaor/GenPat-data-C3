{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8e243ba404f74699b0ce8db7518354c5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "523a520012a21bfcc38f3b4e2b14caef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtilsTest.java", "commitBeforeChange": "7d097b6fa682f8dcfedd95da2db8fed980c51705", "commitAfterChange": "d8286130e83dc672d30cd00eddbf6b5f77112521", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testTagType()", "signatureAfterChange": "      @Test     public void testTagType()", "diff": ["-    public void testTagType() {", "-        String [] text = { \"/** @see block\",", "-                           \" * {@link List inline}, {@link List#add(Object)}\" };", "-        Comment comment = new Comment(text, 1, 2, text[1].length());", "-        JavadocTags blockTags =", "+    public void testTagType()", "+    {", "+        final String [] text = {", "+            \"/** @see block\",", "+            \" * {@link List inline}, {@link List#add(Object)}\",", "+        };", "+        final Comment comment = new Comment(text, 1, 2, text[1].length());", "+        final JavadocTags blockTags =", "-        JavadocTags inlineTags =", "+        final JavadocTags inlineTags =", "-        assertEquals(1, blockTags.validTags.size());", "-        assertEquals(2, inlineTags.validTags.size());", "+        assertEquals(1, blockTags.getValidTags().size());", "+        assertEquals(2, inlineTags.getValidTags().size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0add846e6f51001643a86ee6631d771", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     static String replaceProperties(             String aValue, PropertyResolver aProps, String aDefaultValue)         throws CheckstyleException", "signatureAfterChange": "     static String replaceProperties(             String value, PropertyResolver props, String defaultValue)         throws CheckstyleException", "diff": ["-            String aValue, PropertyResolver aProps, String aDefaultValue)", "+            String value, PropertyResolver props, String defaultValue)", "-        if (aValue == null) {", "+        if (value == null) {", "-        parsePropertyString(aValue, fragments, propertyRefs);", "+        parsePropertyString(value, fragments, propertyRefs);", "-                fragment = aProps.resolve(propertyName);", "+                fragment = props.resolve(propertyName);", "-                    if (aDefaultValue != null) {", "-                        return aDefaultValue;", "+                    if (defaultValue != null) {", "+                        return defaultValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e336ef47563f1c6837397898e9398106", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public String encode(String aValue)", "signatureAfterChange": "     public String encode(String value)", "diff": ["-    public String encode(String aValue)", "+    public String encode(String value)", "-        for (int i = 0; i < aValue.length(); i++) {", "-            final char c = aValue.charAt(i);", "+        for (int i = 0; i < value.length(); i++) {", "+            final char c = value.charAt(i);", "-                final int nextSemi = aValue.indexOf(\";\", i);", "+                final int nextSemi = value.indexOf(\";\", i);", "-                    || !isReference(aValue.substring(i, nextSemi + 1)))", "+                    || !isReference(value.substring(i, nextSemi + 1)))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e93bab43431eb683a94ae89807921858", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtilsTest.java", "commitBeforeChange": "7d097b6fa682f8dcfedd95da2db8fed980c51705", "commitAfterChange": "d8286130e83dc672d30cd00eddbf6b5f77112521", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testInvalidTags()", "signatureAfterChange": "      @Test     public void testInvalidTags()", "diff": ["-    public void testInvalidTags() {", "-        String [] text = { \"/** @fake block\",", "-                           \" * {@bogus inline}\",", "-                           \" * {@link List valid}\"};", "-        Comment comment = new Comment(text, 1, 3, text[2].length());", "-        JavadocTags allTags =", "+    public void testInvalidTags()", "+    {", "+        final String [] text = {", "+            \"/** @fake block\",", "+            \" * {@bogus inline}\",", "+            \" * {@link List valid}\",", "+        };", "+        final Comment comment = new Comment(text, 1, 3, text[2].length());", "+        final JavadocTags allTags =", "-        assertEquals(2, allTags.invalidTags.size());", "-        assertEquals(1, allTags.validTags.size());", "+        assertEquals(2, allTags.getInvalidTags().size());", "+        assertEquals(1, allTags.getValidTags().size());"]}]}