{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f3f7fb7d665a0b582c55b489d5419fb", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ce4082a0759918825506676c7203ddc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/ClassResolverTest.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testExistedImportCantBeResolved() throws Exception", "signatureAfterChange": "      @Test     public void testExistedImportCantBeResolved() throws Exception", "diff": ["-        catch (ClassNotFoundException e) {", "+        catch (ClassNotFoundException ex) {", "-            assertEquals(\"someClass\", e.getMessage());", "+            assertEquals(\"someClass\", ex.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "283afcfed2bc80ad2d02f0116a918658", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoaderTest.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test(expected = InvocationTargetException.class     public void testSafeGetThrowsException() throws InvocationTargetException", "signatureAfterChange": "      @Test(expected = InvocationTargetException.class     public void testSafeGetThrowsException() throws InvocationTargetException", "diff": ["-                | NoSuchMethodException | SecurityException e) {", "-            throw new IllegalStateException(e);", "+                | NoSuchMethodException | SecurityException ex) {", "+            throw new IllegalStateException(ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29b42f587dcd82d0b387bcfbe26a91ef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheckTest.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testVisitToken() throws Exception", "signatureAfterChange": "      @Test     public void testVisitToken() throws Exception", "diff": ["-        catch (IllegalArgumentException e) {", "-            final String msg = e.getMessage();", "+        catch (IllegalArgumentException ex) {", "+            final String msg = ex.getMessage();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c37a02ebda9bea6d566f57139ea9606", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private Checker createChecker()", "signatureAfterChange": "     private Checker createChecker()", "diff": ["-        catch (final CheckstyleException e) {", "+        catch (final CheckstyleException ex) {", "-                    + \"configLocation {%s}, classpath {%s}.\", configLocation, classpath), e);", "+                    + \"configLocation {%s}, classpath {%s}.\", configLocation, classpath), ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d8cd5ab6ea780947a63f21a078c3951", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static void main(String... args) throws FileNotFoundException", "signatureAfterChange": "     public static void main(String... args) throws FileNotFoundException", "diff": ["-        catch (CheckstyleException e) {", "+        catch (CheckstyleException ex) {", "-            e.printStackTrace();", "+            ex.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47a3d1f3e203aba69bdd6332852d11ca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static Properties loadProperties(File file)             throws CheckstyleException", "signatureAfterChange": "     private static Properties loadProperties(File file)             throws CheckstyleException", "diff": ["-        catch (final IOException e) {", "+        catch (final IOException ex) {", "-                    \"Unable to load properties from file '%s'.\", file.getAbsolutePath()), e);", "+                    \"Unable to load properties from file '%s'.\", file.getAbsolutePath()), ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ebd75f6ad5a75066edfb1b35830fc39", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static Pattern createPattern(String pattern, int flags)", "signatureAfterChange": "     public static Pattern createPattern(String pattern, int flags)", "diff": ["-        catch (final PatternSyntaxException e) {", "+        catch (final PatternSyntaxException ex) {", "-                    \"Failed to initialise regular expression \" + pattern, e);", "+                    \"Failed to initialise regular expression \" + pattern, ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d39209cee9969ce0aed67363f4e9bdc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private Properties createOverridingProperties()", "signatureAfterChange": "     private Properties createOverridingProperties()", "diff": ["-            catch (final IOException e) {", "+            catch (final IOException ex) {", "-                        + properties + \"'\", e, getLocation());", "+                        + properties + \"'\", ex, getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6673be2949f32b324002c35fd336649c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAcceptableTokens()         throws Exception", "signatureAfterChange": "      @Test     public void testAcceptableTokens()         throws Exception", "diff": ["-        catch (CheckstyleException e) {", "-            final String errorMsg = e.getMessage();", "+        catch (CheckstyleException ex) {", "+            final String errorMsg = ex.getMessage();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6795e3e9545bb10494b2d7ad37013657", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public static URI getUriByFilename(String filename) throws CheckstyleException", "signatureAfterChange": "     public static URI getUriByFilename(String filename) throws CheckstyleException", "diff": ["-                catch (final URISyntaxException e) {", "-                    throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename, e);", "+                catch (final URISyntaxException ex) {", "+                    throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename, ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "741d3d6f04d15aab4451b00accd3a118", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/XDocsPagesTest.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private static void testCheckstyleXml(String fileName, String code, String unserializedSource)             throws IOException", "signatureAfterChange": "      private static void testCheckstyleXml(String fileName, String code, String unserializedSource)             throws IOException", "diff": ["-        catch (CheckstyleException e) {", "-            Assert.fail(fileName + \" has invalid Checkstyle xml (\" + e.getMessage() + \"): \"", "+        catch (CheckstyleException ex) {", "+            Assert.fail(fileName + \" has invalid Checkstyle xml (\" + ex.getMessage() + \"): \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7948eeedce2690ae82b67173516537ff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "         public Tag(int line, int column, String text, boolean reportingOn,                    SuppressionCommentFilter filter)", "signatureAfterChange": "         public Tag(int line, int column, String text, boolean reportingOn,                    SuppressionCommentFilter filter)", "diff": ["-            catch (final PatternSyntaxException e) {", "+            catch (final PatternSyntaxException ex) {", "-                    e);", "+                    ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7be0ab5c1d6a9bd3756190cbad844e1a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractFormatCheck.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void updateRegexp(String regexpFormat, int compileFlagsParam)", "signatureAfterChange": "     private void updateRegexp(String regexpFormat, int compileFlagsParam)", "diff": ["-        catch (final PatternSyntaxException e) {", "-            throw new ConversionException(\"unable to parse \" + regexpFormat, e);", "+        catch (final PatternSyntaxException ex) {", "+            throw new ConversionException(\"unable to parse \" + regexpFormat, ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c7bbc9ff1e9e6bb4c87e65704aa6f6b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/XDocsPagesTest.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private static Document getRawXml(String fileName, String code, String unserializedSource)             throws ParserConfigurationException", "signatureAfterChange": "      private static Document getRawXml(String fileName, String code, String unserializedSource)             throws ParserConfigurationException", "diff": ["-        catch (IOException | SAXException e) {", "-            Assert.fail(fileName + \" has invalid xml (\" + e.getMessage() + \"): \"", "+        catch (IOException | SAXException ex) {", "+            Assert.fail(fileName + \" has invalid xml (\" + ex.getMessage() + \"): \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84eeb2d8ddf9e0cb7b7fe94fa031c329", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheckTest.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testWrongTokenType()", "signatureAfterChange": "      @Test     public void testWrongTokenType()", "diff": ["-        catch (IllegalStateException e) {", "-            assertEquals(ast.toString(), e.getMessage());", "+        catch (IllegalStateException ex) {", "+            assertEquals(ast.toString(), ex.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d6128e8752be4a2d358a1dac32a2cea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public static void close(Closeable closeable)", "signatureAfterChange": "     public static void close(Closeable closeable)", "diff": ["-        catch (IOException e) {", "-            throw new IllegalStateException(\"Cannot close the stream\", e);", "+        catch (IOException ex) {", "+            throw new IllegalStateException(\"Cannot close the stream\", ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4b2384862bf6bfe1e5a7d42b712fdf9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/FileTextTest.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testUnsupportedCharset() throws IOException", "signatureAfterChange": "     @Test     public void testUnsupportedCharset() throws IOException", "diff": ["-        catch (UnsupportedEncodingException e) {", "-            assertEquals(\"Unsupported charset: \" + charsetName, e.getMessage());", "+        catch (UnsupportedEncodingException ex) {", "+            assertEquals(\"Unsupported charset: \" + charsetName, ex.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a79e2d6e6d8e217795f10eff033eed53", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheckTest.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testVisitTokenSwitchReflection() throws Exception", "signatureAfterChange": "      @Test     public void testVisitTokenSwitchReflection() throws Exception", "diff": ["-        catch (IllegalStateException e) {", "-            assertEquals(\"unexpected ast syntaximport[0x-1]\", e.getMessage());", "+        catch (IllegalStateException ex) {", "+            assertEquals(\"unexpected ast syntaximport[0x-1]\", ex.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1e6be489ede1370894d1f9d001d3b74", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "          @Override         public void endElement(String uri,                                String localName,                                String qName)", "signatureAfterChange": "          @Override         public void endElement(String uri,                                String localName,                                String qName)", "diff": ["-                catch (final CheckstyleException e) {", "-                    LOG.debug(\"Severity not set, ignoring exception\", e);", "+                catch (final CheckstyleException ex) {", "+                    LOG.debug(\"Severity not set, ignoring exception\", ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b35758948f6fd6acaba5a455c5324b06", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private ParseStatus parseJavadocAsDetailNode(DetailAST javadocCommentAst)", "signatureAfterChange": "     private ParseStatus parseJavadocAsDetailNode(DetailAST javadocCommentAst)", "diff": ["-        catch (ParseCancellationException e) {", "+        catch (ParseCancellationException ex) {", "-                        javadocCommentAst.getColumnNo(), e.getMessage());", "+                        javadocCommentAst.getColumnNo(), ex.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd466105596717ed900b34e587de82ef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Override     public void destroy()", "signatureAfterChange": "      @Override     public void destroy()", "diff": ["-            catch (IOException e) {", "-                throw new IllegalStateException(\"Unable to persist cache file\", e);", "+            catch (IOException ex) {", "+                throw new IllegalStateException(\"Unable to persist cache file\", ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d34bd0f1a31e4d250f1ff7c7ef9ae22f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoaderTest.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test(expected = InvocationTargetException.class     public void testLoadThrowsException() throws InvocationTargetException", "signatureAfterChange": "      @Test(expected = InvocationTargetException.class     public void testLoadThrowsException() throws InvocationTargetException", "diff": ["-                | NoSuchMethodException | SecurityException e) {", "-            throw new IllegalStateException(e);", "+                | NoSuchMethodException | SecurityException ex) {", "+            throw new IllegalStateException(ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6497f9dbfbcac9c5021ce44201911aa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private AuditListener[] getListeners()", "signatureAfterChange": "     private AuditListener[] getListeners()", "diff": ["-        catch (IOException e) {", "+        catch (IOException ex) {", "-                    + \"formatters {%s}.\", formatters), e);", "+                    + \"formatters {%s}.\", formatters), ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db4faa4b6c14b0e06298217abe6c9f96", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheck.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-        catch (IOException e) {", "+        catch (IOException ex) {", "-                    e.getLocalizedMessage());", "+                    ex.getLocalizedMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee763eb4e444c4c623876f16fbde17b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private void processFiles(Checker checker, final SeverityLevelCounter warningCounter,             final String checkstyleVersion)", "signatureAfterChange": "     private void processFiles(Checker checker, final SeverityLevelCounter warningCounter,             final String checkstyleVersion)", "diff": ["-        catch (CheckstyleException e) {", "-            throw new BuildException(\"Unable to process files: \" + files, e);", "+        catch (CheckstyleException ex) {", "+            throw new BuildException(\"Unable to process files: \" + files, ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f21e631a5a7e38e61c44f22e00df6ac0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private Set<Object> loadKeys(File file)", "signatureAfterChange": "     private Set<Object> loadKeys(File file)", "diff": ["-        catch (final IOException e) {", "-            logIoException(e, file);", "+        catch (final IOException ex) {", "+            logIoException(ex, file);"]}]}