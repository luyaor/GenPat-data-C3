{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d42ca7348b1f1cb6a0d0b2b5154fd65e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fa5d6a0fa5a8080bafade9d1879df8a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/transmogrify/TableMaker.java", "commitBeforeChange": "b7ff7f77f8d8baafb527855301b8ee50a8db9da3", "commitAfterChange": "0218e797e0e8fb90baa52fb542590be366ec6eac", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private void finishCreatingDefinition(Definition def) throws SymbolTableException", "signatureAfterChange": "   private void finishCreatingDefinition(Definition def) throws SymbolTableException", "diff": ["-      new ClassFinisher((ClassDef)def).finish();", "+      new ClassFinisher(def).finish();", "-      new VariableFinisher( (VariableDef)def ).finish();", "+      new VariableFinisher( def ).finish();", "-      new MethodFinisher( (MethodDef)def ).finish();", "+      new MethodFinisher( def ).finish();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bbb53bb54a2020c1dbae8750b563202", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/transmogrify/TableMaker.java", "commitBeforeChange": "b7ff7f77f8d8baafb527855301b8ee50a8db9da3", "commitAfterChange": "0218e797e0e8fb90baa52fb542590be366ec6eac", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void walkTree(SymTabAST tree, boolean makeAnonymousScopes)", "signatureAfterChange": "   public void walkTree(SymTabAST tree, boolean makeAnonymousScopes)", "diff": ["-      ((SymTabAST)tree).setScope( symbolTable.getCurrentScope() );", "+      tree.setScope( symbolTable.getCurrentScope() );", "-          processImplicitPackage( ((SymTabAST)tree).getFile() );", "+          processImplicitPackage( tree.getFile() );", "-        SymTabAST symtabTree = (SymTabAST)tree;", "+        SymTabAST symtabTree = tree;"]}]}