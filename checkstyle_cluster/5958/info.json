{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9ee4e3e58ed744c377b74e987b06802", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c2ab73fae1d227f19f11f8651b04437", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void walkConditional(final DetailAST aCond)", "signatureAfterChange": "     private void walkConditional(final DetailAST cond)", "diff": ["-    private void walkConditional(final DetailAST aCond)", "+    private void walkConditional(final DetailAST cond)", "-        if (aCond.getType() != TokenTypes.QUESTION) {", "+        if (cond.getType() != TokenTypes.QUESTION) {", "-                this.removeQuotes(aCond.getText());", "-            this.logMatch(aCond.getLineNo(), aCond.getColumnNo(), warningText);", "+                this.removeQuotes(cond.getText());", "+            this.logMatch(cond.getLineNo(), cond.getColumnNo(), warningText);", "-        this.walkConditional(this.getCondLeft(aCond));", "-        this.walkConditional(this.getCondRight(aCond));", "+        this.walkConditional(this.getCondLeft(cond));", "+        this.walkConditional(this.getCondRight(cond));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e50f54c3c63615be4a64c1fdc23afd6a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void visitVariableDef(DetailAST aAST)", "signatureAfterChange": "     private void visitVariableDef(DetailAST ast)", "diff": ["-    private void visitVariableDef(DetailAST aAST)", "+    private void visitVariableDef(DetailAST ast)", "-        if (mChecking && (aAST.getParent().getType() == TokenTypes.OBJBLOCK)) {", "+        if (checking && (ast.getParent().getType() == TokenTypes.OBJBLOCK)) {", "-                aAST.findFirstToken(TokenTypes.MODIFIERS);", "+                ast.findFirstToken(TokenTypes.MODIFIERS);", "-                log(aAST.getLineNo(),  aAST.getColumnNo(), \"mutable.exception\",", "-                        aAST.findFirstToken(TokenTypes.IDENT).getText());", "+                log(ast.getLineNo(),  ast.getColumnNo(), \"mutable.exception\",", "+                        ast.findFirstToken(TokenTypes.IDENT).getText());"]}]}