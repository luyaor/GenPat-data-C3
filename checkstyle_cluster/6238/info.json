{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b917eb63e6d6c2e579106ee4b46f15f3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5aa4bc2b800e32a3958fbfbe81fdd7f6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "f8ea4c69a2228c5aca6c0b6e08a39a613d157708", "commitAfterChange": "8d6fa332a9c8b0c350dfcb1d923d70bc5f3d921b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     void verifyConstructorLength(int aLineNo, int aLength);", "signatureAfterChange": "     void verifyConstructorLength(int aLineNo, int aLength)", "diff": ["-    void verifyConstructorLength(int aLineNo, int aLength);", "+    void verifyConstructorLength(int aLineNo, int aLength)", "+    {", "+        if (aLength > mConfig.getMaxConstructorLength()) {", "+            log(aLineNo,", "+                \"constructor length is \" + aLength + \" lines (max allowed is \" +", "+                mConfig.getMaxConstructorLength() + \").\");", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2e71f2d6a55f96e7d46e15e94a00b83", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/VerifierImpl.java", "commitBeforeChange": "637bf620e5b62ceb04dfbbe0a2b83b7c012b7941", "commitAfterChange": "d87ea06ebb50622ac5327ec6c9765486aa032ff1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setLines(String[] aLines)", "signatureAfterChange": "     public void setLines(String[] aLines)", "diff": ["+        checkHeader();", "+", "-        checkHeader();", "+        // Check excessive number of lines", "+        if (mLines.length > mConfig.getMaxFileLength()) {", "+            log(1,", "+                \"file length is \" + mLines.length + \" lines (max allowed is \" +", "+                mConfig.getMaxFileLength() + \").\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd0727465f8dd6ad07215e351e4980a5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "f8ea4c69a2228c5aca6c0b6e08a39a613d157708", "commitAfterChange": "8d6fa332a9c8b0c350dfcb1d923d70bc5f3d921b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 21, "signatureBeforeChange": "     void reportStarImport(int aLineNo, String aPkg);", "signatureAfterChange": "     void reportStarImport(int aLineNo, String aPkg)", "diff": ["-    void reportStarImport(int aLineNo, String aPkg);", "+    void reportStarImport(int aLineNo, String aPkg)", "+    {", "+        if (!mConfig.isIgnoreImports()) {", "+            log(aLineNo, \"Avoid using the '.*' form of import.\");", "+            mImports.add(new LineText(aLineNo, aPkg));", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e157f6e42aef762439f5a14698e8cd98", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "f8ea4c69a2228c5aca6c0b6e08a39a613d157708", "commitAfterChange": "8d6fa332a9c8b0c350dfcb1d923d70bc5f3d921b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     void verifyMethodLength(int aLineNo, int aLength);", "signatureAfterChange": "     void verifyMethodLength(int aLineNo, int aLength)", "diff": ["-    void verifyMethodLength(int aLineNo, int aLength);", "+    void verifyMethodLength(int aLineNo, int aLength)", "+    {", "+        if (aLength > mConfig.getMaxMethodLength()) {", "+            log(aLineNo,", "+                \"method length is \" + aLength + \" lines (max allowed is \" +", "+                mConfig.getMaxMethodLength() + \").\");", "+        }", "+    }"]}]}