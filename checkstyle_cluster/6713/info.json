{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3dd8152c8836ac25ca29953cb9dce744", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06025ecb6347dd78f78fb5a6f64e88cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/TypeParameterNameTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testClassFooName()         throws Exception", "signatureAfterChange": "      @Test     public void testClassFooName()         throws Exception", "diff": ["-            \"3:38: Name 't' must match pattern '^foo$'.\",", "-            \"31:18: Name 'T' must match pattern '^foo$'.\",", "+            \"5:38: Name 't' must match pattern '^foo$'.\",", "+            \"33:18: Name 'T' must match pattern '^foo$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a95e501e5a95049cf386c59f970f686", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportTest.java", "commitBeforeChange": "9c944ecd228c7920d2a82c65d58d903de21f36a3", "commitAfterChange": "b1d4299b1dc68f76b280e0e8d648cb54866b3a2c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAllowClassImports() throws Exception", "signatureAfterChange": "      @Test     public void testAllowClassImports() throws Exception", "diff": ["-            \"28: Using the '.*' form of import should be avoided - sun.net.ftpclient.FtpClient.*.\", };", "+            \"28: Using the '.*' form of import should be avoided - java.io.File.*.\", };", "-            + \"InputImport.java\"), expected2);", "+            + \"InputAvoidStarImportCheck.java\"), expected2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c6d6e81ba72b1182e527ba213508de3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "contrib/j2ee/src/tests/EntityBeanFindByPrimaryKeyCheckTest.java", "commitBeforeChange": "24a774b1e89f010f7ac70c66f2c0d75e5ce53b87", "commitAfterChange": "9f4164a450bed42bb632400bc2d53ffcc9775235", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDefault()             throws Exception", "signatureAfterChange": "     public void testDefault()             throws Exception", "diff": ["-            \"13:14: Entity bean has no ejbFindByPrimaryKey method.\",", "-            \"83:13: Entity bean has no ejbFindByPrimaryKey method.\",", "+            \"13:14: Entity bean must have method ejbFindByPrimaryKey.\",", "+            \"83:13: Entity bean must have method ejbFindByPrimaryKey.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10f8fd2b081f6741abbfa2d8ba093281", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "04483a77e8f20ef67db6467c477a7fcba129eef6", "commitAfterChange": "4564aecb5c1d694591feef433ce067d74e36d823", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testMissingConfigParent()", "signatureAfterChange": "      public void testMissingConfigParent()", "diff": ["-            fail(\"missing config parent\");", "+            fail(\"missing module parent\");", "-                        + \"root \\\"config\\\".\"));", "+                        + \"root \\\"module\\\".\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12455789c78a37dc5e660f3641e07519", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "f768a8f8cca599d460e3c2da5369add062b6ead0", "commitAfterChange": "08ea556aed8265d64a5dd93963b1ce4587cc48b4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testIgnoreSome()         throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreSome()         throws Exception", "diff": ["-        checkConfig.addAttribute(\"ignoreNumbers\", \"0, 1, 3.0, 8, 16\");", "+        checkConfig.addAttribute(\"ignoreNumbers\", \"0, 1, 3.0, 8, 16, 3000\");", "-            \"42:32: '1.5' is a magic number.\",", "+            \"42:32: '1.5_0' is a magic number.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1577215538dd383d8b386c0b0b9b531d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/FinalClassCheckTest.java", "commitBeforeChange": "aabcf13ebd3d19c96a71c5f168dd8d6a3e811acb", "commitAfterChange": "87bdf9e553f7e5b622fddf0cb703e99105edd3d7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testFianlClass() throws Exception", "signatureAfterChange": "     public void testFianlClass() throws Exception", "diff": ["-            \"7: Class InputFinalClass should be declared as final\",", "-            \"15: Class test4 should be declared as final\",", "+            \"7: Class InputFinalClass should be declared as final.\",", "+            \"15: Class test4 should be declared as final.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18427791d89a55a0e04e493ac92756b4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SingleLineJavadocCheckTest.java", "commitBeforeChange": "8d4333193255ecdbfda74f1496d044abf05d4e4a", "commitAfterChange": "53ccf7dad03e7c5c4d9285bae68b626eea2c16d0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void simpleTest() throws Exception", "signatureAfterChange": "     @Test     public void simpleTest() throws Exception", "diff": ["-            \"3: Single-line Javadoc comment should be multi-line.\",", "-            \"11: Single-line Javadoc comment should be multi-line.\",", "+            \"4: Single-line Javadoc comment should be multi-line.\",", "+            \"12: Single-line Javadoc comment should be multi-line.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18aa7d134f25be0df491d1da5893d822", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "04483a77e8f20ef67db6467c477a7fcba129eef6", "commitAfterChange": "4564aecb5c1d694591feef433ce067d74e36d823", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testMissingConfigName()", "signatureAfterChange": "      public void testMissingConfigName()", "diff": ["-            fail(\"missing config name\");", "+            fail(\"missing module name\");", "-                        + \"for element type \\\"config\\\".\"));", "+                        + \"for element type \\\"module\\\".\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a2b78426b9245fe88a052954bb56e5a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "2d4604aba68358de4ef011f369face63f8ec2533", "commitAfterChange": "fc846abfd03ac974443b80ffac5be28365713691", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testMissingPropertyName()", "signatureAfterChange": "      public void testMissingPropertyName()", "diff": ["-                    \"Attribute \\\"nam\\\" is not declared \"", "-                        + \"for element \\\"property\\\".\"));", "+                    \"Attribute \\\"name\\\" is required and must be specified \"", "+                        + \"for element type \\\"property\\\".\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ab51f0d6c089cce638f7b0136969a2c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "f768a8f8cca599d460e3c2da5369add062b6ead0", "commitAfterChange": "08ea556aed8265d64a5dd93963b1ce4587cc48b4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testIntegersOnly()         throws Exception", "signatureAfterChange": "      @Test     public void testIntegersOnly()         throws Exception", "diff": ["-            \"41:26: '3' is a magic number.\",", "+            \"41:26: '3_000' is a magic number.\",", "-            \"63:30: '010L' is a magic number.\",", "+            \"63:30: '0_10L' is a magic number.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cad085f41bf106ca83c748e87dff4d8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "b29e7a4c49ceff7d1f974a47a47ca519918ff650", "commitAfterChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r     @Test\r     public void testStyleExpanded() throws Exception", "signatureAfterChange": "\r     @Test\r     public void testStyleExpanded() throws Exception", "diff": ["-        checkConfig.addAttribute(\"closingParens\", \"MIXED\");\r", "+        checkConfig.addAttribute(\"closingParens\", \"ignore\");\r", "-        checkConfig.addAttribute(\"trailingArrayComma\", \"MIXED\");\r", "+        checkConfig.addAttribute(\"trailingArrayComma\", \"ignore\");\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cdca56239a660477a9808faa35e0ee3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportTest.java", "commitBeforeChange": "bee6b0a1ec26b04e2d738221bdce4bd159b278d2", "commitAfterChange": "83e685bdac0b1e7e838eded12bfeee93d3ca527a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testMemberExcludes()         throws Exception", "signatureAfterChange": "      @Test     public void testMemberExcludes()         throws Exception", "diff": ["-            \"29: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.imports.InputAvoidStaticImportNestedClass.InnerClass\"),", "-            \"30: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.imports.InputAvoidStaticImportNestedClass.InnerClass.one\"),", "+            \"29: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.checks.imports.InputAvoidStaticImportNestedClass.InnerClass\"),", "+            \"30: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.checks.imports.InputAvoidStaticImportNestedClass.InnerClass.one\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1feff36e4c6887c4c64146d4781ec379", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/EqualsHashCodeCheckTest.java", "commitBeforeChange": "8809d19699c1da9d5992d2e23671255fafd619d5", "commitAfterChange": "96d6745a12127bd547e32137713b33aa9327aeb8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testIt() throws Exception", "signatureAfterChange": "     public void testIt() throws Exception", "diff": ["-            \"126:9: Definition of 'equals()' without corresponding defnition of 'hashCode()'.\",", "-            \"163:13: Definition of 'equals()' without corresponding defnition of 'hashCode()'.\",", "+            \"126:9: Definition of 'equals()' without corresponding definition of 'hashCode()'.\",", "+            \"163:13: Definition of 'equals()' without corresponding definition of 'hashCode()'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "202128218a4cf92ab507d98921d6916b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/OptionTest.java", "commitBeforeChange": "17f01c9f0c830968b281454cca116dbe9c9f6ff5", "commitAfterChange": "c1bc1ef5550f8fde68df7d92959f5445848b0a5d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testBlockOption()", "signatureAfterChange": "      public void testBlockOption()", "diff": ["-        assertEquals(\"STMT\", \"statement\", stmtOpt.toString());", "+        assertEquals(\"STMT\", \"stmt\", stmtOpt.toString());", "-        BlockOption stmtDecode = (BlockOption)(stmtOpt.decode(\"statement\"));", "+        BlockOption stmtDecode = (BlockOption)(stmtOpt.decode(\"stmt\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2375cecaf40a690a23a130d8b4276345", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "e9b6614e5631123ba35b9a6b23412e8806278c21", "commitAfterChange": "2d4604aba68358de4ef011f369face63f8ec2533", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testMissingPropertyName()", "signatureAfterChange": "      public void testMissingPropertyName()", "diff": ["-                    \"Attribute \\\"name\\\" is required and must be specified \"", "-                        + \"for element type \\\"property\\\".\"));", "+                    \"Attribute \\\"nam\\\" is not declared \"", "+                        + \"for element \\\"property\\\".\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ad6fec2eef941eb90f9d462b4cbb156", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "4c0ef4ed4cd8dbe443b77bef2f26807fd7bbdf2b", "commitAfterChange": "10330437ddd4be125cb4109702d0d0b96ffe3303", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void setupChild(Configuration aChildConf)             throws CheckstyleException", "signatureAfterChange": "     protected void setupChild(Configuration aChildConf)             throws CheckstyleException", "diff": ["-                throw new CheckstyleException(name + \" is not a FileSetCheck\");", "+                throw new CheckstyleException(name", "+                    + \" is not allowed as a module in Checker\");", "-                    \"cannot initialize filesetcheck with name \"", "+                    \"cannot initialize module \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2af565b661e4727ff4d5b2c58b1ea3c4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testWithMultipleFiles() throws Exception", "signatureAfterChange": "      @Test     public void testWithMultipleFiles() throws Exception", "diff": ["-        final String path1 = getPath(\"javadoc/InputNoJavadoc.java\");", "-        final String path2 = getPath(\"javadoc/InputBadTag.java\");", "+        final String path1 = getPath(\"InputNoJavadoc.java\");", "+        final String path2 = getPath(\"InputBadTag.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c40b17ad895666fc748d7c3931e6587", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportTest.java", "commitBeforeChange": "9c944ecd228c7920d2a82c65d58d903de21f36a3", "commitAfterChange": "b1d4299b1dc68f76b280e0e8d648cb54866b3a2c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefaultOperation()         throws Exception", "signatureAfterChange": "     @Test     public void testDefaultOperation()         throws Exception", "diff": ["-            \"28: Using the '.*' form of import should be avoided - sun.net.ftpclient.FtpClient.*.\",", "+            \"28: Using the '.*' form of import should be avoided - java.io.File.*.\",", "-        verify(checkConfig, getPath(\"imports\" + File.separator + \"InputImport.java\"), expected);", "+        verify(checkConfig, getPath(\"imports\" + File.separator + \"InputAvoidStarImportCheck.java\"),", "+                expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c591d56f7e65cec85f570d86fb27131", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheckTest.java", "commitBeforeChange": "35e4a41c1027d5078cbaf0d3988a21c12a2daf7e", "commitAfterChange": "e55435125ea57e96f0bf876dd13e78b0ae02cd52", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          public void testDefaultForIterator()         throws Exception", "signatureAfterChange": "          public void testDefaultForIterator()         throws Exception", "diff": ["-            \"17:34: ')' is preceeded with whitespace.\",", "-            \"20:35: ')' is preceeded with whitespace.\",", "+            \"17:34: ')' is preceded with whitespace.\",", "+            \"20:35: ')' is preceded with whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c9f87deda182db6a073b0154992a7fc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineSet.java", "commitBeforeChange": "af92d5ac9b735a7085a514ad04ad743837390493", "commitAfterChange": "7853d28eeadd80bdf508cc7160f7609c0fecc66a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-        return \"LineSet[ start=\" + firstLine() + \", last=\" + lastLine() + \"]\";", "+        return \"LineSet[firstLine=\" + firstLine() + \", lastLine=\" + lastLine() + \"]\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dccb4b48fb66b88cf91f5b0a334cf42", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheckTest.java", "commitBeforeChange": "6f2d19e2c49109709dd849dd4724900e43f7c7f1", "commitAfterChange": "e8fd8e9c738c0554d4ede3ed7849e1755150ad06", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefaultSettings() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultSettings() throws Exception", "diff": ["-            \"6: Found duplicate of 13 lines in \" + innerDupPath + \", starting from line 22\",", "+            \"7: Found duplicate of 13 lines in \" + innerDupPath + \", starting from line 23\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2de2dd0c774c3900c28efb0d7183f7aa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "b29e7a4c49ceff7d1f974a47a47ca519918ff650", "commitAfterChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r     @Test\r     public void testStyleCompact() throws Exception", "signatureAfterChange": "\r     @Test\r     public void testStyleCompact() throws Exception", "diff": ["-        checkConfig.addAttribute(\"closingParens\", \"MIXED\");\r", "+        checkConfig.addAttribute(\"closingParens\", \"ignore\");\r", "-        checkConfig.addAttribute(\"trailingArrayComma\", \"MIXED\");\r", "+        checkConfig.addAttribute(\"trailingArrayComma\", \"ignore\");\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e0d909ea6c3b1e276baa7ff70fc8d33", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d92ceb81a67bb10b98f5ce305f839ba535a1c6ee", "commitAfterChange": "9aa8268e473071cbe26aa9d3a8631f1902e3fef0", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public void testModifierChecks()         throws Exception", "signatureAfterChange": "      public void testModifierChecks()         throws Exception", "diff": ["-            filepath + \":32:9: redundant 'public' modifier.\",", "-            filepath + \":38:9: redundant 'abstract' modifier.\",", "+            filepath + \":32:9: Redundant 'public' modifier.\",", "+            filepath + \":38:9: Redundant 'abstract' modifier.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f361f5a5090de901f1bdab702061c44", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "f8a53831f0fa98f317ea7dbc6490b5e91b6cc5d9", "commitAfterChange": "5703b6e33550d6e9706f42e253c2cc7d83a358bf", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "      public void testHeader()         throws Exception", "signatureAfterChange": "      public void testHeader()         throws Exception", "diff": ["-            filepath + \":1: type is missing a Javadoc comment.\",", "-            filepath + \":1:48: type name 'inputHeader' must match pattern '^[A-Z][a-zA-Z0-9]*$'.\",", "+            filepath + \":1: Missing a Javadoc comment.\",", "+            filepath + \":1:48: Name 'inputHeader' must match pattern '^[A-Z][a-zA-Z0-9]*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3402b8412ecfdf80d7dc79edc45e6ef9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportTest.java", "commitBeforeChange": "35006bcd796ec5787fe6c5a4b44816cae1824a05", "commitAfterChange": "c998dc8d90485ee5810d81c2ce472c5a43b54a13", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefaultOperation()         throws Exception", "signatureAfterChange": "     @Test     public void testDefaultOperation()         throws Exception", "diff": ["-            \"28: Using a static member import should be avoided - sun.net.ftpclient.FtpClient.*.\",", "+            \"28: Using a static member import should be avoided - java.io.File.pathSeparator.\",", "-        verify(checkConfig, getPath(\"imports\" + File.separator + \"InputImport.java\"), expected);", "+        verify(checkConfig, getPath(\"imports\" + File.separator + \"InputAvoidStaticImportCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3576161c259622ef1024febf95d52067", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "ba4d62dc78cf7a648771b1be9646cac4bab27676", "commitAfterChange": "677acc1e8491acffd24c859e553b06362da0d471", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testLegalAbstractClassNames() throws Exception", "signatureAfterChange": "      @Test     public void testLegalAbstractClassNames() throws Exception", "diff": ["-            \"16:13: Declaring variables, return values or parameters of type 'java.util.Hashtable' is not allowed.\",", "-            \"17:13: Declaring variables, return values or parameters of type 'Hashtable' is not allowed.\",", "+            \"16:13: Declaring variables, return values or parameters of type 'java.util.TreeSet' is not allowed.\",", "+            \"17:13: Declaring variables, return values or parameters of type 'TreeSet' is not allowed.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a417c01b59208ca1c5f75c7cd3270c8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsTest.java", "commitBeforeChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "commitAfterChange": "fdc81723bdfd6af2ffc2c901cd8dd5b2fe948267", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r     @Test\r     public void testSingleNoUnWildcard() throws Exception", "signatureAfterChange": "\r     @Test\r     public void testSingleNoUnWildcard() throws Exception", "diff": ["-            \"82:37: The warning 'unchecked' cannot be suppressed at this location.\",\r", "-            \"82:105: The warning 'unused' cannot be suppressed at this location.\",\r", "+            \"82:47: The warning 'unchecked' cannot be suppressed at this location.\",\r", "+            \"82:115: The warning 'unused' cannot be suppressed at this location.\",\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cdce97fd287d19ac3d9c259f098fe26", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "4d0adc9deed7f3df296f8016941414ec1600955b", "commitAfterChange": "1edf43ab329e96db26a3ed3a4f4a1abdaa4b1a3a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void testSimple()         throws Exception", "signatureAfterChange": "      public void testSimple()         throws Exception", "diff": ["-            filepath + \":127: '{' should be on the previous line.\",", "+            filepath + \":127:9: '{' should be on the previous line.\",", "-            filepath + \":131: '{' should be on the previous line.\",", "+            filepath + \":131:9: '{' should be on the previous line.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d1b48e4111d2eeeacb839a112920a92", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsTest.java", "commitBeforeChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "commitAfterChange": "fdc81723bdfd6af2ffc2c901cd8dd5b2fe948267", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r     @Test\r     public void testSingleDefault() throws Exception", "signatureAfterChange": "\r     @Test\r     public void testSingleDefault() throws Exception", "diff": ["-            \"82:83: The warning '' cannot be suppressed at this location.\",\r", "-            \"82:96: The warning '    ' cannot be suppressed at this location.\",\r", "+            \"82:93: The warning '' cannot be suppressed at this location.\",\r", "+            \"82:106: The warning '    ' cannot be suppressed at this location.\",\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3eeea53ac4313932931422732db2bd14", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportTest.java", "commitBeforeChange": "35006bcd796ec5787fe6c5a4b44816cae1824a05", "commitAfterChange": "c998dc8d90485ee5810d81c2ce472c5a43b54a13", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testBogusMemberExcludes()         throws Exception", "signatureAfterChange": "      @Test     public void testBogusMemberExcludes()         throws Exception", "diff": ["-            \"28: Using a static member import should be avoided - sun.net.ftpclient.FtpClient.*.\",", "+            \"28: Using a static member import should be avoided - java.io.File.pathSeparator.\",", "-        verify(checkConfig, getPath(\"imports\" + File.separator + \"InputImport.java\"), expected);", "+        verify(checkConfig, getPath(\"imports\" + File.separator + \"InputAvoidStaticImportCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44fb2ca08efa04a7c45962a7b0e747e5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 61, "signatureBeforeChange": "     private void checkReturnTag(List aTags, int aLineNo)", "signatureAfterChange": "     private void checkReturnTag(List aTags, int aLineNo)", "diff": ["-                    log(jt.getLineNo(), \"Duplicate @return tag.\");", "+                    log(jt.getLineNo(), \"javadoc.return.duplicate\");", "-            log(aLineNo, \"Expected an @return tag.\");", "+            log(aLineNo, \"javadoc.return.expected\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4670a60dc27520b1e446a3d6ab42e3fe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheckTest.java", "commitBeforeChange": "4704f9198833e80552a7b2bf900ee9ee6d3d39c9", "commitAfterChange": "05526332666bc5142f8cf29a941435527c20fb9c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testFieldsOnly() throws Exception", "signatureAfterChange": "      public void testFieldsOnly() throws Exception", "diff": ["-            \"4:9: Reference to instance variable 'i' needs \\\"this.\\\".\",", "-            \"11:9: Unable find where 'j' is declared.\",", "+            \"6:9: Reference to instance variable 'i' needs \\\"this.\\\".\",", "+            \"13:9: Unable find where 'j' is declared.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50181aa2c1040a5727a95347d9ac5866", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "e9b6614e5631123ba35b9a6b23412e8806278c21", "commitAfterChange": "2d4604aba68358de4ef011f369face63f8ec2533", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testMissingConfigParent()", "signatureAfterChange": "      public void testMissingConfigParent()", "diff": ["-                    \"Document root element \\\"property\\\", must match DOCTYPE \"", "-                        + \"root \\\"module\\\".\"));", "+                    \"Root element type is \\\"property\\\", but was declared to \"", "+                        + \"be \\\"module\\\".\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5277cf8afc8264c84877105f2224159f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/sizes/LineLengthCheckTest.java", "commitBeforeChange": "4cc300a8e53fec7264ecfb5702369de14fd8a242", "commitAfterChange": "2e3654c59be793a9e9d06f38f0624bfae0e075bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testSimple()         throws Exception", "signatureAfterChange": "     @Test     public void testSimple()         throws Exception", "diff": ["-            \"18: Line is longer than 80 characters.\",", "-            \"145: Line is longer than 80 characters.\",", "+            \"18: Line is longer than 80 characters (found 81).\",", "+            \"145: Line is longer than 80 characters (found 83).\",", "+        };", "+        verify(checkConfig, getPath(\"InputSimple.java\"), expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "540bd49a0f57f6e92f99929d6c8ff6aa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportTest.java", "commitBeforeChange": "bee6b0a1ec26b04e2d738221bdce4bd159b278d2", "commitAfterChange": "83e685bdac0b1e7e838eded12bfeee93d3ca527a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefaultOperation()         throws Exception", "signatureAfterChange": "      @Test     public void testDefaultOperation()         throws Exception", "diff": ["-            \"29: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.imports.InputAvoidStaticImportNestedClass.InnerClass\"),", "-            \"30: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.imports.InputAvoidStaticImportNestedClass.InnerClass.one\"),", "+            \"29: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.checks.imports.InputAvoidStaticImportNestedClass.InnerClass\"),", "+            \"30: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.checks.imports.InputAvoidStaticImportNestedClass.InnerClass.one\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a0d048e86a06a77d1723ec6fb579c02", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-            \"60:59: '&' is not preceded with whitespace.\",", "-            \"63:59: '>' is followed by whitespace.\",", "+            \"60:60: '&' is not preceded with whitespace.\",", "+            \"63:60: '>' is followed by whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a6ad92e215f0b7a4f3b159af1ecc8e4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "b29e7a4c49ceff7d1f974a47a47ca519918ff650", "commitAfterChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r     @Test\r     public void testStyleCompactNoArray() throws Exception", "signatureAfterChange": "\r     @Test\r     public void testStyleCompactNoArray() throws Exception", "diff": ["-        checkConfig.addAttribute(\"closingParens\", \"MIXED\");\r", "+        checkConfig.addAttribute(\"closingParens\", \"ignore\");\r", "-        checkConfig.addAttribute(\"trailingArrayComma\", \"MIXED\");\r", "+        checkConfig.addAttribute(\"trailingArrayComma\", \"ignore\");\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ba3d7a4541843cdb3a4b9ee99425992", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/NestedIfDepthCheckTest.java", "commitBeforeChange": "9cb138c970b3068cc47eec10607be1ff9dbed9e2", "commitAfterChange": "55a2517bcfb420969f68d4b53649ffa4a4a7e44f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "     @Test     public void testDefault() throws Exception", "diff": ["-            \"17:17: Nested if-else depth is 2 (max allowed is 1).\",", "-            \"43:17: Nested if-else depth is 2 (max allowed is 1).\",", "+            \"18:17: Nested if-else depth is 2 (max allowed is 1).\",", "+            \"44:17: Nested if-else depth is 2 (max allowed is 1).\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ea2f8559705507361a9125dc4a9eed2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheckTest.java", "commitBeforeChange": "b219e2ff881703c4b0edeee01de12635531676a9", "commitAfterChange": "33efb558db835d60ca54644860a096f08d802fb5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault()         throws Exception", "signatureAfterChange": "     @Test     public void testDefault()         throws Exception", "diff": ["-            \"276:18: \" + getCheckMessage(WS_FOLLOWED, \"(\"),", "-            \"276:23: \" + getCheckMessage(WS_PRECEDED, \")\"),", "+            \"277:18: \" + getCheckMessage(WS_FOLLOWED, \"(\"),", "+            \"277:23: \" + getCheckMessage(WS_PRECEDED, \")\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f63432c07721141bb18bd404bbc2f3d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/RedundantImportCheckTest.java", "commitBeforeChange": "e61c562c8353470bff66a991d9763120ba00b277", "commitAfterChange": "f5a30b80e7154498d2d0734fe4f60a79cf943979", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testWithChecker()         throws Exception", "signatureAfterChange": "     @Test     public void testWithChecker()         throws Exception", "diff": ["-            \"8:38: Redundant import from the same package - com.puppycrawl.tools.checkstyle.imports.GlobalProperties.\",", "+            \"8:1: Redundant import from the same package - com.puppycrawl.tools.checkstyle.imports.InputImportBug.\",", "-        verify(checkConfig, getPath(\"imports\" + File.separator + \"InputImport.java\"), expected);", "+        verify(checkConfig, getPath(\"imports\" + File.separator + \"InputRedundantImportCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "612d571b00c92104e23d81a1dd8087f0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "f8a53831f0fa98f317ea7dbc6490b5e91b6cc5d9", "commitAfterChange": "5703b6e33550d6e9706f42e253c2cc7d83a358bf", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void testTags()         throws Exception", "signatureAfterChange": "      public void testTags()         throws Exception", "diff": ["-            filepath + \":8: type is missing a Javadoc comment.\",", "+            filepath + \":8: Missing a Javadoc comment.\",", "-            filepath + \":14:5: method is missing a Javadoc comment.\",", "+            filepath + \":14:5: Missing a Javadoc comment.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "624a6781a4f33d561f108916aba3b678", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/EqualsHashCodeCheckTest.java", "commitBeforeChange": "acc3f40015ffe1263cfa684ca4b29939249e9aed", "commitAfterChange": "c2b22a74a2e85bbb2cfd4e0e2379bb062cb58dd1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testIt() throws Exception", "signatureAfterChange": "      public void testIt() throws Exception", "diff": ["-            \"125:9: Definition of 'equals()' without corresponding defnition of 'hashCode()'.\",", "-            \"162:13: Definition of 'equals()' without corresponding defnition of 'hashCode()'.\",", "+            \"126:9: Definition of 'equals()' without corresponding defnition of 'hashCode()'.\",", "+            \"163:13: Definition of 'equals()' without corresponding defnition of 'hashCode()'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62634885dcb5030a68d40e3411379f42", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullTest.java", "commitBeforeChange": "a8e60736f4d66e806ffe1d250da3b58bf5dc2132", "commitAfterChange": "5646a5ebba28a22408fb0d8ebb9f2311a619f53f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testEqualsWithoutEqualsIgnoreCase() throws Exception", "signatureAfterChange": "      @Test     public void testEqualsWithoutEqualsIgnoreCase() throws Exception", "diff": ["-        checkConfig.addAttribute(\"performEqualsIgnoreCaseCheck\", \"false\");", "+        checkConfig.addAttribute(\"ignoreEqualsIgnoreCase\", \"true\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62d7ca99c98e9b8d355eafae65c082f7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "b29e7a4c49ceff7d1f974a47a47ca519918ff650", "commitAfterChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r     \r     @Test\r     public void testCommaNeverNoViolations() throws Exception", "signatureAfterChange": "\r     \r     @Test\r     public void testCommaNeverNoViolations() throws Exception", "diff": ["-        checkConfig.addAttribute(\"closingParens\", \"MIXED\");\r", "-        checkConfig.addAttribute(\"elementStyle\", \"MIXED\");\r", "+        checkConfig.addAttribute(\"closingParens\", \"ignore\");\r", "+        checkConfig.addAttribute(\"elementStyle\", \"ignore\");\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6437651c2a00d21775f74a93119cdcb6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "dc764f3b6ad475854cd0d22655db3f96e7eb7ed3", "commitAfterChange": "a1cecb5e0658862f957e60a8d5b2ade13b592101", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "       public void testScopeInnerInterfacesPublic()         throws Exception", "signatureAfterChange": "       public void testScopeInnerInterfacesPublic()         throws Exception", "diff": ["-            filepath + \":40: variable 'CA' missing Javadoc.\",", "-            filepath + \":41: variable 'CB' missing Javadoc.\",", "+            filepath + \":40:23: variable 'CA' missing Javadoc.\",", "+            filepath + \":41:16: variable 'CB' missing Javadoc.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65484801f621ae8d9fb13d7ca7925be0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void testBraces()         throws Exception", "signatureAfterChange": "      public void testBraces()         throws Exception", "diff": ["-            filepath + \":58:23: ';' needs to be followed by whitespace.\",", "-            filepath + \":58:29: ';' needs to be followed by whitespace.\",", "+            filepath + \":58:23: ';' is not followed by whitespace.\",", "+            filepath + \":58:29: ';' is not followed by whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "658fc048233e3dd946f952af8923c92d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "96d3aaea19657ac233d9a57b46a52bc0b35eda95", "commitAfterChange": "5f3eced2d85c10407b5ba1f38c06af05715d9bd7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testMaximumNumber()         throws Exception", "signatureAfterChange": "      @Test     public void testMaximumNumber()         throws Exception", "diff": ["-            \"20:12: \" + getCheckMessage(MSG_KEY_MAX, 1, 0, \"LITERAL_NATIVE\", \"LITERAL_NATIVE\"),", "+            \"17:12: \" + getCheckMessage(MSG_KEY_MAX, 1, 0, \"LITERAL_NATIVE\", \"LITERAL_NATIVE\"),", "-        verify(checkConfig, getPath(\"InputIllegalTokens.java\"), expected);", "+        verify(checkConfig, getPath(\"checks/InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f806b8c1aecfe309dd28dedc16d06ed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "88f75f5413914bea5b39ba318edf912ee706226d", "commitAfterChange": "f8bd84c6e3df8e4f1b14ce78e8dddecdb1051df9", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "      @Test     public void testLoadProperties_IOException() throws Exception", "signatureAfterChange": "      @Test     public void testLoadProperties_IOException() throws Exception", "diff": ["-            method.invoke(null, new File(File.separator + \"invalid\"));", "+            // https://support.microsoft.com/en-us/kb/177506", "+            method.invoke(null, new File(File.separator + \":invalid\"));", "-            assertTrue(e.getCause().getMessage().endsWith(\"invalid'.\"));", "+            assertTrue(e.getCause().getMessage().endsWith(\":invalid'.\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "725d7e0bc62b3f5fd2005277bad8e42b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testBracesOff()         throws Exception", "signatureAfterChange": "      public void testBracesOff()         throws Exception", "diff": ["-            filepath + \":58:23: ';' needs to be followed by whitespace.\",", "-            filepath + \":58:29: ';' needs to be followed by whitespace.\",", "+            filepath + \":58:23: ';' is not followed by whitespace.\",", "+            filepath + \":58:29: ';' is not followed by whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76e5df8ce7b63911ea9ebba803af5da8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsTest.java", "commitBeforeChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "commitAfterChange": "fdc81723bdfd6af2ffc2c901cd8dd5b2fe948267", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r     @Test\r     public void testSingleNoUncheckedUnused() throws Exception", "signatureAfterChange": "\r     @Test\r     public void testSingleNoUncheckedUnused() throws Exception", "diff": ["-            \"82:37: The warning 'unchecked' cannot be suppressed at this location.\",\r", "-            \"82:105: The warning 'unused' cannot be suppressed at this location.\",\r", "+            \"82:47: The warning 'unchecked' cannot be suppressed at this location.\",\r", "+            \"82:115: The warning 'unused' cannot be suppressed at this location.\",\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dc778474cbee95c9232cc28941b5bc7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "b29e7a4c49ceff7d1f974a47a47ca519918ff650", "commitAfterChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r     @Test\r     public void testParansAlways() throws Exception", "signatureAfterChange": "\r     @Test\r     public void testParansAlways() throws Exception", "diff": ["-        checkConfig.addAttribute(\"elementStyle\", \"MIXED\");\r", "-        checkConfig.addAttribute(\"trailingArrayComma\", \"MIXED\");\r", "+        checkConfig.addAttribute(\"elementStyle\", \"ignore\");\r", "+        checkConfig.addAttribute(\"trailingArrayComma\", \"ignore\");\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80f692ee0452cbe2ce4825762a5ea023", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheckTest.java", "commitBeforeChange": "6f1f7bd3fdcca84404e97964b3e48de6db5024ec", "commitAfterChange": "20a7915f5f06d2056e50672bf4681978e130000b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void test() throws Exception", "signatureAfterChange": "     public void test() throws Exception", "diff": ["-            \"6:1: Class Data Abstraction Coupling is 4 (max allowed is 0) classes [AnotherInnerClass, InnerClass, HashSet, HashMap].\",", "+            \"6:1: Class Data Abstraction Coupling is 4 (max allowed is 0) classes [AnotherInnerClass, HashMap, InnerClass, HashSet].\",", "-            \"27:1: Class Data Abstraction Coupling is 2 (max allowed is 0) classes [HashSet, HashMap].\",", "+            \"27:1: Class Data Abstraction Coupling is 2 (max allowed is 0) classes [HashMap, HashSet].\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88330b6c36ae299a12a3cf2b927a17e2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheckTest.java", "commitBeforeChange": "3b5e5d728bf1b8d222c538f7cfc92cab0805eb1f", "commitAfterChange": "8ab17acbc62701a0752e4a2cff9241760121326b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void test() throws Exception", "signatureAfterChange": "     public void test() throws Exception", "diff": ["-            \"6:1: Class Data Abstraction Coupling is 4 (max allowed is 0).\",", "-            \"7:5: Class Data Abstraction Coupling is 1 (max allowed is 0).\",", "+            \"6:1: Class Data Abstraction Coupling is 4 (max allowed is 0) classes [AnotherInnerClass, InnerClass, HashSet, HashMap].\",", "+            \"7:5: Class Data Abstraction Coupling is 1 (max allowed is 0) classes [ArrayList].\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8846a82f36ff9226242655305a89f654", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsTest.java", "commitBeforeChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "commitAfterChange": "fdc81723bdfd6af2ffc2c901cd8dd5b2fe948267", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r     @Test\r     public void testExpandedNoUnchecked() throws Exception", "signatureAfterChange": "\r     @Test\r     public void testExpandedNoUnchecked() throws Exception", "diff": ["-            \"82:44: The warning 'unchecked' cannot be suppressed at this location.\",\r", "-            \"82:131: The warning 'unchecked' cannot be suppressed at this location.\",\r", "+            \"82:54: The warning 'unchecked' cannot be suppressed at this location.\",\r", "+            \"82:141: The warning 'unchecked' cannot be suppressed at this location.\",\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89f0620922638d3766384b0020e128d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "e9b6614e5631123ba35b9a6b23412e8806278c21", "commitAfterChange": "2d4604aba68358de4ef011f369face63f8ec2533", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testMissingConfigName()", "signatureAfterChange": "      public void testMissingConfigName()", "diff": ["-                    \"Attribute \\\"name\\\" is required and must be specified \"", "-                        + \"for element type \\\"module\\\".\"));", "+                    \"Attribute \\\"nam\\\" is not declared \"", "+                        + \"for element \\\"module\\\".\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bc9198a90d762d4d45c14439f088e28", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportTest.java", "commitBeforeChange": "bee6b0a1ec26b04e2d738221bdce4bd159b278d2", "commitAfterChange": "83e685bdac0b1e7e838eded12bfeee93d3ca527a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testStarExcludes()         throws Exception", "signatureAfterChange": "      @Test     public void testStarExcludes()         throws Exception", "diff": ["-            \"29: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.imports.InputAvoidStaticImportNestedClass.InnerClass\"),", "-            \"30: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.imports.InputAvoidStaticImportNestedClass.InnerClass.one\"),", "+            \"29: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.checks.imports.InputAvoidStaticImportNestedClass.InnerClass\"),", "+            \"30: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.checks.imports.InputAvoidStaticImportNestedClass.InnerClass.one\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c41914e5679c81365e39a1d4920ae9f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportTest.java", "commitBeforeChange": "9c944ecd228c7920d2a82c65d58d903de21f36a3", "commitAfterChange": "b1d4299b1dc68f76b280e0e8d648cb54866b3a2c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testExcludes()         throws Exception", "signatureAfterChange": "      @Test     public void testExcludes()         throws Exception", "diff": ["-            \"28: Using the '.*' form of import should be avoided - sun.net.ftpclient.FtpClient.*.\",", "+            \"28: Using the '.*' form of import should be avoided - java.io.File.*.\",", "-        verify(checkConfig, getPath(\"imports\" + File.separator + \"InputImport.java\"), expected2);", "+        verify(checkConfig, getPath(\"imports\" + File.separator + \"InputAvoidStarImportCheck.java\"),", "+                expected2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d1457952d15d9b2ac157a5fb86579d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "de39a36a6b81521c17e3a4afa0e98e30deccf082", "commitAfterChange": "2b4a02d2c8a498a8a1ee38e9396426209fa65fad", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @SuppressWarnings(\"deprecation\")     @Test     public void testSetters() throws Exception", "signatureAfterChange": "      @SuppressWarnings(\"deprecation\")     @Test     public void testSetters() throws Exception", "diff": ["-            checker.setCharset(\"UNKNOW-CHARSET\");", "+            checker.setCharset(\"UNKNOWN-CHARSET\");", "-            assertEquals(\"unsupported charset: 'UNKNOW-CHARSET'\", ex.getMessage());", "+            assertEquals(\"unsupported charset: 'UNKNOWN-CHARSET'\", ex.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e54351276983c8db56db1d97d948ca1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsTest.java", "commitBeforeChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "commitAfterChange": "fdc81723bdfd6af2ffc2c901cd8dd5b2fe948267", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r     @Test\r     public void testCompactNoUnchecked() throws Exception", "signatureAfterChange": "\r     @Test\r     public void testCompactNoUnchecked() throws Exception", "diff": ["-            \"82:38: The warning 'unchecked' cannot be suppressed at this location.\",\r", "-            \"82:125: The warning 'unchecked' cannot be suppressed at this location.\",\r", "+            \"82:48: The warning 'unchecked' cannot be suppressed at this location.\",\r", "+            \"82:135: The warning 'unchecked' cannot be suppressed at this location.\",\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9284dfd1bc716d1952045a9f21033080", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "96d3aaea19657ac233d9a57b46a52bc0b35eda95", "commitAfterChange": "5f3eced2d85c10407b5ba1f38c06af05715d9bd7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testIllegalTokenNative() throws Exception", "signatureAfterChange": "      @Test     public void testIllegalTokenNative() throws Exception", "diff": ["-            \"20:12: Using 'LITERAL_NATIVE' is not allowed.\",", "+            \"17:12: Using 'LITERAL_NATIVE' is not allowed.\",", "-        verify(checkConfig, getPath(\"InputIllegalTokens.java\"), expected);", "+        verify(checkConfig, getPath(\"checks/InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96ed2a09b2a4cf627852a34211fcd9c9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "96d3aaea19657ac233d9a57b46a52bc0b35eda95", "commitAfterChange": "5f3eced2d85c10407b5ba1f38c06af05715d9bd7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testMessage()         throws Exception", "signatureAfterChange": "      @Test     public void testMessage()         throws Exception", "diff": ["-            \"20:12: Using 'native' is not allowed.\",", "+            \"17:12: Using 'native' is not allowed.\",", "-        verify(checkConfig, getPath(\"InputIllegalTokens.java\"), expected);", "+        verify(checkConfig, getPath(\"checks/InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a480a429ff5981bba2affb9157f326ae", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheckTest.java", "commitBeforeChange": "35e4a41c1027d5078cbaf0d3988a21c12a2daf7e", "commitAfterChange": "e55435125ea57e96f0bf876dd13e78b0ae02cd52", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDefault()         throws Exception", "signatureAfterChange": "     public void testDefault()         throws Exception", "diff": ["-            \"58:36: ')' is preceeded with whitespace.\",", "+            \"58:36: ')' is preceded with whitespace.\",", "-            \"74:18: ')' is preceeded with whitespace.\",", "+            \"74:18: ')' is preceded with whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a512af7bc1a245522facca65c526daa3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/SimplifyBooleanReturnCheckTest.java", "commitBeforeChange": "8809d19699c1da9d5992d2e23671255fafd619d5", "commitAfterChange": "96d6745a12127bd547e32137713b33aa9327aeb8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testIt()             throws Exception", "signatureAfterChange": "     public void testIt()             throws Exception", "diff": ["-            \"20:9: Remove conditional logic.\",", "-            \"33:9: Remove conditional logic.\",", "+            \"20:9: Conditional logic can be removed.\",", "+            \"33:9: Conditional logic can be removed.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a60393c407f9fd615f4201f59607bccc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/ClassResolverTest.java", "commitBeforeChange": "03f2be49f7ad3fc9d0143782b020a169f28e50a9", "commitAfterChange": "0c2a64d9f02ab5b94bbf4213cb2978f7b459b6f5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testResolveQualifiedNameFails() throws Exception", "signatureAfterChange": "      @Test     public void testResolveQualifiedNameFails() throws Exception", "diff": ["-        PowerMockito.doThrow(new ClassNotFoundException(\"excpected exception\"))", "+        PowerMockito.doThrow(new ClassNotFoundException(\"expected exception\"))", "-            assertTrue(e.getMessage().endsWith(\"excpected exception\"));", "+            assertTrue(e.getMessage().endsWith(\"expected exception\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7b285470f7aff57172268659d558205", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheckTest.java", "commitBeforeChange": "4cc300a8e53fec7264ecfb5702369de14fd8a242", "commitAfterChange": "2e3654c59be793a9e9d06f38f0624bfae0e075bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testNum()         throws Exception", "signatureAfterChange": "      @Test     public void testNum()         throws Exception", "diff": ["-            \"71:9: More than 2 parameters.\",", "-            \"194:10: More than 2 parameters.\",", "+            \"71:9: More than 2 parameters (found 3).\",", "+            \"194:10: More than 2 parameters (found 9).\",", "+        };", "+        verify(checkConfig, getPath(\"InputSimple.java\"), expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acf11777cdf6efec2bdc4ec2671d0205", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/HiddenFieldCheckTest.java", "commitBeforeChange": "db76ce49052f7b63b1c3743b81c0068ef3f039d8", "commitAfterChange": "95a5040ccc98d1138a82c9e0ebcfe983651219b6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testNoParameters()         throws Exception", "signatureAfterChange": "     public void testNoParameters()         throws Exception", "diff": ["-        checkConfig.addAttribute(\"checkParameters\", \"false\");", "+        checkConfig.addAttribute(\"tokens\", \"VARIABLE_DEF\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b21a429529de6707a47164972f80bfa4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "a1cecb5e0658862f957e60a8d5b2ade13b592101", "commitAfterChange": "659e6ec7aa7251ea0a825f48c1a523431ff09b79", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "       public void testScopeInnerInterfacesPublic()         throws Exception", "signatureAfterChange": "       public void testScopeInnerInterfacesPublic()         throws Exception", "diff": ["-            filepath + \":43: method is missing a Javadoc comment.\",", "-            filepath + \":44: method is missing a Javadoc comment.\"", "+            filepath + \":43:9: method is missing a Javadoc comment.\",", "+            filepath + \":44:9: method is missing a Javadoc comment.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4318d8b64d69c16c1d5a8ce67dc5435", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportTest.java", "commitBeforeChange": "bee6b0a1ec26b04e2d738221bdce4bd159b278d2", "commitAfterChange": "83e685bdac0b1e7e838eded12bfeee93d3ca527a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testBogusMemberExcludes()         throws Exception", "signatureAfterChange": "      @Test     public void testBogusMemberExcludes()         throws Exception", "diff": ["-            \"29: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.imports.InputAvoidStaticImportNestedClass.InnerClass\"),", "-            \"30: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.imports.InputAvoidStaticImportNestedClass.InnerClass.one\"),", "+            \"29: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.checks.imports.InputAvoidStaticImportNestedClass.InnerClass\"),", "+            \"30: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.checks.imports.InputAvoidStaticImportNestedClass.InnerClass.one\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb0e8477812b6ac1cd51aa3c9410ccc6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportTest.java", "commitBeforeChange": "35006bcd796ec5787fe6c5a4b44816cae1824a05", "commitAfterChange": "c998dc8d90485ee5810d81c2ce472c5a43b54a13", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testMemberExcludes()         throws Exception", "signatureAfterChange": "      @Test     public void testMemberExcludes()         throws Exception", "diff": ["-            \"28: Using a static member import should be avoided - sun.net.ftpclient.FtpClient.*.\",", "+            \"28: Using a static member import should be avoided - java.io.File.pathSeparator.\",", "-        verify(checkConfig, getPath(\"imports\" + File.separator + \"InputImport.java\"), expected);", "+        verify(checkConfig, getPath(\"imports\" + File.separator + \"InputAvoidStaticImportCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1bd9934c2b01bf48f5c94d4fcdbc9d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "ba4d62dc78cf7a648771b1be9646cac4bab27676", "commitAfterChange": "677acc1e8491acffd24c859e553b06362da0d471", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testFormat() throws Exception", "signatureAfterChange": "      @Test     public void testFormat() throws Exception", "diff": ["-            \"16:13: Declaring variables, return values or parameters of type 'java.util.Hashtable' is not allowed.\",", "-            \"17:13: Declaring variables, return values or parameters of type 'Hashtable' is not allowed.\",", "+            \"16:13: Declaring variables, return values or parameters of type 'java.util.TreeSet' is not allowed.\",", "+            \"17:13: Declaring variables, return values or parameters of type 'TreeSet' is not allowed.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c83317bae4c9a7cd909b0b84fbdf1787", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "f8a53831f0fa98f317ea7dbc6490b5e91b6cc5d9", "commitAfterChange": "5703b6e33550d6e9706f42e253c2cc7d83a358bf", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void testTagsWithResolver()         throws Exception", "signatureAfterChange": "      public void testTagsWithResolver()         throws Exception", "diff": ["-            filepath + \":8: type is missing a Javadoc comment.\",", "+            filepath + \":8: Missing a Javadoc comment.\",", "-            filepath + \":14:5: method is missing a Javadoc comment.\",", "+            filepath + \":14:5: Missing a Javadoc comment.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc91cf367e38621d2351c8a9d3378cd7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d92ceb81a67bb10b98f5ce305f839ba535a1c6ee", "commitAfterChange": "9aa8268e473071cbe26aa9d3a8631f1902e3fef0", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "       public void testScopeInnerInterfacesPublic()         throws Exception", "signatureAfterChange": "       public void testScopeInnerInterfacesPublic()         throws Exception", "diff": ["-            filepath + \":40:23: variable 'CA' missing Javadoc.\",", "-            filepath + \":41:16: variable 'CB' missing Javadoc.\",", "+            filepath + \":40:23: Variable 'CA' missing Javadoc.\",", "+            filepath + \":41:16: Variable 'CB' missing Javadoc.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cce2c3150cc2241b800cc0a007cf8234", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheckTest.java", "commitBeforeChange": "35e4a41c1027d5078cbaf0d3988a21c12a2daf7e", "commitAfterChange": "e55435125ea57e96f0bf876dd13e78b0ae02cd52", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testSpaceEmptyForIterator()         throws Exception", "signatureAfterChange": "      public void testSpaceEmptyForIterator()         throws Exception", "diff": ["-            \"11:35: ')' is not preceeded with whitespace.\",", "+            \"11:35: ')' is not preceded with whitespace.\",", "-            \"14:34: ')' is not preceeded with whitespace.\",", "+            \"14:34: ')' is not preceded with whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2f52c64e1adacaeea85ce24da803cdb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "b29e7a4c49ceff7d1f974a47a47ca519918ff650", "commitAfterChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r     \r     @Test\r     public void testCommaAlwaysNoViolations() throws Exception", "signatureAfterChange": "\r     \r     @Test\r     public void testCommaAlwaysNoViolations() throws Exception", "diff": ["-        checkConfig.addAttribute(\"closingParens\", \"MIXED\");\r", "-        checkConfig.addAttribute(\"elementStyle\", \"MIXED\");\r", "+        checkConfig.addAttribute(\"closingParens\", \"ignore\");\r", "+        checkConfig.addAttribute(\"elementStyle\", \"ignore\");\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db60ca31e104dad64edf5ce32ae8a94c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/naming/ConstantNameCheckTest.java", "commitBeforeChange": "984eb8d7427038effd8ee8d2d9c90c74eee57e2b", "commitAfterChange": "861e2af0e1c40c2daf1b7f20f59052603ed832d4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testDefault()         throws Exception", "signatureAfterChange": "      public void testDefault()         throws Exception", "diff": ["-            \"25:29: Name 'badConstant' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\",", "-            \"142:30: Name 'BAD__NAME' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\"", "+            \"25:29: Name 'badConstant' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\",", "+            \"142:30: Name 'BAD__NAME' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db69cd8ae1941f31f264d7348d839bd5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java", "commitBeforeChange": "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94", "commitAfterChange": "d6175fd6c95f64e854c1604e0331d8d1ab9dcaf3", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void testTypeParameters() throws Exception", "signatureAfterChange": "      public void testTypeParameters() throws Exception", "diff": ["-            \"7:4: Unused @param tag for '<D>'.\",", "-            \"11: Type Javadoc comment is missing an @param <C> tag.\",", "+            \"7:4: Unused @param tag for '<D123>'.\",", "+            \"11: Type Javadoc comment is missing an @param <C456> tag.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc053b3569e5d7bde79ecef15f176049", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "2d4604aba68358de4ef011f369face63f8ec2533", "commitAfterChange": "fc846abfd03ac974443b80ffac5be28365713691", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testMissingConfigParent()", "signatureAfterChange": "      public void testMissingConfigParent()", "diff": ["-                    \"Root element type is \\\"property\\\", but was declared to \"", "-                        + \"be \\\"module\\\".\"));", "+                    \"Document root element \\\"property\\\", must match DOCTYPE \"", "+                        + \"root \\\"module\\\".\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddffc92dc2ebe04a60c889cfa4f7994c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "b29e7a4c49ceff7d1f974a47a47ca519918ff650", "commitAfterChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r     \r     @Test\r     public void testCommaAlwaysViolations() throws Exception", "signatureAfterChange": "\r     \r     @Test\r     public void testCommaAlwaysViolations() throws Exception", "diff": ["-        checkConfig.addAttribute(\"closingParens\", \"MIXED\");\r", "-        checkConfig.addAttribute(\"elementStyle\", \"MIXED\");\r", "+        checkConfig.addAttribute(\"closingParens\", \"ignore\");\r", "+        checkConfig.addAttribute(\"elementStyle\", \"ignore\");\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e002626b0537730497c4c3a0c25fcbf1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testImmutableDefaultValueSameTypeName() throws Exception", "signatureAfterChange": "      @Test     public void testImmutableDefaultValueSameTypeName() throws Exception", "diff": ["-            \"8:36: \" + getCheckMessage(MSG_KEY, \"calendar2\"),", "-            \"9:82: \" + getCheckMessage(MSG_KEY, \"calendar3\"),", "+            \"8:41: \" + getCheckMessage(MSG_KEY, \"calendar2\"),", "+            \"9:87: \" + getCheckMessage(MSG_KEY, \"calendar3\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2f5233406cd10c9f195f1053fd7b2a3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "contrib/j2ee/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/j2ee/SessionBeanCheck.java", "commitBeforeChange": "3c4a10ca035802820e7260164b72438da404ccd7", "commitAfterChange": "304ca8487a300560058a0e2abe67a78aa0458b51", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            checkBean(aAST, \"Session\");", "+            checkBean(aAST, \"Session bean\");", "-                    new Object[] {\"Session\", \"ejbCreate\"});", "+                    new Object[] {\"Session bean\", \"ejbCreate\"});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e50181223a03751b04be8b41036bd620", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "2d4604aba68358de4ef011f369face63f8ec2533", "commitAfterChange": "fc846abfd03ac974443b80ffac5be28365713691", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testMissingPropertyValue()", "signatureAfterChange": "      public void testMissingPropertyValue()", "diff": ["-                    \"Attribute \\\"valu\\\" is not declared \"", "-                        + \"for element \\\"property\\\".\"));", "+                    \"Attribute \\\"value\\\" is required and must be specified \"", "+                        + \"for element type \\\"property\\\".\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e61f43b4241e25494c27df0240a5f122", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "contrib/j2ee/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/j2ee/MessageBeanCheck.java", "commitBeforeChange": "3c4a10ca035802820e7260164b72438da404ccd7", "commitAfterChange": "304ca8487a300560058a0e2abe67a78aa0458b51", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            checkBean(aAST, \"Message\");", "+            checkBean(aAST, \"Message bean\");", "-                    new Object[] {\"Message\", \"ejbCreate\"});", "+                    new Object[] {\"Message bean\", \"ejbCreate\"});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6ff29dcb91d71cbf0fdb4fefb01d578", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "b29e7a4c49ceff7d1f974a47a47ca519918ff650", "commitAfterChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r     \r     @Test\r     public void testCommaNeverViolations() throws Exception", "signatureAfterChange": "\r     \r     @Test\r     public void testCommaNeverViolations() throws Exception", "diff": ["-        checkConfig.addAttribute(\"closingParens\", \"MIXED\");\r", "-        checkConfig.addAttribute(\"elementStyle\", \"MIXED\");\r", "+        checkConfig.addAttribute(\"closingParens\", \"ignore\");\r", "+        checkConfig.addAttribute(\"elementStyle\", \"ignore\");\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e848ade0cf543717d8f057502a0fc2c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/AbstractParenPadCheck.java", "commitBeforeChange": "35e4a41c1027d5078cbaf0d3988a21c12a2daf7e", "commitAfterChange": "e55435125ea57e96f0bf876dd13e78b0ae02cd52", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected void processRight(DetailAST aAST)", "signatureAfterChange": "     protected void processRight(DetailAST aAST)", "diff": ["-                log(aAST.getLineNo(), before, \"ws.preceeded\", \")\");", "+                log(aAST.getLineNo(), before, \"ws.preceded\", \")\");", "-                    \"ws.notPreceeded\", \")\");", "+                    \"ws.notPreceded\", \")\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea31178957de4e57b35cd1db27153db7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "96d3aaea19657ac233d9a57b46a52bc0b35eda95", "commitAfterChange": "5f3eced2d85c10407b5ba1f38c06af05715d9bd7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testMinimumNumber()         throws Exception", "signatureAfterChange": "      @Test     public void testMinimumNumber()         throws Exception", "diff": ["-            \"11:9: \" + getCheckMessage(MSG_KEY_MIN, 1, 2, \"LITERAL_SWITCH\", \"LITERAL_DEFAULT\"),", "+            \"8:9: \" + getCheckMessage(MSG_KEY_MIN, 1, 2, \"LITERAL_SWITCH\", \"LITERAL_DEFAULT\"),", "-        verify(checkConfig, getPath(\"InputIllegalTokens.java\"), expected);", "+        verify(checkConfig, getPath(\"checks/InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecbc2d0c66ead79cc809d8700d6c007a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "ba4d62dc78cf7a648771b1be9646cac4bab27676", "commitAfterChange": "677acc1e8491acffd24c859e553b06362da0d471", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefaults() throws Exception", "signatureAfterChange": "      @Test     public void testDefaults() throws Exception", "diff": ["-            \"16:13: Declaring variables, return values or parameters of type 'java.util.Hashtable' is not allowed.\",", "-            \"17:13: Declaring variables, return values or parameters of type 'Hashtable' is not allowed.\",", "+            \"16:13: Declaring variables, return values or parameters of type 'java.util.TreeSet' is not allowed.\",", "+            \"17:13: Declaring variables, return values or parameters of type 'TreeSet' is not allowed.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eff7f9501ab0a7912c2bb15211565f31", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testCustomAnnotationPatterns() throws Exception", "signatureAfterChange": "      @Test     public void testCustomAnnotationPatterns() throws Exception", "diff": ["-                \"com.puppycrawl.tools.checkstyle.AnnotatedVisibility.CustomAnnotation\");", "+                \"com.puppycrawl.tools.checkstyle.checks.design.InputAnnotatedVisibility.CustomAnnotation\");", "-        verify(checkConfig, getPath(\"AnnotatedVisibility.java\"), expected);", "+        verify(checkConfig, getPath(\"InputAnnotatedVisibility.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f22482a7ff616afe4db5dacece3abc05", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagTest.java", "commitBeforeChange": "443e534a3c98c0b30f24647da724fe918f17a006", "commitAfterChange": "66d73fe6189267fee3423e2e8d7fc2d68599a43f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testToString()", "signatureAfterChange": "     @Test     public void testToString()", "diff": ["-        JavadocTag javadocTag = new JavadocTag(0, 1, \"author\", \"arg1\");", "+        JavadocTag javadocTag = new JavadocTag(0, 1, \"author\", \"firstArg\");", "-        assertEquals(\"JavadocTag{tag='author' lineNo=0, columnNo=1, arg1='arg1'}\", result);", "+        assertEquals(\"JavadocTag{tag='author' lineNo=0, columnNo=1, firstArg='firstArg'}\", result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f275daf75fcb9bacf9ac033ef6caeb2c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testIt4()         throws Exception", "signatureAfterChange": "      @Test     public void testIt4()         throws Exception", "diff": ["-            \"41:14: \" + getCheckMessage(WS_NOT_FOLLOWED, \"while\"),", "-            \"58:12: \" + getCheckMessage(WS_NOT_FOLLOWED, \"for\"),", "+            \"37:14: \" + getCheckMessage(WS_NOT_FOLLOWED, \"while\"),", "+            \"54:12: \" + getCheckMessage(WS_NOT_FOLLOWED, \"for\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3806ac843f5ddefb7bf241362930c44", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "f768a8f8cca599d460e3c2da5369add062b6ead0", "commitAfterChange": "08ea556aed8265d64a5dd93963b1ce4587cc48b4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testIgnoreNegativeOctalHex() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreNegativeOctalHex() throws Exception", "diff": ["-            \"41:26: '3' is a magic number.\",", "+            \"41:26: '3_000' is a magic number.\",", "-            \"63:30: '010L' is a magic number.\",", "+            \"63:30: '0_10L' is a magic number.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3ae7500613ef94d847832f7bdac687c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "2d4604aba68358de4ef011f369face63f8ec2533", "commitAfterChange": "fc846abfd03ac974443b80ffac5be28365713691", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testMissingConfigName()", "signatureAfterChange": "      public void testMissingConfigName()", "diff": ["-                    \"Attribute \\\"nam\\\" is not declared \"", "-                        + \"for element \\\"module\\\".\"));", "+                    \"Attribute \\\"name\\\" is required and must be specified \"", "+                        + \"for element type \\\"module\\\".\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3d7a96ef84d84123eb8522285a65b66", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheckTest.java", "commitBeforeChange": "10f348bbfd91fd8c2bd7776aff3c03f549380a44", "commitAfterChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testGithubIssue41() throws Exception", "signatureAfterChange": "      @Test     public void testGithubIssue41() throws Exception", "diff": ["-            \"7:19: \" + getCheckMessage(MSG_VARIABLE, \"number\", \"\\\"this\\\"\"),", "-            \"8:16: \" + getCheckMessage(MSG_METHOD, \"other\", \"\\\"this\\\"\"),", "+            \"7:19: \" + getCheckMessage(MSG_VARIABLE, \"number\", \"\"),", "+            \"8:16: \" + getCheckMessage(MSG_METHOD, \"other\", \"\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa3c6656e42b4c31b0cc113926c41f7d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "b29e7a4c49ceff7d1f974a47a47ca519918ff650", "commitAfterChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r     @Test\r     public void testParansNever() throws Exception", "signatureAfterChange": "\r     @Test\r     public void testParansNever() throws Exception", "diff": ["-        checkConfig.addAttribute(\"elementStyle\", \"MIXED\");\r", "-        checkConfig.addAttribute(\"trailingArrayComma\", \"MIXED\");\r", "+        checkConfig.addAttribute(\"elementStyle\", \"ignore\");\r", "+        checkConfig.addAttribute(\"trailingArrayComma\", \"ignore\");\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa4aa10ca6327e2357bd8c3f44d1f7ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportTest.java", "commitBeforeChange": "bee6b0a1ec26b04e2d738221bdce4bd159b278d2", "commitAfterChange": "83e685bdac0b1e7e838eded12bfeee93d3ca527a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testInnerClassMemberExcludesStar()         throws Exception", "signatureAfterChange": "      @Test     public void testInnerClassMemberExcludesStar()         throws Exception", "diff": ["-            \"com.puppycrawl.tools.checkstyle.imports.InputAvoidStaticImportNestedClass.InnerClass.*\");", "+            \"com.puppycrawl.tools.checkstyle.checks.imports.InputAvoidStaticImportNestedClass.InnerClass.*\");", "-            \"29: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.imports.InputAvoidStaticImportNestedClass.InnerClass\"),", "+            \"29: \" + getCheckMessage(MSG_KEY, \"com.puppycrawl.tools.checkstyle.checks.imports.InputAvoidStaticImportNestedClass.InnerClass\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbe12874aab8cd63812c951e856d36ff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "e9b6614e5631123ba35b9a6b23412e8806278c21", "commitAfterChange": "2d4604aba68358de4ef011f369face63f8ec2533", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testMissingPropertyValue()", "signatureAfterChange": "      public void testMissingPropertyValue()", "diff": ["-                    \"Attribute \\\"value\\\" is required and must be specified \"", "-                        + \"for element type \\\"property\\\".\"));", "+                    \"Attribute \\\"valu\\\" is not declared \"", "+                        + \"for element \\\"property\\\".\"));"]}]}