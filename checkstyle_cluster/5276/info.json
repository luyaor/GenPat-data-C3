{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ab1d0335a4f002afd40028acf3ecdd1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1ce71cf4e5771a1c8372206d5123b33", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/ParseTreeBuilder.java", "commitBeforeChange": "65865d1adcf6e1579b7323d56117186db1ad96eb", "commitAfterChange": "b4c351b03d4a9d7dffc9a3502d17a41fb3e440b4", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public static ParseTree treeParamWithGeneric()", "signatureAfterChange": "      public static ParseTree treeParamWithGeneric()", "diff": ["-    }", "-    public static ParseTree treeParamWithGeneric() {", "-        JavadocContext QPFRD = new JavadocContext(null, 0);", "-        JavadocTagContext aGEJG = new JavadocTagContext(QPFRD, 0);", "-        CommonToken KeLjt = new CommonToken(JavadocTokenTypes.PARAM_LITERAL, \"@param\");", "-        aGEJG.addChild(KeLjt);", "-        CommonToken rOSWG = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        aGEJG.addChild(rOSWG);", "-        CommonToken lsjiD = new CommonToken(JavadocTokenTypes.PARAMETER_NAME, \"<E>\");", "-        aGEJG.addChild(lsjiD);", "-        CommonToken NffOe = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        aGEJG.addChild(NffOe);", "-        DescriptionContext xpcWl = new DescriptionContext(aGEJG, 0);", "-        TextContext YlCSA = new TextContext(xpcWl, 0);", "-        CommonToken DrEbu = new CommonToken(JavadocTokenTypes.CHAR, \"m\");", "-        YlCSA.addChild(DrEbu);", "-        CommonToken KZAJu = new CommonToken(JavadocTokenTypes.CHAR, \"y\");", "-        YlCSA.addChild(KZAJu);", "-        CommonToken dwXkJ = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        YlCSA.addChild(dwXkJ);", "-        CommonToken bckfp = new CommonToken(JavadocTokenTypes.CHAR, \"f\");", "-        YlCSA.addChild(bckfp);", "-        CommonToken kiXWZ = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "-        YlCSA.addChild(kiXWZ);", "-        CommonToken PfsCl = new CommonToken(JavadocTokenTypes.CHAR, \"v\");", "-        YlCSA.addChild(PfsCl);", "-        CommonToken svxAz = new CommonToken(JavadocTokenTypes.CHAR, \"o\");", "-        YlCSA.addChild(svxAz);", "-        CommonToken kusoJ = new CommonToken(JavadocTokenTypes.CHAR, \"r\");", "-        YlCSA.addChild(kusoJ);", "-        CommonToken XhYWE = new CommonToken(JavadocTokenTypes.CHAR, \"i\");", "-        YlCSA.addChild(XhYWE);", "-        CommonToken KLVPT = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "-        YlCSA.addChild(KLVPT);", "-        CommonToken yDyzh = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        YlCSA.addChild(yDyzh);", "-        CommonToken Jcrop = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        YlCSA.addChild(Jcrop);", "-        CommonToken NwSnD = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "-        YlCSA.addChild(NwSnD);", "-        CommonToken WocUM = new CommonToken(JavadocTokenTypes.CHAR, \"y\");", "-        YlCSA.addChild(WocUM);", "-        CommonToken pIlOU = new CommonToken(JavadocTokenTypes.CHAR, \"p\");", "-        YlCSA.addChild(pIlOU);", "-        CommonToken DzOSR = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        YlCSA.addChild(DzOSR);", "-        xpcWl.addChild(YlCSA);", "-        aGEJG.addChild(xpcWl);", "-        QPFRD.addChild(aGEJG);", "-        CommonToken TBVcX = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "-        QPFRD.addChild(TBVcX);", "-        return QPFRD;", "-    }", "+", "+    public static ParseTree treeParamWithGeneric()", "+    {", "+        JavadocContext javadocContext0 = new JavadocContext(null, 0);", "+        JavadocTagContext javadocTagContext0 = new JavadocTagContext(javadocContext0, 0);", "+        CommonToken paramLiteral0 = new CommonToken(JavadocTokenTypes.PARAM_LITERAL, \"@param\");", "+        javadocTagContext0.addChild(paramLiteral0);", "+        CommonToken ws0 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocTagContext0.addChild(ws0);", "+        CommonToken parameterName0 = new CommonToken(JavadocTokenTypes.PARAMETER_NAME, \"<E>\");", "+        javadocTagContext0.addChild(parameterName0);", "+        CommonToken ws1 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocTagContext0.addChild(ws1);", "+        DescriptionContext descriptionContext0 = new DescriptionContext(javadocTagContext0, 0);", "+        TextContext textContext0 = new TextContext(descriptionContext0, 0);", "+        CommonToken char0 = new CommonToken(JavadocTokenTypes.CHAR, \"m\");", "+        textContext0.addChild(char0);", "+        CommonToken char1 = new CommonToken(JavadocTokenTypes.CHAR, \"y\");", "+        textContext0.addChild(char1);", "+        CommonToken ws2 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        textContext0.addChild(ws2);", "+        CommonToken char2 = new CommonToken(JavadocTokenTypes.CHAR, \"f\");", "+        textContext0.addChild(char2);", "+        CommonToken char3 = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "+        textContext0.addChild(char3);", "+        CommonToken char4 = new CommonToken(JavadocTokenTypes.CHAR, \"v\");", "+        textContext0.addChild(char4);", "+        CommonToken char5 = new CommonToken(JavadocTokenTypes.CHAR, \"o\");", "+        textContext0.addChild(char5);", "+        CommonToken char6 = new CommonToken(JavadocTokenTypes.CHAR, \"r\");", "+        textContext0.addChild(char6);", "+        CommonToken char7 = new CommonToken(JavadocTokenTypes.CHAR, \"i\");", "+        textContext0.addChild(char7);", "+        CommonToken char8 = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "+        textContext0.addChild(char8);", "+        CommonToken char9 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext0.addChild(char9);", "+        CommonToken ws3 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        textContext0.addChild(ws3);", "+        CommonToken char10 = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "+        textContext0.addChild(char10);", "+        CommonToken char11 = new CommonToken(JavadocTokenTypes.CHAR, \"y\");", "+        textContext0.addChild(char11);", "+        CommonToken char12 = new CommonToken(JavadocTokenTypes.CHAR, \"p\");", "+        textContext0.addChild(char12);", "+        CommonToken char13 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext0.addChild(char13);", "+        descriptionContext0.addChild(textContext0);", "+        javadocTagContext0.addChild(descriptionContext0);", "+        javadocContext0.addChild(javadocTagContext0);", "+        CommonToken eof0 = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "+        javadocContext0.addChild(eof0);", "+        return javadocContext0;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd13b7d799b649a69f7a6478678c39bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/ParseTreeBuilder.java", "commitBeforeChange": "65865d1adcf6e1579b7323d56117186db1ad96eb", "commitAfterChange": "b4c351b03d4a9d7dffc9a3502d17a41fb3e440b4", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 28, "signatureBeforeChange": "     public static ParseTree treeSince()", "signatureAfterChange": "      public static ParseTree treeSince()", "diff": ["-    }", "-    public static ParseTree treeSince() {", "-        JavadocContext KzwtL = new JavadocContext(null, 0);", "-        CommonToken KBdjc = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \"*\");", "-        KzwtL.addChild(KBdjc);", "-        CommonToken bumXm = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        KzwtL.addChild(bumXm);", "-        JavadocTagContext yxgFX = new JavadocTagContext(KzwtL, 0);", "-        CommonToken YHnJx = new CommonToken(JavadocTokenTypes.SINCE_LITERAL, \"@since\");", "-        yxgFX.addChild(YHnJx);", "-        CommonToken VnMhH = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        yxgFX.addChild(VnMhH);", "-        DescriptionContext hfUJs = new DescriptionContext(yxgFX, 0);", "-        TextContext KDFKH = new TextContext(hfUJs, 0);", "-        CommonToken HzQdJ = new CommonToken(JavadocTokenTypes.CHAR, \"1\");", "-        KDFKH.addChild(HzQdJ);", "-        CommonToken dQvjG = new CommonToken(JavadocTokenTypes.CHAR, \".\");", "-        KDFKH.addChild(dQvjG);", "-        CommonToken xEdyg = new CommonToken(JavadocTokenTypes.CHAR, \"5\");", "-        KDFKH.addChild(xEdyg);", "-        hfUJs.addChild(KDFKH);", "-        CommonToken IXuHo = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        hfUJs.addChild(IXuHo);", "-        yxgFX.addChild(hfUJs);", "-        KzwtL.addChild(yxgFX);", "-        CommonToken PkBux = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \" *\");", "-        KzwtL.addChild(PkBux);", "-        CommonToken KpMIW = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        KzwtL.addChild(KpMIW);", "-        JavadocTagContext OcuEn = new JavadocTagContext(KzwtL, 0);", "-        CommonToken SehKa = new CommonToken(JavadocTokenTypes.SINCE_LITERAL, \"@since\");", "-        OcuEn.addChild(SehKa);", "-        CommonToken JURQC = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        OcuEn.addChild(JURQC);", "-        DescriptionContext NYzVK = new DescriptionContext(OcuEn, 0);", "-        TextContext KYmTj = new TextContext(NYzVK, 0);", "-        CommonToken XeINZ = new CommonToken(JavadocTokenTypes.CHAR, \"R\");", "-        KYmTj.addChild(XeINZ);", "-        CommonToken yaphV = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        KYmTj.addChild(yaphV);", "-        CommonToken fWGhu = new CommonToken(JavadocTokenTypes.CHAR, \"l\");", "-        KYmTj.addChild(fWGhu);", "-        CommonToken kWDEz = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        KYmTj.addChild(kWDEz);", "-        CommonToken xrhZk = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "-        KYmTj.addChild(xrhZk);", "-        CommonToken rrnjf = new CommonToken(JavadocTokenTypes.CHAR, \"s\");", "-        KYmTj.addChild(rrnjf);", "-        CommonToken hMbVu = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        KYmTj.addChild(hMbVu);", "-        CommonToken WEbWM = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        KYmTj.addChild(WEbWM);", "-        CommonToken NFvZb = new CommonToken(JavadocTokenTypes.CHAR, \"3\");", "-        KYmTj.addChild(NFvZb);", "-        CommonToken rWLUe = new CommonToken(JavadocTokenTypes.CHAR, \".\");", "-        KYmTj.addChild(rWLUe);", "-        CommonToken sZzJq = new CommonToken(JavadocTokenTypes.CHAR, \"4\");", "-        KYmTj.addChild(sZzJq);", "-        CommonToken fpHMf = new CommonToken(JavadocTokenTypes.CHAR, \".\");", "-        KYmTj.addChild(fpHMf);", "-        CommonToken ukVDH = new CommonToken(JavadocTokenTypes.CHAR, \"5\");", "-        KYmTj.addChild(ukVDH);", "-        NYzVK.addChild(KYmTj);", "-        OcuEn.addChild(NYzVK);", "-        KzwtL.addChild(OcuEn);", "-        CommonToken lWOPi = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "-        KzwtL.addChild(lWOPi);", "-        return KzwtL;", "-    }", "+", "+    public static ParseTree treeSince()", "+    {", "+        JavadocContext javadocContext0 = new JavadocContext(null, 0);", "+        CommonToken leadingAsterisk0 = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \"*\");", "+        javadocContext0.addChild(leadingAsterisk0);", "+        CommonToken ws0 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocContext0.addChild(ws0);", "+        JavadocTagContext javadocTagContext0 = new JavadocTagContext(javadocContext0, 0);", "+        CommonToken sinceLiteral0 = new CommonToken(JavadocTokenTypes.SINCE_LITERAL, \"@since\");", "+        javadocTagContext0.addChild(sinceLiteral0);", "+        CommonToken ws1 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocTagContext0.addChild(ws1);", "+        DescriptionContext descriptionContext0 = new DescriptionContext(javadocTagContext0, 0);", "+        TextContext textContext0 = new TextContext(descriptionContext0, 0);", "+        CommonToken char0 = new CommonToken(JavadocTokenTypes.CHAR, \"1\");", "+        textContext0.addChild(char0);", "+        CommonToken char1 = new CommonToken(JavadocTokenTypes.CHAR, \".\");", "+        textContext0.addChild(char1);", "+        CommonToken char2 = new CommonToken(JavadocTokenTypes.CHAR, \"5\");", "+        textContext0.addChild(char2);", "+        descriptionContext0.addChild(textContext0);", "+        CommonToken newline0 = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "+        descriptionContext0.addChild(newline0);", "+        javadocTagContext0.addChild(descriptionContext0);", "+        javadocContext0.addChild(javadocTagContext0);", "+        CommonToken leadingAsterisk1 = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \" *\");", "+        javadocContext0.addChild(leadingAsterisk1);", "+        CommonToken ws2 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocContext0.addChild(ws2);", "+        JavadocTagContext javadocTagContext1 = new JavadocTagContext(javadocContext0, 0);", "+        CommonToken sinceLiteral1 = new CommonToken(JavadocTokenTypes.SINCE_LITERAL, \"@since\");", "+        javadocTagContext1.addChild(sinceLiteral1);", "+        CommonToken ws3 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocTagContext1.addChild(ws3);", "+        DescriptionContext descriptionContext1 = new DescriptionContext(javadocTagContext1, 0);", "+        TextContext textContext1 = new TextContext(descriptionContext1, 0);", "+        CommonToken char3 = new CommonToken(JavadocTokenTypes.CHAR, \"R\");", "+        textContext1.addChild(char3);", "+        CommonToken char4 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext1.addChild(char4);", "+        CommonToken char5 = new CommonToken(JavadocTokenTypes.CHAR, \"l\");", "+        textContext1.addChild(char5);", "+        CommonToken char6 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext1.addChild(char6);", "+        CommonToken char7 = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "+        textContext1.addChild(char7);", "+        CommonToken char8 = new CommonToken(JavadocTokenTypes.CHAR, \"s\");", "+        textContext1.addChild(char8);", "+        CommonToken char9 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext1.addChild(char9);", "+        CommonToken ws4 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        textContext1.addChild(ws4);", "+        CommonToken char10 = new CommonToken(JavadocTokenTypes.CHAR, \"3\");", "+        textContext1.addChild(char10);", "+        CommonToken char11 = new CommonToken(JavadocTokenTypes.CHAR, \".\");", "+        textContext1.addChild(char11);", "+        CommonToken char12 = new CommonToken(JavadocTokenTypes.CHAR, \"4\");", "+        textContext1.addChild(char12);", "+        CommonToken char13 = new CommonToken(JavadocTokenTypes.CHAR, \".\");", "+        textContext1.addChild(char13);", "+        CommonToken char14 = new CommonToken(JavadocTokenTypes.CHAR, \"5\");", "+        textContext1.addChild(char14);", "+        descriptionContext1.addChild(textContext1);", "+        javadocTagContext1.addChild(descriptionContext1);", "+        javadocContext0.addChild(javadocTagContext1);", "+        CommonToken eof0 = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "+        javadocContext0.addChild(eof0);", "+        return javadocContext0;", "+    }"]}]}