{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d82bbdb263345ab3f148efcbe4b96db6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a2c749e85271d29c6106fa5f220a0d2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/FilterSet.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public boolean accept(AuditEvent aEvent)", "signatureAfterChange": "     public boolean accept(AuditEvent aEvent)", "diff": ["-        final Iterator it = mFilters.iterator();", "-        while (it.hasNext()) {", "-            final Filter filter = (Filter) it.next();", "+        for (Filter filter : mFilters) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "217224ad794837c71e8ccee5fadb10ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     PkgControl locateFinest(final String aForPkg)", "signatureAfterChange": "     PkgControl locateFinest(final String aForPkg)", "diff": ["-        final Iterator it = mChildren.iterator();", "-        while (it.hasNext()) {", "-            final PkgControl pc = (PkgControl) it.next();", "+        for (PkgControl pc : mChildren) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d06ba8cedc5218efe84509167f5579e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void fireFileStarted(String aFileName)", "signatureAfterChange": "     public void fireFileStarted(String aFileName)", "diff": ["-        final Iterator it = mListeners.iterator();", "-        while (it.hasNext()) {", "-            final AuditListener listener = (AuditListener) it.next();", "+        for (AuditListener listener : mListeners) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ecb319ddeb47038af093445d078fdab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected void fireAuditStarted()", "signatureAfterChange": "     protected void fireAuditStarted()", "diff": ["-        final Iterator it = mListeners.iterator();", "-        while (it.hasNext()) {", "-            final AuditListener listener = (AuditListener) it.next();", "+        for (AuditListener listener : mListeners) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c3c410d1608758ba211fd0c1a25af19", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private AccessResult localCheckAccess(final String aForImport,         final String aInPkg)", "signatureAfterChange": "     private AccessResult localCheckAccess(final String aForImport,         final String aInPkg)", "diff": ["-        final Iterator it = mGuards.iterator();", "-        while (it.hasNext()) {", "-            final Guard g = (Guard) it.next();", "+        for (Guard g : mGuards) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93db513b3ba2211796eda2a7ff5a8b32", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public void fireFileFinished(String aFileName)", "signatureAfterChange": "     public void fireFileFinished(String aFileName)", "diff": ["-        final Iterator it = mListeners.iterator();", "-        while (it.hasNext()) {", "-            final AuditListener listener = (AuditListener) it.next();", "+        for (AuditListener listener : mListeners) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4db6ef39a7465a45807ff75d69ca730", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private String getPackageName()", "signatureAfterChange": "     private String getPackageName()", "diff": ["-        final Iterator it = mPackageStack.iterator();", "-        while (it.hasNext()) {", "-            final String subPackage = (String) it.next();", "+        for (String subPackage : mPackageStack) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bded51d7eb4415de43339466350fbc40", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected void fireAuditFinished()", "signatureAfterChange": "     protected void fireAuditFinished()", "diff": ["-        final Iterator it = mListeners.iterator();", "-        while (it.hasNext()) {", "-            final AuditListener listener = (AuditListener) it.next();", "+        for (AuditListener listener : mListeners) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db47d74aad45efead86ff62d4031ad39", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void fireErrors(String aFileName, LocalizedMessage[] aErrors)", "signatureAfterChange": "     public void fireErrors(String aFileName, LocalizedMessage[] aErrors)", "diff": ["-                final Iterator it = mListeners.iterator();", "-                while (it.hasNext()) {", "-                    final AuditListener listener = (AuditListener) it.next();", "+                for (AuditListener listener : mListeners) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb06d9a80bf75e714d0ed1ba0487ecbe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void registerCheck(Check aCheck)         throws CheckstyleException", "signatureAfterChange": "     private void registerCheck(Check aCheck)         throws CheckstyleException", "diff": ["-        final Set checkTokens = aCheck.getTokenNames();", "+        final Set<String> checkTokens = aCheck.getTokenNames();", "-            final Iterator it = checkTokens.iterator();", "-            while (it.hasNext()) {", "-                final String token = (String) it.next();", "+            for (String token : checkTokens) {"]}]}