{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e798fd8990eb99582f8d37e16350b91", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "083be572dd6f78257b5e0debcbd859dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "59aa66c3cc43db0a7cd8bb0ea3a39b6f4339fe88", "commitAfterChange": "a24df47cafeab03fd65cf72b460aad3d2fafce3d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void initialize(AST aAST)", "signatureAfterChange": "      @Override     public void initialize(AST aAST)", "diff": ["+        hiddenAfter = da.getHiddenAfter();", "+        hiddenBefore = da.getHiddenBefore();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "990542c67e8e13cf1c787d361cb44703", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/indentation/InputValidAssignIndent.java", "commitBeforeChange": "2c02a737d97980eb4c984056c33265b8a917a717", "commitAfterChange": "c9a1ce7de0a2142413aff3eb122a4a9b2c389e11", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     void foo(String[] args)", "signatureAfterChange": "     void foo(String[] args)", "diff": ["+", "+        function.lastArgument() = parameters;", "+        function.lastArgument()", "+            =", "+            parameters;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7f0736146fcefc27fb203c9c963ad5f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "ca89807d485f512061d7a7138aa91b454d85d466", "commitAfterChange": "ecd7ee879aa6cbc51fcb41093dbf42843256184f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "         public ClassFrame(LexicalFrame aParent)", "signatureAfterChange": "         public ClassFrame(LexicalFrame aParent)", "diff": ["+            mInstanceMethods = Sets.newHashSet();", "+            mStaticMethods = Sets.newHashSet();"]}]}