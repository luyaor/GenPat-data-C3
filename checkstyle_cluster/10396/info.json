{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd886766c0565d61d50b9defd6f2ab17", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a590d11b2c3b4ab891ba025156dd092", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/metrics/MethodCountCheckTest.java", "commitBeforeChange": "5320065461ca38393ab2402c7402cc8f65c331d4", "commitAfterChange": "45b1afd66692e017852016b7148c44ee4760f5d6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testSomeMethod()", "signatureAfterChange": "      @Test     public void testThrees() throws Exception", "diff": ["-    public void testSomeMethod() {", "-        fail(\"Need to implement\");", "+    @Test", "+    public void testThrees() throws Exception", "+    {", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(MethodCountCheck.class);", "+        checkConfig.addAttribute(\"maxPrivate\", \"3\");", "+        checkConfig.addAttribute(\"maxPackage\", \"3\");", "+        checkConfig.addAttribute(\"maxProtected\", \"3\");", "+        checkConfig.addAttribute(\"maxPublic\", \"3\");", "+        checkConfig.addAttribute(\"maxTotal\", \"3\");", "+", "+        final String[] expected = {", "+            \"3: Number of package methods is 5 (max allowed is 3).\",", "+            \"3: Number of private methods is 5 (max allowed is 3).\",", "+            \"3: Number of protected methods is 5 (max allowed is 3).\",", "+            \"3: Number of public methods is 5 (max allowed is 3).\",", "+            \"3: Total number of methods is 20 (max allowed is 3).\",", "+            \"9: Number of public methods is 5 (max allowed is 3).\",", "+            \"9: Total number of methods is 5 (max allowed is 3).\",", "+            \"45: Number of public methods is 5 (max allowed is 3).\",", "+            \"45: Total number of methods is 5 (max allowed is 3).\",", "+        };", "+", "+        verify(checkConfig,", "+            getSrcPath(\"checks/metrics/MethodCountCheckInput.java\"), expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56f187335bb10fbf80e5fdefde368fdc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheckTest.java", "commitBeforeChange": "ab1e3089135d74b0d8c3296d0074244ca89a55e2", "commitAfterChange": "9d8134f4e8f2400519d4097a96a87c1b533dc9d2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void setUp()", "signatureAfterChange": "      public void testOwnPattern() throws Exception", "diff": ["-    public void setUp()", "-        checkConfig = createCheckConfig(FallThroughCheck.class);", "+    public void testOwnPattern() throws Exception", "+        final String ownPattern = \"Continue with next case\";", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(FallThroughCheck.class);", "+        checkConfig.addAttribute(\"reliefPattern\", ownPattern);", "+        ", "+            \"143:11: Fall through from previous branch of the switch statement.\",", "+            \"168:11: Fall through from previous branch of the switch statement.\",", "+            \"184:11: Fall through from previous branch of the switch statement.\",", "+            \"202:11: Fall through from previous branch of the switch statement.\",", "+            \"220:11: Fall through from previous branch of the switch statement.\",", "+            \"239:11: Fall through from previous branch of the switch statement.\",", "+            \"250:26: Fall through from previous branch of the switch statement.\",", "+            \"264:11: Fall through from previous branch of the switch statement.\",", "+            \"279:11: Fall through from previous branch of the switch statement.\",", "+            \"282:11: Fall through from previous branch of the switch statement.\",", "+            \"286:11: Fall through from previous branch of the switch statement.\",", "+            \"288:25: Fall through from previous branch of the switch statement.\",", "+            \"304:11: Fall through from previous branch of the switch statement.\",", "+            \"307:11: Fall through from previous branch of the switch statement.\",", "+            \"309:25: Fall through from previous branch of the switch statement.\",", "+            \"325:11: Fall through from previous branch of the switch statement.\",", "+            \"328:11: Fall through from previous branch of the switch statement.\",", "+            \"330:23: Fall through from previous branch of the switch statement.\",", "+            \"346:11: Fall through from previous branch of the switch statement.\",", "+            \"349:11: Fall through from previous branch of the switch statement.\",", "+            \"351:30: Fall through from previous branch of the switch statement.\",", "+        "]}]}