{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a13199843a1cf69744126a18bd5f9c6b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4312534717a3cd487b1197e9ffdc4a09", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-    public void finishTree(DetailAST aRootAST)", "+    public void finishTree(DetailAST rootAST)", "-        final Set<String> keys = mStringMap.keySet();", "+        final Set<String> keys = stringMap.keySet();", "-            final List<StringInfo> hits = mStringMap.get(key);", "-            if (hits.size() > mAllowedDuplicates) {", "+            final List<StringInfo> hits = stringMap.get(key);", "+            if (hits.size() > allowedDuplicates) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd46f720720730bebb177f6433ab416d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "c037e6419d58716ddb82223eadbbef83cd9269fa", "commitAfterChange": "cf1d22f39fbde10e80414896a9424d706c544aaa", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-        final Set<String> keys = stringMap.keySet();", "-        for (String key : keys) {", "-            final List<StringInfo> hits = stringMap.get(key);", "+        for (Map.Entry<String, List<StringInfo>> stringListEntry : stringMap.entrySet()) {", "+            final List<StringInfo> hits = stringListEntry.getValue();", "-                log(line, col, MSG_KEY, key, hits.size());", "+                log(line, col, MSG_KEY, stringListEntry.getKey(), hits.size());"]}]}