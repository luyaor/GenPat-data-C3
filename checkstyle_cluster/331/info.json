{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "365bd9ca3f89de0d0ac9c4a56b466ff5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a00e73a2b68480dda1f5db308e7869c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "3b5c81da39e0a179d439ac18c880b3d79970037d", "commitAfterChange": "17754d363645285e49bf4323a1af5762af47a8ea", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          @Override         public void startElement(String aNamespaceURI,                                  String aLocalName,                                  String aQName,                                  Attributes aAtts)             throws SAXException", "signatureAfterChange": "          @Override         public void startElement(String aNamespaceURI,                                  String aLocalName,                                  String aQName,                                  Attributes aAtts)             throws SAXException", "diff": ["+            }", "+            else if (aQName.equals(MESSAGE)) {", "+", "+                //extract key and value", "+                final String key = aAtts.getValue(KEY);", "+                final String value = aAtts.getValue(VALUE);", "+", "+                //add to messages of configuration", "+                final DefaultConfiguration top =", "+                    mConfigStack.peek();", "+                top.addMessage(key, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df6a75458190b06de1a3be12ad38c22f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java", "commitBeforeChange": "b07beaaae4086e5245a309a2957f90461559a9b7", "commitAfterChange": "b30ed9fc87c0a74860cc355af259fc29f6d1b76f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-                    if (!mIgnoreModifiers) {", "+                    if (!mIgnoreModifiers", "+                        || state.mScopeState > STATE_INSTANCE_VARIABLE_DEF)", "+                    {", "-                    if (!mIgnoreModifiers) {", "-                        log(aAST, \"declaration.order.instance\");", "-                    }", "+                    log(aAST, \"declaration.order.instance\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e39ce5bc321afd33e889bf069b5755d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "425fd5a27cd567d5784bd246729c55cf8cda3dbd", "commitAfterChange": "6438bb246b9e6b2b6cd31e1c028853440d52d64b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "         public boolean isMatch(AuditEvent event)", "signatureAfterChange": "         public boolean isMatch(AuditEvent event)", "diff": ["-                else if (tagMessageRegexp != null) {", "+                else if (tagMessageRegexp == null) {", "+                    if (event.getModuleId() != null) {", "+                        final Matcher idMatcher = tagCheckRegexp.matcher(event.getModuleId());", "+                        match = idMatcher.find();", "+                    }", "+                }", "+                else {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ead182ea3a0cbac82984d634a5a70435", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "4542d7c95e17741da7aaedd0dc7d63a73c460cd5", "commitAfterChange": "bd8a1a545fd1bc19d5f84c5061c5383796a7c588", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static Set<String> getPackageNames(ClassLoader aClassLoader)         throws CheckstyleException", "signatureAfterChange": "     public static Set<String> getPackageNames(ClassLoader aClassLoader)         throws CheckstyleException", "diff": ["-                if (stream != null) {", "-                    try {", "-                        stream.close();", "-                    }", "-                    catch (IOException e) {", "-                        throw new CheckstyleException(", "-                                \"error closing stream\", e);", "-                    }", "-                }", "+                Utils.closeQuietly(stream);"]}]}