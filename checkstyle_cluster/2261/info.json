{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "64fc752defd3b9d03233acb9fccb747a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9856e773b2057b318fa8ace44770941", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheck.java", "commitBeforeChange": "7b8a3aa5bba1323a7bbb85b6dbd86835215a48fc", "commitAfterChange": "603c5bb53ea12900f6a1c8af0c4a765af36786e3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected boolean hasText(final DetailAST slistAST)", "signatureAfterChange": "     protected boolean hasText(final DetailAST slistAST)", "diff": ["-                for (int i = slistLineNo; i < rcurlyLineNo - 1; i++) {", "-                    if (!lines[i].trim().isEmpty()) {", "-                        retVal = true;", "-                        break;", "-                    }", "-                }", "+                retVal = !checkIsAllLinesAreWhitespace(lines, slistLineNo, rcurlyLineNo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd178c16d8219da1ddeffe20dcc45e30", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java", "commitBeforeChange": "e89837b42ece86ae3a0efc8ba272f550c98cd33c", "commitAfterChange": "9c21acf16a4d0dbae220f42c26f4917152c379d1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-                for (; headerLineNo < headerSize; headerLineNo++) {", "-                    if (!isMultiLine(headerLineNo)) {", "-                        log(1, MSG_HEADER_MISSING);", "-                        break;", "-                    }", "-                }", "+                logFirstSinglelineLine(headerLineNo, headerSize);", "+            }", "+        }", "+    }"]}]}