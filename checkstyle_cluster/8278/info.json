{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d74e985bb3423fd0131c81ac10a41f5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "255449835f652993bafbc147d555ca5c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "425fd5a27cd567d5784bd246729c55cf8cda3dbd", "commitAfterChange": "6438bb246b9e6b2b6cd31e1c028853440d52d64b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static boolean isSuppressed(String sourceName, int line,         int column)", "signatureAfterChange": "     public static boolean isSuppressed(AuditEvent event)", "diff": ["-    public static boolean isSuppressed(String sourceName, int line,", "-        int column) {", "+    public static boolean isSuppressed(AuditEvent event) {", "+        final String sourceName = event.getSourceName();", "+        final int line = event.getLine();", "+        final int column = event.getColumn();", "+        boolean suppressed = false;", "-            if (afterStart && beforeEnd && nameMatches) {", "-                return true;", "+            final boolean idMatches = event.getModuleId() != null", "+                && event.getModuleId().equals(entry.getCheckName());", "+            if (afterStart && beforeEnd && (nameMatches || idMatches)) {", "+                suppressed = true;", "-        return false;", "+        return suppressed;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daec80a4141d768ef2df0358bfc02c7b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavaDocTagContinuationIndentationCheck.java", "commitBeforeChange": "7564e8ca85b471a74225a8515994a0128aa1c548", "commitAfterChange": "ca34984cc3dcf86773cf7958f26f3816ae0dc764", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitJavadocToken(DetailNode aAst)", "signatureAfterChange": "      @Override     public void visitJavadocToken(DetailNode aAst)", "diff": ["-        final List<DetailNode> textNodes = getAllTextNodes(aAst);", "-", "-        for (DetailNode textNode : textNodes.subList(1, textNodes.size())) {", "-            final DetailNode whitespaceNode = JavadocUtils.getFirstChild(textNode);", "-", "-            if (whitespaceNode.getType() == JavadocTokenTypes.WS", "-                    && whitespaceNode.getText().length() - 1 != mOffset)", "+        final List<DetailNode> textNodes = getAllNewlineNodes(aAst);", "+        if (isInlineDescription(aAst)) {", "+            return;", "+        }", "+        for (DetailNode newlineNode : textNodes) {", "+            final DetailNode textNode = JavadocUtils.getNextSibling(JavadocUtils", "+                    .getNextSibling(newlineNode));", "+            if (textNode != null && textNode.getType() == JavadocTokenTypes.TEXT", "+                    && textNode.getChildren().length > 1)", "-                log(textNode.getLineNumber(), \"tag.continuation.indent\", mOffset);", "+                final DetailNode whitespace = JavadocUtils.getFirstChild(textNode);", "+                if (whitespace.getType() == JavadocTokenTypes.WS", "+                        && whitespace.getText().length() - 1 < mOffset)", "+                {", "+                    log(textNode.getLineNumber(), \"tag.continuation.indent\", mOffset);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f44e63c7e508b747bf609a548b452e29", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "10330437ddd4be125cb4109702d0d0b96ffe3303", "commitAfterChange": "d963b8bfc21b4f782e598c70be31d2123c4dbef7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private static String extractBaseName(File aFile)", "signatureAfterChange": "     private static String extractPropertyIdentifier(final File aFile)", "diff": ["-    private static String extractBaseName(File aFile)", "+    private static String extractPropertyIdentifier(final File aFile)", "-        String fileName = aFile.getPath();", "-        int k = fileName.indexOf(\"_\");", "-        if (k != -1) {", "-            return fileName.substring(0, k);", "-        }", "-        else {", "-            return fileName.substring(0, fileName.indexOf(\".\"));", "-        }", "+        final String filePath = aFile.getPath();", "+        final int dirNameEnd = filePath.lastIndexOf(File.separatorChar);", "+        final int baseNameStart = dirNameEnd + 1;", "+        final int underscoreIdx = filePath.indexOf('_', baseNameStart);", "+        final int dotIdx = filePath.indexOf('.', baseNameStart);", "+        final int cutoffIdx = (underscoreIdx != -1) ? underscoreIdx : dotIdx;", "+        return filePath.substring(0, cutoffIdx);"]}]}