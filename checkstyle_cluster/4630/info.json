{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d6815291cfdeb016e51efaeb5cca94e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25ccbb66685882a23b28d8f7c0d3d93a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java", "commitBeforeChange": "5d7226fac58883bc41058b28b8fcdb6f159cf1e2", "commitAfterChange": "75bbb441800de900e268cfa5ee82a64966b405b2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static boolean isOverriddenMethod(DetailAST ast)", "signatureAfterChange": "     private static boolean isOverriddenMethod(DetailAST ast)", "diff": ["+", "-        if (parent.getFirstChild().getFirstChild() != null) {", "-            final DetailAST annotation = parent.getFirstChild().getFirstChild();", "-            if (annotation.getType() == TokenTypes.ANNOTATION) {", "-                final DetailAST overrideToken = annotation.findFirstToken(TokenTypes.IDENT);", "-                if (\"Override\".equals(overrideToken.getText())) {", "-                    overridden = true;", "-                }", "+        final Optional<DetailAST> annotation =", "+            Optional.fromNullable(parent.getFirstChild().getFirstChild());", "+", "+        if (annotation.isPresent() && annotation.get().getType() == TokenTypes.ANNOTATION) {", "+            final Optional<DetailAST> overrideToken =", "+                Optional.fromNullable(annotation.get().findFirstToken(TokenTypes.IDENT));", "+            if (overrideToken.isPresent() && \"Override\".equals(overrideToken.get().getText())) {", "+                overridden = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "447ae43ab5c17f4a7b024ba915df56b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java", "commitBeforeChange": "b51b23798d3daeb8394533ac94531a22dbef14af", "commitAfterChange": "1edc81225c9d700685f5ed980a55b5a23d914d9e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private static boolean checkParams(DetailAST method)", "signatureAfterChange": "     private static boolean checkParams(DetailAST method)", "diff": ["-            final DetailAST arrayDecl = parameterType.findFirstToken(TokenTypes.ARRAY_DECLARATOR);", "+            final Optional<DetailAST> arrayDecl = Optional.fromNullable(", "+                parameterType.findFirstToken(TokenTypes.ARRAY_DECLARATOR));", "+            final Optional<DetailAST> varargs = Optional.fromNullable(", "+                params.getFirstChild().findFirstToken(TokenTypes.ELLIPSIS));", "-            if (arrayDecl != null) {", "-                final DetailAST arrayType = arrayDecl.getFirstChild();", "-                final FullIdent type = FullIdent.createFullIdent(arrayType);", "-                checkPassed = \"String\".equals(type.getText())", "-                        || \"java.lang.String\".equals(type.getText());", "+            if (arrayDecl.isPresent()) {", "+                checkPassed = isStringType(arrayDecl.get().getFirstChild());", "+            }", "+            else if (varargs.isPresent()) {", "+                checkPassed = isStringType(parameterType.getFirstChild());"]}]}