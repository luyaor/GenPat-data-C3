{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23da3003d1d043659c3ed0dc4cb8546d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04f761cf857b890c3d53f128a1cd2938", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testWIthMultilineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWIthMultilineBody()         throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest14.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambda14.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11f4044a03891660228e9d13a86912ce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void test() throws Exception", "signatureAfterChange": "      @Test     public void test() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ComplexityCheckTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputComplexityCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2025fb389b5c47c2f3446c57cec84f9f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "04483a77e8f20ef67db6467c477a7fcba129eef6", "commitAfterChange": "4564aecb5c1d694591feef433ce067d74e36d823", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void startElement(String aNamespaceURI,                              String aLocalName,                              String aQName,                              Attributes aAtts)             throws SAXException", "signatureAfterChange": "     public void startElement(String aNamespaceURI,                              String aLocalName,                              String aQName,                              Attributes aAtts)             throws SAXException", "diff": ["-        if (aQName.equals(\"config\")) {", "+        if (aQName.equals(\"module\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3319b679cba8ab1f000e5ddeb6e39f98", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "9c488c1f512ffcc58af433842c992bd3f85b2d63", "commitAfterChange": "f47587c9fb66cf46fbd2eb5691449cda6d551ecb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testDefault()         throws Exception", "signatureAfterChange": "      @Test     public void testDefault()         throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"checks/InputIllegalTokens.java\"), expected);", "+        verify(checkConfig, getPath(\"InputIllegalTokens.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78663c19456d6653e9f6ea24fe2bdafe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java", "commitBeforeChange": "2440fa45b2ccf80b8ba8d044457a87a020832293", "commitAfterChange": "ee6de76ea79d5e8400670dcf441f481e291d40e5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public final void configure(Configuration aConfiguration)         throws CheckstyleException", "signatureAfterChange": "     public final void configure(Configuration aConfiguration)         throws CheckstyleException", "diff": ["-                    \"Cannot set property '\" + key + \"' in module\"", "+                    \"Cannot set property '\" + key + \"' in module \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2c022b84961bf64ce0128e3c38d7db1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/HideUtilityClassConstructorCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testEmptyClassWithOnlyPrivateFields() throws Exception", "signatureAfterChange": "      @Test     public void testEmptyClassWithOnlyPrivateFields() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"HideUtilityClassConstructor3041574_2.java\"), expected);", "+        verify(checkConfig, getPath(\"InputHideUtilityClassConstructor3041574_2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b85e8d4f96efdfbaf81941dcb7581a3f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testHtmlComment() throws Exception", "signatureAfterChange": "      @Test     public void testHtmlComment() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputJavadocStyleCheckHtmlComment.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJavadocStyleHtmlComment.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0f4cafc65c96c46a6fdfb8a3d2499f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     public void testWithSumLessThenMinDefMsg() throws Exception", "signatureAfterChange": "      @Test     public void testWithSumLessThenMinDefMsg() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputReturnFromFinallyCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputReturnFromFinally.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f331b4ec6bb0ec380193b471714f676d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testTwoInJavadocWithoutAnnotation() throws Exception", "signatureAfterChange": "      @Test     public void testTwoInJavadocWithoutAnnotation() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputMissingDeprecatedCheckTest1.java\"), expected);", "+        verify(checkConfig, getPath(\"InputMissingDeprecated1.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb316b56540018771c2e9628ebcb6b99", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule232specialescape/IllegalTokenTextTest.java", "commitBeforeChange": "fbd3d53641368f6bcacc7b8015d434625fda116b", "commitAfterChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void illegalTokensTest() throws Exception", "signatureAfterChange": "      @Test     public void illegalTokensTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"IllegalTokenTextInput\");", "+        final String filePath = builder.getFilePath(\"InputIllegalTokenText\");"]}]}