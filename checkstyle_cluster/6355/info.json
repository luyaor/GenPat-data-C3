{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e45d103f922fa76f3ee99e8b2a901e8d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "305f23bd7202646836fea0dfc8a3ef4f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final int lineNo = aAST.getLineNo();", "+        final int lineNo = ast.getLineNo();", "-            log(lineNo, \"type.missingTag\", mTag);", "+            log(lineNo, \"type.missingTag\", tag);", "-            checkTag(lineNo, cmt.getText(), mTag, mTagRE, mTagFormatRE,", "-                mTagFormat);", "+            checkTag(lineNo, cmt.getText(), tag, tagRE, tagFormatRE,", "+                tagFormat);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a48186f8921297092c3e875f2989a76e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/FileContentsHolder.java", "commitBeforeChange": "c5455b699d4f7f0e58fa1f5e718704c738134033", "commitAfterChange": "e7b146aa34bbe3b15281109837d18777adb73d02", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void destroy()", "diff": ["-    public void finishTree(DetailAST aRootAST)", "+    public void destroy()", "-        // This seems like the right thing to do, but is called before", "-        // the messages are passed to the filters.", "-        //sFileContents.set(null);", "+        // This needs to be called in destroy, rather than finishTree()", "+        // as finishTree() is called before the messages are passed to the", "+        // filters. Without calling remove, there is a memory leak.", "+        FILE_CONTENTS.remove();"]}]}