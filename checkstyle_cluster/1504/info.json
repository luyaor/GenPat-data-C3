{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e16e63c5d18dfb3b04ccddce9c6ddc9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e6fc3e5e60b9150caf0ad834da816eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/doclets/CheckDocsDoclet.java", "commitBeforeChange": "38ee64b6011c7987647fda8cc999c978c2dd094e", "commitAfterChange": "47bfe73b631144b19b447a22e96f51853fb53846", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public static boolean start(RootDoc aRoot) throws IOException", "signatureAfterChange": "     public static boolean start(RootDoc aRoot) throws IOException", "diff": ["-            File outfile = new File(destDir, \"config_\" + pageName + \".xml\");", "-            Writer writer = new FileWriter(outfile);", "-            page.write(writer);", "-            writer.close();", "+            // only documentation for duplicates is generated for now", "+            if  (\"duplicates\".equals(pageName)) {", "+                File outfile = new File(destDir, \"config_\" + pageName + \".xml\");", "+                Writer writer = new FileWriter(outfile);", "+                page.write(writer);", "+                writer.close();", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e58074291dd55f663dda6e7a778a47c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "2bf724effc3c43a43fbe254dd81985f618be8eee", "commitAfterChange": "efccc132cea8ce1efad0e5318b8419cc603f8957", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setGroups(String[] aGroups)", "signatureAfterChange": "     public void setGroups(String[] aGroups)", "diff": ["-            if (!pkg.endsWith(\".\")) {", "+            // if the pkg name is the wildcard, record the", "+            // position for later reference", "+            if (WILDCARD_GROUP_NAME.equals(pkg)) {", "+                mWildcardGroupIndex = i;", "+            }", "+            else if (!pkg.endsWith(\".\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5f766ba9cb1bc2b19e2cd39bee8276a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "f8f6ded7b447d5136ae01ad878966e2955ca730a", "commitAfterChange": "3c0608f33a6c41cf96056c52ae99070cbe5062d5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void endElement(String aNamespaceURI,                            String aLocalName,                            String aQName)", "signatureAfterChange": "     public void endElement(String aNamespaceURI,                            String aLocalName,                            String aQName)", "diff": ["-        if (\"check\".equals(aQName)) {", "+        if (\"global\".equals(aQName)) {", "+            isInGlobalElement = false;", "+        }", "+        else if (\"check\".equals(aQName)) {"]}]}