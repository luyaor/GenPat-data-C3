{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "185de3c6ec466dbe21c4f1a8e0e1f131", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e1a67e3725fd6f890629f4c5c933d7f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "commitAfterChange": "6ee4a0f805d528cdee03cfc175502d15b5722dab", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private static boolean isCharacterValidAfterGenericEnd(char charAfter)", "signatureAfterChange": "     private static boolean isCharacterValidAfterGenericEnd(char charAfter)", "diff": ["-        return Character.isWhitespace(charAfter)", "-                || charAfter == '(' || charAfter == ')'", "-                || charAfter == ',' || charAfter == '['", "-                || charAfter == '.' || charAfter == ':'", "-                || charAfter == ';';", "+        return charAfter == '(' || charAfter == ')'", "+            || charAfter == ',' || charAfter == '['", "+            || charAfter == '.' || charAfter == ':'", "+            || charAfter == ';'", "+            || Character.isWhitespace(charAfter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aceb7130cb13b79c169c4ea2c3a5c3d3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheck.java", "commitBeforeChange": "dce9c0687bdf0e40982e2afc49186626367beadb", "commitAfterChange": "0e02e3565f37776783e6711ca46f1715af415ed3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static boolean isFollowedByWhitespace(DetailAST targetAST, String line)", "signatureAfterChange": "     private static boolean isFollowedByWhitespace(DetailAST targetAST, String line)", "diff": ["-", "-            if (targetAST.getType() == TokenTypes.SEMI", "-                && (charAfter == ';' || charAfter == ')')) {", "-                followedByWhitespace = true;", "-            }", "-            else if (!Character.isWhitespace(charAfter) && !isEmptyForIterator(targetAST)) {", "-                followedByWhitespace = false;", "-            }", "+            followedByWhitespace = Character.isWhitespace(charAfter)", "+                || targetAST.getType() == TokenTypes.SEMI", "+                    && (charAfter == ';' || charAfter == ')');", "-", "-    }"]}]}