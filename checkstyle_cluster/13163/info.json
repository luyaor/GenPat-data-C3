{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "730bee5acdf777830e9f98e2fb49ffe2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6755f2135654b5dc7f88f389a624572e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/ClassResolverTest.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testResolveQualifiedNameFails() throws Exception", "signatureAfterChange": "      @Test     public void testResolveQualifiedNameFails() throws Exception", "diff": ["-        catch (IllegalStateException e) {", "+        catch (IllegalStateException ex) {", "-            assertTrue(e.getCause() instanceof ClassNotFoundException);", "-            assertTrue(e.getMessage().endsWith(\"expected exception\"));", "+            assertTrue(ex.getCause() instanceof ClassNotFoundException);", "+            assertTrue(ex.getMessage().endsWith(\"expected exception\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f806b8c1aecfe309dd28dedc16d06ed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "88f75f5413914bea5b39ba318edf912ee706226d", "commitAfterChange": "f8bd84c6e3df8e4f1b14ce78e8dddecdb1051df9", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "      @Test     public void testLoadProperties_IOException() throws Exception", "signatureAfterChange": "      @Test     public void testLoadProperties_IOException() throws Exception", "diff": ["-            method.invoke(null, new File(File.separator + \"invalid\"));", "+            // https://support.microsoft.com/en-us/kb/177506", "+            method.invoke(null, new File(File.separator + \":invalid\"));", "-            assertTrue(e.getCause().getMessage().endsWith(\"invalid'.\"));", "+            assertTrue(e.getCause().getMessage().endsWith(\":invalid'.\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a60393c407f9fd615f4201f59607bccc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/ClassResolverTest.java", "commitBeforeChange": "03f2be49f7ad3fc9d0143782b020a169f28e50a9", "commitAfterChange": "0c2a64d9f02ab5b94bbf4213cb2978f7b459b6f5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testResolveQualifiedNameFails() throws Exception", "signatureAfterChange": "      @Test     public void testResolveQualifiedNameFails() throws Exception", "diff": ["-        PowerMockito.doThrow(new ClassNotFoundException(\"excpected exception\"))", "+        PowerMockito.doThrow(new ClassNotFoundException(\"expected exception\"))", "-            assertTrue(e.getMessage().endsWith(\"excpected exception\"));", "+            assertTrue(e.getMessage().endsWith(\"expected exception\"));"]}]}