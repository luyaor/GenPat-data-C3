{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f2ad74013245505820b22b6ba4ac8689", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "170fe82b95424c675ec1b67da0632e09", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractTypeAwareCheckTest.java", "commitBeforeChange": "1f0b9653e13faeae357ba84e7a7702eecd208fe9", "commitAfterChange": "bf94ea4127b17c5ab6987ee2e294d2d4b6a1c20f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testWithoutLogErrors() throws Exception", "signatureAfterChange": "      @Test     public void testWithoutLogErrors() throws Exception", "diff": ["-            verify(config, getPath(\"javadoc/InputLoadErrors.java\"), expected);", "+            verify(config, getPath(\"InputLoadErrors.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "355f78673bb053667ff9d037fa8417c0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule713atclauses/AtclauseOrderTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54a2b09cb3a3c8374cb10dea0b9863f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Test     public void testBadTag() throws Exception", "signatureAfterChange": "      @Test     public void testBadTag() throws Exception", "diff": ["-            \"3:4: Unknown tag 'mytag'.\",", "+            \"5:4: Unknown tag 'mytag'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9f3970f227c4beb63e526b47f88a61c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java", "commitBeforeChange": "edc4cc9ffc1a5b872398af9d6735b4bde75de385", "commitAfterChange": "a077b7282714b38286a09dcea10b710e5121a246", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testCtorDef() throws Exception", "signatureAfterChange": "      @Test     public void testCtorDef() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ComplexityCheckTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"ExecutableStatementCountInput.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdd88d1bac47850a3c240ee87d782197", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyCatchBlockTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void emptyBlockTestCatch() throws Exception", "signatureAfterChange": "      @Test     public void emptyBlockTestCatch() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"EmptyBlockInputCatch\");", "+        final String filePath = builder.getFilePath(\"InputEmptyBlockCatch\");"]}]}