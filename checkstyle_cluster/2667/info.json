{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d299c4e9ba524b4320b35a0803407cf5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "859816cf855bd100625a3d00fa06884e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)             throws CheckstyleException", "signatureAfterChange": "     private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)             throws CheckstyleException", "diff": ["-                    throw new CheckstyleException(", "-                            \"Property '\" + key + \"' in module \"", "-                             + moduleName", "-                             + \" does not exist, please check the documentation\");", "+                    final String message = String.format(\"Property '%s' in module %s does not \"", "+                            + \"exist, please check the documentation\", key, moduleName);", "+                    throw new CheckstyleException(message);", "-            throw new CheckstyleException(", "-                \"Cannot set property '\" + key + \"' to '\" + value", "-                + \"' in module \"  + moduleName, e);", "+            final String message = String.format(\"Cannot set property '%s' to '%s' in module %s\",", "+                    key, value, moduleName);", "+            throw new CheckstyleException(message, e);", "-            throw new CheckstyleException(", "-                \"illegal value '\" + value + \"' for property '\" + key", "-                + \"' of module \" + moduleName, e);", "+            final String message = String.format(\"illegal value '%s' for property '%s' of \"", "+                    + \"module %s\", value, key, moduleName);", "+            throw new CheckstyleException(message, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba13e7df3778f432ab695bbc58234a80", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static FilterSet loadSuppressions(             InputSource source, String sourceName)         throws CheckstyleException", "signatureAfterChange": "     private static FilterSet loadSuppressions(             InputSource source, String sourceName)         throws CheckstyleException", "diff": ["-            throw new CheckstyleException(\"Unable to parse \"", "-                    + sourceName + \" - \" + e.getMessage(), e);", "+            final String message = String.format(\"Unable to parse %s - %s\",", "+                    sourceName, e.getMessage());", "+            throw new CheckstyleException(message, e);", "-            throw new CheckstyleException(\"Number format exception \"", "-                + sourceName + \" - \" + e.getMessage(), e);", "+            final String message = String.format(\"Number format exception %s - %s\",", "+                    sourceName, e.getMessage());", "+            throw new CheckstyleException(message, e);"]}]}