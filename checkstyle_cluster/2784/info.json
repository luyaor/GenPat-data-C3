{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff883ea6e71001efd30dac5389d3f2a9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03ebd0eeb0ac206e3477b986f90e4b2e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "      @Test     public void testGenerics1() throws Exception", "signatureAfterChange": "      @Test     public void testGenerics1() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"TestGenerics.java\"), expected);", "+        verify(checkConfig, getPath(\"InputTestGenerics.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30ba7fd4a5614b431333b47a4dc63b85", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "f0f26b9e91cde3e01f276c7f4194b8f6cf274aa6", "commitAfterChange": "aee8f8230b26d2a832be917ebe593283400365a0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testAllowNoEmptyLineBetweenFields() throws Exception", "signatureAfterChange": "      @Test     public void testAllowNoEmptyLineBetweenFields() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"whitespace/InputEmptyLineSeparatorCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputEmptyLineSeparatorCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40dd896740ffb7d6fd44f7466cfae704", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/DefaultMethodsTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testSwitch()         throws Exception", "signatureAfterChange": "      @Test     public void testSwitch()         throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputDefaultMethodsTest2.java\"), expected);", "+        verify(checkConfig, getPath(\"InputDefaultMethods2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0eb71d6480b40fd547b87e208ac4bcc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIntegerOverflow() throws Exception", "signatureAfterChange": "      @Test     public void testIntegerOverflow() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ComplexityOverflow.java\"), expected);", "+        verify(checkConfig, getPath(\"InputComplexityOverflow.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec19e514b8f1e17f369274a05b6eecdc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 55, "signatureBeforeChange": "      @Test     public void testThrowsIndentationLevel() throws Exception", "signatureAfterChange": "      @Test     public void testThrowsIndentationLevel() throws Exception", "diff": ["-        verifyWarns(checkConfig, getPath(\"indentation/InvalidInputThrowsIndent.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"InvalidInputThrowsIndent.java\"), expected);"]}]}