{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cc28ad8231c5b8afd287dee1f3332f70", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38253a53e1afd3860e7e8165d3702fb7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "c37cc9e521b884aec06593210191e9200c726788", "commitAfterChange": "88f6d6ffe7c1735f48f24cf5cd38c34d7326e3fd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public int hashCode()", "signatureAfterChange": "     public int hashCode()", "diff": ["+        int textCode = (getText() == null) ? 0 : getText().hashCode();", "-        result = HASH_MULT * result + getText().hashCode();", "-        result = HASH_MULT * result + mLineNo;", "-        result = HASH_MULT * result + mColumnNo;", "+        result = HASH_MULT * result + textCode;", "+        result = HASH_MULT * result + getLineNo();", "+        result = HASH_MULT * result + getColumnNo();", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71bbec2d07011d377edeaa416b98cfbf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "contrib/bcel/src/checkstyle/com/puppycrawl/tools/checkstyle/bcel/checks/AbstractReferenceCheck.java", "commitBeforeChange": "731b581a1c0406506266226c50be8796179464e5", "commitAfterChange": "db428ff350e76d0609e192fc48314cf226677fde", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected boolean ignore(String aClassName, String aName)", "signatureAfterChange": "     protected boolean ignore(String aClassName, FieldOrMethod aFieldOrMethod)", "diff": ["-    protected boolean ignore(String aClassName, String aName)", "+    protected boolean ignore(String aClassName, FieldOrMethod aFieldOrMethod)", "-        return (mIgnoreClassNameRegexp.match(aClassName)", "-            || mIgnoreNameRegexp.match(aName));", "+        final String fieldOrMethodName = aFieldOrMethod.getName();", "+        return (!equalScope(aFieldOrMethod)", "+            || mIgnoreClassNameRegexp.match(aClassName)", "+            || mIgnoreNameRegexp.match(fieldOrMethodName));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d73460bb209dd01040100d04b9d99198", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/VerifierImpl.java", "commitBeforeChange": "7d82fd670a2111e78de45cd09da5f184fc93d6ee", "commitAfterChange": "17d3b314bbb0f23622b719c089c1b3ca1607c1da", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void verifyType(MyModifierSet aMods, MyCommonAST aType)", "signatureAfterChange": "     public void verifyType(MyModifierSet aMods, MyCommonAST aType)", "diff": ["-        if (mConfig.isIgnoreJavadoc()) {", "-            return;", "+        final Scope typeScope =", "+            inInterfaceBlock() ? Scope.PUBLIC : aMods.getVisibilityScope();", "+", "+        if (!inCheckScope(typeScope)) {", "+            return; // no need to really check anything", "-            // demand that types have Javadoc, so ignore mRelaxJavadoc"]}]}