{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f82aedc1c90cd83018aa9de48fba4dc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e0d964de9bf9c2780e0cb2248d44751", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void logChildError(int aLine,                                int aActualLevel,                                IndentLevel aExpectedLevel)", "signatureAfterChange": "     private void logChildError(int line,                                int actualLevel,                                IndentLevel expectedLevel)", "diff": ["-    private void logChildError(int aLine,", "-                               int aActualLevel,", "-                               IndentLevel aExpectedLevel)", "+    private void logChildError(int line,", "+                               int actualLevel,", "+                               IndentLevel expectedLevel)", "-        if (aExpectedLevel.isMultiLevel()) {", "+        if (expectedLevel.isMultiLevel()) {", "-        mIndentCheck.indentationLog(aLine, messageKey,", "-            mTypeName, aActualLevel, aExpectedLevel);", "+        indentCheck.indentationLog(line, messageKey,", "+            typeName, actualLevel, expectedLevel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc13bee7f49cf1049c1e593a3d30fbd4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected final void logError(DetailAST aAst, String aSubtypeName,                                   int aActualLevel, IndentLevel aExpectedLevel)", "signatureAfterChange": "     protected final void logError(DetailAST ast, String subtypeName,                                   int actualLevel, IndentLevel expectedLevel)", "diff": ["-    protected final void logError(DetailAST aAst, String aSubtypeName,", "-                                  int aActualLevel, IndentLevel aExpectedLevel)", "+    protected final void logError(DetailAST ast, String subtypeName,", "+                                  int actualLevel, IndentLevel expectedLevel)", "-            (\"\".equals(aSubtypeName) ? \"\" : (\" \" + aSubtypeName));", "+            (\"\".equals(subtypeName) ? \"\" : (\" \" + subtypeName));", "-        if (aExpectedLevel.isMultiLevel()) {", "+        if (expectedLevel.isMultiLevel()) {", "-        mIndentCheck.indentationLog(aAst.getLineNo(), messageKey,", "-            mTypeName + typeStr, aActualLevel, aExpectedLevel);", "+        indentCheck.indentationLog(ast.getLineNo(), messageKey,", "+            typeName + typeStr, actualLevel, expectedLevel);"]}]}