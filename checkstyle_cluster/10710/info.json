{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fcf010a88b33cfa2914157dd6e8bc92f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20e7e2c3a9feced746782b38e3267913", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule341onetoplevel/OneTopLevelClassTest.java", "commitBeforeChange": "8becd3328d9f043288f1b747af9ee50aaccd48dc", "commitAfterChange": "13087245589b5c5ea7d732bb939c6ab2504fcd26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        builder = new ConfigurationBuilder(new File(\"src/\"));", "+        builder = new ConfigurationBuilder(new File(\"src/it/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f578ca19eb3f5a3d9383b15d4b90f9b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheckTest.java", "commitBeforeChange": "3d81ece0258005a3264d550f8cffeedc27a3765c", "commitAfterChange": "47e6c23b4d9cd01731a90e3caeea33ca53a15516", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["+", "-        verify(checkConfig, getPath(\"coding/InputFinalLocalVariable.java\"), expected);", "+        verify(checkConfig, getPath(\"InputFinalLocalVariable.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cf62b7894c0e3f6c99d824a8bd10080", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheckTest.java", "commitBeforeChange": "e7547bb7ddccec6737cea118a41864fc349ea1d2", "commitAfterChange": "d220d7c3cc74490c7f2923f2ea85d00133afe98c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testNumberFormatException() throws Exception", "signatureAfterChange": "      @Test     public void testNumberFormatException() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"javadoc/InputTestNumberFomatException.java\"), expected);", "+        verify(checkConfig, getPath(\"javadoc/InputTestNumberFormatException.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42d25a2a2e741c066c17c8a2fff4352f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testIgnoreCommentsInlineMiddle() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreCommentsInlineMiddle() throws Exception", "diff": ["-            \"21: Line matches the illegal pattern '\" + illegal + \"'.\",", "+            \"23: Line matches the illegal pattern '\" + illegal + \"'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7504bfc4f0f9dacd5d381836f95cb947", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/IndentationCheckTest.java", "commitBeforeChange": "bf6758b29dbb6f0e22d4951ea3bd25fdf45299fc", "commitAfterChange": "eaad55fdba73e17e103dc6600867f26fd6a3896b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "               public void testInvalidMethodWithChecker()         throws Exception", "signatureAfterChange": "               public void testInvalidMethodWithChecker()         throws Exception", "diff": ["-            \"158: method def throws at indentation level 6 not at correct indentation, 4\",", "+            \"158: method def throws at indentation level 6 not at correct indentation, 8\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b6a9260833d9d5fb2c0a7e08be89963", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MissingSwitchDefaultCheckTest.java", "commitBeforeChange": "b10558945cf4b11edfd4829945ae797ff01a6e00", "commitAfterChange": "d0bf96d90dc8b23c5831955bc9f28a5d79dbdb55", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testMissingSwitchDefault() throws Exception", "signatureAfterChange": "      @Test     public void testMissingSwitchDefault() throws Exception", "diff": ["-            \"15:9: switch without \\\"default\\\" clause.\",", "+            \"17:9: switch without \\\"default\\\" clause.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1fe2d7dca294585a22347d16d8bdf77", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testHtml() throws Exception", "signatureAfterChange": "      @Test     public void testHtml() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"InputJavadocStyleCheck.java\"), expected);", "+        verify(checkConfig, getPath(\"InputJavadocStyle.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed4db9f303db06de31a785205222e4b0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheckTest.java", "commitBeforeChange": "ba4d62dc78cf7a648771b1be9646cac4bab27676", "commitAfterChange": "677acc1e8491acffd24c859e553b06362da0d471", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIgnoreMethodNames() throws Exception", "signatureAfterChange": "      @Test     public void testIgnoreMethodNames() throws Exception", "diff": ["-            \"16:13: Declaring variables, return values or parameters of type 'java.util.Hashtable' is not allowed.\",", "+            \"16:13: Declaring variables, return values or parameters of type 'java.util.TreeSet' is not allowed.\","]}]}