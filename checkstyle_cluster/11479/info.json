{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef8c66f0da3b8827f9e32b6ad9aaac3f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0674933e5f17650eab19c38ea24b1d27", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 62, "signatureBeforeChange": "     private void checkThrowsTags(List aTags, List aThrows)", "signatureAfterChange": "     private void checkThrowsTags(List aTags, List aThrows)", "diff": ["-                        log(tag.getLineNo(),", "-                            \"Unable to get class information for @throws tag '\"", "-                            + tag.getArg1() + \"'.\");", "+                        log(tag.getLineNo(), \"javadoc.classInfo\",", "+                            \"@throws\", tag.getArg1());", "-                    log(tag.getLineNo(),", "-                        \"Unused @throws tag for '\" + tag.getArg1() + \"'.\");", "+                    log(tag.getLineNo(), \"javadoc.unusedTag\",", "+                        \"@throws\", tag.getArg1());", "-            log(t.getLineNo(), t.getColumnNo() - 1,", "-                \"Expected @throws tag for '\" + t.getText() + \"'.\");", "+            log(t.getLineNo(), t.getColumnNo() - 1, \"javadoc.expectedTag\",", "+                \"@throws\", t.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "376109b8964fd62859de3d3df5a04015", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     void verifyVariable(MyVariable aVar)", "signatureAfterChange": "     void verifyVariable(MyVariable aVar)", "diff": ["-                \"variable '\" + aVar.getText() + \"' missing Javadoc.\");", "+                \"variable.missingJavadoc\", aVar.getText());", "-                            \"variable '\" + aVar.getText()", "-                            + \"' must be private and have accessor methods.\");", "+                            \"variable.notPrivate\", aVar.getText());", "-                        \"variable '\" + aVar.getText()", "-                        + \"' must be private and have accessor methods.\");", "+                        \"variable.notPrivate\", aVar.getText());"]}]}