{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35489260ffa479af394f3df0120027d2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dc1e9633eddeabc70753bac9ceaf0c3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/VerifierImpl.java", "commitBeforeChange": "11be0e3198d3b011040fe0a0563e7dec589f87bb", "commitAfterChange": "4fade39e72675b776ef27c5fd84531bcb850da37", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     private String[] getJavadocBefore(int aLineNo)", "signatureAfterChange": "     private String[] getJavadocBefore(int aLineNo)", "diff": ["-        // #HACK#: should be improved to skip blank lines.", "-        return (String[]) mComments.get(new Integer(aLineNo - 1));", "+        int lineNo = aLineNo - 1;", "+", "+        // skip blank lines", "+        while ((lineNo > 0) && lineIsBlank(lineNo)) {", "+            lineNo--;", "+        }", "+", "+        return (String[]) mComments.get(new Integer(lineNo));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63b5459de72a90fb932d8a4f46934a9e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/j2ee/Utils.java", "commitBeforeChange": "fd6a743fd4b3c9283d62174327dd978bda694892", "commitAfterChange": "b9b72f969209ac4edb9c6b02aaf8e2f590d0b737", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static boolean hasPublicConstructor(         DetailAST aAST,         int aParameterCount)", "signatureAfterChange": "     public static boolean hasPublicConstructor(         DetailAST aAST,         int aParameterCount)", "diff": ["-        if (objBlock != null) {", "-            DetailAST child = (DetailAST) objBlock.getFirstChild();", "-            while (child != null) {", "-                if (child.getType() == TokenTypes.CTOR_DEF) {", "-                    final DetailAST parameters =", "-                        child.findFirstToken(TokenTypes.PARAMETERS);", "-                    if (Utils.isPublic(child)", "-                        && (parameters.getChildCount() == aParameterCount))", "-                    {", "-                        return true;", "-                    }", "-                }", "-                child = (DetailAST) child.getNextSibling();", "-            }", "+        if (objBlock == null) {", "+            return false;", "-        return false;", "+        int constructorCount = 0;", "+        DetailAST child = (DetailAST) objBlock.getFirstChild();", "+        while (child != null) {", "+            if (child.getType() == TokenTypes.CTOR_DEF) {", "+                constructorCount++;", "+                final DetailAST parameters =", "+                    child.findFirstToken(TokenTypes.PARAMETERS);", "+                if (Utils.isPublic(child)", "+                    && (parameters.getChildCount() == aParameterCount))", "+                {", "+                    return true;", "+                }", "+            }", "+            child = (DetailAST) child.getNextSibling();", "+        }", "+        // implicit, no parameter constructor?", "+        return ((constructorCount == 0) && (aParameterCount == 0));"]}]}