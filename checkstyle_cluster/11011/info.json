{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62977ccf5ff0ab7390fadc69d4347eb2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25545365eec91522b11fc887281de95f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocTypeCheck.java", "commitBeforeChange": "f1918ff49966b751181d659f37eca87f882a7d5d", "commitAfterChange": "4c653936fa5fe49ebda5bf3f4820ad9e0ea6c594", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setVersionFormat(String aFormat)", "signatureAfterChange": "     public void setVersionFormat(String aFormat)         throws ConversionException", "diff": ["-    /** @param aFormat version tag pattern */", "+     */", "+        throws ConversionException", "-        mVersionRE = Utils.createRE(\"@version\\\\s+\" + aFormat);", "+        try {", "+            mVersionRE = Utils.getRE(\"@version\\\\s+\" + aFormat);", "+        }", "+        catch (RESyntaxException e) {", "+            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9de20f4065370e87fcc05a3b5c43d46f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocTypeCheck.java", "commitBeforeChange": "f1918ff49966b751181d659f37eca87f882a7d5d", "commitAfterChange": "4c653936fa5fe49ebda5bf3f4820ad9e0ea6c594", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setAuthorFormat(String aFormat)", "signatureAfterChange": "     public void setAuthorFormat(String aFormat)         throws ConversionException", "diff": ["-    /** @param aFormat author tag pattern */", "+     */", "-    {", "-        mAuthorRE = Utils.createRE(\"@author\\\\s+\" + aFormat);", "+        throws ConversionException", "+    {      ", "+        try {", "+            mAuthorRE = Utils.getRE(\"@author\\\\s+\" + aFormat);", "+        }", "+        catch (RESyntaxException e) {", "+            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+        }"]}]}