{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "79373713331efd83153e0799e60ae71e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b193062e5b52bcf07ee118b2cfd2bca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java", "commitBeforeChange": "ef422e76c6b0bcac8fda2608a4d2d4301e09eca4", "commitAfterChange": "d282d5b8db9eba5943d1cb0269315744d5344a47", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        final DetailAST lcurly = details.lcurly;", "+        final String violation;", "+        if (shouldStartLine) {", "+            final String targetSourceLine = getLines()[rcurly.getLineNo() - 1];", "+            violation = validate(details, getAbstractOption(), true, targetSourceLine);", "+        }", "+        else {", "+            violation = validate(details, getAbstractOption(), false, \"\");", "+        }", "-        validate(details, rcurly, lcurly);", "+        if (!violation.isEmpty()) {", "+            log(rcurly, violation, \"}\", rcurly.getColumnNo() + 1);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f946cfaf0411aba72dadceb118acbed6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/AbstractParenPadCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected void processRight(DetailAST aAST)", "signatureAfterChange": "     protected void processRight(DetailAST ast)", "diff": ["-    protected void processRight(DetailAST aAST)", "+    protected void processRight(DetailAST ast)", "-        final String line = getLines()[aAST.getLineNo() - 1];", "-        final int before = aAST.getColumnNo() - 1;", "+        final String line = getLines()[ast.getLineNo() - 1];", "+        final int before = ast.getColumnNo() - 1;", "-                log(aAST.getLineNo(), before, \"ws.preceded\", \")\");", "+                log(ast.getLineNo(), before, \"ws.preceded\", \")\");", "-                log(aAST.getLineNo(), aAST.getColumnNo(),", "+                log(ast.getLineNo(), ast.getColumnNo(),"]}]}