{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b9ce31e9fab9258031d6c29df420212", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dd11aed244109e73e1c56f00753fc46", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/StringLiteralEqualityCheck.java", "commitBeforeChange": "eeb20e6c8cc86d2d283c254ddcddf89f46aa5190", "commitAfterChange": "d56a2a366c6f9e3e8639d492d548ae562b75dc81", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     public int[] getDefaultTokens()", "signatureAfterChange": "      @Override     public int[] getDefaultTokens()", "diff": ["-        return new int[] {TokenTypes.EQUAL, TokenTypes.NOT_EQUAL};", "+        return getAcceptableTokens();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dba7055e0526ddc85017ebed1003e6a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OverloadMethodsDeclarationOrderCheck.java", "commitBeforeChange": "eeb20e6c8cc86d2d283c254ddcddf89f46aa5190", "commitAfterChange": "d56a2a366c6f9e3e8639d492d548ae562b75dc81", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     public int[] getDefaultTokens()", "signatureAfterChange": "      @Override     public int[] getDefaultTokens()", "diff": ["-        return new int[] {", "-            TokenTypes.OBJBLOCK,", "-        };", "+        return getAcceptableTokens();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86775a2c65c3a02b16a8e847a1ca7dd1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "eeb20e6c8cc86d2d283c254ddcddf89f46aa5190", "commitAfterChange": "d56a2a366c6f9e3e8639d492d548ae562b75dc81", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public int[] getDefaultTokens()", "signatureAfterChange": "      @Override     public int[] getDefaultTokens()", "diff": ["-        return new int[] {TokenTypes.VARIABLE_DEF};", "+        return getAcceptableTokens();"]}]}