{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa21eec37eaa2aebf337ddb2bbb6e74c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa70a7c823dd7c0b06bab594e37277c5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private static Options buildOptions()", "signatureAfterChange": "     private static Options buildOptions()", "diff": ["-        options.addOption(\"c\", true, \"Sets the check configuration file to use.\");", "-        options.addOption(\"o\", true, \"Sets the output file. Defaults to stdout\");", "-        options.addOption(\"p\", true, \"Loads the properties file\");", "-        options.addOption(\"f\", true, \"Sets the output format. (plain|xml). Defaults to plain\");", "-        options.addOption(\"v\", false, \"Print product version and exit\");", "+        options.addOption(OPTION_C_NAME, true, \"Sets the check configuration file to use.\");", "+        options.addOption(OPTION_O_NAME, true, \"Sets the output file. Defaults to stdout\");", "+        options.addOption(OPTION_P_NAME, true, \"Loads the properties file\");", "+        options.addOption(OPTION_F_NAME, true, String.format(", "+                \"Sets the output format. (%s|%s). Defaults to %s\",", "+                PLAIN_FORMAT_NAME, XML_FORMAT_NAME, PLAIN_FORMAT_NAME));", "+        options.addOption(OPTION_V_NAME, false, \"Print product version and exit\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1ef9e0f867f46f61e1284641f4ceaf0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static List<String> validateCli(CommandLine cmdLine)", "signatureAfterChange": "     private static List<String> validateCli(CommandLine cmdLine)", "diff": ["-        if (cmdLine.hasOption(\"c\")) {", "+        if (cmdLine.hasOption(OPTION_C_NAME)) {", "-            if (cmdLine.hasOption(\"f\")) {", "-                final String format = cmdLine.getOptionValue(\"f\");", "-                if (!\"plain\".equals(format) && !\"xml\".equals(format)) {", "+            if (cmdLine.hasOption(OPTION_F_NAME)) {", "+                final String format = cmdLine.getOptionValue(OPTION_F_NAME);", "+                if (!PLAIN_FORMAT_NAME.equals(format) && !XML_FORMAT_NAME.equals(format)) {", "-                            + \" Found '%s' but expected 'plain' or 'xml'.\", format));", "+                            + \" Found '%s' but expected '%s' or '%s'.\",", "+                            format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME));", "-            if (cmdLine.hasOption(\"p\")) {", "-                final String propertiesLocation = cmdLine.getOptionValue(\"p\");", "+            if (cmdLine.hasOption(OPTION_P_NAME)) {", "+                final String propertiesLocation = cmdLine.getOptionValue(OPTION_P_NAME);", "-            if (cmdLine.hasOption(\"o\")) {", "-                final String outputLocation = cmdLine.getOptionValue(\"o\");", "+            if (cmdLine.hasOption(OPTION_O_NAME)) {", "+                final String outputLocation = cmdLine.getOptionValue(OPTION_O_NAME);"]}]}