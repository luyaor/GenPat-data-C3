{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89f3ccadbfe565c756777cb7674d2430", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a7eb42473b19fd94a16424eef60e2b3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "aa5dbacdcbf20a9b56e2f7ecb577bb47778b0c54", "commitAfterChange": "84c1f8375fa540e7b0313b95af6be6000e3c4c71", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     void reportStarImport(int aLineNo, String aPkg)", "signatureAfterChange": "     void reportStarImport(int aLineNo, String aPkg)", "diff": ["-        if (!mConfig.isIgnoreImports()) {", "-            mMessages.add(aLineNo, \"import.avoidStar\");", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3750cd1381aa53f0802895376ee0902a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/j2ee/HomeInterfaceMethodChecker.java", "commitBeforeChange": "1d0c8e6e0eeff546ac2782e41029346f07ff692b", "commitAfterChange": "5c9578a108abaf11a41dc5ef71bad14fca91e406", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void checkMethod(DetailAST aMethodAST)", "signatureAfterChange": "     public void checkMethod(DetailAST aMethodAST)", "diff": ["-        else if (name.startsWith(\"find\")) {", "-            checkFindMethod(aMethodAST);", "-        }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b3ba5e0be963a8080da71fde2be8e71", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/XDocsPagesTest.java", "commitBeforeChange": "b0891b556788d4c9c8cdf6982648001427d92238", "commitAfterChange": "797bed5c6b91e758e47ad7e5e4119747b13d433a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private static void validatePropertySection(String fileName, String sectionName,             Node subSection, Object instance)", "signatureAfterChange": "      private static void validatePropertySection(String fileName, String sectionName,             Node subSection, Object instance)", "diff": ["-        }", "-", "-        // missing setter, should be fixed", "-        if (CustomImportOrderCheck.class.isAssignableFrom(clss)) {", "-            properties.add(\"samePackageMatchingDepth\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6326bc23b378dda657ce649687b8a7c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/VerifierImpl.java", "commitBeforeChange": "c24b03f33ff0c43463e471346a1d2c6857ba4f5e", "commitAfterChange": "9c56d5765626a01b8388481229eef4d7c9ff60ce", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void reportImport(int aLineNo, String aType)", "signatureAfterChange": "     public void reportImport(int aLineNo, String aType)", "diff": ["+    /** @see Verifier **/", "-", "-            // Check for import from java.lang package.", "-            if (aType.startsWith(\"java.lang.\")) {", "-                log(aLineNo, \"Redundant import from the java.lang package.\");", "-            }", "-            else {", "-                // Add to list to check for duplicates and usage", "-                mImports.add(new LineText(aLineNo, aType));", "-            }", "+            // Add to list to check for duplicates and usage", "+            mImports.add(new LineText(aLineNo, aType));"]}]}