{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5bf5282eb187449b98e665b5c88b6e31", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "115224064cbb5f57881b24bd9a05fdf3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public static DetailNode getNextSibling(DetailNode aNode)", "signatureAfterChange": "     public static DetailNode getNextSibling(DetailNode node)", "diff": ["-    public static DetailNode getNextSibling(DetailNode aNode)", "+    public static DetailNode getNextSibling(DetailNode node)", "-        final DetailNode parent = aNode.getParent();", "+        final DetailNode parent = node.getParent();", "-            final int nextSiblingIndex = aNode.getIndex() + 1;", "+            final int nextSiblingIndex = node.getIndex() + 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c620bfe43d27ba41eab7c2d6dd106532", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static DetailNode getPreviousSibling(DetailNode aNode)", "signatureAfterChange": "     public static DetailNode getPreviousSibling(DetailNode node)", "diff": ["-    public static DetailNode getPreviousSibling(DetailNode aNode)", "+    public static DetailNode getPreviousSibling(DetailNode node)", "-        final DetailNode parent = aNode.getParent();", "+        final DetailNode parent = node.getParent();", "-            final int previousSiblingIndex = aNode.getIndex() - 1;", "+            final int previousSiblingIndex = node.getIndex() - 1;"]}]}