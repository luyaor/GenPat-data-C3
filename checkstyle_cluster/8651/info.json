{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aaebb64d0180598bfff847231cc0e366", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0002240fa47ecb65dfbd90674d6558bf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setAllowMissingThrowsTags(boolean aFlag)", "signatureAfterChange": "     public void setAllowMissingThrowsTags(boolean flag)", "diff": ["-    public void setAllowMissingThrowsTags(boolean aFlag)", "+    public void setAllowMissingThrowsTags(boolean flag)", "-        mAllowMissingThrowsTags = aFlag;", "+        allowMissingThrowsTags = flag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "003d574afb751a4b14149a1cf833d44d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IllegalInstantiationCheck.java", "commitBeforeChange": "3f14872d33910413734232fb16b9debe479e1bd8", "commitAfterChange": "84eddc36730c1eca845257201c71a0d1fb2d40cf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            case JavaTokenTypes.LITERAL_new:", "+            case TokenTypes.LITERAL_NEW:", "-            case JavaTokenTypes.PACKAGE_DEF:", "+            case TokenTypes.PACKAGE_DEF:", "-            case JavaTokenTypes.IMPORT:", "+            case TokenTypes.IMPORT:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00601817d6271067674caeb926e18506", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setIgnoreMethodNamesRegex(String aRegex)", "signatureAfterChange": "     public void setIgnoreMethodNamesRegex(String regex)", "diff": ["-    public void setIgnoreMethodNamesRegex(String aRegex)", "+    public void setIgnoreMethodNamesRegex(String regex)", "-        mIgnoreMethodNamesRegex = Utils.createPattern(aRegex);", "+        ignoreMethodNamesRegex = Utils.createPattern(regex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00719d189cb9c5bc2124a3e02b4ed125", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "         public void setStatic(boolean aStatic)", "signatureAfterChange": "         public void setStatic(boolean isStatic)", "diff": ["-        public void setStatic(boolean aStatic)", "+        public void setStatic(boolean isStatic)", "-            this.mStatic = aStatic;", "+            this.isStatic = isStatic;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0074bf32ad25fc92702ed7076aa05ae3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "         public void addCount(int count)", "signatureAfterChange": "         public void addCount(int addition)", "diff": ["-        public void addCount(int count) {", "-            this.count += count;", "+        public void addCount(int addition) {", "+            this.count += addition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00806fffaa47cb636332fba50b961051", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java", "commitBeforeChange": "b14f255427c0b12054de2873fe300b4f4e691bd4", "commitAfterChange": "cc7aeaec906dc3c864477e3050510009b2a946ee", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-            postprocessLiteralNew(literalNewAST);", "+            postProcessLiteralNew(literalNewAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00a2b9f4823fbb099369ad23d42ddd6b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultConfiguration.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Override     public Configuration[] getChildren()", "signatureAfterChange": "     @Override     public Configuration[] getChildren()", "diff": ["-        return mChildren.toArray(", "-            new Configuration[mChildren.size()]);", "+        return children.toArray(", "+            new Configuration[children.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00aeb0ed7f44890d6bd0a8203eaa4dec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "f2429b81399fa12e4dd90aff86e91132b24849e0", "commitAfterChange": "15818b826024e6fef6c21e2831ec246af0a8ba7a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private boolean isFileNameAndModuleMatching(AuditEvent event)", "signatureAfterChange": "     private boolean isFileNameAndModuleNotMatching(AuditEvent event)", "diff": ["-    private boolean isFileNameAndModuleMatching(AuditEvent event) {", "+    private boolean isFileNameAndModuleNotMatching(AuditEvent event) {", "-                || moduleId != null && !moduleId.equals(event", "-                        .getModuleId())", "-                || checkRegexp != null && !checkRegexp.matcher(", "-                        event.getSourceName()).find();", "+                || moduleId != null && !moduleId.equals(event.getModuleId())", "+                || checkRegexp != null && !checkRegexp.matcher(event.getSourceName()).find();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00f75a405e3f0481c1598658de6616ef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private int[] findLineBreaks()", "signatureAfterChange": "     private int[] findLineBreaks()", "diff": ["-            final int[] lineBreaks = new int[size() + 1];", "-            lineBreaks[0] = 0;", "+            final int[] lineBreakPositions = new int[size() + 1];", "+            lineBreakPositions[0] = 0;", "-                lineBreaks[lineNo] = matcher.end();", "+                lineBreakPositions[lineNo] = matcher.end();", "-            if (lineNo < lineBreaks.length) {", "-                lineBreaks[lineNo] = fullText.length();", "+            if (lineNo < lineBreakPositions.length) {", "+                lineBreakPositions[lineNo] = fullText.length();", "-            this.lineBreaks = lineBreaks;", "+            this.lineBreaks = lineBreakPositions;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01305d0fb1f611ab44d034a9b3f6e4cf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/NewHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     protected IndentLevel getLevelImpl()", "signatureAfterChange": "      @Override     protected IndentLevel getIndentImpl()", "diff": ["-    protected IndentLevel getLevelImpl() {", "+    protected IndentLevel getIndentImpl() {", "-        return super.getLevelImpl();", "+        return super.getIndentImpl();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01431c9f2f00295c9445225ecfee5fc7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void verifyBrace(final DetailAST aBrace,                              final DetailAST aStartToken)", "signatureAfterChange": "     private void verifyBrace(final DetailAST aBrace,                              final DetailAST aStartToken)", "diff": ["-                    \"line.new\", \"{\");", "+                        MSG_KEY_LINE_NEW, \"{\");", "-                    \"line.previous\", \"{\");", "+                        MSG_KEY_LINE_PREVIOUS, \"{\");", "-                log(aBrace.getLineNo(), aBrace.getColumnNo(), \"line.break.after\");", "+                log(aBrace.getLineNo(), aBrace.getColumnNo(), MSG_KEY_LINE_BREAK_AFTER);", "-                        \"line.new\", \"{\");", "+                        MSG_KEY_LINE_NEW, \"{\");", "-                        \"line.previous\", \"{\");", "+                        MSG_KEY_LINE_PREVIOUS, \"{\");", "-                    \"line.new\", \"{\");", "+                    MSG_KEY_LINE_NEW, \"{\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "014fdcbc3cfa0d5642305e120f66b67f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java", "commitBeforeChange": "97956e1ae5d6842401ea0bfab121e8fb8d51c14d", "commitAfterChange": "d4ef19e679f276411a0de3b07e579c217d15f098", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      protected void verify(Checker c, String fileName, String... expected)             throws Exception", "signatureAfterChange": "      protected void verify(Checker checker, String fileName, String... expected)             throws Exception", "diff": ["-    protected void verify(Checker c, String fileName, String... expected)", "+    protected void verify(Checker checker, String fileName, String... expected)", "-        verify(c, fileName, fileName, expected);", "+        verify(checker, fileName, fileName, expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01527da831ea1aeb05538d0967eaa642", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "79404974eff1458f4243f8acd6a08b6a8b869342", "commitAfterChange": "fe9057366308642868c25d427c3ee94411b37170", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void endElement(String aNamespaceURI,                            String aLocalName,                            String aQName)", "signatureAfterChange": "      @Override     public void endElement(String aNamespaceURI,                            String aLocalName,                            String aQName)", "diff": ["-", "-            mModuleFactory.addPackage(getPackageName());", "+", "+            mPackageNames.add(getPackageName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "018a620f73144f94df3882b63150f330", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/XMLLoggerTest.java", "commitBeforeChange": "5630e4399be9704898f5308408a5a528f274ce01", "commitAfterChange": "eeb20e6c8cc86d2d283c254ddcddf89f46aa5190", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testAddException()         throws IOException", "signatureAfterChange": "      @Test     public void testAddException()         throws IOException", "diff": ["-        logger.addException(ev, new TestThrowable());", "+        logger.addException(ev, new TestException());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01ba41849a4ebb00f51f1d90cdc9ef76", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Context.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     Object get(String aKey);", "signatureAfterChange": "     Object get(String key);", "diff": ["-    Object get(String aKey);", "+    Object get(String key);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01cd6a3e38f924c3716f7ba7dc65f817", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     private boolean hasShortCircuitTag(final DetailAST aAST,             final List<JavadocTag> aTags)", "signatureAfterChange": "     private boolean hasShortCircuitTag(final DetailAST ast,             final List<JavadocTag> tags)", "diff": ["-    private boolean hasShortCircuitTag(final DetailAST aAST,", "-            final List<JavadocTag> aTags)", "+    private boolean hasShortCircuitTag(final DetailAST ast,", "+            final List<JavadocTag> tags)", "-        if ((aTags.size() != 1)", "-                || !(aTags.get(0)).isInheritDocTag())", "+        if ((tags.size() != 1)", "+                || !(tags.get(0)).isInheritDocTag())", "-        if (!JavadocTagInfo.INHERIT_DOC.isValidOn(aAST)) {", "-            log(aAST, \"javadoc.invalidInheritDoc\");", "+        if (!JavadocTagInfo.INHERIT_DOC.isValidOn(ast)) {", "+            log(ast, \"javadoc.invalidInheritDoc\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01d789955afe76c8cf974a996578f4ae", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "92ea4cfb5182dbe4ba625ab10e8a95a683607f19", "commitAfterChange": "3fecb73fb3ea4da6bef4e5e9f3a5d555568f0a34", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "      public void testOpWrapOn()         throws Exception", "signatureAfterChange": "      public void testOpWrapNL()         throws Exception", "diff": ["-    public void testOpWrapOn()", "+    public void testOpWrapNL()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01df0f0f2fcdb29cd7fd3bf85a71441f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitJavadocToken(DetailNode aAst)", "signatureAfterChange": "      @Override     public void visitJavadocToken(DetailNode ast)", "diff": ["-    public void visitJavadocToken(DetailNode aAst)", "+    public void visitJavadocToken(DetailNode ast)", "-        if (mTarget.contains(parentType)) {", "-            checkOrderInTagSection(aAst);", "+        if (target.contains(parentType)) {", "+            checkOrderInTagSection(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02160be0723b49412cbcd96f9c21cdf2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/AnonInnerLengthCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final DetailAST openingBrace = aAST.findFirstToken(TokenTypes.OBJBLOCK);", "+        final DetailAST openingBrace = ast.findFirstToken(TokenTypes.OBJBLOCK);", "-            if (length > mMax) {", "-                log(aAST.getLineNo(), aAST.getColumnNo(), \"maxLen.anonInner\",", "-                        length, mMax);", "+            if (length > max) {", "+                log(ast.getLineNo(), ast.getColumnNo(), \"maxLen.anonInner\",", "+                        length, max);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02504965e3bb1c8820bd65dd19d8ca4e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "6839ac4fd83dde7060c8f6f28e75aa3d6ff2456b", "commitAfterChange": "31f6765fdcf2233ca6c53730c2fc196576557f66", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static DetailAST findLastAnnotation(DetailAST modifiers)", "signatureAfterChange": "     private static DetailAST findLastAnnotation(DetailAST modifiers)", "diff": ["-        DetailAST annot = modifiers.findFirstToken(TokenTypes.ANNOTATION);", "-        while (annot != null && annot.getNextSibling() != null", "-               && annot.getNextSibling().getType() == TokenTypes.ANNOTATION) {", "-            annot = annot.getNextSibling();", "+        DetailAST annotation = modifiers.findFirstToken(TokenTypes.ANNOTATION);", "+        while (annotation != null && annotation.getNextSibling() != null", "+               && annotation.getNextSibling().getType() == TokenTypes.ANNOTATION) {", "+            annotation = annotation.getNextSibling();", "-        return annot;", "+        return annotation;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0281d94510e088d34c51d5b4a98b84c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     protected void processFiltered(File aFile, List<String> aLines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-    protected void processFiltered(File aFile, List<String> aLines)", "+    protected void processFiltered(File file, List<String> lines)", "-        // Cannot use aLines as the line separators have been removed!", "+        // Cannot use lines as the line separators have been removed!", "-            randomAccessFile = new RandomAccessFile(aFile, \"r\");", "+            randomAccessFile = new RandomAccessFile(file, \"r\");", "-                log(0, \"noNewlineAtEOF\", aFile.getPath());", "+                log(0, \"noNewlineAtEOF\", file.getPath());", "-            log(0, \"unable.open\", aFile.getPath());", "+            log(0, \"unable.open\", file.getPath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "028a25289458effc287d4ac0c5eab529", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/PackageNamesBean.java", "commitBeforeChange": "4cc94a581c8da49c65d139da08d70aea1b5cf1e9", "commitAfterChange": "88e89a138aa39f50f7642106cde6568f6e07783f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "              String[] getPackageNames()         throws CheckstyleException;", "signatureAfterChange": "              String[] getModuleFactory()         throws CheckstyleException;", "diff": ["-     String[] getPackageNames()", "+     String[] getModuleFactory()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "029c2e077a4427f23a99d82611f70fb5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private boolean iastypeField(DetailAST variableDef)", "signatureAfterChange": "     private boolean isTypeField(DetailAST variableDef)", "diff": ["-    private boolean iastypeField(DetailAST variableDef)", "+    private boolean isTypeField(DetailAST variableDef)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02c0dd6db686ac74058099bd3e5a61f9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "6b852ccfbc949ae57e76ef73f1451b717e15d6e8", "commitAfterChange": "0a4a41f4797c6c5c6a73c6c2ed9b5c173a328a12", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "     @Override     public void beginTree(DetailAST aRootAST)", "diff": ["-        super.beginTree(aRootAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02c67559df19104d1450587d6d1d58e4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Utils.java", "commitBeforeChange": "8c1b62313ffba68c246e61820a904edbf3c61335", "commitAfterChange": "902fa7302c8c2316908273a14c0bd4f1ca60b5d6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static Pattern getPattern(String aPattern, int aCompileFlags)         throws PatternSyntaxException", "signatureAfterChange": "     public static Pattern getPattern(String aPattern, int aCompileFlags)         throws PatternSyntaxException", "diff": ["-            CREATED_RES.put(key, retVal);", "+            CREATED_RES.putIfAbsent(key, retVal);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02ce4b36326afe9ecc3f83e4c807c4dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     private boolean isInThrows(List<ExceptionInfo> throwsList,             AbstractClassInfo documentedCI, Set<String> foundThrows)", "signatureAfterChange": "     private boolean isInThrows(List<ExceptionInfo> throwsList,             AbstractClassInfo documentedClassInfo, Set<String> foundThrows)", "diff": ["-            AbstractClassInfo documentedCI, Set<String> foundThrows) {", "+            AbstractClassInfo documentedClassInfo, Set<String> foundThrows) {", "-                    documentedCI.getName().getText())) {", "+                    documentedClassInfo.getName().getText())) {", "-            if (documentedCI.getClazz() == exceptionInfo.getClazz()) {", "+            if (documentedClassInfo.getClazz() == exceptionInfo.getClazz()) {", "-                found = isSubclass(documentedCI.getClazz(), exceptionInfo.getClazz());", "+                found = isSubclass(documentedClassInfo.getClazz(), exceptionInfo.getClazz());", "-            foundThrows.add(documentedCI.getName().getText());", "+            foundThrows.add(documentedClassInfo.getName().getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02d6bca613900317f5399cffe54d59eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "f1dced161ab0c818f0e1e125fc5b88b71f5b171e", "commitAfterChange": "af095344e1501d55b2dfbbd18deaf305e814601c", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     private static boolean isFunction(DetailAST ast)", "signatureAfterChange": "     private static boolean isFunction(DetailAST ast)", "diff": ["-            if (typeAST != null", "-                && typeAST.findFirstToken(TokenTypes.LITERAL_VOID) == null) {", "+            if (typeAST.findFirstToken(TokenTypes.LITERAL_VOID) == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02dc29327a739b75d93e115303d7efd9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/UnnecessaryParenthesesCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (surrounded && inTokenList(type, LITERALS)) {", "+        if (surrounded && isInTokenList(type, LITERALS)) {", "-        if (inTokenList(type, ASSIGNMENTS)) {", "+        if (isInTokenList(type, ASSIGNMENTS)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02f96ebe0966be3fe53c9a38427cfc0d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractTypeAwareCheckTest.java", "commitBeforeChange": "e7547bb7ddccec6737cea118a41864fc349ea1d2", "commitAfterChange": "d220d7c3cc74490c7f2923f2ea85d00133afe98c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testIsSubclassWithNulls() throws Exception", "signatureAfterChange": "      @Test     public void testIsSubclassWithNulls() throws Exception", "diff": ["-        Method isSublclass = check.getClass().getSuperclass()", "+        Method isSubclass = check.getClass().getSuperclass()", "-        isSublclass.setAccessible(true);", "-        assertFalse((boolean) isSublclass.invoke(check, null, null));", "+        isSubclass.setAccessible(true);", "+        assertFalse((boolean) isSubclass.invoke(check, null, null));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03133d98c810f8c11fd39ba193aec818", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     private void walk(DetailNode aRoot)", "signatureAfterChange": "     private void walk(DetailNode root)", "diff": ["-    private void walk(DetailNode aRoot)", "+    private void walk(DetailNode root)", "-        DetailNode curNode = aRoot;", "+        DetailNode curNode = root;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0339b7b73136311a792b009b0d6aa66b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "1818ae8ab189515f24a711aa3fc520377bd71380", "commitAfterChange": "7b7eea6e9a4d4053912f83cda41c46c0f4474607", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void readObject(ObjectInputStream aStream)         throws IOException, ClassNotFoundException", "signatureAfterChange": "     private void readObject(ObjectInputStream aStream)         throws IOException, ClassNotFoundException", "diff": ["+        // reset the header file to re-read the lines", "+        setHeaderFile(mHeaderFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03497ec9befa94ca5d8594bef5b2ed94", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java", "commitBeforeChange": "896af516b0028ff2a26cc1888dfaba620d3fe9e0", "commitAfterChange": "55c92042eb6986e905529de841d3d1c9a7b2b6dd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static DetailAST getArrayTypeOrIdentifier(DetailAST arrayDeclarator)", "signatureAfterChange": "     private static DetailAST getArrayTypeOrIdentifier(DetailAST arrayDeclarator)", "diff": ["-            if (isCstyleMultiDimensionalArrayDeclaration(arrayDeclarator)) {", "+            if (isCStyleMultiDimensionalArrayDeclaration(arrayDeclarator)) {", "-            if (isCstyleArrayDeclaration(arrayDeclarator)) {", "+            if (isCStyleArrayDeclaration(arrayDeclarator)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03a70d4b6c281d9c42ff7d196447c28c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "         @SuppressWarnings({\"unchecked\", \"rawtypes\"})         @Override         public Object convert(Class type, Object value)", "signatureAfterChange": "         @SuppressWarnings({\"unchecked\", \"rawtypes\"})         @Override         public Object convert(Class type, Object value)", "diff": ["-            final StringTokenizer st = new StringTokenizer(", "+            final StringTokenizer tokenizer = new StringTokenizer(", "-            while (st.hasMoreTokens()) {", "-                final String token = st.nextToken();", "+            while (tokenizer.hasMoreTokens()) {", "+                final String token = tokenizer.nextToken();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03b66d7e1135f14bf9d037116fb2149f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private boolean matchesSkipRegex(DetailAST aMethodDef)", "signatureAfterChange": "     private boolean matchesSkipRegex(DetailAST methodDef)", "diff": ["-    private boolean matchesSkipRegex(DetailAST aMethodDef)", "+    private boolean matchesSkipRegex(DetailAST methodDef)", "-        if (mIgnoreMethodNamesRegex != null) {", "-            final DetailAST ident = aMethodDef.findFirstToken(TokenTypes.IDENT);", "+        if (ignoreMethodNamesRegex != null) {", "+            final DetailAST ident = methodDef.findFirstToken(TokenTypes.IDENT);", "-            final Matcher matcher = mIgnoreMethodNamesRegex.matcher(methodName);", "+            final Matcher matcher = ignoreMethodNamesRegex.matcher(methodName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03c1aa6dd6baae6f5f6a91db4fa06b17", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "         boolean isDeclaredAsFinal()", "signatureAfterChange": "         boolean isDeclaredAsFinal()", "diff": ["-            return mDeclaredAsFinal;", "+            return declaredAsFinal;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03c8dd3f070e452e003adfd178d7ab01", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/InputJavadocStyleCheck.java", "commitBeforeChange": "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94", "commitAfterChange": "d6175fd6c95f64e854c1604e0331d8d1ab9dcaf3", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "         public T getX()", "signatureAfterChange": "         public T1 getX()", "diff": ["-        public T getX()", "+        public T1 getX()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0472bd0d55a66c889d7edf9c39f6f7ca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheckTest.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testFP() throws Exception", "signatureAfterChange": "      @Test     public void testFp() throws Exception", "diff": ["-    public void testFP() throws Exception {", "+    public void testFp() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04856ec1d538e05be51c5477e8b55c22", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "0e8b48e1435688a11a1b756c2690f365164e0dda", "commitAfterChange": "ec1e3e834918a32d63025d60175189b3437769d7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Checker(Configuration aConfig)         throws RESyntaxException", "signatureAfterChange": "     public Checker(Configuration aConfig)         throws RESyntaxException", "diff": ["-        mCache = new PropertyCacheFile(aConfig.getCacheFile());", "+        mCache = new PropertyCacheFile(aConfig);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0492a33021beb73432827bd5d1041163", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "d86a9de35b58eeed409ed9fc3cbef252fda4cb84", "commitAfterChange": "5d7063c660b241bce251f1a8c89394619f2791fb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        String currentString = aAST.getText();", "-        ArrayList i = (ArrayList) mStringMap.get(currentString);", "-        if (i == null) {", "-            i = new ArrayList();", "-            mStringMap.put(currentString, i);", "+        final String currentString = aAST.getText();", "+        ArrayList hitList = (ArrayList) mStringMap.get(currentString);", "+        if (hitList == null) {", "+            hitList = new ArrayList();", "+            mStringMap.put(currentString, hitList);", "-        i.add(new StringInfo(line, col));", "+        hitList.add(new StringInfo(line, col));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "049a9e3a2b2fab8ddf658ec68647774b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void closeStreams()", "signatureAfterChange": "     protected void closeStreams()", "diff": ["-        mInfoWriter.flush();", "-        if (mCloseInfo) {", "-            mInfoWriter.close();", "+        infoWriter.flush();", "+        if (closeInfo) {", "+            infoWriter.close();", "-        mErrorWriter.flush();", "-        if (mCloseError) {", "-            mErrorWriter.close();", "+        errorWriter.flush();", "+        if (closeError) {", "+            errorWriter.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04b325aa65cb2f306fe94f48ea705b52", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setMinimumDepth(int aMinimumDepth)", "signatureAfterChange": "     public void setMinimumDepth(int minimumDepth)", "diff": ["-    public void setMinimumDepth(int aMinimumDepth)", "+    public void setMinimumDepth(int minimumDepth)", "-        mMinimumDepth = aMinimumDepth;", "+        this.minimumDepth = minimumDepth;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04bf969bc0ae2b76e3a1126b65920e48", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "e4eee5699c51179bbc2afe73ef04cd7e255ace60", "commitAfterChange": "22ad233fd89ff9ccf7f42057be128048612f0080", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public final void setClassLoader(ClassLoader aLoader)", "signatureAfterChange": "     public final void setClassloader(ClassLoader aLoader)", "diff": ["-    public final void setClassLoader(ClassLoader aLoader)", "+    public final void setClassloader(ClassLoader aLoader)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04c4795e7224b859ad202a6d481081dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractIllegalCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final void setIllegalClassNames(final String[] aClassNames)", "signatureAfterChange": "     public final void setIllegalClassNames(final String[] classNames)", "diff": ["-    public final void setIllegalClassNames(final String[] aClassNames)", "+    public final void setIllegalClassNames(final String[] classNames)", "-        assert aClassNames != null;", "-        mIllegalClassNames.clear();", "-        for (final String name : aClassNames) {", "-            mIllegalClassNames.add(name);", "+        assert classNames != null;", "+        illegalClassNames.clear();", "+        for (final String name : classNames) {", "+            illegalClassNames.add(name);", "-                mIllegalClassNames.add(shortName);", "+                illegalClassNames.add(shortName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04ed36c74c36944e2d7a576c54887c83", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setExtendedClassNameFormat(String aExtendedClassNameFormat)", "signatureAfterChange": "     public void setExtendedClassNameFormat(String extendedClassNameFormat)", "diff": ["-    public void setExtendedClassNameFormat(String aExtendedClassNameFormat)", "+    public void setExtendedClassNameFormat(String extendedClassNameFormat)", "-        mExtendedClassNameFormat = aExtendedClassNameFormat;", "+        this.extendedClassNameFormat = extendedClassNameFormat;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "051b2b24edd1a1a790795996f00038a6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "1ce6badd8f1852081fee56fd6184ecfe8c128c69", "commitAfterChange": "30438ebdf9fd28a94613e2aaecde776d906349a7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private boolean hasTrailComment(DetailAST ast)", "signatureAfterChange": "     private boolean hasTrailComment(DetailAST ast)", "diff": ["-            if (sCommentRegexp.matcher(currentLine).find()) {", "+            if (COMMENT_REGEXP.matcher(currentLine).find()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0531610f9d030392d3d34fbb399c86a8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private boolean isAllCharactersEscaped(String aLiteral)", "signatureAfterChange": "     private boolean isAllCharactersEscaped(String literal)", "diff": ["-    private boolean isAllCharactersEscaped(String aLiteral)", "+    private boolean isAllCharactersEscaped(String literal)", "-        return mAllowIfAllCharactersEscaped", "-                && sAllEscapedChars.matcher(aLiteral.substring(1,", "-                        aLiteral.length() - 1)).find();", "+        return allowIfAllCharactersEscaped", "+                && sAllEscapedChars.matcher(literal.substring(1,", "+                        literal.length() - 1)).find();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0543bb4f1bf6d5b382409ac9568f17f7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "3c7c3cbe88a2bec0962702305db4f2b05117501c", "commitAfterChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private int[] lineBreaks()", "signatureAfterChange": "     private int[] findLineBreaks()", "diff": ["-    private int[] lineBreaks()", "+    private int[] findLineBreaks()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0552a766bd466c779e67afd01ce2b6b0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "be6d271ac34efc3daed3dbb873ab8060723dd4f8", "commitAfterChange": "b06dd9801e56887f7da1bbc8b55233e0ff5f5115", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void setConstpattern(String aPat)", "signatureAfterChange": "     public void setConstPattern(String aPat)", "diff": ["-    public void setConstpattern(String aPat)", "+    public void setConstPattern(String aPat)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0562dbcfeebd7f6b1c162694a165acaf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TrailingCommentCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private boolean isLegalComment(final TextBlock aComment)", "signatureAfterChange": "     private boolean isLegalComment(final TextBlock comment)", "diff": ["-    private boolean isLegalComment(final TextBlock aComment)", "+    private boolean isLegalComment(final TextBlock comment)", "-        if (mLegalComment == null) {", "+        if (legalComment == null) {", "-        if (aComment.getStartLineNo() != aComment.getEndLineNo()) {", "+        if (comment.getStartLineNo() != comment.getEndLineNo()) {", "-        String commentText = aComment.getText()[0];", "+        String commentText = comment.getText()[0];", "-        return mLegalComment.matcher(commentText).find();", "+        return legalComment.matcher(commentText).find();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "059b806de6555c68dc0b3985b6c63456", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java", "commitBeforeChange": "97956e1ae5d6842401ea0bfab121e8fb8d51c14d", "commitAfterChange": "d4ef19e679f276411a0de3b07e579c217d15f098", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      protected void verify(Checker c,                           String processedFilename,                           String messageFileName,                           String... expected)             throws Exception", "signatureAfterChange": "      protected void verify(Checker checker,                           String processedFilename,                           String messageFileName,                           String... expected)             throws Exception", "diff": ["-    protected void verify(Checker c,", "+    protected void verify(Checker checker,", "-        verify(c,", "+        verify(checker,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05be7f6092edaed2fddda1b642548c65", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/naming/MemberNameCheck.java", "commitBeforeChange": "19d385d84afcd37dcb1ad6a18f631eebb0d617a4", "commitAfterChange": "2bf724effc3c43a43fbe254dd81985f618be8eee", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     protected final boolean mustCheckName(DetailAST aAST)", "signatureAfterChange": "      @Override     protected final boolean mustCheckName(DetailAST aAST)", "diff": ["-            && (modifiersAST != null)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05e57ad54d1336e649ed4431d34379e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Override     public final void configure(Configuration aConfiguration)         throws CheckstyleException", "signatureAfterChange": "     @Override     public final void configure(Configuration configuration)         throws CheckstyleException", "diff": ["-    public final void configure(Configuration aConfiguration)", "+    public final void configure(Configuration configuration)", "-        mConfiguration = aConfiguration;", "+        this.configuration = configuration;", "-        final String[] attributes = aConfiguration.getAttributeNames();", "+        final String[] attributes = configuration.getAttributeNames();", "-            final String value = aConfiguration.getAttribute(key);", "+            final String value = configuration.getAttribute(key);", "-                        + aConfiguration.getName()", "+                        + configuration.getName()", "-                    + aConfiguration.getName() + \" to '\" + value", "+                    + configuration.getName() + \" to '\" + value", "-                    + \"' of module \" + aConfiguration.getName(), e);", "+                    + \"' of module \" + configuration.getName(), e);", "-                    + \"' of module \" + aConfiguration.getName(), e);", "+                    + \"' of module \" + configuration.getName(), e);", "-        final Configuration[] childConfigs = aConfiguration.getChildren();", "+        final Configuration[] childConfigs = configuration.getChildren();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05f2d11d5a82972907f7248a36ccedf8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static DetailAST getPreceded(DetailAST aArrayOrTypeCast)", "signatureAfterChange": "     private static DetailAST getPreceded(DetailAST arrayOrTypeCast)", "diff": ["-    private static DetailAST getPreceded(DetailAST aArrayOrTypeCast)", "+    private static DetailAST getPreceded(DetailAST arrayOrTypeCast)", "-        DetailAST preceded = aArrayOrTypeCast;", "-        switch (aArrayOrTypeCast.getType()) {", "+        DetailAST preceded = arrayOrTypeCast;", "+        switch (arrayOrTypeCast.getType()) {", "-            preceded = aArrayOrTypeCast.findFirstToken(TokenTypes.RPAREN);", "+            preceded = arrayOrTypeCast.findFirstToken(TokenTypes.RPAREN);", "-            preceded = getArrayTypeOrIdentifier(aArrayOrTypeCast);", "+            preceded = getArrayTypeOrIdentifier(arrayOrTypeCast);", "-            throw new IllegalStateException(aArrayOrTypeCast.toString());", "+            throw new IllegalStateException(arrayOrTypeCast.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06341a8fe07aece776b14c0122ca83eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/HtmlTag.java", "commitBeforeChange": "e1d0e7f6361c32c69650ba789c1995e49a94142f", "commitAfterChange": "7dd24c8c35572b5db3e5c905d440e813cfe2538c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public int getLineno()", "signatureAfterChange": "     public int getLineNo()", "diff": ["-    public int getLineno()", "+    public int getLineNo()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "066cad6480c2552f06ae4e165c698fdd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineSet.java", "commitBeforeChange": "8a3f5bf6d5389b9e175c9c769992faece6d76ada", "commitAfterChange": "2e32ba7ab68e22bfc398362d4e3b85bb5ebfacac", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int firstLineCol()", "signatureAfterChange": "     public int firstLineCol()", "diff": ["-        final Object firstLineKey = lines.firstKey();", "+        final Integer firstLineKey = lines.firstKey();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06ade4eb2d68d350a25ecd41d278b437", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AuditEvent.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public AuditEvent(Object aSrc, String aFileName)", "signatureAfterChange": "     public AuditEvent(Object src, String fileName)", "diff": ["-    public AuditEvent(Object aSrc, String aFileName)", "+    public AuditEvent(Object src, String fileName)", "-        this(aSrc, aFileName, null);", "+        this(src, fileName, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06c5f00066434d5d372b93db1a18c59b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setChecks(final String aChecks)", "signatureAfterChange": "     public void setChecks(final String checks)", "diff": ["-    public void setChecks(final String aChecks)", "+    public void setChecks(final String checks)", "-        mCheckPattern = aChecks;", "-        mCheckRegexp = Utils.getPattern(aChecks);", "+        checkPattern = checks;", "+        checkRegexp = Utils.getPattern(checks);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06dd6a6f37c7d31a56b5f7e666245431", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java", "commitBeforeChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "commitAfterChange": "29027109bf962f47b6a6000fdca69b5679ce4b43", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     private boolean isIgnoreLine(int aLineNo)", "signatureAfterChange": "     private boolean isIgnoreLine(int lineNo)", "diff": ["-    private boolean isIgnoreLine(int aLineNo)", "+    private boolean isIgnoreLine(int lineNo)", "-        return (Arrays.binarySearch(mIgnoreLines, aLineNo) >= 0);", "+        return (Arrays.binarySearch(ignoreLines, lineNo) >= 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06ea395c578359c46c300b3fe7361f27", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void registerCheck(String aToken, Check aCheck)", "signatureAfterChange": "     private void registerCheck(String token, Check check)", "diff": ["-    private void registerCheck(String aToken, Check aCheck)", "+    private void registerCheck(String token, Check check)", "-        if (aCheck.isCommentNodesRequired()) {", "-            mTokenToCommentChecks.put(aToken, aCheck);", "+        if (check.isCommentNodesRequired()) {", "+            tokenToCommentChecks.put(token, check);", "-        else if (TokenTypes.isCommentType(aToken)) {", "+        else if (TokenTypes.isCommentType(token)) {", "-                    + aCheck.getClass().getName()", "+                    + check.getClass().getName()", "-                    + aToken", "+                    + token", "-            mTokenToOrdinaryChecks.put(aToken, aCheck);", "+            tokenToOrdinaryChecks.put(token, check);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06f15ffee1dd53f3db7dd2495a08470a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean isStaticOrOnstanceField(DetailAST ast, String name)", "signatureAfterChange": "     private boolean isStaticOrOnstanceField(DetailAST ast, String name)", "diff": ["-                || !inStatic(ast) && frame.containsInstanceField(name);", "+                || !isInStatic(ast) && frame.containsInstanceField(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06f3f5ec0993bdf64d597ebe8cb429a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "d87ea06ebb50622ac5327ec6c9765486aa032ff1", "commitAfterChange": "edf2c95634cd0c657465723eb0dc2e6f1834eeba", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     Checker(Configuration aConfig, PrintStream aLog)         throws RESyntaxException", "signatureAfterChange": "     public Checker(Configuration aConfig, PrintStream aLog)         throws RESyntaxException", "diff": ["-    Checker(Configuration aConfig, PrintStream aLog)", "+    public Checker(Configuration aConfig, PrintStream aLog)", "-        mLog = aLog;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06fbbb9ac9d4c7fe18b51eec9912c8e2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpMultilineCheckTest.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private static CharSequence makeLargeXYString()", "signatureAfterChange": "      private static CharSequence makeLargeXyString()", "diff": ["-    private static CharSequence makeLargeXYString() {", "+    private static CharSequence makeLargeXyString() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0731ec637d9335f58ab2587ab991cfd4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/InputLeftCurlyOther.java", "commitBeforeChange": "6f7fec94eeceee2e2d802a1cd7271a47e1369d68", "commitAfterChange": "3d0256c50f6b1626af530c9e56920a72c5508bfe", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     void foo()", "signatureAfterChange": "     void foo() throws InterruptedException", "diff": ["-    /** test method **/", "-    void foo()", "+    /** @see test method **/", "+    void foo() throws InterruptedException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07347b09c24fae38c5e14b7403d11b48", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-    public void leaveToken(DetailAST aAST)", "+    public void leaveToken(DetailAST ast)", "-        if ((TokenTypes.CLASS_DEF == aAST.getType())", "-            || (TokenTypes.INTERFACE_DEF == aAST.getType())", "-            || (TokenTypes.ENUM_CONSTANT_DEF == aAST.getType())", "-            || (TokenTypes.ENUM_DEF == aAST.getType()))", "+        if ((TokenTypes.CLASS_DEF == ast.getType())", "+            || (TokenTypes.INTERFACE_DEF == ast.getType())", "+            || (TokenTypes.ENUM_CONSTANT_DEF == ast.getType())", "+            || (TokenTypes.ENUM_DEF == ast.getType()))", "-            final MethodCounter counter = mCounters.pop();", "-            checkCounters(counter, aAST);", "+            final MethodCounter counter = counters.pop();", "+            checkCounters(counter, ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "073fd8af1a7d75b64cd7ceffe1f15d8b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FullIdent.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static void extractFullIdent(FullIdent aFull, DetailAST aAST)", "signatureAfterChange": "     private static void extractFullIdent(FullIdent full, DetailAST ast)", "diff": ["-    private static void extractFullIdent(FullIdent aFull, DetailAST aAST)", "+    private static void extractFullIdent(FullIdent full, DetailAST ast)", "-        if (aAST == null) {", "+        if (ast == null) {", "-        if (aAST.getType() == TokenTypes.DOT) {", "-            extractFullIdent(aFull, aAST.getFirstChild());", "-            aFull.append(\".\");", "+        if (ast.getType() == TokenTypes.DOT) {", "+            extractFullIdent(full, ast.getFirstChild());", "+            full.append(\".\");", "-                aFull, aAST.getFirstChild().getNextSibling());", "+                full, ast.getFirstChild().getNextSibling());", "-            aFull.append(aAST);", "+            full.append(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0749285b2f8fd5bf9ecae5a1cca3414a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "2e243db3fbdf7b737f78ed7cef0b9bd94f351d25", "commitAfterChange": "9586ee86d174ff502b9c57332b29f4b6e88e45ec", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Test     public void testExternalEntityFromURI() throws Exception", "signatureAfterChange": "      @Test     public void testExternalEntityFromUri() throws Exception", "diff": ["-    public void testExternalEntityFromURI() throws Exception {", "+    public void testExternalEntityFromUri() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0754da7cb426af3a8eda5fe1c987e94e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "         public void addStaticMethod(final String aName)", "signatureAfterChange": "         public void addStaticMethod(final String name)", "diff": ["-        public void addStaticMethod(final String aName)", "+        public void addStaticMethod(final String name)", "-            mStaticMethods.add(aName);", "+            staticMethods.add(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "077569f6df72b46eba3002bca9cb9cd5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void processIDENT(DetailAST aAST)", "signatureAfterChange": "     private void processIDENT(DetailAST ast)", "diff": ["-    private void processIDENT(DetailAST aAST)", "+    private void processIDENT(DetailAST ast)", "-        final int parentType = aAST.getParent().getType();", "+        final int parentType = ast.getParent().getType();", "-            if (mCheckMethods && isClassMethod(aAST.getText())) {", "-                log(aAST, \"require.this.method\", aAST.getText());", "+            if (checkMethods && isClassMethod(ast.getText())) {", "+                log(ast, \"require.this.method\", ast.getText());", "-        if (!mCheckFields) {", "+        if (!checkFields) {", "-        if (ScopeUtils.getSurroundingScope(aAST) == null) {", "+        if (ScopeUtils.getSurroundingScope(ast) == null) {", "-            && (aAST.getPreviousSibling() != null))", "+            && (ast.getPreviousSibling() != null))", "-        final String name = aAST.getText();", "+        final String name = ast.getText();", "-            log(aAST, \"require.this.variable\", name);", "+            log(ast, \"require.this.variable\", name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0781aa52e26bd9178f3dabe1b29adf78", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Utils.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static int lengthMinusTrailingWhitespace(String aLine)", "signatureAfterChange": "     public static int lengthMinusTrailingWhitespace(String line)", "diff": ["-    public static int lengthMinusTrailingWhitespace(String aLine)", "+    public static int lengthMinusTrailingWhitespace(String line)", "-        int len = aLine.length();", "+        int len = line.length();", "-            if (!Character.isWhitespace(aLine.charAt(i))) {", "+            if (!Character.isWhitespace(line.charAt(i))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0784a7d6799d0706d7fb2c5a8125376d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/WhitespaceAroundCheck.java", "commitBeforeChange": "c4a1f37d6abaa6390c0eed086ed6a7fdcb7615cb", "commitAfterChange": "3a5f587882ed215b863a17c03104c8fff9766b68", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public int[] getDefaultTokens()", "signatureAfterChange": "     public int[] getDefaultTokens()", "diff": ["-            TokenTypes.ASSERT     // TODO: why is it not LITERAL_assert?", "-                                  // maybe it's a bug in the grammar?", "+            TokenTypes.LITERAL_ASSERT"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07934527ed65be8c78c0fcd984f6a887", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "80ab48f859c1f16835dbd41afe42414b41969e2f", "commitAfterChange": "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setProcessJavadoc(boolean value)", "signatureAfterChange": "     public void setProcessJavadoc(boolean value)", "diff": ["-        processingJavadoc = value;", "+        processJavadoc = value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07c15cf19603cf3ea4703d3e28bae436", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setCacheFile(String aFileName)", "signatureAfterChange": "     public void setCacheFile(String fileName)", "diff": ["-    /** @param aFileName the cache file */", "-    public void setCacheFile(String aFileName)", "+    /** @param fileName the cache file */", "+    public void setCacheFile(String fileName)", "-        mCache = new PropertyCacheFile(configuration, aFileName);", "+        cache = new PropertyCacheFile(configuration, fileName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07c1d98802dec42cd10251c28cfe6a00", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                log(nextGroup, \"fall.through\");", "+                log(nextGroup, MSG_FALL_THROUGH);", "-                log(ast, \"fall.through.last\");", "+                log(ast, MSG_FALL_THROUGH_LAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07ca67aed7a448b5630632ec8f6ca794", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java", "commitBeforeChange": "f8d7894b17c5a905644a419958a23ca893622b52", "commitAfterChange": "56df5087fe891069e5824abc03ae158aa0d06d66", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setTag(String tag)", "signatureAfterChange": "     public void setTag(String tag)", "diff": ["-        tagRE = CommonUtils.createPattern(tag + \"\\\\s*(.*$)\");", "+        tagRegExp = CommonUtils.createPattern(tag + \"\\\\s*(.*$)\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07cff408613a1a531dd1e226d3071d00", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/StaticVariableNameCheckTest.java", "commitBeforeChange": "c2ce485b481ba4bd26eb3ba2e3cc6c1850539e0c", "commitAfterChange": "e615817b5bff08ada2fce5f43e9e1bcae4e77c38", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        int[] excpected = {TokenTypes.VARIABLE_DEF};", "-        assertArrayEquals(excpected, checkObj.getRequiredTokens());", "+        int[] expected = {TokenTypes.VARIABLE_DEF};", "+        assertArrayEquals(expected, checkObj.getRequiredTokens());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07d696f4f76db508642195800635a55f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Override     public void addException(AuditEvent aEvt, Throwable aThrowable)", "signatureAfterChange": "     @Override     public void addException(AuditEvent evt, Throwable throwable)", "diff": ["-    public void addException(AuditEvent aEvt, Throwable aThrowable)", "+    public void addException(AuditEvent evt, Throwable throwable)", "-        synchronized (mErrorWriter) {", "-            mErrorWriter.println(\"Error auditing \" + aEvt.getFileName());", "-            aThrowable.printStackTrace(mErrorWriter);", "+        synchronized (errorWriter) {", "+            errorWriter.println(\"Error auditing \" + evt.getFileName());", "+            throwable.printStackTrace(errorWriter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0807e40944d290d32c03029a0562bfcc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/MethodNameCheckTest.java", "commitBeforeChange": "c2ce485b481ba4bd26eb3ba2e3cc6c1850539e0c", "commitAfterChange": "e615817b5bff08ada2fce5f43e9e1bcae4e77c38", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testOverridenMethods() throws Exception", "signatureAfterChange": "      @Test     public void testOverriddenMethods() throws Exception", "diff": ["-    public void testOverridenMethods() throws Exception {", "+    public void testOverriddenMethods() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "080ac3475dd238520355c11b71eaf322", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "         public void setValue(String aValue)", "signatureAfterChange": "         public void setValue(String value)", "diff": ["-        /** @param aValue set the property value */", "-        public void setValue(String aValue)", "+        /** @param value set the property value */", "+        public void setValue(String value)", "-            mValue = aValue;", "+            this.value = value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "080b0dd1817d3821cd8dd1ca5497de97", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessageTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testBundleReload_UrlNotNullStreamNull() throws IOException", "signatureAfterChange": "      @Test     public void testBundleReloadUrlNotNullStreamNull() throws IOException", "diff": ["-    public void testBundleReload_UrlNotNullStreamNull() throws IOException {", "+    public void testBundleReloadUrlNotNullStreamNull() throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0811a11ce45a94c8d204f89ade7096f0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testConfigure_NoSuchAttribute()", "signatureAfterChange": "      @Test     public void testConfigureNoSuchAttribute()", "diff": ["-    public void testConfigure_NoSuchAttribute() {", "+    public void testConfigureNoSuchAttribute() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0826dee46c9ce9ade8bce33be8a1e559", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/comments/CommentsTest.java", "commitBeforeChange": "2057a77c3a524b86dff382ac8abdca71dd03764a", "commitAfterChange": "03f41815802b1ce6a0ca906c9f28c5a98344a932", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testCompareExpectedTreeWithInput_1() throws Exception", "signatureAfterChange": "      @Test     public void testCompareExpectedTreeWithInput_1() throws Exception", "diff": ["-        CompareTreesWithComments.expectedTree = buildInput_1();", "+        CompareTreesWithComments.expectedTree = buildInput1();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0828e7ad3ee52e28684da6db061a3322", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "         ClassAlias(final Token aName, ClassInfo aClassInfo)", "signatureAfterChange": "         ClassAlias(final Token name, ClassInfo classInfo)", "diff": ["-        ClassAlias(final Token aName, ClassInfo aClassInfo)", "+        ClassAlias(final Token name, ClassInfo classInfo)", "-            super(aName);", "-            mClassInfo = aClassInfo;", "+            super(name);", "+            this.classInfo = classInfo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "082caa2fc7f662b78719c0474b3069de", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/FilterChain.java", "commitBeforeChange": "0daafbddda839b80d401311edc9650dccc856706", "commitAfterChange": "4b841439a6a388e947ece4b93714bc771adc1fa5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int decide(Object aObject)", "signatureAfterChange": "     public int decide(Object aObject)", "diff": ["-        return AuditEventFilter.NEUTRAL;", "+        return Filter.NEUTRAL;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "085b33c1dd9090e2e397a31389d8341f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private boolean isEmptyBody(DetailAST aLcurly)", "signatureAfterChange": "     private boolean isEmptyBody(DetailAST lcurly)", "diff": ["-    private boolean isEmptyBody(DetailAST aLcurly)", "+    private boolean isEmptyBody(DetailAST lcurly)", "-        if (aLcurly.getParent().getType() == TokenTypes.OBJBLOCK) {", "-            if (aLcurly.getNextSibling().getType() == TokenTypes.RCURLY) {", "+        if (lcurly.getParent().getType() == TokenTypes.OBJBLOCK) {", "+            if (lcurly.getNextSibling().getType() == TokenTypes.RCURLY) {", "-        else if (aLcurly.getFirstChild().getType() == TokenTypes.RCURLY) {", "+        else if (lcurly.getFirstChild().getType() == TokenTypes.RCURLY) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "086bee6f754300da8f8190dcd288cc63", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void processPackageDef(DetailAST aAST)", "signatureAfterChange": "     private void processPackageDef(DetailAST ast)", "diff": ["-    private void processPackageDef(DetailAST aAST)", "+    private void processPackageDef(DetailAST ast)", "-        final DetailAST packageNameAST = aAST.getLastChild()", "+        final DetailAST packageNameAST = ast.getLastChild()", "-        mPkgName = packageIdent.getText();", "+        pkgName = packageIdent.getText();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0888dd4a6f9075d0511176ebd80e38e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static boolean whitespaceBetween(         int froindex, int toIndex, String line)", "signatureAfterChange": "     private static boolean whitespaceBetween(         int fromIndex, int toIndex, String line)", "diff": ["-        int froindex, int toIndex, String line)", "+        int fromIndex, int toIndex, String line)", "-        for (int i = froindex; i < toIndex; i++) {", "+        for (int i = fromIndex; i < toIndex; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "089382580df390538bbb25fa8d943684", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     void setPreviousSibling(DetailAST aAST)", "signatureAfterChange": "     void setPreviousSibling(DetailAST ast)", "diff": ["-    void setPreviousSibling(DetailAST aAST)", "+    void setPreviousSibling(DetailAST ast)", "-        mPreviousSibling = aAST;", "+        previousSibling = ast;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08a25d2a48a65f0abb615f807115e756", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public TagParser(String[] aText, int aLineNo)", "signatureAfterChange": "     public TagParser(String[] text, int lineNo)", "diff": ["-    public TagParser(String[] aText, int aLineNo)", "+    public TagParser(String[] text, int lineNo)", "-        parseTags(aText, aLineNo);", "+        parseTags(text, lineNo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08bd58800441865391745fcbd3d04854", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "13a49cc45b1527357934dd7802c24686d7bb7858", "commitAfterChange": "24d7448294b03e49709c8e5588e89c27091ba0f2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Override     public void checkIndentation()", "signatureAfterChange": "      @Override     public void checkIndentation()", "diff": ["-                              childrenMayNest());", "+                              canChildrenBeNested());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09028712f9cbf4d37d5cc3a8ce762444", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "bd4ec9a98edaced73f14c5422f64c39fad3ce596", "commitAfterChange": "fc17c983239b6e6a6d3e41f53cb134bd22488db1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "          public void testIgnoreNegativeOctalHex()          throws Exception", "signatureAfterChange": "          public void testIgnoreNegativeOctalHex()          throws Exception", "diff": ["-              \"91:14: '0xffffffffL' is a magic number.\",", "-              \"99:30: '+3' is a magic number.\",", "-              \"100:29: '-2' is a magic number.\",", "+              \"92:14: '0xffffffffL' is a magic number.\",", "+              \"100:30: '+3' is a magic number.\",", "+              \"101:29: '-2' is a magic number.\",", "+              \"131:32: '378' is a magic number.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09211cc4f4f852dac40e9c27d897c173", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "be6d271ac34efc3daed3dbb873ab8060723dd4f8", "commitAfterChange": "b06dd9801e56887f7da1bbc8b55233e0ff5f5115", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void setTypepattern(String aPat)", "signatureAfterChange": "     public void setTypePattern(String aPat)", "diff": ["-    public void setTypepattern(String aPat)", "+    public void setTypePattern(String aPat)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09250950ffbd6e45724e12c4eb5ab7d3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "aa89a8aa52c5fde5ede8599d3d30cea87cd06f95", "commitAfterChange": "91a49a90d40c6adad5f973f792c6b80003a69263", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public IllegalTypeCheck()", "signatureAfterChange": "     public IllegalTypeCheck()", "diff": ["-        super(DEFAULT_FORMAT);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0946a8d91ca074b503a1bf90d54cd2a4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void checkOrderInTagSection(DetailNode aJavadoc)", "signatureAfterChange": "     private void checkOrderInTagSection(DetailNode javadoc)", "diff": ["-    private void checkOrderInTagSection(DetailNode aJavadoc)", "+    private void checkOrderInTagSection(DetailNode javadoc)", "-        for (DetailNode node : aJavadoc.getChildren()) {", "+        for (DetailNode node : javadoc.getChildren()) {", "-                indexOrderOfCurrentTag = mTagOrder.indexOf(tagText);", "+                indexOrderOfCurrentTag = tagOrder.indexOf(tagText);", "-                if (mTagOrder.contains(tagText)", "+                if (tagOrder.contains(tagText)", "-                    log(node.getLineNumber(), \"at.clause.order\", mTagOrder.toString());", "+                    log(node.getLineNumber(), \"at.clause.order\", tagOrder.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0954f7652441e893fc6f3f78c74180b9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static FileText fromLines(File aFile, List<String> aLines)", "signatureAfterChange": "     public static FileText fromLines(File file, List<String> lines)", "diff": ["-    public static FileText fromLines(File aFile, List<String> aLines)", "+    public static FileText fromLines(File file, List<String> lines)", "-        return (aLines instanceof FileText)", "-            ? (FileText) aLines", "-            : new FileText(aFile, aLines);", "+        return (lines instanceof FileText)", "+            ? (FileText) lines", "+            : new FileText(file, lines);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09979690578c965eae8638a612bd0faa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "a13ebd482ce5dd891ba99d4c22a7cd5ff7d8e2dc", "commitAfterChange": "dad4fa599aa3570980fcaff4cb5f37941847a7a1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testAddFilter() throws Exception", "signatureAfterChange": "      @Test     public void testAddFilter() throws Exception", "diff": ["-        final DebugChecker c = new DebugChecker();", "-        final DebugFilter f = new DebugFilter();", "+        final DebugChecker checker = new DebugChecker();", "+        final DebugFilter filter = new DebugFilter();", "-        c.addFilter(f);", "+        checker.addFilter(filter);", "-        f.resetFilter();", "+        filter.resetFilter();", "-        c.fireErrors(\"Some File Name\", msgs);", "-        assertTrue(\"Checker.fireErrors() doesn't call filter\", f.wasCalled());", "+        checker.fireErrors(\"Some File Name\", msgs);", "+        assertTrue(\"Checker.fireErrors() doesn't call filter\", filter.wasCalled());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0997c8484d52940562ab76b9059fb490", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitJavadocToken(DetailNode aAst)", "signatureAfterChange": "      @Override     public void visitJavadocToken(DetailNode ast)", "diff": ["-    public void visitJavadocToken(DetailNode aAst)", "+    public void visitJavadocToken(DetailNode ast)", "-        final List<DetailNode> textNodes = getAllNewlineNodes(aAst);", "-        if (isInlineDescription(aAst)) {", "+        final List<DetailNode> textNodes = getAllNewlineNodes(ast);", "+        if (isInlineDescription(ast)) {", "-                        && whitespace.getText().length() - 1 < mOffset)", "+                        && whitespace.getText().length() - 1 < offset)", "-                    log(textNode.getLineNumber(), \"tag.continuation.indent\", mOffset);", "+                    log(textNode.getLineNumber(), \"tag.continuation.indent\", offset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09a16e6ba7f1741f299c919674b2a149", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "80ab48f859c1f16835dbd41afe42414b41969e2f", "commitAfterChange": "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void checkHtml(final DetailAST ast, final TextBlock comment)", "signatureAfterChange": "     private void checkHtmlTags(final DetailAST ast, final TextBlock comment)", "diff": ["-    private void checkHtml(final DetailAST ast, final TextBlock comment) {", "+    private void checkHtmlTags(final DetailAST ast, final TextBlock comment) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09a22b3c8de86d82ecc5e572dca80d13", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void setAllowMissingJavadoc(boolean aFlag)", "signatureAfterChange": "     public void setAllowMissingJavadoc(boolean flag)", "diff": ["-    public void setAllowMissingJavadoc(boolean aFlag)", "+    public void setAllowMissingJavadoc(boolean flag)", "-        mAllowMissingJavadoc = aFlag;", "+        allowMissingJavadoc = flag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09aa29768b576d00b829b1b1bcc3d736", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "6b852ccfbc949ae57e76ef73f1451b717e15d6e8", "commitAfterChange": "0a4a41f4797c6c5c6a73c6c2ed9b5c173a328a12", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     @Override     public void visitToken(DetailAST aAST)", "diff": ["-        super.visitToken(aAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09c42da740eb5cf36b1edbdc3b31fb65", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ListToTreeSelectionModelWrapper.java", "commitBeforeChange": "443e534a3c98c0b30f24647da724fe918f17a006", "commitAfterChange": "66d73fe6189267fee3423e2e8d7fc2d68599a43f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void updateSelectedPathIfRowIsSelected(int counter)", "signatureAfterChange": "     private void updateSelectedPathIfRowIsSelected(int counter)", "diff": ["-            final TreePath selPath = jTreeTable.tree.getPathForRow(counter);", "+            final TreePath selPath = treeTable.tree.getPathForRow(counter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09d3b32fc32ec716669406c097cbc42b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/InputNestedBlocks.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void method()", "signatureAfterChange": "      public void method()", "diff": ["-            int x = 1;", "-            int y = x;", "+            int z = 1;", "+            int y = z;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09d44bf6f556096f6b3a357f2011b60a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private void tagSuppressions(Collection<TextBlock> aComments)", "signatureAfterChange": "     private void tagSuppressions(Collection<TextBlock> comments)", "diff": ["-    private void tagSuppressions(Collection<TextBlock> aComments)", "+    private void tagSuppressions(Collection<TextBlock> comments)", "-        for (TextBlock comment : aComments) {", "+        for (TextBlock comment : comments) {", "-            tagCommentLine(text[0], startLineNo, comment.getStartColNo());", "+            tagCoontLine(text[0], startLineNo, comment.getStartColNo());", "-                tagCommentLine(text[i], startLineNo + i, 0);", "+                tagCoontLine(text[i], startLineNo + i, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a11bede39ae1a07eda71710a08dbae7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/InputLeftCurlyOther.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     int foo() throws InterruptedException", "signatureAfterChange": "     int foo() throws InterruptedException", "diff": ["-        if (System.currentMillis() > 1000)", "+        if (System.currentTimeMillis() > 1000)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a1b42620f83c9134a610a9ac3601fd1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void setCheckFirstSentence(boolean aFlag)", "signatureAfterChange": "     public void setCheckFirstSentence(boolean flag)", "diff": ["-    public void setCheckFirstSentence(boolean aFlag)", "+    public void setCheckFirstSentence(boolean flag)", "-        mCheckFirstSentence = aFlag;", "+        checkFirstSentence = flag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a3d6800e32b4b3a75133cf971d9a058", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public boolean isProtectedAllowed()", "signatureAfterChange": "     public boolean isProtectedAllowed()", "diff": ["-        return mProtectedAllowed;", "+        return protectedAllowed;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a483ae9d6ef7454d1019fdfc03eb401", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.java", "commitBeforeChange": "02ae6023b5b6f66e495393a6f87e4beb4b4ab3d0", "commitAfterChange": "584f7ee1232be96284255540e7249023c327ca8f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected final LocalizedMessages getMessageCollector()", "signatureAfterChange": "     protected final LocalizedMessages getMessageCollector()", "diff": ["-        return messages;", "+        return messageCollector;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a7609ed2f46ef9608622e807c472e70", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     protected void processFiltered(File aFile, List<String> aLines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-    protected void processFiltered(File aFile, List<String> aLines)", "+    protected void processFiltered(File file, List<String> lines)", "-        final String fileName = aFile.getPath();", "-        final long timestamp = aFile.lastModified();", "-        if (mCache.alreadyChecked(fileName, timestamp)) {", "+        final String fileName = file.getPath();", "+        final long timestamp = file.lastModified();", "+        if (cache.alreadyChecked(fileName, timestamp)) {", "-            final FileText text = FileText.fromLines(aFile, aLines);", "+            final FileText text = FileText.fromLines(file, lines);", "-            mCache.checkedOk(fileName, timestamp);", "+            cache.checkedOk(fileName, timestamp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0aabf3fd4a22e216fe6d9de008b43fd3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public SuppressElement(String aFiles, String aChecks)         throws RESyntaxException", "signatureAfterChange": "     public SuppressElement(String aFiles, String aChecks)         throws PatternSyntaxException", "diff": ["-        throws RESyntaxException", "+        throws PatternSyntaxException", "-        mFileRegexp = Utils.getRE(aFiles);", "+        mFileRegexp = Utils.getPattern(aFiles);", "-        mCheckRegexp = Utils.getRE(aChecks);", "+        mCheckRegexp = Utils.getPattern(aChecks);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ad0cd90ac6734dc7bdd90902442ee5c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private DetailAST skipVariableAssign(final DetailAST aCurrentAST)", "signatureAfterChange": "     private DetailAST skipVariableAssign(final DetailAST currentAST)", "diff": ["-    private DetailAST skipVariableAssign(final DetailAST aCurrentAST)", "+    private DetailAST skipVariableAssign(final DetailAST currentAST)", "-        if ((aCurrentAST.getType() == TokenTypes.ASSIGN)", "-                && (aCurrentAST.getFirstChild().getType() == TokenTypes.IDENT))", "+        if ((currentAST.getType() == TokenTypes.ASSIGN)", "+                && (currentAST.getFirstChild().getType() == TokenTypes.IDENT))", "-            return aCurrentAST.getFirstChild().getNextSibling();", "+            return currentAST.getFirstChild().getNextSibling();", "-        return aCurrentAST;", "+        return currentAST;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ad8a43d27081e07a15b2e9b36c5027f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/LocalizedMessages.java", "commitBeforeChange": "96d6745a12127bd547e32137713b33aa9327aeb8", "commitAfterChange": "6dfee04a5836a4ee00e6cd255d609f888c22f4a0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public LocalizedMessage[] getMessages()", "signatureAfterChange": "     public LocalizedMessage[] getMessages()", "diff": ["-        Collections.sort(mMessages);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0aeb06d6e63259cc560d67bd84f8fe66", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/LocalizedMessage.java", "commitBeforeChange": "816c6b33c9ab7b1f3584e3f29ff410fccaa193ee", "commitAfterChange": "25a13442f2d67729eba3b1e8eff32ed926396ee3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public String getMessage()", "signatureAfterChange": "     public String getMessage()", "diff": ["-        // Very simple approach - wait for performance problems", "+        // Very simple approach - wait for performance problems.", "+        // Important to use the default class loader, and not the one in the", "+        // Configuration object. This is because the class loader in the", "+        // Configuration is specified by the user for resolving custom classes.", "-            ResourceBundle.getBundle(MESSAGE_BUNDLE, sLocale, sLoader);", "+            ResourceBundle.getBundle(MESSAGE_BUNDLE, sLocale);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b211c98b08ce8359ac45c540af53308", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "commitAfterChange": "6125beffc437f970eae276b4a6542265c6547784", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "         boolean isStaticClass()", "signatureAfterChange": "         boolean isStaticType()", "diff": ["-        boolean isStaticClass()", "+        boolean isStaticType()", "-            return mStaticClass;", "+            return mStaticType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b64ec4b416b1e1ddebe572d55e58039", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "88edaa84fdcd29fe5cce6c3497cb326244b14197", "commitAfterChange": "067896807847df81ba6e65195e4f39069dc3aea7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDestroy() throws Exception", "signatureAfterChange": "     @Test     public void testDestroy() throws Exception", "diff": ["-        final DebugAuditAdapter aa = new DebugAuditAdapter();", "-        c.addListener(aa);", "+        final DebugAuditAdapter auditAdapter = new DebugAuditAdapter();", "+        c.addListener(auditAdapter);", "-        assertFalse(\"Checker.destroy() doesn't remove listeners.\", aa.wasCalled());", "+        assertFalse(\"Checker.destroy() doesn't remove listeners.\", auditAdapter.wasCalled());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b8573c569835cc10400557b7ea36fcd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java", "commitBeforeChange": "896af516b0028ff2a26cc1888dfaba620d3fe9e0", "commitAfterChange": "55c92042eb6986e905529de841d3d1c9a7b2b6dd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void visitLiteralFor(DetailAST ast)", "signatureAfterChange": "     private void visitLiteralFor(DetailAST ast)", "diff": ["-        if (!isPreceedsEmptyForInit(parenAst)) {", "+        if (!isPrecedingEmptyForInit(parenAst)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b85d7793a7be91f0016426a6b754e64", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/javadoc/InputSetterGetter.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void setNumber1()", "signatureAfterChange": "      public void setNumber1()", "diff": ["-        mNumber = number;", "+        mNumber = mNumber;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b8a2a3d6f80a98d2dcbf8f546da9d66", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private boolean hasUnicodeChar(String aLiteral)", "signatureAfterChange": "     private boolean hasUnicodeChar(String literal)", "diff": ["-    private boolean hasUnicodeChar(String aLiteral)", "+    private boolean hasUnicodeChar(String literal)", "-        return sUnicodeRegexp.matcher(aLiteral).find();", "+        return sUnicodeRegexp.matcher(literal).find();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bc057076d656b5b69c7f78bd805a201", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractLoader.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected AbstractLoader(String aPublicId, String aDtdResourceName)         throws SAXException, ParserConfigurationException", "signatureAfterChange": "     protected AbstractLoader(String publicId, String dtdResourceName)         throws SAXException, ParserConfigurationException", "diff": ["-    protected AbstractLoader(String aPublicId, String aDtdResourceName)", "+    protected AbstractLoader(String publicId, String dtdResourceName)", "-        mPublicIdToResourceNameMap.put(aPublicId, aDtdResourceName);", "+        publicIdToResourceNameMap.put(publicId, dtdResourceName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c30b4d2efa8929aca83611e7ca64648", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "bf529ef600fa9ef2034d0412c198b2121f2b94f2", "commitAfterChange": "ce196814d857a4244a80c51d5151cc35e90b6749", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Override     public void addError(AuditEvent evt)", "signatureAfterChange": "     @Override     public void addError(AuditEvent event)", "diff": ["-    public void addError(AuditEvent evt) {", "-        final SeverityLevel severityLevel = evt.getSeverityLevel();", "+    public void addError(AuditEvent event) {", "+        final SeverityLevel severityLevel = event.getSeverityLevel();", "-            final String fileName = evt.getFileName();", "-            final String message = evt.getMessage();", "+            final String fileName = event.getFileName();", "+            final String message = event.getMessage();", "-            sb.append(fileName).append(':').append(evt.getLine());", "-            if (evt.getColumn() > 0) {", "-                sb.append(':').append(evt.getColumn());", "+            sb.append(fileName).append(':').append(event.getLine());", "+            if (event.getColumn() > 0) {", "+                sb.append(':').append(event.getColumn());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c333417e57b94e30fb9d50c9a3f9599", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/MethodCountCheck.java", "commitBeforeChange": "a6e4d310c0e38d73e7816a5fb57e66fc221d79ec", "commitAfterChange": "5c6e03a868c0f756ccd3bb9b796febbbbf25bd4e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void setMaxPrivate(int maxPrivate)", "signatureAfterChange": "     public void setMaxPrivate(int aValue)", "diff": ["-    public void setMaxPrivate(int maxPrivate)", "+     */", "+    public void setMaxPrivate(int aValue)", "-        mMaxPrivate = maxPrivate;", "+        mMaxPrivate = aValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c5b8599d4d620956451676ee031acb6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public String getFilename()", "signatureAfterChange": "     public String getFilename()", "diff": ["-        return mFilename;", "+        return filename;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c71977d75612aa7d6c0134bd8f3de36", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private String getNextImportGroup(int aCurrentGroupNumber)", "signatureAfterChange": "     private String getNextImportGroup(int currentGroupNumber)", "diff": ["-    private String getNextImportGroup(int aCurrentGroupNumber)", "+    private String getNextImportGroup(int currentGroupNumber)", "-        int nextGroupNumber = aCurrentGroupNumber;", "+        int nextGroupNumber = currentGroupNumber;", "-        while (mCustomImportOrderRules.size() > nextGroupNumber + 1) {", "-            if (hasAnyImportInCurrentGroup(mCustomImportOrderRules.get(nextGroupNumber)))", "+        while (customImportOrderRules.size() > nextGroupNumber + 1) {", "+            if (hasAnyImportInCurrentGroup(customImportOrderRules.get(nextGroupNumber)))", "-        return mCustomImportOrderRules.get(nextGroupNumber);", "+        return customImportOrderRules.get(nextGroupNumber);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c88bd909e69daac7ea31b01fdb7dd76", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/OuterTypeNumberCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAst)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAst)", "+    public void visitToken(DetailAST ast)", "-        if (0 == mCurrentDepth) {", "-            mOuterNum++;", "+        if (0 == currentDepth) {", "+            outerNum++;", "-        mCurrentDepth++;", "+        currentDepth++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c945d068db354ca25279c7cc74c83ae", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "4ec8ddc40520923e19c26c63e9c9ac84ba15b276", "commitAfterChange": "bf235506eb046bcc12cf20892d821d2a00fdd74c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "         public FieldFrame(FieldFrame parent, boolean staticType,             Integer frameType, String frameName)", "signatureAfterChange": "         public FieldFrame(FieldFrame parent, boolean staticType,             Integer frameType, String frameName)", "diff": ["-            this.frameType = frameType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c99dc776d5de820ff2d23705f989ce2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressElementTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testDecideByFileNameAndModuleMatching_MessageNull()", "signatureAfterChange": "      @Test     public void testDecideByFileNameAndModuleMatchingMessageNull()", "diff": ["-    public void testDecideByFileNameAndModuleMatching_MessageNull() {", "+    public void testDecideByFileNameAndModuleMatchingMessageNull() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cd6951aedf0cc4bfe8da6da342e323a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "         public boolean isStatic()", "signatureAfterChange": "         public boolean isStatic()", "diff": ["-            return mStatic;", "+            return isStatic;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cde5cfe352f921b447fda4734579fe8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/WhitespaceAroundCheck.java", "commitBeforeChange": "8313819dcbf3e9cc0700120014c78a99706d88bb", "commitAfterChange": "daf94e4e8e5b97ccbf9cdf7b45b2f054772f7de1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public int[] getDefaultTokens()", "signatureAfterChange": "     public int[] getDefaultTokens()", "diff": ["-            // PLUS,              //' +' TODO: unaray plus", "+            PLUS,              //' +' (unaray plus is UNARY_PLUS)", "-            // MINUS,             // '-' TODO: unary minus", "+            MINUS,             // '-' (unary minus is UNARY_MINUS)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cf61e3025d77d5d2c614f8c5475b2fd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean checkParams(DetailAST aMethod)", "signatureAfterChange": "     private boolean checkParams(DetailAST method)", "diff": ["-    private boolean checkParams(DetailAST aMethod)", "+    private boolean checkParams(DetailAST method)", "-        final DetailAST params = aMethod.findFirstToken(TokenTypes.PARAMETERS);", "+        final DetailAST params = method.findFirstToken(TokenTypes.PARAMETERS);", "-        final DetailAST paramType = (params.getFirstChild())", "+        final DetailAST paratype = (params.getFirstChild())", "-            paramType.findFirstToken(TokenTypes.ARRAY_DECLARATOR);", "+            paratype.findFirstToken(TokenTypes.ARRAY_DECLARATOR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d144193de2ca938f76012e952359b84", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setCheckFields(boolean aCheckFields)", "signatureAfterChange": "     public void setCheckFields(boolean checkFields)", "diff": ["-    public void setCheckFields(boolean aCheckFields)", "+    public void setCheckFields(boolean checkFields)", "-        mCheckFields = aCheckFields;", "+        this.checkFields = checkFields;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d1eeb5fa3c0bf4926b03b0607313c4b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "         LexicalFrame getIfContains(String aNameToFind)", "signatureAfterChange": "         LexicalFrame getIfContains(String nameToFind)", "diff": ["-        LexicalFrame getIfContains(String aNameToFind)", "+        LexicalFrame getIfContains(String nameToFind)", "-            if (contains(aNameToFind)) {", "+            if (contains(nameToFind)) {", "-            else if (mParent != null) {", "-                return mParent.getIfContains(aNameToFind);", "+            else if (parent != null) {", "+                return parent.getIfContains(nameToFind);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d2bf13a16137242d19da1570973007b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java", "commitBeforeChange": "02aaa1b7f653e25c34ef7f186fa1d940079384e8", "commitAfterChange": "52ac2776d7f128ff812b73b54dcc12210661f98b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic File getROOT()", "signatureAfterChange": "  \tpublic File getROOT()", "diff": ["-\t\treturn mROOT;", "+\t\treturn ROOT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d4b8b6855094b04868c1361f9e6a62c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "commitAfterChange": "26513d52336c42432ee21565b253297ba4174530", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void endElement(final String namespaceURI, final String localName,         final String qName)", "signatureAfterChange": "      @Override     public void endElement(final String namespaceURI, final String localName,         final String qName)", "diff": ["-        if (\"subpackage\".equals(qName)) {", "+        if (SUBPACKAGE_ELEMENT_NAME.equals(qName)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d5cfdcc64b5d8c5e3cfadbabb205ff3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void visitPackageDef(DetailAST aPkg)", "signatureAfterChange": "     private void visitPackageDef(DetailAST pkg)", "diff": ["-    private void visitPackageDef(DetailAST aPkg)", "+    private void visitPackageDef(DetailAST pkg)", "-        final FullIdent ident = FullIdent.createFullIdent(aPkg.getLastChild()", "+        final FullIdent ident = FullIdent.createFullIdent(pkg.getLastChild()", "-        mPackageName = ident.getText();", "+        packageName = ident.getText();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d62a7592ca3cdd16bae0b1f85faa8af", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void visitForEachClause(final DetailAST aForEachClause)", "signatureAfterChange": "     private void visitForEachClause(final DetailAST forEachClause)", "diff": ["-    private void visitForEachClause(final DetailAST aForEachClause)", "+    private void visitForEachClause(final DetailAST forEachClause)", "-        checkParam(aForEachClause.findFirstToken(TokenTypes.VARIABLE_DEF));", "+        checkParam(forEachClause.findFirstToken(TokenTypes.VARIABLE_DEF));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d8c47287b00f926db95d0f2bbd88369", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractSuperCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "         public MethodNode(DetailAST aAST)", "signatureAfterChange": "         public MethodNode(DetailAST ast)", "diff": ["-        public MethodNode(DetailAST aAST)", "+        public MethodNode(DetailAST ast)", "-            mMethod = aAST;", "-            mCallsSuper = false;", "+            method = ast;", "+            callsSuper = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0da29028308262698df799c84ecda0e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     private boolean hasShortCircuitTag(final DetailAST ast,             final List<JavadocTag> tags)", "signatureAfterChange": "     private boolean hasShortCircuitTag(final DetailAST ast,             final List<JavadocTag> tags)", "diff": ["-            log(ast, \"javadoc.invalidInheritDoc\");", "+            log(ast, MSG_INVALID_INHERIT_DOC);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dc1e4d4e992e8f4d66ac61dd663d7bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        switch (aAST.getType()) {", "+        switch (ast.getType()) {", "-            this.mCurrent = this.mFrames.get(aAST);", "+            this.current = this.frames.get(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dd38490351e888bb246039362cf2264", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java", "commitBeforeChange": "0dbbf3b83a9832eb381db6dc777916e9d7fa676f", "commitAfterChange": "16ae5032c5e25ad35475c9a0f2de578ea6e640e5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void postprocessLiteralNew(DetailAST ast)", "signatureAfterChange": "     private void postprocessLiteralNew(DetailAST newTokenAst)", "diff": ["-    private void postprocessLiteralNew(DetailAST ast) {", "-        final DetailAST typeNameAST = ast.getFirstChild();", "-        final AST nameSibling = typeNameAST.getNextSibling();", "-        if (nameSibling != null", "-                && nameSibling.getType() == TokenTypes.ARRAY_DECLARATOR) {", "+    private void postprocessLiteralNew(DetailAST newTokenAst) {", "+        final DetailAST typeNameAst = newTokenAst.getFirstChild();", "+        final AST nameSibling = typeNameAst.getNextSibling();", "+        if (nameSibling.getType() == TokenTypes.ARRAY_DECLARATOR) {", "-        final FullIdent typeIdent = FullIdent.createFullIdent(typeNameAST);", "+        final FullIdent typeIdent = FullIdent.createFullIdent(typeNameAst);", "-        final int lineNo = ast.getLineNo();", "-        final int colNo = ast.getColumnNo();", "+        final int lineNo = newTokenAst.getLineNo();", "+        final int colNo = newTokenAst.getColumnNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0de0c2eacba1cac4f21aab8ed925fc39", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "0382b7907b54e95408344863915a847dabc37f12", "commitAfterChange": "eb5896a4a1d66552f5100046413f15d62b485b62", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "         protected ClassInfo(final Token className)", "signatureAfterChange": "         protected AbstractClassInfo(final Token className)", "diff": ["-        protected ClassInfo(final Token className) {", "+        protected AbstractClassInfo(final Token className) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0df8b74e0db345cfc541e95c50958953", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "commitAfterChange": "abfc952fd0ed88f6246b1d969a8a980ea63f0bd6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public LocalizedMessage(int lineNo,                             int colNo,                             String bundle,                             String key,                             Object[] args,                             SeverityLevel severityLevel,                             String moduleId,                             Class<?> sourceClass,                             String customMessage)", "signatureAfterChange": "     public LocalizedMessage(int lineNo,                             int columnNo,                             String bundle,                             String key,                             Object[] args,                             SeverityLevel severityLevel,                             String moduleId,                             Class<?> sourceClass,                             String customMessage)", "diff": ["-                            int colNo,", "+                            int columnNo,", "-        this.colNo = colNo;", "+        this.columnNo = columnNo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e0ea1dd9eb8e59b3a9b7bed223b7121", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void endElement(String aNamespaceURI,                            String aLocalName,                            String aQName)", "signatureAfterChange": "      @Override     public void endElement(String namespaceURI,                            String localName,                            String qName)", "diff": ["-    public void endElement(String aNamespaceURI,", "-                           String aLocalName,", "-                           String aQName)", "+    public void endElement(String namespaceURI,", "+                           String localName,", "+                           String qName)", "-        if (\"package\".equals(aQName)) {", "+        if (\"package\".equals(qName)) {", "-            mPackageNames.add(getPackageName());", "-            mPackageStack.pop();", "+            packageNames.add(getPackageName());", "+            packageStack.pop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e135ba6d6e00c527a567af3fb18825e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TrailingCommentCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setLegalComment(final String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setLegalComment(final String format)         throws ConversionException", "diff": ["-    public void setLegalComment(final String aFormat)", "+    public void setLegalComment(final String format)", "-            mLegalComment = Utils.getPattern(aFormat);", "+            legalComment = Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e255d34d6e04f290d72bec8729d50d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "         public void setKey(String aKey)", "signatureAfterChange": "         public void setKey(String key)", "diff": ["-        /** @param aKey sets the property key */", "-        public void setKey(String aKey)", "+        /** @param key sets the property key */", "+        public void setKey(String key)", "-            mKey = aKey;", "+            this.key = key;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e4830b881b5c7b405c322b8697e3d02", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/InputRequireThis.java", "commitBeforeChange": "10f348bbfd91fd8c2bd7776aff3c03f549380a44", "commitAfterChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "         void bar()", "signatureAfterChange": "         void bar()", "diff": ["+            i++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e62171658122de76161ab47640d81a7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     PkgControl(final PkgControl aParent, final String aSubPkg)", "signatureAfterChange": "     PkgControl(final PkgControl parent, final String subPkg)", "diff": ["-    PkgControl(final PkgControl aParent, final String aSubPkg)", "+    PkgControl(final PkgControl parent, final String subPkg)", "-        assert aParent != null;", "-        assert aSubPkg != null;", "-        mParent = aParent;", "-        mFullPackage = aParent.getFullPackage() + \".\" + aSubPkg;", "-        mParent.mChildren.add(this);", "+        assert parent != null;", "+        assert subPkg != null;", "+        this.parent = parent;", "+        fullPackage = parent.getFullPackage() + \".\" + subPkg;", "+        parent.children.add(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ea68fae47bef635ab64de0f2f6402b0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private boolean isIgnoredParamOfAbstractMethod(DetailAST aAST)", "signatureAfterChange": "     private boolean isIgnoredParamOfAbstractMethod(DetailAST ast)", "diff": ["-    private boolean isIgnoredParamOfAbstractMethod(DetailAST aAST)", "+    private boolean isIgnoredParamOfAbstractMethod(DetailAST ast)", "-        if ((aAST.getType() != TokenTypes.PARAMETER_DEF)", "-            || !mIgnoreAbstractMethods)", "+        if ((ast.getType() != TokenTypes.PARAMETER_DEF)", "+            || !ignoreAbstractMethods)", "-        final DetailAST method = aAST.getParent().getParent();", "+        final DetailAST method = ast.getParent().getParent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ea97cfe908f2e82991564f8dc820e3f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "be6d271ac34efc3daed3dbb873ab8060723dd4f8", "commitAfterChange": "b06dd9801e56887f7da1bbc8b55233e0ff5f5115", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void setHeaderfile(File aName)", "signatureAfterChange": "     public void setHeaderFile(File aName)", "diff": ["-    public void setHeaderfile(File aName)", "+    public void setHeaderFile(File aName)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0eb2d892dbf4a9a11c043b9c7e87d33c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     private static String getFullImportIdent(DetailAST aToken)", "signatureAfterChange": "     private static String getFullImportIdent(DetailAST token)", "diff": ["-    private static String getFullImportIdent(DetailAST aToken)", "+    private static String getFullImportIdent(DetailAST token)", "-        return aToken != null ? FullIdent.createFullIdent(aToken.", "+        return token != null ? FullIdent.createFullIdent(token."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0eca37d6c358109918fe260a24dbece3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ArrayInitHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     protected IndentLevel getChildrenExpectedLevel()", "signatureAfterChange": "      @Override     protected IndentLevel getChildrenExpectedIndent()", "diff": ["-    protected IndentLevel getChildrenExpectedLevel() {", "+    protected IndentLevel getChildrenExpectedIndent() {", "-            new IndentLevel(getLevel(), getIndentCheck().getArrayInitIndent(),", "+            new IndentLevel(getIndent(), getIndentCheck().getArrayInitIndent(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ed2316f8b223e5add7ddc9f128aa8dc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private RE getPublicMemberRegexp()", "signatureAfterChange": "     private Pattern getPublicMemberRegexp()", "diff": ["-    private RE getPublicMemberRegexp()", "+    private Pattern getPublicMemberRegexp()", "-        return mPublicMemberRE;", "+        return mPublicMemberPattern;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0efa40d11b44abf868c701c229291eb4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static boolean inAbstractOrNativeMethod(DetailAST ast)", "signatureAfterChange": "     private static boolean isInAbstractOrNativeMethod(DetailAST ast)", "diff": ["-    private static boolean inAbstractOrNativeMethod(DetailAST ast) {", "+    private static boolean isInAbstractOrNativeMethod(DetailAST ast) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f4f7ff5157842473b34401a61e5ecda", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressElementTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testDecideByFileNameAndModuleMatching_FileNameNull()", "signatureAfterChange": "      @Test     public void testDecideByFileNameAndModuleMatchingFileNameNull()", "diff": ["-    public void testDecideByFileNameAndModuleMatching_FileNameNull() {", "+    public void testDecideByFileNameAndModuleMatchingFileNameNull() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f52cb923579f548e007c783ac5fd525", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void checkParagraphTag(DetailNode aTag)", "signatureAfterChange": "     private void checkParagraphTag(DetailNode tag)", "diff": ["-    private void checkParagraphTag(DetailNode aTag)", "+    private void checkParagraphTag(DetailNode tag)", "-        final DetailNode newLine = getNearestEmptyLine(aTag);", "-        if (isFirstParagraph(aTag)) {", "-            log(aTag.getLineNumber(), \"javadoc.paragraph.redundant.paragraph\");", "+        final DetailNode newLine = getNearestEmptyLine(tag);", "+        if (isFirstPtagraph(tag)) {", "+            log(tag.getLineNumber(), \"javadoc.paragraph.redundant.paragraph\");", "-        else if (newLine == null || aTag.getLineNumber() - newLine.getLineNumber() != 1) {", "-            log(aTag.getLineNumber(), \"javadoc.paragraph.line.before\");", "+        else if (newLine == null || tag.getLineNumber() - newLine.getLineNumber() != 1) {", "+            log(tag.getLineNumber(), \"javadoc.paragraph.line.before\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fbba1192c1da952580f69c32100bbf7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setUrl(final String aUrl)", "signatureAfterChange": "     public void setUrl(final String url)", "diff": ["-    public void setUrl(final String aUrl)", "+    public void setUrl(final String url)", "-        if ((aUrl == null) || (aUrl.trim().length() == 0)) {", "+        if ((url == null) || (url.trim().length() == 0)) {", "-            uri = URI.create(aUrl);", "+            uri = URI.create(url);", "-            throw new ConversionException(\"syntax error in url \" + aUrl, ex);", "+            throw new ConversionException(\"syntax error in url \" + url, ex);", "-            mRoot = ImportControlLoader.load(uri);", "+            root = ImportControlLoader.load(uri);", "-            throw new ConversionException(\"Unable to load \" + aUrl, ex);", "+            throw new ConversionException(\"Unable to load \" + url, ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fc3caa7a42febbcff48e7073ed2013a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "92358288d94bd806a7cdd0958f382d81416542c8", "commitAfterChange": "2795663daebc7d8b608992327e4580d37bb32a6d", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "     private void checkThrowsTags(List aTags, List aThrows)", "signatureAfterChange": "     private void checkThrowsTags(List aTags, List aThrows)", "diff": ["-                if (mConfig.isEnableCheckUnusedThrows()) {", "+                if (mConfig.isCheckUnusedThrows()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fca8dc0200c240610e02b59508a4861", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Check.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public final Set<String> getTokenNames()", "signatureAfterChange": "     public final Set<String> getTokenNames()", "diff": ["-        return mTokens;", "+        return tokens;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fde190b3d83f52c6b35260e8d4895d3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setIgnoreModifiers(boolean aIgnoreModifiers)", "signatureAfterChange": "     public void setIgnoreModifiers(boolean ignoreModifiers)", "diff": ["-    public void setIgnoreModifiers(boolean aIgnoreModifiers)", "+    public void setIgnoreModifiers(boolean ignoreModifiers)", "-        mIgnoreModifiers = aIgnoreModifiers;", "+        this.ignoreModifiers = ignoreModifiers;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ffeaa7356d239d6dca4749bd110b3dc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "d345f3beb27f3d8e3fde06f7e2c7612ddf691b95", "commitAfterChange": "c4a7d06206d86f52665eae47af4db28dc59d93a3", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     private DetailAST containsMatchingAnnotation(DetailAST variableDef)", "signatureAfterChange": "     private DetailAST findMatchingAnnotation(DetailAST variableDef)", "diff": ["-    private DetailAST containsMatchingAnnotation(DetailAST variableDef) {", "+    private DetailAST findMatchingAnnotation(DetailAST variableDef) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "101ff22eacfe46560dcce1d2fe5290e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "02da493e64154d6bbac09a64d67a025f0e72cad1", "commitAfterChange": "7a6bf01c4dac8aedcdbd52aeed7500ba7a3ab0f8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static PkgControl load(final InputSource aSource,         final String aSourceName) throws CheckstyleException", "signatureAfterChange": "     private static PkgControl load(final InputSource aSource,         final URI aUri) throws CheckstyleException", "diff": ["-        final String aSourceName) throws CheckstyleException", "+        final URI aUri) throws CheckstyleException", "-            throw new CheckstyleException(\"unable to parse \" + aSourceName, e);", "+            throw new CheckstyleException(\"unable to parse \" + aUri, e);", "-            throw new CheckstyleException(\"unable to parse \" + aSourceName", "+            throw new CheckstyleException(\"unable to parse \" + aUri", "-            throw new CheckstyleException(\"unable to read \" + aSourceName, e);", "+            throw new CheckstyleException(\"unable to read \" + aUri, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10988c31a9905afcd76e5d7f9efc8593", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAst)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAst)", "+    public void visitToken(DetailAST ast)", "-        switch (aAst.getType()) {", "+        switch (ast.getType()) {", "-            visitPackageDef(aAst);", "+            visitPackageDef(ast);", "-            visitClassDef(aAst);", "+            visitClassDef(ast);", "-            visitMethodDef(aAst);", "+            visitMethodDef(ast);", "-            throw new IllegalStateException(aAst.toString());", "+            throw new IllegalStateException(ast.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10a7194d9e914d2be07c4697fed2ca82", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java", "commitBeforeChange": "f8d7894b17c5a905644a419958a23ca893622b52", "commitAfterChange": "56df5087fe891069e5824abc03ae158aa0d06d66", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setTagFormat(String format)", "signatureAfterChange": "     public void setTagFormat(String format)", "diff": ["-        tagFormatRE = CommonUtils.createPattern(format);", "+        tagFormatRegExp = CommonUtils.createPattern(format);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10c8a3c1797ac3ad7cc718776600829c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckConfiguration.java", "commitBeforeChange": "1efd41aa924264e0899f5819e1b30a55d715f98b", "commitAfterChange": "e20d45697c937fbb8ae3eb3b43bffb43e211237f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     Check createInstance(ClassLoader aLoader)         throws ClassNotFoundException, InstantiationException,         IllegalAccessException, InvocationTargetException,         NoSuchMethodException", "signatureAfterChange": "     Check createInstance(ClassLoader aLoader)         throws ClassNotFoundException, InstantiationException,         IllegalAccessException, InvocationTargetException,         NoSuchMethodException", "diff": ["-            PropertyUtils.setSimpleProperty(check, key, value);", "+            BeanUtils.copyProperty(check, key, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10c8a7793d04c0ea19dba1fffcf548ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Utils.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static String baseClassname(String aType)", "signatureAfterChange": "     public static String baseClassname(String type)", "diff": ["-    public static String baseClassname(String aType)", "+    public static String baseClassname(String type)", "-        final int i = aType.lastIndexOf(\".\");", "-        return (i == -1) ? aType : aType.substring(i + 1);", "+        final int i = type.lastIndexOf(\".\");", "+        return (i == -1) ? type : type.substring(i + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10cc447dea6e293d13bacabcdf2626ef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeModel.java", "commitBeforeChange": "64c05f5391bdf55a60da22a685488022827aee84", "commitAfterChange": "1487e5161886d95cb8c82e4fb1a8b447fa7e32d0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public Object getChild(Object parent, int index)", "signatureAfterChange": "      @Override     public Object getChild(Object parent, int index)", "diff": ["-        int indx = 0;", "+        int currentIndex = 0;", "-        while (indx < index) {", "+        while (currentIndex < index) {", "-            indx++;", "+            currentIndex++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10cdd13fec85f6c2df9a1a5ea762d367", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleVariableDeclarationsCheck.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                    log(firstNode, \"multiple.variable.declarations.comma\");", "+                    log(firstNode, MSG_MULTIPLE_COMMA);", "-                log(firstNode, \"multiple.variable.declarations\");", "+                log(firstNode, MSG_MULTIPLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1105f69e0c931b2f66f87f377f2dc00b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public SuppressElement(String aFiles)         throws PatternSyntaxException", "signatureAfterChange": "     public SuppressElement(String files)         throws PatternSyntaxException", "diff": ["-    public SuppressElement(String aFiles)", "+    public SuppressElement(String files)", "-        mFilePattern = aFiles;", "-        mFileRegexp = Utils.getPattern(aFiles);", "+        filePattern = files;", "+        fileRegexp = Utils.getPattern(files);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "114d59d149798979fa8b59a59db40ad5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "3c7c3cbe88a2bec0962702305db4f2b05117501c", "commitAfterChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "         public ImportDetails(String importFullPath,                 int lineNumber, String importGroup, boolean isStatic)", "signatureAfterChange": "         public ImportDetails(String importFullPath,                 int lineNumber, String importGroup, boolean staticImport)", "diff": ["-                int lineNumber, String importGroup, boolean isStatic)", "+                int lineNumber, String importGroup, boolean staticImport)", "-            setStatic(isStatic);", "+            setStaticImport(staticImport);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1151677e141ae4bf2cf0332036509e9d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     private static String createSamePackageRegexp(int aCount, DetailAST aPackageNode)", "signatureAfterChange": "     private static String createSamePackageRegexp(int firstPackageDomainsCount,              DetailAST packageNode)", "diff": ["-    private static String createSamePackageRegexp(int aCount, DetailAST aPackageNode)", "+    private static String createSamePackageRegexp(int firstPackageDomainsCount,", "+             DetailAST packageNode)", "-        final String packageFullPath = getFullImportIdent(aPackageNode);", "+        final String packageFullPath = getFullImportIdent(packageNode);", "-        int count = aCount;", "+        int count = firstPackageDomainsCount;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11588f49deada3660674ebefa7510c41", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractAccessControlNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setApplyToPrivate(boolean aApplyTo)", "signatureAfterChange": "     public void setApplyToPrivate(boolean applyTo)", "diff": ["-    public void setApplyToPrivate(boolean aApplyTo)", "+    public void setApplyToPrivate(boolean applyTo)", "-        mApplyToPrivate = aApplyTo;", "+        applyToPrivate = applyTo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11a69c4984bf2028347ed3d249c5fd71", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "         private AuditListener createDefaultLogger(Task aTask)             throws IOException", "signatureAfterChange": "         private AuditListener createDefaultLogger(Task task)             throws IOException", "diff": ["-        private AuditListener createDefaultLogger(Task aTask)", "+        private AuditListener createDefaultLogger(Task task)", "-            if ((mToFile == null) || !mUseFile) {", "+            if ((toFile == null) || !useFile) {", "-                    new LogOutputStream(aTask, Project.MSG_DEBUG),", "-                    true, new LogOutputStream(aTask, Project.MSG_ERR), true);", "+                    new LogOutputStream(task, Project.MSG_DEBUG),", "+                    true, new LogOutputStream(task, Project.MSG_ERR), true);", "-            return new DefaultLogger(new FileOutputStream(mToFile), true);", "+            return new DefaultLogger(new FileOutputStream(toFile), true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11b33074ff13aa4bf3122cddc317c6e5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static boolean isInterfaceDeclaration(DetailAST aVariableDefAst)", "signatureAfterChange": "     private static boolean isInterfaceDeclaration(DetailAST variableDefAst)", "diff": ["-    private static boolean isInterfaceDeclaration(DetailAST aVariableDefAst)", "+    private static boolean isInterfaceDeclaration(DetailAST variableDefAst)", "-        final DetailAST astBlock = aVariableDefAst.getParent();", "+        final DetailAST astBlock = variableDefAst.getParent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11bdab414d5c418ab2cb0c157bedb50d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OverloadMethodsDeclarationOrderCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void checkOverloadMethodsGrouping(DetailAST aObjectBlock)", "signatureAfterChange": "     private void checkOverloadMethodsGrouping(DetailAST objectBlock)", "diff": ["-    private void checkOverloadMethodsGrouping(DetailAST aObjectBlock)", "+    private void checkOverloadMethodsGrouping(DetailAST objectBlock)", "-        DetailAST currentToken = aObjectBlock.getFirstChild();", "+        DetailAST currentToken = objectBlock.getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "126db8f82491d8f41bcee96bb1b3b82e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Override     public final void configure(Configuration configuration)         throws CheckstyleException", "signatureAfterChange": "     @Override     public final void configure(Configuration config)         throws CheckstyleException", "diff": ["-    public final void configure(Configuration configuration)", "+    public final void configure(Configuration config)", "-        this.configuration = configuration;", "+        this.configuration = config;", "-        final String[] attributes = configuration.getAttributeNames();", "+        final String[] attributes = config.getAttributeNames();", "-            final String value = configuration.getAttribute(key);", "+            final String value = config.getAttribute(key);", "-            tryCopyProperty(configuration.getName(), key, value, true);", "+            tryCopyProperty(config.getName(), key, value, true);", "-        final Configuration[] childConfigs = configuration.getChildren();", "+        final Configuration[] childConfigs = config.getChildren();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1271a4fc326269872c836bb7ab441b3c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "commitAfterChange": "cb5a59fc6baf5de204e3cc99be6ba9865e44350a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void verifyBrace(final DetailAST brace,                              final DetailAST startToken)", "signatureAfterChange": "     private void verifyBrace(final DetailAST brace,                              final DetailAST startToken)", "diff": ["-                validateNewLinePosion(brace, startToken, braceLine);", "+                validateNewLinePosition(brace, startToken, braceLine);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12abe329532e07cd84fd84d1af3add0f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule528typevariablenames/ClassMethodTypeParameterNameTest.java", "commitBeforeChange": "a244f057057913003dd17e952ee76a844f0fb76b", "commitAfterChange": "dc0a1a2fccdf6a642b05dee98206c7dd487162bd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testClassDefault() throws Exception", "signatureAfterChange": "      @Test     public void testClassDefault() throws Exception", "diff": ["-            \"5:31: \" + getCheckMessage(configuration.getMessages(), msgKey, \"t\", format),", "-            \"13:14: \" + getCheckMessage(configuration.getMessages(), msgKey, \"foo\", format),", "-            \"27:24: \" + getCheckMessage(configuration.getMessages(), msgKey, \"$foo\", format),", "+            \"5:31: \" + getCheckMessage(configuration.getMessages(), MSG_KEY, \"t\", format),", "+            \"13:14: \" + getCheckMessage(configuration.getMessages(), MSG_KEY, \"foo\", format),", "+            \"27:24: \" + getCheckMessage(configuration.getMessages(), MSG_KEY, \"$foo\", format),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12ac5ad6352c13ef3144885bb7107c1b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ParameterAssignmentCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-    public void beginTree(DetailAST aRootAST)", "+    public void beginTree(DetailAST rootAST)", "-        mParameterNamesStack.clear();", "-        mParameterNames = null;", "+        parameterNamesStack.clear();", "+        parameterNames = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12e74ed5ed7f8f729552c00e5930d4fe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtils.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static boolean inCodeBlock(DetailAST aAST)", "signatureAfterChange": "     public static boolean isInCodeBlock(DetailAST aAST)", "diff": ["-    public static boolean inCodeBlock(DetailAST aAST) {", "+    public static boolean isInCodeBlock(DetailAST aAST) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12eeccdfcb43d78216bd43b587304bbf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java", "commitBeforeChange": "49c9ee6b298b8bd4c4cbb6b63db4aa30684bde5e", "commitAfterChange": "cf8a2787c193f6f56d1259154f00de3d5f44fb12", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private Details getDetails(DetailAST ast)", "signatureAfterChange": "     private Details getDetails(DetailAST ast)", "diff": ["-                nextToken = ast;", "+                nextToken = lcurly;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1304890cfb4fdff5827f7cd2740b316d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "commitAfterChange": "6125beffc437f970eae276b4a6542265c6547784", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testSeparated() throws Exception", "signatureAfterChange": "      public void testSeparated() throws Exception", "diff": ["-            \"6: 'javax.swing.JComponent' should be separated from previous imports.\",", "-            \"8: 'java.io.File' should be separated from previous imports.\",", "+            \"7: 'javax.swing.JComponent' should be separated from previous imports.\",", "+            \"9: 'java.io.File' should be separated from previous imports.\",", "+            \"14: Wrong order for 'javax.swing.WindowConstants.*' import.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "130b71e9da7ad6a23f64b6851c89b353", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "commitBeforeChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "commitAfterChange": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(final DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(final DetailAST ast)", "diff": ["-        final boolean containastag = containsJavadocTag(javadoc);", "-        if (containastag && !JavadocTagInfo.INHERIT_DOC.isValidOn(ast)) {", "+        final boolean containsTag = containsJavadocTag(javadoc);", "+        if (containsTag && !JavadocTagInfo.INHERIT_DOC.isValidOn(ast)) {", "-        if (containastag", "+        if (containsTag"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13103f8bf8e4da1e83ccae0920d63b96", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final int parentType = aAST.getParent().getType();", "-        final DetailAST modifiers = aAST.getFirstChild();", "+        final int parentType = ast.getParent().getType();", "+        final DetailAST modifiers = ast.getFirstChild();", "-        if ((mIgnoreFinal && modifiers.branchContains(TokenTypes.FINAL))", "+        if ((ignoreFinal && modifiers.branchContains(TokenTypes.FINAL))", "-            final DetailAST variable = aAST.findFirstToken(TokenTypes.IDENT);", "+            final DetailAST variable = ast.findFirstToken(TokenTypes.IDENT);", "-                final DetailAST semicolonAst = aAST.getNextSibling();", "+                final DetailAST semicolonAst = ast.getNextSibling();", "-                if (mValidateBetweenScopes) {", "+                if (validateBetweenScopes) {", "-                if (dist > mAllowedDistance", "+                if (dist > allowedDistance", "-                    if (mIgnoreFinal) {", "+                    if (ignoreFinal) {", "-                                MSG_KEY_EXT, variable.getText(), dist, mAllowedDistance);", "+                                MSG_KEY_EXT, variable.getText(), dist, allowedDistance);", "-                                MSG_KEY, variable.getText(), dist, mAllowedDistance);", "+                                MSG_KEY, variable.getText(), dist, allowedDistance);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13271fe8d0aaf5f23b09f04a0dec89c5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "798aac8ff0ec17573d316b64ea1b86ecf387f12f", "commitAfterChange": "5a4f991d2738c824f70f361b21d9da193ff3751c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void testInvalidClassDefWithChecker()         throws Exception", "signatureAfterChange": "     public void testInvalidClassDefWithChecker()         throws Exception", "diff": ["-            \"138: object def lcurly at indentation level 6 not at correct indentation, 8\",", "-            \"142: object def rcurly at indentation level 6 not at correct indentation, 8\",", "+            \"138: object def lcurly at indentation level 6 not at correct indentation, [8, 12]\",", "+", "+            \"139: method def modifier at indentation level 12 not at correct indentation, 10\",", "+            \"141: method def rcurly at indentation level 12 not at correct indentation, 10\",", "+", "+            \"142: object def rcurly at indentation level 6 not at correct indentation, [8, 12]\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "136708b5ee891af5d79ab875fb889b59", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "ed12c276a8adde2ce44b9834b413560476110f0e", "commitAfterChange": "66d6361c27586d58ba478b0223e60c6f1c5aa7b4", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "         public ClassInfo(FullIdent aName, String aCurrentClass)", "signatureAfterChange": "         public ClassInfo(final FullIdent aName, final String aSurroundingClass)", "diff": ["-        public ClassInfo(FullIdent aName, String aCurrentClass)", "+        public ClassInfo(final FullIdent aName, final String aSurroundingClass)", "-            mCurrentClass = aCurrentClass;", "+            mSurroundingClass = aSurroundingClass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "138122123d7638186fd8f6581ff7e0cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAst)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-    public void leaveToken(DetailAST aAst)", "+    public void leaveToken(DetailAST ast)", "-        switch (aAst.getType()) {", "+        switch (ast.getType()) {", "-            mInForHeader = false;", "+            inForHeader = false;", "-            mExprDepth--;", "+            exprDepth--;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13894fee5491da2eff60615059cfc147", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/FilterSetTest.java", "commitBeforeChange": "5ca472faa6ccc8a70690052528f00d0e3e75bffd", "commitAfterChange": "eb31210db6d680a80c7538251f989adf3adb9e3e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testEmptyChain()", "signatureAfterChange": "      @Test     public void testEmptyChain()", "diff": ["-        assertFalse(\"0\", filter.accept(Integer.valueOf(0)));", "+        assertFalse(\"0\", filter.accept(0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13960c39d4ec0c97c4eccfd9dfdad439", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressElementTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testDecideByFileNameAndModuleMatching_CheckRegExpNotMatch()", "signatureAfterChange": "      @Test     public void testDecideByFileNameAndModuleMatchingCheckRegExpNotMatch()", "diff": ["-    public void testDecideByFileNameAndModuleMatching_CheckRegExpNotMatch() {", "+    public void testDecideByFileNameAndModuleMatchingCheckRegExpNotMatch() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13a2e3d1acc758c593a754dff3ea73b4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setAllowStaticMemberImports(boolean aAllow)", "signatureAfterChange": "     public void setAllowStaticMemberImports(boolean allow)", "diff": ["-    public void setAllowStaticMemberImports(boolean aAllow)", "+    public void setAllowStaticMemberImports(boolean allow)", "-        mAllowStaticMemberImports = aAllow;", "+        allowStaticMemberImports = allow;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13a317fdcc5a21bb2232b7f3f3e0c236", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void visitSlist(DetailAST aAST)", "signatureAfterChange": "     private void visitSlist(DetailAST ast)", "diff": ["-    private void visitSlist(DetailAST aAST)", "+    private void visitSlist(DetailAST ast)", "-        if (mContext != null) {", "+        if (context != null) {", "-            final DetailAST contextAST = mContext.getAST();", "-            DetailAST parent = aAST.getParent();", "+            final DetailAST contextAST = context.getAST();", "+            DetailAST parent = ast.getParent();", "-                        mContext.addCount(aAST.getChildCount() / 2);", "+                        context.addCount(ast.getChildCount() / 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13cf3737fe6f5dfc676c707fa0798291", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/doclets/CheckDocsDoclet.java", "commitBeforeChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "commitAfterChange": "319f297e13e5c175a62489ff555cff7c463d3c7b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static void writeXdocsHeader(             final PrintWriter aPrintWriter,             final String aTitle)", "signatureAfterChange": "     private static void writeXdocsHeader(             final PrintWriter printWriter,             final String title)", "diff": ["-            final PrintWriter aPrintWriter,", "-            final String aTitle)", "+            final PrintWriter printWriter,", "+            final String title)", "-        aPrintWriter.println(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\");", "-        aPrintWriter.println(\"<document>\");", "-        aPrintWriter.println(\"<properties>\");", "-        aPrintWriter.println(\"<title>\" + aTitle + \"</title>\");", "-        aPrintWriter.println(\"<author \"", "+        printWriter.println(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\");", "+        printWriter.println(\"<document>\");", "+        printWriter.println(\"<properties>\");", "+        printWriter.println(\"<title>\" + title + \"</title>\");", "+        printWriter.println(\"<author \"", "-        aPrintWriter.println(\"</properties>\");", "-        aPrintWriter.println(\"<body>\");", "-        aPrintWriter.flush();", "+        printWriter.println(\"</properties>\");", "+        printWriter.println(\"<body>\");", "+        printWriter.flush();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13e463436d3d042acd78896173cfc739", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     void clearCreatedHandlers()", "signatureAfterChange": "     void clearCreatedHandlers()", "diff": ["-        mCreatedHandlers.clear();", "+        createdHandlers.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13f9dd1ff6bebbb94a32199e09bffae5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public int getChildCount()", "signatureAfterChange": "     public int getChildCount()", "diff": ["-        if (mChildCount == NOT_INITIALIZED) {", "-            mChildCount = 0;", "+        if (childCount == NOT_INITIALIZED) {", "+            childCount = 0;", "-                mChildCount += 1;", "+                childCount += 1;", "-        return mChildCount;", "+        return childCount;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "141a914015d71f390ac6d3e13b2c82b6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IndentationCheck.java", "commitBeforeChange": "0eeb5e4fd6aa2c4b8a559e55384bba67d7d695c7", "commitAfterChange": "092e1f69476fc715852035a25b23a11804183a23", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setIndentationAmount(int aIndentAmount)", "signatureAfterChange": "     public void setBasicOffset(int aBasicOffset)", "diff": ["-    public void setIndentationAmount(int aIndentAmount)", "+    public void setBasicOffset(int aBasicOffset)", "-        mIndentationAmount = aIndentAmount;", "+        mBasicOffset = aBasicOffset;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "141d39e3d84d577f5e0f9c40d65a6138", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/LineLengthCheck.java", "commitBeforeChange": "f30512c75f51379b766e883666b6ce6ac5f3253d", "commitAfterChange": "9a39d19a31f06c8614d33fcc9c3f7654ec9cdd9f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-            if (realLength > max && !IMPORT_PATTERN.matcher(line).find()", "+            if (realLength > max && !IGNORE_PATTERN.matcher(line).find()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1437bf42b289874d7e9fe2fce5092d5d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java", "commitBeforeChange": "13a49cc45b1527357934dd7802c24686d7bb7858", "commitAfterChange": "24d7448294b03e49709c8e5588e89c27091ba0f2", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void checkSingleLine(int lineNum, IndentLevel indentLevel)", "signatureAfterChange": "     private void checkSingleLine(int lineNum, IndentLevel indentLevel)", "diff": ["-        if (indentLevel.greaterThan(start)) {", "+        if (indentLevel.isGreaterThan(start)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "143e30efe13a81622c564a0db601edae", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "f464a296056168259e1f84333507fcb797d93cdc", "commitAfterChange": "3ded17ac3d61b4284299319f5f60ee220154fded", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 83, "signatureBeforeChange": "     public void setIgnoreParenWhitespace(boolean aTo)", "signatureAfterChange": "     public void setParenPadOption(PadOption aTo)", "diff": ["-    /** @param aTo whether to ignore whitespace around parenthesis */", "-    public void setIgnoreParenWhitespace(boolean aTo)", "-    {", "-        mIgnoreParenWhitespace = aTo;", "-    }", "+    /** @param aTo set the parenthesis option **/", "+    public void setParenPadOption(PadOption aTo)", "+    {", "+        mParenPadOption = aTo;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "144ebe7a401845e5364c8008a8a23ffd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public String[] getLegalAbstractClassNames()", "signatureAfterChange": "     public String[] getLegalAbstractClassNames()", "diff": ["-        return mLegalAbstractClassNames.toArray(", "-            new String[mLegalAbstractClassNames.size()]);", "+        return legalAbstractClassNames.toArray(", "+            new String[legalAbstractClassNames.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "148006793f95d9f0c1ee969df7f964cc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java", "commitBeforeChange": "897c4164bd289ea45d5c600f11816f4379bd4421", "commitAfterChange": "9ce0ceb04ae90185f95643fb4484e525bcb0d3df", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "          public void testVersionRegularEx()         throws Exception", "signatureAfterChange": "          public void testVersionRegularEx()         throws Exception", "diff": ["-        checkConfig.addAttribute(\"versionFormat\", \"[:digit:].*\");", "+        checkConfig.addAttribute(\"versionFormat\", \"^[:digit:]+\\\\.[:digit:]+$\");", "+            \"22: Type Javadoc comment is missing an @version tag.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1490ab83040e191ec176f23f4971f2c6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "      @Test     public void test_1168408_2() throws Exception", "signatureAfterChange": "      @Test     public void test11684082() throws Exception", "diff": ["-    public void test_1168408_2() throws Exception {", "+    public void test11684082() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14d8d3eed934746f8cec42eb942a26f3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractDeclarationCollector.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static void collectVariableDeclarations(DetailAST ast, LexicalFrame frame)", "signatureAfterChange": "     private static void collectVariableDeclarations(DetailAST ast, LexicalFrame frame)", "diff": ["-            if (ScopeUtils.inInterfaceBlock(ast)", "+            if (ScopeUtils.isInInterfaceBlock(ast)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15072990170022624e2fb6830738e6cc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheckTest.java", "commitBeforeChange": "18570b7a08376b5b823bd67bfd93b79e0c4fbb1b", "commitAfterChange": "fab2296f6259c55589b4b93c5cea2eb4a90b3569", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testMax() throws Exception", "signatureAfterChange": "      @Test     public void testMax() throws Exception", "diff": ["-        checkConfig.addAttribute(\"max\", \"2\");", "+        checkConfig.addAttribute(\"max\", \"5\");", "-            \"22:20: \" + getCheckMessage(MSG_KEY, 3, 2),", "+            \"27:20: \" + getCheckMessage(MSG_KEY, 6, 5),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "150d83ad15f20a09c6900a667e08ded0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/InputCovariant.java", "commitBeforeChange": "e873b95e9fc081e7dc582893c3949bfbea6dc567", "commitAfterChange": "04c38bad85ac94b3da997fe23b2181479ed6ac57", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      public <A> boolean equals(Object aObject)", "signatureAfterChange": "      public boolean equals(Object aObject)", "diff": ["-    public <A> boolean equals(Object aObject)", "+    public boolean equals(Object aObject)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15230b61ac0a51f594a2b048c850c201", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "0b98c0389e2cf745cb125a89dece57538fc672b7", "commitAfterChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-                log(ast.getLineNo(), ast.getColumnNo(), \"ncss.method\",", "+                log(ast.getLineNo(), ast.getColumnNo(), MSG_METHOD,", "-                log(ast.getLineNo(), ast.getColumnNo(), \"ncss.class\",", "+                log(ast.getLineNo(), ast.getColumnNo(), MSG_CLASS,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1576f583cd95e82364364f58d52137a6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "bc0bf95daedb6f0e658187d6e44410a60f46dbe2", "commitAfterChange": "fbc44f14b8e2a7b5f6949e6c1380fdf81c21b91e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public int getThrowsIndent()", "signatureAfterChange": "     public int getThrowsIndent()", "diff": ["-        return throwsIndentationAmount;", "+        return throwsIndent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "157d819de0270321054bf576e8acb3d1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setAllowEmptyConstructors(boolean aAllow)", "signatureAfterChange": "     public void setAllowEmptyConstructors(boolean allow)", "diff": ["-    public void setAllowEmptyConstructors(boolean aAllow)", "+    public void setAllowEmptyConstructors(boolean allow)", "-        mAllowEmptyCtors = aAllow;", "+        allowEmptyCtors = allow;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "158e7bb596a1cb162cd0927e2ac263d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private Pattern getEndOfSentencePattern()", "signatureAfterChange": "     private Pattern getEndOfSentencePattern()", "diff": ["-        if (mEndOfSentencePattern == null) {", "-            mEndOfSentencePattern = Pattern.compile(mEndOfSentenceFormat);", "+        if (endOfSentencePattern == null) {", "+            endOfSentencePattern = Pattern.compile(endOfSentenceFormat);", "-        return mEndOfSentencePattern;", "+        return endOfSentencePattern;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15d0fc267ff29b4e9019659e46d35eea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public PackageObjectFactory(Set<String> aPackageNames,             ClassLoader aModuleClassLoader)", "signatureAfterChange": "     public PackageObjectFactory(Set<String> packageNames,             ClassLoader moduleClassLoader)", "diff": ["-    public PackageObjectFactory(Set<String> aPackageNames,", "-            ClassLoader aModuleClassLoader)", "+    public PackageObjectFactory(Set<String> packageNames,", "+            ClassLoader moduleClassLoader)", "-        if (aModuleClassLoader == null) {", "+        if (moduleClassLoader == null) {", "-                    \"aModuleClassLoader must not be null\");", "+                    \"moduleClassLoader must not be null\");", "-        mPackages = Sets.newLinkedHashSet(aPackageNames);", "-        mModuleClassLoader = aModuleClassLoader;", "+        packages = Sets.newLinkedHashSet(packageNames);", "+        this.moduleClassLoader = moduleClassLoader;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15da647ec370dfc0488726e335a1e0e8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "859c809b0562032ab6a24956d20a28e1ff6431dc", "commitAfterChange": "e8c6134660cb1fb726f990469db235d3557af2a0", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "      @Test(expected = IllegalStateException.class)     public void testVisitTokenSwitchReflection() throws Exception", "signatureAfterChange": "      @Test(expected = IllegalStateException.class)     public void testVisitTokenSwitchReflection() throws Exception", "diff": ["-        ImportOrderOption C = PowerMockito.mock(ImportOrderOption.class);", "-        Whitebox.setInternalState(C, \"name\", \"NEW_OPTION_FOR_UT\");", "-        Whitebox.setInternalState(C, \"ordinal\", 5);", "+        ImportOrderOption importOrderOptionMock = PowerMockito.mock(ImportOrderOption.class);", "+        Whitebox.setInternalState(importOrderOptionMock, \"name\", \"NEW_OPTION_FOR_UT\");", "+        Whitebox.setInternalState(importOrderOptionMock, \"ordinal\", 5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "162b1dca7e5bc1659c81e3c4b4d97011", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java", "commitBeforeChange": "b8c558e473c0a9a75c41312e31df34b8572a271b", "commitAfterChange": "58ce4c40970fc29d00e5740bc6098eb475668e86", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setCheckUnusedThrows(boolean aFlag)", "signatureAfterChange": "     public void setAllowUndeclaredRTE(boolean aFlag)", "diff": ["-    public void setCheckUnusedThrows(boolean aFlag)", "+    public void setAllowUndeclaredRTE(boolean aFlag)", "-        mCheckUnusedThrows = aFlag;", "+        mAllowUndeclaredRTE = aFlag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16601075e0d947027b7c5803423d6de0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setValidateBetweenScopes(boolean aValidateBetweenScopes)", "signatureAfterChange": "     public void setValidateBetweenScopes(boolean validateBetweenScopes)", "diff": ["-    public void setValidateBetweenScopes(boolean aValidateBetweenScopes)", "+    public void setValidateBetweenScopes(boolean validateBetweenScopes)", "-        this.mValidateBetweenScopes = aValidateBetweenScopes;", "+        this.validateBetweenScopes = validateBetweenScopes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16754761035994ebe36078722c43e5f7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public int[] getHandledTypes()", "signatureAfterChange": "     public int[] getHandledTypes()", "diff": ["-        final Set<Integer> typeSet = mTypeHandlers.keySet();", "+        final Set<Integer> typeSet = typeHandlers.keySet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1679f8152dbb83becdf91976c72519df", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "8dc1a8ab994076f3fc10bab9248a2439ee54b443", "commitAfterChange": "21f0b07bd031f022d14106150af66ceddb4c06b8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void setupChild(Configuration aChildConf)         throws CheckstyleException", "signatureAfterChange": "     protected void setupChild(Configuration aChildConf)         throws CheckstyleException", "diff": ["-            else if (child instanceof Filter) {", "-                final Filter filter = (Filter) child;", "+            else if (child instanceof AuditEventFilter) {", "+                final AuditEventFilter filter = (AuditEventFilter) child;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "169356b57c7ebbe15ffa698f90b1a361", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressElementTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testDecideByFileNameAndModuleMatching_RegExpMatch()", "signatureAfterChange": "      @Test     public void testDecideByFileNameAndModuleMatchingRegExpMatch()", "diff": ["-    public void testDecideByFileNameAndModuleMatching_RegExpMatch() {", "+    public void testDecideByFileNameAndModuleMatchingRegExpMatch() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1693efd596875b3e93a175e8ec0bc5fb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java", "commitBeforeChange": "cbabd6b314a5523a5557e089858d3a3596426d56", "commitAfterChange": "b0e77dd3174f71b8db1e5ca24dfa185277ed5318", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public IllegalCatchCheck()", "signatureAfterChange": "     public IllegalCatchCheck()", "diff": ["-        setIllegalClassNames(new String[] {\"Exception\", \"Error\",", "-                                           \"RuntimeException\", \"Throwable\",", "-                                           \"java.lang.Error\",", "-                                           \"java.lang.Exception\",", "-                                           \"java.lang.RuntimeException\",", "-                                           \"java.lang.Throwable\",", "+        super(new String[] {\"Exception\", \"Error\",", "+                            \"RuntimeException\", \"Throwable\",", "+                            \"java.lang.Error\",", "+                            \"java.lang.Exception\",", "+                            \"java.lang.RuntimeException\",", "+                            \"java.lang.Throwable\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1698e3afb4ba8643f8c998d721fcf7eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "e1d0e7f6361c32c69650ba789c1995e49a94142f", "commitAfterChange": "7dd24c8c35572b5db3e5c905d440e813cfe2538c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void checkHtml(final DetailAST ast, final TextBlock comment)", "signatureAfterChange": "     private void checkHtml(final DetailAST ast, final TextBlock comment)", "diff": ["-                log(tag.getLineno(), INCOMPLETE_TAG,", "-                    text[tag.getLineno() - lineno]);", "+                log(tag.getLineNo(), INCOMPLETE_TAG,", "+                    text[tag.getLineNo() - lineno]);", "-                    log(tag.getLineno(),", "+                    log(tag.getLineNo(),", "-                log(htag.getLineno(), htag.getPosition(), UNCLOSED_HTML, htag);", "+                log(htag.getLineNo(), htag.getPosition(), UNCLOSED_HTML, htag);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16e9cda352b53307d115b9f0fa27b20d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "52e2087c404986f8e12cd8579be7b2333961e1a3", "commitAfterChange": "c38185458ab824874b8465c46b4dc42646440aaa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setIgnoreStringsRegexp(String aIgnoreStringsRegexp)", "signatureAfterChange": "     public void setIgnoreStringsRegexp(String aIgnoreStringsRegexp)", "diff": ["-        mIgnoreStringsRegexp = aIgnoreStringsRegexp;", "-        if ((mIgnoreStringsRegexp != null)", "-            && (mIgnoreStringsRegexp.length() > 0))", "+        if ((aIgnoreStringsRegexp != null)", "+            && (aIgnoreStringsRegexp.length() > 0))", "-            mPattern = Utils.getPattern(mIgnoreStringsRegexp);", "+            mPattern = Utils.getPattern(aIgnoreStringsRegexp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1705d217eb5bdba732e17d6cb6d32711", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule333orderingandsoacing/CustomImportOrderTest.java", "commitBeforeChange": "6fbe3f344a5507d1368d1564647ffacb12463d17", "commitAfterChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void customImportTest_3() throws Exception", "signatureAfterChange": "      @Test     public void customImportTest3() throws Exception", "diff": ["-    public void customImportTest_3() throws Exception {", "+    public void customImportTest3() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1711ea6fe69d008be6424ab1f521cd66", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public int getArrayInitIndent()", "signatureAfterChange": "     public int getArrayInitIndent()", "diff": ["-        return this.mArrayInitIndentationAmount;", "+        return this.arrayInitIndentationAmount;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1739b0b460926559a79d15443dac13dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/HiddenFieldCheck.java", "commitBeforeChange": "215db57b5f472bc644456939bd830206bc55d79e", "commitAfterChange": "0b38b65f919bd7b3d8a440c459ce754a4a840b03", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            default:", "-                break;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1739de491b69ce9fc84f56b62ef3c349", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "10bae67ca1ba2de70a31317386178266d5396adf", "commitAfterChange": "7e083cf6cbbe2b1590b92bf3feae547e5f58d6ac", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public String getMessage()", "signatureAfterChange": "     public String getMessage()", "diff": ["-            final ResourceBundle bundle =", "-                    ResourceBundle.getBundle(mBundle, sLocale);", "+            final ResourceBundle bundle = getBundle(mBundle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "173eb0b0bbbec8b739019cd0be18016d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "         public ClassFrame(LexicalFrame aParent)", "signatureAfterChange": "         public ClassFrame(LexicalFrame parent)", "diff": ["-        public ClassFrame(LexicalFrame aParent)", "+        public ClassFrame(LexicalFrame parent)", "-            super(aParent);", "-            mInstanceMembers = Sets.newHashSet();", "-            mInstanceMethods = Sets.newHashSet();", "-            mStaticMembers = Sets.newHashSet();", "-            mStaticMethods = Sets.newHashSet();", "+            super(parent);", "+            instanceMembers = Sets.newHashSet();", "+            instanceMethods = Sets.newHashSet();", "+            staticMembers = Sets.newHashSet();", "+            staticMethods = Sets.newHashSet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "174f606570da6d08de65bd33943b9d97", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultConfiguration.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Override     public String[] getAttributeNames()", "signatureAfterChange": "     @Override     public String[] getAttributeNames()", "diff": ["-        final Set<String> keySet = mAttributeMap.keySet();", "+        final Set<String> keySet = attributeMap.keySet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1765f9fbb0919aec46f7579432e56bdf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public final void setAllowSamelineSingleParameterlessAnnotation(boolean aAllow)", "signatureAfterChange": "     public final void setAllowSamelineSingleParameterlessAnnotation(boolean allow)", "diff": ["-    public final void setAllowSamelineSingleParameterlessAnnotation(boolean aAllow)", "+    public final void setAllowSamelineSingleParameterlessAnnotation(boolean allow)", "-        mAllowSamelineSingleParameterlessAnnotation = aAllow;", "+        allowSamelineSingleParameterlessAnnotation = allow;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1773f62e9947338fc9813cfc80c96fb2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "61dcaf5f512b026e4aad1d61946e48905d6016d4", "commitAfterChange": "88f75f5413914bea5b39ba318edf912ee706226d", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "      @Test     public void testExistingTargetFilePlainOutputToFileWithoutReadAndRwPermissions()             throws Exception", "signatureAfterChange": "      @Test     public void testExistingTargetFilePlainOutputToFileWithoutReadAndRwPermissions()             throws Exception", "diff": ["-        file.setReadable(false, false);", "-        file.setWritable(false, false);", "+        // That works fine on Linux/Unix, but ....", "+        // It's not possible to make a file unreadable in Windows NTFS for owner.", "+        // http://stackoverflow.com/a/4354686", "+        // https://github.com/google/google-oauth-java-client/issues/55#issuecomment-69403681", "+        //assertTrue(file.setReadable(false, false));", "+        assertTrue(file.setWritable(false, false));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "177f5a13b6d88c48085c57ad2d181606", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractComplexityCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void leaveMethodDef(DetailAST aAST)", "signatureAfterChange": "     private void leaveMethodDef(DetailAST ast)", "diff": ["-    private void leaveMethodDef(DetailAST aAST)", "+    private void leaveMethodDef(DetailAST ast)", "-        final BigInteger max = BigInteger.valueOf(mMax);", "-        if (mCurrentValue.compareTo(max) > 0) {", "-            log(aAST, getMessageID(), mCurrentValue, max);", "+        final BigInteger bigIntegerMax = BigInteger.valueOf(max);", "+        if (currentValue.compareTo(bigIntegerMax) > 0) {", "+            log(ast, getMessageID(), currentValue, bigIntegerMax);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "178d0967262d8c7682b61677d3896d32", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/CheckstyleException.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public CheckstyleException(String aMessage, Throwable aCause)", "signatureAfterChange": "     public CheckstyleException(String message, Throwable cause)", "diff": ["-    public CheckstyleException(String aMessage, Throwable aCause)", "+    public CheckstyleException(String message, Throwable cause)", "-        super(aMessage, aCause);", "+        super(message, cause);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17ab204171a486cad323bbfd4dbee21d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/transmogrify/ClassDef.java", "commitBeforeChange": "cf27285c85613a0963903ddf6b683aa586f90aa5", "commitAfterChange": "adc04337ea44d4e6b0ff8ec5efedd11ecd263646", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void addUnprocessedImports(Vector imports)", "signatureAfterChange": "      public void addUnprocessedImports(Vector aImports)", "diff": ["-    public void addUnprocessedImports(Vector imports) {", "-        unprocessedImports = (Vector) (imports.clone());", "+    public void addUnprocessedImports(Vector aImports) {", "+        unprocessedImports = (Vector) (aImports.clone());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17bed6256c68c5867e572bce538b18bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void checkTypeParamTag(final int aLineNo,             final List<JavadocTag> aTags, final String aTypeParamName)", "signatureAfterChange": "     private void checkTypeParamTag(final int lineNo,             final List<JavadocTag> tags, final String typeParamName)", "diff": ["-    private void checkTypeParamTag(final int aLineNo,", "-            final List<JavadocTag> aTags, final String aTypeParamName)", "+    private void checkTypeParamTag(final int lineNo,", "+            final List<JavadocTag> tags, final String typeParamName)", "-        for (int i = aTags.size() - 1; i >= 0; i--) {", "-            final JavadocTag tag = aTags.get(i);", "+        for (int i = tags.size() - 1; i >= 0; i--) {", "+            final JavadocTag tag = tags.get(i);", "-                && (tag.getArg1().indexOf(\"<\" + aTypeParamName + \">\") == 0))", "+                && (tag.getArg1().indexOf(\"<\" + typeParamName + \">\") == 0))", "-            log(aLineNo, \"type.missingTag\",", "-                JavadocTagInfo.PARAM.getText() + \" <\" + aTypeParamName + \">\");", "+            log(lineNo, \"type.missingTag\",", "+                JavadocTagInfo.PARAM.getText() + \" <\" + typeParamName + \">\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17c4bd7306c7fc45da20d2cc2622afa4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean ignoreNumberOfParameters(DetailAST aAST)", "signatureAfterChange": "     private boolean ignoreNumberOfParameters(DetailAST ast)", "diff": ["-    private boolean ignoreNumberOfParameters(DetailAST aAST)", "+    private boolean ignoreNumberOfParameters(DetailAST ast)", "-        return mIgnoreOverriddenMethods", "-                && (AnnotationUtility.containsAnnotation(aAST, OVERRIDE)", "-                || AnnotationUtility.containsAnnotation(aAST, CANONICAL_OVERRIDE));", "+        return ignoreOverriddenMethods", "+                && (AnnotationUtility.containsAnnotation(ast, OVERRIDE)", "+                || AnnotationUtility.containsAnnotation(ast, CANONICAL_OVERRIDE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18250eaea4d75b7b6c9c12faf0144b28", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FilterSet.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     @Override     public boolean accept(AuditEvent aEvent)", "signatureAfterChange": "     @Override     public boolean accept(AuditEvent event)", "diff": ["-    public boolean accept(AuditEvent aEvent)", "+    public boolean accept(AuditEvent event)", "-        for (Filter filter : mFilters) {", "-            if (!filter.accept(aEvent)) {", "+        for (Filter filter : filters) {", "+            if (!filter.accept(event)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18531f27daa48de21f8230ec191909b9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-    public void beginTree(DetailAST aRootAST)", "+    public void beginTree(DetailAST rootAST)", "-        mExprDepth = 0;", "-        mInForHeader = false;", "-        mLastStatementEnd = -1;", "+        exprDepth = 0;", "+        inForHeader = false;", "+        lastStatementEnd = -1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "185ee4c8911a4fbe7f4eb07ee296260d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-            log(rcurly, \"line.break.before\");", "+            log(rcurly, MSG_KEY_LINE_BREAK_BEFORE);", "-                log(rcurly, \"line.alone\", \"}\");", "+                log(rcurly, MSG_KEY_LINE_ALONE, \"}\");", "-            log(rcurly, \"line.same\", \"}\");", "+            log(rcurly, MSG_KEY_LINE_SAME, \"}\");", "-            log(rcurly, \"line.alone\", \"}\");", "+            log(rcurly, MSG_KEY_LINE_ALONE, \"}\");", "-            log(rcurly, \"line.new\", \"}\");", "+            log(rcurly, MSG_KEY_LINE_NEW, \"}\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1890d56bd877997b9b35d9407468476f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public DetectorOptions setMessage(String aMessage)", "signatureAfterChange": "     public DetectorOptions setMessage(String message)", "diff": ["-    public DetectorOptions setMessage(String aMessage)", "+    public DetectorOptions setMessage(String message)", "-        mMessage = aMessage;", "+        this.message = message;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1899b28a5503ad5f61acdf118cf8d5b4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "64c05f5391bdf55a60da22a685488022827aee84", "commitAfterChange": "1487e5161886d95cb8c82e4fb1a8b447fa7e32d0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void checkHtmlTags(final DetailAST ast, final TextBlock comment)", "signatureAfterChange": "     private void checkHtmlTags(final DetailAST ast, final TextBlock comment)", "diff": ["-        for (final HtmlTag htag : htmlStack) {", "-            if (!isSingleTag(htag)", "-                && !htag.getId().equals(lastFound)", "-                && !typeParameters.contains(htag.getId())) {", "-                log(htag.getLineNo(), htag.getPosition(), UNCLOSED_HTML, htag);", "-                lastFound = htag.getId();", "+        for (final HtmlTag htmlTag : htmlStack) {", "+            if (!isSingleTag(htmlTag)", "+                && !htmlTag.getId().equals(lastFound)", "+                && !typeParameters.contains(htmlTag.getId())) {", "+                log(htmlTag.getLineNo(), htmlTag.getPosition(), UNCLOSED_HTML, htmlTag);", "+                lastFound = htmlTag.getId();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18a438d64ca286de4750e221e126db72", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractAccessControlNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setApplyToPublic(boolean aApplyTo)", "signatureAfterChange": "     public void setApplyToPublic(boolean applyTo)", "diff": ["-    public void setApplyToPublic(boolean aApplyTo)", "+    public void setApplyToPublic(boolean applyTo)", "-        mApplyToPublic = aApplyTo;", "+        applyToPublic = applyTo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18a6587febf1d155ae54a797390807d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void setNextSibling(AST aAST)", "signatureAfterChange": "      @Override     public void setNextSibling(AST ast)", "diff": ["-    public void setNextSibling(AST aAST)", "+    public void setNextSibling(AST ast)", "-        super.setNextSibling(aAST);", "-        if ((aAST != null) && (mParent != null)) {", "-            ((DetailAST) aAST).setParent(mParent);", "+        super.setNextSibling(ast);", "+        if ((ast != null) && (parent != null)) {", "+            ((DetailAST) ast).setParent(parent);", "-        if (aAST != null) {", "-            ((DetailAST) aAST).setPreviousSibling(this);", "+        if (ast != null) {", "+            ((DetailAST) ast).setPreviousSibling(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18add6e1d3902ae721529e1b58590f33", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Override     public void visitToken(final DetailAST aAST)", "signatureAfterChange": "     @Override     public void visitToken(final DetailAST aAST)", "diff": ["-            this.log(aAST.getLineNo(), \"tag.not.valid.on\",", "+            this.log(aAST.getLineNo(), MSG_KEY_TAG_NOT_VALID_ON,", "-            this.log(aAST.getLineNo(), \"annotation.missing.override\");", "+            this.log(aAST.getLineNo(), MSG_KEY_ANNOTATION_MISSING_OVERRIDE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18f6e6b8af7e9b15eff7b1de50ba1799", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "31cc403a41c60aa09050252953a56ef053c034d4", "commitAfterChange": "2f9b0f057c489d074967575696a0d53a34fec6b7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void reportCComment(int startLineNo, int startColNo,             int endLineNo, int endColNo)", "signatureAfterChange": "     public void reportCComment(int startLineNo, int startColNo,             int endLineNo, int endColNo)", "diff": ["-        if (cComments.containsKey(startLineNo)) {", "-            final List<TextBlock> entries = cComments.get(startLineNo);", "+        if (clangComments.containsKey(startLineNo)) {", "+            final List<TextBlock> entries = clangComments.get(startLineNo);", "-            cComments.put(startLineNo, entries);", "+            clangComments.put(startLineNo, entries);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "192958d2072ce7f70a8b8174a0d4a2a9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/UtilsTest.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testBadRegex()", "signatureAfterChange": "      public void testBadRegex()", "diff": ["-            Utils.createRE(\"[\");", "+            Utils.createPattern(\"[\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "194a66244267c59521101492ceb9e6c6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "91aa6578321ceb08f4b0d715f994b7a9f4abe9d7", "commitAfterChange": "3430721be200cbe2acf55c3b3d52a528638123b3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void logIOException(IOException e, File file)", "signatureAfterChange": "     private void logIOException(IOException aEx, File aFile)", "diff": ["-    private void logIOException(IOException e, File file)", "+    private void logIOException(IOException aEx, File aFile)", "-        if (!(e instanceof FileNotFoundException)) {", "-            args = new String[] {e.getMessage()};", "+        if (!(aEx instanceof FileNotFoundException)) {", "+            args = new String[] {aEx.getMessage()};", "-        getMessageDispatcher().fireErrors(file.getPath(), messages);", "+        getMessageDispatcher().fireErrors(aFile.getPath(), messages);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1962c1183ae6745bbc4739441ebd34cf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocNodeImpl.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void setType(int aType)", "signatureAfterChange": "      public void setType(int type)", "diff": ["-    public void setType(int aType)", "+    public void setType(int type)", "-        this.mType = aType;", "+        this.type = type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1964683a51142b9bdd5731c9a53dabf6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-                && (cache.inCache(fileName, timestamp)", "+                && (cache.isInCache(fileName, timestamp)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "197ee5bb15782e569f20f804edebd527", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private Set<Object> loadKeys(File file)", "signatureAfterChange": "     private Set<Object> loadKeys(File file)", "diff": ["-            final Enumeration<?> e = props.propertyNames();", "-            while (e.hasMoreElements()) {", "-                keys.add(e.nextElement());", "+            final Enumeration<?> element = props.propertyNames();", "+            while (element.hasMoreElements()) {", "+                keys.add(element.nextElement());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1987a226a6d165e672bad0948237f407", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "93587ecf374c8dd9f040fd3667efc47a3d84ff5d", "commitAfterChange": "b06e2e0015944ceaa74a10134bf06ac5c9e53782", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void visitMethodDef(DetailAST aAST)", "signatureAfterChange": "     private void visitMethodDef(DetailAST aMethodDef)", "diff": ["-    private void visitMethodDef(DetailAST aAST)", "+    private void visitMethodDef(DetailAST aMethodDef)", "-        if (isCheckedMethod(aAST)) {", "-            checkClassName(aAST);", "+        if (isCheckedMethod(aMethodDef)) {", "+            checkClassName(aMethodDef);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19dd276b41c453f1763ea849fa317bff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void visitClassDef(DetailAST aClassDef)", "signatureAfterChange": "     private void visitClassDef(DetailAST classDef)", "diff": ["-    private void visitClassDef(DetailAST aClassDef)", "+    private void visitClassDef(DetailAST classDef)", "-        mContextStack.push(mContext);", "+        contextStack.push(context);", "-            aClassDef.findFirstToken(TokenTypes.IDENT).getText();", "-        mContext = new Context(className,", "-                               aClassDef.getLineNo(),", "-                               aClassDef.getColumnNo());", "+            classDef.findFirstToken(TokenTypes.IDENT).getText();", "+        context = new Context(className,", "+                               classDef.getLineNo(),", "+                               classDef.getColumnNo());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19e99ea4db6b281a3dee2fe85f42af30", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "a13ebd482ce5dd891ba99d4c22a7cd5ff7d8e2dc", "commitAfterChange": "dad4fa599aa3570980fcaff4cb5f37941847a7a1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testRemoveListener() throws Exception", "signatureAfterChange": "      @Test     public void testRemoveListener() throws Exception", "diff": ["-        final DebugChecker c = new DebugChecker();", "+        final DebugChecker checker = new DebugChecker();", "-        c.addListener(auditAdapter);", "-        c.addListener(aa2);", "-        c.removeListener(auditAdapter);", "+        checker.addListener(auditAdapter);", "+        checker.addListener(aa2);", "+        checker.removeListener(auditAdapter);", "-        c.fireAuditStarted();", "+        checker.fireAuditStarted();", "-        c.fireAuditFinished();", "+        checker.fireAuditFinished();", "-        c.fireFileStarted(\"Some File Name\");", "+        checker.fireFileStarted(\"Some File Name\");", "-        c.fireFileFinished(\"Some File Name\");", "+        checker.fireFileFinished(\"Some File Name\");", "-        c.fireErrors(\"Some File Name\", msgs);", "+        checker.fireErrors(\"Some File Name\", msgs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19ed823155bc50332ce2830592825f4a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractViolationReporter.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected final void log(DetailAST aAST, String aKey, Object... aArgs)", "signatureAfterChange": "     protected final void log(DetailAST ast, String key, Object... args)", "diff": ["-    protected final void log(DetailAST aAST, String aKey, Object... aArgs)", "+    protected final void log(DetailAST ast, String key, Object... args)", "-        log(aAST.getLineNo(), aAST.getColumnNo(), aKey, aArgs);", "+        log(ast.getLineNo(), ast.getColumnNo(), key, args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a2c06cf68f83003ed261cb9362d5dbd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "443e534a3c98c0b30f24647da724fe918f17a006", "commitAfterChange": "66d73fe6189267fee3423e2e8d7fc2d68599a43f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private ParseStatus parseJavadocAsDetailNode(DetailAST javadocCommentAst)", "signatureAfterChange": "     private ParseStatus parseJavadocAsDetailNode(DetailAST javadocCommentAst)", "diff": ["-            final DetailNode tree = convertParseTree2DetailNode(parseTree);", "+            final DetailNode tree = convertParseTreeToDetailNode(parseTree);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a39de9ac9af18f06e0a232147e2d0ed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java", "commitBeforeChange": "d15507116c3e38fbe553284a1266e5deb7a52aa3", "commitAfterChange": "22c396868005e7ecf77b09c52ab312d54f662235", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void checkIdent(DetailAST ast)", "signatureAfterChange": "     private void checkIdent(DetailAST ast)", "diff": ["-            if (identAST != null", "-                && identAST.getType() == TokenTypes.IDENT", "+            if (identAST.getType() == TokenTypes.IDENT"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a3c1d0af051478f706b3b07c5e438b7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/transmogrify/QueryEngine.java", "commitBeforeChange": "cf27285c85613a0963903ddf6b683aa586f90aa5", "commitAfterChange": "adc04337ea44d4e6b0ff8ec5efedd11ecd263646", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public QueryEngine(SymbolTable symbolTable)", "signatureAfterChange": "    public QueryEngine(SymbolTable aSymbolTable)", "diff": ["-  public QueryEngine(SymbolTable symbolTable) {", "-    this.symbolTable = symbolTable;", "+  public QueryEngine(SymbolTable aSymbolTable) {", "+    this.symbolTable = aSymbolTable;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a430da07a1c0106e4bcb3303fae641d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/MethodParamPadCheck.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                log(parenAST, \"line.previous\", parenAST.getText());", "+                log(parenAST, LINE_PREVIOUS, parenAST.getText());", "-                log(parenAST , \"ws.preceded\", parenAST.getText());", "+                log(parenAST , WS_PRECEDED, parenAST.getText());", "-                log(parenAST, \"ws.notPreceded\", parenAST.getText());", "+                log(parenAST, WS_NOT_PRECEDED, parenAST.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a72a22d1f2aafa22efb5fe25c7af4c1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "e56a2c15434fc8616c167e2fbad7a4dbe415afe9", "commitAfterChange": "39ff4631b4c5b912f7fae340689514750b7095ba", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testPackageNames() throws CheckstyleException", "signatureAfterChange": "     public void testPackageNames() throws CheckstyleException", "diff": ["+        assertNotNull(c);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a89c963e46dd4f7d35d6fd998248faa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "7166b6a1d07452b72cf6f62ae2afe9846b96ad91", "commitAfterChange": "47802121745d9113b54cdb2d8ccef59e74ce3e72", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "         public void endElement(String aNamespaceURI,                                String aLocalName,                                String aQName)", "signatureAfterChange": "         public void endElement(String aNamespaceURI,                                String aLocalName,                                String aQName)", "diff": ["-            if (aQName.equals(\"module\")) {", "+            if (aQName.equals(MODULE)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ab6a171052c4aa59b4f8b085ff1c076", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "         public void addStaticField(String aField)", "signatureAfterChange": "         public void addStaticField(String field)", "diff": ["-        public void addStaticField(String aField)", "+        public void addStaticField(String field)", "-            mStaticFields.add(aField);", "+            staticFields.add(field);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b02e232542fa0e40380e79ffe85e564", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "81dab0c14131c72066f28cf8dbbddd1db3ea3a38", "commitAfterChange": "eb7b7bfd3e63a926c3f3b2801d519caa0e1fffc3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     void verifyWSAroundEnd(int aLineNo, int aColNo, String aText)", "signatureAfterChange": "     void verifyWSAroundEnd(int aLineNo, int aColNo, String aText)", "diff": ["-        verifyWSAroundBegin(aLineNo, aColNo - aText.length(), aText);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b06f06dcc2c21c29f245294d46c6b69", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java", "commitBeforeChange": "53ccf7dad03e7c5c4d9285bae68b626eea2c16d0", "commitAfterChange": "0aab6d6243c3675a978940eebb1f18a9d633929f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-        else if (ScopeUtils.inInterfaceOrAnnotationBlock(aAST)) {", "-            final DetailAST modifiers =", "-                aAST.findFirstToken(TokenTypes.MODIFIERS);", "-", "+        else if (isInterfaceOrAnnotationMember(aAST)) {", "+            final DetailAST modifiers = aAST.findFirstToken(TokenTypes.MODIFIERS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b0f1e1bebc0fe8e950cbbb9f4baccd5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocNodeImpl.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void setParent(DetailNode aParent)", "signatureAfterChange": "      public void setParent(DetailNode parent)", "diff": ["-    public void setParent(DetailNode aParent)", "+    public void setParent(DetailNode parent)", "-        this.mParent = aParent;", "+        this.parent = parent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b3c6692f11ba78edcf8cd2f9419075e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void setCheckEmptyJavadoc(boolean aFlag)", "signatureAfterChange": "     public void setCheckEmptyJavadoc(boolean flag)", "diff": ["-    public void setCheckEmptyJavadoc(boolean aFlag)", "+    public void setCheckEmptyJavadoc(boolean flag)", "-        mCheckEmptyJavadoc = aFlag;", "+        checkEmptyJavadoc = flag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b4e56a570201bfd4c0fa3aaa2c55729", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ArrayInitHandler.java", "commitBeforeChange": "4d526a44a76f3a8022bdf59e6a396d568116ef64", "commitAfterChange": "782da01103fc7ec8e69a3da7a5ef800dac866a8b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected IndentLevel getLevelImpl()", "signatureAfterChange": "      @Override     protected IndentLevel getLevelImpl()", "diff": ["-            // at this point getParent() is instance of ArrayInitHandler", "-            return ((ArrayInitHandler) getParent()).getChildrenExpectedLevel();", "+            // at this point getParent() is instance of BlockParentHandler", "+            return ((BlockParentHandler) getParent()).getChildrenExpectedLevel();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b62dab5dbaffae9b1cc4390a117ee46", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private boolean containsJavadocTag(final TextBlock aJavadoc)", "signatureAfterChange": "     private boolean containsJavadocTag(final TextBlock javadoc)", "diff": ["-    private boolean containsJavadocTag(final TextBlock aJavadoc)", "+    private boolean containsJavadocTag(final TextBlock javadoc)", "-        if (aJavadoc == null) {", "+        if (javadoc == null) {", "-        final String[] lines = aJavadoc.getText();", "+        final String[] lines = javadoc.getText();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b71244c295f635f2d47e5d020a945d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck.java", "commitBeforeChange": "9cff1673f1d42910c654e0af5365d68591f104f0", "commitAfterChange": "b83c9aceef9577eaada5cfd78bc7b2cd04a176d1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     protected final void finishLocalSetup() throws CheckstyleException", "signatureAfterChange": "      @Override     protected final void finishLocalSetup() throws CheckstyleException", "diff": ["-        if (mHeaderInfo.getHeaderLines().isEmpty()) {", "+        if (mHeaderLines.isEmpty()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b73bf4bc33c8a285edca2d7b1584118", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultContext.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void add(String aKey, Object aValue)", "signatureAfterChange": "     public void add(String key, Object value)", "diff": ["-    public void add(String aKey, Object aValue)", "+    public void add(String key, Object value)", "-        mEntries.put(aKey, aValue);", "+        entries.put(key, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b75840194685eba1d389037a2459c49", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void visitParameterDef(DetailAST aParamDef)", "signatureAfterChange": "     private void visitParameterDef(DetailAST paradef)", "diff": ["-    private void visitParameterDef(DetailAST aParamDef)", "+    private void visitParameterDef(DetailAST paradef)", "-        final DetailAST grandParentAST = aParamDef.getParent().getParent();", "+        final DetailAST grandParentAST = paradef.getParent().getParent();", "-            checkClassName(aParamDef);", "+            checkClassName(paradef);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b78028ad8b4c018b3ed5c6c8f583287", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private Set<Object> loadKeys(File file)", "signatureAfterChange": "     private Set<Object> loadKeys(File file)", "diff": ["-            logIOException(e, file);", "+            logIoException(e, file);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b78ea03b5de14cc9c25415e8688dda4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "a1ad6dbd260c4293be469801021f371e60fc9ae8", "commitAfterChange": "1c42e3eeb9aeebc47b2373541c1cc8d311d8b671", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Override     public void addError(AuditEvent evt)", "signatureAfterChange": "     @Override     public void addError(AuditEvent evt)", "diff": ["-            sb.append(fileName);", "-            sb.append(':').append(evt.getLine());", "+            sb.append(fileName).append(':').append(evt.getLine());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bed6287177104c834f5745751a80635", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractFormatCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void updateRegexp(String aFormat, int aCompileFlags)", "signatureAfterChange": "     private void updateRegexp(String format, int compileFlagsParam)", "diff": ["-    private void updateRegexp(String aFormat, int aCompileFlags)", "+    private void updateRegexp(String format, int compileFlagsParam)", "-            mRegexp = Utils.getPattern(aFormat, aCompileFlags);", "-            mFormat = aFormat;", "-            mCompileFlags |= aCompileFlags;", "+            regexp = Utils.getPattern(format, compileFlagsParam);", "+            this.format = format;", "+            compileFlags |= compileFlagsParam;", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bf0c263c3b89435003f1119128af361", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java", "commitBeforeChange": "791036b2f1597a793222ee500f6deec50f379111", "commitAfterChange": "9988d4d007b7d7b1417efc1e06de9309cb7c3e54", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     static boolean areOnSameLine(DetailAST ast1, DetailAST ast2)", "signatureAfterChange": "     static boolean areOnSameLine(DetailAST ast1, DetailAST ast2)", "diff": ["-        return ast1 != null && ast2 != null", "-            && ast1.getLineNo() == ast2.getLineNo();", "+        return ast1.getLineNo() == ast2.getLineNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c1a2293e47737934f923e2471725a72", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/IntRangeFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-        return \"IntRangeFilter[\" + mLowerBound + \",\" + mUpperBound + \"]\";", "+        return \"IntRangeFilter[\" + lowerBound + \",\" + upperBound + \"]\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c7357260c1346a0d4e881b751b43187", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void addFileset(FileSet aFS)", "signatureAfterChange": "     public void addFileset(FileSet fS)", "diff": ["-    public void addFileset(FileSet aFS)", "+    public void addFileset(FileSet fS)", "-        mFileSets.add(aFS);", "+        fileSets.add(fS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1caae0d049cd0cf76d5ac37485d37631", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean fileExtensionMatches(File aFile)", "signatureAfterChange": "     private boolean fileExtensionMatches(File file)", "diff": ["-    private boolean fileExtensionMatches(File aFile)", "+    private boolean fileExtensionMatches(File file)", "-        if ((null == mFileExtensions) || (mFileExtensions.length == 0)) {", "+        if ((null == fileExtensions) || (fileExtensions.length == 0)) {", "-        final String[] withDotExtensions = new String[mFileExtensions.length];", "-        for (int i = 0; i < mFileExtensions.length; i++) {", "-            final String extension = mFileExtensions[i];", "+        final String[] withDotExtensions = new String[fileExtensions.length];", "+        for (int i = 0; i < fileExtensions.length; i++) {", "+            final String extension = fileExtensions[i];", "-        final String fileName = aFile.getName();", "+        final String fileName = file.getName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cb6044c05490d1894974c49afe8d3f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractLoader.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void parseInputSource(InputSource aInputSource)         throws IOException, SAXException", "signatureAfterChange": "     public void parseInputSource(InputSource inputSource)         throws IOException, SAXException", "diff": ["-    public void parseInputSource(InputSource aInputSource)", "+    public void parseInputSource(InputSource inputSource)", "-        mParser.parse(aInputSource);", "+        parser.parse(inputSource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cbb1c7772d236db396465cf6da33e08", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-    public void beginTree(DetailAST aRootAST)", "+    public void beginTree(DetailAST rootAST)", "-        mCollect = false;", "-        mImports.clear();", "-        mReferenced.clear();", "+        collect = false;", "+        imports.clear();", "+        referenced.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cd221ad2fc3d4ab9b22a1429217e4e8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public IndentLevel getSuggestedChildLevel(AbstractExpressionHandler child)", "signatureAfterChange": "      @Override     public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child)", "diff": ["-    public IndentLevel getSuggestedChildLevel(AbstractExpressionHandler child) {", "+    public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {", "-            return getParent().getSuggestedChildLevel(child);", "+            return getParent().getSuggestedChildIndent(child);", "-        return super.getSuggestedChildLevel(child);", "+        return super.getSuggestedChildIndent(child);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cd45ebed7ef595c2f55948aca08d659", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "fb8c630359182a9b77da5ac3800bdbfd5d67676e", "commitAfterChange": "cbfe72383be737abacb4e78ddbb59a3036798605", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private static int compareImports(String import1, String import2)", "signatureAfterChange": "     private static int compareImports(String import1, String import2)", "diff": ["-            result = import1Token.compareToIgnoreCase(import2Token);", "+            result = import1Token.compareTo(import2Token);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cd97382e990e81a6a366f970e5fc554", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheckTest.java", "commitBeforeChange": "1116ce8c8cfdfbdd1445a7f123dbe89467824077", "commitAfterChange": "cd7d040b4d2c4a80e87ef9b5be9bbd964f19e97d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void test() throws Exception", "signatureAfterChange": "     @Test     public void test() throws Exception", "diff": ["-            \"6:1: Class Fan-Out Complexity is 7 (max allowed is 0).\",", "-            \"7:5: Class Fan-Out Complexity is 2 (max allowed is 0).\",", "-            \"27:1: Class Fan-Out Complexity is 4 (max allowed is 0).\",", "+            \"6:1: Class Fan-Out Complexity is 3 (max allowed is 0).\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d076e44dc478b2630350d71cbd54485", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setCheckMethods(boolean aCheckMethods)", "signatureAfterChange": "     public void setCheckMethods(boolean checkMethods)", "diff": ["-    public void setCheckMethods(boolean aCheckMethods)", "+    public void setCheckMethods(boolean checkMethods)", "-        mCheckMethods = aCheckMethods;", "+        this.checkMethods = checkMethods;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d1a44c1be24fe4cb56d5bae856a31d2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setExcludes(String[] aExcludes)", "signatureAfterChange": "     public void setExcludes(String[] excludes)", "diff": ["-    public void setExcludes(String[] aExcludes)", "+    public void setExcludes(String[] excludes)", "-        mExcludes = aExcludes.clone();", "+        this.excludes = excludes.clone();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d66c0d3df405680679aa8020994c50c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/ASTManager.java", "commitBeforeChange": "79d2d3d3e2447600b32a033ab51a46e3a4617523", "commitAfterChange": "3d734ac4162e457e4d3679487a6726e94c17db5b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static ASTManager getInstance()", "signatureAfterChange": "     public static ASTManager getInstance()", "diff": ["-        return sInstance;", "+        return INSTANCE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d77ec86eeab912a7387c5bfb908181c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "7166b6a1d07452b72cf6f62ae2afe9846b96ad91", "commitAfterChange": "47802121745d9113b54cdb2d8ccef59e74ce3e72", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "         public void startElement(String aNamespaceURI,                                  String aLocalName,                                  String aQName,                                  Attributes aAtts)                 throws SAXException", "signatureAfterChange": "         public void startElement(String aNamespaceURI,                                  String aLocalName,                                  String aQName,                                  Attributes aAtts)                 throws SAXException", "diff": ["-            if (aQName.equals(\"module\")) {", "+            if (aQName.equals(MODULE)) {", "-                final String name = aAtts.getValue(\"name\");", "+                final String name = aAtts.getValue(NAME);", "-            else if (aQName.equals(\"property\")) {", "+            else if (aQName.equals(PROPERTY)) {", "-                final String name = aAtts.getValue(\"name\");", "+                final String name = aAtts.getValue(NAME);", "-                    value = replaceProperties(aAtts.getValue(\"value\"),", "-                        mOverrideProps);", "+                    value = replaceProperties(aAtts.getValue(VALUE),", "+                        mOverridePropsResolver);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1db3adaa9bc5b84dd885e29219a6fba0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java", "commitBeforeChange": "779d30b7599259bb25f5178cbb28f2a038992553", "commitAfterChange": "1bc8a685f64ec17d87b465cb765127cc5f0db1ca", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void parseTags(String[] text, int lineNo)", "signatureAfterChange": "     private void parseTags(String[] text, int lineNo)", "diff": ["-                        endTag.getLineNo() < nLines && endTag.getColumnNo() > 0", "+                        endTag.getLineNo() < nLines"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dc84f75f484a9d3a528f3053d62da82", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "521dacce7582a4349a9b02980c3e849e83c023fb", "commitAfterChange": "82d8e91024a57a96fbb6410dacb29d6a3f582903", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-            final DetailAST rootAST = TreeWalker.parse(contents);", "+            final DetailAST rootAST = parse(contents);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dcc00ad623e466a8de90a44f702dc8e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java", "commitBeforeChange": "3c7c3cbe88a2bec0962702305db4f2b05117501c", "commitAfterChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "         boolean hasNonPrivateCtor()", "signatureAfterChange": "         boolean isWithNonPrivateCtor()", "diff": ["-        boolean hasNonPrivateCtor()", "+        boolean isWithNonPrivateCtor()", "-            return hasNonPrivateCtor;", "+            return withNonPrivateCtor;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dcebae659efa671f905b330beda8116", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheck.java", "commitBeforeChange": "782da01103fc7ec8e69a3da7a5ef800dac866a8b", "commitAfterChange": "68959eeefff4d4a5b295cefbec242c643d523c6b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          @Override         public Object put(Object key, Object value)", "signatureAfterChange": "          @Override         public Object put(Object key, Object value)", "diff": ["-            synchronized (this) {", "+            synchronized (lock) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1de37390aa5260b9ffe9916da2d3fea4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void logCommaViolation(final DetailAST ast)", "signatureAfterChange": "     private void logCommaViolation(final DetailAST ast)", "diff": ["-        if (this.comma == TrailingArrayComma.ALWAYS", "+        if (this.trailingArrayComma == TrailingArrayComma.ALWAYS", "-        else if (this.comma == TrailingArrayComma.NEVER", "+        else if (this.trailingArrayComma == TrailingArrayComma.NEVER"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dfe6c5c511cd6a6161db43ae86cc2ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private boolean isStaredImport(FullIdent aImportIdent)", "signatureAfterChange": "     private boolean isStaredImport(FullIdent importIdent)", "diff": ["-    private boolean isStaredImport(FullIdent aImportIdent)", "+    private boolean isStaredImport(FullIdent importIdent)", "-        return (null != aImportIdent) && aImportIdent.getText().endsWith(\".*\");", "+        return (null != importIdent) && importIdent.getText().endsWith(\".*\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e03643676090b2d8ea4ff77f10a8cc7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-            log(aAST.getLineNo(), \"needBraces\", aAST.getText());", "+            log(aAST.getLineNo(), MSG_KEY_NEED_BRACES, aAST.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e1dc866f346c206eca42034aa6b5229", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SingleLineJavadocCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setIgnoredTags(String tags)", "signatureAfterChange": "     public void setIgnoredTags(String tags)", "diff": ["-        final List<String> ignoredTags = new ArrayList<>();", "+        final List<String> tagList = new ArrayList<>();", "-            ignoredTags.add(sTag.trim());", "+            tagList.add(sTag.trim());", "-        this.ignoredTags = ignoredTags;", "+        this.ignoredTags = tagList;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e4c43c61ad37acf865dfd599c29d486", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Comment.java", "commitBeforeChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "commitAfterChange": "abfc952fd0ed88f6246b1d969a8a980ea63f0bd6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public final int getStartLineNo()", "signatureAfterChange": "      @Override     public final int getStartLineNo()", "diff": ["-        return firstLine;", "+        return startLineNo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e5edc6f2db4e1bd6c5c91e5c7c34a09", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "c8761822c4cdea9e60b08777fd01f1958201f06f", "commitAfterChange": "ee1b845b7936df396543bc11dced4676d5af86b6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Override     public void addError(AuditEvent evt)", "signatureAfterChange": "     @Override     public void addError(AuditEvent evt)", "diff": ["-            errorWriter.println(sb.toString());", "+            errorWriter.println(sb);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e671ebc86bdd7ea200e459065726b31", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/MethodCountCheck.java", "commitBeforeChange": "a6e4d310c0e38d73e7816a5fb57e66fc221d79ec", "commitAfterChange": "5c6e03a868c0f756ccd3bb9b796febbbbf25bd4e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void setMaxPublic(int maxPublic)", "signatureAfterChange": "     public void setMaxPublic(int aValue)", "diff": ["-    public void setMaxPublic(int maxPublic)", "+     */", "+    public void setMaxPublic(int aValue)", "-        mMaxPublic = maxPublic;", "+        mMaxPublic = aValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ea1a7cf6df0be45a1727d1df355b4d6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenCheck.java", "commitBeforeChange": "fee4ea98984da7b06b33d8a7cd64d7ec79c3db10", "commitAfterChange": "dd47d21b9eb0d254016315790db9be5db2c28ea4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            ast.getText());", "+            convertToString(ast)", "+        );", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ebe38ce4d5f7e91122b066386a35f52", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheck.java", "commitBeforeChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "commitAfterChange": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static String getAnnotationName(DetailAST annotation)", "signatureAfterChange": "     private static String getAnnotationName(DetailAST annotation)", "diff": ["-        DetailAST idenNode = annotation.findFirstToken(TokenTypes.IDENT);", "-        if (idenNode == null) {", "-            idenNode = annotation.findFirstToken(TokenTypes.DOT).findFirstToken(TokenTypes.IDENT);", "+        DetailAST identNode = annotation.findFirstToken(TokenTypes.IDENT);", "+        if (identNode == null) {", "+            identNode = annotation.findFirstToken(TokenTypes.DOT).findFirstToken(TokenTypes.IDENT);", "-        return idenNode.getText();", "+        return identNode.getText();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ee9c726295b0237826ed220009a1adf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java", "commitBeforeChange": "111bd4b1df19e62bb76bbf83cfefa9ac5066c98a", "commitAfterChange": "0a6026c9ab97dc2d5ecd9c8cc6a27197208f4e6a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void checkLinesIndent(LineSet lines,                                   IndentLevel indentLevel,                                   boolean firstLineMatches,                                   int firstLine)", "signatureAfterChange": "     private void checkLinesIndent(LineSet lines,                                   IndentLevel indentLevel,                                   boolean firstLineMatches,                                   int firstLine)", "diff": ["-                checkSingleLine(i, col.intValue(), theLevel, false);", "+                checkSingleLine(i, col, theLevel, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ef198649c35016772f863d54e13981f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/CheckstyleException.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public CheckstyleException(String aMessage)", "signatureAfterChange": "     public CheckstyleException(String message)", "diff": ["-    public CheckstyleException(String aMessage)", "+    public CheckstyleException(String message)", "-        super(aMessage);", "+        super(message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f179f0a600a4284a8544599aac6a2fe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "95604498dadc98608c4294760a8f74c6d2ca2c68", "commitAfterChange": "b43c32ad0a3674fcda782d2e28d0975b72382470", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void startElement(String namespaceURI,                              String localName,                              String qName,                              Attributes atts)", "signatureAfterChange": "      @Override     public void startElement(String uri,                              String localName,                              String qName,                              Attributes attributes)", "diff": ["-    public void startElement(String namespaceURI,", "+    public void startElement(String uri,", "-                             Attributes atts) {", "+                             Attributes attributes) {", "-            final String name = atts.getValue(\"name\");", "+            final String name = attributes.getValue(\"name\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f1bb325e3aa92ee027291dfe82e6f82", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "commitAfterChange": "4c1148db9982918e65f8d1156e8fb9c07b206fc9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public boolean equals(Object object)", "signatureAfterChange": "      @Override     public boolean equals(Object object)", "diff": ["-        final LocalizedMessage that = (LocalizedMessage) object;", "-        return Objects.equals(lineNo, that.lineNo)", "-                && Objects.equals(colNo, that.colNo)", "-                && Objects.equals(severityLevel, that.severityLevel)", "-                && Objects.equals(moduleId, that.moduleId)", "-                && Objects.equals(key, that.key)", "-                && Objects.equals(bundle, that.bundle)", "-                && Objects.equals(sourceClass, that.sourceClass)", "-                && Objects.equals(customMessage, that.customMessage)", "-                && Arrays.equals(args, that.args);", "+        final LocalizedMessage localizedMessage = (LocalizedMessage) object;", "+        return Objects.equals(lineNo, localizedMessage.lineNo)", "+                && Objects.equals(colNo, localizedMessage.colNo)", "+                && Objects.equals(severityLevel, localizedMessage.severityLevel)", "+                && Objects.equals(moduleId, localizedMessage.moduleId)", "+                && Objects.equals(key, localizedMessage.key)", "+                && Objects.equals(bundle, localizedMessage.bundle)", "+                && Objects.equals(sourceClass, localizedMessage.sourceClass)", "+                && Objects.equals(customMessage, localizedMessage.customMessage)", "+                && Arrays.equals(args, localizedMessage.args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f239050fc97de57650c233dc87d20a7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Override     public final void contextualize(Context aContext)         throws CheckstyleException", "signatureAfterChange": "     @Override     public final void contextualize(Context context)         throws CheckstyleException", "diff": ["-    public final void contextualize(Context aContext)", "+    public final void contextualize(Context context)", "-        final Collection<String> attributes = aContext.getAttributeNames();", "+        final Collection<String> attributes = context.getAttributeNames();", "-            final Object value = aContext.get(key);", "+            final Object value = context.get(key);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f2e9579a2c5e5faf10f91e66eb09512", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LocalVariableNameCheck.java", "commitBeforeChange": "1ce6badd8f1852081fee56fd6184ecfe8c128c69", "commitAfterChange": "30438ebdf9fd28a94613e2aaecde776d906349a7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     protected final boolean mustCheckName(DetailAST ast)", "signatureAfterChange": "      @Override     protected final boolean mustCheckName(DetailAST ast)", "diff": ["-            return !sSingleChar.matcher(variableName).find();", "+            return !SINGLE_CHAR.matcher(variableName).find();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f5046f820c7b1b84111ac2eaf7c8191", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/AllTests.java", "commitBeforeChange": "3925906faee1cf9310942708e2946d3e598f5f71", "commitAfterChange": "9bb2ad91c98b3d590579f34abff774c4375581fc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public static Test suite()", "signatureAfterChange": "      public static Test suite()", "diff": ["-        suite.addTest(new TestSuite(DesignForInheritanceCheckTest.class));", "+        suite.addTest(new TestSuite(DesignForExtensionCheckTest.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f581591e20f42130c1851241081ceb8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processClassDef(DetailAST aAST)", "signatureAfterChange": "     private void processClassDef(DetailAST ast)", "diff": ["-    private void processClassDef(DetailAST aAST)", "+    private void processClassDef(DetailAST ast)", "-        final DetailAST identToken = aAST.findFirstToken(TokenTypes.IDENT);", "+        final DetailAST identToken = ast.findFirstToken(TokenTypes.IDENT);", "-        mClassNames.add(className);", "+        classNames.add(className);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f6074015f111b32a1ddad5f2ec73b27", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "2d246f764791db7d2b3fc654c8410b7d51dd83f2", "commitAfterChange": "ba16b1537f68ce77dd09a25b85a11c1e7ecffe75", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          @Override         public void startElement(String namespaceURI,                                  String localName,                                  String qName,                                  Attributes atts)             throws SAXException", "signatureAfterChange": "          @Override         public void startElement(String namespaceURI,                                  String localName,                                  String qName,                                  Attributes atts)             throws SAXException", "diff": ["-                    throw new SAXException(ex.getMessage());", "+                    throw new SAXException(ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fda6ae28d7e45aeb19ea34ba5ad930d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private static void lookForInlineTags(TextBlock comment, int lineNumber,             final List<JavadocTag> validTags, final List<InvalidJavadocTag> invalidTags)", "signatureAfterChange": "     private static void lookForInlineTags(TextBlock comment, int lineNumber,             final List<JavadocTag> validTags, final List<InvalidJavadocTag> invalidTags)", "diff": ["-        final String s = comment.getText()[lineNumber];", "+        final String text = comment.getText()[lineNumber];", "-        final Matcher commentMatcher = commentPattern.matcher(s);", "+        final Matcher commentMatcher = commentPattern.matcher(text);", "-            commentContents = s;", "+            commentContents = text;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fe6b59878cac200081ffc971129b678", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "5ab5020a270215b2ada9ad899339e078e75dfb9a", "commitAfterChange": "1104baffa485ed4d49179c6fd349385692378cbc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     void reportNeedBraces(int aLineNo, String aConstruct);", "signatureAfterChange": "     void reportNeedBraces(Token aToken);", "diff": ["-    void reportNeedBraces(int aLineNo, String aConstruct);", "+    void reportNeedBraces(Token aToken);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "201006d6733ee9988a90b95356d1bc67", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "1846dacad6c2a3a04b3350b45bb8b05835192296", "commitAfterChange": "dd477210aefeabb265e105a9fe8120c8310605e8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main(String[] aArgs)", "signatureAfterChange": "     public static void main(String[] aArgs)", "diff": ["-        addCustomListeners(c, line);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20192b6ff9c0fafcdf5371d57099585e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     @Override     public void addError(AuditEvent aEvt)", "signatureAfterChange": "     @Override     public void addError(AuditEvent evt)", "diff": ["-    public void addError(AuditEvent aEvt)", "+    public void addError(AuditEvent evt)", "-        if (!SeverityLevel.IGNORE.equals(aEvt.getSeverityLevel())) {", "-            mWriter.print(\"<error\" + \" line=\\\"\" + aEvt.getLine() + \"\\\"\");", "-            if (aEvt.getColumn() > 0) {", "-                mWriter.print(\" column=\\\"\" + aEvt.getColumn() + \"\\\"\");", "+        if (!SeverityLevel.IGNORE.equals(evt.getSeverityLevel())) {", "+            writer.print(\"<error\" + \" line=\\\"\" + evt.getLine() + \"\\\"\");", "+            if (evt.getColumn() > 0) {", "+                writer.print(\" column=\\\"\" + evt.getColumn() + \"\\\"\");", "-            mWriter.print(\" severity=\\\"\"", "-                + aEvt.getSeverityLevel().getName()", "+            writer.print(\" severity=\\\"\"", "+                + evt.getSeverityLevel().getName()", "-            mWriter.print(\" message=\\\"\"", "-                + encode(aEvt.getMessage())", "+            writer.print(\" message=\\\"\"", "+                + encode(evt.getMessage())", "-            mWriter.println(\" source=\\\"\"", "-                + encode(aEvt.getSourceName())", "+            writer.println(\" source=\\\"\"", "+                + encode(evt.getSourceName())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2076d299ad1e8eb9f998246a07161606", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected final void logTag(int line, String tag, String tagValue)", "signatureAfterChange": "     protected final void logTag(int line, String tag, String tagValue)", "diff": ["-        log(line, \"javadoc.writeTag\", tag, tagValue);", "+        log(line, WRITE_TAG, tag, tagValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20a230e8c234bc6bb666357b4af6fd0b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "bf529ef600fa9ef2034d0412c198b2121f2b94f2", "commitAfterChange": "ce196814d857a4244a80c51d5151cc35e90b6749", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private List<JavadocTag> getJavadocTags(TextBlock cmt)", "signatureAfterChange": "     private List<JavadocTag> getJavadocTags(TextBlock textBlock)", "diff": ["-    private List<JavadocTag> getJavadocTags(TextBlock cmt) {", "-        final JavadocTags tags = JavadocUtils.getJavadocTags(cmt,", "+    private List<JavadocTag> getJavadocTags(TextBlock textBlock) {", "+        final JavadocTags tags = JavadocUtils.getJavadocTags(textBlock,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20aa701b0fef8e6daaf937a766fa96be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportCheck.java", "commitBeforeChange": "db428ff350e76d0609e192fc48314cf226677fde", "commitAfterChange": "ed7fc0e632848e74d78992a9081ad689fa85e855", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setExcludes(String[] aExcludes)", "signatureAfterChange": "     public void setExcludes(String[] aExcludes)", "diff": ["-    public void setExcludes(String[] aExcludes) ", "+    public void setExcludes(String[] aExcludes)", "-        m_excludes = new String[aExcludes.length];", "+        mExcludes = new String[aExcludes.length];", "-            m_excludes[i] = aExcludes[i];", "-            if (!m_excludes[i].endsWith(\".*\")) {", "+            mExcludes[i] = aExcludes[i];", "+            if (!mExcludes[i].endsWith(\".*\")) {", "-                // \"java.io\" ", "-                m_excludes[i] = m_excludes[i] + \".*\";", "+                // \"java.io\"", "+                mExcludes[i] = mExcludes[i] + \".*\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20c7f6bf7e6d21e9531dba5287680c31", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "8f86620e72849120dc5fba45c3cc54ed38e24447", "commitAfterChange": "d345f3beb27f3d8e3fde06f7e2c7612ddf691b95", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testTypeNamesForZeroPermitedCapitalLetter() throws Exception", "signatureAfterChange": "      @Test     public void testTypeNamesForZeroPermittedCapitalLetter() throws Exception", "diff": ["-    public void testTypeNamesForZeroPermitedCapitalLetter() throws Exception {", "+    public void testTypeNamesForZeroPermittedCapitalLetter() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20dc96f21eba1861b0f1ccb2e0e51a0b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/AvoidStarImportTest.java", "commitBeforeChange": "9a05522373905e39aa764009d1c543092c14f691", "commitAfterChange": "fb3aab764ec70aa4feb72aab01c60d60c062cc47", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testWithChecker()         throws Exception", "signatureAfterChange": "     public void testWithChecker()         throws Exception", "diff": ["-            createCheckConfig(AvoidStarImport.class);", "+            createCheckConfig(AvoidStarImportCheck.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20e1034408d9dfb4e4e12658f4b929ce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public String[] getIgnoredMethodNames()", "signatureAfterChange": "     public String[] getIgnoredMethodNames()", "diff": ["-        return mIgnoredMethodNames.toArray(", "-            new String[mIgnoredMethodNames.size()]);", "+        return ignoredMethodNames.toArray(", "+            new String[ignoredMethodNames.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20e22304926285bfba1e49e95d7ef600", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Path createClasspath()", "signatureAfterChange": "     public Path createClasspath()", "diff": ["-    /** @return a created path for locating classes */", "+    /** @return a created path for locating cluses */", "-        if (mClasspath == null) {", "-            mClasspath = new Path(getProject());", "+        if (classpath == null) {", "+            classpath = new Path(getProject());", "-        return mClasspath.createPath();", "+        return classpath.createPath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2111e28722d69922f7386307c6a76f82", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void setEndOfSentenceFormat(String aFormat)", "signatureAfterChange": "     public void setEndOfSentenceFormat(String format)", "diff": ["-    public void setEndOfSentenceFormat(String aFormat)", "+    public void setEndOfSentenceFormat(String format)", "-        mEndOfSentenceFormat = aFormat;", "+        endOfSentenceFormat = format;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "212fe62664b127652edf820b9569d9e6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck.java", "commitBeforeChange": "20d8e4338d13bc49c1fbbf1e293dbe255638fcea", "commitAfterChange": "1d932b1131bcd457c7b12d84eef8c4406808e1f8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected boolean mustCheckName(DetailAST ast)", "signatureAfterChange": "     protected abstract boolean mustCheckName(DetailAST ast);", "diff": ["-     */", "-    protected boolean mustCheckName(DetailAST ast) {", "-        return true;", "-    }", "+     */", "+    protected abstract boolean mustCheckName(DetailAST ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "217aeff9d73e72c85d6e630446e2a5c0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setOrdered(boolean aOrdered)", "signatureAfterChange": "     public void setOrdered(boolean ordered)", "diff": ["-    public void setOrdered(boolean aOrdered)", "+    public void setOrdered(boolean ordered)", "-        mOrdered = aOrdered;", "+        this.ordered = ordered;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "217d5ad5c55a5262dce0c58274443706", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void processField(DetailAST ast, int parentType)", "signatureAfterChange": "     private void processField(DetailAST ast, int parentType)", "diff": ["-            log(ast, \"require.this.variable\", name);", "+            log(ast, MSG_VARIABLE, name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2197fb475557f44c5f6bd5a15d4bd726", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private int compare(String aCurrentImport, String aPreviousImport)", "signatureAfterChange": "     private int compare(String currentImport, String previousImport)", "diff": ["-    private int compare(String aCurrentImport, String aPreviousImport)", "+    private int compare(String currentImport, String previousImport)", "-        final int currentImportDomainCount = countDomains(aCurrentImport);", "-        final int previousImportDomainCount = countDomains(aPreviousImport);", "+        final int currentImportDomainCount = countDomains(currentImport);", "+        final int previousImportDomainCount = countDomains(previousImport);", "-        while (aCurrentImport.lastIndexOf(\".\") != indexOfPreviousDotCurrent - 1", "-                && aPreviousImport.lastIndexOf(\".\") != indexOfPreviousDotPrevious - 1)", "+        while (currentImport.lastIndexOf(\".\") != indexOfPreviousDotCurrent - 1", "+                && previousImport.lastIndexOf(\".\") != indexOfPreviousDotPrevious - 1)", "-            indexOfNextDotCurrent = aCurrentImport.indexOf(\".\", indexOfPreviousDotCurrent + 1);", "-            indexOfNextDotPrevious = aPreviousImport.indexOf(\".\", indexOfPreviousDotPrevious + 1);", "-            tokenCurrent = aCurrentImport.substring(indexOfPreviousDotCurrent,", "+            indexOfNextDotCurrent = currentImport.indexOf(\".\", indexOfPreviousDotCurrent + 1);", "+            indexOfNextDotPrevious = previousImport.indexOf(\".\", indexOfPreviousDotPrevious + 1);", "+            tokenCurrent = currentImport.substring(indexOfPreviousDotCurrent,", "-            tokenPrevious = aPreviousImport.substring(indexOfPreviousDotPrevious,", "+            tokenPrevious = previousImport.substring(indexOfPreviousDotPrevious,", "-        if (result == 0 && (aCurrentImport.lastIndexOf(\".\") == indexOfPreviousDotCurrent - 1", "-                || aPreviousImport.lastIndexOf(\".\") == indexOfPreviousDotPrevious - 1))", "+        if (result == 0 && (currentImport.lastIndexOf(\".\") == indexOfPreviousDotCurrent - 1", "+                || previousImport.lastIndexOf(\".\") == indexOfPreviousDotPrevious - 1))", "-                getClassName(indexOfNextDotPrevious, aPreviousImport);", "+                getClassName(indexOfNextDotPrevious, previousImport);", "-                getClassName(indexOfNextDotPrevious, aPreviousImport);", "+                getClassName(indexOfNextDotPrevious, previousImport);", "-                        aCurrentImport).compareToIgnoreCase(getClassName(indexOfNextDotPrevious,", "-                                aPreviousImport));", "+                        currentImport).compareToIgnoreCase(getClassName(indexOfNextDotPrevious,", "+                                previousImport));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21995900f49b3796b8dead1140b94712", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "commitAfterChange": "cb5a59fc6baf5de204e3cc99be6ba9865e44350a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static DetailAST skipAnnotationOnlyLines(DetailAST ast)", "signatureAfterChange": "     private static DetailAST skipAnnotationOnlyLines(DetailAST ast)", "diff": ["-        DetailAST lastAnnot = findLastAnnotation(modifiers);", "-        if (lastAnnot == null) {", "+        DetailAST lastAnnotation = findLastAnnotation(modifiers);", "+        if (lastAnnotation == null) {", "-        if (lastAnnot.getNextSibling() == null) {", "+        if (lastAnnotation.getNextSibling() == null) {", "-            tokenAfterLast = lastAnnot.getNextSibling();", "+            tokenAfterLast = lastAnnotation.getNextSibling();", "-        if (tokenAfterLast.getLineNo() > lastAnnot.getLineNo()) {", "+        if (tokenAfterLast.getLineNo() > lastAnnotation.getLineNo()) {", "-        final int lastAnnotLineNumber = lastAnnot.getLineNo();", "-        while (lastAnnot.getPreviousSibling() != null", "-               && lastAnnot.getPreviousSibling().getLineNo() == lastAnnotLineNumber) {", "-            lastAnnot = lastAnnot.getPreviousSibling();", "+        final int lastAnnotationLineNumber = lastAnnotation.getLineNo();", "+        while (lastAnnotation.getPreviousSibling() != null", "+               && lastAnnotation.getPreviousSibling().getLineNo() == lastAnnotationLineNumber) {", "+            lastAnnotation = lastAnnotation.getPreviousSibling();", "-        return lastAnnot;", "+        return lastAnnotation;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21c45cbcff66e310d697fe0e64a3c74e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PropertiesExpander.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public PropertiesExpander(Properties aProperties)", "signatureAfterChange": "     public PropertiesExpander(Properties properties)", "diff": ["-    public PropertiesExpander(Properties aProperties)", "+    public PropertiesExpander(Properties properties)", "-        if (aProperties == null) {", "+        if (properties == null) {", "-        mProperties = aProperties;", "+        this.properties = properties;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21caf7a89c5a26b6380c7f2d6747bf84", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TodoCommentCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final String[] lines = aAST.getText().split(\"\\n\");", "+        final String[] lines = ast.getText().split(\"\\n\");", "-            if (mRegexp.matcher(lines[i]).find()) {", "-                log(aAST.getLineNo() + i, \"todo.match\", mFormat);", "+            if (regexp.matcher(lines[i]).find()) {", "+                log(ast.getLineNo() + i, \"todo.match\", format);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22014124ff0719ea16bda19fbf20212a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void leaveForIter(DetailAST aAST)", "signatureAfterChange": "     private void leaveForIter(DetailAST ast)", "diff": ["-    private void leaveForIter(DetailAST aAST)", "+    private void leaveForIter(DetailAST ast)", "-        final DetailAST forInitAST = aAST.findFirstToken(TokenTypes.FOR_INIT);", "+        final DetailAST forInitAST = ast.findFirstToken(TokenTypes.FOR_INIT);", "-                mCurrentVariables.push(param.getText());", "+                currentVariables.push(param.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2231625c369a456da978ff38ae06fb32", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocNodeImpl.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void setText(String aText)", "signatureAfterChange": "      public void setText(String text)", "diff": ["-    public void setText(String aText)", "+    public void setText(String text)", "-        this.mText = aText;", "+        this.text = text;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "223ad49a4b88f584dc190ffac62f8e52", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "commitBeforeChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "commitAfterChange": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static boolean containsJavadocTag(final TextBlock javadoc)", "signatureAfterChange": "     private static boolean containsJavadocTag(final TextBlock javadoc)", "diff": ["-                    MATCH_INHERITDOC.matcher(line);", "+                    MATCH_INHERIT_DOC.matcher(line);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "225a0f6afdf7b7a75bd1bed3aa548b8e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean hasLineBreakBefore(DetailAST aRightCurly)", "signatureAfterChange": "     private boolean hasLineBreakBefore(DetailAST rightCurly)", "diff": ["-    private boolean hasLineBreakBefore(DetailAST aRightCurly)", "+    private boolean hasLineBreakBefore(DetailAST rightCurly)", "-        if (aRightCurly != null) {", "-            final DetailAST previousToken = aRightCurly.getPreviousSibling();", "-            if (previousToken != null && aRightCurly.getLineNo() == previousToken.getLineNo()) {", "+        if (rightCurly != null) {", "+            final DetailAST previousToken = rightCurly.getPreviousSibling();", "+            if (previousToken != null && rightCurly.getLineNo() == previousToken.getLineNo()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22a5d7a0be6d85fe28f56aab0a096767", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public ImmutableMap<Integer, TextBlock> getCppComments()", "signatureAfterChange": "     public ImmutableMap<Integer, TextBlock> getCppComments()", "diff": ["-        return ImmutableMap.copyOf(mCPlusPlusComments);", "+        return ImmutableMap.copyOf(cPlusPlusComments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22d1ea2f3c157a080cc88df5ca81db86", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private DetailNode convertParseTree2DetailNode(ParseTree aRootParseTree)", "signatureAfterChange": "     private DetailNode convertParseTree2DetailNode(ParseTree rootParseTree)", "diff": ["-    private DetailNode convertParseTree2DetailNode(ParseTree aRootParseTree)", "+    private DetailNode convertParseTree2DetailNode(ParseTree rootParseTree)", "-        final ParseTree currentParseTreeNode = aRootParseTree;", "+        final ParseTree currentParseTreeNode = rootParseTree;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22d40a5bd2b9f8df83dc5da5e8537733", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentLevel.java", "commitBeforeChange": "1ca93bdf66b630e58d979ad2aa40f02e678db5cf", "commitAfterChange": "bc36fe40fcfb51e720dc531a824cd6664ccc4c8b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final boolean isMultiLevel()", "signatureAfterChange": "     public final boolean isMultiLevel()", "diff": ["-        return mLevels.size() > 1;", "+        return mLevels.cardinality() > 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22f797331a405fa667a9342b9c677f7b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java", "commitBeforeChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "commitAfterChange": "26513d52336c42432ee21565b253297ba4174530", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public static String getTokenName(int iD)", "signatureAfterChange": "     public static String getTokenName(int iD)", "diff": ["-            throw new IllegalArgumentException(\"Unknown javdoc token id. Given id: \" + iD);", "+            throw new IllegalArgumentException(UNKNOWN_JAVADOC_TOKEN_ID_EXCEPTION_MESSAGE + iD);", "-            throw new IllegalArgumentException(\"Unknown javdoc token id. Given id: \" + iD);", "+            throw new IllegalArgumentException(UNKNOWN_JAVADOC_TOKEN_ID_EXCEPTION_MESSAGE + iD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23089e90ea53b4300e29a8f876e9f8d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setThrowsIndent(int aThrowsIndent)", "signatureAfterChange": "     public void setThrowsIndent(int throwsIndent)", "diff": ["-    public void setThrowsIndent(int aThrowsIndent)", "+    public void setThrowsIndent(int throwsIndent)", "-        mThrowsIndentationAmount = aThrowsIndent;", "+        throwsIndentationAmount = throwsIndent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "231602bc0608e60ba30eae88b843320f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ScopeUtils.java", "commitBeforeChange": "521dacce7582a4349a9b02980c3e849e83c023fb", "commitAfterChange": "82d8e91024a57a96fbb6410dacb29d6a3f582903", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static Scope getSurroundingScope(DetailAST aAST)", "signatureAfterChange": "     public static Scope getSurroundingScope(DetailAST aAST)", "diff": ["-                final Scope modScope = ScopeUtils.getScopeFromMods(mods);", "+                final Scope modScope = getScopeFromMods(mods);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "232516ec2f1a9b597d273809cca24503", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocNodeImpl.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public DetailNode[] getChildren()", "signatureAfterChange": "      @Override     public DetailNode[] getChildren()", "diff": ["-        return mChildren;", "+        return children;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23262cda4fa824999e03116a585ab45b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtils.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static boolean inEnumBlock(DetailAST aAST)", "signatureAfterChange": "     public static boolean isInEnumBlock(DetailAST aAST)", "diff": ["-    public static boolean inEnumBlock(DetailAST aAST) {", "+    public static boolean isInEnumBlock(DetailAST aAST) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "232fe61d25ff8058b2b6a6d800736426", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void addFormatter(Formatter aFormatter)", "signatureAfterChange": "     public void addFormatter(Formatter formatter)", "diff": ["-    public void addFormatter(Formatter aFormatter)", "+    public void addFormatter(Formatter formatter)", "-        mFormatters.add(aFormatter);", "+        formatters.add(formatter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2351ba20d30b102dbf191abe11c32527", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java", "commitBeforeChange": "4f16cb85a987f5d53b7055f4c96c15c76937c9ce", "commitAfterChange": "3d4290baf0a9dabd9f5e7f5db304e7ce7b491dcb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static DetailAST getFirstAst(DetailAST ast)", "signatureAfterChange": "     private static DetailAST getFirstAst(DetailAST ast)", "diff": ["-        while (astNode != null && astNode.getType() == TokenTypes.DOT) {", "+        while (astNode.getType() == TokenTypes.DOT) {", "-", "-        if (astNode == null) {", "-            astNode = ast;", "-        }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "235868ca5310ac2a0b5deec2e18e4b30", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private DetailAST getFirstNodeInsideForWhileDoWhileBlocks(             DetailAST aBlock, DetailAST aVariable)", "signatureAfterChange": "     private DetailAST getFirstNodeInsideForWhileDoWhileBlocks(             DetailAST block, DetailAST variable)", "diff": ["-            DetailAST aBlock, DetailAST aVariable)", "+            DetailAST block, DetailAST variable)", "-        if (!isVariableInOperatorExpr(aBlock, aVariable)) {", "+        if (!isVariableInOperatorExpr(block, variable)) {", "-            if (aBlock.getType() == TokenTypes.LITERAL_DO) {", "-                currentNode = aBlock.getFirstChild();", "+            if (block.getType() == TokenTypes.LITERAL_DO) {", "+                currentNode = block.getFirstChild();", "-                currentNode = aBlock.findFirstToken(TokenTypes.RPAREN);", "+                currentNode = block.findFirstToken(TokenTypes.RPAREN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2369533bf639782443909ffe8e276c6d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SingleLineJavadocCheck.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean hasJavadocTags(DetailNode javadocRoot)", "signatureAfterChange": "     private boolean hasJavadocTags(DetailNode javadocRoot)", "diff": ["-        final DetailNode javdocTagSection =", "+        final DetailNode javadocTagSection =", "-        return javdocTagSection != null;", "+        return javadocTagSection != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "237988b799666c7ac165ade85629f429", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheck.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected boolean hasText(final DetailAST aSlistAST)", "signatureAfterChange": "     protected boolean hasText(final DetailAST slistAST)", "diff": ["-    protected boolean hasText(final DetailAST aSlistAST)", "+    protected boolean hasText(final DetailAST slistAST)", "-        final DetailAST rightCurly = aSlistAST.findFirstToken(TokenTypes.RCURLY);", "+        final DetailAST rightCurly = slistAST.findFirstToken(TokenTypes.RCURLY);", "-                ? rightCurly : aSlistAST.getParent().findFirstToken(TokenTypes.RCURLY);", "+                ? rightCurly : slistAST.getParent().findFirstToken(TokenTypes.RCURLY);", "-            final int slistLineNo = aSlistAST.getLineNo();", "-            final int slistColNo = aSlistAST.getColumnNo();", "+            final int slistLineNo = slistAST.getLineNo();", "+            final int slistColNo = slistAST.getColumnNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23ad01f886846184d1c535d4bc39b1c6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void processEnd(DetailAST ast)", "signatureAfterChange": "     private void processEnd(DetailAST ast)", "diff": ["-            log(ast.getLineNo(), before, WS_PRECEDED, \">\");", "+            log(ast.getLineNo(), before, WS_PRECEDED, CLOSE_ANGLE_BRACKET);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23c66095b83249ef7456b92b840bb3bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private int findTextStart(String aLine)", "signatureAfterChange": "     private int findTextStart(String line)", "diff": ["-    private int findTextStart(String aLine)", "+    private int findTextStart(String line)", "-        for (int i = 0; i < aLine.length(); i++) {", "-            if (!Character.isWhitespace(aLine.charAt(i))) {", "-                if (aLine.regionMatches(i, \"/**\", 0, \"/**\".length())) {", "+        for (int i = 0; i < line.length(); i++) {", "+            if (!Character.isWhitespace(line.charAt(i))) {", "+                if (line.regionMatches(i, \"/**\", 0, \"/**\".length())) {", "-                else if (aLine.regionMatches(i, \"*/\", 0, 2)) {", "+                else if (line.regionMatches(i, \"*/\", 0, 2)) {", "-                else if (aLine.charAt(i) != '*') {", "+                else if (line.charAt(i) != '*') {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23d438697f18cd7452a8a4a0821ae0cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/InnerAssignmentCheck.java", "commitBeforeChange": "fc24f5f8b689ce613cdd0bb2c00e8e50cddc7da5", "commitAfterChange": "14e0b00df5c0e48e03490c9a4ec82a7adaf8d227", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        final boolean assigment = isAssigment(parent1);", "+        final boolean assigment = isAssignment(parent1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23d9133394eb5af8f9478bf3cb0c8692", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AllChecksTest.java", "commitBeforeChange": "bf9325be913ce46a1427232c455f4830b574ba44", "commitAfterChange": "745e21f1e4d202dd8dba577585f35f7d3f10d839", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private static Set<String> getCheckStyleChecksReferencedInConfig(String configFilePath)         throws ParserConfigurationException, IOException, SAXException", "signatureAfterChange": "     private static Set<String> getCheckStyleChecksReferencedInConfig(String configFilePath)         throws ParserConfigurationException, IOException, SAXException", "diff": ["-        final Set<String> checksReferencedInCheckstyleChecksXML = new HashSet<>();", "+        final Set<String> checksReferencedInCheckstyleChecksXml = new HashSet<>();", "-                    checksReferencedInCheckstyleChecksXML.add(checkName);", "+                    checksReferencedInCheckstyleChecksXml.add(checkName);", "-        return checksReferencedInCheckstyleChecksXML;", "+        return checksReferencedInCheckstyleChecksXml;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "240036dcf2cfe17211759d4589c8027a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule333orderingandsoacing/CustomImportOrderTest.java", "commitBeforeChange": "6fbe3f344a5507d1368d1564647ffacb12463d17", "commitAfterChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void customImportTest_1() throws Exception", "signatureAfterChange": "      @Test     public void customImportTest1() throws Exception", "diff": ["-    public void customImportTest_1() throws Exception {", "+    public void customImportTest1() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2439c27345af3fd72cb18697123e8ee8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static boolean isSingleLineIf(DetailAST aLiteralIf)", "signatureAfterChange": "     private static boolean isSingleLineIf(DetailAST literalIf)", "diff": ["-    private static boolean isSingleLineIf(DetailAST aLiteralIf)", "+    private static boolean isSingleLineIf(DetailAST literalIf)", "-        final DetailAST ifBlock = aLiteralIf.getLastChild();", "+        final DetailAST ifBlock = literalIf.getLastChild();", "-            && aLiteralIf.getLineNo() == lastElementInIfBlock.getLineNo())", "+            && literalIf.getLineNo() == lastElementInIfBlock.getLineNo())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2441c51a90757013e7b19221d0893372", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PackageNamesLoaderTest.java", "commitBeforeChange": "5dffb5a301b2605c730d1de3f312ba4a7f95355e", "commitAfterChange": "4d8d047f465f9eb101390da63ee62a735fbedba5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testPackagesWithSaxException() throws Exception", "signatureAfterChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testPackagesWithSaxException() throws Exception", "diff": ["-        Enumeration<URL> enumer = (Enumeration<URL>) mock(Enumeration.class);", "-        when(enumer.hasMoreElements()).thenReturn(true);", "-        when(enumer.nextElement()).thenReturn(url);", "+        Enumeration<URL> enumeration = (Enumeration<URL>) mock(Enumeration.class);", "+        when(enumeration.hasMoreElements()).thenReturn(true);", "+        when(enumeration.nextElement()).thenReturn(url);", "-        when(classLoader.getResources(\"checkstyle_packages.xml\")).thenReturn(enumer);", "+        when(classLoader.getResources(\"checkstyle_packages.xml\")).thenReturn(enumeration);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2451e3b0abf75d087f683a0ca07599ef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "9241c0a692ed65fab3b3fdb3c4ff1c118794337c", "commitAfterChange": "4ee4d60e07a763be669173c3f45ed9b29eedca7c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            && !hasFallTruComment(ast, nextGroup)) {", "+            && !hasFallThroughComment(ast, nextGroup)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "246bd812b32ad29c645e974e884f17d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/IllegalImportCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean isIllegalImport(String aImportText)", "signatureAfterChange": "     private boolean isIllegalImport(String importText)", "diff": ["-    private boolean isIllegalImport(String aImportText)", "+    private boolean isIllegalImport(String importText)", "-        for (String element : mIllegalPkgs) {", "-            if (aImportText.startsWith(element + \".\")) {", "+        for (String element : illegalPkgs) {", "+            if (importText.startsWith(element + \".\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "248033527e38a73d3115f06584bda0f4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean isIgnoreSituation(DetailAST aAst)", "signatureAfterChange": "     private boolean isIgnoreSituation(DetailAST ast)", "diff": ["-    private boolean isIgnoreSituation(DetailAST aAst)", "+    private boolean isIgnoreSituation(DetailAST ast)", "-        final DetailAST modifiers = aAst.getFirstChild();", "+        final DetailAST modifiers = ast.getFirstChild();", "-        if (aAst.getType() == TokenTypes.VARIABLE_DEF) {", "-            if ((mIgnoreFinal || mIgnoreStatic)", "-                    && isInterfaceDeclaration(aAst))", "+        if (ast.getType() == TokenTypes.VARIABLE_DEF) {", "+            if ((ignoreFinal || ignoreStatic)", "+                    && isInterfaceDeclaration(ast))", "-                result = (mIgnoreFinal", "+                result = (ignoreFinal", "-                    || (mIgnoreStatic", "+                    || (ignoreStatic", "-        else if (aAst.getType() == TokenTypes.METHOD_DEF) {", "-            result = mIgnoreOverriddenMethods", "+        else if (ast.getType() == TokenTypes.METHOD_DEF) {", "+            result = ignoreOverriddenMethods"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24cb133fe10ead6043953a20f44abe76", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setExcludedClasses(String aExcludedClasses)         throws ConversionException", "signatureAfterChange": "     public void setExcludedClasses(String aExcludedClasses)         throws ConversionException", "diff": ["-            mExcludedClassesRE = Utils.getRE(mExcludedClasses);", "+            mExcludedClassesPattern = Utils.getPattern(mExcludedClasses);", "-        catch (RESyntaxException e) {", "+        catch (PatternSyntaxException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24ce7cfd34c1072e43468b766b532a36", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/comments/CommentsTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testCompareExpectedTreeWithInput_1() throws Exception", "signatureAfterChange": "      @Test     public void testCompareExpectedTreeWithInput1() throws Exception", "diff": ["-    public void testCompareExpectedTreeWithInput_1() throws Exception {", "+    public void testCompareExpectedTreeWithInput1() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24d756a6b423faffc0139668bcfe8a00", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public FilterSet getFilterChain()", "signatureAfterChange": "     public FilterSet getFilterChain()", "diff": ["-        return mFilterChain;", "+        return filterChain;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25168212c0c685c5daef77088ac20f16", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static String getDefaultAlias(String aSourceName)", "signatureAfterChange": "     public static String getDefaultAlias(String sourceName)", "diff": ["-    public static String getDefaultAlias(String aSourceName)", "+    public static String getDefaultAlias(String sourceName)", "-        final int startIndex = aSourceName.lastIndexOf('.') + 1;", "-        int endIndex = aSourceName.length();", "-        if (aSourceName.endsWith(CHECK_SUFFIX)) {", "+        final int startIndex = sourceName.lastIndexOf('.') + 1;", "+        int endIndex = sourceName.length();", "+        if (sourceName.endsWith(CHECK_SUFFIX)) {", "-        return aSourceName.substring(startIndex, endIndex).toLowerCase();", "+        return sourceName.substring(startIndex, endIndex).toLowerCase();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "253c4dfb61e035c9d3fa4416620de308", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "546f336e25b26d072f96e2cda139b885858ed5b0", "commitAfterChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      @Override     public void destroy()", "signatureAfterChange": "      @Override     public void destroy()", "diff": ["-        for (Check c : ordinaryChecks) {", "-            c.destroy();", "+        for (Check check : ordinaryChecks) {", "+            check.destroy();", "-        for (Check c : commentChecks) {", "-            c.destroy();", "+        for (Check check : commentChecks) {", "+            check.destroy();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "255241bdf89baf630a0dd5acd01fec8a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineSet.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int firstLineCol()", "signatureAfterChange": "     public int firstLineCol()", "diff": ["-        final Object firstLineKey = mLines.firstKey();", "-        return (mLines.get(firstLineKey)).intValue();", "+        final Object firstLineKey = lines.firstKey();", "+        return (lines.get(firstLineKey)).intValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25619424799a4ab7f1e7fc5483863f84", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void removeVariable(DetailAST aAST)", "signatureAfterChange": "     private void removeVariable(DetailAST ast)", "diff": ["-    private void removeVariable(DetailAST aAST)", "+    private void removeVariable(DetailAST ast)", "-        for (int i = mScopeStack.size() - 1; i >= 0; i--) {", "-            final Map<String, DetailAST> state = mScopeStack.peek(i);", "-            final Object obj = state.remove(aAST.getText());", "+        for (int i = scopeStack.size() - 1; i >= 0; i--) {", "+            final Map<String, DetailAST> state = scopeStack.peek(i);", "+            final Object obj = state.remove(ast.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25753940d773d31aef3357433c561127", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected final boolean startsLine(DetailAST aAst)", "signatureAfterChange": "     protected final boolean startsLine(DetailAST ast)", "diff": ["-    protected final boolean startsLine(DetailAST aAst)", "+    protected final boolean startsLine(DetailAST ast)", "-        return getLineStart(aAst) == expandedTabsColumnNo(aAst);", "+        return getLineStart(ast) == expandedTabsColumnNo(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "257e83a5c8834f311b7c6432c6d1e36d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/RegexpCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setErrorLimit(int aErrorLimit)", "signatureAfterChange": "     public void setErrorLimit(int errorLimit)", "diff": ["-    public void setErrorLimit(int aErrorLimit)", "+    public void setErrorLimit(int errorLimit)", "-        mErrorLimit = aErrorLimit;", "+        this.errorLimit = errorLimit;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "258adab61dcb4ab66bf33ad1bc8ad771", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setIgnorePrimitiveTypes(boolean aIgnorePrimitiveTypes)", "signatureAfterChange": "     public void setIgnorePrimitiveTypes(boolean ignorePrimitiveTypes)", "diff": ["-    public void setIgnorePrimitiveTypes(boolean aIgnorePrimitiveTypes)", "+    public void setIgnorePrimitiveTypes(boolean ignorePrimitiveTypes)", "-        mIgnorePrimitiveTypes = aIgnorePrimitiveTypes;", "+        this.ignorePrimitiveTypes = ignorePrimitiveTypes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25a45347867bb7e902dd1f66ade3cf3e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     private void register(int aType, Class<?> aHandlerClass)", "signatureAfterChange": "     private void register(int type, Class<?> handlerClass)", "diff": ["-    private void register(int aType, Class<?> aHandlerClass)", "+    private void register(int type, Class<?> handlerClass)", "-            final Constructor<?> ctor = aHandlerClass", "+            final Constructor<?> ctor = handlerClass", "-            mTypeHandlers.put(aType, ctor);", "+            typeHandlers.put(type, ctor);", "-                                       + aHandlerClass);", "+                                       + handlerClass);", "-            LOG.debug(\"couldn't find ctor for \" + aHandlerClass, e);", "+            LOG.debug(\"couldn't find ctor for \" + handlerClass, e);", "-                                       + aHandlerClass);", "+                                       + handlerClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25aa75134cf15797733421a1718e49de", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void setMaximumNumber(int aMaximumNumber)", "signatureAfterChange": "     public void setMaximumNumber(int maximumNumber)", "diff": ["-    public void setMaximumNumber(int aMaximumNumber)", "+    public void setMaximumNumber(int maximumNumber)", "-        mMaximumNumber = aMaximumNumber;", "+        this.maximumNumber = maximumNumber;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25aa7c541d5e0d5ee68bc6918b24faf0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "      @Test     public void testLoadPropertiesIoException() throws Exception", "signatureAfterChange": "      @Test     public void testLoadPropertiesIoException() throws Exception", "diff": ["-        catch (InvocationTargetException e) {", "-            assertTrue(e.getCause() instanceof CheckstyleException);", "+        catch (InvocationTargetException ex) {", "+            assertTrue(ex.getCause() instanceof CheckstyleException);", "-            assertTrue(e.getCause().getMessage()", "+            assertTrue(ex.getCause().getMessage()", "-            assertTrue(e.getCause().getMessage().endsWith(\":invalid'.\"));", "+            assertTrue(ex.getCause().getMessage().endsWith(\":invalid'.\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25ab1bfcfd368e8ca7369f387e172935", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public MultipleStringLiteralsCheck()", "signatureAfterChange": "     public MultipleStringLiteralsCheck()", "diff": ["-        mIgnoreOccurrenceContext.set(TokenTypes.ANNOTATION);", "+        ignoreOccurrenceContext.set(TokenTypes.ANNOTATION);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25d4989d6af6ddfbfb099bba775125d1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-        if (count > fileMax) {", "+        if (count > fileMaximum) {", "-                    count, fileMax);", "+                    count, fileMaximum);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25e64b2d1b4a160b1bda292b37f6cd7e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractSuperCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "         public DetailAST getMethod()", "signatureAfterChange": "         public DetailAST getMethod()", "diff": ["-            return mMethod;", "+            return method;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25f927c778fc26589052ef274c8c818b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheck.java", "commitBeforeChange": "b0240a0200663fbf1d3146d1aefe12207fdde4af", "commitAfterChange": "9aa72722de7b5a4ffb5d50945c7bce8b58f25e8e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public synchronized void process(File[] aFiles)", "signatureAfterChange": "     public synchronized void process(File[] aFiles)", "diff": ["-        mSortedRelevantChecksums = new long[mFiles.length][];", "+        mChecksumInfo = new ChecksumInfo[mFiles.length];", "-        mSortedRelevantChecksums = null;", "+        mChecksumInfo = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "261a9b76da8b2812e533d8c28a2b63e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public final IndentLevel getLevel()", "signatureAfterChange": "     public final IndentLevel getIndent()", "diff": ["-    public final IndentLevel getLevel() {", "-        if (level == null) {", "-            level = getLevelImpl();", "+    public final IndentLevel getIndent() {", "+        if (indent == null) {", "+            indent = getIndentImpl();", "-        return level;", "+        return indent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26305763fd98f0062f9a7698462a2911", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static Set<String> getPackageNames(ClassLoader classLoader)             throws CheckstyleException", "signatureAfterChange": "     public static Set<String> getPackageNames(ClassLoader classLoader)             throws CheckstyleException", "diff": ["-                catch (IOException e) {", "-                    throw new CheckstyleException(\"unable to open \" + packageFile, e);", "+                catch (IOException ex) {", "+                    throw new CheckstyleException(\"unable to open \" + packageFile, ex);", "-        catch (IOException e) {", "-            throw new CheckstyleException(\"unable to get package file resources\", e);", "+        catch (IOException ex) {", "+            throw new CheckstyleException(\"unable to get package file resources\", ex);", "-        catch (ParserConfigurationException | SAXException e) {", "-            throw new CheckstyleException(\"unable to open one of package files\", e);", "+        catch (ParserConfigurationException | SAXException ex) {", "+            throw new CheckstyleException(\"unable to open one of package files\", ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2686145b8d8e41b15950dcabf5912441", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected List<File> scanFileSets()", "signatureAfterChange": "     protected List<File> scanFileSets()", "diff": ["-        if (mFileName != null) {", "+        if (fileName != null) {", "-            list.add(new File(mFileName));", "+            list.add(new File(fileName));", "-        for (int i = 0; i < mFileSets.size(); i++) {", "-            final FileSet fs = mFileSets.get(i);", "+        for (int i = 0; i < fileSets.size(); i++) {", "+            final FileSet fs = fileSets.get(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26bbe5362a4af41bb3af6f23e727883c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/AbstractTreeTableModel.java", "commitBeforeChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "commitAfterChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public Object getRoot()", "signatureAfterChange": "      @Override     public Object getRoot()", "diff": ["-        return mRoot;", "+        return root;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26c5cd8d5d269eec08204d074d345931", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "0fd69594a4c3e82f92f93f0371791da66938f8c3", "commitAfterChange": "f0f7f3e762ffef78dcf82bf1611c10da48b96cb9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main(String[] aArgs)", "signatureAfterChange": "     public static void main(String[] aArgs)", "diff": ["-            c = new Checker(System.getProperties(), System.err);", "+            c = new Checker(System.getProperties(), System.out);", "-            System.err.println(\"Unable to create an regexp object: \" +", "+            System.out.println(\"Unable to create an regexp object: \" +", "-            rese.printStackTrace(System.err);", "+            rese.printStackTrace(System.out);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26e9e15d8cb107519d1937e40c02efb0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Utils.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static Pattern getPattern(String aPattern, int aCompileFlags)         throws PatternSyntaxException", "signatureAfterChange": "     public static Pattern getPattern(String pattern, int compileFlags)         throws PatternSyntaxException", "diff": ["-    public static Pattern getPattern(String aPattern, int aCompileFlags)", "+    public static Pattern getPattern(String pattern, int compileFlags)", "-        final String key = aPattern + \":flags-\" + aCompileFlags;", "+        final String key = pattern + \":flags-\" + compileFlags;", "-            retVal = Pattern.compile(aPattern, aCompileFlags);", "+            retVal = Pattern.compile(pattern, compileFlags);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26ed025d25c7a72097c8b81f56c06394", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "10330437ddd4be125cb4109702d0d0b96ffe3303", "commitAfterChange": "d963b8bfc21b4f782e598c70be31d2123c4dbef7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private static Map arrangePropertyFiles(Set aPropFiles)", "signatureAfterChange": "     private static Map arrangePropertyFiles(Set aPropFiles)", "diff": ["-            String baseName = extractBaseName(file);", "+            String identifier = extractPropertyIdentifier(file);", "-            Set fileSet = (Set) propFileMap.get(baseName);", "+            Set fileSet = (Set) propFileMap.get(identifier);", "-                propFileMap.put(baseName, fileSet);", "+                propFileMap.put(identifier, fileSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "272415fc52e0766cfca2d079adee6110", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "443e534a3c98c0b30f24647da724fe918f17a006", "commitAfterChange": "66d73fe6189267fee3423e2e8d7fc2d68599a43f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public List<Integer> getLines2position()", "signatureAfterChange": "      public List<Integer> getLinesToPosition()", "diff": ["-    public List<Integer> getLines2position() {", "-        return Collections.unmodifiableList(lines2position);", "+    public List<Integer> getLinesToPosition() {", "+        return Collections.unmodifiableList(linesToPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "272f501aceb4b9e8bf3ecb3f0ddca385", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final DetailAST parent = aAST.getParent();", "+        final DetailAST parent = ast.getParent();", "-            if (mAllowInSwitchCase", "+            if (allowInSwitchCase", "-            log(aAST.getLineNo(), aAST.getColumnNo(), MSG_KEY_BLOCK_NESTED);", "+            log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY_BLOCK_NESTED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2734295249d58f79b5b29df173286764", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "c2ce485b481ba4bd26eb3ba2e3cc6c1850539e0c", "commitAfterChange": "e615817b5bff08ada2fce5f43e9e1bcae4e77c38", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testTypeNamesForThreePermittedCapitalLettersWithOverridenMethod() throws Exception", "signatureAfterChange": "      @Test     public void testTypeNamesForThreePermitedCapitalLettersWithOverriddenMethod() throws Exception", "diff": ["-    public void testTypeNamesForThreePermittedCapitalLettersWithOverridenMethod() throws Exception {", "+    public void testTypeNamesForThreePermitedCapitalLettersWithOverriddenMethod() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2766f58800e7703c42281c9d01b052db", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "commitAfterChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     private void addRuleastoList(String ruleStr)", "signatureAfterChange": "     private void addRulesToList(String ruleStr)", "diff": ["-    private void addRuleastoList(String ruleStr) {", "+    private void addRulesToList(String ruleStr) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27891816400c24020899a1ab58fe6102", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/MethodNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setAllowClassName(boolean aAllowClassName)", "signatureAfterChange": "     public void setAllowClassName(boolean allowClassName)", "diff": ["-    public void setAllowClassName(boolean aAllowClassName)", "+    public void setAllowClassName(boolean allowClassName)", "-        mAllowClassName = aAllowClassName;", "+        this.allowClassName = allowClassName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "278ef5f4e7981b242ece22607bfd1b74", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "af095344e1501d55b2dfbbd18deaf305e814601c", "commitAfterChange": "e3366844c45fb800a290c0d30ed956f1d249de29", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void setMessageFormat(String format)         throws ConversionException", "signatureAfterChange": "     public void setMessageFormat(String format)", "diff": ["-    public void setMessageFormat(String format)", "-        throws ConversionException {", "-        Utils.createPattern(format);", "+    public void setMessageFormat(String format) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27a6c039a37cbc7d91f8fd942a07fa4f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/transmogrify/ClassDef.java", "commitBeforeChange": "cf27285c85613a0963903ddf6b683aa586f90aa5", "commitAfterChange": "adc04337ea44d4e6b0ff8ec5efedd11ecd263646", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public IMethod getMethodDefinition(String name, ISignature signature)", "signatureAfterChange": "      public IMethod getMethodDefinition(String name, ISignature signature)", "diff": ["-            IClass[] interfaces = getInterfaces();", "+            IClass[] myInterfaces = getInterfaces();", "-                index < interfaces.length && result == null;", "+                index < myInterfaces.length && result == null;", "-                result = interfaces[index].getMethodDefinition(name, signature);", "+                result = myInterfaces[index].getMethodDefinition(name, signature);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27a896957f507465b6745bb060208ed8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Override     public void execute()", "signatureAfterChange": "      @Override     public void execute()", "diff": ["-            log(\"Total execution took \" + (endTime - startTime) + \" ms.\",", "+            log(\"Total execution took \" + (endTime - startTime) + TIME_SUFFIX,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27a8e4263bee673c3dbe138077fa9979", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "8abfa48f2eb5edaf3f5a2cc2350e4e3c232f4152", "commitAfterChange": "d1f4e8d40014f53f40f045c6f8bea7ead44761c1", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "         private boolean embeddedIn(String classOrEnumName)", "signatureAfterChange": "         private boolean embeddedIn(String classOrEnumName)", "diff": ["-                if (java.util.Objects.equals(currentFrame.frameName, classOrEnumName)) {", "+                if (Objects.equals(currentFrame.frameName, classOrEnumName)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27e3eb5dbd3aa91e2c918c112b1b4d27", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "896af516b0028ff2a26cc1888dfaba620d3fe9e0", "commitAfterChange": "55c92042eb6986e905529de841d3d1c9a7b2b6dd", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            && !isAnnonimousInnerClassEnd(currentType, nextChar)) {", "+            && !isAnonymousInnerClassEnd(currentType, nextChar)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28200a0917c681ed0f8214a17e66026d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void flushAndCloseOutStream(OutputStream aStream)", "signatureAfterChange": "     private void flushAndCloseOutStream(OutputStream stream)", "diff": ["-    private void flushAndCloseOutStream(OutputStream aStream)", "+    private void flushAndCloseOutStream(OutputStream stream)", "-        if (aStream != null) {", "+        if (stream != null) {", "-                aStream.flush();", "+                stream.flush();", "-                Utils.closeQuietly(aStream);", "+                Utils.closeQuietly(stream);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28c13bc79130b729504a4b5882361fb4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocNodeImpl.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void setIndex(int aIndex)", "signatureAfterChange": "      public void setIndex(int index)", "diff": ["-    public void setIndex(int aIndex)", "+    public void setIndex(int index)", "-        this.mIndex = aIndex;", "+        this.index = index;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28c27e4ddf31f4d7d7870b319c1588d3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void setSumTokenCounts(boolean aSum)", "signatureAfterChange": "     public void setSumTokenCounts(boolean sum)", "diff": ["-    public void setSumTokenCounts(boolean aSum)", "+    public void setSumTokenCounts(boolean sum)", "-        mSumTokenCounts = aSum;", "+        sumTokenCounts = sum;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28dbc31ef3f01e87d7188e03f47d8f5d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private boolean matchesImportGroup(boolean aStatic, String aImportPath, String aCurrentGroup)", "signatureAfterChange": "     private boolean matchesImportGroup(boolean isStatic, String importPath, String currentGroup)", "diff": ["-    private boolean matchesImportGroup(boolean aStatic, String aImportPath, String aCurrentGroup)", "+    private boolean matchesImportGroup(boolean isStatic, String importPath, String currentGroup)", "-        return matchesStaticImportGroup(aStatic, aCurrentGroup)", "-                || matchesSamePackageImportGroup(aStatic, aImportPath, aCurrentGroup)", "-                || matchesSpecialImportsGroup(aStatic, aImportPath, aCurrentGroup)", "-                || matchesStandartImportGroup(aStatic, aImportPath, aCurrentGroup)", "-                || matchesThirdPartyImportGroup(aStatic, aImportPath, aCurrentGroup);", "+        return matchesStaticImportGroup(isStatic, currentGroup)", "+                || matchesSamePackageImportGroup(isStatic, importPath, currentGroup)", "+                || matchesSpecialImportsGroup(isStatic, importPath, currentGroup)", "+                || matchesStandartImportGroup(isStatic, importPath, currentGroup)", "+                || matcheasthirdPartyImportGroup(isStatic, importPath, currentGroup);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "291561ef6e75964e2b62b5338af42e66", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "commitBeforeChange": "5f68bb50fd191fec409f5edb90755a18fce3e0ac", "commitAfterChange": "b436b3cd9860529718b95c36dafe565fe68f6293", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setAllowSingleLineIf(boolean allowSingleLineIf)", "signatureAfterChange": "     public void setAllowSingleLineStatement(boolean allowSingleLineStatement)", "diff": ["-    public void setAllowSingleLineIf(boolean allowSingleLineIf)", "+    public void setAllowSingleLineStatement(boolean allowSingleLineStatement)", "-        this.allowSingleLineIf = allowSingleLineIf;", "+        this.allowSingleLineStatement = allowSingleLineStatement;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "291fc4602f6a6a9adc64b735688d0222", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean isObjectParam(AST aFirstChild)", "signatureAfterChange": "     private boolean isObjectParam(AST firstChild)", "diff": ["-    private boolean isObjectParam(AST aFirstChild)", "+    private boolean isObjectParam(AST firstChild)", "-        final AST modifiers = aFirstChild.getFirstChild();", "+        final AST modifiers = firstChild.getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2924c18484da58b5e808ddac735e68d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "         public void addInstanceField(String aField)", "signatureAfterChange": "         public void addInstanceField(String field)", "diff": ["-        public void addInstanceField(String aField)", "+        public void addInstanceField(String field)", "-            mInstanceFields.add(aField);", "+            instanceFields.add(field);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "294569e97e5e19b021bc72623a8a1ef2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/InputIllegalTypeSameFileName.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          public static GregorianCalendar getInstance()", "signatureAfterChange": "          public static InputGregorianCalendar getInstance()", "diff": ["-        public static GregorianCalendar getInstance() //WARNING", "+        public static InputGregorianCalendar getInstance() //WARNING"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "295803802c7285080aaf99489f15c02d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheck.java", "commitBeforeChange": "84115fe9bfa4e0310d5832ad9fad5e54fef545b0", "commitAfterChange": "afa3be755c11f7c361b9bdb355315316cb5b84da", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public final void setAllowSamelineParametrizedAnnotation(boolean allow)", "signatureAfterChange": "     public final void setAllowSamelineParameterizedAnnotation(boolean allow)", "diff": ["-    public final void setAllowSamelineParametrizedAnnotation(boolean allow)", "+    public final void setAllowSamelineParameterizedAnnotation(boolean allow)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2978095ffafd54d89fe589f3cc1a1493", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "91aa6578321ceb08f4b0d715f994b7a9f4abe9d7", "commitAfterChange": "3430721be200cbe2acf55c3b3d52a528638123b3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "         public boolean accept(File pathname)", "signatureAfterChange": "         public boolean accept(File aPathname)", "diff": ["-        public boolean accept(File pathname)", "+        public boolean accept(File aPathname)", "-            return pathname.getPath().endsWith(\".properties\");", "+            return aPathname.getPath().endsWith(\".properties\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "298019e072db246a30b00782501befbb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setMaxWarnings(int aMaxWarnings)", "signatureAfterChange": "     public void setMaxWarnings(int maxWarnings)", "diff": ["-    public void setMaxWarnings(int aMaxWarnings)", "+    public void setMaxWarnings(int maxWarnings)", "-        mMaxWarnings = aMaxWarnings;", "+        this.maxWarnings = maxWarnings;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2991b34ac5d8947be7948f1ba508aeb1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/AbstractParenPadCheck.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected void processRight(DetailAST ast)", "signatureAfterChange": "     protected void processRight(DetailAST ast)", "diff": ["-                log(ast.getLineNo(), before, \"ws.preceded\", \")\");", "+                log(ast.getLineNo(), before, WS_PRECEDED, \")\");", "-                    \"ws.notPreceded\", \")\");", "+                    WS_NOT_PRECEDED, \")\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29bf3b60ed2b026c27b0aa88ba6f98d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "546f336e25b26d072f96e2cda139b885858ed5b0", "commitAfterChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public int getChildCount(int type)", "signatureAfterChange": "     public int getChildCount(int type)", "diff": ["-        for (AST i = getFirstChild(); i != null; i = i.getNextSibling()) {", "-            if (i.getType() == type) {", "+        for (AST ast = getFirstChild(); ast != null; ast = ast.getNextSibling()) {", "+            if (ast.getType() == type) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29eaa84b16f3ffb3ee871dfc5f4e869f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/TokenTypes.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static boolean isCommentType(int aType)", "signatureAfterChange": "     public static boolean isCommentType(int type)", "diff": ["-    public static boolean isCommentType(int aType)", "+    public static boolean isCommentType(int type)", "-        return aType == TokenTypes.SINGLE_LINE_COMMENT", "-                || aType == TokenTypes.BLOCK_COMMENT_BEGIN", "-                || aType == TokenTypes.BLOCK_COMMENT_END", "-                || aType == TokenTypes.COMMENT_CONTENT;", "+        return type == TokenTypes.SINGLE_LINE_COMMENT", "+                || type == TokenTypes.BLOCK_COMMENT_BEGIN", "+                || type == TokenTypes.BLOCK_COMMENT_END", "+                || type == TokenTypes.COMMENT_CONTENT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29f9ce9a9b8c765f28d898ddb091f3ae", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setAllowedDuplicates(int aAllowedDuplicates)", "signatureAfterChange": "     public void setAllowedDuplicates(int allowedDuplicates)", "diff": ["-    public void setAllowedDuplicates(int aAllowedDuplicates)", "+    public void setAllowedDuplicates(int allowedDuplicates)", "-        mAllowedDuplicates = aAllowedDuplicates;", "+        this.allowedDuplicates = allowedDuplicates;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a12ed16f14184478dcdeca73cf740b7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java", "commitBeforeChange": "b8c558e473c0a9a75c41312e31df34b8572a271b", "commitAfterChange": "58ce4c40970fc29d00e5740bc6098eb475668e86", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            if (mCheckUnusedThrows) {", "+            if (mAllowUndeclaredRTE) {", "-            if (mCheckUnusedThrows) {", "+            if (mAllowUndeclaredRTE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a3004a270e0f8b0e24e2a3b36efec3a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                    \"ws.notPreceded\", ast.getText());", "+                    WS_NOT_PRECEDED, ast.getText());", "-                    \"ws.notFollowed\", ast.getText());", "+                    WS_NOT_FOLLOWED, ast.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a816c51d787ab6d9fc85904a79e9beb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/LineLengthCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-    public void beginTree(DetailAST aRootAST)", "+    public void beginTree(DetailAST rootAST)", "-            if ((realLength > mMax)", "-                && !mIgnorePattern.matcher(line).find())", "+            if ((realLength > max)", "+                && !ignorePattern.matcher(line).find())", "-                log(i + 1, \"maxLineLen\", mMax, realLength);", "+                log(i + 1, \"maxLineLen\", max, realLength);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a8cdaaccec65579cf66dd93a03601f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void registerCheck(int aTokenID, Check aCheck)", "signatureAfterChange": "     private void registerCheck(int tokenID, Check check)", "diff": ["-    private void registerCheck(int aTokenID, Check aCheck)", "+    private void registerCheck(int tokenID, Check check)", "-        registerCheck(TokenTypes.getTokenName(aTokenID), aCheck);", "+        registerCheck(TokenTypes.getTokenName(tokenID), check);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a9e65b66d278d8ecaff40809c038357", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "27149f3504a2f350b74f456a9bffbae76a460060", "commitAfterChange": "5ede09997c283b4c418f0f540848e006be04fa87", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                        (null == minimumMessage) ? \"descendant.token.sum.min\"", "+                        (null == minimumMessage) ? MSG_KEY_SUM_MIN", "-                        (null == maximumMessage) ? \"descendant.token.sum.max\"", "+                        (null == maximumMessage) ? MSG_KEY_SUM_MAX", "-                            (null == minimumMessage) ? \"descendant.token.min\"", "+                            (null == minimumMessage) ? MSG_KEY_MIN", "-                            (null == maximumMessage) ? \"descendant.token.max\"", "+                            (null == maximumMessage) ? MSG_KEY_MAX"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ab1e31ad8d77e1e1fc2c406d04189ca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      protected Checker createChecker(Configuration aCheckConfig)             throws Exception", "signatureAfterChange": "      protected Checker createChecker(Configuration checkConfig)             throws Exception", "diff": ["-    protected Checker createChecker(Configuration aCheckConfig)", "+    protected Checker createChecker(Configuration checkConfig)", "-        final DefaultConfiguration dc = createCheckerConfig(aCheckConfig);", "+        final DefaultConfiguration dc = createCheckerConfig(checkConfig);", "-        c.addListener(new BriefLogger(mStream));", "+        c.addListener(new BriefLogger(stream));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ac6deee415251f29c3bd268cf721f55", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractComplexityCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected final BigInteger getCurrentValue()", "signatureAfterChange": "     protected final BigInteger getCurrentValue()", "diff": ["-        return mCurrentValue;", "+        return currentValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ae72cd9e039d527b8a131850736d536", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public AbstractViolationReporter getReporter()", "signatureAfterChange": "     public AbstractViolationReporter getReporter()", "diff": ["-        return mReporter;", "+        return reporter;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b13ae13efebb7984f20ed17616d7528", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "6f6e4db399353f769525820d9a7319287105d3e5", "commitAfterChange": "06c32930c34e2b10b5926883c29a4a20fe6ecf05", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void checkComment(DetailAST aAST, TextBlock aComment)", "signatureAfterChange": "     private void checkComment(DetailAST aAST, TextBlock aComment)", "diff": ["-            checkParamTags(tags, getParameters(aAST), !hasInheritDocTag);", "+            checkParamTags(tags, aAST, !hasInheritDocTag);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b2b7e4d381534a06d424a6911895e9a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocNodeImpl.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void setChildren(DetailNode[] aChildren)", "signatureAfterChange": "      public void setChildren(DetailNode[] children)", "diff": ["-    public void setChildren(DetailNode[] aChildren)", "+    public void setChildren(DetailNode[] children)", "-        this.mChildren = aChildren;", "+        this.children = children;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b2f525b284b6e568fd69d4ceb891585", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheckTest.java", "commitBeforeChange": "745e21f1e4d202dd8dba577585f35f7d3f10d839", "commitAfterChange": "2e243db3fbdf7b737f78ed7cef0b9bd94f351d25", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testRegexpHeaderURL() throws Exception", "signatureAfterChange": "      @Test     public void testRegexpHeaderUrl() throws Exception", "diff": ["-    public void testRegexpHeaderURL() throws Exception {", "+    public void testRegexpHeaderUrl() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b530c068bc55bb670912bb266783bc4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CheckUtils.java", "commitBeforeChange": "f0ea60f77bbc5e524320b042d7a90eefbf2bd00d", "commitAfterChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static FullIdent createFullType(DetailAST typeAST)", "signatureAfterChange": "     public static FullIdent createFullType(DetailAST typeAST)", "diff": ["-        final DetailAST arrayDeclAST =", "+        final DetailAST arrayDeclaratorAST =", "-        if (arrayDeclAST == null) {", "+        if (arrayDeclaratorAST == null) {", "-            fullType = createFullTypeNoArrays(arrayDeclAST);", "+            fullType = createFullTypeNoArrays(arrayDeclaratorAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b5b1f549aa6fd7ab651c220c36cd151", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "commitBeforeChange": "a49a54133714df69aaad1c0730f0d01b24318dbe", "commitAfterChange": "65865d1adcf6e1579b7323d56117186db1ad96eb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                log(nameAst.getLineNo(), MSG_KEY, allowedAbbreviationLength);", "+                log(nameAst.getLineNo(), MSG_KEY, typeName, allowedAbbreviationLength);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b8bf951283dc13b739c0abd5982c59b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setIgnoreStringsRegexp(String aIgnoreStringsRegexp)", "signatureAfterChange": "     public void setIgnoreStringsRegexp(String ignoreStringsRegexp)", "diff": ["-    public void setIgnoreStringsRegexp(String aIgnoreStringsRegexp)", "+    public void setIgnoreStringsRegexp(String ignoreStringsRegexp)", "-        if ((aIgnoreStringsRegexp != null)", "-            && (aIgnoreStringsRegexp.length() > 0))", "+        if ((ignoreStringsRegexp != null)", "+            && (ignoreStringsRegexp.length() > 0))", "-            mPattern = Utils.getPattern(aIgnoreStringsRegexp);", "+            pattern = Utils.getPattern(ignoreStringsRegexp);", "-            mPattern = null;", "+            pattern = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c0da9ce5d537c799b35e56b96712953", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "4b95f33697750ed910d59830fc9c649f094d88f8", "commitAfterChange": "879864502bd28685569417780ebc92308038cf2c", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "         @Override         public void syntaxError(                 Recognizer<?, ?> aRecognizer, Object aOffendingSymbol,                 int aLine, int aCharPositionInLine,                 String aMsg, RecognitionException aEx)", "signatureAfterChange": "         @Override         public void syntaxError(                 Recognizer<?, ?> recognizer, Object offendingSymbol,                 int line, int charPositionInLine,                 String msg, RecognitionException e)", "diff": ["-                Recognizer<?, ?> aRecognizer, Object aOffendingSymbol,", "-                int aLine, int aCharPositionInLine,", "-                String aMsg, RecognitionException aEx) {", "-            Assert.fail(\"[\" + aLine + \", \" + aCharPositionInLine + \"] \" + aMsg);", "+                Recognizer<?, ?> recognizer, Object offendingSymbol,", "+                int line, int charPositionInLine,", "+                String msg, RecognitionException e) {", "+            Assert.fail(\"[\" + line + \", \" + charPositionInLine + \"] \" + msg);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c1d8a3c7e7c5918f3dac1ff3656f938", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)             throws CheckstyleException", "signatureAfterChange": "     private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)             throws CheckstyleException", "diff": ["-                final PropertyDescriptor pd =", "+                final PropertyDescriptor descriptor =", "-                if (pd == null) {", "+                if (descriptor == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c21376a9f03e9de10326f620790f0f7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-    public void beginTree(DetailAST aRootAST)", "+    public void beginTree(DetailAST rootAST)", "-        final Deque<LexicalFrame> aFrameStack = Lists.newLinkedList();", "-        aFrameStack.add(new GlobalFrame());", "+        final Deque<LexicalFrame> frameStack = Lists.newLinkedList();", "+        frameStack.add(new GlobalFrame());", "-        mFrames = Maps.newHashMap();", "+        frames = Maps.newHashMap();", "-        DetailAST curNode = aRootAST;", "+        DetailAST curNode = rootAST;", "-            collectDeclarations(aFrameStack, curNode);", "+            collectDeclarations(frameStack, curNode);", "-                endCollectingDeclarations(aFrameStack, curNode);", "+                endCollectingDeclarations(frameStack, curNode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c53614dd396ead721f3c3c0e3559b45", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/annotation/InputCorrectAnnotationLocation.java", "commitBeforeChange": "04c38bad85ac94b3da997fe23b2181479ed6ac57", "commitAfterChange": "10c39148b715af5229f185ff3d54f4187c0fbe4a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "                  @MyAnnotation2         public InnerClass()", "signatureAfterChange": "                  @MyAnnotation6         public InnerClass()", "diff": ["-        @MyAnnotation2", "+        @MyAnnotation6"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c64cb12fb75e42835dece536aa9ffcd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final int tokenType = aAST.getType();", "+        final int tokenType = ast.getType();", "-            mCounters.push(new Counter());", "+            counters.push(new Counter());", "-        if (isCountable(aAST)) {", "+        if (isCountable(ast)) {", "-            for (final Counter c : mCounters) {", "+            for (final Counter c : counters) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c6f7bc34c95510ba3afd068ad4aec73", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     protected void processFiltered(File aFile, List<String> aLines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-    protected void processFiltered(File aFile, List<String> aLines)", "+    protected void processFiltered(File file, List<String> lines)", "-        for (final String line : aLines) {", "+        for (final String line : lines) {", "-                if (mEachLine) {", "+                if (eachLine) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c908940307988cdd40fa78bc16f6074", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(final DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(final DetailAST ast)", "diff": ["-    public void visitToken(final DetailAST aAST)", "+    public void visitToken(final DetailAST ast)", "-        if (!mAllowClassImports && (TokenTypes.IMPORT == aAST.getType())) {", "-            final DetailAST startingDot = aAST.getFirstChild();", "+        if (!allowClassImports && (TokenTypes.IMPORT == ast.getType())) {", "+            final DetailAST startingDot = ast.getFirstChild();", "-        else if (!mAllowStaticMemberImports", "-            && (TokenTypes.STATIC_IMPORT == aAST.getType()))", "+        else if (!allowStaticMemberImports", "+            && (TokenTypes.STATIC_IMPORT == ast.getType()))", "-            final DetailAST startingDot = aAST.getFirstChild().getNextSibling();", "+            final DetailAST startingDot = ast.getFirstChild().getNextSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c9e225bc6ee5320af11c27d8fa0b994", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public final DetailAST getLastNode()", "signatureAfterChange": "      public final DetailAST getLastNode()", "diff": ["-        return mLastNode;", "+        return lastNode;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ca363b065eaa3b250a660b635b72c38", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "1c9034402faf6d63d21944a6ef2553f804ee93c9", "commitAfterChange": "70ac1c44d943f39dcb9221ea487f227ac3eb08d7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private static void verifyConfigNode(         DefaultConfiguration config, String name, int childrenLength,         Properties atts) throws Exception", "signatureAfterChange": "      private static void verifyConfigNode(         DefaultConfiguration config, String name, int childrenLength,         Properties atts) throws Exception", "diff": ["-                atts.get(attName),", "+                atts.getProperty(attName),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ca76916fd334bfe110dc8b20d29f199", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/BaseCheckTestCase.java", "commitBeforeChange": "1b7dd85b3f85c2a9de1bb93e8499ec8735bf8646", "commitAfterChange": "5b90aaa412472262efad7388a2a97693f83d8358", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      protected DefaultConfiguration createCheckerConfig(Configuration aCheckConfig)", "signatureAfterChange": "      protected DefaultConfiguration createCheckerConfig(Configuration aConfig)", "diff": ["-    protected DefaultConfiguration createCheckerConfig(Configuration aCheckConfig)", "+    protected DefaultConfiguration createCheckerConfig(Configuration aConfig)", "-        final DefaultConfiguration dc = new DefaultConfiguration(\"root\");", "+        final DefaultConfiguration dc =", "+            new DefaultConfiguration(\"configuration\");", "-        twConf.addChild(aCheckConfig);", "+        twConf.addChild(aConfig);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ca7992bbfda9316d6288adfc05cdefe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Context.java", "commitBeforeChange": "17c08660fa40c844057c33e2de04c67af41393b0", "commitAfterChange": "0989b5c3954e46b156bf5d2344327f650ddafc8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     Collection<String> getAttributeNames();", "signatureAfterChange": "     ImmutableCollection<String> getAttributeNames();", "diff": ["-    Collection<String> getAttributeNames();", "+    ImmutableCollection<String> getAttributeNames();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cbe7e7d38b09e0dd53ad95972249df3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/UnnecessaryParenthesesCheck.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            log(ast, \"unnecessary.paren.ident\", ast.getText());", "+            log(ast, MSG_IDENT, ast.getText());", "-                log(ast, \"unnecessary.paren.string\",", "+                log(ast, MSG_STRING,", "-                log(ast, \"unnecessary.paren.literal\", ast.getText());", "+                log(ast, MSG_LITERAL, ast.getText());", "-                log(ast, \"unnecessary.paren.assign\");", "+                log(ast, MSG_ASSIGN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cc4b9ed315fc4f2fb50d96ee97fe50f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "a360c43b35478a740c799b97b8eb69333b4c66b8", "commitAfterChange": "bc83a3a82fc14ac5f83dca972d7e48776d2b98d9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processIDENT(DetailAST ast)", "signatureAfterChange": "     private void processIdent(DetailAST ast)", "diff": ["-    private void processIDENT(DetailAST ast) {", "+    private void processIdent(DetailAST ast) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ce89559bbdd0af293e015e4ab397fcd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setTagFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setTagFormat(String format)         throws ConversionException", "diff": ["-    public void setTagFormat(String aFormat)", "+    public void setTagFormat(String format)", "-            mTagFormat = aFormat;", "-            mTagFormatRE = Utils.getPattern(aFormat);", "+            tagFormat = format;", "+            tagFormatRE = Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d1cf35afc33c5225a7483535d33ef68", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "         public void visitType(DetailAST ast)", "signatureAfterChange": "         public void visitType(DetailAST ast)", "diff": ["-            final String className = CheckUtils.createFullType(ast).getText();", "-            context.addReferencedClassName(className);", "+            final String fullTypeName = CheckUtils.createFullType(ast).getText();", "+            context.addReferencedClassName(fullTypeName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d2ee324b3c1c30ff5643d09e7c4e7a9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java", "commitBeforeChange": "7d097b6fa682f8dcfedd95da2db8fed980c51705", "commitAfterChange": "d8286130e83dc672d30cd00eddbf6b5f77112521", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static JavadocTags getJavadocTags(TextBlock aCmt,                                              JavadocTagType tagType)", "signatureAfterChange": "     public static JavadocTags getJavadocTags(TextBlock aCmt,                                              JavadocTagType aTagType)", "diff": ["-                                             JavadocTagType tagType)", "+                                             JavadocTagType aTagType)", "-        Pattern blockTagPattern = Utils.getPattern(\"/\\\\*{2,}\\\\s*@(\\\\p{Alpha}+)\\\\s\");", "+        Pattern blockTagPattern =", "+            Utils.getPattern(\"/\\\\*{2,}\\\\s*@(\\\\p{Alpha}+)\\\\s\");", "-            if ((tagType.equals(JavadocTagType.ALL) ||", "-                  tagType.equals(JavadocTagType.BLOCK))", "-                && blockTagMatcher.find()) {", "+            if ((aTagType.equals(JavadocTagType.ALL) || aTagType", "+                    .equals(JavadocTagType.BLOCK)) && blockTagMatcher.find())", "+            {", "-                int line = aCmt.getStartLineNo() + i;", "+                final int line = aCmt.getStartLineNo() + i;", "-                    tags.add(new JavadocTag(line, col, tagName, content.trim()));", "+                    tags.add(", "+                        new JavadocTag(line, col, tagName, content.trim()));", "-            else if (tagType.equals(JavadocTagType.ALL) ||", "-                     tagType.equals(JavadocTagType.INLINE)) {", "+            else if (aTagType.equals(JavadocTagType.ALL)", "+                    || aTagType.equals(JavadocTagType.INLINE))", "+            {", "-                Pattern commentPattern = Utils.getPattern(\"^\\\\s*(?:/\\\\*{2,}|\\\\*+)\\\\s*(.*)\");", "-                Matcher commentMatcher = commentPattern.matcher(s);", "+                final Pattern commentPattern =", "+                    Utils.getPattern(\"^\\\\s*(?:/\\\\*{2,}|\\\\*+)\\\\s*(.*)\");", "+                final Matcher commentMatcher = commentPattern.matcher(s);", "-                Pattern tagPattern = Utils.getPattern(\".*?\\\\{@(\\\\p{Alpha}+)\\\\s+(.*?)\\\\}\");", "-                Matcher tagMatcher = tagPattern.matcher(commentContents);", "+                final Pattern tagPattern =", "+                    Utils.getPattern(\".*?\\\\{@(\\\\p{Alpha}+)\\\\s+(.*?)\\\\}\");", "+                final Matcher tagMatcher = tagPattern.matcher(commentContents);", "-                        String tagName = tagMatcher.group(1);", "-                        String tagValue = tagMatcher.group(2).trim();", "-                        int line = aCmt.getStartLineNo() + i;", "+                        final String tagName = tagMatcher.group(1);", "+                        final String tagValue = tagMatcher.group(2).trim();", "+                        final int line = aCmt.getStartLineNo() + i;", "-                            tags.add(new JavadocTag(", "-                                line, col, tagName, tagValue));", "+                            tags.add(new JavadocTag(line, col, tagName,", "+                                    tagValue));", "-                            invalidTags.add(new InvalidJavadocTag(", "-                                line, col, tagName));", "+                            invalidTags.add(new InvalidJavadocTag(line, col,", "+                                    tagName));", "-                    //else Error: Unexpected match count for inline JavaDoc tag!", "+                    // else Error: Unexpected match count for inline JavaDoc", "+                    // tag!", "-            blockTagPattern = Utils.getPattern(\"^\\\\s*\\\\**\\\\s*@(\\\\p{Alpha}+)\\\\s\");", "+            blockTagPattern =", "+                Utils.getPattern(\"^\\\\s*\\\\**\\\\s*@(\\\\p{Alpha}+)\\\\s\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d30dd98bcd857c5f7e917c6efc840f0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/CheckUtils.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public static List<String> getTypeParameterNames(final DetailAST aNode)", "signatureAfterChange": "     public static List<String> getTypeParameterNames(final DetailAST node)", "diff": ["-    public static List<String> getTypeParameterNames(final DetailAST aNode)", "+    public static List<String> getTypeParameterNames(final DetailAST node)", "-            aNode.findFirstToken(TokenTypes.TYPE_PARAMETERS);", "+            node.findFirstToken(TokenTypes.TYPE_PARAMETERS);", "-        final List<String> typeParamNames = Lists.newArrayList();", "+        final List<String> typeParanames = Lists.newArrayList();", "-            typeParamNames.add(", "+            typeParanames.add(", "-                    typeParamNames.add(", "+                    typeParanames.add(", "-        return typeParamNames;", "+        return typeParanames;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d3a0a3378bea7908066c2f4682a749c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/SinglelineDetector.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void processLines(List<String> aLines)", "signatureAfterChange": "     public void processLines(List<String> lines)", "diff": ["-    public void processLines(List<String> aLines)", "+    public void processLines(List<String> lines)", "-        for (String line : aLines) {", "+        for (String line : lines) {", "-            checkLine(lineno, line, mOptions.getPattern().matcher(line), 0);", "+            checkLine(lineno, line, options.getPattern().matcher(line), 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d4c6e412eaf479fdfbe0196446b5829", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setClassMaximum(int aClassMax)", "signatureAfterChange": "     public void setClassMaximum(int classMax)", "diff": ["-    public void setClassMaximum(int aClassMax)", "+    public void setClassMaximum(int classMax)", "-        mClassMax = aClassMax;", "+        this.classMax = classMax;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d5987c9d0ec90cb1a709b8cc96a98c1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private LexicalFrame findFrame(String aName)", "signatureAfterChange": "     private LexicalFrame findFrame(String name)", "diff": ["-    private LexicalFrame findFrame(String aName)", "+    private LexicalFrame findFrame(String name)", "-        if (mCurrent != null) {", "-            return mCurrent.getIfContains(aName);", "+        if (current != null) {", "+            return current.getIfContains(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d90907605c53d124bcd1c03a7aa4b7b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "commitAfterChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static String safeGet(final Attributes atts, final String name)         throws SAXException", "signatureAfterChange": "     private static String safeGet(final Attributes attributes, final String name)         throws SAXException", "diff": ["-    private static String safeGet(final Attributes atts, final String name)", "+    private static String safeGet(final Attributes attributes, final String name)", "-        final String retVal = atts.getValue(name);", "+        final String retVal = attributes.getValue(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d96482d09e7495781292f142fa478bb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LabelHandler.java", "commitBeforeChange": "afb775876c7ee015480f17cdcb53c6add4125a02", "commitAfterChange": "46d57c9ca5c93972a22cd797793d6b21c820f444", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void checkLabel()", "signatureAfterChange": "     private void checkLabel()", "diff": ["-        checkChildren(getMainAst(), mLabelChildren, getLevel(), true, false);", "+        checkChildren(getMainAst(), LABEL_CHILDREN, getLevel(), true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d9c8739bf4f1d7c224075063877e1ab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "3a55941f33dcd9111d6b61b0505217f47973a39d", "commitAfterChange": "f60a9cfe8b1b27d5ea25095bdfc690001da9f4d6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setColumns(String columns)", "signatureAfterChange": "     public void setColumns(String columns)", "diff": ["-        columnsCSV = columns;", "+        columnsCsv = columns;", "-            columnFilter = new CSVFilter(columns);", "+            columnFilter = new CsvFilter(columns);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2da78976d97ef65a9217d879d743470a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "98f0c51ab05243ce556dfb5afcd9c7ae4b5af7aa", "commitAfterChange": "63664e0b012593e18c5bb93ba528f27fd93fe0d4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     void reset()", "signatureAfterChange": "     void reset()", "diff": ["-        mReferenced.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2db162bee78feca15be988b09675d974", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setAllowedDistance(int aAllowedDistance)", "signatureAfterChange": "     public void setAllowedDistance(int allowedDistance)", "diff": ["-    public void setAllowedDistance(int aAllowedDistance)", "+    public void setAllowedDistance(int allowedDistance)", "-        this.mAllowedDistance = aAllowedDistance;", "+        this.allowedDistance = allowedDistance;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e10bc48b62223b6b4fde6df915ab18f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/AllTests.java", "commitBeforeChange": "a5adce4215b655e52ebb90ee1783d648fe3d9ffd", "commitAfterChange": "e71b877a424e1e6e247a2ef6825c742a94afd68f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public static Test suite()", "signatureAfterChange": "      public static Test suite()", "diff": ["+", "-        suite.addTest(new TestSuite(GlobalPropertiesSerializationTest.class));", "-        suite.addTest(new TestSuite(GlobalPropertiesTest.class));", "-        ", "-        // TODO: Why does one test fail?", "-        ", "+        suite.addTest(new TestSuite(ConfigSerializationTest.class));", "+        suite.addTest(new TestSuite(ConfigurationTest.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e27586a0e5539388f1ee224337777d0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "5703b6e33550d6e9706f42e253c2cc7d83a358bf", "commitAfterChange": "1818ae8ab189515f24a711aa3fc520377bd71380", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void testRelaxedJavadoc()         throws Exception", "signatureAfterChange": "     public void testRelaxedJavadoc()         throws Exception", "diff": ["-            filepath + \":45:19: Variable 'mDeer' missing Javadoc.\",", "+            filepath + \":45:19: Missing a Javadoc comment.\",", "-            filepath + \":46:16: Variable 'aFreddo' missing Javadoc.\",", "+            filepath + \":46:16: Missing a Javadoc comment.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e59d16e6723ccce0c452fb63959e8b1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/CommonUtilsTest.java", "commitBeforeChange": "f0ea60f77bbc5e524320b042d7a90eefbf2bd00d", "commitAfterChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testBaseClassnameForCanonicalName()", "signatureAfterChange": "      @Test     public void testBaseClassNameForCanonicalName()", "diff": ["-    public void testBaseClassnameForCanonicalName() {", "-        assertEquals(\"List\", CommonUtils.baseClassname(\"java.util.List\"));", "+    public void testBaseClassNameForCanonicalName() {", "+        assertEquals(\"List\", CommonUtils.baseClassName(\"java.util.List\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e691243ef806a98e01ee7dd4db50e80", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java", "commitBeforeChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "commitAfterChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(final DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(final DetailAST ast)", "diff": ["-                log(nameAST, \"import.control.missing.file\");", "+                log(nameAST, MSG_MISSING_FILE);", "-                    log(nameAST, \"import.control.unknown.pkg\");", "+                    log(nameAST, MSG_UNKNOWN_PKG);", "-                log(ast, \"import.control.disallowed\", imp.getText());", "+                log(ast, MSG_DISALLOWED, imp.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e742dfb53879de4c0f69279edcf4aa4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void checkFirstSentence(final DetailAST ast, TextBlock comment)", "signatureAfterChange": "     private void checkFirstSentence(final DetailAST ast, TextBlock comment)", "diff": ["-            log(comment.getStartLineNo(), \"javadoc.noperiod\");", "+            log(comment.getStartLineNo(), NO_PERIOD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e9b869c10b3f62857d99c2b8e811edf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-    public void beginTree(DetailAST aRootAST)", "+    public void beginTree(DetailAST rootAST)", "-        mCurrentVariables.clear();", "-        mVariableStack.clear();", "+        currentVariables.clear();", "+        variableStack.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ed8b431ef9c0d2b19740b83b5c18f23", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void visitClassDef(DetailAST aAST)", "signatureAfterChange": "     private void visitClassDef(DetailAST ast)", "diff": ["-    private void visitClassDef(DetailAST aAST)", "+    private void visitClassDef(DetailAST ast)", "-            aAST.findFirstToken(TokenTypes.IDENT).getText();", "-        if (isAbstract(aAST)) {", "+            ast.findFirstToken(TokenTypes.IDENT).getText();", "+        if (isAbstract(ast)) {", "-            if (!mIgnoreName && !isMatchingClassName(className)) {", "-                log(aAST.getLineNo(), aAST.getColumnNo(),", "+            if (!ignoreName && !isMatchingClassName(className)) {", "+                log(ast.getLineNo(), ast.getColumnNo(),", "-        else if (!mIgnoreModifier && isMatchingClassName(className)) {", "-            log(aAST.getLineNo(), aAST.getColumnNo(),", "+        else if (!ignoreModifier && isMatchingClassName(className)) {", "+            log(ast.getLineNo(), ast.getColumnNo(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2edef23a48a4aff95185e5ccd6f1df95", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setPublicMemberPattern(String aPattern)", "signatureAfterChange": "     public void setPublicMemberPattern(String pattern)", "diff": ["-    public void setPublicMemberPattern(String aPattern)", "+    public void setPublicMemberPattern(String pattern)", "-            mPublicMemberPattern = Utils.getPattern(aPattern);", "-            mPublicMemberFormat = aPattern;", "+            publicMemberPattern = Utils.getPattern(pattern);", "+            publicMemberFormat = pattern;", "-            throw new ConversionException(\"unable to parse \" + aPattern, e);", "+            throw new ConversionException(\"unable to parse \" + pattern, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2edf0e01f5398a81b0cb8ce2afe1ba70", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected int getLineNumber(List<String> aLines, String aKeyNane)", "signatureAfterChange": "     protected int getLineNumber(List<String> lines, String keyName)", "diff": ["-    protected int getLineNumber(List<String> aLines, String aKeyNane)", "+    protected int getLineNumber(List<String> lines, String keyName)", "-                \"^\" + aKeyNane.replace(\" \", \"\\\\\\\\ \") + \"[\\\\s:=].*$\";", "+                \"^\" + keyName.replace(\" \", \"\\\\\\\\ \") + \"[\\\\s:=].*$\";", "-        for (String line : aLines) {", "+        for (String line : lines) {", "-        if (lineNumber > aLines.size()) {", "+        if (lineNumber > lines.size()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f00b3da4844b77fae15f537bf373808", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "bf780dee7dfcc445a97fe93ad9a633975a052c6c", "commitAfterChange": "a6b47597067d3456c894435a8fdc52b1c7060bed", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                    && isFirstVariableInForInit(ast))", "+                    && isVariableInForInit(ast))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f07a0381c54b0f4aa8095bb835676dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolderTest.java", "commitBeforeChange": "64c05f5391bdf55a60da22a685488022827aee84", "commitAfterChange": "1487e5161886d95cb8c82e4fb1a8b447fa7e32d0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testIsSuppressed() throws Exception", "signatureAfterChange": "      @Test     public void testIsSuppressed() throws Exception", "diff": ["-        Constructor<?> entryConstr = entry.getDeclaredConstructor(String.class, int.class,", "+        Constructor<?> entryConstructor = entry.getDeclaredConstructor(String.class, int.class,", "-        entryConstr.setAccessible(true);", "+        entryConstructor.setAccessible(true);", "-        Object entryInstance = entryConstr.newInstance(\"MockEntry\", 100, 100, 350, 350);", "+        Object entryInstance = entryConstructor.newInstance(\"MockEntry\", 100, 100, 350, 350);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f36eb8d85526f83b76cfed14d89f7a0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "f464a296056168259e1f84333507fcb797d93cdc", "commitAfterChange": "3ded17ac3d61b4284299319f5f60ee220154fded", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "       public void testWhitespace()         throws Exception", "signatureAfterChange": "       public void testWhitespace()         throws Exception", "diff": ["-        mConfig.setIgnoreParenWhitespace(false);", "+        mConfig.setParenPadOption(PadOption.NOSPACE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f3852d9d799121d69f7c206529b2c2c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/IntRangeFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public IntRangeFilter(int aLowerBound, int aUpperBound)", "signatureAfterChange": "     public IntRangeFilter(int lowerBound, int upperBound)", "diff": ["-    public IntRangeFilter(int aLowerBound, int aUpperBound)", "+    public IntRangeFilter(int lowerBound, int upperBound)", "-        mLowerBound = aLowerBound;", "-        mUpperBound = aUpperBound;", "+        this.lowerBound = lowerBound;", "+        this.upperBound = upperBound;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f3ebd4727ca816612ffe9b05a9d25a4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final DetailAST nextGroup = aAST.getNextSibling();", "+        final DetailAST nextGroup = ast.getNextSibling();", "-        if (isLastGroup && !mCheckLastGroup) {", "+        if (isLastGroup && !checkLastGroup) {", "-        final DetailAST slist = aAST.findFirstToken(TokenTypes.SLIST);", "+        final DetailAST slist = ast.findFirstToken(TokenTypes.SLIST);", "-            && !hasFallTruComment(aAST, nextGroup))", "+            && !hasFallTruComment(ast, nextGroup))", "-                log(aAST, \"fall.through.last\");", "+                log(ast, \"fall.through.last\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f44c5ad4d036b997affcd39ef9c64e5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "f24c8ee834e006c406c0538dbfccc2fe6c07279c", "commitAfterChange": "4f6596703fa79f08617a41f53e24aff32821a2c6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     void setLines(String[] aLines)", "signatureAfterChange": "     void setLines(String[] aLines)", "diff": ["-        checkHeader();", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f52984c00daac1479049a68198effb9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "745e21f1e4d202dd8dba577585f35f7d3f10d839", "commitAfterChange": "2e243db3fbdf7b737f78ed7cef0b9bd94f351d25", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test(expected = CheckstyleException.class)     public void testLoadFromMalformedURL() throws CheckstyleException", "signatureAfterChange": "      @Test(expected = CheckstyleException.class)     public void testLoadFromMalformedUrl() throws CheckstyleException", "diff": ["-    public void testLoadFromMalformedURL() throws CheckstyleException {", "+    public void testLoadFromMalformedUrl() throws CheckstyleException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f682d1e804464b2d1eca1b2413c4e3a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWarningsFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Override     public boolean accept(AuditEvent aEvent)", "signatureAfterChange": "     @Override     public boolean accept(AuditEvent event)", "diff": ["-    public boolean accept(AuditEvent aEvent)", "+    public boolean accept(AuditEvent event)", "-        return !SuppressWarningsHolder.isSuppressed(aEvent.getSourceName(),", "-            aEvent.getLine(), aEvent.getColumn());", "+        return !SuppressWarningsHolder.isSuppressed(event.getSourceName(),", "+            event.getLine(), event.getColumn());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f7bae3f84d25db35546e79b63073e9a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "         public void setImportGroup(String aImportGroup)", "signatureAfterChange": "         public void setImportGroup(String importGroup)", "diff": ["-        public void setImportGroup(String aImportGroup)", "+        public void setImportGroup(String importGroup)", "-            this.mImportGroup = aImportGroup;", "+            this.importGroup = importGroup;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2faad8dd4a52e69ff478e0f3d74b8086", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheckTest.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testLambdaExpression() throws Exception", "signatureAfterChange": "      @Test     public void testLambdexpression() throws Exception", "diff": ["-    public void testLambdaExpression() throws Exception", "+    public void testLambdexpression() throws Exception"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fadcb2c2efd9ac624748f7aa6e54e3a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private Class<?> resolveQualifiedName(final String name)", "signatureAfterChange": "     private Class<?> resolveQualifiedName(final String name)", "diff": ["-                        name.substring(0, dot) + \"$\" + name.substring(dot + 1);", "+                        name.substring(0, dot) + DOLLAR_SIGN + name.substring(dot + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fc45a9ecf4ba855eaf7aec9e3f00ed1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "e1d0e7f6361c32c69650ba789c1995e49a94142f", "commitAfterChange": "7dd24c8c35572b5db3e5c905d440e813cfe2538c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public String getFilename()", "signatureAfterChange": "     public String getFileName()", "diff": ["-    public String getFilename()", "+    public String getFileName()", "-        return filename;", "+        return fileName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ff22d94a47c6f894743d1b1fd00b54f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "7166b6a1d07452b72cf6f62ae2afe9846b96ad91", "commitAfterChange": "47802121745d9113b54cdb2d8ccef59e74ce3e72", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static Configuration loadConfiguration(         String aConfig, Properties aOverrideProps)         throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(         String aConfig, PropertyResolver aOverridePropsResolver)         throws CheckstyleException", "diff": ["-        String aConfig, Properties aOverrideProps)", "+        String aConfig, PropertyResolver aOverridePropsResolver)", "-                new ConfigurationLoader(aOverrideProps);", "+                new ConfigurationLoader(aOverridePropsResolver);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30364c989bbf9f05410eca0b16e047d8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void visitMethod(final DetailAST aMethod)", "signatureAfterChange": "     private void visitMethod(final DetailAST method)", "diff": ["-    private void visitMethod(final DetailAST aMethod)", "+    private void visitMethod(final DetailAST method)", "-        if (!aMethod.branchContains(TokenTypes.PARAMETER_DEF)) {", "+        if (!method.branchContains(TokenTypes.PARAMETER_DEF)) {", "-            aMethod.findFirstToken(TokenTypes.MODIFIERS);", "+            method.findFirstToken(TokenTypes.MODIFIERS);", "-            aMethod.findFirstToken(TokenTypes.PARAMETERS);", "+            method.findFirstToken(TokenTypes.PARAMETERS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "305018b3ee04ca8776b92db319978a27", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setExcludedClasses(String aExcludedClasses)         throws ConversionException", "signatureAfterChange": "     public void setExcludedClasses(String excludedClasses)         throws ConversionException", "diff": ["-    public void setExcludedClasses(String aExcludedClasses)", "+    public void setExcludedClasses(String excludedClasses)", "-            mExcludedClasses = aExcludedClasses;", "-            mExcludedClassesPattern = Utils.getPattern(mExcludedClasses);", "+            excludedClasses = excludedClasses;", "+            excludedClassesPattern = Utils.getPattern(excludedClasses);", "-                                          + mExcludedClasses,", "+                                          + excludedClasses,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "305f23bd7202646836fea0dfc8a3ef4f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final int lineNo = aAST.getLineNo();", "+        final int lineNo = ast.getLineNo();", "-            log(lineNo, \"type.missingTag\", mTag);", "+            log(lineNo, \"type.missingTag\", tag);", "-            checkTag(lineNo, cmt.getText(), mTag, mTagRE, mTagFormatRE,", "-                mTagFormat);", "+            checkTag(lineNo, cmt.getText(), tag, tagRE, tagFormatRE,", "+                tagFormat);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "308c2c7327561fcedb3fdb0ec706541d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "         private void addReferencedClassName(String className)", "signatureAfterChange": "         private void addReferencedClassName(String referencedClassName)", "diff": ["-        private void addReferencedClassName(String className) {", "-            if (isSignificant(className)) {", "-                referencedClassNames.add(className);", "+        private void addReferencedClassName(String referencedClassName) {", "+            if (isSignificant(referencedClassName)) {", "+                referencedClassNames.add(referencedClassName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30a0848d9f1482440a2d289d9275e9c9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Context.java", "commitBeforeChange": "a955b402b7db322df8f073a0e8f7a3abd8449f17", "commitAfterChange": "65ca7775ba7d0b649c16cfdc8a1447f41867c870", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     Object get(String key);", "signatureAfterChange": "     Object get(String aKey);", "diff": ["-    Object get(String key);", "+     */", "+    Object get(String aKey);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30aa1c2b0e6d5930eaa69ab10b717d53", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final DetailAST params = aAST.findFirstToken(TokenTypes.PARAMETERS);", "+        final DetailAST params = ast.findFirstToken(TokenTypes.PARAMETERS);", "-        if (count > mMax && !ignoreNumberOfParameters(aAST)) {", "-            final DetailAST name = aAST.findFirstToken(TokenTypes.IDENT);", "-            log(name.getLineNo(), name.getColumnNo(), \"maxParam\", mMax, count);", "+        if (count > max && !ignoreNumberOfParameters(ast)) {", "+            final DetailAST name = ast.findFirstToken(TokenTypes.IDENT);", "+            log(name.getLineNo(), name.getColumnNo(), \"maxParam\", max, count);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30c5ab0458d2432c0c30fa66b1978a81", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public boolean getCheckMethods()", "signatureAfterChange": "     public boolean getCheckMethods()", "diff": ["-        return mCheckMethods;", "+        return checkMethods;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30d04e42121fc285f4afa5c6d3d4fdbb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/TreeTableCellRenderer.java", "commitBeforeChange": "d814d1352b63136a400cd8f4dffd03d68c9ccd24", "commitAfterChange": "3edd1b53a5d8d407fd33d8c514db8bc1c7274fe5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Override     public void updateUI()", "signatureAfterChange": "     @Override     public void updateUI()", "diff": ["-            final DefaultTreeCellRenderer dtcr = (DefaultTreeCellRenderer) tcr;", "+            final DefaultTreeCellRenderer renderer = (DefaultTreeCellRenderer) tcr;", "-            // dtcr.setBorderSelectionColor(null);", "-            dtcr.setTextSelectionColor(UIManager.getColor(\"Table.selectionForeground\"));", "-            dtcr.setBackgroundSelectionColor(UIManager.getColor(\"Table.selectionBackground\"));", "+            // renderer.setBorderSelectionColor(null);", "+            renderer.setTextSelectionColor(UIManager.getColor(\"Table.selectionForeground\"));", "+            renderer.setBackgroundSelectionColor(UIManager.getColor(\"Table.selectionBackground\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30e3aa2e7018fa2cf042755e5af4ceaa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "e1d0e7f6361c32c69650ba789c1995e49a94142f", "commitAfterChange": "7dd24c8c35572b5db3e5c905d440e813cfe2538c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void checkUnclosedTags(Deque<HtmlTag> htmlStack, String token)", "signatureAfterChange": "     private void checkUnclosedTags(Deque<HtmlTag> htmlStack, String token)", "diff": ["-            log(lastOpenTag.getLineno(),", "+            log(lastOpenTag.getLineNo(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30fe06e331af016b972504b277c1b154", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "commitAfterChange": "cb5a59fc6baf5de204e3cc99be6ba9865e44350a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void validateNewLinePosion(DetailAST brace, DetailAST startToken,                                        String braceLine)", "signatureAfterChange": "     private void validateNewLinePosition(DetailAST brace, DetailAST startToken, String braceLine)", "diff": ["-    private void validateNewLinePosion(DetailAST brace, DetailAST startToken,", "-                                       String braceLine) {", "+    private void validateNewLinePosition(DetailAST brace, DetailAST startToken, String braceLine) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31028d1e67567ac21d56785b373bda75", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AuditEvent.java", "commitBeforeChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "commitAfterChange": "abfc952fd0ed88f6246b1d969a8a980ea63f0bd6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public SeverityLevel getSeverityLevel()", "signatureAfterChange": "     public SeverityLevel getSeverityLevel()", "diff": ["-        if (message == null) {", "+        if (localizedMessage == null) {", "-            return message.getSeverityLevel();", "+            return localizedMessage.getSeverityLevel();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "314dc35b7fb156ca860f96e1850fd0e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static Set<String> getPackageNames(ClassLoader aClassLoader)         throws CheckstyleException", "signatureAfterChange": "     public static Set<String> getPackageNames(ClassLoader classLoader)         throws CheckstyleException", "diff": ["-    public static Set<String> getPackageNames(ClassLoader aClassLoader)", "+    public static Set<String> getPackageNames(ClassLoader classLoader)", "-            packageFiles = aClassLoader.getResources(CHECKSTYLE_PACKAGES);", "+            packageFiles = classLoader.getResources(CHECKSTYLE_PACKAGES);", "-            final URL aPackageFile = packageFiles.nextElement();", "+            final URL packageFile = packageFiles.nextElement();", "-                stream = new BufferedInputStream(aPackageFile.openStream());", "+                stream = new BufferedInputStream(packageFile.openStream());", "-                        \"unable to open \" + aPackageFile, e);", "+                        \"unable to open \" + packageFile, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31626d736288317ff582a25aca8603bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "04ceb4b91f4e66439479406834f42014c5be62ed", "commitAfterChange": "89b6af6a05d3c7820afac94137ae105cf800c457", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void visitOtherTokens(DetailAST ast, int type)", "signatureAfterChange": "     private void visitOtherTokens(DetailAST ast, int type)", "diff": ["-            new FieldFrame(currentFrame, isStaticInnerType, type,", "-                type == TokenTypes.CLASS_DEF || type == TokenTypes.ENUM_DEF", "+            new FieldFrame(currentFrame, isStaticInnerType,", "+                    type == TokenTypes.CLASS_DEF || type == TokenTypes.ENUM_DEF"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "317df19e23606762143f861667bd692d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/LineSeparatorOption.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public boolean matches(byte[] aBytes)", "signatureAfterChange": "     public boolean matches(byte[] bytes)", "diff": ["-    public boolean matches(byte[] aBytes)", "+    public boolean matches(byte[] bytes)", "-        final String s = new String(aBytes);", "-        return s.equals(mLineSeparator);", "+        final String s = new String(bytes);", "+        return s.equals(lineSeparator);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "319bad05cb4a63e74c6c82277d6f3a0f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/VerifierImpl.java", "commitBeforeChange": "0fd69594a4c3e82f92f93f0371791da66938f8c3", "commitAfterChange": "f0f7f3e762ffef78dcf82bf1611c10da48b96cb9", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private static RE createRE(String aPattern)", "signatureAfterChange": "     private static RE createRE(String aPattern)", "diff": ["-            System.err.println(\"Failed to initialise regexp expression \" +", "+            System.out.println(\"Failed to initialise regexp expression \" +", "-            e.printStackTrace(System.err);", "+            e.printStackTrace(System.out);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31a2ecf5908b1c867f3eee76b0b1d97b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "82ed05b01a8ab0b9985f6ac820247d63081676c1", "commitAfterChange": "8e6328559ee32d3f5c58a0f4c8de5f9e11ed7373", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void setIgnoreImportLength(boolean aIgnore)", "signatureAfterChange": "     public void setIgnoreImportLen(boolean aIgnore)", "diff": ["-    public void setIgnoreImportLength(boolean aIgnore)", "+    public void setIgnoreImportLen(boolean aIgnore)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31c9d56172118eb0de017ca02bd18268", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void checkMax(int aMax, int aValue, String aMsg, DetailAST aAst)", "signatureAfterChange": "     private void checkMax(int max, int value, String msg, DetailAST ast)", "diff": ["-    private void checkMax(int aMax, int aValue, String aMsg, DetailAST aAst)", "+    private void checkMax(int max, int value, String msg, DetailAST ast)", "-        if (aMax < aValue) {", "-            log(aAst.getLineNo(), aMsg, aValue, aMax);", "+        if (max < value) {", "+            log(ast.getLineNo(), msg, value, max);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31cafca8b1ab2f7749f626a13b773b87", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "a13ebd482ce5dd891ba99d4c22a7cd5ff7d8e2dc", "commitAfterChange": "dad4fa599aa3570980fcaff4cb5f37941847a7a1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testNoClassLoaderNoModuleFactory() throws Exception", "signatureAfterChange": "      @Test     public void testNoClassLoaderNoModuleFactory() throws Exception", "diff": ["-        final Checker c = new Checker();", "+        final Checker checker = new Checker();", "-            c.finishLocalSetup();", "+            checker.finishLocalSetup();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3219455c6ea595d93313fbba9d5d4832", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void checkStyleType(final DetailAST aAnnotation)", "signatureAfterChange": "     private void checkStyleType(final DetailAST annotation)", "diff": ["-    private void checkStyleType(final DetailAST aAnnotation)", "+    private void checkStyleType(final DetailAST annotation)", "-        if (ElementStyle.IGNORE.equals(this.mStyle)", "-            || this.mStyle == null)", "+        if (ElementStyle.IGNORE.equals(this.style)", "+            || this.style == null)", "-        if (ElementStyle.COMPACT_NO_ARRAY.equals(this.mStyle)) {", "-            this.checkCompactNoArrayStyle(aAnnotation);", "+        if (ElementStyle.COMPACT_NO_ARRAY.equals(this.style)) {", "+            this.checkCompactNoArrayStyle(annotation);", "-        else if (ElementStyle.COMPACT.equals(this.mStyle)) {", "-            this.checkCompactStyle(aAnnotation);", "+        else if (ElementStyle.COMPACT.equals(this.style)) {", "+            this.checkCompactStyle(annotation);", "-        else if (ElementStyle.EXPANDED.equals(this.mStyle)) {", "-            this.checkExpandedStyle(aAnnotation);", "+        else if (ElementStyle.EXPANDED.equals(this.style)) {", "+            this.checkExpandedStyle(annotation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3228af0f57636fe7750b7d670a20663a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setMaximumDepth(int aMaximumDepth)", "signatureAfterChange": "     public void setMaximumDepth(int maximumDepth)", "diff": ["-    public void setMaximumDepth(int aMaximumDepth)", "+    public void setMaximumDepth(int maximumDepth)", "-        mMaximumDepth = aMaximumDepth;", "+        this.maximumDepth = maximumDepth;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "322de217276cde4c6fe80a6728efe20c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/FilterSetTest.java", "commitBeforeChange": "7abbd6af2f63a9e5bfa067f3058b5a3e738971de", "commitAfterChange": "8d242382f8bb77488b6da23bdd0d2d61583703fc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          public void setUp()", "signatureAfterChange": "          public void setUp()", "diff": ["-        filter = new FilterSet();", "+        filter = new CSVFilter(\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "325fcfe4466711560e7ba026b6b33c2b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "02ae6023b5b6f66e495393a6f87e4beb4b4ab3d0", "commitAfterChange": "584f7ee1232be96284255540e7249023c327ca8f", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "         public Token(String text, int line, int column)", "signatureAfterChange": "         public Token(String text, int lineNo, int columnNo)", "diff": ["-        public Token(String text, int line, int column) {", "+        public Token(String text, int lineNo, int columnNo) {", "-            this.line = line;", "-            this.column = column;", "+            this.lineNo = lineNo;", "+            this.columnNo = columnNo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "329d0dc4d35e6c9263576d16cedf5e95", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void parseInputSource(InputSource aSource)         throws IOException, SAXException", "signatureAfterChange": "     private void parseInputSource(InputSource source)         throws IOException, SAXException", "diff": ["-    private void parseInputSource(InputSource aSource)", "+    private void parseInputSource(InputSource source)", "-        mSaxHandler.parseInputSource(aSource);", "+        saxHandler.parseInputSource(source);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32a2f012ff07b433cd7b3ef04b2d829b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/MethodCountCheck.java", "commitBeforeChange": "a6e4d310c0e38d73e7816a5fb57e66fc221d79ec", "commitAfterChange": "5c6e03a868c0f756ccd3bb9b796febbbbf25bd4e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void setMaxTotal(int maxTotal)", "signatureAfterChange": "     public void setMaxTotal(int aValue)", "diff": ["-    public void setMaxTotal(int maxTotal)", "+     */", "+    public void setMaxTotal(int aValue)", "-        mMaxTotal = maxTotal;", "+        mMaxTotal = aValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32d0872910ad0ad20790c73293abf3e4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setIgnoreStatic(boolean aIgnoreStatic)", "signatureAfterChange": "     public void setIgnoreStatic(boolean ignoreStatic)", "diff": ["-    public void setIgnoreStatic(boolean aIgnoreStatic)", "+    public void setIgnoreStatic(boolean ignoreStatic)", "-        this.mIgnoreStatic = aIgnoreStatic;", "+        this.ignoreStatic = ignoreStatic;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "332770624c60e36ef8a5aa4b29b565bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private static boolean isChild(DetailAST aParent, DetailAST aAST)", "signatureAfterChange": "     private static boolean isChild(DetailAST parent, DetailAST ast)", "diff": ["-    private static boolean isChild(DetailAST aParent, DetailAST aAST)", "+    private static boolean isChild(DetailAST parent, DetailAST ast)", "-        final ASTEnumeration astList = aParent.findAllPartial(aAST);", "+        final ASTEnumeration astList = parent.findAllPartial(ast);", "-            final DetailAST ast = (DetailAST) astList.nextNode();", "-            DetailAST astParent = ast.getParent();", "+            final DetailAST astNode = (DetailAST) astList.nextNode();", "+            DetailAST astParent = astNode.getParent();", "-                if (astParent.equals(aParent)", "-                        && astParent.getLineNo() == aParent.getLineNo())", "+                if (astParent.equals(parent)", "+                        && astParent.getLineNo() == parent.getLineNo())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33311e1127d85f9db1936f622b4ffaf5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/InputEmptyStatement.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void EmptyStatements()", "signatureAfterChange": "     public void EmptyStatements(boolean cond)", "diff": ["-   public void EmptyStatements()", "+   public void EmptyStatements(boolean cond)", "-      for (;;);", "+      for (;cond;);", "-      for (;;)", "+      for (;cond;)", "-      if (true)", "+      if (cond)", "-      while (true);", "+      while (cond);", "-      while (true)", "+      while (cond)", "-      while (true);", "+      while (cond);", "-      while (true);", "+      while (cond);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3336d093fbb0a3d959c4244bc2a30828", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedCheck.java", "commitBeforeChange": "904de34fcd984edce3d6042a5a17e2a969254588", "commitAfterChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private boolean validateTagAtTheRestOfComment(String[] lines, boolean foundBefore,                                                   int currentLine, int i)", "signatureAfterChange": "     private boolean checkTagAtTheRestOfComment(String[] lines, boolean foundBefore,             int currentLine, int i)", "diff": ["-    private boolean validateTagAtTheRestOfComment(String[] lines, boolean foundBefore,", "-                                                  int currentLine, int i) {", "+    private boolean checkTagAtTheRestOfComment(String[] lines, boolean foundBefore,", "+            int currentLine, int i) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3365da762c94c4f4724eeab7c7880f14", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "896af516b0028ff2a26cc1888dfaba620d3fe9e0", "commitAfterChange": "55c92042eb6986e905529de841d3d1c9a7b2b6dd", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testloadSuppressionsURISyntaxException() throws Exception", "signatureAfterChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testLoadSuppressionsURISyntaxException() throws Exception", "diff": ["-    public void testloadSuppressionsURISyntaxException() throws Exception {", "+    public void testLoadSuppressionsURISyntaxException() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33930fb79d8936fadb5f617c2cc9671a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/Main.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static void displayAst(DetailAST ast)", "signatureAfterChange": "     public static void displayAst(DetailAST ast)", "diff": ["-        final JFrame frame = new JFrame(\"CheckStyle\");", "+        final JFrame testFrame = new JFrame(\"CheckStyle\");", "-        frame.getContentPane().add(panel);", "-        panel.openAst(ast, frame);", "-        frame.setSize(1500, 800);", "-        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);", "-        frame.setVisible(true);", "+        testFrame.getContentPane().add(panel);", "+        panel.openAst(ast, testFrame);", "+        testFrame.setSize(1500, 800);", "+        testFrame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);", "+        testFrame.setVisible(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33b1a967bf2b22d1eb1b2a9f59877034", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheckTest.java", "commitBeforeChange": "a846ef9d3308345d234c4bc66a92b9eec97b820b", "commitAfterChange": "19d1fb3602980349f5dc4c26f30b1db4f102c57e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testIllegalStateException() throws Exception", "signatureAfterChange": "      @Test     public void testIllegalStateException() throws Exception", "diff": ["-            ast.toString().equals(ex.getMessage());", "+            assertEquals(ast.toString(), ex.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33c1fd0db7759a3909049c4e6c961c5e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/RedundantImportCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static boolean fromPackage(String aImport, String aPkg)", "signatureAfterChange": "     private static boolean fromPackage(String importName, String pkg)", "diff": ["-    private static boolean fromPackage(String aImport, String aPkg)", "+    private static boolean fromPackage(String importName, String pkg)", "-        if (aPkg == null) {", "+        if (pkg == null) {", "-            retVal = (aImport.indexOf('.') == -1);", "+            retVal = (importName.indexOf('.') == -1);", "-            final int index = aImport.lastIndexOf('.');", "+            final int index = importName.lastIndexOf('.');", "-                final String front = aImport.substring(0, index);", "-                retVal = front.equals(aPkg);", "+                final String front = importName.substring(0, index);", "+                retVal = front.equals(pkg);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33db8696ee5f55208597ecb107f4db37", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "01d27913a71c29d6a769ed98ca7dd4ba01fe31eb", "commitAfterChange": "4cbd709c019cf1b69796858506d673f7b66d37c7", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private int processNEW(String aFileName)", "signatureAfterChange": "     private int process(String aFileName)", "diff": ["-     **/", "-    private int processNEW(String aFileName)", "-    {", "-        // TODO: blow away the old process and rename this one", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "340abb216a1795017b79f2c104909eab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testContextualize_ConversionException()", "signatureAfterChange": "      @Test     public void testContextualizeConversionException()", "diff": ["-    public void testContextualize_ConversionException() {", "+    public void testContextualizeConversionException() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34147aaa7a7d3c36c23cd667fae14657", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheckTest.java", "commitBeforeChange": "9443321a0f70b8fc1f323a9e237f95f5ac44a45c", "commitAfterChange": "28e6666a07f41519c2746a722f46eaa1e243a11d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void testGetOption() throws Exception", "signatureAfterChange": "      @Test     public void testGetOption() throws Exception", "diff": ["+            Assert.fail(\"ConversionException is expected\");", "-", "-        Assert.fail();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34292461abfe7080bc148ff6e475b408", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void setLegalAbstractClassNames(String[] aClassNames)", "signatureAfterChange": "     public void setLegalAbstractClassNames(String[] classNames)", "diff": ["-    public void setLegalAbstractClassNames(String[] aClassNames)", "+    public void setLegalAbstractClassNames(String[] classNames)", "-        mLegalAbstractClassNames.clear();", "-        for (String element : aClassNames) {", "-            mLegalAbstractClassNames.add(element);", "+        legalAbstractClassNames.clear();", "+        for (String element : classNames) {", "+            legalAbstractClassNames.add(element);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "342f6be7f49eb25c79c8acc79a15779a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void addPreviousSibling(DetailAST aAST)", "signatureAfterChange": "     public void addPreviousSibling(DetailAST ast)", "diff": ["-    public void addPreviousSibling(DetailAST aAST)", "+    public void addPreviousSibling(DetailAST ast)", "-        if (aAST != null) {", "-            aAST.setParent(mParent);", "+        if (ast != null) {", "+            ast.setParent(parent);", "-                aAST.setPreviousSibling(previousSibling);", "-                previousSibling.setNextSibling(aAST);", "+                ast.setPreviousSibling(previousSibling);", "+                previousSibling.setNextSibling(ast);", "-            else if (mParent != null) {", "-                mParent.setFirstChild(aAST);", "+            else if (parent != null) {", "+                parent.setFirstChild(ast);", "-            aAST.setNextSibling(this);", "-            this.setPreviousSibling(aAST);", "+            ast.setNextSibling(this);", "+            this.setPreviousSibling(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "346f28b315df85a45808bf32acfcfcde", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "5d31b9e6ef9b950a2f04535d2bba6eac446949bc", "commitAfterChange": "c75c77dff73b803284ea152105cd64b0fc55d58b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void processIdent(DetailAST aAST)", "signatureAfterChange": "     private void processIdent(DetailAST aAST)", "diff": ["-        }", "-        // TODO Need to filter how often this is run to improve speed, and", "-        // also turn off by default.", "-        if (mProcessJavadoc) {", "-            processJavadoc(aAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "348e4628a88b7c14fb639396d5e42263", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AbstractLoader.java", "commitBeforeChange": "79404974eff1458f4243f8acd6a08b6a8b869342", "commitAfterChange": "fe9057366308642868c25d427c3ee94411b37170", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public InputSource resolveEntity(String aPublicId, String aSystemId)         throws SAXException", "signatureAfterChange": "      @Override     public InputSource resolveEntity(String aPublicId, String aSystemId)         throws SAXException", "diff": ["-                Thread.currentThread().getContextClassLoader();", "+                this.getClass().getClassLoader();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3494fef84bec42b462edb2a582d6214d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void finishLocalSetup()", "signatureAfterChange": "      @Override     public void finishLocalSetup()", "diff": ["-        checkContext.add(\"classLoader\", mClassLoader);", "+        checkContext.add(\"classLoader\", classLoader);", "-        checkContext.add(\"tabWidth\", String.valueOf(mTabWidth));", "+        checkContext.add(\"tabWidth\", String.valueOf(tabWidth));", "-        mChildContext = checkContext;", "+        childContext = checkContext;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "349b3a2583a5c4c485731f8e5654e1ee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void beginTree(final DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(final DetailAST rootAST)", "diff": ["-    public void beginTree(final DetailAST aRootAST)", "+    public void beginTree(final DetailAST rootAST)", "-        mCurrentLeaf = null;", "+        currentLeaf = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34a63585ef667b31ef94adbb13519896", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule528typevariablenames/ClassMethodTypeParameterNameTest.java", "commitBeforeChange": "0c75b3af7443afa5a3130bdbd1220fd1076117ed", "commitAfterChange": "230cd73883c40bf535cfca2d745f1f98564753db", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testClassDefault() throws Exception", "signatureAfterChange": "      @Test     public void testClassDefault() throws Exception", "diff": ["-            \"5:31: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"t\", format),", "-            \"13:14: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"foo\", format),", "-            \"27:24: \" + getCheckMessage(checkConfig.getMessages(), msgKey, \"$foo\", format),", "+            \"5:31: \" + getCheckMessage(configuration.getMessages(), msgKey, \"t\", format),", "+            \"13:14: \" + getCheckMessage(configuration.getMessages(), msgKey, \"foo\", format),", "+            \"27:24: \" + getCheckMessage(configuration.getMessages(), msgKey, \"$foo\", format),", "-        verify(checkConfig, filePath, expected, warnList);", "+        verify(configuration, filePath, expected, warnList);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34d94c265530cd9eb010011dd3f204f9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/IntMatchFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Override     public boolean accept(int aInt)", "signatureAfterChange": "     @Override     public boolean accept(int intValue)", "diff": ["-    public boolean accept(int aInt)", "+    public boolean accept(int intValue)", "-        return mMatchValue == aInt;", "+        return matchValue == intValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34e946b164e873565ffe727a5baf4891", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setAllowInSwitchCase(boolean aAllowInSwitchCase)", "signatureAfterChange": "     public void setAllowInSwitchCase(boolean allowInSwitchCase)", "diff": ["-    public void setAllowInSwitchCase(boolean aAllowInSwitchCase)", "+    public void setAllowInSwitchCase(boolean allowInSwitchCase)", "-        mAllowInSwitchCase = aAllowInSwitchCase;", "+        this.allowInSwitchCase = allowInSwitchCase;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "351b1045ec16524975ac6691a77fda84", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Check.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      @Override     public final void log(int aLine, String aKey, Object... aArgs)", "signatureAfterChange": "      @Override     public final void log(int line, String key, Object... args)", "diff": ["-    public final void log(int aLine, String aKey, Object... aArgs)", "+    public final void log(int line, String key, Object... args)", "-        mMessages.add(", "+        messages.add(", "-                aLine,", "+                line,", "-                aKey,", "-                aArgs,", "+                key,", "+                args,", "-                this.getCustomMessages().get(aKey)));", "+                this.getCustomMessages().get(key)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3533add380a6355daf6694895ecbdd8d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "91a49a90d40c6adad5f973f792c6b80003a69263", "commitAfterChange": "a172cb76e245dfeb01e9957cfe196f26bde555d7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void checkMethodCall(DetailAST methodCall)", "signatureAfterChange": "     private void checkMethodCall(DetailAST methodCall)", "diff": ["-                && isCalledOnStringField(objCalledOn)) {", "+                && isCalledOnStringFieldOrVariable(objCalledOn)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3542c7d9d130960acfd9bd2ee688f59a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/OuterTypeNumberCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aAst)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST ast)", "diff": ["-    public void beginTree(DetailAST aAst)", "+    public void beginTree(DetailAST ast)", "-        mCurrentDepth = 0;", "-        mOuterNum = 0;", "+        currentDepth = 0;", "+        outerNum = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3567595d42f099f6635b5dd2be4afb83", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private ConfigurationLoader(final PropertyResolver aOverrideProps,                                 final boolean aOmitIgnoredModules)         throws ParserConfigurationException, SAXException", "signatureAfterChange": "     private ConfigurationLoader(final PropertyResolver overrideProps,                                 final boolean omitIgnoredModules)         throws ParserConfigurationException, SAXException", "diff": ["-    private ConfigurationLoader(final PropertyResolver aOverrideProps,", "-                                final boolean aOmitIgnoredModules)", "+    private ConfigurationLoader(final PropertyResolver overrideProps,", "+                                final boolean omitIgnoredModules)", "-        mSaxHandler = new InternalLoader();", "-        mOverridePropsResolver = aOverrideProps;", "-        mOmitIgnoredModules = aOmitIgnoredModules;", "+        saxHandler = new InternalLoader();", "+        overridePropsResolver = overrideProps;", "+        this.omitIgnoredModules = omitIgnoredModules;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3585e225df3426a7c16b4d929dd1834e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void setLineWrappingIndentation(int aLineWrappingIndentation)", "signatureAfterChange": "     public void setLineWrappingIndentation(int lineWrappingIndentation)", "diff": ["-    public void setLineWrappingIndentation(int aLineWrappingIndentation)", "+    public void setLineWrappingIndentation(int lineWrappingIndentation)", "-        mLineWrappingIndentation = aLineWrappingIndentation;", "+        this.lineWrappingIndentation = lineWrappingIndentation;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "358a4b6ebb8c79e5e817dea254884fdf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractLoader.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public InputSource resolveEntity(String aPublicId, String aSystemId)         throws SAXException, IOException", "signatureAfterChange": "      @Override     public InputSource resolveEntity(String publicId, String systemId)         throws SAXException, IOException", "diff": ["-    public InputSource resolveEntity(String aPublicId, String aSystemId)", "+    public InputSource resolveEntity(String publicId, String systemId)", "-        if (mPublicIdToResourceNameMap.keySet().contains(aPublicId)) {", "+        if (publicIdToResourceNameMap.keySet().contains(publicId)) {", "-                    mPublicIdToResourceNameMap.get(aPublicId);", "+                    publicIdToResourceNameMap.get(publicId);", "-        return super.resolveEntity(aPublicId, aSystemId);", "+        return super.resolveEntity(publicId, systemId);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3598ada2bb3569ee9af4d44516ee0655", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java", "commitBeforeChange": "27149f3504a2f350b74f456a9bffbae76a460060", "commitAfterChange": "5ede09997c283b4c418f0f540848e006be04fa87", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-                log(0, \"noNewlineAtEOF\", file.getPath());", "+                log(0, MSG_KEY_NO_NEWLINE_EOF, file.getPath());", "-            log(0, \"unable.open\", file.getPath());", "+            log(0, MSG_KEY_UNABLE_OPEN, file.getPath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35aa9c028a8a6cfa869414d738837f8f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public DetailAST getPreviousSibling()", "signatureAfterChange": "     public DetailAST getPreviousSibling()", "diff": ["-        return mPreviousSibling;", "+        return previousSibling;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3616ec87a27369940c0cb114ae5bbbfb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Utils.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static boolean whitespaceBefore(int aIndex, String aLine)", "signatureAfterChange": "     public static boolean whitespaceBefore(int index, String line)", "diff": ["-    public static boolean whitespaceBefore(int aIndex, String aLine)", "+    public static boolean whitespaceBefore(int index, String line)", "-        for (int i = 0; i < aIndex; i++) {", "-            if (!Character.isWhitespace(aLine.charAt(i))) {", "+        for (int i = 0; i < index; i++) {", "+            if (!Character.isWhitespace(line.charAt(i))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "362376a67419bceffc4d2cc8a679435f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b14f255427c0b12054de2873fe300b4f4e691bd4", "commitAfterChange": "cc7aeaec906dc3c864477e3050510009b2a946ee", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void visitParameterDef(DetailAST paradef)", "signatureAfterChange": "     private void visitParameterDef(DetailAST parameterDef)", "diff": ["-    private void visitParameterDef(DetailAST paradef) {", "-        final DetailAST grandParentAST = paradef.getParent().getParent();", "+    private void visitParameterDef(DetailAST parameterDef) {", "+        final DetailAST grandParentAST = parameterDef.getParent().getParent();", "-            checkClassName(paradef);", "+            checkClassName(parameterDef);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "362daef83a6a083fcec55fc4ff18c37a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "80ab48f859c1f16835dbd41afe42414b41969e2f", "commitAfterChange": "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void setCheckFirstSentence(boolean flag)", "signatureAfterChange": "     public void setCheckFirstSentence(boolean flag)", "diff": ["-        checkingFirstSentence = flag;", "+        checkFirstSentence = flag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "365306b2d09c587ae9e546fff1ddaed3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultConfiguration.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public DefaultConfiguration(String aName)", "signatureAfterChange": "     public DefaultConfiguration(String name)", "diff": ["-    public DefaultConfiguration(String aName)", "+    public DefaultConfiguration(String name)", "-        mName = aName;", "+        this.name = name;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36db77cbdab2fcad1554cd49e92311d3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private Set<String> getPackageNames()", "signatureAfterChange": "     private Set<String> getPackageNames()", "diff": ["-        return mPackageNames;", "+        return packageNames;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3702c57eb1611ed940dddd12d56f1d64", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void processClass(DetailAST aAST)", "signatureAfterChange": "     private void processClass(DetailAST ast)", "diff": ["-    private void processClass(DetailAST aAST)", "+    private void processClass(DetailAST ast)", "-        final DetailAST ident = aAST.findFirstToken(TokenTypes.IDENT);", "-        mCurrentClass += (\"\".equals(mCurrentClass) ? \"\" : \"$\")", "+        final DetailAST ident = ast.findFirstToken(TokenTypes.IDENT);", "+        currentClass += (\"\".equals(currentClass) ? \"\" : \"$\")", "-        processTypeParams(aAST);", "+        processTypeParams(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37229133ffe284f8e32f3257b0114e0f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java", "commitBeforeChange": "904de34fcd984edce3d6042a5a17e2a969254588", "commitAfterChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static boolean fileExtensionMatches(File file, String... fileExtensions)", "signatureAfterChange": "     public static boolean matchesFileExtension(File file, String... fileExtensions)", "diff": ["-    public static boolean fileExtensionMatches(File file, String... fileExtensions) {", "+    public static boolean matchesFileExtension(File file, String... fileExtensions) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3729a8ad80e46c6f9aa68d4e7028fe2c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private BitSet getBranchTokenTypes()", "signatureAfterChange": "     private BitSet getBranchTokenTypes()", "diff": ["-        if (mBranchTokenTypes == null) {", "+        if (branchTokenTypes == null) {", "-            mBranchTokenTypes = new BitSet();", "-            mBranchTokenTypes.set(getType());", "+            branchTokenTypes = new BitSet();", "+            branchTokenTypes.set(getType());", "-                mBranchTokenTypes.or(childTypes);", "+                branchTokenTypes.or(childTypes);", "-        return mBranchTokenTypes;", "+        return branchTokenTypes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "372e5d1780747bb7a6b9f5f2b7f54572", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "         private void setClazz(Class<?> aClass)", "signatureAfterChange": "         private void setClazz(Class<?> classObj)", "diff": ["-        private void setClazz(Class<?> aClass)", "+        private void setClazz(Class<?> classObj)", "-            mClass = aClass;", "-            mIsLoadable = (mClass != null);", "+            this.classObj = classObj;", "+            isLoadable = (classObj != null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37369e57d646ac6d83d18ccf552b8052", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CheckUtils.java", "commitBeforeChange": "f0ea60f77bbc5e524320b042d7a90eefbf2bd00d", "commitAfterChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public static List<String> getTypeParameterNames(final DetailAST node)", "signatureAfterChange": "     public static List<String> getTypeParameterNames(final DetailAST node)", "diff": ["-        final List<String> typeParanames = Lists.newArrayList();", "+        final List<String> typeParameterNames = Lists.newArrayList();", "-            typeParanames.add(", "-                typeParam.findFirstToken(TokenTypes.IDENT).getText());", "+            typeParameterNames.add(", "+                    typeParam.findFirstToken(TokenTypes.IDENT).getText());", "-                    typeParanames.add(", "-                        sibling.findFirstToken(TokenTypes.IDENT).getText());", "+                    typeParameterNames.add(", "+                            sibling.findFirstToken(TokenTypes.IDENT).getText());", "-        return typeParanames;", "+        return typeParameterNames;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "374cbff56a5bfcdc14174e6c40a2a99d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ClassDefHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ClassDefHandler(IndentationCheck aIndentCheck,                            DetailAST aAst,                            ExpressionHandler aParent)", "signatureAfterChange": "     public ClassDefHandler(IndentationCheck indentCheck,                            DetailAST ast,                            ExpressionHandler parent)", "diff": ["-    public ClassDefHandler(IndentationCheck aIndentCheck,", "-                           DetailAST aAst,", "-                           ExpressionHandler aParent)", "+    public ClassDefHandler(IndentationCheck indentCheck,", "+                           DetailAST ast,", "+                           ExpressionHandler parent)", "-        super(aIndentCheck,", "-              (aAst.getType() == TokenTypes.CLASS_DEF)", "-              ? \"class def\" : ((aAst.getType() == TokenTypes.ENUM_DEF)", "+        super(indentCheck,", "+              (ast.getType() == TokenTypes.CLASS_DEF)", "+              ? \"class def\" : ((ast.getType() == TokenTypes.ENUM_DEF)", "-              aAst, aParent);", "+              ast, parent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "374cc38d2b616981cc7a94eff964516d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "d814d1352b63136a400cd8f4dffd03d68c9ccd24", "commitAfterChange": "3edd1b53a5d8d407fd33d8c514db8bc1c7274fe5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected boolean hasLabelBefore()", "signatureAfterChange": "     protected boolean hasLabelBefore()", "diff": ["-        final DetailAST parent = getToplevelAST().getParent();", "+        final DetailAST parent = getTopLevelAst().getParent();", "-            && parent.getLineNo() == getToplevelAST().getLineNo();", "+            && parent.getLineNo() == getTopLevelAst().getLineNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37605e088f10205afa22c216f6a8ce8e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private Class<?> resolveInnerClass(String name, String currentClass)             throws ClassNotFoundException", "signatureAfterChange": "     private Class<?> resolveInnerClass(String name, String currentClass)             throws ClassNotFoundException", "diff": ["-            String innerClass = currentClass + \"$\" + name;", "+            String innerClass = currentClass + DOLLAR_SIGN + name;", "-                innerClass = pkg + \".\" + innerClass;", "+                innerClass = pkg + PERIOD + innerClass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37769e146589bb9610d04ac7bdaad3aa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenTextCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setIgnoreCase(boolean aCaseInsensitive)", "signatureAfterChange": "     public void setIgnoreCase(boolean caseInsensitive)", "diff": ["-    public void setIgnoreCase(boolean aCaseInsensitive)", "+    public void setIgnoreCase(boolean caseInsensitive)", "-        if (aCaseInsensitive) {", "+        if (caseInsensitive) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37a6f494fe29bfa356df700bcbe684a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public List<DetailAST> getAllExceptionTypes(DetailAST aParentToken)", "signatureAfterChange": "     public List<DetailAST> getAllExceptionTypes(DetailAST parentToken)", "diff": ["-    public List<DetailAST> getAllExceptionTypes(DetailAST aParentToken)", "+    public List<DetailAST> getAllExceptionTypes(DetailAST parentToken)", "-        DetailAST currentNode = aParentToken.getFirstChild();", "+        DetailAST currentNode = parentToken.getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37ad31d00bccd511ff7b7a35dc08efad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd", "commitAfterChange": "083ab98e4a451f1a982db89616535d9c0388b50b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "         public SilentJava15Recognizer(TokenStream aLexer)", "signatureAfterChange": "         public SilentJavaRecognizer(TokenStream aLexer)", "diff": ["-        public SilentJava15Recognizer(TokenStream aLexer)", "+        public SilentJavaRecognizer(TokenStream aLexer)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37c298b684a0624a3b074ecd7b2a3015", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "commitAfterChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void doVisitToken(FullIdent ident, boolean isStatic,             boolean previous)", "signatureAfterChange": "     private void doVisitToken(FullIdent ident, boolean isStatic,             boolean previous)", "diff": ["-                        log(line, \"import.separation\", name);", "+                        log(line, MSG_SEPARATION, name);", "-                log(line, \"import.ordering\", name);", "+                log(line, MSG_ORDERING, name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37c2b7ba32300372cc8104e674feddae", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAst)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-    public void leaveToken(DetailAST aAst)", "+    public void leaveToken(DetailAST ast)", "-        if (aAst.getType() == TokenTypes.CLASS_DEF) {", "-            if (mClassDepth == 1) {", "-                mCurrentClass = null;", "+        if (ast.getType() == TokenTypes.CLASS_DEF) {", "+            if (classDepth == 1) {", "+                currentClass = null;", "-            mClassDepth--;", "+            classDepth--;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37d1cceb93398f99dd8a378ddfb02f94", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private DetailAST getFirstNodeInsideSwitchBlock(             DetailAST aBlock, DetailAST aVariable)", "signatureAfterChange": "     private DetailAST getFirstNodeInsideSwitchBlock(             DetailAST block, DetailAST variable)", "diff": ["-            DetailAST aBlock, DetailAST aVariable)", "+            DetailAST block, DetailAST variable)", "-        if (!isVariableInOperatorExpr(aBlock, aVariable)) {", "-            DetailAST currentNode = aBlock", "+        if (!isVariableInOperatorExpr(block, variable)) {", "+            DetailAST currentNode = block", "-                if (isChild(lastNodeInCaseGroup, aVariable)) {", "+                if (isChild(lastNodeInCaseGroup, variable)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3806049cefa528a11e36a7d0c48b3819", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractViolationReporter.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public final void setId(final String aId)", "signatureAfterChange": "     public final void setId(final String id)", "diff": ["-    public final void setId(final String aId)", "+    public final void setId(final String id)", "-        mId = aId;", "+        this.id = id;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3807111ddcc87c2a13ce8c7185d93861", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private List<JavadocTag> getValidTags(TextBlock aCmt,             JavadocUtils.JavadocTagType aTagType)", "signatureAfterChange": "     private List<JavadocTag> getValidTags(TextBlock cmt,             JavadocUtils.JavadocTagType tagType)", "diff": ["-    private List<JavadocTag> getValidTags(TextBlock aCmt,", "-            JavadocUtils.JavadocTagType aTagType)", "+    private List<JavadocTag> getValidTags(TextBlock cmt,", "+            JavadocUtils.JavadocTagType tagType)", "-        return JavadocUtils.getJavadocTags(aCmt, aTagType).getValidTags();", "+        return JavadocUtils.getJavadocTags(cmt, tagType).getValidTags();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "381ee86878921e3a5180cbe263ed4b17", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/PackageObjectFactoryTest.java", "commitBeforeChange": "ec0085226c3762e2d0d786ba1181e4e1d0496c0c", "commitAfterChange": "b8d0a65d5059b806bcf801db797232d4662d340d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public void testMakeObectFromList()         throws CheckstyleException", "signatureAfterChange": "          public void testMakeObectFromList()         throws CheckstyleException", "diff": ["-        PackageObjectFactory factory =", "+        final PackageObjectFactory factory =", "+        assertNotNull(factory);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38654444440a348568be8ee1ab8bc46b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractIllegalCheck.java", "commitBeforeChange": "4e821bf4898f59fc9a0c02cbcb4ac4082827f450", "commitAfterChange": "eb70f7062f2517a2f7a511090b31789a92c15a2e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected AbstractIllegalCheck(final String... initialNames)", "signatureAfterChange": "     protected AbstractIllegalCheck(final String... initialNames)", "diff": ["-        assert initialNames != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "387226ef202867cb065d74db339cffa2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setIgnoreEnhancedForColon(boolean aIgnore)", "signatureAfterChange": "     public void setIgnoreEnhancedForColon(boolean ignore)", "diff": ["-    public void setIgnoreEnhancedForColon(boolean aIgnore)", "+    public void setIgnoreEnhancedForColon(boolean ignore)", "-        mIgnoreEnhancedForColon = aIgnore;", "+        ignoreEnhancedForColon = ignore;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38aff200aa462f4ce163bbd3b24bf93d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private Set<String> processJavadoc(TextBlock aCmt)", "signatureAfterChange": "     private Set<String> processJavadoc(TextBlock cmt)", "diff": ["-    private Set<String> processJavadoc(TextBlock aCmt)", "+    private Set<String> processJavadoc(TextBlock cmt)", "-                : getValidTags(aCmt, JavadocUtils.JavadocTagType.INLINE))", "+                : getValidTags(cmt, JavadocUtils.JavadocTagType.INLINE))", "-                : getValidTags(aCmt, JavadocUtils.JavadocTagType.BLOCK))", "+                : getValidTags(cmt, JavadocUtils.JavadocTagType.BLOCK))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38b649b746a9d4d3b3c74b1f335308c9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public int getThrowsIndent()", "signatureAfterChange": "     public int getThrowsIndent()", "diff": ["-        return this.mThrowsIndentationAmount;", "+        return this.throwsIndentationAmount;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38da8aa11e8524963f0c6e1beb9c6d8c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private String getClassName(int startFrom, String importStr)", "signatureAfterChange": "     private String getClassName(int startFrom, String importPath)", "diff": ["-    private String getClassName(int startFrom, String importStr)", "+    private String getClassName(int startFrom, String importPath)", "-        String className = importStr;", "+        String className = importPath;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38e9c9b4a16f5295355a257ac9ecdb96", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheckTest.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testOpWrapEOL()         throws Exception", "signatureAfterChange": "      @Test     public void testOpWrapEol()         throws Exception", "diff": ["-    public void testOpWrapEOL()", "+    public void testOpWrapEol()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "390532d3264064cfe9ee83e6c2c08add", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/NonEmptyAtclauseDescriptionCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitJavadocToken(DetailNode aAst)", "signatureAfterChange": "      @Override     public void visitJavadocToken(DetailNode ast)", "diff": ["-    public void visitJavadocToken(DetailNode aAst)", "+    public void visitJavadocToken(DetailNode ast)", "-        if (isEmptyTag(aAst.getParent())) {", "-            log(aAst.getLineNumber(), \"non.empty.atclause\", aAst.getText());", "+        if (isEmptyTag(ast.getParent())) {", "+            log(ast.getLineNumber(), \"non.empty.atclause\", ast.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "394d048e2986aa0a32d765ae8e624189", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setAuthorFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setAuthorFormat(String format)         throws ConversionException", "diff": ["-    public void setAuthorFormat(String aFormat)", "+    public void setAuthorFormat(String format)", "-            mAuthorFormat = aFormat;", "-            mAuthorFormatPattern = Utils.getPattern(aFormat);", "+            authorFormat = format;", "+            authorFormatPattern = Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "394e41f50cf3c3e4fa9d64558acd43b0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     private List<ExceptionInfo> getThrows(DetailAST ast)", "signatureAfterChange": "     private List<ExceptionInfo> getThrows(DetailAST ast)", "diff": ["-                    final FullIdent fi = FullIdent.createFullIdent(child);", "-                    final ExceptionInfo ei = new ExceptionInfo(createClassInfo(new Token(fi),", "-                            getCurrentClassName()));", "-                    retVal.add(ei);", "+                    final FullIdent ident = FullIdent.createFullIdent(child);", "+                    final ExceptionInfo exceptionInfo = new ExceptionInfo(", "+                            createClassInfo(new Token(ident), getCurrentClassName()));", "+                    retVal.add(exceptionInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "395ab90985dfb5ed89cc98536aa9cb4a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/AllTests.java", "commitBeforeChange": "e71b877a424e1e6e247a2ef6825c742a94afd68f", "commitAfterChange": "6f4247181beca3530b5c2dc762d9c5c6a018a06c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public static Test suite()", "signatureAfterChange": "      public static Test suite()", "diff": ["-        suite.addTest(new TestSuite(ConfigSerializationTest.class));", "-        suite.addTest(new TestSuite(ConfigurationTest.class));", "+        suite.addTest(new TestSuite(GlobalPropertiesSerializationTest.class));", "+        suite.addTest(new TestSuite(GlobalPropertiesTest.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39726694765ed0f78a13524172ec2732", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     protected final IndentationCheck getIndentCheck()", "signatureAfterChange": "     protected final IndentationCheck getIndentCheck()", "diff": ["-        return mIndentCheck;", "+        return indentCheck;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39e8cd249b76d0e27cc62af52cd1e2f0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "b43c32ad0a3674fcda782d2e28d0975b72382470", "commitAfterChange": "2071f9b5421f853e8515f309b2874399c895c43a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private static boolean isCommentConsistent(String comment)", "signatureAfterChange": "      private static boolean isCommentConsistent(String comment)", "diff": ["-        throw new IllegalArgumentException();", "+        throw new IllegalStateException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a0adecddb75a74284da721b1c15c631", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheck.java", "commitBeforeChange": "dd6b080a16e0933b3d19305f84ba01c8893839f3", "commitAfterChange": "9ea33d0720a75c067ad5264978ebe0ba4c2f3a06", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public int[] getAcceptableTokens()", "signatureAfterChange": "      @Override     public int[] getAcceptableTokens()", "diff": ["+            TokenTypes.LITERAL_SYNCHRONIZED,", "-            TokenTypes.LITERAL_SWITCH,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a146f95e2d06f1a98bb6100416a4b2c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void leaveMemberDef(DetailAST aAST)", "signatureAfterChange": "     private void leaveMemberDef(DetailAST ast)", "diff": ["-    private void leaveMemberDef(DetailAST aAST)", "+    private void leaveMemberDef(DetailAST ast)", "-        final int count = mContext.getCount();", "+        final int count = context.getCount();", "-            log(aAST.getLineNo(), aAST.getColumnNo(),", "+            log(ast.getLineNo(), ast.getColumnNo(),", "-        mContext = mContextStack.pop();", "+        context = contextStack.pop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a18dd14970ed557eb0f612ef91da921", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "         public String getImportGroup()", "signatureAfterChange": "         public String getImportGroup()", "diff": ["-            return mImportGroup;", "+            return importGroup;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a3f797dcf76daf5c14cd52ed859c852", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "8dc1a8ab994076f3fc10bab9248a2439ee54b443", "commitAfterChange": "21f0b07bd031f022d14106150af66ceddb4c06b8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void addFilter(Filter aFilter)", "signatureAfterChange": "     public void addFilter(Filter aFilter)", "diff": ["-        mFilters.add(aFilter);", "-    }", "+        mFilterChain.addFilter(aFilter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a8af59d752f0c2f655aaa4acdd85f65", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void countTokens(AST aAST, int aDepth)", "signatureAfterChange": "     private void countTokens(AST ast, int depth)", "diff": ["-    private void countTokens(AST aAST, int aDepth)", "+    private void countTokens(AST ast, int depth)", "-        if (aDepth <= mMaximumDepth) {", "+        if (depth <= maximumDepth) {", "-            if (aDepth >= mMinimumDepth) {", "-                final int type = aAST.getType();", "-                if (type <= mCounts.length) {", "-                    mCounts[type - 1]++;", "+            if (depth >= minimumDepth) {", "+                final int type = ast.getType();", "+                if (type <= counts.length) {", "+                    counts[type - 1]++;", "-            AST child = aAST.getFirstChild();", "-            final int nextDepth = aDepth + 1;", "+            AST child = ast.getFirstChild();", "+            final int nextDepth = depth + 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a91af2938341eddfa5919882baf493f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public IndentLevel getSuggestedChildLevel(AbstractExpressionHandler child)", "signatureAfterChange": "      @Override     public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child)", "diff": ["-    public IndentLevel getSuggestedChildLevel(AbstractExpressionHandler child) {", "+    public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {", "-                    getParent().getSuggestedChildLevel(this),", "+                    getParent().getSuggestedChildIndent(this),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ab101e91de8a19799e78c0eb69bb710", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "66325cbd72882454193765322efa716537ce9c93", "commitAfterChange": "33f75977205625bc5f9620a2c63e16a11f9663a5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static ModuleFactory loadModuleFactory(ClassLoader aClassLoader)         throws CheckstyleException", "signatureAfterChange": "     public static ModuleFactory loadModuleFactory(ClassLoader aClassLoader)         throws CheckstyleException", "diff": ["-        return loadModuleFactory(source, \"default package names\", aClassLoader);", "+        return loadModuleFactory(source, \"default package names\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ab573141ca07ca18fa6f3d32a4559f7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentLevel.java", "commitBeforeChange": "1ca93bdf66b630e58d979ad2aa40f02e678db5cf", "commitAfterChange": "bc36fe40fcfb51e720dc531a824cd6664ccc4c8b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public boolean accept(int aIndent)", "signatureAfterChange": "     public boolean accept(int aIndent)", "diff": ["-        return (mLevels.contains(aIndent));", "+        return mLevels.get(aIndent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ad32b7cfa3efed80a1251770caac9a4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheckTest.java", "commitBeforeChange": "5dffb5a301b2605c730d1de3f312ba4a7f95355e", "commitAfterChange": "4d8d047f465f9eb101390da63ee62a735fbedba5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testLambdExpression() throws Exception", "signatureAfterChange": "      @Test     public void testLambdaExpression() throws Exception", "diff": ["-    public void testLambdExpression() throws Exception {", "+    public void testLambdaExpression() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3aeba004368218fd287e70bf0344f203", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public final IndentLevel getLevel()", "signatureAfterChange": "     public final IndentLevel getLevel()", "diff": ["-        if (mLevel == null) {", "-            mLevel = getLevelImpl();", "+        if (level == null) {", "+            level = getLevelImpl();", "-        return mLevel;", "+        return level;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b1323ea8850becfd725532346102302", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public String normalize(String aPath)", "signatureAfterChange": "     public String normalize(String normalizingPath)", "diff": ["-    public String normalize(String aPath)", "+    public String normalize(String normalizingPath)", "-        if (aPath == null) {", "-            return aPath;", "+        if (normalizingPath == null) {", "+            return normalizingPath;", "-        String path = aPath.replace('/', File.separatorChar).replace('\\\\',", "+        String path = normalizingPath.replace('/', File.separatorChar).replace('\\\\',", "-                            + aPath);", "+                            + path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b1641cb982536c41683e98c0344ef63", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setIgnoreOverriddenMethods(boolean aIgnoreOverriddenMethods)", "signatureAfterChange": "     public void setIgnoreOverriddenMethods(boolean ignoreOverriddenMethods)", "diff": ["-    public void setIgnoreOverriddenMethods(boolean aIgnoreOverriddenMethods)", "+    public void setIgnoreOverriddenMethods(boolean ignoreOverriddenMethods)", "-        this.mIgnoreOverriddenMethods = aIgnoreOverriddenMethods;", "+        this.ignoreOverriddenMethods = ignoreOverriddenMethods;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b1cc3092d6b89cda79f2b49b3ff8fa4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/comments/CommentsTest.java", "commitBeforeChange": "2057a77c3a524b86dff382ac8abdca71dd03764a", "commitAfterChange": "03f41815802b1ce6a0ca906c9f28c5a98344a932", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private static DetailAST buildInput_2()", "signatureAfterChange": "     private static DetailAST buildInput2()", "diff": ["-    private static DetailAST buildInput_2() {", "+    private static DetailAST buildInput2() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b7f2062b15294c55f941132bc425616", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/javadoc/InputSetterGetter.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public int getCost2()", "signatureAfterChange": "      public int getCost2()", "diff": ["-        x = 4;", "+    \tmNumber = 4;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b84b998214c9e4bd72fceca05c22267", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public final void setAllowEscapesForControlCharacters(boolean aAllow)", "signatureAfterChange": "     public final void setAllowEscapesForControlCharacters(boolean allow)", "diff": ["-    public final void setAllowEscapesForControlCharacters(boolean aAllow)", "+    public final void setAllowEscapesForControlCharacters(boolean allow)", "-        mAllowEscapesForControlCharacters = aAllow;", "+        allowEscapesForControlCharacters = allow;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3baf711cc7aa3bb051e4ede34b651555", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ForHandler.java", "commitBeforeChange": "0eeb5e4fd6aa2c4b8a559e55384bba67d7d695c7", "commitAfterChange": "092e1f69476fc715852035a25b23a11804183a23", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private void checkForParams()", "signatureAfterChange": "     private void checkForParams()", "diff": ["-            getLevel() + getIndentCheck().getIndentationAmount());", "+            getLevel() + getIndentCheck().getBasicOffset());", "-            getLevel() + getIndentCheck().getIndentationAmount());", "+            getLevel() + getIndentCheck().getBasicOffset());", "-            getLevel() + getIndentCheck().getIndentationAmount());", "+            getLevel() + getIndentCheck().getBasicOffset());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bc071fd0f3340fe80ed2ec2b5eb6607", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "e7778ef9e22a12ce1db913b46c5c39e743b2354f", "commitAfterChange": "db5ec5f654316e862f7b5d3f5faa897ce0ca2352", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public boolean branchContains(int aType)", "signatureAfterChange": "     public boolean branchContains(int aType)", "diff": ["-        return Arrays.binarySearch(getBranchTokenTypes(), aType) >= 0;", "+        return getBranchTokenTypes().get(aType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bca04d9b16f015d298d6a72c3db8559", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "552b917ddbaaf8767f50cc103e8feb4127037928", "commitAfterChange": "3d8c8ae213afba764acb9758dc89d8a613f4ea66", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void testSimple()         throws Exception", "signatureAfterChange": "      public void testSimple()         throws Exception", "diff": ["-            filepath + \":42: ',' needs to be followed by whitespace.\",", "+            filepath + \":42:40: ',' needs to be followed by whitespace.\",", "-            filepath + \":71: ',' needs to be followed by whitespace.\",", "+            filepath + \":71:30: ',' needs to be followed by whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c1af047937f5b8703265e858e7489ab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Comment.java", "commitBeforeChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "commitAfterChange": "abfc952fd0ed88f6246b1d969a8a980ea63f0bd6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public int getEndColNo()", "signatureAfterChange": "      @Override     public int getEndColNo()", "diff": ["-        return lastCol;", "+        return endColNo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c1ed149cf07e03d864feff99d2b39e8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void checkParagraphTag(DetailNode tag)", "signatureAfterChange": "     private void checkParagraphTag(DetailNode tag)", "diff": ["-        if (isFirstPtagraph(tag)) {", "+        if (isFirstParagraph(tag)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c1f8285412422bb0168d5a3d62473ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AnnotationUtility.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static DetailAST getAnnotationHolder(DetailAST aAST)", "signatureAfterChange": "     public static DetailAST getAnnotationHolder(DetailAST ast)", "diff": ["-    public static DetailAST getAnnotationHolder(DetailAST aAST)", "+    public static DetailAST getAnnotationHolder(DetailAST ast)", "-        if (aAST == null) {", "-            throw new NullPointerException(\"the aAST is null\");", "+        if (ast == null) {", "+            throw new NullPointerException(\"the ast is null\");", "-        if (aAST.getType() == TokenTypes.ENUM_CONSTANT_DEF", "-            || aAST.getType() == TokenTypes.PACKAGE_DEF)", "+        if (ast.getType() == TokenTypes.ENUM_CONSTANT_DEF", "+            || ast.getType() == TokenTypes.PACKAGE_DEF)", "-            annotationHolder = aAST.findFirstToken(TokenTypes.ANNOTATIONS);", "+            annotationHolder = ast.findFirstToken(TokenTypes.ANNOTATIONS);", "-            annotationHolder = aAST.findFirstToken(TokenTypes.MODIFIERS);", "+            annotationHolder = ast.findFirstToken(TokenTypes.MODIFIERS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c309493186dc5456fcc725f8a7f1d68", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "91aa6578321ceb08f4b0d715f994b7a9f4abe9d7", "commitAfterChange": "3430721be200cbe2acf55c3b3d52a528638123b3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private static Map arrangePropertyFiles(Set propFiles)", "signatureAfterChange": "     private static Map arrangePropertyFiles(Set aPropFiles)", "diff": ["-    private static Map arrangePropertyFiles(Set propFiles)", "+    private static Map arrangePropertyFiles(Set aPropFiles)", "-        for (Iterator iterator = propFiles.iterator(); iterator.hasNext();) {", "+        for (Iterator iterator = aPropFiles.iterator(); iterator.hasNext();) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c800acddd625fb4fe1cb844f450c274", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java", "commitBeforeChange": "13b7c634337e38d20daa92ca9d5e069a2e72ec55", "commitAfterChange": "2e4762f1716c8d12c9652aad68cb4558181bb60c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      protected DefaultConfiguration createCheckerConfig(Configuration aConfig)", "signatureAfterChange": "      protected DefaultConfiguration createCheckerConfig(Configuration aConfig)", "diff": ["-        twConf.addAttribute(\"charset\", \"iso-8859-1\");", "+        dc.addAttribute(\"charset\", \"iso-8859-1\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cc2f1b205467e34fa2af9de71937d16", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public LineColumn lineColumn(int pos)", "signatureAfterChange": "     public LineColumn lineColumn(int pos)", "diff": ["-        final int[] lineBreaks = findLineBreaks();", "-        int lineNo = Arrays.binarySearch(lineBreaks, pos);", "+        final int[] lineBreakPositions = findLineBreaks();", "+        int lineNo = Arrays.binarySearch(lineBreakPositions, pos);", "-        final int startOfLine = lineBreaks[lineNo];", "+        final int startOfLine = lineBreakPositions[lineNo];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ce0354c3bbcec765987f76c74a095f3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java", "commitBeforeChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "commitAfterChange": "5d698f4a58b66958b13cb04735fefa3f4fa4b9e7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-            log(1, \"header.missing\");", "+            log(1, MSG_MISSING);", "-                    log(i + 1, \"header.mismatch\", getHeaderLines().get(i));", "+                    log(i + 1, MSG_MISMATCH, getHeaderLines().get(i));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cef0d25ebbdc30faea7ad92ace1f944", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void checkCheckClosingParens(final DetailAST aAST)", "signatureAfterChange": "     private void checkCheckClosingParens(final DetailAST ast)", "diff": ["-    private void checkCheckClosingParens(final DetailAST aAST)", "+    private void checkCheckClosingParens(final DetailAST ast)", "-        if (ClosingParens.IGNORE.equals(this.mParens)", "-            || this.mParens == null)", "+        if (ClosingParens.IGNORE.equals(this.parens)", "+            || this.parens == null)", "-        final DetailAST paren = aAST.getLastChild();", "+        final DetailAST paren = ast.getLastChild();", "-        if (ClosingParens.ALWAYS.equals(this.mParens)", "+        if (ClosingParens.ALWAYS.equals(this.parens)", "-            this.log(aAST.getLineNo(), MSG_KEY_ANNOTATION_PARENS_MISSING);", "+            this.log(ast.getLineNo(), MSG_KEY_ANNOTATION_PARENS_MISSING);", "-        else if (ClosingParens.NEVER.equals(this.mParens)", "-            && !aAST.branchContains(TokenTypes.EXPR)", "-            && !aAST.branchContains(TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR)", "-            && !aAST.branchContains(TokenTypes.ANNOTATION_ARRAY_INIT)", "+        else if (ClosingParens.NEVER.equals(this.parens)", "+            && !ast.branchContains(TokenTypes.EXPR)", "+            && !ast.branchContains(TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR)", "+            && !ast.branchContains(TokenTypes.ANNOTATION_ARRAY_INIT)", "-            this.log(aAST.getLineNo(), MSG_KEY_ANNOTATION_PARENS_PRESENT);", "+            this.log(ast.getLineNo(), MSG_KEY_ANNOTATION_PARENS_PRESENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d03e8269e61b90e90971719128bfb76", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "25badc206f9b8fdce3391992cec951235250a3d2", "commitAfterChange": "aab0718232e060bd8f289770ab81780b3a2705a2", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     private void checkThrowsTags(List<JavadocTag> tags,             List<ExceptionInfo> throwsList, boolean reportExpectedTags)", "signatureAfterChange": "     private void checkThrowsTags(List<JavadocTag> tags,             List<ExceptionInfo> throwsList, boolean reportExpectedTags)", "diff": ["-            for (ExceptionInfo ei : throwsList) {", "-                if (!ei.isFound()) {", "-                    final Token token = ei.getName();", "+            for (ExceptionInfo exceptionInfo : throwsList) {", "+                if (!exceptionInfo.isFound()) {", "+                    final Token token = exceptionInfo.getName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d05452560d0c6bac84186d94de32d1e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocNodeImpl.java", "commitBeforeChange": "ca15d3d758a857dffcfd8fb7a739b32caef797e1", "commitAfterChange": "e29dc4d398c136e8ec5a08e93bde7b805153835d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public DetailNode[] getChildren()", "signatureAfterChange": "      @Override     public DetailNode[] getChildren()", "diff": ["-            return JavadocUtils.EMPTY_DETAIL_NODE_ARRAY;", "+            return EMPTY_DETAIL_NODE_ARRAY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d63c49ec9a0a3ccdac5a06a564452bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "         private String expandFromComment(             String aComment,             String aString,             Pattern aRegexp)", "signatureAfterChange": "         private String expandFromCoont(             String coont,             String string,             Pattern regexp)", "diff": ["-        private String expandFromComment(", "-            String aComment,", "-            String aString,", "-            Pattern aRegexp)", "+        private String expandFromCoont(", "+            String coont,", "+            String string,", "+            Pattern regexp)", "-            final Matcher matcher = aRegexp.matcher(aComment);", "+            final Matcher matcher = regexp.matcher(coont);", "-                return aString;", "+                return string;", "-            String result = aString;", "+            String result = string;", "-                // $n expands comment match like in Pattern.subst().", "+                // $n expands coont match like in Pattern.subst()."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dac50ed6e80bffbb1351d93de4d93eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "41758923b8e4dcb9aae1ee967407826bda38d97b", "commitAfterChange": "e464c231eccec72f964131d9aeb5e49982c4b3bb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void checkLinesIndent(LineSet aLines,                                   IndentLevel aIndentLevel,                                   boolean aFirstLineMatches,                                   int aFirstLine)", "signatureAfterChange": "     private void checkLinesIndent(LineSet aLines,                                   IndentLevel aIndentLevel,                                   boolean aFirstLineMatches,                                   int aFirstLine)", "diff": ["-        // TODO: shouldIncreseIndent() is a hack, should be removed", "+        // TODO: shouldIncreaseIndent() is a hack, should be removed", "-            || (aFirstLine > mMainAst.getLineNo() && shouldIncraeseIndent()))", "+            || (aFirstLine > mMainAst.getLineNo() && shouldIncreaseIndent()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3db966387e5b9e0f103653213f13a4a0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "bf529ef600fa9ef2034d0412c198b2121f2b94f2", "commitAfterChange": "ce196814d857a4244a80c51d5151cc35e90b6749", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "          @Override         @SuppressWarnings(\"unchecked\")         public void drop(DropTargetDropEvent evt)", "signatureAfterChange": "          @Override         @SuppressWarnings(\"unchecked\")         public void drop(DropTargetDropEvent event)", "diff": ["-        public void drop(DropTargetDropEvent evt) {", "+        public void drop(DropTargetDropEvent event) {", "-                final Transferable transferable = evt.getTransferable();", "+                final Transferable transferable = event.getTransferable();", "-                    evt.acceptDrop(DnDConstants.ACTION_COPY);", "+                    event.acceptDrop(DnDConstants.ACTION_COPY);", "-                    evt.getDropTargetContext().dropComplete(true);", "+                    event.getDropTargetContext().dropComplete(true);", "-                    evt.rejectDrop();", "+                    event.rejectDrop();", "-                evt.rejectDrop();", "+                event.rejectDrop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dbf761601e2fb318f8ffa85c96f4a72", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "a13ebd482ce5dd891ba99d4c22a7cd5ff7d8e2dc", "commitAfterChange": "dad4fa599aa3570980fcaff4cb5f37941847a7a1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @SuppressWarnings(\"deprecation\")     @Test     public void testSetters() throws Exception", "signatureAfterChange": "      @SuppressWarnings(\"deprecation\")     @Test     public void testSetters() throws Exception", "diff": ["-        final Checker c = new Checker();", "-        c.setClassLoader(getClass().getClassLoader());", "-        c.setClassloader(getClass().getClassLoader());", "-        c.setBasedir(\"some\");", "-        c.setSeverity(\"ignore\");", "+        final Checker checker = new Checker();", "+        checker.setClassLoader(getClass().getClassLoader());", "+        checker.setClassloader(getClass().getClassLoader());", "+        checker.setBasedir(\"some\");", "+        checker.setSeverity(\"ignore\");", "-        c.setModuleFactory(factory);", "+        checker.setModuleFactory(factory);", "-        c.setFileExtensions((String[]) null);", "-        c.setFileExtensions(\".java\", \"xml\");", "+        checker.setFileExtensions((String[]) null);", "+        checker.setFileExtensions(\".java\", \"xml\");", "-            c.setCharset(\"UNKNOW-CHARSET\");", "+            checker.setCharset(\"UNKNOW-CHARSET\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dc0680f357966c914d1780d51afef21", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "ae170e45751032a7f6f1a5e1c3b1cab4ee970424", "commitAfterChange": "60eacf91e616d2b6eec8c3d66a72d694da368cec", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "         private boolean isSignificant(String className)", "signatureAfterChange": "         private boolean isSignificant(String className)", "diff": ["-            return className.length() > 0", "-                    && !excludedClasses.contains(className)", "+            return !excludedClasses.contains(className)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dd49007c3eab1b553e4ecf026dd9c19", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "ca89807d485f512061d7a7138aa91b454d85d466", "commitAfterChange": "ecd7ee879aa6cbc51fcb41093dbf42843256184f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void processIDENT(DetailAST aAST)", "signatureAfterChange": "     private void processIDENT(DetailAST aAST)", "diff": ["-            if (mCheckMethods && isClassField(aAST.getText())) {", "+            if (mCheckMethods && isClassMethod(aAST.getText())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ddd91b16862c77fc4e67e058817ab1f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private int compare(String aString1, String aString2,             boolean aCaseSensitive)", "signatureAfterChange": "     private int compare(String string1, String string2,             boolean caseSensitive)", "diff": ["-    private int compare(String aString1, String aString2,", "-            boolean aCaseSensitive)", "+    private int compare(String string1, String string2,", "+            boolean caseSensitive)", "-        if (aCaseSensitive) {", "-            return aString1.compareTo(aString2);", "+        if (caseSensitive) {", "+            return string1.compareTo(string2);", "-        return aString1.compareToIgnoreCase(aString2);", "+        return string1.compareToIgnoreCase(string2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e15afaebac48ccad025667064fece3d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private Entry<DetailAST, Integer> calculateDistanceBetweenScopes(             DetailAST aAST, DetailAST aVariable)", "signatureAfterChange": "     private Entry<DetailAST, Integer> calculateDistanceBetweenScopes(             DetailAST ast, DetailAST variable)", "diff": ["-            DetailAST aAST, DetailAST aVariable)", "+            DetailAST ast, DetailAST variable)", "-        DetailAST currentScopeAst = aAST;", "+        DetailAST currentScopeAst = ast;", "-                    if (isChild(currentStatementAst, aVariable)) {", "+                    if (isChild(currentStatementAst, variable)) {", "-                            blockWithVariableUsage, aVariable);", "+                            blockWithVariableUsage, variable);", "-                            blockWithVariableUsage, aVariable);", "+                            blockWithVariableUsage, variable);", "-                            blockWithVariableUsage, aVariable);", "+                            blockWithVariableUsage, variable);", "-                        getFirstNodeInsideTryCatchFinallyBlocks(blockWithVariableUsage, aVariable);", "+                        getFirstNodeInsideTryCatchFinallyBlocks(blockWithVariableUsage, variable);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e3cdc99696d395d4d2c3f4e07cbe529", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DetectorOptions setFormat(String aFormat)", "signatureAfterChange": "     public DetectorOptions setFormat(String format)", "diff": ["-    public DetectorOptions setFormat(String aFormat)", "+    public DetectorOptions setFormat(String format)", "-        mFormat = aFormat;", "+        this.format = format;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e5920ccb2ccc63d6002ced250adfad1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DetailAST findLastNode(DetailAST aFirstNode)", "signatureAfterChange": "     public DetailAST findLastNode(DetailAST firstNode)", "diff": ["-    public DetailAST findLastNode(DetailAST aFirstNode)", "+    public DetailAST findLastNode(DetailAST firstNode)", "-        return aFirstNode.getLastChild().getPreviousSibling();", "+        return firstNode.getLastChild().getPreviousSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e738ba22dccf73d6afa33b932b30f05", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setClassLoader(ClassLoader aClassLoader)", "signatureAfterChange": "     public void setClassLoader(ClassLoader classLoader)", "diff": ["-    /** @param aClassLoader class loader to resolve classes with. */", "-    public void setClassLoader(ClassLoader aClassLoader)", "+    /** @param classLoader class loader to resolve classes with. */", "+    public void setClassLoader(ClassLoader classLoader)", "-        mClassLoader = aClassLoader;", "+        this.classLoader = classLoader;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e8d4048411c6b26c1854c56eedb310b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "3c7c3cbe88a2bec0962702305db4f2b05117501c", "commitAfterChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void setCheckFirstSentence(boolean flag)", "signatureAfterChange": "     public void setCheckFirstSentence(boolean flag)", "diff": ["-        checkFirstSentence = flag;", "+        checkingFirstSentence = flag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e8ea7e0fd6ff6eb2b135c654c18053a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setAllowedAnnotations(String aAnnotations)", "signatureAfterChange": "     public void setAllowedAnnotations(String userAnnotations)", "diff": ["-    public void setAllowedAnnotations(String aAnnotations)", "+    public void setAllowedAnnotations(String userAnnotations)", "-        for (String annotation : aAnnotations.split(\", \")) {", "+        for (String annotation : userAnnotations.split(\", \")) {", "-        mAllowedAnnotations = annotations;", "+        allowedAnnotations = annotations;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e904db988f072a1e1497ffe07141184", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/SeverityLevelCounterTest.java", "commitBeforeChange": "b43c32ad0a3674fcda782d2e28d0975b72382470", "commitAfterChange": "2071f9b5421f853e8515f309b2874399c895c43a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAddExceptionWarning()", "signatureAfterChange": "      @Test     public void testAddExceptionWarning()", "diff": ["-        counter.addException(event, new IllegalStateException());", "+        counter.addException(event, new IllegalStateException(\"Test IllegalStateException\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e9341d4c4d35d71789324a60ef707a6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "ed3e6a24280557d3142d1feb18363e7f3b7bfc3f", "commitAfterChange": "62e2b65b9e6d948a39006aaa9a88e61e3ed0df53", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Configuration()         throws IllegalStateException", "signatureAfterChange": "     public Configuration()         throws IllegalStateException", "diff": ["+            setIgnoreLineLengthPat(IGNORE_LINE_LENGTH_PATTERN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e972c3e1243e5aee2505cb803be9ce8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setForbiddenSummaryFragments(String aPattern)", "signatureAfterChange": "     public void setForbiddenSummaryFragments(String pattern)", "diff": ["-    public void setForbiddenSummaryFragments(String aPattern)", "+    public void setForbiddenSummaryFragments(String pattern)", "-        mForbiddenSummaryFragments = Utils.createPattern(aPattern);", "+        forbiddenSummaryFragments = Utils.createPattern(pattern);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ea579fcffd879844473f30a926693d5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(final DetailAST methodCall)", "signatureAfterChange": "      @Override     public void visitToken(final DetailAST methodCall)", "diff": ["-                \"equals.avoid.null\");", "+                MSG_EQUALS_AVOID_NULL);", "-                \"equalsIgnoreCase.avoid.null\");", "+                MSG_EQUALS_IGNORE_CASE_AVOID_NULL);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ea8fd0c337642f69b6cac74f3dbd71b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheck.java", "commitBeforeChange": "95604498dadc98608c4294760a8f74c6d2ca2c68", "commitAfterChange": "b43c32ad0a3674fcda782d2e28d0975b72382470", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST ast)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-    public void beginTree(DetailAST ast) {", "+    public void beginTree(DetailAST rootAST) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3eaa8d36a91b150508190935a81a9596", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PropertiesExpander.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Override     public String resolve(String aPropertyName)", "signatureAfterChange": "     @Override     public String resolve(String propertyName)", "diff": ["-    public String resolve(String aPropertyName)", "+    public String resolve(String propertyName)", "-        return mProperties.getProperty(aPropertyName);", "+        return properties.getProperty(propertyName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ec54004b74ef9878c93ab39926e24f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void startElement(String aNamespaceURI,                              String aLocalName,                              String aQName,                              Attributes aAtts)         throws SAXException", "signatureAfterChange": "      @Override     public void startElement(String namespaceURI,                              String locqName,                              String qName,                              Attributes atts)         throws SAXException", "diff": ["-    public void startElement(String aNamespaceURI,", "-                             String aLocalName,", "-                             String aQName,", "-                             Attributes aAtts)", "+    public void startElement(String namespaceURI,", "+                             String locqName,", "+                             String qName,", "+                             Attributes atts)", "-        if (\"suppress\".equals(aQName)) {", "+        if (\"suppress\".equals(qName)) {", "-            final String files = aAtts.getValue(\"files\");", "+            final String files = atts.getValue(\"files\");", "-            final String checks = aAtts.getValue(\"checks\");", "-            final String modId = aAtts.getValue(\"id\");", "+            final String checks = atts.getValue(\"checks\");", "+            final String modId = atts.getValue(\"id\");", "-            final String lines = aAtts.getValue(\"lines\");", "+            final String lines = atts.getValue(\"lines\");", "-            final String columns = aAtts.getValue(\"columns\");", "+            final String columns = atts.getValue(\"columns\");", "-            mFilterChain.addFilter(suppress);", "+            filterChain.addFilter(suppress);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ef35ed32356ecedd39c10221cabf81d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java", "commitBeforeChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "commitAfterChange": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void checkClassContructorModifiers(DetailAST classCtorAst)", "signatureAfterChange": "     private void checkClassConstructorModifiers(DetailAST classCtorAst)", "diff": ["-    private void checkClassContructorModifiers(DetailAST classCtorAst) {", "+    private void checkClassConstructorModifiers(DetailAST classCtorAst) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3efa421bac316008bf853a8ce381c842", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/TranslationCheckTest.java", "commitBeforeChange": "dc5b2532bed4c868b8f74d9d37328eedc7dc066e", "commitAfterChange": "ceb894bc7a7a2dcb92d3ee4ba064110b2ffcf2f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testTranslation()          throws Exception", "signatureAfterChange": "      @Test     public void testTranslation() throws Exception", "diff": ["-    public void testTranslation()", "-         throws Exception", "+    public void testTranslation() throws Exception", "-            \"0: Key 'only.english' missing.\"", "+            \"0: Key 'only.english' missing.\",", "-            new File(getPath(\"messages.properties\"))", "+            new File(getPath(\"messages.properties\")),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f17f1def944cfa1b58d2e0dd82cfb91", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "595d070db0215c3cf0555d5074719cffc673c890", "commitAfterChange": "868d96b45918b5bb0db4b80bdf5b70f5202d6590", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void startSemi(DetailAST aAst)", "signatureAfterChange": "     private void visitSemi(DetailAST aAst)", "diff": ["-    private void startSemi(DetailAST aAst)", "+    private void visitSemi(DetailAST aAst)", "-        mExprDepth--;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f1c1801b8dbde5e692c8cc1b3c403ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "4b754899a4f2cec3d241adcddadc438cbfeb8e1b", "commitAfterChange": "75f0ef8a42d405d5a4e95cf931c019ef1d09696e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     void reset()", "signatureAfterChange": "     void reset()", "diff": ["-        mInInterface.clear();", "-        mMethodBlockLevel = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f24ba49987d43410547e3a543c239bf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java", "commitBeforeChange": "ed12c276a8adde2ce44b9834b413560476110f0e", "commitAfterChange": "66d6361c27586d58ba478b0223e60c6f1c5aa7b4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setRowHeight(int rowHeight)", "signatureAfterChange": "     public void setRowHeight(int newRowHeight)", "diff": ["-    public void setRowHeight(int rowHeight)", "+    public void setRowHeight(int newRowHeight)", "-        super.setRowHeight(rowHeight);", "-        if (tree != null && tree.getRowHeight() != rowHeight) {", "+        super.setRowHeight(newRowHeight);", "+        if (tree != null && tree.getRowHeight() != newRowHeight) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f25481550975e904f9ee2c16f51774e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java", "commitBeforeChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "commitAfterChange": "29027109bf962f47b6a6000fdca69b5679ce4b43", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean isMultiLine(int aLineNo)", "signatureAfterChange": "     private boolean isMultiLine(int lineNo)", "diff": ["-    private boolean isMultiLine(int aLineNo)", "+    private boolean isMultiLine(int lineNo)", "-        return (Arrays.binarySearch(mMultiLines, aLineNo + 1) >= 0);", "+        return (Arrays.binarySearch(multiLines, lineNo + 1) >= 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f49eeca1047f46e4b7db38fb97a3da2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "71c16c55c33b368bf373c60a6daafdd69b0b1abc", "commitAfterChange": "b2a80ceca30df26e628d6f343dbc49d7b6481409", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static boolean isMagicNumberExists(DetailAST ast, DetailAST constantDefAST)", "signatureAfterChange": "     private boolean isMagicNumberExists(DetailAST ast, DetailAST constantDefAST)", "diff": ["-    private static boolean isMagicNumberExists(DetailAST ast, DetailAST constantDefAST) {", "+    private boolean isMagicNumberExists(DetailAST ast, DetailAST constantDefAST) {", "-            if (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) < 0) {", "+            if (Arrays.binarySearch(constantWaiverParentToken, type) < 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f56a33aa38796645968a738f95d99ad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "f464a296056168259e1f84333507fcb797d93cdc", "commitAfterChange": "3ded17ac3d61b4284299319f5f60ee220154fded", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testWhitespaceCastParenOff()         throws Exception", "signatureAfterChange": "      public void testWhitespaceCastParenOff()         throws Exception", "diff": ["-        mConfig.setIgnoreParenWhitespace(true);", "+        mConfig.setParenPadOption(PadOption.IGNORE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f6c61cc820c110b4612784c2144d199", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/LineLengthCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setIgnorePattern(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setIgnorePattern(String format)         throws ConversionException", "diff": ["-    public void setIgnorePattern(String aFormat)", "+    public void setIgnorePattern(String format)", "-            mIgnorePattern = Utils.getPattern(aFormat);", "+            ignorePattern = Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f82a4730c65b969689f01ef4f29cc9f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java", "commitBeforeChange": "c2d3932843e70e4bb5df7161800aca248f9af778", "commitAfterChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public Object convert(Class aType, Object aValue)         throws ConversionException", "signatureAfterChange": "     public Object convert(Class aType, Object aValue)         throws ConversionException", "diff": ["-        if (sModel.getClass() == aValue.getClass()) {", "+        if (MODEL.getClass() == aValue.getClass()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f9309cb49a081e6702e6a09d6424dd3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "         public Tag(int line, int column, String text, boolean on, SuppressionCommentFilter filter)", "signatureAfterChange": "         public Tag(int line, int column, String text, boolean reportingOn,                    SuppressionCommentFilter filter)", "diff": ["-        public Tag(int line, int column, String text, boolean on, SuppressionCommentFilter filter) {", "+        public Tag(int line, int column, String text, boolean reportingOn,", "+                   SuppressionCommentFilter filter) {", "-            this.on = on;", "+            this.reportingOn = reportingOn;", "-                if (on) {", "+                if (reportingOn) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fa2baec2729c5c5a29385553509a4f6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void leaveClassDef()", "signatureAfterChange": "     private void leaveClassDef()", "diff": ["-        mContext.checkCoupling();", "-        mContext = mContextStack.pop();", "+        context.checkCoupling();", "+        context = contextStack.pop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3faeff9819f3095e84266dc4cfa5610f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void checkHtml(final DetailAST ast, final TextBlock comment)", "signatureAfterChange": "     private void checkHtml(final DetailAST ast, final TextBlock comment)", "diff": ["-                log(tag.getLineno(), \"javadoc.incompleteTag\",", "+                log(tag.getLineno(), INCOMPLETE_TAG,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fbbc0414ebe4451185bf7cdc1927d76", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void setIgnoreFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setIgnoreFormat(String format)         throws ConversionException", "diff": ["-    public void setIgnoreFormat(String aFormat)", "+    public void setIgnoreFormat(String format)", "-            mRegexp = Utils.getPattern(aFormat);", "+            regexp = Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fbbee3d5afca50cf0212642597c9af4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Check.java", "commitBeforeChange": "26513d52336c42432ee21565b253297ba4174530", "commitAfterChange": "efac6bf023bc277e94d7436ae95f9be8836a2508", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public int[] getRequiredTokens()", "signatureAfterChange": "     public abstract int[] getRequiredTokens();", "diff": ["-    public int[] getRequiredTokens() {", "-        return ArrayUtils.EMPTY_INT_ARRAY;", "-    }", "+    public abstract int[] getRequiredTokens();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fc90505373433bff70ac4ec558c6dc5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "91aa6578321ceb08f4b0d715f994b7a9f4abe9d7", "commitAfterChange": "3430721be200cbe2acf55c3b3d52a528638123b3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void process(File[] files)", "signatureAfterChange": "     public void process(File[] aFiles)", "diff": ["-    public void process(File[] files)", "+    public void process(File[] aFiles)", "-        Set dirs = getParentDirs(files);", "+        Set dirs = getParentDirs(aFiles);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fcac912c3213b3f2e5d0437725ca5b3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public DetectorOptions setMinimum(int aMinimum)", "signatureAfterChange": "     public DetectorOptions setMinimum(int minimum)", "diff": ["-    public DetectorOptions setMinimum(int aMinimum)", "+    public DetectorOptions setMinimum(int minimum)", "-        mMinimum = aMinimum;", "+        this.minimum = minimum;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fecfbb02c0f7777785bfd995304678a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/SeverityLevelCounter.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Override     public void addException(AuditEvent aEvt, Throwable aThrowable)", "signatureAfterChange": "     @Override     public void addException(AuditEvent evt, Throwable throwable)", "diff": ["-    public void addException(AuditEvent aEvt, Throwable aThrowable)", "+    public void addException(AuditEvent evt, Throwable throwable)", "-        if (SeverityLevel.ERROR.equals(mLevel)) {", "-            mCount++;", "+        if (SeverityLevel.ERROR.equals(level)) {", "+            count++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4006e865f68beeffd20617d0ca73b1a9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTag.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public boolean isThrowsTag()", "signatureAfterChange": "     public boolean isThrowsTag()", "diff": ["-        return (JavadocTagInfo.THROWS.equals(mTagInfo)", "-            || JavadocTagInfo.EXCEPTION.equals(mTagInfo));", "+        return (JavadocTagInfo.THROWS.equals(tagInfo)", "+            || JavadocTagInfo.EXCEPTION.equals(tagInfo));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40252177f8dd5f7e97a5547882b98df2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void checkTag(             int lineNo,             String[] comment,             String tag,             Pattern tagRE,             Pattern formatRE,             String format)", "signatureAfterChange": "     private void checkTag(             int lineNo,             String[] comment,             String tagName,             Pattern tagRegexp,             Pattern formatRE,             String format)", "diff": ["-            String tag,", "-            Pattern tagRE,", "+            String tagName,", "+            Pattern tagRegexp,", "-        if (tagRE == null) {", "+        if (tagRegexp == null) {", "-            final Matcher matcher = tagRE.matcher(s);", "+            final Matcher matcher = tagRegexp.matcher(s);", "-                    log(lineNo + i - comment.length, TAG_FORMAT, tag,", "+                    log(lineNo + i - comment.length, TAG_FORMAT, tagName,", "-                    logTag(lineNo + i - comment.length, tag, content);", "+                    logTag(lineNo + i - comment.length, tagName, content);", "-            log(lineNo, MISSING_TAG, tag);", "+            log(lineNo, MISSING_TAG, tagName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4028c25d276e95448b0f7fa40fbf6ded", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testListFiles_DirectoryWithNull() throws Exception", "signatureAfterChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testListFilesDirectoryWithNull() throws Exception", "diff": ["-    public void testListFiles_DirectoryWithNull() throws Exception {", "+    public void testListFilesDirectoryWithNull() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "402eff43c79601e49253946f7d7e0e26", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-    public void leaveToken(DetailAST aAST)", "+    public void leaveToken(DetailAST ast)", "-        switch (aAST.getType()) {", "+        switch (ast.getType()) {", "-            mScopeStates.pop();", "+            scopeStates.pop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "409045afcb6497796e1d6a7fd6d820cc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractFormatCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final void setFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public final void setFormat(String format)         throws ConversionException", "diff": ["-    public final void setFormat(String aFormat)", "+    public final void setFormat(String format)", "-        updateRegexp(aFormat, mCompileFlags);", "+        updateRegexp(format, compileFlags);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40da0462b9fa008d4d5a3d864cbe8d33", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private Properties createOverridingProperties()", "signatureAfterChange": "     private Properties createOverridingProperties()", "diff": ["-        if (mPropertiesFile != null) {", "+        if (propertiesFile != null) {", "-                inStream = new FileInputStream(mPropertiesFile);", "+                inStream = new FileInputStream(propertiesFile);", "-                        + mPropertiesFile + \"'\", e, getLocation());", "+                        + propertiesFile + \"'\", e, getLocation());", "-                        + mPropertiesFile + \"'\", e, getLocation());", "+                        + propertiesFile + \"'\", e, getLocation());", "-        for (Property p : mOverrideProps) {", "+        for (Property p : overrideProps) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4101f8736195807787eb01555dcfc646", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "80ab48f859c1f16835dbd41afe42414b41969e2f", "commitAfterChange": "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void setCheckEmptyJavadoc(boolean flag)", "signatureAfterChange": "     public void setCheckEmptyJavadoc(boolean flag)", "diff": ["-        checkingEmptyJavadoc = flag;", "+        checkEmptyJavadoc = flag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4117ef43dc9a334f9bb9cf6a4ec58ac1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractIllegalCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected AbstractIllegalCheck(final String[] aInitialNames)", "signatureAfterChange": "     protected AbstractIllegalCheck(final String[] initialNames)", "diff": ["-    protected AbstractIllegalCheck(final String[] aInitialNames)", "+    protected AbstractIllegalCheck(final String[] initialNames)", "-        assert aInitialNames != null;", "-        setIllegalClassNames(aInitialNames);", "+        assert initialNames != null;", "+        setIllegalClassNames(initialNames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4134fb84af33b2ad35248ed334b7e898", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleVariableDeclarationsCheck.java", "commitBeforeChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "commitAfterChange": "dba746ba9387bee04ed362254abb5d9ed35169cd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        final boolean isCommaSeparated =", "-                nextNode != null && nextNode.getType() == TokenTypes.COMMA;", "+        final boolean isCommaSeparated = nextNode.getType() == TokenTypes.COMMA;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "413a81688600ff862ffccf081212f3cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Contextualizable.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     void contextualize(Context aContext) throws CheckstyleException;", "signatureAfterChange": "     void contextualize(Context context) throws CheckstyleException;", "diff": ["-    void contextualize(Context aContext) throws CheckstyleException;", "+    void contextualize(Context context) throws CheckstyleException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "413c08bcc6e748a3130bbf4029e107ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ParameterAssignmentCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void checkIdent(DetailAST aAST)", "signatureAfterChange": "     private void checkIdent(DetailAST ast)", "diff": ["-    private void checkIdent(DetailAST aAST)", "+    private void checkIdent(DetailAST ast)", "-        if ((mParameterNames != null) && !mParameterNames.isEmpty()) {", "-            final DetailAST identAST = aAST.getFirstChild();", "+        if ((parameterNames != null) && !parameterNames.isEmpty()) {", "+            final DetailAST identAST = ast.getFirstChild();", "-                && mParameterNames.contains(identAST.getText()))", "+                && parameterNames.contains(identAST.getText()))", "-                log(aAST.getLineNo(), aAST.getColumnNo(),", "+                log(ast.getLineNo(), ast.getColumnNo(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41550258b7880f594ac236caf5332050", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "     private void checkReturnTag(List<JavadocTag> tags, int lineNo,         boolean reportExpectedTags)", "signatureAfterChange": "     private void checkReturnTag(List<JavadocTag> tags, int lineNo,         boolean reportExpectedTags)", "diff": ["-            final JavadocTag jt = it.next();", "-            if (jt.isReturnTag()) {", "+            final JavadocTag javadocTag = it.next();", "+            if (javadocTag.isReturnTag()) {", "-                    log(jt.getLineNo(), jt.getColumnNo(),", "-                        MSG_DUPLICATE_TAG,", "-                        JavadocTagInfo.RETURN.getText());", "+                    log(javadocTag.getLineNo(), javadocTag.getColumnNo(),", "+                            MSG_DUPLICATE_TAG,", "+                            JavadocTagInfo.RETURN.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41575dce64a972379f524942528ae800", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public IndentLevel suggestedChildLevel(ExpressionHandler aChild)", "signatureAfterChange": "      @Override     public IndentLevel suggestedChildLevel(ExpressionHandler child)", "diff": ["-    public IndentLevel suggestedChildLevel(ExpressionHandler aChild)", "+    public IndentLevel suggestedChildLevel(ExpressionHandler child)", "-        if (!areOnSameLine(aChild.getMainAst().getFirstChild(),", "+        if (!areOnSameLine(child.getMainAst().getFirstChild(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41928cb0d6d6da74f97d42c27f1e4d08", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "8f86620e72849120dc5fba45c3cc54ed38e24447", "commitAfterChange": "d345f3beb27f3d8e3fde06f7e2c7612ddf691b95", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testTypeNamesForThreePermitedCapitalLettersWithOverridenMethod() throws Exception", "signatureAfterChange": "      @Test     public void testTypeNamesForThreePermittedCapitalLettersWithOverridenMethod() throws Exception", "diff": ["-    public void testTypeNamesForThreePermitedCapitalLettersWithOverridenMethod() throws Exception {", "+    public void testTypeNamesForThreePermittedCapitalLettersWithOverridenMethod() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "419bc9cacfd6d9a92f21440b9b0fd5fc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void setMaxPublic(int aValue)", "signatureAfterChange": "     public void setMaxPublic(int value)", "diff": ["-    public void setMaxPublic(int aValue)", "+    public void setMaxPublic(int value)", "-        mMaxPublic = aValue;", "+        maxPublic = value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41a7b8e1ec96caa6ae3562fe8ea77361", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     public boolean accept(AuditEvent event)", "signatureAfterChange": "      @Override     public boolean accept(AuditEvent event)", "diff": ["-                accepted = matchTag == null || matchTag.isOn();", "+                accepted = matchTag == null || matchTag.isReportingOn();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41c2fc2de8f6c83bf0c99c194e15c0cf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected final Class<?> resolveClass(String className,             String currentClass)", "signatureAfterChange": "     protected final Class<?> resolveClass(String resolvableClassName,             String currentClassName)", "diff": ["-    protected final Class<?> resolveClass(String className,", "-            String currentClass) {", "+    protected final Class<?> resolveClass(String resolvableClassName,", "+            String currentClassName) {", "-            return getClassResolver().resolve(className, currentClass);", "+            return getClassResolver().resolve(resolvableClassName, currentClassName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41e162101d6a441b65e46127124b550b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheckTest.java", "commitBeforeChange": "e2f265251a601054b36a9464d0f6e389371723d5", "commitAfterChange": "9cd3660fd5d06aec4a105156d66c7b295e74a28a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testWrongKeyTypeInProperties() throws Exception", "signatureAfterChange": "      @Test     public void testWrongKeyTypeInProperties() throws Exception", "diff": ["-        Map<Object, Object> table = new Hashtable<>();", "+        Map<Object, Object> table = new HashMap<>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4215abedacde1f857bfe5a1b6cc60b95", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedCheck.java", "commitBeforeChange": "521dacce7582a4349a9b02980c3e849e83c023fb", "commitAfterChange": "82d8e91024a57a96fbb6410dacb29d6a3f582903", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean containsJavadocTag(final TextBlock javadoc)", "signatureAfterChange": "     private boolean containsJavadocTag(final TextBlock javadoc)", "diff": ["-                MissingDeprecatedCheck.MATCH_DEPRECATED.matcher(line);", "-            final Matcher noargMultilineStart =", "-                MissingDeprecatedCheck", "-                    .MATCH_DEPRECATED_MULTILINE_START.matcher(line);", "+                MATCH_DEPRECATED.matcher(line);", "+            final Matcher noargMultilineStart = MATCH_DEPRECATED_MULTILINE_START.matcher(line);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "421a60f041764b06cf79a657ee9706a3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheckTest.java", "commitBeforeChange": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4", "commitAfterChange": "c3674faad8a38656e910750fb22a7eef714fb8a7", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     public void testWithSumLessThenMinCustMsg() throws Exception", "signatureAfterChange": "      @Test     public void testWithSumLessThenMinCustomMsg() throws Exception", "diff": ["-    public void testWithSumLessThenMinCustMsg() throws Exception {", "+    public void testWithSumLessThenMinCustomMsg() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4243ce846e9258c28b5efd4dd50af30c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void addTag(String text, int line, int column, boolean on)", "signatureAfterChange": "     private void addTag(String text, int line, int column, boolean reportingOn)", "diff": ["-    private void addTag(String text, int line, int column, boolean on) {", "-        final Tag tag = new Tag(line, column, text, on, this);", "+    private void addTag(String text, int line, int column, boolean reportingOn) {", "+        final Tag tag = new Tag(line, column, text, reportingOn, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "424a38e68e14f65320fb32b38145a320", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheck.java", "commitBeforeChange": "b0240a0200663fbf1d3146d1aefe12207fdde4af", "commitAfterChange": "9aa72722de7b5a4ffb5d50945c7bce8b58f25e8e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void dumpStats(long aStart, long aEndReading, long aEndSearching)", "signatureAfterChange": "     private void dumpStats(long aStart, long aEndReading, long aEndSearching)", "diff": ["-        if (LOG.isInfoEnabled()) {", "+        if (LOG.isDebugEnabled()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "425f2e50e1cffe20ce93bd3bc95d2d87", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "ec414646eaf9ceb7de4b6e75b6c11d446cd0971f", "commitAfterChange": "90178ab2e4bfac216cf861188006818ebce10293", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private static boolean isSameVariables(DetailAST ast1, DetailAST ast2)", "signatureAfterChange": "     private static boolean isSameVariables(DetailAST ast1, DetailAST ast2)", "diff": ["-            findClassOrMethodInWhichItIsDefined(ast1);", "+            findClassOrConstructorOrMethodInWhichItIsDefined(ast1);", "-            findClassOrMethodInWhichItIsDefined(ast2);", "+            findClassOrConstructorOrMethodInWhichItIsDefined(ast2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4274df8c9f1439ad41401a193edcd5e5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenTextCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setMessage(String aMessage)", "signatureAfterChange": "     public void setMessage(String message)", "diff": ["-    public void setMessage(String aMessage)", "+    public void setMessage(String message)", "-        mMessage = (null == aMessage) ? \"\" : aMessage;", "+        message = (null == message) ? \"\" : message;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "428653aa38c4210d21bab71112c9962b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     static PkgControl load(final URI uri) throws CheckstyleException", "signatureAfterChange": "     static PkgControl load(final URI uri) throws CheckstyleException", "diff": ["-        InputStream is;", "+        InputStream inputStream;", "-            is = uri.toURL().openStream();", "+            inputStream = uri.toURL().openStream();", "-        final InputSource source = new InputSource(is);", "+        final InputSource source = new InputSource(inputStream);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "428676873c577e97adeeeccfe02d37a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private boolean isIgnoredPublicMember(String variableName, String variableScope)", "signatureAfterChange": "     private boolean isIgnoredPublicMember(String variableName, String variableScope)", "diff": ["-        return \"public\".equals(variableScope)", "+        return PUBLIC_ACCESS_MODIFIER.equals(variableScope)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4289e5b1b55d2d8db56d6bc9c0be7dad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static String getAlias(String aSourceName)", "signatureAfterChange": "     public static String getAlias(String sourceName)", "diff": ["-    public static String getAlias(String aSourceName)", "+    public static String getAlias(String sourceName)", "-        String checkAlias = CHECK_ALIAS_MAP.get(aSourceName);", "+        String checkAlias = CHECK_ALIAS_MAP.get(sourceName);", "-            checkAlias = getDefaultAlias(aSourceName);", "+            checkAlias = getDefaultAlias(sourceName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42ba02cdde32bc65b64e677815a0ac08", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ForHandler.java", "commitBeforeChange": "e7547bb7ddccec6737cea118a41864fc349ea1d2", "commitAfterChange": "d220d7c3cc74490c7f2923f2ea85d00133afe98c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private void checkForParams()", "signatureAfterChange": "     private void checkForParams()", "diff": ["-            final DetailAST iter =", "+            final DetailAST forIterator =", "-            checkExpressionSubtree(iter, expected, false, false);", "+            checkExpressionSubtree(forIterator, expected, false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42c0b90254d33609ab6c8732f2cea548", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     protected final void checkLParen(final DetailAST aLparen)", "signatureAfterChange": "     protected final void checkLParen(final DetailAST lparen)", "diff": ["-    protected final void checkLParen(final DetailAST aLparen)", "+    protected final void checkLParen(final DetailAST lparen)", "-        if ((aLparen == null)", "-            || getLevel().accept(expandedTabsColumnNo(aLparen))", "-            || !startsLine(aLparen))", "+        if ((lparen == null)", "+            || getLevel().accept(expandedTabsColumnNo(lparen))", "+            || !startsLine(lparen))", "-        logError(aLparen, \"lparen\", expandedTabsColumnNo(aLparen));", "+        logError(lparen, \"lparen\", expandedTabsColumnNo(lparen));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42c213af239986885e60139646375925", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/InputRequireThis.java", "commitBeforeChange": "992678f1baf3a7f6a1cf579232457bd97d408e4d", "commitAfterChange": "edb810c10e121b34f4222a4bba9012add00f1e41", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void foo()", "signatureAfterChange": "     public void foo()", "diff": ["-            e.printStackTrace();", "+            e.getCause();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42f0b54e024fe165986037387ac44811", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (aAST.getType() == TokenTypes.GENERIC_START) {", "-            processStart(aAST);", "-            mDepth++;", "+        if (ast.getType() == TokenTypes.GENERIC_START) {", "+            processStart(ast);", "+            depth++;", "-        else if (aAST.getType() == TokenTypes.GENERIC_END) {", "-            processEnd(aAST);", "-            mDepth--;", "+        else if (ast.getType() == TokenTypes.GENERIC_END) {", "+            processEnd(ast);", "+            depth--;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4312534717a3cd487b1197e9ffdc4a09", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-    public void finishTree(DetailAST aRootAST)", "+    public void finishTree(DetailAST rootAST)", "-        final Set<String> keys = mStringMap.keySet();", "+        final Set<String> keys = stringMap.keySet();", "-            final List<StringInfo> hits = mStringMap.get(key);", "-            if (hits.size() > mAllowedDuplicates) {", "+            final List<StringInfo> hits = stringMap.get(key);", "+            if (hits.size() > allowedDuplicates) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4322a553ca775a4b7c26623eedea3d34", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private ClassResolver getClassResolver()", "signatureAfterChange": "     private ClassResolver getClassResolver()", "diff": ["-        if (mClassResolver == null) {", "-            mClassResolver =", "+        if (classResolver == null) {", "+            classResolver =", "-                                  mPackageFullIdent.getText(),", "-                                  mImports);", "+                                  packageFullIdent.getText(),", "+                                  imports);", "-        return mClassResolver;", "+        return classResolver;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43506961815ebf1ae550ade16260a5fc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PropertyResolver.java", "commitBeforeChange": "5185681ca8d8fa53816e59d2726b48b61e8c719f", "commitAfterChange": "8c4237788647e26b644b497435da09405955f716", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     String resolve(String propertyName)         throws CheckstyleException;", "signatureAfterChange": "     String resolve(String aName)         throws CheckstyleException;", "diff": ["-    String resolve(String propertyName)", "+    String resolve(String aName)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "437986a2c1f257368b48c8af9ca9c2f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessages.java", "commitBeforeChange": "5e0f360e7b7745a362bd7a655e98654a2ad36443", "commitAfterChange": "3813f1ccbf157f463c041ccfc462399845ddff6e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void add(LocalizedMessage aMsg)", "signatureAfterChange": "     public void add(LocalizedMessage message)", "diff": ["-    public void add(LocalizedMessage aMsg) {", "-        messages.add(aMsg);", "+    public void add(LocalizedMessage message) {", "+        messages.add(message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "438039002999ffc57ecb62b03d341270", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private String safeGet(final Attributes aAtts, final String aName)         throws SAXException", "signatureAfterChange": "     private String safeGet(final Attributes atts, final String name)         throws SAXException", "diff": ["-    private String safeGet(final Attributes aAtts, final String aName)", "+    private String safeGet(final Attributes atts, final String name)", "-        final String retVal = aAtts.getValue(aName);", "+        final String retVal = atts.getValue(name);", "-            throw new SAXException(\"missing attribute \" + aName);", "+            throw new SAXException(\"missing attribute \" + name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4385c4576325c10e5e7d8f70fcba00e1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Comment.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Override     public int getStartColNo()", "signatureAfterChange": "     @Override     public int getStartColNo()", "diff": ["-        return mFirstCol;", "+        return firstCol;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4391a2c346bb91f7ab77391ea50fc5a9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void checkIdent(DetailAST aAST)", "signatureAfterChange": "     private void checkIdent(DetailAST ast)", "diff": ["-    private void checkIdent(DetailAST aAST)", "+    private void checkIdent(DetailAST ast)", "-        if ((mCurrentVariables != null) && !mCurrentVariables.isEmpty()) {", "-            final DetailAST identAST = aAST.getFirstChild();", "+        if ((currentVariables != null) && !currentVariables.isEmpty()) {", "+            final DetailAST identAST = ast.getFirstChild();", "-                && mCurrentVariables.contains(identAST.getText()))", "+                && currentVariables.contains(identAST.getText()))", "-                log(aAST.getLineNo(), aAST.getColumnNo(),", "+                log(ast.getLineNo(), ast.getColumnNo(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43bcbff7ffba4c5a22529dc12980be53", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "5cd16d56a2ef2a3daaf1674666a9a5e6f2ddfe78", "commitAfterChange": "f9a9d6c3d321eeb2879efb7f48f02fe21a51c06c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public boolean getForceStrictCondition()", "signatureAfterChange": "     public boolean isForceStrictCondition()", "diff": ["-    public boolean getForceStrictCondition()", "+    public boolean isForceStrictCondition()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "442ac36aff54572d1c1e4ba88a955f2f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "d345f3beb27f3d8e3fde06f7e2c7612ddf691b95", "commitAfterChange": "c4a7d06206d86f52665eae47af4db28dc59d93a3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean hasIgnoreAnnotation(DetailAST variableDef)", "signatureAfterChange": "     private boolean hasIgnoreAnnotation(DetailAST variableDef)", "diff": ["-                 containsMatchingAnnotation(variableDef);", "+                 findMatchingAnnotation(variableDef);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "442b0b6ba24a22de5a2f4d205379fdd0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public boolean getCheckFields()", "signatureAfterChange": "     public boolean getCheckFields()", "diff": ["-        return mCheckFields;", "+        return checkFields;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "448d91131339abf267c199ce112fa2a9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "1e541f0b988df01b3ff13885521d39790df74cef", "commitAfterChange": "8985e645a8a591b19c729cff16b8440b70a8022e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private static boolean whitespaceBetween(         int fromIndex, int toIndex, String line)", "signatureAfterChange": "     private static boolean containsWhitespaceBetween(             int fromIndex, int toIndex, String line)", "diff": ["-    private static boolean whitespaceBetween(", "-        int fromIndex, int toIndex, String line) {", "+    private static boolean containsWhitespaceBetween(", "+            int fromIndex, int toIndex, String line) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44a3bc8936e5e8a69ae2831ca4370069", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void setMaxPrivate(int aValue)", "signatureAfterChange": "     public void setMaxPrivate(int value)", "diff": ["-    public void setMaxPrivate(int aValue)", "+    public void setMaxPrivate(int value)", "-        mMaxPrivate = aValue;", "+        maxPrivate = value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44e7ceaf18ab1a9b3bda75251087ccb9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/AbstractCheckTestCase.java", "commitBeforeChange": "85db5df9c1941b1c6046769baaace4d253834e3e", "commitAfterChange": "fe6e0fd4231aaba97cf423899f93697400880c93", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public AbstractCheckTestCase(String s)", "signatureAfterChange": "      public AbstractCheckTestCase(String aName)", "diff": ["-    public AbstractCheckTestCase(String s)", "+    public AbstractCheckTestCase(String aName)", "-        super(s);", "+        super(aName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "451f678dd30b49ae7bad54255014ef00", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "         public void setFile(File value)", "signatureAfterChange": "         public void setFile(File file)", "diff": ["-        /** @param value set the property value from a File */", "-        public void setFile(File value) {", "-            setValue(value.getAbsolutePath());", "+        /** @param file set the property value from a File */", "+        public void setFile(File file) {", "+            setValue(file.getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4534cc57177c82663b7318fb461bb303", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentLevel.java", "commitBeforeChange": "1ca93bdf66b630e58d979ad2aa40f02e678db5cf", "commitAfterChange": "bc36fe40fcfb51e720dc531a824cd6664ccc4c8b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public int getFirstIndentLevel()", "signatureAfterChange": "     public int getFirstIndentLevel()", "diff": ["-        return mLevels.first();", "+        return mLevels.nextSetBit(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "456231f2cb45dd5cc0930e5354c3b1fc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void notifyBegin(DetailAST aRootAST, FileContents aContents             , AstState aAstState)", "signatureAfterChange": "     private void notifyBegin(DetailAST rootAST, FileContents contents             , AstState astState)", "diff": ["-    private void notifyBegin(DetailAST aRootAST, FileContents aContents", "-            , AstState aAstState)", "+    private void notifyBegin(DetailAST rootAST, FileContents contents", "+            , AstState astState)", "-        if (aAstState == AstState.WITH_COMMENTS) {", "-            checks = mCommentChecks;", "+        if (astState == AstState.WITH_COMMENTS) {", "+            checks = commentChecks;", "-            checks = mOrdinaryChecks;", "+            checks = ordinaryChecks;", "-            ch.setFileContents(aContents);", "-            ch.beginTree(aRootAST);", "+            ch.setFileContents(contents);", "+            ch.beginTree(rootAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45727f02f7b8b7bb1d0442233ed6082a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "85ba2a3dce39e73858d0f3df72c43804677c8c48", "commitAfterChange": "d49eaaf2e42538bc7f01510eb3ca2812b253c98a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private int[] findLineBreaks()", "signatureAfterChange": "     private int[] findLineBreaks()", "diff": ["-                lineBreaks[lineNo++] = matcher.end();", "+                lineBreaks[lineNo] = matcher.end();", "+                lineNo++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "457a77aa4293746af27ae040403f3460", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void processStart(DetailAST ast)", "signatureAfterChange": "     private void processStart(DetailAST ast)", "diff": ["-                    log(ast.getLineNo(), before, WS_NOT_PRECEDED, \"<\");", "+                    log(ast.getLineNo(), before, WS_NOT_PRECEDED, OPEN_ANGLE_BRACKET);", "-                log(ast.getLineNo(), before, WS_PRECEDED, \"<\");", "+                log(ast.getLineNo(), before, WS_PRECEDED, OPEN_ANGLE_BRACKET);", "-            log(ast.getLineNo(), after, WS_FOLLOWED, \"<\");", "+            log(ast.getLineNo(), after, WS_FOLLOWED, OPEN_ANGLE_BRACKET);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45895c182b9985c242902629a060003f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheckTest.java", "commitBeforeChange": "3c988d95d9bf98e33b764a2b65dba99f4bc2c479", "commitAfterChange": "b519429598906188bdf5aeae44a83a5aa6630e52", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "     @Test     public void testDefault() throws Exception", "diff": ["-            \"30:8: Unused import - java.awt.Label.\",", "-            \"31:8: Unused import - java.util.Date.\",", "-            \"32:8: Unused import - java.util.Calendar.\",", "-            \"33:8: Unused import - java.util.BitSet.\",", "+            \"30:8: Unused import - java.awt.Graphics2D.\",", "+            \"31:8: Unused import - java.awt.HeadlessException.\",", "+            \"32:8: Unused import - java.awt.Label.\",", "+            \"33:8: Unused import - java.util.Date.\",", "+            \"34:8: Unused import - java.util.Calendar.\",", "+            \"35:8: Unused import - java.util.BitSet.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4590f4e9c54d615fbce0a6943348746b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "5ff797c94aec50e9f472f7e9d0c1fae080f54f8d", "commitAfterChange": "9ef2cd212112e371b015310faefa2b8f3f2a7cc7", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "     private void checkThrowsTags(List aTags, List aThrows)", "signatureAfterChange": "     private void checkThrowsTags(List aTags, List aThrows)", "diff": ["-                // TODO: Need write unit tests.", "-                        Thread.currentThread().getContextClassLoader(),", "-                        mPkgName, mImports);", "+                        mConfig.getClassLoader(), mPkgName, mImports);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45bc1d4ca3ccd13d3bb0639e015aedba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void logWrongImportGroupOrder(int aCurrentImportLine, String aImportGroup)", "signatureAfterChange": "     private void logWrongImportGroupOrder(int currentImportLine, String importGroup)", "diff": ["-    private void logWrongImportGroupOrder(int aCurrentImportLine, String aImportGroup)", "+    private void logWrongImportGroupOrder(int currentImportLine, String importGroup)", "-        if (NON_GROUP_RULE_GROUP.equals(aImportGroup)) {", "-            log(aCurrentImportLine, \"custom.import.order.nongroup.import\");", "+        if (NON_GROUP_RULE_GROUP.equals(importGroup)) {", "+            log(currentImportLine, \"custom.import.order.nongroup.import\");", "-            log(aCurrentImportLine, \"custom.import.order\", aImportGroup);", "+            log(currentImportLine, \"custom.import.order\", importGroup);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45cd318ef49c01bf43aa467f80fe533a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "7453d382c140ac20cd225585a45cc19203dd399f", "commitAfterChange": "020d8b24693d7208a8892e3ba857cfe2d90a43bc", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "         @Override         public void syntaxError(                 Recognizer<?, ?> recognizer, Object offendingSymbol,                 int line, int charPositionInLine,                 String msg, RecognitionException ex)", "signatureAfterChange": "         @Override         public void syntaxError(                 Recognizer<?, ?> recognizer, Object offendingSymbol,                 int line, int charPositionInLine,                 String msg, RecognitionException ex)", "diff": ["-                throw new ParseCancellationException();", "+                throw new ParseCancellationException(msg);", "-                throw new ParseCancellationException();", "+                throw new ParseCancellationException(msg);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45d0914880bc4eccb23f83de14d9e8cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java", "commitBeforeChange": "29027109bf962f47b6a6000fdca69b5679ce4b43", "commitAfterChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (TokenTypes.INTERFACE_DEF == aAST.getType()) {", "+        if (TokenTypes.INTERFACE_DEF == ast.getType()) {", "-                aAST.findFirstToken(TokenTypes.MODIFIERS);", "+                ast.findFirstToken(TokenTypes.MODIFIERS);", "-        else if (isInterfaceOrAnnotationMember(aAST)) {", "-            final DetailAST modifiers = aAST.findFirstToken(TokenTypes.MODIFIERS);", "+        else if (isInterfaceOrAnnotationMember(ast)) {", "+            final DetailAST modifiers = ast.findFirstToken(TokenTypes.MODIFIERS);", "-                            && aAST.getType() != TokenTypes.METHOD_DEF)", "+                            && ast.getType() != TokenTypes.METHOD_DEF)", "-        else if (aAST.getType() == TokenTypes.METHOD_DEF) {", "+        else if (ast.getType() == TokenTypes.METHOD_DEF) {", "-                            aAST.findFirstToken(TokenTypes.MODIFIERS);", "+                            ast.findFirstToken(TokenTypes.MODIFIERS);", "-            DetailAST parent = aAST.getParent();", "+            DetailAST parent = ast.getParent();", "-            if (checkFinal && !isAnnotatedWithSafeVarargs(aAST)) {", "+            if (checkFinal && !isAnnotatedWithSafeVarargs(ast)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45fc0aaca1e3fa83d53fbe74efeb8eda", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/WhitespaceAfterCheckTest.java", "commitBeforeChange": "e4a4b6dc01240034cacf0886862805e3dcc58a93", "commitAfterChange": "a6542ab75c1051e885be935b2c252269923f8f6b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testCast() throws Exception", "signatureAfterChange": "      public void testCast() throws Exception", "diff": ["-        mCheckConfig.addTokens(\"TYPECAST\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4663f8d56ec9fe52cae7ad16978ffccb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheckTest.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     @Test     public void testIOException() throws Exception", "signatureAfterChange": "     @Test     public void testIoException() throws Exception", "diff": ["-    public void testIOException() throws Exception {", "+    public void testIoException() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46724319cc766621869f86567f8fbf6f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "b14f255427c0b12054de2873fe300b4f4e691bd4", "commitAfterChange": "cc7aeaec906dc3c864477e3050510009b2a946ee", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean hasFallTruComment(DetailAST currentCase,             DetailAST nextCase)", "signatureAfterChange": "     private boolean hasFallTruComment(DetailAST currentCase,             DetailAST nextCase)", "diff": ["-        final String linepart = lines[endLineNo - 1].substring(0, endColNo);", "-        if (commentMatch(regExp, linepart, endLineNo)) {", "+        final String linePart = lines[endLineNo - 1].substring(0, endColNo);", "+        if (commentMatch(regExp, linePart, endLineNo)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4683a6c9808d084264b42cf87c1b99b6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Override     public boolean accept(AuditEvent aEvent)", "signatureAfterChange": "     @Override     public boolean accept(AuditEvent event)", "diff": ["-    public boolean accept(AuditEvent aEvent)", "+    public boolean accept(AuditEvent event)", "-        return mFilters.accept(aEvent);", "+        return filters.accept(event);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4689cf1732a16cdd8f76c5de55f549c6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void checkUnusedTypeParamTags(         final List<JavadocTag> tags,         final List<String> typeParamNames)", "signatureAfterChange": "     private void checkUnusedTypeParamTags(         final List<JavadocTag> tags,         final List<String> typeParamNames)", "diff": ["-                        \"<\" + typeParamName + \">\");", "+                        OPEN_ANGLE_BRACKET + typeParamName + CLOSE_ANGLE_BRACKET);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46920c6867d77c89739fc567d78fd29a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/TokenUtils.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static String getTokenName(int iD)", "signatureAfterChange": "     public static String getTokenName(int id)", "diff": ["-    public static String getTokenName(int iD) {", "-        if (iD > TOKEN_VALUE_TO_NAME.length - 1) {", "-            throw new IllegalArgumentException(TOKEN_ID_EXCEPTION_PREFIX + iD);", "+    public static String getTokenName(int id) {", "+        if (id > TOKEN_VALUE_TO_NAME.length - 1) {", "+            throw new IllegalArgumentException(TOKEN_ID_EXCEPTION_PREFIX + id);", "-        final String name = TOKEN_VALUE_TO_NAME[iD];", "+        final String name = TOKEN_VALUE_TO_NAME[id];", "-            throw new IllegalArgumentException(TOKEN_ID_EXCEPTION_PREFIX + iD);", "+            throw new IllegalArgumentException(TOKEN_ID_EXCEPTION_PREFIX + id);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46c933082b074ab9492735a739890808", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheckTest.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testOK() throws Exception", "signatureAfterChange": "      @Test     public void testOk() throws Exception", "diff": ["-    public void testOK() throws Exception {", "+    public void testOk() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46ddb63998c6972abfee38aabe6ab3b6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void visitCatch(final DetailAST aCatch)", "signatureAfterChange": "     private void visitCatch(final DetailAST literalCatch)", "diff": ["-    private void visitCatch(final DetailAST aCatch)", "+    private void visitCatch(final DetailAST literalCatch)", "-        checkParam(aCatch.findFirstToken(TokenTypes.PARAMETER_DEF));", "+        checkParam(literalCatch.findFirstToken(TokenTypes.PARAMETER_DEF));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46e7cc331124ce90b1432f74d04d51e2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private String getTagId(String[] aText, Point aTagStart)", "signatureAfterChange": "     private String getTagId(String[] javadocText, Point tagStart)", "diff": ["-    private String getTagId(String[] aText, Point aTagStart)", "+    private String getTagId(String[] javadocText, Point tagStart)", "-        int column = aTagStart.getColumnNo() + 1;", "-        String text = aText[aTagStart.getLineNo()];", "+        int column = tagStart.getColumnNo() + 1;", "+        String text = javadocText[tagStart.getLineNo()];", "-        //Character.isJavaIdentifier... may not be a valid HTML", "+        //Character.isJavidentifier... may not be a valid HTML"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46ee1993fed8d2796461acc2b31057d6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "896af516b0028ff2a26cc1888dfaba620d3fe9e0", "commitAfterChange": "55c92042eb6986e905529de841d3d1c9a7b2b6dd", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "         public Tag(String text, int line, SuppressWithNearbyCommentFilter filter)", "signatureAfterChange": "         public Tag(String text, int line, SuppressWithNearbyCommentFilter filter)", "diff": ["-                format = expandFrocomment(text, filter.checkFormat, filter.commentRegexp);", "+                format = expandFromComment(text, filter.checkFormat, filter.commentRegexp);", "-                    format = expandFrocomment(", "-                         text, filter.messageFormat, filter.commentRegexp);", "+                    format = expandFromComment(", "+                            text, filter.messageFormat, filter.commentRegexp);", "-                format = expandFrocomment(", "-                    text, filter.influenceFormat, filter.commentRegexp);", "+                format = expandFromComment(", "+                        text, filter.influenceFormat, filter.commentRegexp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46f51347a546045d19dca8e48419446c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected IndentLevel getLevelImpl()", "signatureAfterChange": "      @Override     protected IndentLevel getIndentImpl()", "diff": ["-    protected IndentLevel getLevelImpl() {", "+    protected IndentLevel getIndentImpl() {", "-                indentLevel = container.getLevel();", "+                indentLevel = container.getIndent();", "-                indentLevel = new IndentLevel(container.getLevel(), getBasicOffset());", "+                indentLevel = new IndentLevel(container.getIndent(), getBasicOffset());", "-                indentLevel = super.getLevelImpl();", "+                indentLevel = super.getIndentImpl();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47074e0054c303cdbefce34ed68aac2d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocNodeImpl.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void setColumnNumber(int aColumnNumber)", "signatureAfterChange": "      public void setColumnNumber(int columnNumber)", "diff": ["-    public void setColumnNumber(int aColumnNumber)", "+    public void setColumnNumber(int columnNumber)", "-        this.mColumnNumber = aColumnNumber;", "+        this.columnNumber = columnNumber;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "470833a2b6671dcf4c488c380e18736f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedCheck.java", "commitBeforeChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "commitAfterChange": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean containsJavadocTag(final TextBlock javadoc)", "signatureAfterChange": "     private boolean containsJavadocTag(final TextBlock javadoc)", "diff": ["-            final Matcher javadocNoargMatcher =", "+            final Matcher javadocNoArgMatcher =", "-            final Matcher noargMultilineStart = MATCH_DEPRECATED_MULTILINE_START.matcher(line);", "+            final Matcher noArgMultilineStart = MATCH_DEPRECATED_MULTILINE_START.matcher(line);", "-            if (javadocNoargMatcher.find()) {", "+            if (javadocNoArgMatcher.find()) {", "-            else if (noargMultilineStart.find()) {", "+            else if (noArgMultilineStart.find()) {", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "472c93c54631d23ba065000a95dd42ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheckTest.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testAssignEOL()         throws Exception", "signatureAfterChange": "      @Test     public void testAssignEol()         throws Exception", "diff": ["-    public void testAssignEOL()", "+    public void testAssignEol()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4761c6092ee7aeb73e2739323cb47667", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/CommonUtilsTest.java", "commitBeforeChange": "2e243db3fbdf7b737f78ed7cef0b9bd94f351d25", "commitAfterChange": "9586ee86d174ff502b9c57332b29f4b6e88e45ec", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      @Test     @PrepareForTest({ CommonUtils.class, CommonUtilsTest.class })     @SuppressWarnings(\"unchecked\")     public void testLoadSuppressionsURISyntaxException() throws Exception", "signatureAfterChange": "      @Test     @PrepareForTest({ CommonUtils.class, CommonUtilsTest.class })     @SuppressWarnings(\"unchecked\")     public void testLoadSuppressionsUriSyntaxException() throws Exception", "diff": ["-    public void testLoadSuppressionsURISyntaxException() throws Exception {", "+    public void testLoadSuppressionsUriSyntaxException() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "478c73254a5284b677b858376e612b0b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "7f06106f4e41e1c250bb5bafccbf4f8d9a7909bc", "commitAfterChange": "9ef57a950237bde5a145639aef35a5de2ceb181b", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "     boolean isCheckUnusedFields()", "signatureAfterChange": "     boolean isCheckUnusedFields()", "diff": ["-        return getBooleanProperty(Defn.FIELDS_CHECK_UNUSED_PROP);", "+        return getBooleanProperty(Defn.CHECK_UNUSED_FIELDS_PROP);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "479b70075c4833ee8315e5966e725fbc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void checkPropertyFileSets(Map<String, Set<File>> aPropFiles)", "signatureAfterChange": "     private void checkPropertyFileSets(Map<String, Set<File>> propFiles)", "diff": ["-    private void checkPropertyFileSets(Map<String, Set<File>> aPropFiles)", "+    private void checkPropertyFileSets(Map<String, Set<File>> propFiles)", "-        final Set<Entry<String, Set<File>>> entrySet = aPropFiles.entrySet();", "+        final Set<Entry<String, Set<File>>> entrySet = propFiles.entrySet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47abafb403c4537ffab755fee0d00ef7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void setFirstChild(AST aAST)", "signatureAfterChange": "      @Override     public void setFirstChild(AST ast)", "diff": ["-    public void setFirstChild(AST aAST)", "+    public void setFirstChild(AST ast)", "-        mChildCount = NOT_INITIALIZED;", "-        super.setFirstChild(aAST);", "-        if (aAST != null) {", "-            ((DetailAST) aAST).setParent(this);", "+        childCount = NOT_INITIALIZED;", "+        super.setFirstChild(ast);", "+        if (ast != null) {", "+            ((DetailAST) ast).setParent(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47d43286c798b3aa1a285f9d49773d0e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "443e534a3c98c0b30f24647da724fe918f17a006", "commitAfterChange": "66d73fe6189267fee3423e2e8d7fc2d68599a43f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "          @Override         public void filesDropped(File... files)", "signatureAfterChange": "          @Override         public void filesDropped(File... files)", "diff": ["-                openFile(file, mSp);", "+                openFile(file, scrollPane);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47dea9e404d2dc57dedafa2fac9c2c59", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private boolean hasAllowedAnnotations(DetailAST aMethodDef)", "signatureAfterChange": "     private boolean hasAllowedAnnotations(DetailAST methodDef)", "diff": ["-    private boolean hasAllowedAnnotations(DetailAST aMethodDef)", "+    private boolean hasAllowedAnnotations(DetailAST methodDef)", "-        final DetailAST modifiersNode = aMethodDef.findFirstToken(TokenTypes.MODIFIERS);", "+        final DetailAST modifiersNode = methodDef.findFirstToken(TokenTypes.MODIFIERS);", "-            if (mAllowedAnnotations.contains(identNode.getText())) {", "+            if (allowedAnnotations.contains(identNode.getText())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "485f912c8f291265bb664142e52ff619", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java", "commitBeforeChange": "6839ac4fd83dde7060c8f6f28e75aa3d6ff2456b", "commitAfterChange": "31f6765fdcf2233ca6c53730c2fc196576557f66", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static boolean isBooleanLiteralType(final int tokenType)", "signatureAfterChange": "     private static boolean isBooleanLiteralType(final int tokenType)", "diff": ["-        final boolean iastrue = tokenType == TokenTypes.LITERAL_TRUE;", "+        final boolean isTrue = tokenType == TokenTypes.LITERAL_TRUE;", "-        return iastrue || isFalse;", "+        return isTrue || isFalse;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48938410c09a11e69a5e3a1734ef88f0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void setProperties(File aProps)", "signatureAfterChange": "     public void setProperties(File props)", "diff": ["-    public void setProperties(File aProps)", "+    public void setProperties(File props)", "-        mPropertiesFile = aProps;", "+        propertiesFile = props;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4899ed19c318ef1c86f31550c31c969f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "commitBeforeChange": "dba2da926c7a35cc1c68a739934b846c14d9b7ae", "commitAfterChange": "779d30b7599259bb25f5178cbb28f2a038992553", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static boolean isInNoBraceControlStatement(DetailAST ast)", "signatureAfterChange": "     private static boolean isInNoBraceControlStatement(DetailAST ast)", "diff": ["-        return exprNext != null && exprNext.getType() == TokenTypes.SEMI;", "+        return exprNext.getType() == TokenTypes.SEMI;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48b031872f5889648c69c341e12ec50c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "97bee78f13ad218f586429b1ec264139a8663cc2", "commitAfterChange": "1513a0f96964497e4fd2ae14bb9bf328b1f1e01f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public int getBraceAdjustement()", "signatureAfterChange": "     public int getBraceAdjustment()", "diff": ["-    public int getBraceAdjustement() {", "+    public int getBraceAdjustment() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48c58ec177105f38f479a093ad11c217", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void checkEmptyJavadoc(TextBlock aComment)", "signatureAfterChange": "     private void checkEmptyJavadoc(TextBlock comment)", "diff": ["-    private void checkEmptyJavadoc(TextBlock aComment)", "+    private void checkEmptyJavadoc(TextBlock comment)", "-        final String commentText = getCommentText(aComment.getText());", "+        final String commentText = getCommentText(comment.getText());", "-            log(aComment.getStartLineNo(), \"javadoc.empty\");", "+            log(comment.getStartLineNo(), \"javadoc.empty\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "493de8b61b8969627cf6d7471d274214", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "6cd514c9aca3a215ac523ef44c0798d83d48e08a", "commitAfterChange": "7138d731ce2bc90df35e533b701e50062864464b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     protected void checkRCurly()", "signatureAfterChange": "     protected void checkRCurly()", "diff": ["-        if (rcurly == null", "-            || curlyLevel().accept(rcurlyPos)", "+        if (curlyLevel().accept(rcurlyPos)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "494717f4feed67710194a347b934ff06", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void processLiteralNew(DetailAST aAST)", "signatureAfterChange": "     private void processLiteralNew(DetailAST ast)", "diff": ["-    private void processLiteralNew(DetailAST aAST)", "+    private void processLiteralNew(DetailAST ast)", "-        if (aAST.getParent().getType() == TokenTypes.METHOD_REF) {", "+        if (ast.getParent().getType() == TokenTypes.METHOD_REF) {", "-        mInstantiations.add(aAST);", "+        instantiations.add(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49497d383ca184363bbbf05af9351bcd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java", "commitBeforeChange": "896af516b0028ff2a26cc1888dfaba620d3fe9e0", "commitAfterChange": "55c92042eb6986e905529de841d3d1c9a7b2b6dd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private static boolean isCstyleArrayDeclaration(DetailAST arrayDeclaration)", "signatureAfterChange": "     private static boolean isCStyleArrayDeclaration(DetailAST arrayDeclaration)", "diff": ["-    private static boolean isCstyleArrayDeclaration(DetailAST arrayDeclaration) {", "+    private static boolean isCStyleArrayDeclaration(DetailAST arrayDeclaration) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "495332315f06aceb504ee8dffa48d481", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedCheck.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Override     public void visitToken(final DetailAST aAST)", "signatureAfterChange": "     @Override     public void visitToken(final DetailAST aAST)", "diff": ["-            this.log(aAST.getLineNo(), \"annotation.missing.deprecated\");", "+            this.log(aAST.getLineNo(), MSG_KEY_ANNOTATION_MISSING_DEPRECATED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49c139d4436137b4ce1d9a35f70790e5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AuditEvent.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public SeverityLevel getSeverityLevel()", "signatureAfterChange": "     public SeverityLevel getSeverityLevel()", "diff": ["-        return (mMessage == null)", "+        return (message == null)", "-            : mMessage.getSeverityLevel();", "+            : message.getSeverityLevel();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49cc1a341fb91e968d7e13e0528a8c15", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RedundantModifierCheck.java", "commitBeforeChange": "27cb13ca3d878ebb5afa7a0ff44ff198a47b4e05", "commitAfterChange": "4b2f2e628d9423efee0bb720ad88aa8ab30b07fa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int[] getAcceptableTokens()", "signatureAfterChange": "     public int[] getRequiredTokens()", "diff": ["-     */", "-    public int[] getAcceptableTokens()", "-    {", "-        return new int[] {};", "+        return new int[] {};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a18befa40b5693a79c1d485710d6d63", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "commitAfterChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "          @Override         public void dragExit(DropTargetEvent evt)", "signatureAfterChange": "          @Override         public void dragExit(DropTargetEvent evt)", "diff": ["-            if (mC instanceof JComponent) {", "-                final JComponent jc = (JComponent) mC;", "+            if (component instanceof JComponent) {", "+                final JComponent jc = (JComponent) component;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a57a874829995d25be0c7ca3041616b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/XMLLoggerTest.java", "commitBeforeChange": "59fa63c67d44757974a88e8210d7263497155272", "commitAfterChange": "c6df3098271228399655bdb581203c0708b24614", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testEncode()         throws IOException", "signatureAfterChange": "      @Test     public void testEncode()         throws IOException", "diff": ["-            final String encoded = logger.encode(encodings[i][0]);", "+            final String encoded = XMLLogger.encode(encodings[i][0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a9b4e298d43d0e96aa653a79fe7d51e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/OuterTypeNumberCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAst)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-    public void leaveToken(DetailAST aAst)", "+    public void leaveToken(DetailAST ast)", "-        mCurrentDepth--;", "+        currentDepth--;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aaeffc0774fa5e662c77e1889672667", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-    public void beginTree(DetailAST aRootAST)", "+    public void beginTree(DetailAST rootAST)", "-        super.beginTree(aRootAST);", "-        mStringMap.clear();", "+        super.beginTree(rootAST);", "+        stringMap.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ad43ca7eea97de1be7af356746f5347", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/InnerAssignmentCheck.java", "commitBeforeChange": "fc24f5f8b689ce613cdd0bb2c00e8e50cddc7da5", "commitAfterChange": "14e0b00df5c0e48e03490c9a4ec82a7adaf8d227", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private boolean isAssigment(DetailAST aAST)", "signatureAfterChange": "     private boolean isAssignment(DetailAST aAST)", "diff": ["-    private boolean isAssigment(DetailAST aAST)", "+     */", "+    private boolean isAssignment(DetailAST aAST)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4af08481fb30d331c3e0701b4038ce33", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundTest.java", "commitBeforeChange": "87ef77fe452f7821066ad4906e1c0cf643fa1334", "commitAfterChange": "09f1ba2f35f928d4377637fa284d1ac334617a22", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void test1322879() throws Exception", "signatureAfterChange": "      @Test     public void test1322879And1649038() throws Exception", "diff": ["-    public void test1322879() throws Exception", "+    public void test1322879And1649038() throws Exception"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b1275e92069a3ed20228eadfcd3f96c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "0c58241ecd322179f64ec2370b458813a01e8d3e", "commitAfterChange": "b881f65b1acb0b9fe0595b99cde31636600c3192", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 27, "signatureBeforeChange": "     void verifyOpBegin(int aLineNo, int aColNo, String aText)", "signatureAfterChange": "     void verifyOpBegin(int aLineNo, int aColNo, String aText)", "diff": ["-        verifyWSAroundBegin(aLineNo, aColNo, aText);", "-", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b12ead9ac16e26ffb3028ed3a8ce696", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java", "commitBeforeChange": "9dd69b267b626af533ddf8bc0d37b4fd3744fa6e", "commitAfterChange": "57b908199dfa5c2c9bf9388d92925ccfb312812f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static FilterSet loadSuppressions(             InputSource source, String sourceName)         throws CheckstyleException", "signatureAfterChange": "     private static FilterSet loadSuppressions(             InputSource source, String sourceName)         throws CheckstyleException", "diff": ["-            throw new CheckstyleException(\"unable to find \" + sourceName, e);", "+            throw new CheckstyleException(UNABLE_TO_FIND_ERROR_MESSAGE + sourceName, e);", "-            throw new CheckstyleException(\"unable to parse \"", "+            throw new CheckstyleException(\"Unable to parse \"", "-            throw new CheckstyleException(\"unable to read \" + sourceName, e);", "+            throw new CheckstyleException(\"Unable to read \" + sourceName, e);", "-            throw new CheckstyleException(\"number format exception \"", "+            throw new CheckstyleException(\"Number format exception \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b16bf93eedf87d0ec2060ed752786f0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractNameCheck.java", "commitBeforeChange": "2a8aba9a54d2112b142a1b9e0c4e762e780155c1", "commitAfterChange": "7fa61f5c0b05fc44c9f55a23c816e8e072dcec0e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public AbstractNameCheck(String format)", "signatureAfterChange": "     public AbstractNameCheck(String aFormat)", "diff": ["-    /** Creates a new <code>AbstractNameCheck</code> instance. */", "-    public AbstractNameCheck(String format)", "+     */", "+    public AbstractNameCheck(String aFormat)", "-        super(format);", "+        super(aFormat);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b21591c540fccbe4d6fe3946f2f3162", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setElementStyle(final String aStyle)", "signatureAfterChange": "     public void setElementStyle(final String style)", "diff": ["-    public void setElementStyle(final String aStyle)", "+    public void setElementStyle(final String style)", "-        this.mStyle = this.getOption(ElementStyle.class, aStyle);", "+        this.style = this.getOption(ElementStyle.class, style);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b28ece466b0946f0a541e389d2313d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static JavadocTags getJavadocTags(TextBlock aCmt,             JavadocTagType aTagType)", "signatureAfterChange": "     public static JavadocTags getJavadocTags(TextBlock cmt,             JavadocTagType tagType)", "diff": ["-    public static JavadocTags getJavadocTags(TextBlock aCmt,", "-            JavadocTagType aTagType)", "+    public static JavadocTags getJavadocTags(TextBlock cmt,", "+            JavadocTagType tagType)", "-        final String[] text = aCmt.getText();", "+        final String[] text = cmt.getText();", "-            if ((aTagType.equals(JavadocTagType.ALL) || aTagType", "+            if ((tagType.equals(JavadocTagType.ALL) || tagType", "-                final int line = aCmt.getStartLineNo() + i;", "+                final int line = cmt.getStartLineNo() + i;", "-                    col += aCmt.getStartColNo();", "+                    col += cmt.getStartColNo();", "-            else if (aTagType.equals(JavadocTagType.ALL)", "-                    || aTagType.equals(JavadocTagType.INLINE))", "+            else if (tagType.equals(JavadocTagType.ALL)", "+                    || tagType.equals(JavadocTagType.INLINE))", "-                // Match JavaDoc text after comment characters", "+                // Match Javadoc text after comment characters", "-                        final int line = aCmt.getStartLineNo() + i;", "+                        final int line = cmt.getStartLineNo() + i;", "-                            col += aCmt.getStartColNo();", "+                            col += cmt.getStartColNo();", "-                    // else Error: Unexpected match count for inline JavaDoc", "+                    // else Error: Unexpected match count for inline Javadoc"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b373e3e2cfea71a220e4823cc23a066", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "bf8012b13d260143d771c1ce20a557214ea1c4e8", "commitAfterChange": "3925906faee1cf9310942708e2946d3e598f5f71", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void walk(DetailAST aAST, FileContents aContents)", "signatureAfterChange": "     private void walk(DetailAST aAST, FileContents aContents)", "diff": ["-            setParent(aAST, null); // TODO: Manage parent in DetailAST"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b43b15586ad5baac07ba9b71c661c0a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "552b917ddbaaf8767f50cc103e8feb4127037928", "commitAfterChange": "3d8c8ae213afba764acb9758dc89d8a613f4ea66", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "     void checkWSAfter(int aLineNo, int aColNo,                       MyToken aConstruct, String aAllow)", "signatureAfterChange": "     void checkWSAfter(int aLineNo, int aColNo,                       MyToken aConstruct, String aAllow)", "diff": ["+                aColNo,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b624f051d14c3e7be11f663b13f9c98", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public void addException(AuditEvent evt, Throwable throwable)", "signatureAfterChange": "      @Override     public void addException(AuditEvent evt, Throwable throwable)", "diff": ["-        final StringWriter sw = new StringWriter();", "-        final PrintWriter pw = new PrintWriter(sw);", "-        pw.println(\"<exception>\");", "-        pw.println(\"<![CDATA[\");", "-        throwable.printStackTrace(pw);", "-        pw.println(\"]]>\");", "-        pw.println(\"</exception>\");", "-        pw.flush();", "-        writer.println(encode(sw.toString()));", "+        final StringWriter stringWriter = new StringWriter();", "+        final PrintWriter printer = new PrintWriter(stringWriter);", "+        printer.println(\"<exception>\");", "+        printer.println(\"<![CDATA[\");", "+        throwable.printStackTrace(printer);", "+        printer.println(\"]]>\");", "+        printer.println(\"</exception>\");", "+        printer.flush();", "+        this.writer.println(encode(stringWriter.toString()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b63a9863bdf6250a1f652b6714bbb9b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void checkTag(int lineNo, String... comment)", "signatureAfterChange": "     private void checkTag(int lineNo, String... comment)", "diff": ["-            final String s = comment[i];", "-            final Matcher matcher = tagRE.matcher(s);", "+            final String commentValue = comment[i];", "+            final Matcher matcher = tagRE.matcher(commentValue);", "-                final String content = s.substring(contentStart);", "+                final String content = commentValue.substring(contentStart);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bb7399f1043a1a2e4a3bd40af18cd70", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void logsStarredImportViolation(DetailAST aStartingDot)", "signatureAfterChange": "     private void logsStarredImportViolation(DetailAST startingDot)", "diff": ["-    private void logsStarredImportViolation(DetailAST aStartingDot)", "+    private void logsStarredImportViolation(DetailAST startingDot)", "-        final FullIdent name = FullIdent.createFullIdent(aStartingDot);", "-        if (isStaredImport(name) && !mExcludes.contains(name.getText())) {", "-            log(aStartingDot.getLineNo(), \"import.avoidStar\", name.getText());", "+        final FullIdent name = FullIdent.createFullIdent(startingDot);", "+        if (isStaredImport(name) && !excludes.contains(name.getText())) {", "+            log(startingDot.getLineNo(), \"import.avoidStar\", name.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bbe966c0b7178e2d2993013ccc44c76", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheck.java", "commitBeforeChange": "d868a951ca1bdd8a6313fe10820bc9140ea030ff", "commitAfterChange": "fdc81723bdfd6af2ffc2c901cd8dd5b2fe948267", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r     @Override\r     public void visitToken(final DetailAST aAST)", "signatureAfterChange": "\r     @Override\r     public void visitToken(final DetailAST aAST)", "diff": ["-        final DetailAST annotation =\r", "-            AnnotationUtility.getAnnotation(\r", "-                aAST, SuppressWarningsCheck.SUPPRESS_WARNINGS);\r", "+        final DetailAST annotation = this.getSuppressWarnings(aAST);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bc2977cfba8f3ec13ad7c5aaefb9471", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                if (!inLambda(ast)", "+                if (!isInLambda(ast)", "-                        && !inAbstractOrNativeMethod(ast)", "-                        && !ScopeUtils.inInterfaceBlock(ast)) {", "+                        && !isInAbstractOrNativeMethod(ast)", "+                        && !ScopeUtils.isInInterfaceBlock(ast)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bd208a62deadbe48283f35d4e47fa27", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void checkUnusedTypeParamTags(         final List<JavadocTag> aTags,         final List<String> aTypeParamNames)", "signatureAfterChange": "     private void checkUnusedTypeParamTags(         final List<JavadocTag> tags,         final List<String> typeParamNames)", "diff": ["-        final List<JavadocTag> aTags,", "-        final List<String> aTypeParamNames)", "+        final List<JavadocTag> tags,", "+        final List<String> typeParamNames)", "-        for (int i = aTags.size() - 1; i >= 0; i--) {", "-            final JavadocTag tag = aTags.get(i);", "+        for (int i = tags.size() - 1; i >= 0; i--) {", "+            final JavadocTag tag = tags.get(i);", "-                        if (!aTypeParamNames.contains(typeParamName)) {", "+                        if (!typeParamNames.contains(typeParamName)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4be378755f0fb66f595180639d612d1e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java", "commitBeforeChange": "b14f255427c0b12054de2873fe300b4f4e691bd4", "commitAfterChange": "cc7aeaec906dc3c864477e3050510009b2a946ee", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void postprocessLiteralNew(DetailAST newTokenAst)", "signatureAfterChange": "     private void postProcessLiteralNew(DetailAST newTokenAst)", "diff": ["-    private void postprocessLiteralNew(DetailAST newTokenAst) {", "+    private void postProcessLiteralNew(DetailAST newTokenAst) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bf2cfd422270964155ea085946ea098", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testListFiles_notFile() throws Exception", "signatureAfterChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testListFilesNotFile() throws Exception", "diff": ["-    public void testListFiles_notFile() throws Exception {", "+    public void testListFilesNotFile() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bf5b6890033934d306123f6922b39fe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public MatchSuppressor getSuppressor()", "signatureAfterChange": "     public MatchSuppressor getSuppressor()", "diff": ["-        return mSuppressor;", "+        return suppressor;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bfaf56e56ea9f1c65332a139697a5db", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-            int i;", "-            for (i = 0; headerLineNo < headerSize && i < fileSize; i++) {", "-                final String line = lines.get(i);", "+            int index;", "+            for (index = 0; headerLineNo < headerSize && index < fileSize; index++) {", "+                final String line = lines.get(index);", "-                    log(i + 1, MSG_HEADER_MISMATCH, getHeaderLines().get(", "+                    log(index + 1, MSG_HEADER_MISMATCH, getHeaderLines().get(", "-            if (i == fileSize) {", "+            if (index == fileSize) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bffa162473374a91192dde2374905a4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java", "commitBeforeChange": "904de34fcd984edce3d6042a5a17e2a969254588", "commitAfterChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public static boolean branchContains(DetailNode node, int type)", "signatureAfterChange": "     public static boolean containsInBranch(DetailNode node, int type)", "diff": ["-    public static boolean branchContains(DetailNode node, int type) {", "+    public static boolean containsInBranch(DetailNode node, int type) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c30e7e29844774b40d4e1f95133ece2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/IntRangeFilterTest.java", "commitBeforeChange": "7abbd6af2f63a9e5bfa067f3058b5a3e738971de", "commitAfterChange": "8d242382f8bb77488b6da23bdd0d2d61583703fc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          public void testEquals()", "signatureAfterChange": "          public void testEquals()", "diff": ["-        final Filter filter = new IntRangeFilter(0, 2);", "-        final Filter filter2 = new IntRangeFilter(0, 2);", "-        final Filter filter3 = new IntRangeFilter(0, 1);", "-        final Filter filter4 = new IntRangeFilter(1, 2);", "+        final IntFilter filter = new IntRangeFilter(0, 2);", "+        final IntFilter filter2 = new IntRangeFilter(0, 2);", "+        final IntFilter filter3 = new IntRangeFilter(0, 1);", "+        final IntFilter filter4 = new IntRangeFilter(1, 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c7e1354a384c1c9b1655aa66507ff75", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractComplexityCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected final void setCurrentValue(BigInteger aValue)", "signatureAfterChange": "     protected final void setCurrentValue(BigInteger value)", "diff": ["-    protected final void setCurrentValue(BigInteger aValue)", "+    protected final void setCurrentValue(BigInteger value)", "-        mCurrentValue = aValue;", "+        currentValue = value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c8f3b55cfbe4b059de84d0645ba8ff0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private DetailAST getFirstNodeInsideIfBlock(             DetailAST aBlock, DetailAST aVariable)", "signatureAfterChange": "     private DetailAST getFirstNodeInsideIfBlock(             DetailAST block, DetailAST variable)", "diff": ["-            DetailAST aBlock, DetailAST aVariable)", "+            DetailAST block, DetailAST variable)", "-        if (!isVariableInOperatorExpr(aBlock, aVariable)) {", "-            DetailAST currentNode = aBlock.getLastChild();", "+        if (!isVariableInOperatorExpr(block, variable)) {", "+            DetailAST currentNode = block.getLastChild();", "-                if (isChild(previousNode, aVariable)) {", "+                if (isChild(previousNode, variable)) {", "-                else if (isChild(currentNode, aVariable)) {", "+                else if (isChild(currentNode, variable)) {", "-                    && isChild(currentNode, aVariable))", "+                    && isChild(currentNode, variable))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cd36a6de74370041e7700bb83755597", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java", "commitBeforeChange": "02aaa1b7f653e25c34ef7f186fa1d940079384e8", "commitAfterChange": "52ac2776d7f128ff812b73b54dcc12210661f98b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic ConfigurationBuilder(File aROOT) \t\t\tthrows CheckstyleException, IOException", "signatureAfterChange": "  \tpublic ConfigurationBuilder(File aROOT) \t\t\tthrows CheckstyleException, IOException", "diff": ["-\t", "+", "-\t\tthis.mROOT = aROOT;", "-\t\tmConfig = getConfigurationFromXML(mXmlName, System.getProperties());", "-\t\tlistFiles(mFiles, mROOT, \"java\");", "+\t\tthis.ROOT = aROOT;", "+\t\tconfig = getConfigurationFromXML(xmlName, System.getProperties());", "+\t\tlistFiles(files, ROOT, \"java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ce882298584c0f676ff9708d2093be1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PropertyCacheFileTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testException_NoSuchAlgorithmException() throws Exception", "signatureAfterChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testExceptionNoSuchAlgorithmException() throws Exception", "diff": ["-    public void testException_NoSuchAlgorithmException() throws Exception {", "+    public void testExceptionNoSuchAlgorithmException() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ceb1b456ab4fda3af3f2f61eb6dd261", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java", "commitBeforeChange": "0db81f33e13f9829ee7de0b261f042017084b78f", "commitAfterChange": "70a6e2e6d34fa5a404e88e45cd62a20a06e19556", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testCacheFileChangeInConfig() throws Exception", "signatureAfterChange": "      @Test     public void testCacheFileChangeInConfig() throws Exception", "diff": ["-        checker.addListener(new BriefLogger(stream));", "+        checker.addListener(new BriefUtLogger(stream));", "-        otherChecker.addListener(new BriefLogger(stream));", "+        otherChecker.addListener(new BriefUtLogger(stream));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cf73944b3381f07e683c1dc8d89e2d8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private boolean checkIf(final DetailAST aAST, boolean aUseBreak,                             boolean aUseContinue)", "signatureAfterChange": "     private boolean checkIf(final DetailAST ast, boolean useBreak,                             boolean useContinue)", "diff": ["-    private boolean checkIf(final DetailAST aAST, boolean aUseBreak,", "-                            boolean aUseContinue)", "+    private boolean checkIf(final DetailAST ast, boolean useBreak,", "+                            boolean useContinue)", "-        final DetailAST thenStmt = aAST.findFirstToken(TokenTypes.RPAREN)", "+        final DetailAST thenStmt = ast.findFirstToken(TokenTypes.RPAREN)", "-        boolean isTerminated = isTerminated(thenStmt, aUseBreak, aUseContinue);", "+        boolean isTerminated = isTerminated(thenStmt, useBreak, useContinue);", "-                                        aUseBreak, aUseContinue);", "+                                        useBreak, useContinue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d10406e2819ff033776df053ef9a6bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "730ade67d5f3f286c1004ce9a772fd4bc3bc9307", "commitAfterChange": "f8459eb6742402c5c33f7b80e4c5844998a258ac", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static Configuration loadConfiguration(String aConfigFname,                                                   Properties aOverrideProps)         throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(String aConfigFname,                                                   Properties aOverrideProps)         throws CheckstyleException", "diff": ["-            final ConfigurationLoader loader = new ConfigurationLoader();", "-            loader.mOverrideProps = aOverrideProps;", "+            final ConfigurationLoader loader =", "+                new ConfigurationLoader(aOverrideProps);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d10d25a8ec9665496a2f9d7b9f2553d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "1e541f0b988df01b3ff13885521d39790df74cef", "commitAfterChange": "8985e645a8a591b19c729cff16b8440b70a8022e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processNestedGenerics(DetailAST ast, String line, int after)", "signatureAfterChange": "     private void processNestedGenerics(DetailAST ast, String line, int after)", "diff": ["-            && whitespaceBetween(after, indexOfAmp, line)) {", "+            && containsWhitespaceBetween(after, indexOfAmp, line)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d18753b887dd0dd50faf582280a08a4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void raiseCounter(DetailAST aMethod)", "signatureAfterChange": "     private void raiseCounter(DetailAST method)", "diff": ["-    private void raiseCounter(DetailAST aMethod)", "+    private void raiseCounter(DetailAST method)", "-        final MethodCounter actualCounter = mCounters.peek();", "-        final DetailAST temp = aMethod.findFirstToken(TokenTypes.MODIFIERS);", "+        final MethodCounter actualCounter = counters.peek();", "+        final DetailAST temp = method.findFirstToken(TokenTypes.MODIFIERS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d672ae8bb084887492d7709763a73a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "3f691ec451055c2752ae2d6b25f9a3c050a10783", "commitAfterChange": "425fd5a27cd567d5784bd246729c55cf8cda3dbd", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "         protected boolean containsName(Set<DetailAST> set, DetailAST ident)", "signatureAfterChange": "         protected boolean containsFieldOrVariableDef(Set<DetailAST> set, DetailAST ident)", "diff": ["-        protected boolean containsName(Set<DetailAST> set, DetailAST ident) {", "+        protected boolean containsFieldOrVariableDef(Set<DetailAST> set, DetailAST ident) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d8d6473bad0e675250dfc9ff6e7cdce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OverloadMethodsDeclarationOrderCheck.java", "commitBeforeChange": "6839ac4fd83dde7060c8f6f28e75aa3d6ff2456b", "commitAfterChange": "31f6765fdcf2233ca6c53730c2fc196576557f66", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void checkOverloadMethodsGrouping(DetailAST objectBlock)", "signatureAfterChange": "     private void checkOverloadMethodsGrouping(DetailAST objectBlock)", "diff": ["-                    final int priviousIndex = methodIndexMap.get(methodName);", "-                    if (currentIndex - priviousIndex > allowedDistance) {", "+                    final int previousIndex = methodIndexMap.get(methodName);", "+                    if (currentIndex - previousIndex > allowedDistance) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d9446ed909fb083e8bd196e04c6d77e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "22136c67e9c83494e7aa977ffe7a79beee1b4175", "commitAfterChange": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r     @Override\r     public void visitToken(final DetailAST aMethodCall)", "signatureAfterChange": "\r \r     @Override\r     public void visitToken(final DetailAST aMethodCall)", "diff": ["-        final AST dot = aMethodCall.getFirstChild();\r", "+        final DetailAST dot = aMethodCall.getFirstChild();\r", "-        final AST objCalledOn = dot.getFirstChild();\r", "+        final DetailAST objCalledOn = dot.getFirstChild();\r", "-        final AST method = objCalledOn.getNextSibling();\r", "-        final AST expr = dot.getNextSibling().getFirstChild();\r", "+        final DetailAST method = objCalledOn.getNextSibling();\r", "+        final DetailAST expr = dot.getNextSibling().getFirstChild();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d968410f587f6368dd5d0f2bbcc254a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileSetCheck.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     void setMessageDispatcher(MessageDispatcher aDispatcher);", "signatureAfterChange": "     void setMessageDispatcher(MessageDispatcher dispatcher);", "diff": ["-    void setMessageDispatcher(MessageDispatcher aDispatcher);", "+    void setMessageDispatcher(MessageDispatcher dispatcher);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d9a248bb0ccc2fa2cbb7d2baaf1e25a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/CommonUtilsTest.java", "commitBeforeChange": "904de34fcd984edce3d6042a5a17e2a969254588", "commitAfterChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testFileExtensions()", "signatureAfterChange": "      @Test     public void testFileExtensions()", "diff": ["-        assertFalse(CommonUtils.fileExtensionMatches(file, fileExtensions));", "-        assertTrue(CommonUtils.fileExtensionMatches(file, (String[]) null));", "+        assertFalse(CommonUtils.matchesFileExtension(file, fileExtensions));", "+        assertTrue(CommonUtils.matchesFileExtension(file, (String[]) null));", "-        assertTrue(CommonUtils.fileExtensionMatches(file, fileExtensions));", "+        assertTrue(CommonUtils.matchesFileExtension(file, fileExtensions));", "-        assertTrue(CommonUtils.fileExtensionMatches(file, \"\"));", "+        assertTrue(CommonUtils.matchesFileExtension(file, \"\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dc6ee5025c82c3ed0856553c51d6c7e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "         @Override         public void syntaxError(                 Recognizer<?, ?> recognizer, Object offendingSymbol,                 int line, int charPositionInLine,                 String msg, RecognitionException e)", "signatureAfterChange": "         @Override         public void syntaxError(                 Recognizer<?, ?> recognizer, Object offendingSymbol,                 int line, int charPositionInLine,                 String msg, RecognitionException ex)", "diff": ["-                String msg, RecognitionException e) {", "+                String msg, RecognitionException ex) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dddf9291c21ab4936bf44606ad3d608", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/FilterSet.java", "commitBeforeChange": "7abbd6af2f63a9e5bfa067f3058b5a3e738971de", "commitAfterChange": "8d242382f8bb77488b6da23bdd0d2d61583703fc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public boolean accept(Object aObject)", "signatureAfterChange": "     public boolean accept(AuditEvent aEvent)", "diff": ["-    public boolean accept(Object aObject)", "+    public boolean accept(AuditEvent aEvent)", "-            if (!filter.accept(aObject)) {", "+            if (!filter.accept(aEvent)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4df0f3e8a8660494f836274bc9572bfb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "9e29d2c98961b47c897c02e75dd2a672d1045b31", "commitAfterChange": "a031901307ecd3b1ae035d7ac185bc221472b396", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            checkComment(cmt);", "+            checkComment(aAST, cmt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e06415da64983248b3882436dfeae4d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setGroups(String[] aGroups)", "signatureAfterChange": "     public void setGroups(String[] packageGroups)", "diff": ["-    public void setGroups(String[] aGroups)", "+    public void setGroups(String[] packageGroups)", "-        mGroups = new Pattern[aGroups.length];", "+        groups = new Pattern[packageGroups.length];", "-        for (int i = 0; i < aGroups.length; i++) {", "-            String pkg = aGroups[i];", "+        for (int i = 0; i < packageGroups.length; i++) {", "+            String pkg = packageGroups[i];", "-            mGroups[i] = grp;", "+            groups[i] = grp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e38461b95b3218b31e5b632ce27e711", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolderTest.java", "commitBeforeChange": "bf529ef600fa9ef2034d0412c198b2121f2b94f2", "commitAfterChange": "ce196814d857a4244a80c51d5151cc35e90b6749", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testAstWithouChildren()", "signatureAfterChange": "      @Test     public void testAstWithoutChildren()", "diff": ["-    public void testAstWithouChildren() {", "+    public void testAstWithoutChildren() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e4e9ec51cf830493daa9da607e53d12", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java", "commitBeforeChange": "896af516b0028ff2a26cc1888dfaba620d3fe9e0", "commitAfterChange": "55c92042eb6986e905529de841d3d1c9a7b2b6dd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private static boolean isPreceedsEmptyForInit(DetailAST ast)", "signatureAfterChange": "     private static boolean isPrecedingEmptyForInit(DetailAST ast)", "diff": ["-    private static boolean isPreceedsEmptyForInit(DetailAST ast) {", "+    private static boolean isPrecedingEmptyForInit(DetailAST ast) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e4f83a880f6a345a5c0276ac79c0a42", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheck.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void setIgnoreComments(boolean aIgnore)", "signatureAfterChange": "     public void setIgnoreComments(boolean ignore)", "diff": ["-    public void setIgnoreComments(boolean aIgnore)", "+    public void setIgnoreComments(boolean ignore)", "-        if (aIgnore) {", "-            mOptions.setSuppressor(mSuppressor);", "+        if (ignore) {", "+            options.setSuppressor(suppressor);", "-            mOptions.setSuppressor(NeverSuppress.INSTANCE);", "+            options.setSuppressor(NeverSuppress.INSTANCE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e60284ad3c67a8e25524820ad4eaddc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "e7547bb7ddccec6737cea118a41864fc349ea1d2", "commitAfterChange": "d220d7c3cc74490c7f2923f2ea85d00133afe98c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testTypeNamesForThreePermitedCapitalLettersWithOverriddenMethod() throws Exception", "signatureAfterChange": "      @Test     public void testTypeNamesForThreePermittedCapitalLettersWithOverriddenMethod() throws Exception", "diff": ["-    public void testTypeNamesForThreePermitedCapitalLettersWithOverriddenMethod() throws Exception {", "+    public void testTypeNamesForThreePermittedCapitalLettersWithOverriddenMethod() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4eb8b40e57b9baacf779ff320465f6ef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     @Override     public void fileFinished(AuditEvent aEvt)", "signatureAfterChange": "     @Override     public void fileFinished(AuditEvent evt)", "diff": ["-    public void fileFinished(AuditEvent aEvt)", "+    public void fileFinished(AuditEvent evt)", "-        mWriter.println(\"</file>\");", "+        writer.println(\"</file>\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f0808d78280e1001810dda7b6aec056", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/whitespace/InputEmptyLineSeparatorCheck.java", "commitBeforeChange": "15b81770b88efd91e09318bdb80bf406c278af76", "commitAfterChange": "a89c41adef37935089f9e8f8e28feab62eb49639", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int compareTo(InputGenericWhitespaceCheck aObject)", "signatureAfterChange": "     public int compareTo(Object aObject)", "diff": ["-    public int compareTo(InputGenericWhitespaceCheck aObject)", "+    public int compareTo(Object aObject)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f09426eeb81d778e16a3f5250ca3d86", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public final void setAllowSamelineParametrizedAnnotation(boolean aAllow)", "signatureAfterChange": "     public final void setAllowSamelineParametrizedAnnotation(boolean allow)", "diff": ["-    public final void setAllowSamelineParametrizedAnnotation(boolean aAllow)", "+    public final void setAllowSamelineParametrizedAnnotation(boolean allow)", "-        mAllowSamelineParametrizedAnnotation = aAllow;", "+        allowSamelineParametrizedAnnotation = allow;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f0c1faecd1024d155e6069ad5ee1461", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "d6272b70eb5ad61fd8ab34091e970c50b1f67386", "commitAfterChange": "1a2c318e22a0b2b22ccc76019217c0892fe2d59b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private static void usage()", "signatureAfterChange": "     private static void printUsage()", "diff": ["-    /** Prints the usage information. **/", "-    private static void usage()", "-    {", "-        final HelpFormatter hf = new HelpFormatter();", "-        hf.printHelp(String.format(\"java %s [options] -c <config.xml> file...\",", "-                Main.class.getName()), buildOptions());", "-    }", "+    /** Prints the usage information. **/", "+    private static void printUsage()", "+        final HelpFormatter hf = new HelpFormatter();", "+        hf.printHelp(String.format(\"java %s [options] -c <config.xml> file...\",", "+                Main.class.getName()), buildOptions());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fa308e74f0f8e60458c00c72db9959a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "904de34fcd984edce3d6042a5a17e2a969254588", "commitAfterChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void validateNewLinePosition(DetailAST brace, DetailAST startToken, String braceLine)", "signatureAfterChange": "     private void validateNewLinePosition(DetailAST brace, DetailAST startToken, String braceLine)", "diff": ["-            if (CommonUtils.whitespaceBefore(brace.getColumnNo(), braceLine)) {", "+            if (CommonUtils.hasWhitespaceBefore(brace.getColumnNo(), braceLine)) {", "-        else if (!CommonUtils.whitespaceBefore(brace.getColumnNo(), braceLine)) {", "+        else if (!CommonUtils.hasWhitespaceBefore(brace.getColumnNo(), braceLine)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fb7a6c4a24c709628fcb8173b4b93a9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "commitBeforeChange": "521dacce7582a4349a9b02980c3e849e83c023fb", "commitAfterChange": "82d8e91024a57a96fbb6410dacb29d6a3f582903", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static boolean containsJavadocTag(final TextBlock javadoc)", "signatureAfterChange": "     private static boolean containsJavadocTag(final TextBlock javadoc)", "diff": ["-                MissingOverrideCheck.MATCH_INHERITDOC.matcher(line);", "+                MATCH_INHERITDOC.matcher(line);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fc09b88628302e0dd311c8ca80fe249", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static String getCharsTillDot(DetailNode textNode)", "signatureAfterChange": "     private static String getCharsTillDot(DetailNode textNode)", "diff": ["-            if (\".\".equals(child.getText())", "+            if (PERIOD.equals(child.getText())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fcc692413aba283d4e6efb72ec1e9bf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "ca89807d485f512061d7a7138aa91b454d85d466", "commitAfterChange": "ecd7ee879aa6cbc51fcb41093dbf42843256184f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void collectDeclarations(Deque<LexicalFrame> aFrameStack,         DetailAST aAST)", "signatureAfterChange": "     private void collectDeclarations(Deque<LexicalFrame> aFrameStack,         DetailAST aAST)", "diff": ["-                    ((ClassFrame) frame).addStaticMember(name);", "+                    ((ClassFrame) frame).addStaticMethod(name);", "-                    ((ClassFrame) frame).addInstanceMember(name);", "+                    ((ClassFrame) frame).addInstanceMethod(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fe72e5e0ee8ef7ae1e8ea578effc63c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private boolean hasProperAccessModifier(DetailAST variableDef, String variableName)", "signatureAfterChange": "     private boolean hasProperAccessModifier(DetailAST variableDef, String variableName)", "diff": ["-        if (!\"private\".equals(variableScope)) {", "+        if (!PRIVATE_ACCESS_MODIFIER.equals(variableScope)) {", "-                || packageAllowed && \"package\".equals(variableScope)", "-                || protectedAllowed && \"protected\".equals(variableScope)", "+                || packageAllowed && PACKAGE_ACCESS_MODIFIER.equals(variableScope)", "+                || protectedAllowed && PROTECTED_ACCESS_MODIFIER.equals(variableScope)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fed532935fd12afcb1027bf843113f4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     @Override     public String get(final int aLineNo)", "signatureAfterChange": "     @Override     public String get(final int lineNo)", "diff": ["-    public String get(final int aLineNo)", "+    public String get(final int lineNo)", "-        return mLines[aLineNo];", "+        return lines[lineNo];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fff3a941442eccf8bf7549f4ff3be71", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Configurable.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     void configure(Configuration aConfiguration) throws CheckstyleException;", "signatureAfterChange": "     void configure(Configuration configuration) throws CheckstyleException;", "diff": ["-    void configure(Configuration aConfiguration) throws CheckstyleException;", "+    void configure(Configuration configuration) throws CheckstyleException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "501d3c343c1e53d92eb5269ca2c31c9a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "contrib/j2ee/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/j2ee/SessionBeanEjbCreateCheck.java", "commitBeforeChange": "cb72198165086caf36293c23521c2ad418d1eb3c", "commitAfterChange": "9089e7a210285af0b2f539c0bf03525d20fdf611", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        if (nameAST.getText().equals(\"ejbCreate\")", "+        if (nameAST.getText().startsWith(\"ejbCreate\")", "-            checkMethod(aAST);", "+            // cannot be final", "+            checkMethod(aAST, false);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5028ad0165ae60dc0e29cd4f2172d0c8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private Class<?> resolveQualifiedName(final String aName)", "signatureAfterChange": "     private Class<?> resolveQualifiedName(final String name)", "diff": ["-    private Class<?> resolveQualifiedName(final String aName)", "+    private Class<?> resolveQualifiedName(final String name)", "-            if (isLoadable(aName)) {", "-                return safeLoad(aName);", "+            if (isLoadable(name)) {", "+                return safeLoad(name);", "-            final int dot = aName.lastIndexOf(\".\");", "+            final int dot = name.lastIndexOf(\".\");", "-                    aName.substring(0, dot) + \"$\" + aName.substring(dot + 1);", "+                    name.substring(0, dot) + \"$\" + name.substring(dot + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5056054508ff974baceb280280c397e4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/MethodSignature.java", "commitBeforeChange": "6970485b88600343de72af03a6bf87cf78e6cf55", "commitAfterChange": "4d0adc9deed7f3df296f8016941414ec1600955b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     String getName()", "signatureAfterChange": "     MyCommonAST getName()", "diff": ["-    String getName()", "+    MyCommonAST getName()", "-        return mName.getText();", "+        return mName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5069f2e4dd1a9cef8c88da26f0233ea9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "113ea8405c8b753540ee3423d7e37e383f269155", "commitAfterChange": "7f7db38a097a95c264307123924779380fb40077", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected void checkRParen()", "signatureAfterChange": "     protected void checkRParen()", "diff": ["-        if (rparenLevel == getLevel()", "-            || !startsLine(rparen))", "-        {", "+        if (getLevel().accept(rparenLevel) || !startsLine(rparen)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "507c088ec37d7cc0157667efece584d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public final void setCustomImportOrderRules(final String aInputCustomImportOrder)", "signatureAfterChange": "     public final void setCustomImportOrderRules(final String inputCustoimportOrder)", "diff": ["-    public final void setCustomImportOrderRules(final String aInputCustomImportOrder)", "+    public final void setCustomImportOrderRules(final String inputCustoimportOrder)", "-        mCustomImportOrderRules.clear();", "+        customImportOrderRules.clear();", "-            for (String currentState : aInputCustomImportOrder", "+            for (String currentState : inputCustoimportOrder", "-                addRulesToList(currentState);", "+                addRuleastoList(currentState);", "-            mCustomImportOrderRules.add(NON_GROUP_RULE_GROUP);", "+            customImportOrderRules.add(NON_GROUP_RULE_GROUP);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50f74e3ce65381194f7b1065590eb09d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private static DetailAST getNthChild(DetailAST aAST, int aIndex)", "signatureAfterChange": "     private static DetailAST getNthChild(DetailAST ast, int index)", "diff": ["-    private static DetailAST getNthChild(DetailAST aAST, int aIndex)", "+    private static DetailAST getNthChild(DetailAST ast, int index)", "-        DetailAST child = aAST.getFirstChild();", "+        DetailAST child = ast.getFirstChild();", "-            for (int i = 0; i < aIndex && child != null; ++i) {", "+            for (int i = 0; i < index && child != null; ++i) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "511019e1f85aceae61484d95d489d531", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Deprecated public FileContents(String aFilename, String[] aLines)", "signatureAfterChange": "     @Deprecated public FileContents(String filename, String[] lines)", "diff": ["-    @Deprecated public FileContents(String aFilename, String[] aLines)", "+    @Deprecated public FileContents(String filename, String[] lines)", "-        mFilename = aFilename;", "-        mText = FileText.fromLines(new File(aFilename), Arrays.asList(aLines));", "+        this.filename = filename;", "+        text = FileText.fromLines(new File(filename), Arrays.asList(lines));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5110f5ce30e90cf1d12d7b523c04dde5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void checkIndentation()", "signatureAfterChange": "      @Override     public void checkIndentation()", "diff": ["-        checkExpressionSubtree(methodName, getLevel(), false, false);", "+        checkExpressionSubtree(methodName, getIndent(), false, false);", "-            new IndentLevel(getLevel(), getBasicOffset()),", "+            new IndentLevel(getIndent(), getBasicOffset()),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51192b2b8735544419d53af4a6199da0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void checkAnnotations(DetailAST aModifierNode, int aCorrectLevel)", "signatureAfterChange": "     private void checkAnnotations(DetailAST modifierNode, int correctLevel)", "diff": ["-    private void checkAnnotations(DetailAST aModifierNode, int aCorrectLevel)", "+    private void checkAnnotations(DetailAST modifierNode, int correctLevel)", "-        DetailAST annotation = aModifierNode.getFirstChild();", "+        DetailAST annotation = modifierNode.getFirstChild();", "-            else if (annotation.getColumnNo() != aCorrectLevel && !hasNodeBefore(annotation)) {", "+            else if (annotation.getColumnNo() != correctLevel && !hasNodeBefore(annotation)) {", "-                    getAnnotationName(annotation), annotation.getColumnNo(), aCorrectLevel);", "+                    getAnnotationName(annotation), annotation.getColumnNo(), correctLevel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51281379e840bb4ce2ed8fb60f5bb9c9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "f8ea4c69a2228c5aca6c0b6e08a39a613d157708", "commitAfterChange": "8d6fa332a9c8b0c350dfcb1d923d70bc5f3d921b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Checker(Configuration aConfig, PrintStream aLog)         throws RESyntaxException", "signatureAfterChange": "     public Checker(Configuration aConfig, PrintStream aLog)         throws RESyntaxException", "diff": ["-        final Verifier v = new VerifierImpl(aConfig);", "+        final Verifier v = new Verifier(aConfig);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "513166792bda717baa05bff6d2b6fa49", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Filter.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     boolean accept(AuditEvent aEvent);", "signatureAfterChange": "     boolean accept(AuditEvent event);", "diff": ["-    boolean accept(AuditEvent aEvent);", "+    boolean accept(AuditEvent event);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51475e03447bfaf0fdc8b6ddbc7f03fa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public DetectorOptions setSuppressor(MatchSuppressor aSup)", "signatureAfterChange": "     public DetectorOptions setSuppressor(MatchSuppressor sup)", "diff": ["-    public DetectorOptions setSuppressor(MatchSuppressor aSup)", "+    public DetectorOptions setSuppressor(MatchSuppressor sup)", "-        mSuppressor = aSup;", "+        suppressor = sup;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "515ce61b44302d82dc97a51da5128270", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public boolean isReference(String aEnt)", "signatureAfterChange": "     public boolean isReference(String ent)", "diff": ["-    public boolean isReference(String aEnt)", "+    public boolean isReference(String ent)", "-        if (!(aEnt.charAt(0) == '&') || !aEnt.endsWith(\";\")) {", "+        if (!(ent.charAt(0) == '&') || !ent.endsWith(\";\")) {", "-        if (aEnt.charAt(1) == '#') {", "+        if (ent.charAt(1) == '#') {", "-            if (aEnt.charAt(2) == 'x') {", "+            if (ent.charAt(2) == 'x') {", "-                    aEnt.substring(prefixLength, aEnt.length() - 1), radix);", "+                    ent.substring(prefixLength, ent.length() - 1), radix);", "-        final String name = aEnt.substring(1, aEnt.length() - 1);", "+        final String name = ent.substring(1, ent.length() - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5222e79b58322602dcdef350b6919839", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setIgnoreVariablePattern(String aIgnorePattern)", "signatureAfterChange": "     public void setIgnoreVariablePattern(String ignorePattern)", "diff": ["-    public void setIgnoreVariablePattern(String aIgnorePattern)", "+    public void setIgnoreVariablePattern(String ignorePattern)", "-        this.mIgnoreVariablePattern = Pattern.compile(aIgnorePattern);", "+        this.ignoreVariablePattern = Pattern.compile(ignorePattern);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5232ebc0f3e69e94535c34260ec22f37", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void setMaxProtected(int aValue)", "signatureAfterChange": "     public void setMaxProtected(int value)", "diff": ["-    public void setMaxProtected(int aValue)", "+    public void setMaxProtected(int value)", "-        mMaxProtected = aValue;", "+        maxProtected = value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5267a8d9d81e5c58d2f75755beed8a94", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "3c7c3cbe88a2bec0962702305db4f2b05117501c", "commitAfterChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void checkComment(final DetailAST ast, final TextBlock comment)", "signatureAfterChange": "     private void checkComment(final DetailAST ast, final TextBlock comment)", "diff": ["-        if (checkFirstSentence) {", "+        if (checkingFirstSentence) {", "-        if (checkHtml) {", "+        if (checkingHtml) {", "-        if (checkEmptyJavadoc) {", "+        if (checkingEmptyJavadoc) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "526d4c4c2cdb85c6a9e78cc891e685c8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public int getCurrentIndentation()", "signatureAfterChange": "     public int getCurrentIndentation()", "diff": ["-        return mFirstNode.getColumnNo() + mIndentLevel;", "+        return firstNode.getColumnNo() + indentLevel;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52778f171c779224f5af6995db52a6ee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/PrimordialHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public IndentLevel getSuggestedChildLevel(AbstractExpressionHandler child)", "signatureAfterChange": "      @Override     public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child)", "diff": ["-    public IndentLevel getSuggestedChildLevel(AbstractExpressionHandler child) {", "+    public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52aca79bdf4083edb3db90c6fa6d59f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/XDocsPagesTest.java", "commitBeforeChange": "66ed32ae55811c22434e7296566915759e921305", "commitAfterChange": "0d1bef9960d1e9f93c6ca6d83f8f4bacc1a98db7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private static void buildAndTestXml(String fileName, String unserializedSource)             throws IOException, ParserConfigurationException", "signatureAfterChange": "      private static void buildAndTestXml(String fileName, String unserializedSource)             throws IOException, ParserConfigurationException", "diff": ["-        testRawXml(fileName, code, unserializedSource);", "+        // test only", "+        getRawXml(fileName, code, unserializedSource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52b2113e8374741318ec2ed870b213f7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        switch (aAST.getType()) {", "+        switch (ast.getType()) {", "-            visitPackageDef(aAST);", "+            visitPackageDef(ast);", "-            visitClassDef(aAST);", "+            visitClassDef(ast);", "-            mContext.visitType(aAST);", "+            context.visitType(ast);", "-            mContext.visitLiteralNew(aAST);", "+            context.visitLiteralNew(ast);", "-            mContext.visitLiteralThrows(aAST);", "+            context.visitLiteralThrows(ast);", "-            throw new IllegalStateException(aAST.toString());", "+            throw new IllegalStateException(ast.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52c8c3624b590dbc52f6fa4542ef41f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "ba942fa395f11201db10826cfca371e542ec9528", "commitAfterChange": "f32694566e7a2bca8c0933bfb19ed0431421111b", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     void reportPackageName(LineText aName)", "signatureAfterChange": "     void reportPackageName(LineText aName)", "diff": ["-        checkPackageName(aName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52f1e53989f0c0dd737f1e0f15250fc9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "0382b7907b54e95408344863915a847dabc37f12", "commitAfterChange": "eb5896a4a1d66552f5100046413f15d62b485b62", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected final ClassInfo findClassAlias(final String name)", "signatureAfterChange": "     protected final AbstractClassInfo findClassAlias(final String name)", "diff": ["-    protected final ClassInfo findClassAlias(final String name) {", "-        ClassInfo ci = null;", "-        final Iterator<Map<String, ClassInfo>> iterator = typeParams.descendingIterator();", "+    protected final AbstractClassInfo findClassAlias(final String name) {", "+        AbstractClassInfo ci = null;", "+        final Iterator<Map<String, AbstractClassInfo>> iterator = typeParams.descendingIterator();", "-            final Map<String, ClassInfo> paramMap = iterator.next();", "+            final Map<String, AbstractClassInfo> paramMap = iterator.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "530adcd3bb892848f95c3fdaa2a9aafc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "0b98c0389e2cf745cb125a89dece57538fc672b7", "commitAfterChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-            log(rootAST.getLineNo(), rootAST.getColumnNo(), \"ncss.file\",", "+            log(rootAST.getLineNo(), rootAST.getColumnNo(), MSG_FILE,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5315c5936f1fa2a96fd362fe9ca73506", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "c2d3932843e70e4bb5df7161800aca248f9af778", "commitAfterChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static String hexEncode(byte[] aByteArray)", "signatureAfterChange": "     private static String hexEncode(byte[] aByteArray)", "diff": ["-            buf.append(sHexChars[high]);", "-            buf.append(sHexChars[low]);", "+            buf.append(HEX_CHARS[high]);", "+            buf.append(HEX_CHARS[low]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "531e852f5e10b58d82185030e441f601", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheckTest.java", "commitBeforeChange": "6839ac4fd83dde7060c8f6f28e75aa3d6ff2456b", "commitAfterChange": "31f6765fdcf2233ca6c53730c2fc196576557f66", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testwaiverParentToken()             throws Exception", "signatureAfterChange": "      @Test     public void testWaiverParentToken()             throws Exception", "diff": ["-    public void testwaiverParentToken()", "+    public void testWaiverParentToken()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5328fe288a4350a7856b41f6b457dee5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ArrayInitHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected IndentLevel getLevelImpl()", "signatureAfterChange": "      @Override     protected IndentLevel getIndentImpl()", "diff": ["-    protected IndentLevel getLevelImpl() {", "+    protected IndentLevel getIndentImpl() {", "-            return ((BlockParentHandler) getParent()).getChildrenExpectedLevel();", "+            return ((BlockParentHandler) getParent()).getChildrenExpectedIndent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "537257d451e6791c027326832762b715", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "commitAfterChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testWithOneArgWIthoutParenthesesWithoutTypeOneLineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithoutParenthesesWithoutTypeOneLineBody()         throws Exception", "diff": ["-    public void testWithOneArgWIthoutParenthesesWithoutTypeOneLineBody()", "+    public void testWithOneArgWithoutParenthesesWithoutTypeOneLineBody()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5375b09d7153f58b4a99841521165b3e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/IntMatchFilter.java", "commitBeforeChange": "7abbd6af2f63a9e5bfa067f3058b5a3e738971de", "commitAfterChange": "8d242382f8bb77488b6da23bdd0d2d61583703fc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public boolean accept(Object aObject)", "signatureAfterChange": "     public boolean accept(Integer aInt)", "diff": ["-    /** @see com.puppycrawl.tools.checkstyle.api.Filter */", "-    public boolean accept(Object aObject)", "+    /** @see com.puppycrawl.tools.checkstyle.filters.IntFilter */", "+    public boolean accept(Integer aInt)", "-        return mMatchValue.equals(aObject);", "+        return mMatchValue.equals(aInt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "537edb0d210c8b4db28cea112b54c6d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ArrayInitHandler.java", "commitBeforeChange": "c4a7d06206d86f52665eae47af4db28dc59d93a3", "commitAfterChange": "c2ce485b481ba4bd26eb3ba2e3cc6c1850539e0c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private int getNextFirstNonblankOnLineAfter(int lineNo, int columnNo)", "signatureAfterChange": "     private int getNextFirstNonBlankOnLineAfter(int lineNo, int columnNo)", "diff": ["-    private int getNextFirstNonblankOnLineAfter(int lineNo, int columnNo) {", "+    private int getNextFirstNonBlankOnLineAfter(int lineNo, int columnNo) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53b0830d0fb1bb0b9a08cfbb63d64979", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "904de34fcd984edce3d6042a5a17e2a969254588", "commitAfterChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private boolean commentMatch(Pattern pattern, String line, int lineNo     )", "signatureAfterChange": "     private boolean matchesComment(Pattern pattern, String line, int lineNo     )", "diff": ["-    private boolean commentMatch(Pattern pattern, String line, int lineNo", "+    private boolean matchesComment(Pattern pattern, String line, int lineNo"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53d07be5da0bfa73d215bf9bd06aac64", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/OuterTypeNumberCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST aAst)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST ast)", "diff": ["-    public void finishTree(DetailAST aAst)", "+    public void finishTree(DetailAST ast)", "-        if (mMax < mOuterNum) {", "-            log(aAst, \"maxOuterTypes\", mOuterNum, mMax);", "+        if (max < outerNum) {", "+            log(ast, \"maxOuterTypes\", outerNum, max);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53ecbd578b50f23955c7fbd9b0c21eec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "          @Override         public void dragEnter(DropTargetDragEvent evt)", "signatureAfterChange": "          @Override         public void dragEnter(DropTargetDragEvent evt)", "diff": ["-                    final JComponent jc = (JComponent) component;", "-                    normalBorder = jc.getBorder();", "-                    jc.setBorder(dragBorder);", "+                    final JComponent comp = (JComponent) this.component;", "+                    normalBorder = comp.getBorder();", "+                    comp.setBorder(dragBorder);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53fb43ee44071998d218e042c22dd180", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "d4cee632835a462da2dc6794b059fb0d6b1c9bc2", "commitAfterChange": "d216ec75255a120ce7c24e51da7df63a2b9864de", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public LocalizedMessage(int aLineNo,                             int aColNo,                             String aBundle,                             String aKey,                             Object[] aArgs)", "signatureAfterChange": "     public LocalizedMessage(int aLineNo,                             int aColNo,                             String aBundle,                             String aKey,                             Object[] aArgs)", "diff": ["-        mSeverityLevel = SeverityLevel.DEFAULT_LEVEL;", "+        mSeverityLevel = DEFAULT_SEVERITY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "541e4e8b6566b0692dc15817dc54d47b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "34770c3eaa9ad06297c13fd43a55739c02c7d67d", "commitAfterChange": "da940af3627944ad412904c15187627151e834e5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Configuration()         throws IllegalStateException", "signatureAfterChange": "     public Configuration()         throws IllegalStateException", "diff": ["+        setIllegalInstantiations(ILLEGAL_INSTANTIATIONS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "541f281c2f1dfdb3d340faa6c5841db8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "6839ac4fd83dde7060c8f6f28e75aa3d6ff2456b", "commitAfterChange": "31f6765fdcf2233ca6c53730c2fc196576557f66", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private static boolean isVariableInOperatorExpr(             DetailAST operator, DetailAST variable)", "signatureAfterChange": "     private static boolean isVariableInOperatorExpr(             DetailAST operator, DetailAST variable)", "diff": ["-        boolean isVarInOperatorDeclr = false;", "+        boolean isVarInOperatorDeclaration = false;", "-                isVarInOperatorDeclr = true;", "+                isVarInOperatorDeclaration = true;", "-        if (!isVarInOperatorDeclr && operator.getType() == TokenTypes.LITERAL_IF) {", "+        if (!isVarInOperatorDeclaration && operator.getType() == TokenTypes.LITERAL_IF) {", "-                    isVarInOperatorDeclr =", "+                    isVarInOperatorDeclaration =", "-        return isVarInOperatorDeclr;", "+        return isVarInOperatorDeclaration;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54222a21e04c2164154facfbd331a25e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java", "commitBeforeChange": "13a49cc45b1527357934dd7802c24686d7bb7858", "commitAfterChange": "24d7448294b03e49709c8e5588e89c27091ba0f2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private void checkSingleLine(int lineNum, int colNum,         IndentLevel indentLevel, boolean mustMatch)", "signatureAfterChange": "      private void checkSingleLine(int lineNum, int colNum,         IndentLevel indentLevel, boolean mustMatch)", "diff": ["-        if (mustMatch && !indentLevel.accept(start)", "-                || !mustMatch && colNum == start && indentLevel.greaterThan(start)) {", "+        if (mustMatch && !indentLevel.isAcceptable(start)", "+                || !mustMatch && colNum == start && indentLevel.isGreaterThan(start)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "543aef1c6a06eab3ec83a22009dfcd20", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "3c7c3cbe88a2bec0962702305db4f2b05117501c", "commitAfterChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "         public boolean isStatic()", "signatureAfterChange": "         public boolean isStaticImport()", "diff": ["-        public boolean isStatic()", "+        public boolean isStaticImport()", "-            return isStatic;", "+            return staticImport;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "544f441944aeb228be75167074b14084", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "bf529ef600fa9ef2034d0412c198b2121f2b94f2", "commitAfterChange": "ce196814d857a4244a80c51d5151cc35e90b6749", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private static Set<String> collectReferencesFromJavadoc(TextBlock cmt)", "signatureAfterChange": "     private static Set<String> collectReferencesFromJavadoc(TextBlock textBlock)", "diff": ["-    private static Set<String> collectReferencesFromJavadoc(TextBlock cmt) {", "+    private static Set<String> collectReferencesFromJavadoc(TextBlock textBlock) {", "-                : getValidTags(cmt, JavadocUtils.JavadocTagType.INLINE)) {", "+                : getValidTags(textBlock, JavadocUtils.JavadocTagType.INLINE)) {", "-                : getValidTags(cmt, JavadocUtils.JavadocTagType.BLOCK)) {", "+                : getValidTags(textBlock, JavadocUtils.JavadocTagType.BLOCK)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5456164a98386c29b32691d451a7c24e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule528typevariablenames/ClassMethodTypeParameterNameTest.java", "commitBeforeChange": "0c75b3af7443afa5a3130bdbd1220fd1076117ed", "commitAfterChange": "230cd73883c40bf535cfca2d745f1f98564753db", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "signatureAfterChange": "      @BeforeClass     public static void setConfigurationBuilder() throws CheckstyleException, IOException", "diff": ["-        checkConfig = builder.getCheckConfig(\"ClassTypeParameterName\");", "-        format = checkConfig.getAttribute(\"format\");", "+        configuration = builder.getCheckConfig(\"ClassTypeParameterName\");", "+        format = configuration.getAttribute(\"format\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "545e665c543ee668245170253fb23db7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     private void checkParamTags(final List<JavadocTag> aTags,             final DetailAST aParent, boolean aReportExpectedTags)", "signatureAfterChange": "     private void checkParamTags(final List<JavadocTag> tags,             final DetailAST parent, boolean reportExpectedTags)", "diff": ["-    private void checkParamTags(final List<JavadocTag> aTags,", "-            final DetailAST aParent, boolean aReportExpectedTags)", "+    private void checkParamTags(final List<JavadocTag> tags,", "+            final DetailAST parent, boolean reportExpectedTags)", "-        final List<DetailAST> params = getParameters(aParent);", "+        final List<DetailAST> params = getParameters(parent);", "-                .getTypeParameters(aParent);", "+                .getTypeParameters(parent);", "-        final ListIterator<JavadocTag> tagIt = aTags.listIterator();", "+        final ListIterator<JavadocTag> tagIt = tags.listIterator();", "-        if (!mAllowMissingParamTags && aReportExpectedTags) {", "+        if (!allowMissingParamTags && reportExpectedTags) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "548b1516e833c9e6bc3673afd685d938", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     private static List<JavadocTag> getMultilineArgTags(final Matcher argMultilineStart,             final int column, final String[] lines, final int lineIndex, final int tagLine)", "signatureAfterChange": "     private static List<JavadocTag> getMultilineArgTags(final Matcher argMultilineStart,             final int column, final String[] lines, final int lineIndex, final int tagLine)", "diff": ["-        final String p1 = argMultilineStart.group(1);", "-        final String p2 = argMultilineStart.group(2);", "+        final String param1 = argMultilineStart.group(1);", "+        final String param2 = argMultilineStart.group(2);", "-                    tags.add(new JavadocTag(tagLine, column, p1, p2));", "+                    tags.add(new JavadocTag(tagLine, column, param1, param2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54936e26ec58c8aed9c5b7a499ba2f48", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheck.java", "commitBeforeChange": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4", "commitAfterChange": "c3674faad8a38656e910750fb22a7eef714fb8a7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private String getFileName()", "signatureAfterChange": "     private String getFileName()", "diff": ["-        String fname = getFileContents().getFileName();", "-        fname = fname.substring(fname.lastIndexOf(File.separatorChar) + 1);", "-        fname = FILE_EXTENSION_PATTERN.matcher(fname).replaceAll(\"\");", "-        return fname;", "+        String name = getFileContents().getFileName();", "+        name = name.substring(name.lastIndexOf(File.separatorChar) + 1);", "+        name = FILE_EXTENSION_PATTERN.matcher(name).replaceAll(\"\");", "+        return name;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54bc9a9213ebf6eea02c3bfc8b3c46c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "f243d4d74885edb0a40920246011fa6549635afd", "commitAfterChange": "ab1e3089135d74b0d8c3296d0074244ca89a55e2", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private boolean isSetterMethod(final DetailAST aAST)", "signatureAfterChange": "     private boolean isSetterMethod(final DetailAST aAST)", "diff": ["-            || (aAST.getChildCount() != 7))", "+            || (aAST.getChildCount() != MAX_CHILDREN))", "-        if ((slist == null) || (slist.getChildCount() != 3)) {", "+        if ((slist == null) || (slist.getChildCount() != BODY_SIZE)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54dc031105717940f5ba108a6c3fd10b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java", "commitBeforeChange": "1cb8152b35cc9b61bf0b31b21cd8cff1b883fb67", "commitAfterChange": "f6b38038d17b286d82d8956788a0eede15c5399a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitJavadocToken(DetailNode aAst)", "signatureAfterChange": "      @Override     public void visitJavadocToken(DetailNode aAst)", "diff": ["-        final int endOfSentence = firstSentence.lastIndexOf(\".\");", "+        final int endOfSentence = firstSentence.lastIndexOf(mPeriod);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55472ea1f9d3f01029e0abe030f548a5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalThrowsCheck.java", "commitBeforeChange": "dfc803a1cc442bafeb5aa375f0d9f0a31d655ff2", "commitAfterChange": "351d79582d7a6cea56af9d61f45973d3cf73a484", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void setIgnoreOverridenMethods(boolean ignoreOverridenMethods)", "signatureAfterChange": "     public void setIgnoreOverriddenMethods(boolean ignoreOverriddenMethods)", "diff": ["-    public void setIgnoreOverridenMethods(boolean ignoreOverridenMethods)", "+    public void setIgnoreOverriddenMethods(boolean ignoreOverriddenMethods)", "-        this.ignoreOverridenMethods = ignoreOverridenMethods;", "+        this.ignoreOverriddenMethods = ignoreOverriddenMethods;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55b9e351a210d967a25ae085bb87f722", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "13c022282b849f0e04925fbdf1b6a7010bdcd397", "commitAfterChange": "80ab48f859c1f16835dbd41afe42414b41969e2f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public Class<?> safeLoad(String name)         throws ClassNotFoundException, NoClassDefFoundError", "signatureAfterChange": "     public Class<?> safeLoad(String name) throws ClassNotFoundException", "diff": ["-    public Class<?> safeLoad(String name)", "-        throws ClassNotFoundException, NoClassDefFoundError {", "+    public Class<?> safeLoad(String name) throws ClassNotFoundException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55edc2102ac7a3eb949977736fb9f545", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "b3133035a4fa0e086dfb0dfbefbc7f1540521bbc", "commitAfterChange": "add2bdfb27494bff5fa9c305d9782f57c6170b18", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setOutputStream(OutputStream aOS)", "signatureAfterChange": "     private void setOutputStream(OutputStream aOS)", "diff": ["-    /** @see AuditListener **/", "-    public void setOutputStream(OutputStream aOS)", "+     **/", "+    private void setOutputStream(OutputStream aOS)", "-            // keep a handle on the original stream", "-            // for getoutputstream", "-            mStream = aOS;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55ef092dcbe17b3e17515c44a49681d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-    public void beginTree(DetailAST aRootAST)", "+    public void beginTree(DetailAST rootAST)", "-        super.beginTree(aRootAST);", "-        mPkgName = null;", "-        mImports.clear();", "-        mInstantiations.clear();", "-        mClassNames.clear();", "+        super.beginTree(rootAST);", "+        pkgName = null;", "+        imports.clear();", "+        instantiations.clear();", "+        classNames.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55f6ec5ad80b736e3531755035db61d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheck.java", "commitBeforeChange": "6c19362738598c7addaafc1f906058f49fadc2a4", "commitAfterChange": "ea963bb721aafd9584242cedf2781f0294f2b18d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-                .getDuplicatedStrings().entrySet()) {", "+                .getDuplicatedKeys().entrySet()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55f8b554eef5554f05f7dea37f685be1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTag.java", "commitBeforeChange": "443e534a3c98c0b30f24647da724fe918f17a006", "commitAfterChange": "66d73fe6189267fee3423e2e8d7fc2d68599a43f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-                + \", arg1='\" + arg1 + \"'}\";", "+                + \", firstArg='\" + firstArg + \"'}\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55fc30a56c4c3c21abad74dd8d7b4ef7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Utils.java", "commitBeforeChange": "c2c34c8408d8ef5b92b7e87c671e392765f6c3d0", "commitAfterChange": "ebd4afdebe8ee09c0e6c7d1239e2ca982f87e51c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static boolean isPatternValid(String pattern)", "signatureAfterChange": "     public static boolean isPatternValid(String pattern)", "diff": ["-            Utils.getPattern(pattern);", "+            Pattern.compile(pattern);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56544fa4a6a75ac96509d4d46d76ce68", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public String[] getIllegalClassNames()", "signatureAfterChange": "     public String[] getIllegalClassNames()", "diff": ["-        return mIllegalClassNames.toArray(", "-            new String[mIllegalClassNames.size()]);", "+        return illegalClassNames.toArray(", "+            new String[illegalClassNames.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "565ac3723c5243721a91b1fd30d5a722", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private String getCustomMessage()", "signatureAfterChange": "     private String getCustomMessage()", "diff": ["-        if (mCustomMessage == null) {", "+        if (customMessage == null) {", "-        return MessageFormat.format(mCustomMessage, mArgs);", "+        return MessageFormat.format(customMessage, args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56641754e0b313ddad2a68f217f57e31", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/coding/InputUnnecessaryParentheses.java", "commitBeforeChange": "b9d3a7e995de2d7e77bf1be239a0c36e1337687d", "commitAfterChange": "4687b0b801bdcc50c763268e33eabd370ad8a85d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void f6(TypeA a)", "signatureAfterChange": "      private void f6(TypeA a)", "diff": ["-        TypeD<String> d = ((TypeD<String>) a);", "+        TypeParameterized<String> d = ((TypeParameterized<String>) a);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "568ac86d67fc427c6099b21b33f24ae3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (inIgnoreList(ast)", "+        if (isInIgnoreList(ast)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "568e02c3d2948637184541c2e434e21d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "0eeb5e4fd6aa2c4b8a559e55384bba67d7d695c7", "commitAfterChange": "092e1f69476fc715852035a25b23a11804183a23", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected void checkLinesIndent(LineSet aLines,                                     int aIndentLevel,                                     boolean aFirstLineMatches)", "signatureAfterChange": "     protected void checkLinesIndent(LineSet aLines,                                     int aIndentLevel,                                     boolean aFirstLineMatches)", "diff": ["-            aIndentLevel += mIndentCheck.getIndentationAmount();", "+            aIndentLevel += mIndentCheck.getBasicOffset();", "-                aIndentLevel += mIndentCheck.getIndentationAmount();", "+                aIndentLevel += mIndentCheck.getBasicOffset();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "569607c7319c90687a477857572d141e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private static DetailAST createSlCommentNode(Token aToken)", "signatureAfterChange": "     private static DetailAST createSlCommentNode(Token token)", "diff": ["-    private static DetailAST createSlCommentNode(Token aToken)", "+    private static DetailAST createSlCommentNode(Token token)", "-        slComment.setColumnNo(aToken.getColumn() - 1);", "-        slComment.setLineNo(aToken.getLine());", "+        slComment.setColumnNo(token.getColumn() - 1);", "+        slComment.setLineNo(token.getLine());", "-        slCommentContent.initialize(aToken);", "+        slCommentContent.initialize(token);", "-        slCommentContent.setColumnNo(aToken.getColumn() - 1 + 2);", "-        slCommentContent.setLineNo(aToken.getLine());", "-        slCommentContent.setText(aToken.getText());", "+        slCommentContent.setColumnNo(token.getColumn() - 1 + 2);", "+        slCommentContent.setLineNo(token.getLine());", "+        slCommentContent.setText(token.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56a0cb64cd951a77dd3ca64ae1796220", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LineColumn.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Override     public int compareTo(LineColumn aLineColumn)", "signatureAfterChange": "     @Override     public int compareTo(LineColumn lineColumn)", "diff": ["-    public int compareTo(LineColumn aLineColumn)", "+    public int compareTo(LineColumn lineColumn)", "-        return (this.getLine() != aLineColumn.getLine())", "-            ? this.getLine() - aLineColumn.getLine()", "-            : this.getColumn() - aLineColumn.getColumn();", "+        return (this.getLine() != lineColumn.getLine())", "+            ? this.getLine() - lineColumn.getLine()", "+            : this.getColumn() - lineColumn.getColumn();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56c359195644db39509e64f2649bdf3c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setAllowClassImports(boolean aAllow)", "signatureAfterChange": "     public void setAllowClassImports(boolean allow)", "diff": ["-    public void setAllowClassImports(boolean aAllow)", "+    public void setAllowClassImports(boolean allow)", "-        mAllowClassImports = aAllow;", "+        allowClassImports = allow;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56e58830df85841fdd2cfc46b64e3576", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "e1d0e7f6361c32c69650ba789c1995e49a94142f", "commitAfterChange": "7dd24c8c35572b5db3e5c905d440e813cfe2538c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public static DetailAST parse(FileContents contents)         throws RecognitionException, TokenStreamException", "signatureAfterChange": "     public static DetailAST parse(FileContents contents)         throws RecognitionException, TokenStreamException", "diff": ["-        lexer.setFilename(contents.getFilename());", "+        lexer.setFilename(contents.getFileName());", "-        parser.setFilename(contents.getFilename());", "+        parser.setFilename(contents.getFileName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56e6915c78b5154176583c338b0c27bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "745e21f1e4d202dd8dba577585f35f7d3f10d839", "commitAfterChange": "2e243db3fbdf7b737f78ed7cef0b9bd94f351d25", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testLoadFromURL() throws Exception", "signatureAfterChange": "      @Test     public void testLoadFromUrl() throws Exception", "diff": ["-    public void testLoadFromURL() throws Exception {", "+    public void testLoadFromUrl() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56eacc0cefb28eff5da35e0125908983", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "80ab48f859c1f16835dbd41afe42414b41969e2f", "commitAfterChange": "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void processJavadoc(DetailAST ast)", "signatureAfterChange": "     private void collectReferecesFromJavadoc(DetailAST ast)", "diff": ["-    private void processJavadoc(DetailAST ast) {", "+    private void collectReferecesFromJavadoc(DetailAST ast) {", "-            referenced.addAll(processJavadoc(cmt));", "+            referenced.addAll(collectReferecesFromJavadoc(cmt));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56f06a961aa6dfb347bac1d6a463850c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void init()", "signatureAfterChange": "      @Override     public void init()", "diff": ["-        mRegExp = Utils.getPattern(mReliefPattern);", "+        regExp = Utils.getPattern(reliefPattern);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56fa6a2c2c2a0a785e32c81447a288ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "         @Override         public void syntaxError(                 Recognizer<?, ?> aRecognizer, Object aOffendingSymbol,                 int aLine, int aCharPositionInLine,                 String aMsg, RecognitionException aEx)", "signatureAfterChange": "         @Override         public void syntaxError(                 Recognizer<?, ?> recognizer, Object offendingSymbol,                 int line, int charPositionInLine,                 String msg, RecognitionException ex)", "diff": ["-                Recognizer<?, ?> aRecognizer, Object aOffendingSymbol,", "-                int aLine, int aCharPositionInLine,", "-                String aMsg, RecognitionException aEx)", "+                Recognizer<?, ?> recognizer, Object offendingSymbol,", "+                int line, int charPositionInLine,", "+                String msg, RecognitionException ex)", "-            final int lineNumber = mOffset + aLine;", "-            final Token token = (Token) aOffendingSymbol;", "+            final int lineNumber = offset + line;", "+            final Token token = (Token) offendingSymbol;", "-            if (JAVADOC_MISSED_HTML_CLOSE.equals(aMsg)) {", "-                mErrorMessage = new ParseErrorMessage(lineNumber,", "-                        JAVADOC_MISSED_HTML_CLOSE, aCharPositionInLine, token.getText());", "+            if (JAVADOC_MISSED_HTML_CLOSE.equals(msg)) {", "+                errorMessage = new ParseErrorMessage(lineNumber,", "+                        JAVADOC_MISSED_HTML_CLOSE, charPositionInLine, token.getText());", "-            else if (JAVADOC_WRONG_SINGLETON_TAG.equals(aMsg)) {", "-                mErrorMessage = new ParseErrorMessage(lineNumber,", "-                        JAVADOC_WRONG_SINGLETON_TAG, aCharPositionInLine, token.getText());", "+            else if (JAVADOC_WRONG_SINGLETON_TAG.equals(msg)) {", "+                errorMessage = new ParseErrorMessage(lineNumber,", "+                        JAVADOC_WRONG_SINGLETON_TAG, charPositionInLine, token.getText());", "-                final RuleContext ruleContext = aEx.getCtx();", "+                final RuleContext ruleContext = ex.getCtx();", "-                    final int ruleIndex = aEx.getCtx().getRuleIndex();", "-                    final String ruleName = aRecognizer.getRuleNames()[ruleIndex];", "+                    final int ruleIndex = ex.getCtx().getRuleIndex();", "+                    final String ruleName = recognizer.getRuleNames()[ruleIndex];", "-                    mErrorMessage = new ParseErrorMessage(lineNumber,", "-                            JAVADOC_PARSE_RULE_ERROR, aCharPositionInLine, aMsg, upperCaseRuleName);", "+                    errorMessage = new ParseErrorMessage(lineNumber,", "+                            JAVADOC_PARSE_RULE_ERROR, charPositionInLine, msg, upperCaseRuleName);", "-                    mErrorMessage = new ParseErrorMessage(lineNumber, JAVADOC_PARSE_TOKEN_ERROR,", "-                            aCharPositionInLine, aMsg, aCharPositionInLine);", "+                    errorMessage = new ParseErrorMessage(lineNumber, JAVADOC_PARSE_TOKEN_ERROR,", "+                            charPositionInLine, msg, charPositionInLine);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "570f937f72e3c55b325a0f60d3c66b08", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void setOmitIgnoredModules(boolean aOmit)", "signatureAfterChange": "     public void setOmitIgnoredModules(boolean omit)", "diff": ["-    /** @param aOmit whether to omit ignored modules */", "-    public void setOmitIgnoredModules(boolean aOmit)", "+    /** @param omit whether to omit ignored modules */", "+    public void setOmitIgnoredModules(boolean omit)", "-        mOmitIgnoredModules = aOmit;", "+        omitIgnoredModules = omit;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5719e4baf601caa25e11aae4ef2123f9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "52e2087c404986f8e12cd8579be7b2333961e1a3", "commitAfterChange": "c38185458ab824874b8465c46b4dc42646440aaa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     PropertyCacheFile(Configuration aCurrentConfig, String aFileName)", "signatureAfterChange": "     PropertyCacheFile(Configuration aCurrentConfig, String aFileName)", "diff": ["-        final String fileName = aFileName;", "-        if (fileName != null) {", "+        if (aFileName != null) {", "-                inStream = new FileInputStream(fileName);", "+                inStream = new FileInputStream(aFileName);", "-        mDetailsFile = (setInActive) ? null : fileName;", "+        mDetailsFile = (setInActive) ? null : aFileName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57437942b33f535a09f14823ecfbe0eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public final void setFileExtensions(String[] aExtensions)", "signatureAfterChange": "     public final void setFileExtensions(String[] extensions)", "diff": ["-    public final void setFileExtensions(String[] aExtensions)", "+    public final void setFileExtensions(String[] extensions)", "-        if (aExtensions == null) {", "-            mFileExtensions = null;", "+        if (extensions == null) {", "+            fileExtensions = null;", "-        mFileExtensions = new String[aExtensions.length];", "-        for (int i = 0; i < aExtensions.length; i++) {", "-            final String extension = aExtensions[i];", "+        fileExtensions = new String[extensions.length];", "+        for (int i = 0; i < extensions.length; i++) {", "+            final String extension = extensions[i];", "-                mFileExtensions[i] = extension;", "+                fileExtensions[i] = extension;", "-                mFileExtensions[i] = \".\" + extension;", "+                fileExtensions[i] = \".\" + extension;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "574be362965699f83385170a86440a8a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Override     public void auditStarted(AuditEvent aEvt)", "signatureAfterChange": "     @Override     public void auditStarted(AuditEvent evt)", "diff": ["-    public void auditStarted(AuditEvent aEvt)", "+    public void auditStarted(AuditEvent evt)", "-        mWriter.println(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\");", "+        writer.println(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\");", "-        mWriter.println(\"<checkstyle version=\\\"\" + version + \"\\\">\");", "+        writer.println(\"<checkstyle version=\\\"\" + version + \"\\\">\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57ab0710f470dc8c96df42afa49efaff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public int getCaseIndent()", "signatureAfterChange": "     public int getCaseIndent()", "diff": ["-        return mCaseIndentationAmount;", "+        return caseIndentationAmount;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57beb0bf80f711c7520f30613e5e8f30", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public DetectorOptions(int aCompileFlags,             AbstractViolationReporter aReporter)", "signatureAfterChange": "     public DetectorOptions(int compileFlags,             AbstractViolationReporter reporter)", "diff": ["-    public DetectorOptions(int aCompileFlags,", "-            AbstractViolationReporter aReporter)", "+    public DetectorOptions(int compileFlags,", "+            AbstractViolationReporter reporter)", "-        mCompileFlags = aCompileFlags;", "-        mReporter = aReporter;", "+        this.compileFlags = compileFlags;", "+        this.reporter = reporter;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57d0c1286fcea6a5b2c6786a88ee65ee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "5ce771ac776af4197ce832792a049e9357ca90b8", "commitAfterChange": "1d614c3a7ecf8a3ede4df8a50da46e71792d0025", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void doVisitToken(FullIdent aIdent, boolean aIsStatic,             boolean aPrevious)", "signatureAfterChange": "     private void doVisitToken(FullIdent aIdent, boolean aIsStatic,             boolean aPrevious)", "diff": ["-                doVisitTokenInSameGroup(aIdent, aIsStatic, aPrevious, name,", "-                        line);", "+                doVisitTokenInSameGroup(aIsStatic, aPrevious, name, line);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57f0bf70ef741455c95dceee18cf97ed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PropertyCacheFileTest.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testInCache() throws IOException", "signatureAfterChange": "      @Test     public void testInCache() throws IOException", "diff": ["-        assertTrue(cache.inCache(\"myFile\", 1));", "-        assertFalse(cache.inCache(\"myFile\", 2));", "-        assertFalse(cache.inCache(\"myFile1\", 1));", "+        assertTrue(cache.isInCache(\"myFile\", 1));", "+        assertFalse(cache.isInCache(\"myFile\", 2));", "+        assertFalse(cache.isInCache(\"myFile1\", 1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57f600e5aca65911e78e731b236f5a01", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     @Override     public void addException(AuditEvent aEvt, Throwable aThrowable)", "signatureAfterChange": "     @Override     public void addException(AuditEvent evt, Throwable throwable)", "diff": ["-    public void addException(AuditEvent aEvt, Throwable aThrowable)", "+    public void addException(AuditEvent evt, Throwable throwable)", "-        aThrowable.printStackTrace(pw);", "+        throwable.printStackTrace(pw);", "-        mWriter.println(encode(sw.toString()));", "+        writer.println(encode(sw.toString()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57fc3bcd200537153a64885a7dc43451", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/ConfigValidationTest.java", "commitBeforeChange": "555478f967699ec1138ce274cca687c36db7d65a", "commitAfterChange": "a846ef9d3308345d234c4bc66a92b9eec97b820b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testGoogleChecks() throws Exception", "signatureAfterChange": "     @Test     public void testGoogleChecks() throws Exception", "diff": ["-        verify(checker, files.toArray(new File[files.size()]), \"\", EMPTY_STRING_ARRAY, null);", "+        verify(checker, files.toArray(new File[files.size()]), \"\",", "+                EMPTY_STRING_ARRAY, EMPTY_INTEGER_OBJECT_ARRAY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "581046be23ee8b517a960acc2cf80e61", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "3badd996bf40d25400ce40bf89aea92cd90b1b35", "commitAfterChange": "4e0914c73bf3e5b113869fad772a1096787b31ba", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private void notifyVisit(DetailAST aAST)", "signatureAfterChange": "     private void notifyVisit(DetailAST aAST)", "diff": ["-            mContext.clear();", "+            mTokenContext.clear();", "-                check.setTokenContext(mContext);", "+                check.setTokenContext(mTokenContext);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "582fdbaa12ac4148f8470e99056f6155", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "contrib/bcel/src/checkstyle/com/puppycrawl/tools/checkstyle/bcel/checks/UnreadFieldCheck.java", "commitBeforeChange": "65603924fdf47c194fc2ef9e0bc60bfc81ee4166", "commitAfterChange": "2707ab4393bd5a585f1f794c43515b8a1b900078", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void leaveSet(Set aJavaClasses)", "signatureAfterChange": "     public void leaveSet(Set aJavaClasses)", "diff": ["+                            javaClass,", "-                            new Object[] {className, fieldDefs[i]});", "+                            new Object[] {fieldDefs[i]});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5836dcaaeb8f9182f78752cf6a9ef40a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Override     public void reportSingleLineComment(String aType, int aStartLineNo,             int aStartColNo)", "signatureAfterChange": "     @Override     public void reportSingleLineComment(String type, int startLineNo,             int startColNo)", "diff": ["-    public void reportSingleLineComment(String aType, int aStartLineNo,", "-            int aStartColNo)", "+    public void reportSingleLineComment(String type, int startLineNo,", "+            int startColNo)", "-        reportCppComment(aStartLineNo, aStartColNo);", "+        reportCppComment(startLineNo, startColNo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5851aa8b64a60906991c63253f499266", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpMultilineCheckTest.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testNoStackOverflowError() throws Exception", "signatureAfterChange": "      @Test     public void testNoStackOverflowError() throws Exception", "diff": ["-        Files.write(makeLargeXYString(), file, Charsets.UTF_8);", "+        Files.write(makeLargeXyString(), file, Charsets.UTF_8);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "586ebc4c047e182038ead4d6763470ab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "commitAfterChange": "6125beffc437f970eae276b4a6542265c6547784", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "         public FieldFrame(boolean aStaticClass)", "signatureAfterChange": "         public FieldFrame(boolean aStaticType)", "diff": ["-        public FieldFrame(boolean aStaticClass)", "+        public FieldFrame(boolean aStaticType)", "-            mStaticClass = aStaticClass;", "+            mStaticType = aStaticType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "587e9acde49d4e943db51a6920f188b2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                        log(ast, \"declaration.order.constructor\");", "+                        log(ast, MSG_CONSTRUCTOR);", "-                        log(ast, \"declaration.order.method\");", "+                        log(ast, MSG_METHOD);", "-                            log(ast, \"declaration.order.static\");", "+                            log(ast, MSG_STATIC);", "-                        log(ast, \"declaration.order.instance\");", "+                        log(ast, MSG_INSTANCE);", "-                        log(ast, \"declaration.order.access\");", "+                        log(ast, MSG_ACCESS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58a82978246149b4dda8689c79db142f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "7166b6a1d07452b72cf6f62ae2afe9846b96ad91", "commitAfterChange": "47802121745d9113b54cdb2d8ccef59e74ce3e72", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private ConfigurationLoader(Properties aOverrideProps)         throws ParserConfigurationException, SAXException", "signatureAfterChange": "     private ConfigurationLoader(PropertyResolver aOverrideProps)         throws ParserConfigurationException, SAXException", "diff": ["-    private ConfigurationLoader(Properties aOverrideProps)", "+    private ConfigurationLoader(PropertyResolver aOverrideProps)", "-        mOverrideProps = aOverrideProps;", "+        mOverridePropsResolver = aOverrideProps;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58c72b574234881bb0aee74c2044e07c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void destroy()", "signatureAfterChange": "     public void destroy()", "diff": ["-        mListeners.clear();", "-        mFilters.clear();", "+        listeners.clear();", "+        filters.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58df8c45a51916b2f2c27d53048c8419", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/ExecutableStatementCountCheck.java", "commitBeforeChange": "b8f9b199ad7de16619cec1f288bd751fad8bc4a9", "commitAfterChange": "b0bb7e1b50237a03ce4e977af15665c07e20f078", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "     public void leaveToken(DetailAST aAST)", "diff": ["-            leaveMethodDef(aAST);", "+            leaveMemberDef(aAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58e54d4bba1251a1a3364c70f5ca4d1e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LineColumn.java", "commitBeforeChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "commitAfterChange": "abfc952fd0ed88f6246b1d969a8a980ea63f0bd6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public boolean equals(Object o)", "signatureAfterChange": "      @Override     public boolean equals(Object o)", "diff": ["-                && Objects.equals(col, lineColumn.col);", "+                && Objects.equals(column, lineColumn.column);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58ea636cb49f1788dbad35e942c7eeef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/comments/CommentsTest.java", "commitBeforeChange": "2057a77c3a524b86dff382ac8abdca71dd03764a", "commitAfterChange": "03f41815802b1ce6a0ca906c9f28c5a98344a932", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     private static DetailAST buildInput_1()", "signatureAfterChange": "     private static DetailAST buildInput1()", "diff": ["-    private static DetailAST buildInput_1() {", "+    private static DetailAST buildInput1() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59043d58d847ea1a55d741e65fc86e1e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Class<?> resolve(String name, String currentClass)         throws ClassNotFoundException", "signatureAfterChange": "     public Class<?> resolve(String name, String currentClass)         throws ClassNotFoundException", "diff": ["-            if (imp.endsWith(\".\" + name)) {", "+            if (imp.endsWith(PERIOD + name)) {", "-            clazz = resolveQualifiedName(pkg + \".\" + name);", "+            clazz = resolveQualifiedName(pkg + PERIOD + name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "591a7dbe7e4d7ad83b7dc160320c7b6b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java", "commitBeforeChange": "3c7c3cbe88a2bec0962702305db4f2b05117501c", "commitAfterChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "         void reportPrivateCtor()", "signatureAfterChange": "         void reportPrivateCtor()", "diff": ["-            hasPrivateCtor = true;", "+            withPrivateCtor = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59487e6bd98fe7ef7d70467eb0ddcea2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Check.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public final String getLine(int aIndex)", "signatureAfterChange": "     public final String getLine(int index)", "diff": ["-    public final String getLine(int aIndex)", "+    public final String getLine(int index)", "-        return getFileContents().getLine(aIndex);", "+        return getFileContents().getLine(index);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59904f79bf945c87970c02e69ac807af", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     void setParent(DetailAST aParent)", "signatureAfterChange": "     void setParent(DetailAST parent)", "diff": ["-    void setParent(DetailAST aParent)", "+    void setParent(DetailAST parent)", "-        mParent = aParent;", "+        this.parent = parent;", "-            nextSibling.setParent(aParent);", "+            nextSibling.setParent(parent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59a15bb56043c20badbebb0712dd9253", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTags.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public List<JavadocTag> getValidTags()", "signatureAfterChange": "      public List<JavadocTag> getValidTags()", "diff": ["-        return mValidTags;", "+        return validTags;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59bba05f0cf08c1d917aeec01eb221c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected boolean isMissingJavadocAllowed(final DetailAST aAST)", "signatureAfterChange": "     protected boolean isMissingJavadocAllowed(final DetailAST ast)", "diff": ["-    protected boolean isMissingJavadocAllowed(final DetailAST aAST)", "+    protected boolean isMissingJavadocAllowed(final DetailAST ast)", "-        return mAllowMissingJavadoc", "-            || (mAllowMissingPropertyJavadoc", "-                && (isSetterMethod(aAST) || isGetterMethod(aAST)))", "-            || matchesSkipRegex(aAST);", "+        return allowMissingJavadoc", "+            || (allowMissingPropertyJavadoc", "+                && (isSetterMethod(ast) || isGetterMethod(ast)))", "+            || matchesSkipRegex(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59e8e1810ab73e156278a99e31562116", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/PackageNamesBean.java", "commitBeforeChange": "4cc94a581c8da49c65d139da08d70aea1b5cf1e9", "commitAfterChange": "88e89a138aa39f50f7642106cde6568f6e07783f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      void setPackageNames(String[] aPackageNames);", "signatureAfterChange": "      void setModuleFactory(String[] aPackageNames);", "diff": ["-     void setPackageNames(String[] aPackageNames);", "+     void setModuleFactory(String[] aPackageNames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a0ac3cbba4256a0c9adcc9b9154fb53", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private void setOutputStream(OutputStream oS)", "signatureAfterChange": "     private void setOutputStream(OutputStream outputStream)", "diff": ["-    private void setOutputStream(OutputStream oS) {", "-        final OutputStreamWriter osw = new OutputStreamWriter(oS, StandardCharsets.UTF_8);", "+    private void setOutputStream(OutputStream outputStream) {", "+        final OutputStreamWriter osw = new OutputStreamWriter(outputStream, StandardCharsets.UTF_8);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a1375f73c847b8811fdf80b24ebec48", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final void setTagSeverity(String aSeverity)", "signatureAfterChange": "     public final void setTagSeverity(String severity)", "diff": ["-    public final void setTagSeverity(String aSeverity)", "+    public final void setTagSeverity(String severity)", "-        mTagSeverityLevel = SeverityLevel.getInstance(aSeverity);", "+        tagSeverityLevel = SeverityLevel.getInstance(severity);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a237c3567233307979b6e0e95ca4680", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "         protected ClassInfo(final Token aName)", "signatureAfterChange": "         protected ClassInfo(final Token className)", "diff": ["-        protected ClassInfo(final Token aName)", "+        protected ClassInfo(final Token className)", "-            if (aName == null) {", "+            if (className == null) {", "-            mName = aName;", "+            name = className;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a48e3c4c031c1730832de1ad5f88a0a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/IfHandler.java", "commitBeforeChange": "113ea8405c8b753540ee3423d7e37e383f269155", "commitAfterChange": "7f7db38a097a95c264307123924779380fb40077", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean isElseIf()", "signatureAfterChange": "     private boolean isIfAfterElse()", "diff": ["-    private boolean isElseIf()", "+    private boolean isIfAfterElse()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a8736d6d2084ca472eb83c0ed8743a5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "1a7694f787314c10700fb3d038c524e33542b950", "commitAfterChange": "503677ccb90a0068fefba773dd04c534359aec18", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Configuration()         throws IllegalStateException", "signatureAfterChange": "     public Configuration()", "diff": ["-        throws IllegalStateException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ac2526d5bf4ecc9cebaa4b3089d892e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "1116ce8c8cfdfbdd1445a7f123dbe89467824077", "commitAfterChange": "cd7d040b4d2c4a80e87ef9b5be9bbd964f19e97d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "         private boolean isSignificant(String aClassName)", "signatureAfterChange": "         private boolean isSignificant(String aClassName)", "diff": ["-                    && !mIgnoredClassNames.contains(aClassName)", "+                    && !mExcludedClasses.contains(aClassName)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ad0500a4f0bd4909d5b330be18d32ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static void registerAlias(String aSourceName, String aCheckAlias)", "signatureAfterChange": "     public static void registerAlias(String sourceName, String checkAlias)", "diff": ["-    public static void registerAlias(String aSourceName, String aCheckAlias)", "+    public static void registerAlias(String sourceName, String checkAlias)", "-        CHECK_ALIAS_MAP.put(aSourceName, aCheckAlias);", "+        CHECK_ALIAS_MAP.put(sourceName, checkAlias);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b433e4c58f1e8f79405e2fab230973c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "7e570084e62eda58f3c4fa7e75e26a1a41d255cf", "commitAfterChange": "78bc37d67358493ace57983b711449e1c9f15c93", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public String getMessage()", "signatureAfterChange": "     public String getMessage()", "diff": ["-        System.err.println(\"LocalizedMessage.getMessage\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b4ce61e3276c21ad85a49f4070c1070", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "b69e47845e1903966ddf39efdf49e103ff5a5248", "commitAfterChange": "b59542ba03c159d88187de39e55a7c164735a220", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (hasUnicodeChar(literal) && !(allowByTailComment && haastrailComment(ast)", "+        if (hasUnicodeChar(literal) && !(allowByTailComment && hasTrailComment(ast)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b567fd351a96475be1c458bda5333c7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "93587ecf374c8dd9f040fd3667efc47a3d84ff5d", "commitAfterChange": "b06e2e0015944ceaa74a10134bf06ac5c9e53782", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void visitParameterDef(DetailAST aAST)", "signatureAfterChange": "     private void visitParameterDef(DetailAST aParamDef)", "diff": ["-    private void visitParameterDef(DetailAST aAST)", "+    private void visitParameterDef(DetailAST aParamDef)", "-        final DetailAST grandParentAST = aAST.getParent().getParent();", "+        final DetailAST grandParentAST = aParamDef.getParent().getParent();", "-            checkClassName(aAST);", "+            checkClassName(aParamDef);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b5ee239954f5fb1c97b787d593b905d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SingleLineJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitJavadocToken(DetailNode aAst)", "signatureAfterChange": "      @Override     public void visitJavadocToken(DetailNode ast)", "diff": ["-    public void visitJavadocToken(DetailNode aAst)", "+    public void visitJavadocToken(DetailNode ast)", "-        if (isSingleLineJavadoc()", "-                && (hasJavadocTags(aAst) || hasJavadocInlineTags(aAst)))", "+        if (isSingleLineJavdoc()", "+                && (hasJavadocTags(ast) || hasJavadocInlineTags(ast)))", "-            log(aAst.getLineNumber(), \"singleline.javadoc\");", "+            log(ast.getLineNumber(), \"singleline.javadoc\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b8741ee7c4ee1f6028f6d3c16299b2e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ParameterNumberCheck.java", "commitBeforeChange": "3f14872d33910413734232fb16b9debe479e1bd8", "commitAfterChange": "84eddc36730c1eca845257201c71a0d1fb2d40cf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-                                 JavaTokenTypes.PARAMETERS);", "+                                 TokenTypes.PARAMETERS);", "-                                            JavaTokenTypes.PARAMETER_DEF);", "+                                            TokenTypes.PARAMETER_DEF);", "-                                                        JavaTokenTypes.IDENT);", "+                                                        TokenTypes.IDENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c054140880cbd2df970471e94856d6a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "2cf54ade2182e29c413f23e2235a896247d7a2ad", "commitAfterChange": "d282053d9ce02c13c779decfd079a8305086f752", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     @Test     public void testGoodAnnotationOverrideJ5Compat() throws Exception", "signatureAfterChange": "     @Test     public void testGoodAnnotationOverrideJ5Compatible() throws Exception", "diff": ["-    public void testGoodAnnotationOverrideJ5Compat() throws Exception {", "+    public void testGoodAnnotationOverrideJ5Compatible() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c4a5f2a7475103e4ac5b151c6a60c90", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setForceStrictCondition(boolean aValue)", "signatureAfterChange": "     public void setForceStrictCondition(boolean value)", "diff": ["-    public void setForceStrictCondition(boolean aValue)", "+    public void setForceStrictCondition(boolean value)", "-        mForceStrictCondition = aValue;", "+        forceStrictCondition = value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c542a1130f867e8b5473de980ef361e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "dc0a1a2fccdf6a642b05dee98206c7dd487162bd", "commitAfterChange": "859c809b0562032ab6a24956d20a28e1ff6431dc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ParseTreeInfoPanel()", "signatureAfterChange": "     public ParseTreeInfoPanel()", "diff": ["-        add(sp, BorderLayout.NORTH);", "+        add(sp, BorderLayout.PAGE_START);", "-        add(p, BorderLayout.SOUTH);", "+        add(p, BorderLayout.PAGE_END);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c573ca9e6b41cfa2adb57e124ee2004", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "         int value(Scope aScope)", "signatureAfterChange": "         int value(Scope scope)", "diff": ["-        int value(Scope aScope)", "+        int value(Scope scope)", "-            final Integer value = mCounts.get(aScope);", "+            final Integer value = counts.get(scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c6022007262c035f54dde43fa405b5a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void parseTags(String[] aText, int aLineNo)", "signatureAfterChange": "     private void parseTags(String[] text, int lineNo)", "diff": ["-    private void parseTags(String[] aText, int aLineNo)", "+    private void parseTags(String[] text, int lineNo)", "-        final int nLines = aText.length;", "+        final int nLines = text.length;", "-        position = findChar(aText, '<', position);", "+        position = findChar(text, '<', position);", "-            if (isCommentTag(aText, position)) {", "-                position = skipHtmlComment(aText, position);", "+            if (isCommentTag(text, position)) {", "+                position = skipHtmlComment(text, position);", "-            else if (!isTag(aText, position)) {", "-                position = getNextCharPos(aText, position);", "+            else if (!isTag(text, position)) {", "+                position = getNextCharPos(text, position);", "-                final Point endTag = findChar(aText, '>', position);", "+                final Point endTag = findChar(text, '>', position);", "-                    (incompleteTag ? \"\" : getTagId(aText, position));", "+                    (incompleteTag ? \"\" : getTagId(text, position));", "-                     && (aText[endTag.getLineNo()]", "+                     && (text[endTag.getLineNo()]", "-                                position.getLineNo() + aLineNo,", "+                                position.getLineNo() + lineNo,", "-                                aText[position.getLineNo()]));", "+                                text[position.getLineNo()]));", "-            position = findChar(aText, '<', position);", "+            position = findChar(text, '<', position);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c770bbc481714b935e146d8bd22c9f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule232specialescape/IllegalTokenTextTest.java", "commitBeforeChange": "d5129db907a1a405a49bcabeb275ed2e25cb26db", "commitAfterChange": "3d7dcc51c4ac202182ecbdaf73c6e6f97b683293", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          @BeforeClass     public static void setConfigurationBuilder()     \t\tthrows CheckstyleException, MalformedURLException, IOException", "signatureAfterChange": "          @BeforeClass     public static void setConfigurationBuilder()     \t\tthrows CheckstyleException, IOException", "diff": ["-    \t\tthrows CheckstyleException, MalformedURLException, IOException {", "+    \t\tthrows CheckstyleException, IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c7918f6faa1ad549d5eb72ee8cfe426", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheckTest.java", "commitBeforeChange": "2628fc197d9b12bb03324c46478ef840166cc075", "commitAfterChange": "6f6179fb52b2a104adc1c60bf92f8bdf3818255a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testGood() throws Exception", "signatureAfterChange": "      @Test     public void testGood1() throws Exception", "diff": ["-    public void testGood() throws Exception", "+    public void testGood1() throws Exception"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c7d0b7940238154c98773f093d2ac0d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     @Override     public int compareTo(LocalizedMessage aOther)", "signatureAfterChange": "     @Override     public int compareTo(LocalizedMessage other)", "diff": ["-    public int compareTo(LocalizedMessage aOther)", "+    public int compareTo(LocalizedMessage other)", "-        if (getLineNo() == aOther.getLineNo()) {", "-            if (getColumnNo() == aOther.getColumnNo()) {", "-                return getMessage().compareTo(aOther.getMessage());", "+        if (getLineNo() == other.getLineNo()) {", "+            if (getColumnNo() == other.getColumnNo()) {", "+                return getMessage().compareTo(other.getMessage());", "-            return (getColumnNo() < aOther.getColumnNo()) ? -1 : 1;", "+            return (getColumnNo() < other.getColumnNo()) ? -1 : 1;", "-        return (getLineNo() < aOther.getLineNo()) ? -1 : 1;", "+        return (getLineNo() < other.getLineNo()) ? -1 : 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c7fb9ef227ffbd4fb3f2bc59587ecb3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "1ce6badd8f1852081fee56fd6184ecfe8c128c69", "commitAfterChange": "30438ebdf9fd28a94613e2aaecde776d906349a7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean isAllCharactersEscaped(String literal)", "signatureAfterChange": "     private boolean isAllCharactersEscaped(String literal)", "diff": ["-                && sAllEscapedChars.matcher(literal.substring(1,", "+                && ALL_ESCAPED_CHARS.matcher(literal.substring(1,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c815802576a57bd03d1a7004130136d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java", "commitBeforeChange": "6a39af3d6112569e9e1780c86504fd9add394fee", "commitAfterChange": "6731df9da723cab5ec2adda2b1b269fcd7db6f82", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void setEditor(JTextArea mJTextArea)", "signatureAfterChange": "     public void setEditor(JTextArea textArea)", "diff": ["-    public void setEditor(JTextArea mJTextArea) {", "-        editor = mJTextArea;", "+     */", "+    public void setEditor(JTextArea textArea) {", "+        editor = textArea;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c8488a2cb60922a3e2523fe335b43d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractTypeParameterNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     protected final boolean mustCheckName(DetailAST aAST)", "signatureAfterChange": "      @Override     protected final boolean mustCheckName(DetailAST ast)", "diff": ["-    protected final boolean mustCheckName(DetailAST aAST)", "+    protected final boolean mustCheckName(DetailAST ast)", "-            aAST.getParent().getParent();", "+            ast.getParent().getParent();", "-        return location.getType() == this.mLocation;", "+        return location.getType() == this.location;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c8756dd22b4669b19e05e348820fe9b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractViolationReporter.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public abstract void log(int aLine, String aKey, Object... aArgs);", "signatureAfterChange": "     public abstract void log(int line, String key, Object... args);", "diff": ["-    public abstract void log(int aLine, String aKey, Object... aArgs);", "+    public abstract void log(int line, String key, Object... args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c9450704c3b5b90491c8c52eb3b00d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractComplexityCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected final void incrementCurrentValue(BigInteger aBy)", "signatureAfterChange": "     protected final void incrementCurrentValue(BigInteger by)", "diff": ["-    protected final void incrementCurrentValue(BigInteger aBy)", "+    protected final void incrementCurrentValue(BigInteger by)", "-        setCurrentValue(getCurrentValue().add(aBy));", "+        setCurrentValue(getCurrentValue().add(by));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cdc8290cba6fc61bc544be87a512b7b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "contrib/bcel/src/checkstyle/com/puppycrawl/tools/checkstyle/bcel/ReferenceVisitor.java", "commitBeforeChange": "ed7fc0e632848e74d78992a9081ad689fa85e855", "commitAfterChange": "3da302031b2db9966ce7791053e2c0dba095083d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void visitSet(Set aJavaClasses)", "signatureAfterChange": "     public void visitSet(Set aJavaClasses)", "diff": ["-    public void visitSet(Set aJavaClasses) {", "-        mReferenceDAO = new ReferenceDAO(aJavaClasses);", "+    public void visitSet(Set aJavaClasses)", "+    {", "+        mReferenceDAO =", "+            new ReferenceDAO(aJavaClasses, mFieldScopes, mMethodScopes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ce839c75150caa8281d1b4e3550d1c7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "9920857810ecc9efdbca19e2749b75abc0cbbf14", "commitAfterChange": "e7778ef9e22a12ce1db913b46c5c39e743b2354f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setIgnoreFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setIgnoreFormat(String aFormat)         throws ConversionException", "diff": ["-            mIgnoreFormat = aFormat;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d23624c3e60c7fa7e8ede6745f74dce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/AbstractParenPadCheck.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected void processRight(DetailAST ast)", "signatureAfterChange": "     protected void processRight(DetailAST ast)", "diff": ["-                log(ast.getLineNo(), before, WS_PRECEDED, \")\");", "+                log(ast.getLineNo(), before, WS_PRECEDED, CLOSE_PARENTHESIS);", "-                && line.charAt(before) != '(') {", "+                && line.charAt(before) != OPEN_PARENTHESIS) {", "-                    WS_NOT_PRECEDED, \")\");", "+                    WS_NOT_PRECEDED, CLOSE_PARENTHESIS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d625649c946f301305860f323f5b47c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected AuditListener[] getListeners() throws ClassNotFoundException,             InstantiationException, IllegalAccessException, IOException", "signatureAfterChange": "     protected AuditListener[] getListeners() throws ClassNotFoundException,             InstantiationException, IllegalAccessException, IOException", "diff": ["-        final int formatterCount = Math.max(1, mFormatters.size());", "+        final int formatterCount = Math.max(1, formatters.size());", "-        if (mFormatters.isEmpty()) {", "+        if (formatters.isEmpty()) {", "-                final Formatter f = mFormatters.get(i);", "+                final Formatter f = formatters.get(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d6af2e1864796344acc4d1bd2398194", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java", "commitBeforeChange": "e7556f4af60fa1602c1b74289c6c64e1a83e4235", "commitAfterChange": "5fc3ff2bfbed94f88e1af95f38e970a832e4dbe6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void checkThrowsTags(List aTags, List aThrows)", "signatureAfterChange": "     private void checkThrowsTags(List aTags, List aThrows)", "diff": ["-                    final ClassResolver cr = new ClassResolver(", "-                        Thread.currentThread().getContextClassLoader(),", "-                        mPackageFullIdent.getText(), mImports);", "+                    final ClassResolver cr =", "+                        new ClassResolver(", "+                            getClassLoader(),", "+                            mPackageFullIdent.getText(),", "+                            mImports);", "-                        reqd = !RuntimeException.class.isAssignableFrom(clazz)", "-                            && !Error.class.isAssignableFrom(clazz);", "+                        reqd =", "+                            !RuntimeException.class.isAssignableFrom(clazz)", "+                                && !Error.class.isAssignableFrom(clazz);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d71d1097fecf80b0ea3cd471278d436", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test(expected = CheckstyleException.class)     public void testNoSuchAttribute() throws CheckstyleException", "signatureAfterChange": "      @Test(expected = CheckstyleException.class)     public void testNoSuchAttribute() throws CheckstyleException", "diff": ["-        mConf.addAttribute(\"NonExisting\", \"doesn't matter\");", "-        mTestBean.configure(mConf);", "+        conf.addAttribute(\"NonExisting\", \"doesn't matter\");", "+        testBean.configure(conf);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d9949a06b02b30c60242998ff36538a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java", "commitBeforeChange": "3a20dbe8edafe0cca300b7b9dfa48effa9a36a06", "commitAfterChange": "5026b7228df4e3d9b79d13f27846987247f9e922", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void exitBlock()", "signatureAfterChange": "     private void exitBlock()", "diff": ["-        currentVariables = variableStack.pop();", "+        variableStack.pop();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dc6be09d696ce03f440d068d1df73fd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private boolean matchesSpecialImportsGroup(boolean aStatic,         String aCurrentImport, String aCurrentGroup)", "signatureAfterChange": "     private boolean matchesSpecialImportsGroup(boolean isStatic,         String currentImport, String currentGroup)", "diff": ["-    private boolean matchesSpecialImportsGroup(boolean aStatic,", "-        String aCurrentImport, String aCurrentGroup)", "+    private boolean matchesSpecialImportsGroup(boolean isStatic,", "+        String currentImport, String currentGroup)", "-        return !aStatic && SPECIAL_IMPORTS_RULE_GROUP.equals(aCurrentGroup)", "-                && mSpecialImportsRegExp.matcher(aCurrentImport).find();", "+        return !isStatic && SPECIAL_IMPORTS_RULE_GROUP.equals(currentGroup)", "+                && specialImportsRegExp.matcher(currentImport).find();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dc8e084b2b496d1bd0acad7e497f300", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "b3133035a4fa0e086dfb0dfbefbc7f1540521bbc", "commitAfterChange": "add2bdfb27494bff5fa9c305d9782f57c6170b18", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void auditFinished(AuditEvent aEvt)", "signatureAfterChange": "     public void auditFinished(AuditEvent aEvt)", "diff": ["-        mWriter.println(\"Audit done.\");", "-        mWriter.flush();", "+        mInfoWriter.println(\"Audit done.\");", "+        closeStreams();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dfa30724bfe83f5574ed7c1ab7648d2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/EmptyBlockCheck.java", "commitBeforeChange": "91aa6578321ceb08f4b0d715f994b7a9f4abe9d7", "commitAfterChange": "3430721be200cbe2acf55c3b3d52a528638123b3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean hasText(final DetailAST slistAST)", "signatureAfterChange": "     private boolean hasText(final DetailAST aSlistAST)", "diff": ["-    private boolean hasText(final DetailAST slistAST)", "+    private boolean hasText(final DetailAST aSlistAST)", "-        final DetailAST rcurlyAST = slistAST.findFirstToken(TokenTypes.RCURLY);", "+        final DetailAST rcurlyAST = aSlistAST.findFirstToken(TokenTypes.RCURLY);", "-            final int slistLineNo = slistAST.getLineNo();", "-            final int slistColNo = slistAST.getColumnNo();", "+            final int slistLineNo = aSlistAST.getLineNo();", "+            final int slistColNo = aSlistAST.getColumnNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e335921b0d4fe78fe7fa2b818c10d86", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean isIgnoredParam(DetailAST aParamDef)", "signatureAfterChange": "     private boolean isIgnoredParam(DetailAST paramDef)", "diff": ["-    private boolean isIgnoredParam(DetailAST aParamDef)", "+    private boolean isIgnoredParam(DetailAST paramDef)", "-        if (mIgnorePrimitiveTypes) {", "-            final DetailAST parameterType = aParamDef.", "+        if (ignorePrimitiveTypes) {", "+            final DetailAST parameterType = paramDef.", "-            if (mPrimitiveDataTypes.contains(parameterType.getType())) {", "+            if (primitiveDataTypes.contains(parameterType.getType())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e6bc115a5ffb13bfde44d3fa25337b2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final String outerTypeName = aAST.findFirstToken(TokenTypes.IDENT).getText();", "-        if (!mSeenFirstToken) {", "+        final String outerTypeName = ast.findFirstToken(TokenTypes.IDENT).getText();", "+        if (!seenFirstToken) {", "-            if (mFileName.equals(outerTypeName)) {", "-                mValidFirst = true;", "+            if (fileName.equals(outerTypeName)) {", "+                validFirst = true;", "-                mWrongType = aAST;", "+                wrongType = ast;", "-            final DetailAST modifiers = aAST.findFirstToken(TokenTypes.MODIFIERS);", "+            final DetailAST modifiers = ast.findFirstToken(TokenTypes.MODIFIERS);", "-                    && aAST.getParent() == null)", "+                    && ast.getParent() == null)", "-                mHasPublic = true;", "+                hasPublic = true;", "-        mSeenFirstToken = true;", "+        seenFirstToken = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e801bb18f073d45536e5d1fa7480d32", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "commitBeforeChange": "3c0c72f96477afb542ee37b3336f4b7b7613ff29", "commitAfterChange": "6f0a3dee5efc6217383f9bfd6d7a3a116b1c885b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setCheckModifier(boolean aValue)", "signatureAfterChange": "     public void setIgnoreName(boolean aValue)", "diff": ["-    public void setCheckModifier(boolean aValue)", "-        mCheckAbstractModifier = aValue;", "+    public void setIgnoreName(boolean aValue)", "+        mIgnoreName = aValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e999268e4ae2fdff2637a5484818f64", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected final AbstractClassInfo findClassAlias(final String name)", "signatureAfterChange": "     protected final AbstractClassInfo findClassAlias(final String name)", "diff": ["-        AbstractClassInfo ci = null;", "+        AbstractClassInfo classInfo = null;", "-            ci = paramMap.get(name);", "-            if (ci != null) {", "+            classInfo = paramMap.get(name);", "+            if (classInfo != null) {", "-        return ci;", "+        return classInfo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e9f61fc9c43c0c0ae24b27b0e05331a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testNLOW() throws Exception", "signatureAfterChange": "      @Test     public void testNlow() throws Exception", "diff": ["-    public void testNLOW() throws Exception {", "+    public void testNlow() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ea23e3efa1998b4dd9a6768e6e7a173", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/UnnecessaryParenthesesCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private boolean inTokenList(int aType, int[] aTokens)", "signatureAfterChange": "     private boolean inTokenList(int type, int[] tokens)", "diff": ["-    private boolean inTokenList(int aType, int[] aTokens)", "+    private boolean inTokenList(int type, int[] tokens)", "-        for (int i = 0; (i < aTokens.length) && !found; i++) {", "-            found = aTokens[i] == aType;", "+        for (int i = 0; (i < tokens.length) && !found; i++) {", "+            found = tokens[i] == type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ed24ff0005931eade5000936dd1e644", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "80ab48f859c1f16835dbd41afe42414b41969e2f", "commitAfterChange": "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void checkEmptyJavadoc(TextBlock comment)", "signatureAfterChange": "     private void checkJavadocIsNotEmpty(TextBlock comment)", "diff": ["-    private void checkEmptyJavadoc(TextBlock comment) {", "+    private void checkJavadocIsNotEmpty(TextBlock comment) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5eee8929ff216a244f1e6c7897fb88fc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testMethod() throws Exception", "signatureAfterChange": "      @Test     public void testMethod() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"tag\", \"@todo\");", "-        mCheckConfig.addAttribute(\"tagFormat\", \"\\\\S\");", "-        mCheckConfig.addAttribute(\"tokens\",", "+        checkConfig.addAttribute(\"tag\", \"@todo\");", "+        checkConfig.addAttribute(\"tagFormat\", \"\\\\S\");", "+        checkConfig.addAttribute(\"tokens\",", "-        mCheckConfig.addAttribute(\"severity\", \"ignore\");", "+        checkConfig.addAttribute(\"severity\", \"ignore\");", "-        verify(mCheckConfig, getPath(\"InputWriteTag.java\"), expected);", "+        verify(checkConfig, getPath(\"InputWriteTag.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f1c6dc4996befc46935a0941e40d037", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static String getJavadocCommentContent(DetailAST aJavadocCommentBegin)", "signatureAfterChange": "     public static String getJavadocCommentContent(DetailAST javdocCommentBegin)", "diff": ["-    public static String getJavadocCommentContent(DetailAST aJavadocCommentBegin)", "+    public static String getJavadocCommentContent(DetailAST javdocCommentBegin)", "-        final DetailAST commentContent = aJavadocCommentBegin.getFirstChild();", "+        final DetailAST commentContent = javdocCommentBegin.getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f2bcf9bfb92f965b31854750b5fc146", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/CodeSelector.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private int findLastPosition(final DetailAST ast)", "signatureAfterChange": "      private int findLastPosition(final DetailAST astNode)", "diff": ["-    private int findLastPosition(final DetailAST ast) {", "-        if (ast.getChildCount() == 0) {", "-            return lines2position.get(ast.getLineNo()) + ast.getColumnNo()", "-                + ast.getText().length();", "+    private int findLastPosition(final DetailAST astNode) {", "+        if (astNode.getChildCount() == 0) {", "+            return lines2position.get(astNode.getLineNo()) + astNode.getColumnNo()", "+                + astNode.getText().length();", "-            return findLastPosition(ast.getLastChild());", "+            return findLastPosition(astNode.getLastChild());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f302acd07813838a61e373dda09e011", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private boolean matchesStandartImportGroup(boolean aStatic,         String aCurrentImport, String aCurrentGroup)", "signatureAfterChange": "     private boolean matchesStandartImportGroup(boolean isStatic,         String currentImport, String currentGroup)", "diff": ["-    private boolean matchesStandartImportGroup(boolean aStatic,", "-        String aCurrentImport, String aCurrentGroup)", "+    private boolean matchesStandartImportGroup(boolean isStatic,", "+        String currentImport, String currentGroup)", "-        return !aStatic && STANDARD_JAVA_PACKAGE_RULE_GROUP.equals(aCurrentGroup)", "-                && mStandardPackageRegExp.matcher(aCurrentImport).find();", "+        return !isStatic && STANDARD_JAVA_PACKAGE_RULE_GROUP.equals(currentGroup)", "+                && standardPackageRegExp.matcher(currentImport).find();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f3dc1b872d1b6500280a287e052351a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java", "commitBeforeChange": "17ebdc5c3740d37f29b8dc09c4ce4a42d2982b1e", "commitAfterChange": "4297ca50a95bd01c236ee1f4aeb13488298b104f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public MutableExceptionCheck()", "signatureAfterChange": "     public MutableExceptionCheck()", "diff": ["+        setExtendedClassNameFormat(DEFAULT_FORMAT);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f554edee4c8f61b7e90cb51b125a0e4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LocalVariableNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     protected final boolean mustCheckName(DetailAST aAST)", "signatureAfterChange": "      @Override     protected final boolean mustCheckName(DetailAST ast)", "diff": ["-    protected final boolean mustCheckName(DetailAST aAST)", "+    protected final boolean mustCheckName(DetailAST ast)", "-            aAST.findFirstToken(TokenTypes.MODIFIERS);", "+            ast.findFirstToken(TokenTypes.MODIFIERS);", "-        if (mAllowOneCharVarInForLoop && isForLoopVariable(aAST)) {", "+        if (allowOneCharVarInForLoop && isForLoopVariable(ast)) {", "-                    aAST.findFirstToken(TokenTypes.IDENT).getText();", "+                    ast.findFirstToken(TokenTypes.IDENT).getText();", "-        return (!isFinal && ScopeUtils.isLocalVariableDef(aAST));", "+        return (!isFinal && ScopeUtils.isLocalVariableDef(ast));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f769bdd4f2969ca8884a363f5edb019", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/ParseTreeModel.java", "commitBeforeChange": "5635ac93dc03ba38265f118885fa00bdabffda6c", "commitAfterChange": "94facbbd4dd5038a891b682217b2b5821fe9e729", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public Object getValueAt(Object node, int column)", "signatureAfterChange": "      public Object getValueAt(Object node, int column)", "diff": ["-                // TODO: use token type name as in TreeWalker.TOKEN_VALUE_TO_NAME", "-                return String.valueOf(ast.getType());", "+                return TokenTypes.getTokenName(ast.getType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f7b8a0f724849a547db3f0281a6ef67", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static String hexEncode(byte[] aByteArray)", "signatureAfterChange": "     private static String hexEncode(byte[] byteArray)", "diff": ["-    private static String hexEncode(byte[] aByteArray)", "+    private static String hexEncode(byte[] byteArray)", "-        final StringBuffer buf = new StringBuffer(2 * aByteArray.length);", "-        for (final byte b : aByteArray) {", "+        final StringBuffer buf = new StringBuffer(2 * byteArray.length);", "+        for (final byte b : byteArray) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f7e269f0f89e218a8fbd9b54a0e3a4a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/coding/InputExplicitInit.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      void method()", "signatureAfterChange": "      void method()", "diff": ["-        Strign s = null;", "+        String s = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f8dd5f6e15d585d397ecf6b8fabb0a8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/IntMatchFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public IntMatchFilter(int aMatchValue)", "signatureAfterChange": "     public IntMatchFilter(int matchValue)", "diff": ["-    public IntMatchFilter(int aMatchValue)", "+    public IntMatchFilter(int matchValue)", "-        mMatchValue = aMatchValue;", "+        this.matchValue = matchValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f96cffb3f1cc06c1da893c40d78f2b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "913028d7f2698018bb9414d763110d3ef25be875", "commitAfterChange": "c9db9f82e2311350bba5fd7e4042ae69f503e60b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     void verifyMethod(MethodSignature aSig)", "signatureAfterChange": "     void verifyMethod(MethodSignature aSig)", "diff": ["-            verifyParameter((LineText) it.next());", "+            checkParameter((LineText) it.next());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fab016d09ab7c33efd6d23e506722fd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "76b3486c0ace5fc31e500bfda8a91c16de378825", "commitAfterChange": "ca8fcd42047b2637e0027ff6aec79edd3656ba56", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setIgnoreEqualsIgnoreCase(boolean newValue)", "signatureAfterChange": "     public void setIgnoreEqualsIgnoreCase(boolean aNewValue)", "diff": ["-    public void setIgnoreEqualsIgnoreCase(boolean newValue) {", "-        mIgnoreEqualsIgnoreCase = newValue;", "+    public void setIgnoreEqualsIgnoreCase(boolean aNewValue)", "+    {", "+        mIgnoreEqualsIgnoreCase = aNewValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ff68a8cbbfff7289623302dc56aa3d1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractOptionCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setOption(String aOption) throws ConversionException", "signatureAfterChange": "     public void setOption(String optionStr) throws ConversionException", "diff": ["-    public void setOption(String aOption) throws ConversionException", "+    public void setOption(String optionStr) throws ConversionException", "-            mOption = Enum.valueOf(mOptionClass, aOption.trim().toUpperCase());", "+            option = Enum.valueOf(optionClass, optionStr.trim().toUpperCase());", "-            throw new ConversionException(\"unable to parse \" + aOption, iae);", "+            throw new ConversionException(\"unable to parse \" + option, iae);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "603675e4fe8cadc49b1f77b4788119de", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void checkUnusedTypeParamTags(         final List<JavadocTag> tags,         final List<String> typeParamNames)", "signatureAfterChange": "     private void checkUnusedTypeParamTags(         final List<JavadocTag> tags,         final List<String> typeParamNames)", "diff": ["-                                \"javadoc.unusedTag\",", "+                                UNUSED_TAG,", "-                            \"javadoc.unusedTagGeneral\");", "+                            UNUSED_TAG_GENERAL);", "-                        \"javadoc.unusedTagGeneral\");", "+                        UNUSED_TAG_GENERAL);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6045e83ab3722c9044433f9d3bcbe304", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setAllowedAbbreviations(String aAllowedAbbreviations)", "signatureAfterChange": "     public void setAllowedAbbreviations(String allowedAbbreviations)", "diff": ["-    public void setAllowedAbbreviations(String aAllowedAbbreviations)", "+    public void setAllowedAbbreviations(String allowedAbbreviations)", "-        if (aAllowedAbbreviations != null) {", "-            mAllowedAbbreviations = new HashSet<String>(", "-                    Arrays.asList(aAllowedAbbreviations.split(\",\")));", "+        if (allowedAbbreviations != null) {", "+            this.allowedAbbreviations = new HashSet<String>(", "+                    Arrays.asList(allowedAbbreviations.split(\",\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6050dd8b4d02f1d399dec17f581c8852", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Comment.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     @Override     public int getEndColNo()", "signatureAfterChange": "     @Override     public int getEndColNo()", "diff": ["-        return mLastCol;", "+        return lastCol;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "606213e902adffb759c1f5e989d9965b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void checkSingleLine(int aLineNum, IndentLevel aIndentLevel)", "signatureAfterChange": "     private void checkSingleLine(int lineNum, IndentLevel indentLevel)", "diff": ["-    private void checkSingleLine(int aLineNum, IndentLevel aIndentLevel)", "+    private void checkSingleLine(int lineNum, IndentLevel indentLevel)", "-        final String line = mIndentCheck.getLine(aLineNum - 1);", "+        final String line = indentCheck.getLine(lineNum - 1);", "-        if (aIndentLevel.gt(start)) {", "-            logChildError(aLineNum, start, aIndentLevel);", "+        if (indentLevel.gt(start)) {", "+            logChildError(lineNum, start, indentLevel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "606b9d05bf85ec2c9ae6027d9f503856", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public File getFile()", "signatureAfterChange": "     public File getFile()", "diff": ["-        return mFile;", "+        return file;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60b8303b469509b0432f538c520d1880", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setFailureProperty(String aPropertyName)", "signatureAfterChange": "     public void setFailureProperty(String propertyName)", "diff": ["-    public void setFailureProperty(String aPropertyName)", "+    public void setFailureProperty(String propertyName)", "-        mFailureProperty = aPropertyName;", "+        failureProperty = propertyName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60d34f1d9f964a58fb66d91b0d50ee14", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected boolean isUnchecked(Class<?> aException)", "signatureAfterChange": "     protected boolean isUnchecked(Class<?> exception)", "diff": ["-    protected boolean isUnchecked(Class<?> aException)", "+    protected boolean isUnchecked(Class<?> exception)", "-        return isSubclass(aException, RuntimeException.class)", "-            || isSubclass(aException, Error.class);", "+        return isSubclass(exception, RuntimeException.class)", "+            || isSubclass(exception, Error.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60dd459353abe3f92f416ba48e5c89dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected final void logTag(int line, String tag, String tagValue)", "signatureAfterChange": "     protected final void logTag(int line, String tagName, String tagValue)", "diff": ["-    protected final void logTag(int line, String tag, String tagValue) {", "+    protected final void logTag(int line, String tagName, String tagValue) {", "-        log(line, WRITE_TAG, tag, tagValue);", "+        log(line, WRITE_TAG, tagName, tagValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60dda9c64a529c60971706fbdf0964dc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-    public void finishTree(DetailAST aRootAST)", "+    public void finishTree(DetailAST rootAST)", "-        if (!(mValidFirst || mHasPublic) && mWrongType != null) {", "-            log(mWrongType.getLineNo(), \"type.file.mismatch\");", "+        if (!(validFirst || hasPublic) && wrongType != null) {", "+            log(wrongType.getLineNo(), \"type.file.mismatch\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60f65cb4f8c8c7fce2f29824108c583e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "10f348bbfd91fd8c2bd7776aff3c03f549380a44", "commitAfterChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 41, "signatureBeforeChange": "         protected BlockFrame(LexicalFrame parent)", "signatureAfterChange": "         protected BlockFrame(AbstractFrame parent)", "diff": ["-        protected BlockFrame(LexicalFrame parent) {", "-            super(parent);", "+        protected BlockFrame(AbstractFrame parent) {", "+            super(parent, null);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6121a695750ce691dd60fd3eb9dc0ba2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "be8127a604bfdd91ff7cd32a1f825c9851d791ec", "commitAfterChange": "7d097b6fa682f8dcfedd95da2db8fed980c51705", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processIdent(DetailAST aAST)", "signatureAfterChange": "     private void processIdent(DetailAST aAST)", "diff": ["+        // TODO Need to filter how often this is run to improve speed, and", "+        // also turn off by default.", "+        processJavadoc(aAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "612a464e06c6f6d726bc0ce16e0f15a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "31cc403a41c60aa09050252953a56ef053c034d4", "commitAfterChange": "2f9b0f057c489d074967575696a0d53a34fec6b7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public ImmutableMap<Integer, List<TextBlock>> getCComments()", "signatureAfterChange": "     public ImmutableMap<Integer, List<TextBlock>> getCComments()", "diff": ["-        return ImmutableMap.copyOf(cComments);", "+        return ImmutableMap.copyOf(clangComments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6157d9695ac85b4e1a2d33b7a0cc8cca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "a4ce4c6bb4714ff0b51d071509d2683d9e623a36", "commitAfterChange": "2debda611fe487021711aa4acce56651799a778f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main(String[] aArgs)", "signatureAfterChange": "     public static void main(String[] aArgs)", "diff": ["-                ConfigurationLoader.loadConfiguration(line.getOptionValue(\"c\"));", "+                ConfigurationLoader.loadConfiguration(line.getOptionValue(\"c\"),", "+                                                      props);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6172b2bef488680a26cfbe021950870c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setTagOrder(String aOrder)", "signatureAfterChange": "     public void setTagOrder(String order)", "diff": ["-    public void setTagOrder(String aOrder)", "+    public void setTagOrder(String order)", "-        for (String type : aOrder.split(\", \")) {", "+        for (String type : order.split(\", \")) {", "-        mTagOrder = customOrder;", "+        tagOrder = customOrder;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "619911b50d7bba36a088d3ccd70b8ac1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean isEmptyCtorBlock(DetailAST aAST, int aParentType)", "signatureAfterChange": "     private boolean isEmptyCtorBlock(DetailAST ast, int parentType)", "diff": ["-    private boolean isEmptyCtorBlock(DetailAST aAST, int aParentType)", "+    private boolean isEmptyCtorBlock(DetailAST ast, int parentType)", "-        return mAllowEmptyCtors", "-            && isEmptyBlock(aAST, aParentType, TokenTypes.CTOR_DEF);", "+        return allowEmptyCtors", "+            && isEmptyBlock(ast, parentType, TokenTypes.CTOR_DEF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61a283cb488c44de2ed8149498cce04a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final DetailAST modifiers = aAST.getFirstChild();", "-        final AST type = aAST.findFirstToken(TokenTypes.TYPE);", "-        final AST methodName = aAST.findFirstToken(TokenTypes.IDENT);", "-        final DetailAST parameters = aAST.findFirstToken(TokenTypes.PARAMETERS);", "+        final DetailAST modifiers = ast.getFirstChild();", "+        final AST type = ast.findFirstToken(TokenTypes.TYPE);", "+        final AST methodName = ast.findFirstToken(TokenTypes.IDENT);", "+        final DetailAST parameters = ast.findFirstToken(TokenTypes.PARAMETERS);", "-            mObjBlockEquals.put(aAST.getParent(), aAST);", "+            objBlockEquals.put(ast.getParent(), ast);", "-            mObjBlockWithHashCode.add(aAST.getParent());", "+            objBlockWithHashCode.add(ast.getParent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61b04fb25105d44cadd3851afd888f6e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "ecc852d48b9d26398926b255e3cd68572119c106", "commitAfterChange": "751257987b2ef5f301e2deb3b55302196e5015af", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private int process(String aFileName)", "signatureAfterChange": "     private int process(String aFileName)", "diff": ["-                VerifierSingleton.getInstance().clearMessages();", "+                VerifierSingleton.getInstance().reset();", "-                VerifierSingleton.getInstance().clearMessages();", "+                VerifierSingleton.getInstance().reset();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61c6f3fde0e342ee43599f02a6135120", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java", "commitBeforeChange": "9cc86b38df9a086713d1fcdf01b451b41c0d6f65", "commitAfterChange": "e9ec5bfbd5ab91852c3ec1b30492df5c06cdd3b1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testCacheFile_changeInConfig() throws Exception", "signatureAfterChange": "      @Test     public void testCacheFile_changeInConfig() throws Exception", "diff": ["-        checker = new Checker();", "-        checker.setLocaleCountry(locale.getCountry());", "-        checker.setLocaleLanguage(locale.getLanguage());", "-        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());", "-        checker.configure(checkerConfig);", "-        checker.addListener(new BriefLogger(stream));", "+        Checker otherChecker = new Checker();", "+        otherChecker.setLocaleCountry(locale.getCountry());", "+        otherChecker.setLocaleLanguage(locale.getLanguage());", "+        otherChecker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());", "+        otherChecker.configure(checkerConfig);", "+        otherChecker.addListener(new BriefLogger(stream));", "-        verify(checker, pathToEmptyFile, pathToEmptyFile, expected);", "+        verify(otherChecker, pathToEmptyFile, pathToEmptyFile, expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61eecb4d1a92ffe46866673df1614706", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void setMaxTotal(int aValue)", "signatureAfterChange": "     public void setMaxTotal(int value)", "diff": ["-    public void setMaxTotal(int aValue)", "+    public void setMaxTotal(int value)", "-        mMaxTotal = aValue;", "+        maxTotal = value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "622911de09f62f557390ef49500e4739", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractSuperCheck.java", "commitBeforeChange": "5cd16d56a2ef2a3daaf1674666a9a5e6f2ddfe78", "commitAfterChange": "f9a9d6c3d321eeb2879efb7f48f02fe21a51c06c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "         public boolean getCallsSuper()", "signatureAfterChange": "         public boolean isCallingSuper()", "diff": ["-        public boolean getCallsSuper()", "+        public boolean isCallingSuper()", "-            return callsSuper;", "+            return callingSuper;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6242befe41191c26537ed1e12d917bb9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static void loadPackageNamesSource(             InputSource aSource, String aSourceName,             PackageNamesLoader aNameLoader)         throws CheckstyleException", "signatureAfterChange": "     private static void loadPackageNamesSource(             InputSource source, String sourceName,             PackageNamesLoader nameLoader)         throws CheckstyleException", "diff": ["-            InputSource aSource, String aSourceName,", "-            PackageNamesLoader aNameLoader)", "+            InputSource source, String sourceName,", "+            PackageNamesLoader nameLoader)", "-            aNameLoader.parseInputSource(aSource);", "+            nameLoader.parseInputSource(source);", "-                    + aSourceName + \" - \" + e.getMessage(), e);", "+                    + sourceName + \" - \" + e.getMessage(), e);", "-            throw new CheckstyleException(\"unable to read \" + aSourceName, e);", "+            throw new CheckstyleException(\"unable to read \" + sourceName, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "625069fc3ab7131308a7ec83927d9d67", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "9e5fccda3a28b3d7663593ca6379db8dd1d392e8", "commitAfterChange": "204c47239984ce7d8ce6e4cacec21501698b95ec", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void setIgnoredMethodNames(String[] aMethodNames)", "signatureAfterChange": "     public void setIgnoredMethodNames(String[] aMethodNames)", "diff": ["-            mIllegalClassNames.add(aMethodNames[i]);", "+            mIgnoredMethodNames.add(aMethodNames[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "625f58dab20cff5a2147b4d1dbd48b2f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java", "commitBeforeChange": "6ca2d5279ea5b03dfa91167a9001d55cca5db65d", "commitAfterChange": "af4ecbf9b557808a05c7b84820b4ffd28990ee33", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public JTreeTable(TreeTableModel treeTableModel)", "signatureAfterChange": "     public JTreeTable(ParseTreeTableModel treeTableModel)", "diff": ["-    public JTreeTable(TreeTableModel treeTableModel) {", "+    public JTreeTable(ParseTreeTableModel treeTableModel) {", "-        setDefaultRenderer(TreeTableModel.class, tree);", "-        setDefaultEditor(TreeTableModel.class, new TreeTableCellEditor());", "+        setDefaultRenderer(ParseTreeTableModel.class, tree);", "+        setDefaultEditor(ParseTreeTableModel.class, new TreeTableCellEditor());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6263d4ac79820454e510bc5847fb8254", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "commitAfterChange": "abfc952fd0ed88f6246b1d969a8a980ea63f0bd6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public boolean equals(Object object)", "signatureAfterChange": "      @Override     public boolean equals(Object object)", "diff": ["-                && Objects.equals(colNo, localizedMessage.colNo)", "+                && Objects.equals(columnNo, localizedMessage.columnNo)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6269f0ebf583dc297995e6257351387f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "31c6f5ebaefc42c8c97b9fc5c7a44cc90950c902", "commitAfterChange": "8ea8f96c0d6a70a8b9c9c1147d1c8a6d97345495", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private boolean isIgnoredParamOfAbstractMethod(DetailAST ast)", "signatureAfterChange": "     private boolean isIgnoredParamOfAbstractMethod(DetailAST ast)", "diff": ["-                result = mods != null && mods.branchContains(TokenTypes.ABSTRACT);", "+                result = mods.branchContains(TokenTypes.ABSTRACT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "626e7495b5f3dabafa8c72e1b912080b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private boolean endsWithNewline(RandomAccessFile aRandomAccessFile)         throws IOException", "signatureAfterChange": "     private boolean endsWithNewline(RandomAccessFile randomAccessFile)         throws IOException", "diff": ["-    private boolean endsWithNewline(RandomAccessFile aRandomAccessFile)", "+    private boolean endsWithNewline(RandomAccessFile randomAccessFile)", "-        final int len = mLineSeparator.length();", "-        if (aRandomAccessFile.length() < len) {", "+        final int len = lineSeparator.length();", "+        if (randomAccessFile.length() < len) {", "-        aRandomAccessFile.seek(aRandomAccessFile.length() - len);", "+        randomAccessFile.seek(randomAccessFile.length() - len);", "-        final int readBytes = aRandomAccessFile.read(lastBytes);", "+        final int readBytes = randomAccessFile.read(lastBytes);", "-        return mLineSeparator.matches(lastBytes);", "+        return lineSeparator.matches(lastBytes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "629028f6d401ebda43e7aa9c67ea8890", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/IntRangeFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public boolean equals(Object aObject)", "signatureAfterChange": "      @Override     public boolean equals(Object object)", "diff": ["-    public boolean equals(Object aObject)", "+    public boolean equals(Object object)", "-        if (aObject instanceof IntRangeFilter) {", "-            final IntRangeFilter other = (IntRangeFilter) aObject;", "-            return (this.mLowerBound.equals(other.mLowerBound)", "-                && this.mUpperBound.equals(other.mUpperBound));", "+        if (object instanceof IntRangeFilter) {", "+            final IntRangeFilter other = (IntRangeFilter) object;", "+            return (this.lowerBound.equals(other.lowerBound)", "+                && this.upperBound.equals(other.upperBound));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6290d2ead232d17c7b8998243a402314", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "85ba2a3dce39e73858d0f3df72c43804677c8c48", "commitAfterChange": "d49eaaf2e42538bc7f01510eb3ca2812b253c98a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public int[] getAcceptableTokens()", "signatureAfterChange": "      @Override     public int[] getAcceptableTokens()", "diff": ["-            result[i++] = Utils.getTokenId(name);", "+            result[i] = Utils.getTokenId(name);", "+            i++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "629299f55140dfc20f2aa3f3ae3b0c4c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "913028d7f2698018bb9414d763110d3ef25be875", "commitAfterChange": "c9db9f82e2311350bba5fd7e4042ae69f503e60b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 29, "signatureBeforeChange": "     void verifyParameter(LineText aParam)", "signatureAfterChange": "     private void checkParameter(LineText aParam)", "diff": ["-     **/", "-    void verifyParameter(LineText aParam)", "-    {", "-        if (!mConfig.getParamRegexp().match(aParam.getText())) {", "-            log(aParam.getLineNo(),", "-                \"parameter '\" + aParam.getText() +", "-                \"' must match pattern '\" + mConfig.getParamPat() + \"'.\");", "-        }", "-    }", "+     **/", "+    private void checkParameter(LineText aParam)", "+    {", "+        if (!mConfig.getParamRegexp().match(aParam.getText())) {", "+            log(aParam.getLineNo(),", "+                \"parameter '\" + aParam.getText() +", "+                \"' must match pattern '\" + mConfig.getParamPat() + \"'.\");", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63100f14580d7a324ca24dc88a324590", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void visitExpr(DetailAST aAst)", "signatureAfterChange": "     private void visitExpr(DetailAST ast)", "diff": ["-    private void visitExpr(DetailAST aAst)", "+    private void visitExpr(DetailAST ast)", "-        mExprDepth++;", "-        if (mExprDepth == 1", "-                && !mInForHeader", "-                && (mLastStatementEnd == aAst.getLineNo()))", "+        exprDepth++;", "+        if (exprDepth == 1", "+                && !inForHeader", "+                && (lastStatementEnd == ast.getLineNo()))", "-            log(aAst, \"multiple.statements.line\");", "+            log(ast, \"multiple.statements.line\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63202211f589a7e5cc67e49549dad98a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "commitAfterChange": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Test     public void testParansAlways() throws Exception", "signatureAfterChange": "     @Test     public void testParensAlways() throws Exception", "diff": ["-    public void testParansAlways() throws Exception {", "+    public void testParensAlways() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "632fb3baad69c70575d51ab62fbacea3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public final void setStandardPackageRegExp(String aRegexp)", "signatureAfterChange": "     public final void setStandardPackageRegExp(String regexp)", "diff": ["-    public final void setStandardPackageRegExp(String aRegexp)", "+    public final void setStandardPackageRegExp(String regexp)", "-        mStandardPackageRegExp = Utils.getPattern(aRegexp);", "+        standardPackageRegExp = Utils.getPattern(regexp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "633c99ee2db71473a5be9009073ab585", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void setOffCommentFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setOffCommentFormat(String format)         throws ConversionException", "diff": ["-    public void setOffCommentFormat(String aFormat)", "+    public void setOffCommentFormat(String format)", "-            mOffRegexp = Utils.getPattern(aFormat);", "+            offRegexp = Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6344af8e00919860cd5143bddaa28bb9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "80ab48f859c1f16835dbd41afe42414b41969e2f", "commitAfterChange": "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private static Set<String> processJavadoc(TextBlock cmt)", "signatureAfterChange": "     private static Set<String> collectReferecesFromJavadoc(TextBlock cmt)", "diff": ["-    private static Set<String> processJavadoc(TextBlock cmt) {", "+    private static Set<String> collectReferecesFromJavadoc(TextBlock cmt) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6347d0b5802b22956e521c04340167bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "88cc5edb4c14c12381d2aaa3da4f668346a9b08c", "commitAfterChange": "081c654df8d801f576506265681654a730cfc375", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Override     public void execute() throws BuildException", "signatureAfterChange": "      @Override     public void execute()", "diff": ["-    public void execute() throws BuildException {", "+    public void execute() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6354e6e7a792690beed4689745d1c5b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultConfiguration.java", "commitBeforeChange": "2959d83ed2a3b8217d9d3c8aefa748cdacdcd393", "commitAfterChange": "4a97626c4fabfcbaa14648c6b5f8bc1bedf73f46", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void addAttribute(String attributeName, String value)", "signatureAfterChange": "     public void addAttribute(String attributeName, String value)", "diff": ["-        final String current = attributeMap.put(attributeName, value);", "+        final String current = attributeMap.get(attributeName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63620ef401e74a48e94f3f49e152fd48", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractFormatCheck.java", "commitBeforeChange": "104e69edd63edb8d35b6ae63a17934fc5cf49267", "commitAfterChange": "81b52e27c5077f9a4f426d32b0e39a785052c715", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public AbstractFormatCheck(String aDefaultFormat)         throws ConversionException", "signatureAfterChange": "     public AbstractFormatCheck(String aDefaultFormat)         throws ConversionException", "diff": ["-        setFormat(aDefaultFormat);", "+        this(aDefaultFormat, 0);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63767062606eecab918170d0236c1143", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private ResourceBundle getBundle(String bundleName)", "signatureAfterChange": "     private ResourceBundle getBundle(String bundleName)", "diff": ["-            ResourceBundle bundle = BUNDLE_CACHE", "+            ResourceBundle resourceBundle = BUNDLE_CACHE", "-            if (bundle == null) {", "-                bundle = ResourceBundle.getBundle(bundleName, sLocale,", "+            if (resourceBundle == null) {", "+                resourceBundle = ResourceBundle.getBundle(bundleName, sLocale,", "-                BUNDLE_CACHE.put(bundleName, bundle);", "+                BUNDLE_CACHE.put(bundleName, resourceBundle);", "-            return bundle;", "+            return resourceBundle;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "638fc922d55fcc2dad8f0475844a1fd6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private boolean isVariableInOperatorExpr(             DetailAST aOperator, DetailAST aVariable)", "signatureAfterChange": "     private boolean isVariableInOperatorExpr(             DetailAST operator, DetailAST variable)", "diff": ["-            DetailAST aOperator, DetailAST aVariable)", "+            DetailAST operator, DetailAST variable)", "-                aOperator.findFirstToken(TokenTypes.LPAREN);", "+                operator.findFirstToken(TokenTypes.LPAREN);", "-                if (isChild(exprBetweenBrackets, aVariable)) {", "+                if (isChild(exprBetweenBrackets, variable)) {", "-                switch (aOperator.getType()) {", "+                switch (operator.getType()) {", "-                    final DetailAST elseBlock = aOperator.getLastChild();", "+                    final DetailAST elseBlock = operator.getLastChild();", "-                                            aVariable);", "+                                            variable);", "-                    DetailAST currentCaseBlock = aOperator", "+                    DetailAST currentCaseBlock = operator", "-                                aVariable))", "+                                variable))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63b68e43f087e2e2f8e9af3b49dfc232", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ArrayTrailingCommaCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aArrayInit)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST arrayInit)", "diff": ["-    public void visitToken(DetailAST aArrayInit)", "+    public void visitToken(DetailAST arrayInit)", "-        final DetailAST rcurly = aArrayInit.findFirstToken(TokenTypes.RCURLY);", "+        final DetailAST rcurly = arrayInit.findFirstToken(TokenTypes.RCURLY);", "-        if ((aArrayInit.getLineNo() == rcurly.getLineNo())", "-            || (aArrayInit.getChildCount() == 1))", "+        if ((arrayInit.getLineNo() == rcurly.getLineNo())", "+            || (arrayInit.getChildCount() == 1))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63b79da52f003b06d90bf3d3f394c182", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static Point skipHtmlComment(String[] text, Point from)", "signatureAfterChange": "     private static Point skipHtmlComment(String[] text, Point fromPoint)", "diff": ["-    private static Point skipHtmlComment(String[] text, Point from) {", "-        Point to = from;", "-        to = findChar(text, '>', to);", "-        while (!text[to.getLineNo()]", "-               .substring(0, to.getColumnNo() + 1).endsWith(\"-->\")) {", "-            to = findChar(text, '>', getNextCharPos(text, to));", "+    private static Point skipHtmlComment(String[] text, Point fromPoint) {", "+        Point toPoint = fromPoint;", "+        toPoint = findChar(text, '>', toPoint);", "+        while (!text[toPoint.getLineNo()]", "+               .substring(0, toPoint.getColumnNo() + 1).endsWith(\"-->\")) {", "+            toPoint = findChar(text, '>', getNextCharPos(text, toPoint));", "-        return to;", "+        return toPoint;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63c05bd372fe6dc675f1d1dc9402eebc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     void destroy()", "signatureAfterChange": "     void destroy()", "diff": ["-        if (mDetailsFile != null) {", "+        if (detailsFile != null) {", "-                out = new FileOutputStream(mDetailsFile);", "-                mDetails.store(out, null);", "+                out = new FileOutputStream(detailsFile);", "+                details.store(out, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63e8909103d1e4e20f4f4d747f502618", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private ParseStatus parseJavadocAsDetailNode(DetailAST aJavadocCommentAst)", "signatureAfterChange": "     private ParseStatus parseJavadocAsDetailNode(DetailAST javadocCommentAst)", "diff": ["-    private ParseStatus parseJavadocAsDetailNode(DetailAST aJavadocCommentAst)", "+    private ParseStatus parseJavadocAsDetailNode(DetailAST javadocCommentAst)", "-        final String javadocComment = JavadocUtils.getJavadocCommentContent(aJavadocCommentAst);", "+        final String javadocComment = JavadocUtils.getJavadocCommentContent(javadocCommentAst);", "-        mErrorListener.setOffset(aJavadocCommentAst.getLineNo() - 1);", "+        errorListener.setOffset(javadocCommentAst.getLineNo() - 1);", "-            parseErrorMessage = new ParseErrorMessage(aJavadocCommentAst.getLineNo(),", "+            parseErrorMessage = new ParseErrorMessage(javadocCommentAst.getLineNo(),", "-                    aJavadocCommentAst.getColumnNo(), e.getMessage());", "+                    javadocCommentAst.getColumnNo(), e.getMessage());", "-            parseErrorMessage = mErrorListener.getErrorMessage();", "+            parseErrorMessage = errorListener.getErrorMessage();", "-                parseErrorMessage = new ParseErrorMessage(aJavadocCommentAst.getLineNo(),", "+                parseErrorMessage = new ParseErrorMessage(javadocCommentAst.getLineNo(),", "-                        aJavadocCommentAst.getColumnNo(), e.getMessage());", "+                        javadocCommentAst.getColumnNo(), e.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63ece3bd1fcfab3b5ff4ba33895ee6d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "commitBeforeChange": "2cf54ade2182e29c413f23e2235a896247d7a2ad", "commitAfterChange": "d282053d9ce02c13c779decfd079a8305086f752", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static boolean hasDefaultOrExplNonPrivateCtor(DetailAST classDef)", "signatureAfterChange": "     private static boolean hasDefaultOrExplicitNonPrivateCtor(DetailAST classDef)", "diff": ["-    private static boolean hasDefaultOrExplNonPrivateCtor(DetailAST classDef) {", "+    private static boolean hasDefaultOrExplicitNonPrivateCtor(DetailAST classDef) {", "-        boolean hasExplNonPrivateCtor = false;", "+        boolean hasExplicitNonPrivateCtor = false;", "-                    hasExplNonPrivateCtor = true;", "+                    hasExplicitNonPrivateCtor = true;", "-        return hasDefaultConstructor || hasExplNonPrivateCtor;", "+        return hasDefaultConstructor || hasExplicitNonPrivateCtor;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63ffc2610a758b2bbd5f4e79bcb45dd6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public int getBraceAdjustement()", "signatureAfterChange": "     public int getBraceAdjustement()", "diff": ["-        return mBraceAdjustment;", "+        return braceAdjustment;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "644bab7fb1892dfe1a140d1e5a7cc0c7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setIgnoreNumbers(double[] aList)", "signatureAfterChange": "     public void setIgnoreNumbers(double[] list)", "diff": ["-    public void setIgnoreNumbers(double[] aList)", "+    public void setIgnoreNumbers(double[] list)", "-        if ((aList == null) || (aList.length == 0)) {", "+        if ((list == null) || (list.length == 0)) {", "-            mIgnoreNumbers = new double[aList.length];", "-            System.arraycopy(aList, 0, mIgnoreNumbers, 0, aList.length);", "+            mIgnoreNumbers = new double[list.length];", "+            System.arraycopy(list, 0, mIgnoreNumbers, 0, list.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64611851f3417fab743cbeef6f81e377", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/grammars/GeneratedJava14LexerTest.java", "commitBeforeChange": "36321e0cc61a3ef9db6a2a468e72bf79f0da6211", "commitAfterChange": "798aac8ff0ec17573d316b64ea1b86ecf387f12f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testUnexpectedChar() throws IOException, Exception", "signatureAfterChange": "     public void testUnexpectedChar() throws IOException, Exception", "diff": ["-        verify(checkConfig, getPath(\"grammars/InputGrammar.java\"), expected);", "+//         verify(checkConfig, getPath(\"grammars/InputGrammar.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6461c31d0e293c752c4e6eada0403b90", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressElementTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testDecideByFileNameAndModuleMatching_RegExpNotMatch()", "signatureAfterChange": "      @Test     public void testDecideByFileNameAndModuleMatchingRegExpNotMatch()", "diff": ["-    public void testDecideByFileNameAndModuleMatching_RegExpNotMatch() {", "+    public void testDecideByFileNameAndModuleMatchingRegExpNotMatch() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64718de08b02cd5e5731a0275fffac34", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "92ea4cfb5182dbe4ba625ab10e8a95a683607f19", "commitAfterChange": "3fecb73fb3ea4da6bef4e5e9f3a5d555568f0a34", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 40, "signatureBeforeChange": "      public void testOpWrapOff()         throws Exception", "signatureAfterChange": "      public void testOpWrapIgnore()         throws Exception", "diff": ["-    public void testOpWrapOff()", "+", "+    public void testOpWrapIgnore()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "648d0017a2d9aeb88eaeca88eccc5335", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "969678107261e649c968b56dbace0064304bfb56", "commitAfterChange": "803dafc96a33bd987f84d930b9ae3ebf7a23e097", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void reportCComment(int aStartLineNo, int aStartColNo,                                int aEndLineNo, int aEndColNo)", "signatureAfterChange": "     public void reportCComment(int aStartLineNo, int aStartColNo,                                int aEndLineNo, int aEndColNo)", "diff": ["+        final Comment comment = new Comment(cc, aStartColNo, aEndLineNo,", "+                                            aEndColNo);", "-            entries.add(cc);", "+            entries.add(comment);", "-            entries.add(cc);", "+            entries.add(comment);", "-            Comment comment = new Comment(cc, aStartColNo, aEndLineNo);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "649e134017aeeaec1d9e5eb0ae2e7295", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java", "commitBeforeChange": "b8ca9f976501c36e77c6331c74de79c465486ca9", "commitAfterChange": "35fc8622d0e369fb3ddb00e7a21b951d67f98323", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     PkgControl(final String pkgName)", "signatureAfterChange": "     PkgControl(final String pkgName)", "diff": ["-        assert pkgName != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64e83a6c6bc00a5ffd79df525727c14e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "cb2862b73a3aa9192fad25015da2c2fed87f8a91", "commitAfterChange": "822384a711290170148b43b5ae390dd4e8cfaf4f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private static void traverse(File aNode, List aFiles)", "signatureAfterChange": "     private static void traverse(File aNode, List aFiles)", "diff": ["-                aFiles.add(aNode.getPath());", "+                aFiles.add(aNode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64f6825be39334a3d0d12e2e161b1a87", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static boolean isInContext(DetailAST aAST, int[][] aContextSet)", "signatureAfterChange": "     private static boolean isInContext(DetailAST ast, int[][] contextSet)", "diff": ["-    private static boolean isInContext(DetailAST aAST, int[][] aContextSet)", "+    private static boolean isInContext(DetailAST ast, int[][] contextSet)", "-        for (int[] element : aContextSet) {", "-            DetailAST current = aAST;", "+        for (int[] element : contextSet) {", "+            DetailAST current = ast;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "650c7b153c9269d62abfa01b01f2ddb9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/JUnitTestCaseCheckTest.java", "commitBeforeChange": "448a62c9a6740c4e6e5435b4a89cd9c82e6b8957", "commitAfterChange": "91e10c298d313957c4e9263484b836d33c2d4cbe", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "     @Test     public void testDefault() throws Exception", "diff": ["-            \"14:5: The method 'setUp' must be public or protected.\",", "-            \"15:5: The method 'tearDown' shouldn't be static.\",", "-            \"22:5: The method 'tearDown' must be declared with a void return type.\",", "-            \"28:5: The method 'setUp' must be declared with no parameters.\",", "-            \"30:5: The method 'suite' must be declared static.\",", "-            \"31:5: The method 'tearDown' must be declared with no parameters.\",", "+            \"29:5: The method 'setUp' must be declared with no parameters.\",", "+            \"31:5: The method 'suite' must be declared static.\",", "+            \"32:5: The method 'tearDown' must be declared with no parameters.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6518c77e6ff380123148e277886a090d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "546f336e25b26d072f96e2cda139b885858ed5b0", "commitAfterChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "         @Override         public boolean accept(File f)", "signatureAfterChange": "         @Override         public boolean accept(File file)", "diff": ["-        public boolean accept(File f) {", "-            if (f == null) {", "+        public boolean accept(File file) {", "+            if (file == null) {", "-            return f.isDirectory() || f.getName().endsWith(\".java\");", "+            return file.isDirectory() || file.getName().endsWith(\".java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "652694e47862475b15a7ea6226128d66", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractFormatCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public final void setCompileFlags(int aCompileFlags)", "signatureAfterChange": "     public final void setCompileFlags(int compileFlags)", "diff": ["-    public final void setCompileFlags(int aCompileFlags)", "+    public final void setCompileFlags(int compileFlags)", "-        updateRegexp(mFormat, aCompileFlags);", "+        updateRegexp(format, compileFlags);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65272a198fe5ef9a7ffbe9cf6aa6412a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "bf529ef600fa9ef2034d0412c198b2121f2b94f2", "commitAfterChange": "ce196814d857a4244a80c51d5151cc35e90b6749", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void addError(AuditEvent evt)", "signatureAfterChange": "      @Override     public void addError(AuditEvent event)", "diff": ["-    public void addError(AuditEvent evt) {", "-        if (evt.getSeverityLevel() != SeverityLevel.IGNORE) {", "-            writer.print(\"<error\" + \" line=\\\"\" + evt.getLine() + \"\\\"\");", "-            if (evt.getColumn() > 0) {", "-                writer.print(\" column=\\\"\" + evt.getColumn() + \"\\\"\");", "+    public void addError(AuditEvent event) {", "+        if (event.getSeverityLevel() != SeverityLevel.IGNORE) {", "+            writer.print(\"<error\" + \" line=\\\"\" + event.getLine() + \"\\\"\");", "+            if (event.getColumn() > 0) {", "+                writer.print(\" column=\\\"\" + event.getColumn() + \"\\\"\");", "-                + evt.getSeverityLevel().getName()", "+                + event.getSeverityLevel().getName()", "-                + encode(evt.getMessage())", "+                + encode(event.getMessage())", "-                + encode(evt.getSourceName())", "+                + encode(event.getSourceName())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "653858425e8a3b71702840aca5acc1c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-            log(aAST.getLineNo(), aAST.getColumnNo(), \"block.nested\");", "+            log(aAST.getLineNo(), aAST.getColumnNo(), MSG_KEY_BLOCK_NESTED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "654c368e9c8c1fab6a00d4f0bdad5882", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "443e534a3c98c0b30f24647da724fe918f17a006", "commitAfterChange": "66d73fe6189267fee3423e2e8d7fc2d68599a43f", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "     private void checkThrowsTags(List<JavadocTag> tags,             List<ExceptionInfo> throwsList, boolean reportExpectedTags)", "signatureAfterChange": "     private void checkThrowsTags(List<JavadocTag> tags,             List<ExceptionInfo> throwsList, boolean reportExpectedTags)", "diff": ["-            final String documentedEx = tag.getArg1();", "-            final Token token = new Token(tag.getArg1(), tag.getLineNo(), tag", "+            final String documentedEx = tag.getFirstArg();", "+            final Token token = new Token(tag.getFirstArg(), tag.getLineNo(), tag", "-                        JavadocTagInfo.THROWS.getText(), tag.getArg1());", "+                        JavadocTagInfo.THROWS.getText(), tag.getFirstArg());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "654e877f076be8b471788926ecf6c274", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoaderTest.java", "commitBeforeChange": "2e243db3fbdf7b737f78ed7cef0b9bd94f351d25", "commitAfterChange": "9586ee86d174ff502b9c57332b29f4b6e88e45ec", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test(expected = CheckstyleException.class)     public void testWrongFormatURI() throws Exception", "signatureAfterChange": "      @Test(expected = CheckstyleException.class)     public void testWrongFormatUri() throws Exception", "diff": ["-    public void testWrongFormatURI() throws Exception {", "+    public void testWrongFormatUri() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "655a3ac75aedfa3fcce1de69be6848a8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "commitAfterChange": "6125beffc437f970eae276b4a6542265c6547784", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDefault() throws Exception", "signatureAfterChange": "     public void testDefault() throws Exception", "diff": ["-            \"8: Wrong order for 'java.io.File' import.\",", "+            \"7: Wrong order for 'javax.swing.JComponent' import.\",", "+            \"9: Wrong order for 'java.io.File' import.\",", "+            \"11: Wrong order for 'java.io.IOException' import.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "657a471ff980fae5a08e1dc97cdf0dac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NestedTryDepthCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void visitLiteralTry(DetailAST aTry)", "signatureAfterChange": "     private void visitLiteralTry(DetailAST literalTry)", "diff": ["-    private void visitLiteralTry(DetailAST aTry)", "+    private void visitLiteralTry(DetailAST literalTry)", "-        nestIn(aTry, \"nested.try.depth\");", "+        nestIn(literalTry, \"nested.try.depth\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65a827c93cf40bea5d8e3ae37ef15328", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheckTest.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testLogIOExceptionFileNotFound() throws Exception", "signatureAfterChange": "      @Test     public void testLogIoExceptionFileNotFound() throws Exception", "diff": ["-    public void testLogIOExceptionFileNotFound() throws Exception {", "+    public void testLogIoExceptionFileNotFound() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65b8f837026e70f6e440931176f5ee14", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void leaveMethodDef()", "signatureAfterChange": "     private void leaveMethodDef()", "diff": ["-        mContext = mContextStack.pop();", "+        context = contextStack.pop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65c65e115aaadb9b92336ae02448514c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public int getMaximum()", "signatureAfterChange": "     public int getMaximum()", "diff": ["-        return mMaximum;", "+        return maximum;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65ff141ccbea912c3913614c697b4f70", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean isMatchingClassName(String aClassName)", "signatureAfterChange": "     private boolean isMatchingClassName(String className)", "diff": ["-    private boolean isMatchingClassName(String aClassName)", "+    private boolean isMatchingClassName(String className)", "-        return getRegexp().matcher(aClassName).find();", "+        return getRegexp().matcher(className).find();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6622c7ac0c63f3fbfc21c6b6306c443e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java", "commitBeforeChange": "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2", "commitAfterChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void finish()", "signatureAfterChange": "     private void finish()", "diff": ["-                options.getReporter().log(0, \"regexp.minimum\",", "+                options.getReporter().log(0, REGEXP_MINIMUM,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "668fd0dd7dc4e5e2bf3f86c768c59454", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static Configuration loadConfiguration(InputSource configSource,             PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(InputSource configSource,             PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "diff": ["-        catch (final SAXParseException e) {", "+        catch (final SAXParseException ex) {", "-                    e.getMessage(), e.getLineNumber(), e.getColumnNumber());", "-            throw new CheckstyleException(message, e);", "+                    ex.getMessage(), ex.getLineNumber(), ex.getColumnNumber());", "+            throw new CheckstyleException(message, ex);", "-        catch (final ParserConfigurationException | IOException | SAXException e) {", "-            throw new CheckstyleException(UNABLE_TO_PARSE_EXCEPTION_PREFIX, e);", "+        catch (final ParserConfigurationException | IOException | SAXException ex) {", "+            throw new CheckstyleException(UNABLE_TO_PARSE_EXCEPTION_PREFIX, ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66a18660d98d6875a28d0bb1f6078d6b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheck.java", "commitBeforeChange": "b02d9661f87fa5207986958885ddf10ddc512ad6", "commitAfterChange": "e936c4c6fae73ec4c53aa8f2f9db302d064e1b8e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          @Override         public Object put(Object key, Object value)", "signatureAfterChange": "          @Override         public Object put(Object key, Object value)", "diff": ["-            synchronized (lock) {", "-                final Object oldValue = super.put(key, value);", "-                if (oldValue != null && key instanceof String) {", "-                    final String keyString = (String) key;", "-                    duplicatedStrings.add(keyString);", "-                }", "-                return oldValue;", "+            final Object oldValue = super.put(key, value);", "+            if (oldValue != null && key instanceof String) {", "+                final String keyString = (String) key;", "+                duplicatedStrings.add(keyString);", "+            return oldValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66ba55ad37290f2d5789d735b5f8761d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "e3c3cdcea35ecb417fd95ea320d3a78031f5bb59", "commitAfterChange": "3188792cadc0707ff611a6762231746c13f3b923", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     void verifyWSAround(int aLineNo, int aColNo, String aText);", "signatureAfterChange": "     void verifyWSAroundEnd(int aLineNo, int aColNo, String aText);", "diff": ["+     */", "+    void verifyWSAroundEnd(int aLineNo, int aColNo, String aText);", "-    void verifyWSAround(int aLineNo, int aColNo, String aText);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6712e4b8442b69046b50d28764f297cd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean containsJavadocTag(final TextBlock aJavadoc)", "signatureAfterChange": "     private boolean containsJavadocTag(final TextBlock javadoc)", "diff": ["-    private boolean containsJavadocTag(final TextBlock aJavadoc)", "+    private boolean containsJavadocTag(final TextBlock javadoc)", "-        if (aJavadoc == null) {", "+        if (javadoc == null) {", "-        final String[] lines = aJavadoc.getText();", "+        final String[] lines = javadoc.getText();", "-        int currentLine = aJavadoc.getStartLineNo() - 1;", "+        int currentLine = javadoc.getStartLineNo() - 1;", "-                for (int remIndex = i + 1;", "-                    remIndex < lines.length; remIndex++)", "+                for (int reindex = i + 1;", "+                    reindex < lines.length; reindex++)", "-                        .matcher(lines[remIndex]);", "+                        .matcher(lines[reindex]);", "-                        remIndex = lines.length;", "+                        reindex = lines.length;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6717f869033428e7ea85aa787639f29f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractSuperCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (isOverridingMethod(aAST)) {", "-            mMethodStack.add(new MethodNode(aAST));", "+        if (isOverridingMethod(ast)) {", "+            methodStack.add(new MethodNode(ast));", "-        else if (isSuperCall(aAST)) {", "-            final MethodNode methodNode = mMethodStack.getLast();", "+        else if (isSuperCall(ast)) {", "+            final MethodNode methodNode = methodStack.getLast();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "672bf6a47c27a277f44a3cd8c9bfc73f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setIgnoreModifier(boolean aValue)", "signatureAfterChange": "     public void setIgnoreModifier(boolean value)", "diff": ["-    public void setIgnoreModifier(boolean aValue)", "+    public void setIgnoreModifier(boolean value)", "-        mIgnoreModifier = aValue;", "+        ignoreModifier = value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "673b5725d66ce82d373c4cfb44ddd2da", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "3d8c8ae213afba764acb9758dc89d8a613f4ea66", "commitAfterChange": "dc764f3b6ad475854cd0d22655db3f96e7eb7ed3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     void verifyVariable(MyVariable aVar)", "signatureAfterChange": "     void verifyVariable(MyVariable aVar)", "diff": ["-            getJavadocBefore(aVar.getLineNo() - 1) == null)", "+            getJavadocBefore(aVar.getStartLineNo() - 1) == null)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "676fd11c0dd7de9f509bd1b3b3755ab4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "904de34fcd984edce3d6042a5a17e2a969254588", "commitAfterChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void checkMethodCall(DetailAST methodCall)", "signatureAfterChange": "     private void checkMethodCall(DetailAST methodCall)", "diff": ["-                && calledOnStringField(objCalledOn)) {", "+                && isCalledOnStringField(objCalledOn)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6777c07c9e17beedb1386da37ceb434f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Check.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public final void setFileContents(FileContents aContents)", "signatureAfterChange": "     public final void setFileContents(FileContents contents)", "diff": ["-    public final void setFileContents(FileContents aContents)", "+    public final void setFileContents(FileContents contents)", "-        mFileContents = aContents;", "+        fileContents = contents;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "677dc43daa0762e8a127901cfd508e35", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "78a5fd3494e8f3fe6e5edd0925f46b43583451fe", "commitAfterChange": "3cd6646941eca3da7d3b9a221c88e4c1d214876e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public String[] getLines()", "signatureAfterChange": "     public String[] getLines()", "diff": ["-        return mLines.clone();", "+        return mText.toLinesArray();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6782ab44120ec54b829354c6708acbbc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "2a77329c4f45c42b1e9f49773522349193f83338", "commitAfterChange": "a75c64efe39a5c4391faf8ec2fba07ae76411a0e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private static ParseTree getNextSibling(ParseTree node)", "signatureAfterChange": "     private static ParseTree getNextSibling(ParseTree node)", "diff": ["-            int i = 0;", "+            int index = 0;", "-                final ParseTree currentNode = parent.getChild(i);", "+                final ParseTree currentNode = parent.getChild(index);", "-                    if (i != childCount - 1) {", "-                        nextSibling = parent.getChild(i + 1);", "+                    if (index != childCount - 1) {", "+                        nextSibling = parent.getChild(index + 1);", "-                i++;", "+                index++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67b4f66593a79203726bdfbb91cdbb18", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void checkLCurly()", "signatureAfterChange": "     protected void checkLCurly()", "diff": ["-        if (curlyLevel().isAcceptable(lcurlyPos) || !isOnStartOfLine(lcurly)) {", "+        if (curlyIndent().isAcceptable(lcurlyPos) || !isOnStartOfLine(lcurly)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67cdf15c0ec737c02bad28ae914eb064", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "777a4e04d85611a1e857ea92cdb6f155c21c28a0", "commitAfterChange": "aaf39002ac7fa00b95f4719beca058f6f7445574", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 29, "signatureBeforeChange": "      @Test     public void testExistingTargetFilePlainOutputToFileWithoutRwPermissions()             throws Exception", "signatureAfterChange": "      @Test     public void testExistingTargetFilePlainOutputToFileWithoutReadAndRwPermissions()             throws Exception", "diff": ["+", "+    @Test", "+    public void testExistingTargetFilePlainOutputToFileWithoutReadAndRwPermissions()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6835c36cde16d32e8fb4acd5fc8a4426", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private boolean isExtendedClassNamedAsException(DetailAST aAST)", "signatureAfterChange": "     private boolean isExtendedClassNamedAsException(DetailAST ast)", "diff": ["-    private boolean isExtendedClassNamedAsException(DetailAST aAST)", "+    private boolean isExtendedClassNamedAsException(DetailAST ast)", "-        final DetailAST extendsClause = aAST.findFirstToken(TokenTypes.EXTENDS_CLAUSE);", "+        final DetailAST extendsClause = ast.findFirstToken(TokenTypes.EXTENDS_CLAUSE);", "-                return extendedClassName.matches(mExtendedClassNameFormat);", "+                return extendedClassName.matches(extendedClassNameFormat);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6841c15b97ab7173fe3bd8936eb6298e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/PkgControlTest.java", "commitBeforeChange": "fbfe160ca83f91f9093e2c8122709f1163324edf", "commitAfterChange": "ee68e92168e132ff16622a2593dcb5128ad024e6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      protected void setUp() throws Exception", "signatureAfterChange": "      @Before     public void setUp() throws Exception", "diff": ["-    protected void setUp() throws Exception", "+    @Before", "+    public void setUp() throws Exception", "-        super.setUp();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "685c87af69fc89965ff2b61d04d929ef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "a210010f0d98c85de06228ffc6c605c57df7340f", "commitAfterChange": "e2b4e687d7b8f9d6d5e1346d874b90e4567aff81", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     private void checkComment(DetailAST ast, TextBlock comment)", "signatureAfterChange": "     private void checkComment(DetailAST ast, TextBlock comment)", "diff": ["-            if (CheckUtils.isVoidMethod(ast)) {", "+            if (CheckUtils.isNonVoidMethod(ast)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "687ef6bf97f6c859ee8d369aabc74300", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/StringArrayReader.java", "commitBeforeChange": "49d100f325752b15bbee56bfcf99dac223144639", "commitAfterChange": "685d1101524393e0e1edd37595512c2459f04ebe", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public int read() throws IOException", "signatureAfterChange": "     public int read() throws IOException", "diff": ["-            && (mStringIdx < mUnderlyingArray[mArrayIdx].length()))", "+            && (mStringIdx < mLenghtArray[mArrayIdx]))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68a4d834f9433fad6b85d0b0e1167bc1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultContext.java", "commitBeforeChange": "17c08660fa40c844057c33e2de04c67af41393b0", "commitAfterChange": "0989b5c3954e46b156bf5d2344327f650ddafc8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Collection<String> getAttributeNames()", "signatureAfterChange": "     public ImmutableCollection<String> getAttributeNames()", "diff": ["-    public Collection<String> getAttributeNames()", "+    public ImmutableCollection<String> getAttributeNames()", "-        return Collections.unmodifiableCollection(mEntries.keySet());", "+        return ImmutableList.copyOf(mEntries.keySet());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68f213cebbf354a70dc55da329811601", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "commitAfterChange": "26513d52336c42432ee21565b253297ba4174530", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void logWarningMessage(DetailAST currentNode, int currentIndent)", "signatureAfterChange": "     private void logWarningMessage(DetailAST currentNode, int currentIndent)", "diff": ["-                        \"indentation.error\", currentNode.getText(),", "+                        MSG_INDENTATION_ERROR, currentNode.getText(),", "-                        \"indentation.error\", currentNode.getText(),", "+                        MSG_INDENTATION_ERROR, currentNode.getText(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "693510ecf9b55c6a22c1d80d4a64102b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ObjectBlockHandler.java", "commitBeforeChange": "547fb51b1db4533e6e1a03aa528a2fed5de828e9", "commitAfterChange": "01b9628d3451c5c999facc0d1b88aeb085cceb6c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Override     protected void checkRCurly()", "signatureAfterChange": "      @Override     protected void checkRCurly()", "diff": ["-        if (rcurly != null && !level.accept(rcurlyPos)", "+        if (!level.accept(rcurlyPos)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6935b320b16aeac6b1e47aebbe2e7387", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "e90dbc731d23b31eaf01461041bdc67d9b999224", "commitAfterChange": "51848478fd296d6d88c31cdf33f4d98197f5d036", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setOffCommentFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setOffCommentFormat(String aFormat)         throws ConversionException", "diff": ["-            mOffCommentFormat = aFormat;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69596a7707c8c3bdba2035dbce662f5d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PropertiesExpander.java", "commitBeforeChange": "03d9719f476d6a44097e0179857ea17d5561f2a3", "commitAfterChange": "c60f4cb6f208cbc3e09b350ad3dcd1054012fac6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public String resolve(String aPropertyName)         throws CheckstyleException", "signatureAfterChange": "     public String resolve(String aPropertyName)         throws CheckstyleException", "diff": ["-        if (mProperties == null || !mProperties.containsKey(aPropertyName)) {", "-            throw new CheckstyleException(\"Property ${\"", "-                + aPropertyName + \"} has not been set\");", "+        if (!mProperties.containsKey(aPropertyName)) {", "+            throw new CheckstyleException(", "+                \"Property ${\" + aPropertyName + \"} has not been set\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69688129152766726652a4912125ab15", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "0ce872d7cc6b0b1564655b9e3119f72911f4dddd", "commitAfterChange": "ea9ff3965d9c657b5b7bd2d969e075f430635c47", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "     boolean alreadyChecked(String fileName, long timestamp)", "signatureAfterChange": "     boolean inCache(String fileName, long timestamp)", "diff": ["-    boolean alreadyChecked(String fileName, long timestamp) {", "+    boolean inCache(String fileName, long timestamp) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6997da2097f2d8fc2c23990d38b17cb3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setFailOnViolation(boolean aFail)", "signatureAfterChange": "     public void setFailOnViolation(boolean fail)", "diff": ["-    /** @param aFail whether to fail if a violation is found */", "-    public void setFailOnViolation(boolean aFail)", "+    /** @param fail whether to fail if a violation is found */", "+    public void setFailOnViolation(boolean fail)", "-        mFailOnViolation = aFail;", "+        failOnViolation = fail;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69f0308b1ef6848ab6f51380131b8ef4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java", "commitBeforeChange": "f0d637e28c17dd33cf4031a1ab499abf4c1bbb03", "commitAfterChange": "59fa63c67d44757974a88e8210d7263497155272", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAcceptableTokens()         throws Exception", "signatureAfterChange": "      @Test     public void testAcceptableTokens()         throws Exception", "diff": ["-            Assert.fail();", "+            fail();", "-            Assert.assertTrue(errorMsg.contains(\"cannot initialize module\"", "+            assertTrue(errorMsg.contains(\"cannot initialize module\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69f11c113e5527798389bbdde551319d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setAllowEmptyMethods(boolean aAllow)", "signatureAfterChange": "     public void setAllowEmptyMethods(boolean allow)", "diff": ["-    public void setAllowEmptyMethods(boolean aAllow)", "+    public void setAllowEmptyMethods(boolean allow)", "-        mAllowEmptyMethods = aAllow;", "+        allowEmptyMethods = allow;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a032e7256019885f86ab3ea98fc2a06", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "03f2be49f7ad3fc9d0143782b020a169f28e50a9", "commitAfterChange": "0c2a64d9f02ab5b94bbf4213cb2978f7b459b6f5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private static String removeChecktylePrefixIfExests(String checkName)", "signatureAfterChange": "     private static String removeCheckstylePrefixIfExists(String checkName)", "diff": ["-    private static String removeChecktylePrefixIfExests(String checkName) {", "+    private static String removeCheckstylePrefixIfExists(String checkName) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a253977c8c4ed182170c30816523af6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private List<JavadocTag> getJavadocTags(TextBlock aCmt)", "signatureAfterChange": "     private List<JavadocTag> getJavadocTags(TextBlock cmt)", "diff": ["-    private List<JavadocTag> getJavadocTags(TextBlock aCmt)", "+    private List<JavadocTag> getJavadocTags(TextBlock cmt)", "-        final JavadocTags tags = JavadocUtils.getJavadocTags(aCmt,", "+        final JavadocTags tags = JavadocUtils.getJavadocTags(cmt,", "-        if (!mAllowUnknownTags) {", "+        if (!allowUnknownTags) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a3674bc06af56de071f88f10fea6ad6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractFormatCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public AbstractFormatCheck(String aDefaultFormat)         throws ConversionException", "signatureAfterChange": "     public AbstractFormatCheck(String defaultFormat)         throws ConversionException", "diff": ["-    public AbstractFormatCheck(String aDefaultFormat)", "+    public AbstractFormatCheck(String defaultFormat)", "-        this(aDefaultFormat, 0);", "+        this(defaultFormat, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a4c56e6a0e1dbb596609f6a0729bae4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void visitCatch(final DetailAST literalCatch)", "signatureAfterChange": "     private void visitCatch(final DetailAST catchClause)", "diff": ["-    private void visitCatch(final DetailAST literalCatch)", "+    private void visitCatch(final DetailAST catchClause)", "-        checkParam(literalCatch.findFirstToken(TokenTypes.PARAMETER_DEF));", "+        checkParam(catchClause.findFirstToken(TokenTypes.PARAMETER_DEF));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a6fa1b6b69aafbe63ffe96ff3f42a87", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/LineSeparatorOption.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     private LineSeparatorOption(String aSep)", "signatureAfterChange": "     private LineSeparatorOption(String sep)", "diff": ["-    private LineSeparatorOption(String aSep)", "+    private LineSeparatorOption(String sep)", "-        mLineSeparator = aSep;", "+        lineSeparator = sep;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a7c777ff8304b06fc7f6d62c09b1b1d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyCatchBlockCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean isVerifiable(DetailAST emptyCatchAst, String commentContent)", "signatureAfterChange": "     private boolean isVerifiable(DetailAST emptyCatchAst, String commentContent)", "diff": ["-        final String exceptionVariableName = getExceptionVariableName(emptyCatchAst);", "+        final String variableName = getExceptionVariableName(emptyCatchAst);", "-                .matcher(exceptionVariableName).find();", "+                .matcher(variableName).find();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a84fccd2e0de2e16f4b579e05b12812", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/CheckUtils.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static FullIdent createFullTypeNoArrays(DetailAST aTypeAST)", "signatureAfterChange": "     private static FullIdent createFullTypeNoArrays(DetailAST typeAST)", "diff": ["-    private static FullIdent createFullTypeNoArrays(DetailAST aTypeAST)", "+    private static FullIdent createFullTypeNoArrays(DetailAST typeAST)", "-        return FullIdent.createFullIdent(aTypeAST.getFirstChild());", "+        return FullIdent.createFullIdent(typeAST.getFirstChild());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a9a52ac281358db007056cab0cf1e50", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/LocalizedMessage.java", "commitBeforeChange": "495227c6086c83d4cb4547f7a3fe7ff8976853ea", "commitAfterChange": "20483ae032296610315fafb9a8774cfdd0e13857", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     String getMessage()", "signatureAfterChange": "     String getMessage()", "diff": ["-        final ResourceBundle bundle = ResourceBundle.getBundle(MESSAGE_BUNDLE);", "+        final ResourceBundle bundle =", "+            ResourceBundle.getBundle(MESSAGE_BUNDLE, sLocale, sLoader);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a9b1898cb49836ef1238f16a83f7a7e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "6eaab74faa08e2eed14ab2d547c559470add0034", "commitAfterChange": "9982fc546a7ec040ec7cc1449ea81fc321aa7c1b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void testNoJavadoc()         throws Exception", "signatureAfterChange": "      public void testNoJavadoc()         throws Exception", "diff": ["-        mConfig.setIgnoreJavadoc(true);", "+        mConfig.setJavadocScope(Scope.NOTHING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6aa306f8f94fd40648bec593480c6b01", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java", "commitBeforeChange": "ed12c276a8adde2ce44b9834b413560476110f0e", "commitAfterChange": "66d6361c27586d58ba478b0223e60c6f1c5aa7b4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "         public void setRowHeight(int rowHeight)", "signatureAfterChange": "         public void setRowHeight(int newRowHeight)", "diff": ["-        public void setRowHeight(int rowHeight)", "+        public void setRowHeight(int newRowHeight)", "-            if (rowHeight > 0) {", "-                super.setRowHeight(rowHeight);", "+            if (newRowHeight > 0) {", "+                super.setRowHeight(newRowHeight);", "-                        JTreeTable.this.getRowHeight() != rowHeight) {", "+                        JTreeTable.this.getRowHeight() != newRowHeight) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6aa581929c9eed5a88c5a8470452b1bf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "c4a7d06206d86f52665eae47af4db28dc59d93a3", "commitAfterChange": "c2ce485b481ba4bd26eb3ba2e3cc6c1850539e0c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      @Test     public void testLables() throws Exception", "signatureAfterChange": "      @Test     public void testLabels() throws Exception", "diff": ["-    public void testLables() throws Exception {", "+    public void testLabels() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6acfb88f436de9633dda7e92e0c2546d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected final void checkExpressionSubtree(         DetailAST tree,         IndentLevel level,         boolean firstLineMatches,         boolean allowNesting     )", "signatureAfterChange": "     protected final void checkExpressionSubtree(         DetailAST tree,         IndentLevel indentLevel,         boolean firstLineMatches,         boolean allowNesting     )", "diff": ["-        IndentLevel level,", "+        IndentLevel indentLevel,", "-        checkLinesIndent(subtreeLines, level, firstLineMatches, firstLine);", "+        checkLinesIndent(subtreeLines, indentLevel, firstLineMatches, firstLine);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6adff29d8f4f43d0d1a1171b6160bba6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TodoCommentCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setFormat(String aFormat)", "signatureAfterChange": "     public void setFormat(String format)", "diff": ["-    public void setFormat(String aFormat)", "+    public void setFormat(String format)", "-        mFormat = aFormat;", "-        mRegexp = Pattern.compile(aFormat);", "+        this.format = format;", "+        regexp = Pattern.compile(format);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6af8cd75e8189229eee1182fd94157fa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "commitBeforeChange": "6839ac4fd83dde7060c8f6f28e75aa3d6ff2456b", "commitAfterChange": "31f6765fdcf2233ca6c53730c2fc196576557f66", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (!isInContext(ast, ALLOWED_ASSIGMENT_CONTEXT)", "+        if (!isInContext(ast, ALLOWED_ASSIGNMENT_CONTEXT)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b54927209ad765ab87837ed6cd4d2ee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java", "commitBeforeChange": "19708f981163ccbe8e4247e5f1b91caef788953b", "commitAfterChange": "7f35e143a2472ecb49625cc841bd0482fe3dfeea", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "         public Component getTableCellRendererComponent(JTable table,                 Object value,                 boolean isSelected,                 boolean hasFocus,                 int row, int column)", "signatureAfterChange": "         public Component getTableCellRendererComponent(JTable table,                 Object value,                 boolean isSelected,                 boolean hasFocus,                 int row, int column)", "diff": ["-            if (isSelected)", "+            if (isSelected) {", "-            else", "+            } else {", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b7848b61189742137411f187918441a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "commitAfterChange": "6125beffc437f970eae276b4a6542265c6547784", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "         private SilentJava14Recognizer(GeneratedJava14Lexer aLexer)", "signatureAfterChange": "         public SilentJava15Recognizer(TokenStream aLexer)", "diff": ["-        private SilentJava14Recognizer(GeneratedJava14Lexer aLexer)", "+        public SilentJava15Recognizer(TokenStream aLexer)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b7c588f25a25b91e9df291cbcdad079", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "be6d271ac34efc3daed3dbb873ab8060723dd4f8", "commitAfterChange": "b06dd9801e56887f7da1bbc8b55233e0ff5f5115", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setAllowprotected(boolean aAllowed)", "signatureAfterChange": "     public void setAllowProtected(boolean aAllowed)", "diff": ["-    public void setAllowprotected(boolean aAllowed)", "+    public void setAllowProtected(boolean aAllowed)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b8e00ec0ce1009941435e7e14f3d612", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "feda6ebbfbe510a7572d403f581e8c5f78a6d987", "commitAfterChange": "59af65d194da001d34a48da91ba296e6c5d439cb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public boolean equals(Object o)", "signatureAfterChange": "     public boolean equals(Object aObject)", "diff": ["-    public boolean equals(Object o)", "+    public boolean equals(Object aObject)", "-        if (this == o) return true;", "-        if (!(o instanceof LocalizedMessage)) return false;", "+        if (this == aObject) {", "+            return true;", "+        }", "+        if (!(aObject instanceof LocalizedMessage)) {", "+            return false;", "+        }", "-        final LocalizedMessage localizedMessage = (LocalizedMessage) o;", "+        final LocalizedMessage localizedMessage = (LocalizedMessage) aObject;", "-        if (mColNo != localizedMessage.mColNo) return false;", "-        if (mLineNo != localizedMessage.mLineNo) return false;", "-        if (!mKey.equals(localizedMessage.mKey)) return false;", "+        if (mColNo != localizedMessage.mColNo) {", "+            return false;", "+        }", "+        if (mLineNo != localizedMessage.mLineNo) {", "+            return false;", "+        }", "+        if (!mKey.equals(localizedMessage.mKey)) {", "+            return false;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b9450d002723996b9a89c527671663c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AuditEvent.java", "commitBeforeChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "commitAfterChange": "abfc952fd0ed88f6246b1d969a8a980ea63f0bd6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public AuditEvent(Object src, String fileName, LocalizedMessage message)", "signatureAfterChange": "     public AuditEvent(Object src, String fileName, LocalizedMessage localizedMessage)", "diff": ["-    public AuditEvent(Object src, String fileName, LocalizedMessage message) {", "+    public AuditEvent(Object src, String fileName, LocalizedMessage localizedMessage) {", "-        this.message = message;", "+        this.localizedMessage = localizedMessage;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bcfab746a9c502a23b68fd1bab5b437", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Comment.java", "commitBeforeChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "commitAfterChange": "abfc952fd0ed88f6246b1d969a8a980ea63f0bd6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-        return \"Comment[\" + firstLine + \":\" + firstCol + \"-\"", "-            + lastLine + \":\" + lastCol + \"]\";", "+        return \"Comment[\" + startLineNo + \":\" + startColNo + \"-\"", "+            + endLineNo + \":\" + endColNo + \"]\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bd275645c82279ef9d5472442e08162", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForInitializerPadCheck.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                    log(semi.getLineNo(), before, \"ws.preceded\", \";\");", "+                    log(semi.getLineNo(), before, MSG_PRECEDED, \";\");", "-                    log(semi.getLineNo(), before, \"ws.notPreceded\", \";\");", "+                    log(semi.getLineNo(), before, MSG_NOT_PRECEDED, \";\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bed3898eb23b56b2b1d04550a341325", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/comments/CommentsTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCompareExpectedTreeWithInput_2() throws Exception", "signatureAfterChange": "      @Test     public void testCompareExpectedTreeWithInput2() throws Exception", "diff": ["-    public void testCompareExpectedTreeWithInput_2() throws Exception {", "+    public void testCompareExpectedTreeWithInput2() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c0bd37bc0a9c13f01a619bda7bb0a1e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/ParseTreeBuilder.java", "commitBeforeChange": "ff5cbc39c4882b3a3dcdbedcad9393e170148725", "commitAfterChange": "82f4a9852de874b4849a67f53f4e541d13db869b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static ParseTree treeHtmlTagsInParagraph()", "signatureAfterChange": "     public static ParseTree treeHtmlTagsInParagraph()", "diff": ["-        CommonToken rEvDw = new CommonToken(JavadocTokenTypes.NEWLINE, \"\\n\");", "+        CommonToken rEvDw = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        CommonToken vANOl = new CommonToken(JavadocTokenTypes.NEWLINE, \"\\n\");", "+        CommonToken vANOl = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        CommonToken WylwX = new CommonToken(JavadocTokenTypes.NEWLINE, \"\\n\");", "+        CommonToken WylwX = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        CommonToken ydCCN = new CommonToken(JavadocTokenTypes.NEWLINE, \"\\n\");", "+        CommonToken ydCCN = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        CommonToken esJKC = new CommonToken(JavadocTokenTypes.NEWLINE, \"\\n\");", "+        CommonToken esJKC = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c0d8bc66473da91d29ff72656651a10", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheck.java", "commitBeforeChange": "9df81b38a8207ee85a55644b2f7a4c8828433f4b", "commitAfterChange": "d5178f777a3e2a11203478779191b39cf719e466", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static boolean hasNodeAfter(DetailAST annotation)", "signatureAfterChange": "     private static boolean hasNodeAfter(DetailAST annotation)", "diff": ["-        return nextNode != null && annotationLineNo == nextNode.getLineNo();", "+        return annotationLineNo == nextNode.getLineNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c0ea4c873d9222cb7abaead83890e3b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean isExtraHtml(String aToken, FastStack<HtmlTag> aHtmlStack)", "signatureAfterChange": "     private boolean isExtraHtml(String token, FastStack<HtmlTag> htmlStack)", "diff": ["-    private boolean isExtraHtml(String aToken, FastStack<HtmlTag> aHtmlStack)", "+    private boolean isExtraHtml(String token, FastStack<HtmlTag> htmlStack)", "-        for (final HtmlTag td : aHtmlStack) {", "+        for (final HtmlTag td : htmlStack) {", "-            if (aToken.equalsIgnoreCase(td.getId())) {", "+            if (token.equalsIgnoreCase(td.getId())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c3d6863ec25cd535eb56ba8056b5bc6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void setLocaleCountry(String aLocaleCountry)", "signatureAfterChange": "     public void setLocaleCountry(String localeCountry)", "diff": ["-    /** @param aLocaleCountry the country to report messages  **/", "-    public void setLocaleCountry(String aLocaleCountry)", "+    /** @param localeCountry the country to report messages  **/", "+    public void setLocaleCountry(String localeCountry)", "-        mLocaleCountry = aLocaleCountry;", "+        this.localeCountry = localeCountry;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c513ce7d82064d355ecd228255270ac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Utils.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public static String getTokenName(int iD)", "signatureAfterChange": "     public static String getTokenName(int iD)", "diff": ["-            throw new IllegalArgumentException(\"given id \" + iD);", "+            throw new IllegalArgumentException(TOKEN_ID_EXCEPTION_PREFIX + iD);", "-            throw new IllegalArgumentException(\"given id \" + iD);", "+            throw new IllegalArgumentException(TOKEN_ID_EXCEPTION_PREFIX + iD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c5db83e584b947e407a4ac9eed60e3e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private Object createObject(String aClassName)         throws CheckstyleException", "signatureAfterChange": "     private Object createObject(String className)         throws CheckstyleException", "diff": ["-    private Object createObject(String aClassName)", "+    private Object createObject(String className)", "-            final Class<?> clazz = Class.forName(aClassName, true,", "-                    mModuleClassLoader);", "+            final Class<?> clazz = Class.forName(className, true,", "+                    moduleClassLoader);", "-                \"Unable to find class for \" + aClassName, e);", "+                \"Unable to find class for \" + className, e);", "-                \"Unable to instantiate \" + aClassName, e);", "+                \"Unable to instantiate \" + className, e);", "-                \"Unable to instantiate \" + aClassName, e);", "+                \"Unable to instantiate \" + className, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c5fefc39a8239bcb7f3f2c99946249c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "commitAfterChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                collectReferecesFromJavadoc(ast);", "+                collectReferencesFromJavadoc(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c694387b1a3ebbd2c00adb17afc6aba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java", "commitBeforeChange": "3c7c3cbe88a2bec0962702305db4f2b05117501c", "commitAfterChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-            && desc.hasPrivateCtor()", "-            && !desc.hasNonPrivateCtor())", "+            && desc.isWithPrivateCtor()", "+            && !desc.isWithNonPrivateCtor())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c6ea45f142a703479a94bbe45afb414", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck.java", "commitBeforeChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "commitAfterChange": "29027109bf962f47b6a6000fdca69b5679ce4b43", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setHeader(String aHeader)", "signatureAfterChange": "     public void setHeader(String header)", "diff": ["-    public void setHeader(String aHeader)", "+    public void setHeader(String header)", "-        if ((aHeader == null) || (aHeader.trim().length() == 0)) {", "+        if ((header == null) || (header.trim().length() == 0)) {", "-        final String headerExpandedNewLines = aHeader.replaceAll(\"\\\\\\\\n\", \"\\n\");", "+        final String headerExpandedNewLines = header.replaceAll(\"\\\\\\\\n\", \"\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c8055f00774bc48515a784da9d28679", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-    public void beginTree(DetailAST aRootAST)", "+    public void beginTree(DetailAST rootAST)", "-        mCurrentFrame = new FieldFrame(null, true);", "+        currentFrame = new FieldFrame(null, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cda14fd95f3c957283c0efc907eae9e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FastStack.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public E peek(int aIndex)", "signatureAfterChange": "     public E peek(int index)", "diff": ["-    public E peek(int aIndex)", "+    public E peek(int index)", "-        if ((aIndex < 0) || (aIndex >= mEntries.size())) {", "+        if ((index < 0) || (index >= entries.size())) {", "-        return mEntries.get(aIndex);", "+        return entries.get(index);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d6f702427d57b33e86a4b402c9e921c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PackageObjectFactoryTest.java", "commitBeforeChange": "8f86620e72849120dc5fba45c3cc54ed38e24447", "commitAfterChange": "d345f3beb27f3d8e3fde06f7e2c7612ddf691b95", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testMakeObectFromList()         throws CheckstyleException", "signatureAfterChange": "      @Test     public void testMakeObjectFromList()         throws CheckstyleException", "diff": ["-    public void testMakeObectFromList()", "+    public void testMakeObjectFromList()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d70e7029c015f663d3c9980dbda0a57", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java", "commitBeforeChange": "067896807847df81ba6e65195e4f39069dc3aea7", "commitAfterChange": "bc0bf95daedb6f0e658187d6e44410a60f46dbe2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic String getFilePath(String aFileName)", "signatureAfterChange": "  \tpublic String getFilePath(String aFileName)", "diff": ["-\t\tString absoluteRootPath = ROOT.getAbsolutePath();", "+\t\tString absoluteRootPath = root.getAbsolutePath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d714085d60401a9f81d2d1d99d9c21a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java", "commitBeforeChange": "bf529ef600fa9ef2034d0412c198b2121f2b94f2", "commitAfterChange": "ce196814d857a4244a80c51d5151cc35e90b6749", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static JavadocTags getJavadocTags(TextBlock cmt,             JavadocTagType tagType)", "signatureAfterChange": "     public static JavadocTags getJavadocTags(TextBlock textBlock,             JavadocTagType tagType)", "diff": ["-    public static JavadocTags getJavadocTags(TextBlock cmt,", "+    public static JavadocTags getJavadocTags(TextBlock textBlock,", "-        final String[] text = cmt.getText();", "+        final String[] text = textBlock.getText();", "-                final int line = cmt.getStartLineNo() + i;", "+                final int line = textBlock.getStartLineNo() + i;", "-                    col += cmt.getStartColNo();", "+                    col += textBlock.getStartColNo();", "-                lookForInlineTags(cmt, i, tags, invalidTags);", "+                lookForInlineTags(textBlock, i, tags, invalidTags);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d71b4c03731f0d064a6dba5144373d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setAllowEmptyTypes(boolean aAllow)", "signatureAfterChange": "     public void setAllowEmptyTypes(boolean allow)", "diff": ["-    public void setAllowEmptyTypes(boolean aAllow)", "+    public void setAllowEmptyTypes(boolean allow)", "-        mAllowEmptyTypes = aAllow;", "+        allowEmptyTypes = allow;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d99ca6b352a7fae3e1b9a45b5b320cc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "         private boolean embeddedIn(String classOrEnumName)", "signatureAfterChange": "         private boolean isEmbeddedIn(String classOrEnumName)", "diff": ["-        private boolean embeddedIn(String classOrEnumName) {", "+        private boolean isEmbeddedIn(String classOrEnumName) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6db159bdbc10590c8e34f480a09b0ecf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "43fe1ad269809f293b375dc4d0a4313798bf2124", "commitAfterChange": "50559c68761e235f57e48cd2dc28928b417d7745", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected final int expandedTabsColumnNo(DetailAST aAst)", "signatureAfterChange": "     protected final int expandedTabsColumnNo(DetailAST aAST)", "diff": ["-    protected final int expandedTabsColumnNo(DetailAST aAst)", "+    protected final int expandedTabsColumnNo(DetailAST aAST)", "-            mIndentCheck.getLines()[aAst.getLineNo() - 1];", "+            mIndentCheck.getLines()[aAST.getLineNo() - 1];", "-        return Utils.lengthExpandedTabs(line, aAst.getColumnNo(),", "+        return Utils.lengthExpandedTabs(line, aAST.getColumnNo(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dd4b6dc355767fbddea9ec9f0c51e82", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck.java", "commitBeforeChange": "f1cff12b20f8c89069d202ab0419ab8bd1d71db6", "commitAfterChange": "686d009cf4d21d0ace52b9e7dccc848e8b9ce91a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-                    \"name.invalidPattern\",", "+                    MSG_INVALID_PATTERN,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dda2e1e7b0bcf0d78d57c83d439f08f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "91aa6578321ceb08f4b0d715f994b7a9f4abe9d7", "commitAfterChange": "3430721be200cbe2acf55c3b3d52a528638123b3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void checkPropertyFileSets(Map propFiles)", "signatureAfterChange": "     private void checkPropertyFileSets(Map aPropFiles)", "diff": ["-    private void checkPropertyFileSets(Map propFiles)", "+    private void checkPropertyFileSets(Map aPropFiles)", "-        Set keySet = propFiles.keySet();", "+        Set keySet = aPropFiles.keySet();", "-            Set files = (Set) propFiles.get(baseName);", "+            Set files = (Set) aPropFiles.get(baseName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6de49be3661333d6135bbab511481748", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "30438ebdf9fd28a94613e2aaecde776d906349a7", "commitAfterChange": "5c9e55ae70af0456e1634211ccac54c40a92cfba", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void checkEmptyJavadoc(TextBlock comment)", "signatureAfterChange": "     private void checkEmptyJavadoc(TextBlock comment)", "diff": ["-        if (commentText.length() == 0) {", "+        if (commentText.isEmpty()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6df0e82a5253d02f3a147a0a753ecf9f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "717ba0311d40b3ea64b8cd64fc243bc823e0dd14", "commitAfterChange": "084809c3b9e0d039c818cc4d8c5e640ea9e26525", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private Class<?> resolveInnerClass(String name, String currentClass)             throws ClassNotFoundException", "signatureAfterChange": "     private Class<?> resolveInnerClass(String name, String currentClass)             throws ClassNotFoundException", "diff": ["-        if (!\"\".equals(currentClass)) {", "-            final String innerClass = (!\"\".equals(pkg) ? pkg + \".\" : \"\")", "+        if (!currentClass.isEmpty()) {", "+            final String innerClass = (!pkg.isEmpty() ? pkg + \".\" : \"\")"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6df102961290c280073e760ce331f5d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParseTreeTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public ParseTree parseJavadoc(String aBlockComment)         throws IOException", "signatureAfterChange": "      public ParseTree parseJavadoc(String aBlockComment)         throws IOException", "diff": ["-        lexer.addErrorListener(mErrorListener);", "+        lexer.addErrorListener(errorListener);", "-        parser.addErrorListener(mErrorListener);", "+        parser.addErrorListener(errorListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e53537fe569c5bc8a71d6565a039abc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheckTest.java", "commitBeforeChange": "ea963bb721aafd9584242cedf2781f0294f2b18d", "commitAfterChange": "5d6ae80b84896f831695b51050943e7b76c20ea6", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "      @Test(expected = IllegalStateException.class)     public void testVisitTokenSwitchReflection() throws Exception", "signatureAfterChange": "      @Test(expected = IllegalStateException.class)     public void testVisitTokenSwitchReflection() throws Exception", "diff": ["-                ImportOrderOption C = PowerMockito.mock(ImportOrderOption.class);", "-                Whitebox.setInternalState(C, \"name\", \"NEW_OPTION_FOR_UT\");", "-                Whitebox.setInternalState(C, \"ordinal\", 5);", "-                return C;", "+                ImportOrderOption importOrderOption = PowerMockito.mock(ImportOrderOption.class);", "+                Whitebox.setInternalState(importOrderOption, \"name\", \"NEW_OPTION_FOR_UT\");", "+                Whitebox.setInternalState(importOrderOption, \"ordinal\", 5);", "+                return importOrderOption;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e5f60a365246b880abfc8e678fc9b20", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java", "commitBeforeChange": "31b643724b87eaaf2d83f63116c8b313f06aa688", "commitAfterChange": "585f7c20a1e9e3ca4a04ffedf4e1cedc449acd97", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void checkTag(             int aLineNo,             String[] aCmt,             String aTag,             Pattern aTagRE,             Pattern aFormatRE,             String aFormat)", "signatureAfterChange": "     private void checkTag(             int aLineNo,             String[] aComment,             String aTag,             Pattern aTagRE,             Pattern aFormatRE,             String aFormat)", "diff": ["-            String[] aCmt,", "+            String[] aComment,", "-        for (int i = 0; i < aCmt.length; i++) {", "-            final String s = aCmt[i];", "+        for (int i = 0; i < aComment.length; i++) {", "+            final String s = aComment[i];", "-                    log(aLineNo + i - aCmt.length, \"type.tagFormat\", aTag,", "+                    log(aLineNo + i - aComment.length, \"type.tagFormat\", aTag,", "-                    logTag(aLineNo + i - aCmt.length, aTag, content);", "+                    logTag(aLineNo + i - aComment.length, aTag, content);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e61d5c8d300e35096b7b36d1a258beb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "be6d271ac34efc3daed3dbb873ab8060723dd4f8", "commitAfterChange": "b06dd9801e56887f7da1bbc8b55233e0ff5f5115", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setMemberpattern(String aPat)", "signatureAfterChange": "     public void setMemberPattern(String aPat)", "diff": ["-    public void setMemberpattern(String aPat)", "+    public void setMemberPattern(String aPat)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e88de4d1ab1ee90489164ffadec078b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/XMLLoggerTest.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void verifyLines(String[] aExpectedLines)         throws IOException", "signatureAfterChange": "     private void verifyLines(String[] expectedLines)         throws IOException", "diff": ["-    private void verifyLines(String[] aExpectedLines)", "+    private void verifyLines(String[] expectedLines)", "-        assertEquals(\"length.\", aExpectedLines.length + 3, lines.length);", "+        assertEquals(\"length.\", expectedLines.length + 3, lines.length);", "-        for (int i = 0; i < aExpectedLines.length; i++) {", "-            assertEquals(\"line \" + i + \".\", aExpectedLines[i], lines[i + 2]);", "+        for (int i = 0; i < expectedLines.length; i++) {", "+            assertEquals(\"line \" + i + \".\", expectedLines[i], lines[i + 2]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e8945fb4dd5541a7027812bd53efdde", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "0382b7907b54e95408344863915a847dabc37f12", "commitAfterChange": "eb5896a4a1d66552f5100046413f15d62b485b62", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public ExpressionHandler getHandler(IndentationCheck indentCheck,         DetailAST ast, ExpressionHandler parent)", "signatureAfterChange": "     public AbstractExpressionHandler getHandler(IndentationCheck indentCheck,         DetailAST ast, AbstractExpressionHandler parent)", "diff": ["-    public ExpressionHandler getHandler(IndentationCheck indentCheck,", "-        DetailAST ast, ExpressionHandler parent) {", "-        final ExpressionHandler handler =", "+    public AbstractExpressionHandler getHandler(IndentationCheck indentCheck,", "+        DetailAST ast, AbstractExpressionHandler parent) {", "+        final AbstractExpressionHandler handler =", "-        ExpressionHandler expHandler = null;", "+        AbstractExpressionHandler expHandler = null;", "-                expHandler = (ExpressionHandler) handlerCtor.newInstance(", "+                expHandler = (AbstractExpressionHandler) handlerCtor.newInstance("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e94440662969c6e8c1f5baf01cd18d8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "8c80de169203a31d3ffc2368712a34a50d783165", "commitAfterChange": "850590186419416b1c02eba137fc6ec042de7f8b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     void verifyOpEnd(int aLineNo, int aColNo, String aText)", "signatureAfterChange": "     void verifyOpEnd(int aLineNo, int aColNo, String aText)", "diff": ["-        verifyOpBegin(aLineNo, aColNo - aText.length(), aText);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ec5c9be9625e8381f4fff03070670a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void validateEol(DetailAST brace, String braceLine)", "signatureAfterChange": "     private void validateEol(DetailAST brace, String braceLine)", "diff": ["-            log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);", "+            log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);", "-            log(brace, MSG_KEY_LINE_BREAK_AFTER, \"{\", brace.getColumnNo() + 1);", "+            log(brace, MSG_KEY_LINE_BREAK_AFTER, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ece027d6b1511857fe59e8e79792b91", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static boolean whitespaceBetween(         int aFromIndex, int aToIndex, String aLine)", "signatureAfterChange": "     private static boolean whitespaceBetween(         int froindex, int toIndex, String line)", "diff": ["-        int aFromIndex, int aToIndex, String aLine)", "+        int froindex, int toIndex, String line)", "-        for (int i = aFromIndex; i < aToIndex; i++) {", "-            if (!Character.isWhitespace(aLine.charAt(i))) {", "+        for (int i = froindex; i < toIndex; i++) {", "+            if (!Character.isWhitespace(line.charAt(i))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ef8af790ef3ca0b7a559e1e54d079f0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CaseHandler.java", "commitBeforeChange": "afb775876c7ee015480f17cdcb53c6add4125a02", "commitAfterChange": "46d57c9ca5c93972a22cd797793d6b21c820f444", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void checkCase()", "signatureAfterChange": "     private void checkCase()", "diff": ["-        checkChildren(getMainAst(), mCaseChildren, getLevel(), true, false);", "+        checkChildren(getMainAst(), CASE_CHILDREN, getLevel(), true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f07aa96d4665c754dbfe2ab13ae64df", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private static Checker createChecker(Configuration aConfig,                                          AuditListener aNosy)", "signatureAfterChange": "     private static Checker createChecker(Configuration config,                                          AuditListener nosy)", "diff": ["-    private static Checker createChecker(Configuration aConfig,", "-                                         AuditListener aNosy)", "+    private static Checker createChecker(Configuration config,", "+                                         AuditListener nosy)", "-            c.configure(aConfig);", "-            c.addListener(aNosy);", "+            c.configure(config);", "+            c.addListener(nosy);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f3b39ac41227bb9be43783f28c3bf81", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setAllowEmptyLoops(boolean aAllow)", "signatureAfterChange": "     public void setAllowEmptyLoops(boolean allow)", "diff": ["-    public void setAllowEmptyLoops(boolean aAllow)", "+    public void setAllowEmptyLoops(boolean allow)", "-        mAllowEmptyLoops = aAllow;", "+        allowEmptyLoops = allow;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f4b1bbe1c0491c605e03d4ffea0a3b2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setMinLineCount(int aValue)", "signatureAfterChange": "     public void setMinLineCount(int value)", "diff": ["-    public void setMinLineCount(int aValue)", "+    public void setMinLineCount(int value)", "-        mMinLineCount = aValue;", "+        minLineCount = value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f811bf4f1efa48a33280b129250cd8b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "contrib/bcel/src/checkstyle/com/puppycrawl/tools/checkstyle/bcel/AbstractCheckVisitor.java", "commitBeforeChange": "65603924fdf47c194fc2ef9e0bc60bfc81ee4166", "commitAfterChange": "2707ab4393bd5a585f1f794c43515b8a1b900078", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public final void setMessages(LocalizedMessages aMessages)", "signatureAfterChange": "     public final void setMessageMap(HashMap aMessageMap)", "diff": ["-    public final void setMessages(LocalizedMessages aMessages)", "+    public final void setMessageMap(HashMap aMessageMap)", "-        mMessages = aMessages;", "+        mMessageMap = aMessageMap;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f8c00be39e6e0be87525a86079b7f38", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "e1613910f30cc63de1393ed897aa766932e1d973", "commitAfterChange": "e56f3d21ee1a0e8c0eced70ec7990fb03dcb3215", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected boolean isMissingJavadocAllowed(final DetailAST aAST)", "signatureAfterChange": "     protected boolean isMissingJavadocAllowed(final DetailAST aAST)", "diff": ["-        return mAllowMissingJavadoc || isOverrideMethod(aAST)", "+        return mAllowMissingJavadoc"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6faff0641abda8bd1dc5c3507ec39b0c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractAccessControlNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public boolean getApplyToPrivate()", "signatureAfterChange": "     public boolean getApplyToPrivate()", "diff": ["-        return mApplyToPrivate;", "+        return applyToPrivate;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fb51a9b6e39e2595043281ce3cd2a14", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "commitAfterChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private boolean matchesStandartImportGroup(boolean isStatic,         String currentImport, String currentGroup)", "signatureAfterChange": "     private boolean matchesStandardImportGroup(boolean isStatic,         String currentImport, String currentGroup)", "diff": ["-    private boolean matchesStandartImportGroup(boolean isStatic,", "+    private boolean matchesStandardImportGroup(boolean isStatic,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fc41622587f4046043f64d90f0b3a52", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "f24c8ee834e006c406c0538dbfccc2fe6c07279c", "commitAfterChange": "4f6596703fa79f08617a41f53e24aff32821a2c6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Checker(Configuration aConfig)         throws RESyntaxException, IOException,         ParserConfigurationException, SAXException,         ClassNotFoundException, InstantiationException,         IllegalAccessException, InvocationTargetException,         NoSuchMethodException", "signatureAfterChange": "     public Checker(Configuration aConfig)         throws RESyntaxException, IOException,         ParserConfigurationException, SAXException,         ClassNotFoundException, InstantiationException,         IllegalAccessException, InvocationTargetException,         NoSuchMethodException", "diff": ["-        mConfig.loadFiles();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ffa4997b7a5289727c5cf95cc485528", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     LineText[] getMessages()", "signatureAfterChange": "     LocalizedMessage[] getMessages()", "diff": ["-    LineText[] getMessages()", "+    LocalizedMessage[] getMessages()", "-        return (LineText[]) mMessages.toArray(new LineText[mMessages.size()]);", "+        return (LocalizedMessage[])", "+            mMessages.toArray(new LocalizedMessage[mMessages.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7022a011e261c569f0460f37a483292a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "f88f22e0ab14a7af59e94c2886d04d39a4cb7616", "commitAfterChange": "35deee1297a25ab55cdeb9ea4abc53d7fbf287f4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Deprecated     public void setMaxLineLength(int maxLineLength)", "signatureAfterChange": "     @Deprecated     public void setMaxLineLength(int maxLineLength)", "diff": ["-        this.maxLineLength = maxLineLength;", "+        // do nothing, option is deprecated"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "702a5a4bd8574696086875ed599e0856", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineSet.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void addLineAndCol(int aLineNum, int aCol)", "signatureAfterChange": "     public void addLineAndCol(int lineNum, int col)", "diff": ["-    public void addLineAndCol(int aLineNum, int aCol)", "+    public void addLineAndCol(int lineNum, int col)", "-        mLines.put(aLineNum, aCol);", "+        lines.put(lineNum, col);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70759f8d7e21fece7874e2d3ec19d30d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-    public void finishTree(DetailAST aRootAST)", "+    public void finishTree(DetailAST rootAST)", "-        final Counter counter = mCounters.pop();", "+        final Counter counter = counters.pop();", "-        if (count > mFileMax) {", "-            log(aRootAST.getLineNo(), aRootAST.getColumnNo(), \"ncss.file\",", "-                    count, mFileMax);", "+        if (count > fileMax) {", "+            log(rootAST.getLineNo(), rootAST.getColumnNo(), \"ncss.file\",", "+                    count, fileMax);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70c7c926c6d8d2eb6873a635695ce4cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "fdc564f6b276225d86a4ab7281a6a91e42f779f4", "commitAfterChange": "49eb0e934ee82cf33c6643a4a15eb74ad471a6a9", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 62, "signatureBeforeChange": "     private void loadHeaderFile()         throws FileNotFoundException, IOException", "signatureAfterChange": "     private void loadHeaderFile()         throws FileNotFoundException, IOException", "diff": ["-            new LineNumberReader(new FileReader(getAbsoluteFilename(fname)));", "+            new LineNumberReader(new FileReader(fname));", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "710c0f1c0fb3afc654eaca15e301d886", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setValidateThrows(boolean aValue)", "signatureAfterChange": "     public void setValidateThrows(boolean value)", "diff": ["-    public void setValidateThrows(boolean aValue)", "+    public void setValidateThrows(boolean value)", "-        mValidateThrows = aValue;", "+        validateThrows = value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7118894c38a5e108512ab2b23383c88b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java", "commitBeforeChange": "43fe1ad269809f293b375dc4d0a4313798bf2124", "commitAfterChange": "50559c68761e235f57e48cd2dc28928b417d7745", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public MethodCallHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "signatureAfterChange": "     public MethodCallHandler(IndentationCheck aIndentCheck,         DetailAST aAST, ExpressionHandler aParent)", "diff": ["-        DetailAST aAst, ExpressionHandler aParent)", "+        DetailAST aAST, ExpressionHandler aParent)", "-            aAst.getType() == TokenTypes.CTOR_CALL", "-                ? \"ctor call\" : \"method call\",", "-            aAst,", "+            aAST.getType() == TokenTypes.METHOD_CALL", "+                ? \"method call\" : \"ctor call\",", "+            aAST,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71227904da7d688e0426bb715a14587e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "      @Test     public void testLoadConfiguration_WrongURL() throws CheckstyleException", "signatureAfterChange": "      @Test     public void testLoadConfigurationWrongURL() throws CheckstyleException", "diff": ["-    public void testLoadConfiguration_WrongURL() throws CheckstyleException {", "+    public void testLoadConfigurationWrongURL() throws CheckstyleException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "713536ca8d5fcdeba70223ab57d5a462", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NestedIfDepthCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void visitLiteralIf(DetailAST aIf)", "signatureAfterChange": "     private void visitLiteralIf(DetailAST literalIf)", "diff": ["-    private void visitLiteralIf(DetailAST aIf)", "+    private void visitLiteralIf(DetailAST literalIf)", "-        if (!CheckUtils.isElseIf(aIf)) {", "-            nestIn(aIf, \"nested.if.depth\");", "+        if (!CheckUtils.isElseIf(literalIf)) {", "+            nestIn(literalIf, \"nested.if.depth\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7151c9cdad4ce73c19dc3c50f35cf6c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void extendIllegalClassNamesWithShortName(String aCanonicalName)", "signatureAfterChange": "     private void extendIllegalClassNamesWithShortName(String canonicalName)", "diff": ["-    private void extendIllegalClassNamesWithShortName(String aCanonicalName)", "+    private void extendIllegalClassNamesWithShortName(String canonicalName)", "-        if (mIllegalClassNames.contains(aCanonicalName)) {", "-            final String shortName = aCanonicalName.", "-                substring(aCanonicalName.lastIndexOf(\".\") + 1);", "-            mIllegalClassNames.add(shortName);", "+        if (illegalClassNames.contains(canonicalName)) {", "+            final String shortName = canonicalName.", "+                substring(canonicalName.lastIndexOf(\".\") + 1);", "+            illegalClassNames.add(shortName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "716fdc8926b3d3360f2979a7d511249a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void startElement(final String namespaceURI,                              final String localName,                              final String qName,                              final Attributes attributes)         throws SAXException", "signatureAfterChange": "      @Override     public void startElement(final String namespaceURI,                              final String localName,                              final String qName,                              final Attributes attributes)         throws SAXException", "diff": ["-            final Guard g;", "+            final Guard guard;", "-                g = new Guard(isAllow, isLocalOnly, pkg, exactMatch, regex);", "+                guard = new Guard(isAllow, isLocalOnly, pkg, exactMatch, regex);", "-                g = new Guard(isAllow, isLocalOnly, clazz, regex);", "+                guard = new Guard(isAllow, isLocalOnly, clazz, regex);", "-            final PkgControl pc = stack.peek();", "-            pc.addGuard(g);", "+            final PkgControl pkgControl = stack.peek();", "+            pkgControl.addGuard(guard);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "718766b6b62e948e40c33402f19a0b45", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/AnnotationUtility.java", "commitBeforeChange": "146e2657d319f070a4106cb0e4017fa6b3156949", "commitAfterChange": "dab75cd8a08345b16e334c803a3208f8494db097", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static DetailAST getAnnotationHolder(DetailAST ast)", "signatureAfterChange": "     public static DetailAST getAnnotationHolder(DetailAST ast)", "diff": ["-            throw new IllegalArgumentException(\"the ast is null\");", "+            throw new IllegalArgumentException(THE_AST_IS_NULL);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71982f7f05e9658751b9e028f346bd09", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private DetailAST findLastAnnotation(DetailAST aModifiers)", "signatureAfterChange": "     private DetailAST findLastAnnotation(DetailAST modifiers)", "diff": ["-    private DetailAST findLastAnnotation(DetailAST aModifiers)", "+    private DetailAST findLastAnnotation(DetailAST modifiers)", "-        DetailAST aAnnot = aModifiers.findFirstToken(TokenTypes.ANNOTATION);", "-        while (aAnnot != null && aAnnot.getNextSibling() != null", "-               && aAnnot.getNextSibling().getType() == TokenTypes.ANNOTATION)", "+        DetailAST annot = modifiers.findFirstToken(TokenTypes.ANNOTATION);", "+        while (annot != null && annot.getNextSibling() != null", "+               && annot.getNextSibling().getType() == TokenTypes.ANNOTATION)", "-            aAnnot = aAnnot.getNextSibling();", "+            annot = annot.getNextSibling();", "-        return aAnnot;", "+        return annot;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71bdb5f79a03508f5e29aaa315450ec1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java", "commitBeforeChange": "5ce6ad4df6ccdd575168b54e712707e9f77bb524", "commitAfterChange": "28d1968038af94b1f169eca09a12f19164daac04", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            if (mAllowUndeclaredRTE) {", "-                processImport(aAST);", "-            }", "+            processImport(aAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71c712669607b899753e8321c1246f7b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public final void setMessageDispatcher(MessageDispatcher dispatcher)", "signatureAfterChange": "      @Override     public final void setMessageDispatcher(MessageDispatcher messageDispatcher)", "diff": ["-    public final void setMessageDispatcher(MessageDispatcher dispatcher) {", "-        this.dispatcher = dispatcher;", "+    public final void setMessageDispatcher(MessageDispatcher messageDispatcher) {", "+        this.messageDispatcher = messageDispatcher;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71d18d85259cc25df1e8617e34cb533b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/Guard.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private AccessResult calculateResult(final boolean aMatched)", "signatureAfterChange": "     private AccessResult calculateResult(final boolean matched)", "diff": ["-    private AccessResult calculateResult(final boolean aMatched)", "+    private AccessResult calculateResult(final boolean matched)", "-        if (aMatched) {", "-            return mAllowed ? AccessResult.ALLOWED : AccessResult.DISALLOWED;", "+        if (matched) {", "+            return allowed ? AccessResult.ALLOWED : AccessResult.DISALLOWED;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71d8d104b9f1e44f1ab8787256c18b75", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void verifyBrace(final DetailAST brace,                              final DetailAST startToken)", "signatureAfterChange": "     private void verifyBrace(final DetailAST brace,                              final DetailAST startToken)", "diff": ["-                    log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);", "+                    log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71de0a4da4eb3665b4ddd2ad60735816", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/VerifierImpl.java", "commitBeforeChange": "3ded7a11556a6258bcddd3ebe2d69a2058675601", "commitAfterChange": "69138e40225407ef560fd9d06d2903de37c83c2c", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "     private void checkImports()", "signatureAfterChange": "     private void checkImports()", "diff": ["-        if (!mConfig.isCheckImports()) {", "+        if (mConfig.isIgnoreImports()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71e6bd03244fb529de02b7343b10f6de", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "95604498dadc98608c4294760a8f74c6d2ca2c68", "commitAfterChange": "b43c32ad0a3674fcda782d2e28d0975b72382470", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "          @Override         public void startElement(String namespaceURI,                                  String localName,                                  String qName,                                  Attributes atts)             throws SAXException", "signatureAfterChange": "          @Override         public void startElement(String uri,                                  String localName,                                  String qName,                                  Attributes attributes)             throws SAXException", "diff": ["-        public void startElement(String namespaceURI,", "+        public void startElement(String uri,", "-                                 Attributes atts)", "+                                 Attributes attributes)", "-                final String name = atts.getValue(NAME);", "+                final String name = attributes.getValue(NAME);", "-                    value = replaceProperties(atts.getValue(VALUE),", "-                        overridePropsResolver, atts.getValue(DEFAULT));", "+                    value = replaceProperties(attributes.getValue(VALUE),", "+                        overridePropsResolver, attributes.getValue(DEFAULT));", "-                final String name = atts.getValue(NAME);", "+                final String name = attributes.getValue(NAME);", "-                final String key = atts.getValue(KEY);", "-                final String value = atts.getValue(VALUE);", "+                final String key = attributes.getValue(KEY);", "+                final String value = attributes.getValue(VALUE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72050f756aafef7b25fe42bd7069bd29", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "commitBeforeChange": "899f12f19f0f7684f4a93b0d200fd8bed7a84666", "commitAfterChange": "05211d164a1156c7d7b17e7cf72e49903bc532ac", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public OperatorWrapCheck()", "signatureAfterChange": "     public OperatorWrapCheck()", "diff": ["-        super(OperatorWrapOption.NL, OperatorWrapOption.class);", "+        super(WrapOption.NL, WrapOption.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7242b589b04b9d2343ac0b6a5cdfadf9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "commitAfterChange": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static <T extends Enum<T>> T getOption(final Class<T> enuclass,         final String value)", "signatureAfterChange": "     private static <T extends Enum<T>> T getOption(final Class<T> enumClass,         final String value)", "diff": ["-    private static <T extends Enum<T>> T getOption(final Class<T> enuclass,", "+    private static <T extends Enum<T>> T getOption(final Class<T> enumClass,", "-            return Enum.valueOf(enuclass, value.trim().toUpperCase(Locale.ENGLISH));", "+            return Enum.valueOf(enumClass, value.trim().toUpperCase(Locale.ENGLISH));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "725b45aed3677ee0211f3e49ce7fee21", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "commitBeforeChange": "5fa34fa1b2f206efb0003b9b65dedba8d214052a", "commitAfterChange": "d53fc277c6947761992e6ca3016110d6ed59b042", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static boolean isSkipCase(DetailAST ast)", "signatureAfterChange": "     private static boolean isSkipCase(DetailAST ast)", "diff": ["-        return modifiers != null && modifiers.branchContains(TokenTypes.FINAL);", "+        return modifiers.branchContains(TokenTypes.FINAL);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "725dd6ab9ed167753555ff4e5ce3293e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck.java", "commitBeforeChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "commitAfterChange": "29027109bf962f47b6a6000fdca69b5679ce4b43", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void loadHeader(final Reader aHeaderReader) throws IOException", "signatureAfterChange": "     private void loadHeader(final Reader headerReader) throws IOException", "diff": ["-    private void loadHeader(final Reader aHeaderReader) throws IOException", "+    private void loadHeader(final Reader headerReader) throws IOException", "-        final LineNumberReader lnr = new LineNumberReader(aHeaderReader);", "-        mHeaderLines.clear();", "+        final LineNumberReader lnr = new LineNumberReader(headerReader);", "+        readerLines.clear();", "-            mHeaderLines.add(l);", "+            readerLines.add(l);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "727ae6218cddabfe363cd724684c65fb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processIdent(DetailAST ast)", "signatureAfterChange": "     private void processIdent(DetailAST ast)", "diff": ["-                    log(ast, \"require.this.method\", ast.getText());", "+                    log(ast, MSG_METHOD, ast.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7296ca46be3e4d0177cbc7debbcbe757", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IllegalInstantiationCheck.java", "commitBeforeChange": "3f14872d33910413734232fb16b9debe479e1bd8", "commitAfterChange": "84eddc36730c1eca845257201c71a0d1fb2d40cf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public int[] getDefaultTokens()", "signatureAfterChange": "     public int[] getDefaultTokens()", "diff": ["-            JavaTokenTypes.IMPORT,", "-            JavaTokenTypes.LITERAL_new,", "-            JavaTokenTypes.PACKAGE_DEF", "+            TokenTypes.IMPORT,", "+            TokenTypes.LITERAL_NEW,", "+            TokenTypes.PACKAGE_DEF"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72a4dd1ecd4a410b85ddeb71d72e800a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "90c0f0affe174beb80b45d5bc99ea9540d6d1c77", "commitAfterChange": "3288a81e30ddea194f76bd74f3b509500b864163", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public Checker(Configuration aConfig, CheckConfiguration[] aConfigs)         throws CheckstyleException", "signatureAfterChange": "     public Checker(Configuration aConfig, CheckConfiguration[] aConfigs)         throws CheckstyleException", "diff": ["+            // IMPORTANT! Need to use the same class loader that created this", "+            // class. Otherwise can get ClassCastException problems.", "-                config.createInstance(mConfig.getClassLoader()), config);", "+                config.createInstance(this.getClass().getClassLoader()),", "+                config);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72e7a21b311df15f07f025bdf55bb459", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/UnnecessaryParenthesesCheck.java", "commitBeforeChange": "ce59d6abb3385213248b188f5b80f9e9a2ca3507", "commitAfterChange": "b433c987fa86905ffa686d6b45180508d759d450", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-            if (parentToSkip != ast && exprSurrounded(ast)) {", "+            if (parentToSkip != ast && isExprSurrounded(ast)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72fa425cde0ad36b0add3a875ff23334", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "443e534a3c98c0b30f24647da724fe918f17a006", "commitAfterChange": "66d73fe6189267fee3423e2e8d7fc2d68599a43f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ParseTreeInfoPanel()", "signatureAfterChange": "     public ParseTreeInfoPanel()", "diff": ["-        jTextArea = new JTextArea(20, 15);", "-        jTextArea.setEditable(false);", "-        treeTable.setEditor(jTextArea);", "-        treeTable.setLinePositionMap(lines2position);", "+        textArea = new JTextArea(20, 15);", "+        textArea.setEditable(false);", "+        treeTable.setEditor(textArea);", "+        treeTable.setLinePositionMap(linesToPosition);", "-        final JScrollPane sp2 = new JScrollPane(jTextArea);", "+        final JScrollPane sp2 = new JScrollPane(textArea);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7312be05eda1ff3b6e52117b7db8296d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/SeverityLevel.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static SeverityLevel getInstance(String aSecurityLevelName)", "signatureAfterChange": "     public static SeverityLevel getInstance(String securityLevelName)", "diff": ["-    public static SeverityLevel getInstance(String aSecurityLevelName)", "+    public static SeverityLevel getInstance(String securityLevelName)", "-        return valueOf(SeverityLevel.class, aSecurityLevelName.trim()", "+        return valueOf(SeverityLevel.class, securityLevelName.trim()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7324086fd5e6e79ccff04974f93760b6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "a2f74423b6db21eeb1ed1725e6cfc2b83c44113b", "commitAfterChange": "de4485a22bfe8eafc3c2e273fd328a0221d0ff9e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setImmutableClassNames(String[] classNames)", "signatureAfterChange": "     public void setImmutableClassCanonicalNames(String[] classNames)", "diff": ["-    public void setImmutableClassNames(String[] classNames)", "+    public void setImmutableClassCanonicalNames(String[] classNames)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7339e6d00417e5caf9d1e86325b058cf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "7d513f08c27c741105f712dc882fd4c3553f71e7", "commitAfterChange": "8a3f5bf6d5389b9e175c9c769992faece6d76ada", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static AuditListener createListener(String format,                                                 String outputLocation)             throws UnsupportedEncodingException, FileNotFoundException", "signatureAfterChange": "     private static AuditListener createListener(String format,                                                 String outputLocation)             throws UnsupportedEncodingException, FileNotFoundException", "diff": ["-        OutputStream out = null;", "-        boolean closeOut = false;", "+        OutputStream out;", "+        boolean closeOut;", "-        AuditListener listener = null;", "+        AuditListener listener;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "738d55a66a25483f9f020be31e35adb1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Check.java", "commitBeforeChange": "dcf0d774fa59e2131e4bb2f50523da10ce3305af", "commitAfterChange": "7af9e82fc16545a8153b529fba91df0fb310e2e6", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public final String getFilename()", "signatureAfterChange": "     public final FileContents getFileContents()", "diff": ["+     */", "+    public final FileContents getFileContents()", "+    {", "+        return (FileContents) getTreeContext().get(FILE_CONTENTS_ATTRIBUTE);", "-     */", "-    public final String getFilename()", "-    {", "-        return (String) getTreeContext().get(FILENAME_ATTRIBUTE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73a52fb71f063515a19371b57364d89f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "bf9325be913ce46a1427232c455f4830b574ba44", "commitAfterChange": "745e21f1e4d202dd8dba577585f35f7d3f10d839", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "         public AuditListener createListener(Task task) throws IOException", "signatureAfterChange": "         public AuditListener createListener(Task task) throws IOException", "diff": ["-                return createXMLLogger(task);", "+                return createXmlLogger(task);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73b816cc56e1527f9ab85742b4279a72", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheck.java", "commitBeforeChange": "6c19362738598c7addaafc1f906058f49fadc2a4", "commitAfterChange": "ea963bb721aafd9584242cedf2781f0294f2b18d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          @Override         public Object put(Object key, Object value)", "signatureAfterChange": "          @Override         public Object put(Object key, Object value)", "diff": ["-                duplicatedStrings.add(keyString);", "+                duplicatedKeys.add(keyString);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73d7622952da843e012363538255282d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private boolean isMatchingClassName(String aClassName)", "signatureAfterChange": "     private boolean isMatchingClassName(String className)", "diff": ["-    private boolean isMatchingClassName(String aClassName)", "+    private boolean isMatchingClassName(String className)", "-        final String shortName = aClassName.substring(aClassName.lastIndexOf(\".\") + 1);", "-        return (mIllegalClassNames.contains(aClassName)", "-                || mIllegalClassNames.contains(shortName))", "-            || (!mLegalAbstractClassNames.contains(aClassName)", "-                && getRegexp().matcher(aClassName).find());", "+        final String shortName = className.substring(className.lastIndexOf(\".\") + 1);", "+        return (illegalClassNames.contains(className)", "+                || illegalClassNames.contains(shortName))", "+            || (!legalAbstractClassNames.contains(className)", "+                && getRegexp().matcher(className).find());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73e461039f1e5c0f2da04e2f68d0cfd8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean hasTrailComment(DetailAST aAst)", "signatureAfterChange": "     private boolean haastrailComment(DetailAST ast)", "diff": ["-    private boolean hasTrailComment(DetailAST aAst)", "+    private boolean haastrailComment(DetailAST ast)", "-        final DetailAST variableDef = getVariableDef(aAst);", "+        final DetailAST variableDef = getVariableDef(ast);", "-            semi = getSemi(aAst);", "+            semi = getSemi(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73edebb4dde7e2a7c86ace1ebdb961d2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private boolean commentMatch(Pattern aPattern, String aLine, int aLineNo     )", "signatureAfterChange": "     private boolean commentMatch(Pattern pattern, String line, int lineNo     )", "diff": ["-    private boolean commentMatch(Pattern aPattern, String aLine, int aLineNo", "+    private boolean commentMatch(Pattern pattern, String line, int lineNo", "-        final Matcher matcher = aPattern.matcher(aLine);", "+        final Matcher matcher = pattern.matcher(line);", "-            return getFileContents().hasIntersectionWithComment(aLineNo,", "-                    startMatch, aLineNo, endMatch);", "+            return getFileContents().hasIntersectionWithComment(lineNo,", "+                    startMatch, lineNo, endMatch);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7435bad2cdf6d0a16c6bfa22d8603725", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private void addTag(String aText, int aLine)", "signatureAfterChange": "     private void addTag(String text, int line)", "diff": ["-    private void addTag(String aText, int aLine)", "+    private void addTag(String text, int line)", "-        final Tag tag = new Tag(aText, aLine);", "-        mTags.add(tag);", "+        final Tag tag = new Tag(text, line);", "+        tags.add(tag);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7447307610c62bc2df68c88ec8c321e1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/IllegalImportCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setIllegalPkgs(String[] aFrom)", "signatureAfterChange": "     public void setIllegalPkgs(String[] from)", "diff": ["-    public void setIllegalPkgs(String[] aFrom)", "+    public void setIllegalPkgs(String[] from)", "-        mIllegalPkgs = aFrom.clone();", "+        illegalPkgs = from.clone();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "746824b6c397f403848ee18b80336c3b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public static void setLocale(Locale aLocale)", "signatureAfterChange": "     public static void setLocale(Locale locale)", "diff": ["-    /** @param aLocale the locale to use for localization **/", "-    public static void setLocale(Locale aLocale)", "+    /** @param locale the locale to use for localization **/", "+    public static void setLocale(Locale locale)", "-        sLocale = aLocale;", "+        sLocale = locale;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74863a23805c437a6c61312d38ebfe89", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/FastStack.java", "commitBeforeChange": "06e8a4eaa00e548f52b2483864a31ba9defd0989", "commitAfterChange": "b3f724f871dd57c4db958556df1a73f71c8bd6e5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r     public E get(int aIndex)", "signatureAfterChange": "\r     public E peek(int aIndex)", "diff": ["-    public E get(int aIndex)\r", "+    public E peek(int aIndex)\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74865d4204b7beb0f857ed99cc41cc7f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private NavigableMap<Integer, DetailAST> collectFirstNodes()", "signatureAfterChange": "     private NavigableMap<Integer, DetailAST> collectFirstNodes()", "diff": ["-        result.put(mFirstNode.getLineNo(), mFirstNode);", "-        DetailAST curNode = mFirstNode.getFirstChild();", "+        result.put(firstNode.getLineNo(), firstNode);", "+        DetailAST curNode = firstNode.getFirstChild();", "-        while (curNode != null && curNode != mLastNode) {", "+        while (curNode != null && curNode != lastNode) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74afdcc64f9133246054d492fa74869b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Override     public void destroy()", "signatureAfterChange": "      @Override     public void destroy()", "diff": ["-        for (Check c : mOrdinaryChecks) {", "+        for (Check c : ordinaryChecks) {", "-        for (Check c : mCommentChecks) {", "+        for (Check c : commentChecks) {", "-        mCache.destroy();", "+        cache.destroy();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74bf85bc5f3a12fb393bd687f77b4768", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/UnnecessaryParenthesesCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static boolean inTokenList(int type, int... tokens)", "signatureAfterChange": "     private static boolean isInTokenList(int type, int... tokens)", "diff": ["-    private static boolean inTokenList(int type, int... tokens) {", "+    private static boolean isInTokenList(int type, int... tokens) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74cb77f449e8457b429ac02915adc04e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtils.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static boolean inInterfaceBlock(DetailAST aAST)", "signatureAfterChange": "     public static boolean isInInterfaceBlock(DetailAST aAST)", "diff": ["-    public static boolean inInterfaceBlock(DetailAST aAST) {", "+    public static boolean isInInterfaceBlock(DetailAST aAST) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74e3589b74a6a3782a647ede72bd9c23", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "5a527aba40b076e8b0d5572e9f76d7a0e275c5c2", "commitAfterChange": "15c7162ea43a4e7517227a281f6f34d4a2ecb5a5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      protected Checker createChecker()         throws RESyntaxException", "signatureAfterChange": "      protected Checker createChecker()         throws RESyntaxException", "diff": ["-        final Checker c = new Checker(mConfig, mStream);", "+        final Checker c = new Checker(mConfig);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74f462d3a35c7010e5875c43018a7c78", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "3c7c3cbe88a2bec0962702305db4f2b05117501c", "commitAfterChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-        String currentGroup = getImportGroup(firstImport.isStatic(),", "+        String currentGroup = getImportGroup(firstImport.isStaticImport(),", "-                    && matchesImportGroup(importObject.isStatic(),", "+                    && matchesImportGroup(importObject.isStaticImport(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74f9f886a4ec83e2de9e118ace5856ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheckTest.java", "commitBeforeChange": "6839ac4fd83dde7060c8f6f28e75aa3d6ff2456b", "commitAfterChange": "31f6765fdcf2233ca6c53730c2fc196576557f66", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testLambdexpression() throws Exception", "signatureAfterChange": "      @Test     public void testLambdExpression() throws Exception", "diff": ["-    public void testLambdexpression() throws Exception {", "+    public void testLambdExpression() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7504a6fe866ceb87ba18cfdeb3d89c32", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/MethodSignature.java", "commitBeforeChange": "dc764f3b6ad475854cd0d22655db3f96e7eb7ed3", "commitAfterChange": "a1cecb5e0658862f957e60a8d5b2ade13b592101", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     int getLineNo()", "signatureAfterChange": "     int getFirstLineNo()", "diff": ["-    int getLineNo()", "+    int getFirstLineNo()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "755d9e7035c63eddb3480f9d382a7a25", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SingleLineJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private boolean isSingleLineJavadoc()", "signatureAfterChange": "     private boolean isSingleLineJavdoc()", "diff": ["-    private boolean isSingleLineJavadoc()", "+    private boolean isSingleLineJavdoc()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "756120d08b477c851d579dc8c63c519d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "         public void addStaticMember(final String aName)", "signatureAfterChange": "         public void addStaticMember(final String name)", "diff": ["-        public void addStaticMember(final String aName)", "+        public void addStaticMember(final String name)", "-            mStaticMembers.add(aName);", "+            staticMembers.add(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7572504b7aff057dadafac6b77f85037", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "         public Token(FullIdent aFullIdent)", "signatureAfterChange": "         public Token(FullIdent fullIdent)", "diff": ["-        public Token(FullIdent aFullIdent)", "+        public Token(FullIdent fullIdent)", "-            mText = aFullIdent.getText();", "-            mLine = aFullIdent.getLineNo();", "-            mColumn = aFullIdent.getColumnNo();", "+            text = fullIdent.getText();", "+            line = fullIdent.getLineNo();", "+            column = fullIdent.getColumnNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75c714fda8206477c7dd2f568e050691", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheckTest.java", "commitBeforeChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "commitAfterChange": "cb5a59fc6baf5de204e3cc99be6ba9865e44350a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testSigleLineStatements() throws Exception", "signatureAfterChange": "      @Test     public void testSingleLineStatements() throws Exception", "diff": ["-    public void testSigleLineStatements() throws Exception {", "+    public void testSingleLineStatements() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75ddcfaf381b7cd49bb8fc0d84e7e130", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static String capitalize(final String aName)", "signatureAfterChange": "     private static String capitalize(final String name)", "diff": ["-    private static String capitalize(final String aName)", "+    private static String capitalize(final String name)", "-        if (aName == null || aName.length() == 0) {", "-            return aName;", "+        if (name == null || name.length() == 0) {", "+            return name;", "-        // one is a capital one, since according to JavaBeans spec", "+        // one is a capital one, since according to Javbeans spec", "-        if (aName.length() > 1 && Character.isUpperCase(aName.charAt(1))) {", "-            return aName;", "+        if (name.length() > 1 && Character.isUpperCase(name.charAt(1))) {", "+            return name;", "-        return aName.substring(0, 1).toUpperCase() + aName.substring(1);", "+        return name.substring(0, 1).toUpperCase() + name.substring(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7601f2724851202bbef4b44207affd87", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FullIdent.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static FullIdent createFullIdent(DetailAST ast)", "signatureAfterChange": "     public static FullIdent createFullIdent(DetailAST ast)", "diff": ["-        final FullIdent fi = new FullIdent();", "-        extractFullIdent(fi, ast);", "-        return fi;", "+        final FullIdent ident = new FullIdent();", "+        extractFullIdent(ident, ast);", "+        return ident;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7673566cc21b03f027d1e503fc1f0341", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     private void checkThrowsTags(List<JavadocTag> tags,             List<ExceptionInfo> throwsList, boolean reportExpectedTags)", "signatureAfterChange": "     private void checkThrowsTags(List<JavadocTag> tags,             List<ExceptionInfo> throwsList, boolean reportExpectedTags)", "diff": ["-                    final Token fi = ei.getName();", "-                    log(fi.getLineNo(), fi.getColumnNo(),", "+                    final Token token = ei.getName();", "+                    log(token.getLineNo(), token.getColumnNo(),", "-                        JavadocTagInfo.THROWS.getText(), fi.getText());", "+                            JavadocTagInfo.THROWS.getText(), token.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76b101c34d225bf395d035463af71aeb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setCommentFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setCommentFormat(String format)         throws ConversionException", "diff": ["-    public void setCommentFormat(String aFormat)", "+    public void setCommentFormat(String format)", "-            mCommentRegexp = Utils.getPattern(aFormat);", "+            commentRegexp = Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76bdd46efa786bce491f0d554ff70deb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void initialize(AST aAST)", "signatureAfterChange": "      @Override     public void initialize(AST ast)", "diff": ["-    public void initialize(AST aAST)", "+    public void initialize(AST ast)", "-        final DetailAST da = (DetailAST) aAST;", "+        final DetailAST da = (DetailAST) ast;", "-        mLineNo = da.getLineNo();", "-        mColumnNo = da.getColumnNo();", "+        lineNo = da.getLineNo();", "+        columnNo = da.getColumnNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76d8fcc9fb16922852f6641681b18bd6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java", "commitBeforeChange": "cea7f4acbe4f286cbb031efa816f9e881278fdc3", "commitAfterChange": "b543f32fd7b6a2d80a0e66159c40df7aebcb18ee", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "          public void setExceptionalMethod(String value)", "signatureAfterChange": "          public void setExceptionalMethod(String value)", "diff": ["-            throw new IllegalStateException(wrong);", "+            throw new IllegalStateException(privateField);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76e48bed910b70ac776b108f147b0416", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "         public void setImportFullPath(String aImportFullPath)", "signatureAfterChange": "         public void setImportFullPath(String importFullPath)", "diff": ["-        public void setImportFullPath(String aImportFullPath)", "+        public void setImportFullPath(String importFullPath)", "-            this.mImportFullPath = aImportFullPath;", "+            this.importFullPath = importFullPath;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76feb9718ac0edf542e5574880d9615b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java", "commitBeforeChange": "0db81f33e13f9829ee7de0b261f042017084b78f", "commitAfterChange": "70a6e2e6d34fa5a404e88e45cd62a20a06e19556", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testCacheFile() throws Exception", "signatureAfterChange": "      @Test     public void testCacheFile() throws Exception", "diff": ["-        checker.addListener(new BriefLogger(stream));", "+        checker.addListener(new BriefUtLogger(stream));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77242a64040f90bff0dbded9812beeee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      @Test     public void test_1379666() throws Exception", "signatureAfterChange": "      @Test     public void test1379666() throws Exception", "diff": ["-    public void test_1379666() throws Exception {", "+    public void test1379666() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7729b36b7c810eac72fca080de3d9901", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "         public boolean containsStaticField(String aField)", "signatureAfterChange": "         public boolean containsStaticField(String field)", "diff": ["-        public boolean containsStaticField(String aField)", "+        public boolean containsStaticField(String field)", "-            return mStaticFields.contains(aField)", "-                    || (mParent != null)", "-                    && mParent.containsStaticField(aField);", "+            return staticFields.contains(field)", "+                    || (parent != null)", "+                    && parent.containsStaticField(field);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "772ef2c3ec091ccf4a69fcd8f230fde0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "443e534a3c98c0b30f24647da724fe918f17a006", "commitAfterChange": "66d73fe6189267fee3423e2e8d7fc2d68599a43f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private DetailNode convertParseTree2DetailNode(ParseTree parseTreeNode)", "signatureAfterChange": "     private DetailNode convertParseTreeToDetailNode(ParseTree parseTreeNode)", "diff": ["-    private DetailNode convertParseTree2DetailNode(ParseTree parseTreeNode) {", "+    private DetailNode convertParseTreeToDetailNode(ParseTree parseTreeNode) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7736d52bb9cbe8d68da007fa9c087682", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void logCommaViolation(final DetailAST aAST)", "signatureAfterChange": "     private void logCommaViolation(final DetailAST ast)", "diff": ["-    private void logCommaViolation(final DetailAST aAST)", "+    private void logCommaViolation(final DetailAST ast)", "-        final DetailAST rCurly = aAST.findFirstToken(TokenTypes.RCURLY);", "+        final DetailAST rCurly = ast.findFirstToken(TokenTypes.RCURLY);", "-        if (TrailingArrayComma.ALWAYS.equals(this.mComma)", "+        if (TrailingArrayComma.ALWAYS.equals(this.comma)", "-        else if (TrailingArrayComma.NEVER.equals(this.mComma)", "+        else if (TrailingArrayComma.NEVER.equals(this.comma)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "773b67970b7d5812998e08c5098a3868", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "31b643724b87eaaf2d83f63116c8b313f06aa688", "commitAfterChange": "585f7c20a1e9e3ca4a04ffedf4e1cedc449acd97", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private Checker createChecker()", "signatureAfterChange": "     private Checker createChecker()", "diff": ["-            final Configuration config = ConfigurationLoader.loadConfiguration(", "-                    mConfigLocation, new PropertiesExpander(props), true);", "+            final Configuration config =", "+                ConfigurationLoader.loadConfiguration(", "+                    mConfigLocation,", "+                    new PropertiesExpander(props),", "+                    mOmitIgnoredModules);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "775011a7f79b7ed1328181b8d9293d0b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "commitAfterChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void openAst(DetailAST parseTree, final Component aParent)", "signatureAfterChange": "      public void openAst(DetailAST parseTree, final Component parent)", "diff": ["-    public void openAst(DetailAST parseTree, final Component aParent)", "+    public void openAst(DetailAST parseTree, final Component parent)", "-        mParseTreeModel.setParseTree(parseTree);", "+        parseTreeModel.setParseTree(parseTree);", "-        if (mJTextArea.getText().length() != 0) {", "-            mJTextArea.replaceRange(\"\", 0, mJTextArea.getText().length());", "+        if (jTextArea.getText().length() != 0) {", "+            jTextArea.replaceRange(\"\", 0, jTextArea.getText().length());", "-        mJTextArea.moveCaretPosition(0);", "+        jTextArea.moveCaretPosition(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7761d0b33d0aa42d630a46700224e3df", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractFormatCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public AbstractFormatCheck(String aDefaultFormat, int aCompileFlags)         throws ConversionException", "signatureAfterChange": "     public AbstractFormatCheck(String defaultFormat, int compileFlags)         throws ConversionException", "diff": ["-    public AbstractFormatCheck(String aDefaultFormat, int aCompileFlags)", "+    public AbstractFormatCheck(String defaultFormat, int compileFlags)", "-        updateRegexp(aDefaultFormat, aCompileFlags);", "+        updateRegexp(defaultFormat, compileFlags);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7761f926ed10013f3767fedd166f82c5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "commitAfterChange": "4c1148db9982918e65f8d1156e8fb9c07b206fc9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                    for (final String string : typeParamNames) {", "+                    for (final String typeParamName : typeParamNames) {", "-                            lineNo, tags, string);", "+                            lineNo, tags, typeParamName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "777e823e772e36f2651019478eae5bde", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     private static DetailAST createBlockCommentNode(Token aToken)", "signatureAfterChange": "     private static DetailAST createBlockCommentNode(Token token)", "diff": ["-    private static DetailAST createBlockCommentNode(Token aToken)", "+    private static DetailAST createBlockCommentNode(Token token)", "-        blockComment.setColumnNo(aToken.getColumn() - 1);", "-        blockComment.setLineNo(aToken.getLine());", "+        blockComment.setColumnNo(token.getColumn() - 1);", "+        blockComment.setLineNo(token.getLine());", "-        blockCommentContent.initialize(aToken);", "+        blockCommentContent.initialize(token);", "-        blockCommentContent.setColumnNo(aToken.getColumn() - 1 + 2);", "-        blockCommentContent.setLineNo(aToken.getLine());", "-        blockCommentContent.setText(aToken.getText());", "+        blockCommentContent.setColumnNo(token.getColumn() - 1 + 2);", "+        blockCommentContent.setLineNo(token.getLine());", "+        blockCommentContent.setText(token.getText());", "-                aToken.getText(), aToken.getLine(), aToken.getColumn());", "+                token.getText(), token.getLine(), token.getColumn());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7787954441797ca0b6d1fdd42d7288a5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "1ce6badd8f1852081fee56fd6184ecfe8c128c69", "commitAfterChange": "30438ebdf9fd28a94613e2aaecde776d906349a7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                        && isOnlyUnicodeValidChars(literal, sUnicodeControl)", "+                        && isOnlyUnicodeValidChars(literal, UNICODE_CONTROL)", "-                        && isOnlyUnicodeValidChars(literal, sNonPrintableChars))) {", "+                        && isOnlyUnicodeValidChars(literal, NON_PRINTABLE_CHARS))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7798446946cea9a6d1c9e0e73a352274", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if ((TokenTypes.CLASS_DEF == aAST.getType())", "-            || (TokenTypes.INTERFACE_DEF == aAST.getType())", "-            || (TokenTypes.ENUM_CONSTANT_DEF == aAST.getType())", "-            || (TokenTypes.ENUM_DEF == aAST.getType()))", "+        if ((TokenTypes.CLASS_DEF == ast.getType())", "+            || (TokenTypes.INTERFACE_DEF == ast.getType())", "+            || (TokenTypes.ENUM_CONSTANT_DEF == ast.getType())", "+            || (TokenTypes.ENUM_DEF == ast.getType()))", "-            mCounters.push(new MethodCounter(", "-                TokenTypes.INTERFACE_DEF == aAST.getType()));", "+            counters.push(new MethodCounter(", "+                TokenTypes.INTERFACE_DEF == ast.getType()));", "-        else if (TokenTypes.METHOD_DEF == aAST.getType()) {", "-            raiseCounter(aAST);", "+        else if (TokenTypes.METHOD_DEF == ast.getType()) {", "+            raiseCounter(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77a04019711a4e2f0e778513dd975209", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-    public void leaveToken(DetailAST aAST)", "+    public void leaveToken(DetailAST ast)", "-        mHandlers.pop();", "+        handlers.pop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77a87de89a040f0e5bb6ab88c10e6343", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "5cd16d56a2ef2a3daaf1674666a9a5e6f2ddfe78", "commitAfterChange": "f9a9d6c3d321eeb2879efb7f48f02fe21a51c06c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public LineWrappingHandler(IndentationCheck instance, DetailAST firstNode, DetailAST lastNode)", "signatureAfterChange": "     public LineWrappingHandler(IndentationCheck instance, DetailAST firstNode, DetailAST lastNode)", "diff": ["-        forceStrictCondition = indentCheck.getForceStrictCondition();", "+        forceStrictCondition = indentCheck.isForceStrictCondition();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77b487fbab3d7a8594ff9714193e9de0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void visitPackageDef(DetailAST aPackage)", "signatureAfterChange": "     private void visitPackageDef(DetailAST packageDef)", "diff": ["-    private void visitPackageDef(DetailAST aPackage)", "+    private void visitPackageDef(DetailAST packageDef)", "-        mPackage = FullIdent.createFullIdent(aPackage.getLastChild()", "+        packageName = FullIdent.createFullIdent(packageDef.getLastChild()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77d3fd9c9763098b98ca04aa5f39cfef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "595d070db0215c3cf0555d5074719cffc673c890", "commitAfterChange": "868d96b45918b5bb0db4b80bdf5b70f5202d6590", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void startStatement(DetailAST aAst)", "signatureAfterChange": "     private void visitExpr(DetailAST aAst)", "diff": ["-    private void startStatement(DetailAST aAst)", "+    private void visitExpr(DetailAST aAst)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77fad8db9cc4722b3c45805b79d1f12d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected final void checkChildren(DetailAST parentNode,                                        int[] tokenTypes,                                        IndentLevel startLevel,                                        boolean firstLineMatches,                                        boolean allowNesting)", "signatureAfterChange": "     protected final void checkChildren(DetailAST parentNode,                                        int[] tokenTypes,                                        IndentLevel startIndent,                                        boolean firstLineMatches,                                        boolean allowNesting)", "diff": ["-                                       IndentLevel startLevel,", "+                                       IndentLevel startIndent,", "-                checkExpressionSubtree(child, startLevel,", "+                checkExpressionSubtree(child, startIndent,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7802b65c14b9d394b9e11dfeee747da7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setVersionFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setVersionFormat(String aFormat)         throws ConversionException", "diff": ["-            mVersionFormatRE = Utils.getRE(aFormat);", "+            mVersionFormatPattern = Utils.getPattern(aFormat);", "-        catch (RESyntaxException e) {", "+        catch (PatternSyntaxException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "780db71d7cf600dff7a4cde3ead99931", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     boolean inCache(String uncheckedFileName, long timestamp)", "signatureAfterChange": "     boolean isInCache(String uncheckedFileName, long timestamp)", "diff": ["-    boolean inCache(String uncheckedFileName, long timestamp) {", "+    boolean isInCache(String uncheckedFileName, long timestamp) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78142cddbcf2deb6c3010943658f32c1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Utils.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public static Pattern createPattern(String aPattern)         throws ConversionException", "signatureAfterChange": "     public static Pattern createPattern(String pattern)         throws ConversionException", "diff": ["-    public static Pattern createPattern(String aPattern)", "+    public static Pattern createPattern(String pattern)", "-            retVal = getPattern(aPattern);", "+            retVal = getPattern(pattern);", "-                \"Failed to initialise regexp expression \" + aPattern, e);", "+                \"Failed to initialise regexp expression \" + pattern, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7825f8796ddd31a986d1c88c851a3ac5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AuditEvent.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public String getFileName()", "signatureAfterChange": "     public String getFileName()", "diff": ["-        return mFileName;", "+        return fileName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "782cb75cd3dd2fbc8a758f0d441f8570", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void registerCheck(int tokenID, Check check) throws CheckstyleException", "signatureAfterChange": "     private void registerCheck(int tokenId, Check check) throws CheckstyleException", "diff": ["-    private void registerCheck(int tokenID, Check check) throws CheckstyleException {", "-        registerCheck(TokenUtils.getTokenName(tokenID), check);", "+    private void registerCheck(int tokenId, Check check) throws CheckstyleException {", "+        registerCheck(TokenUtils.getTokenName(tokenId), check);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7868d82b584d425bf01cfb5176dd3be6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "546f336e25b26d072f96e2cda139b885858ed5b0", "commitAfterChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void setupChild(Configuration childConf)         throws CheckstyleException", "signatureAfterChange": "      @Override     public void setupChild(Configuration childConf)         throws CheckstyleException", "diff": ["-        final Check c = (Check) module;", "-        c.contextualize(childContext);", "-        c.configure(childConf);", "-        c.init();", "+        final Check check = (Check) module;", "+        check.contextualize(childContext);", "+        check.configure(childConf);", "+        check.init();", "-        registerCheck(c);", "+        registerCheck(check);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78919542fbf86d4715f82c2c95257871", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private boolean checkClassName()", "signatureAfterChange": "     private boolean checkClassName()", "diff": ["-        return !mExcludedClassesPattern.matcher(mCurrentClass).find();", "+        return !excludedClassesPattern.matcher(currentClass).find();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78b22b79cfe55510fdb4d9045be254c6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AnnotationLocationCheck.java", "commitBeforeChange": "9250096ccfee8b3d7a942106a25a9623c66fa54a", "commitAfterChange": "f9e79c3905e3bf5c18d63853b96aac371bc05f80", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private boolean isCorrectLocation(DetailAST aAnnotation, boolean aHasParams)", "signatureAfterChange": "     private boolean isCorrectLocation(DetailAST aAnnotation, boolean aHasParams)", "diff": ["-            : mAllowSameLineSingleParametterlessAnnotation;", "+            : mAllowSamelineSingleParameterlessAnnotation;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78ca22a52cafd668224b46bfcfda8bfb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "3a55941f33dcd9111d6b61b0505217f47973a39d", "commitAfterChange": "f60a9cfe8b1b27d5ea25095bdfc690001da9f4d6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setLines(String lines)", "signatureAfterChange": "     public void setLines(String lines)", "diff": ["-        linesCSV = lines;", "+        linesCsv = lines;", "-            lineFilter = new CSVFilter(lines);", "+            lineFilter = new CsvFilter(lines);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78cd460b67fb1b74fa3c982fd6077d96", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAst)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAst)", "+    public void visitToken(DetailAST ast)", "-        switch (aAst.getType()) {", "+        switch (ast.getType()) {", "-            visitExpr(aAst);", "+            visitExpr(ast);", "-            visitSemi(aAst);", "+            visitSemi(ast);", "-            mInForHeader = true;", "+            inForHeader = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78d4162619954cf1a92c8ca4489415e8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "46d57c9ca5c93972a22cd797793d6b21c820f444", "commitAfterChange": "deb4d7a38805032ea8c9e2476eff5e00e38f1015", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-                || inAbstractMethod(aAST))", "+                || inAbstractOrNativeMethod(aAST))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "790803322cbead065190d0fd6a631376", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/FileLengthCheckTest.java", "commitBeforeChange": "e20d45697c937fbb8ae3eb3b43bffb43e211237f", "commitAfterChange": "7a603d5fa8bedf038652b6c862753eb76c75241c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testArgs() throws Exception", "signatureAfterChange": "      public void testArgs() throws Exception", "diff": ["-        catch (Exception ex)", "+        catch (ConversionException ex)", "-", "-            // TODO: I would have expected to receive a ConversionException here", "-            // but in fact I do get an InvocationTargetException - another", "-            // mystery in beanutils?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79519fb216a2b35347074711414e274a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "     private void checkThrowsTags(List<JavadocTag> aTags,             List<ExceptionInfo> aThrows, boolean aReportExpectedTags)", "signatureAfterChange": "     private void checkThrowsTags(List<JavadocTag> tags,             List<ExceptionInfo> throwsList, boolean reportExpectedTags)", "diff": ["-    private void checkThrowsTags(List<JavadocTag> aTags,", "-            List<ExceptionInfo> aThrows, boolean aReportExpectedTags)", "+    private void checkThrowsTags(List<JavadocTag> tags,", "+            List<ExceptionInfo> throwsList, boolean reportExpectedTags)", "-        final ListIterator<JavadocTag> tagIt = aTags.listIterator();", "+        final ListIterator<JavadocTag> tagIt = tags.listIterator();", "-            ListIterator<ExceptionInfo> throwIt = aThrows.listIterator();", "+            ListIterator<ExceptionInfo> throwIt = throwsList.listIterator();", "-            throwIt = aThrows.listIterator();", "+            throwIt = throwsList.listIterator();", "-                else if (mAllowThrowsTagsForSubclasses) {", "+                else if (allowThrowsTagsForSubclasses) {", "-                if (mAllowUndeclaredRTE) {", "+                if (allowUndeclaredRTE) {", "-                if (reqd && mValidateThrows) {", "+                if (reqd && validateThrows) {", "-        if (!mAllowMissingThrowsTags && aReportExpectedTags) {", "-            for (ExceptionInfo ei : aThrows) {", "+        if (!allowMissingThrowsTags && reportExpectedTags) {", "+            for (ExceptionInfo ei : throwsList) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "796e00a224e3b61c277b099275bda1a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "fa128598e1f70bbfb8a953dc8cb8b791a5fa67d2", "commitAfterChange": "d3f39e6b87a10ee26aa8da532b545e54090e7761", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     Configuration()         throws IllegalStateException", "signatureAfterChange": "     Configuration()         throws IllegalStateException", "diff": ["+            setPublicMemberPat(PUBLIC_MEMBER_PATTERN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "797a03431dec75a788cf36bc98dc5e26", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AbstractLoader.java", "commitBeforeChange": "34e70b218de0ef8d3d6dc1913fef718d5c7e2325", "commitAfterChange": "1ae462f726304ff22875e39714abd21218d82470", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected AbstractLoader(Map aPublicIdToResourceNameMap)         throws SAXException, ParserConfigurationException", "signatureAfterChange": "     protected AbstractLoader(Map aPublicIdToResourceNameMap)         throws SAXException, ParserConfigurationException", "diff": ["-", "-        //namespace URIs will be available", "-        mParser.setFeature(NAMESPACES_FEATURE_ID, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "798a090600d4264e41e5729f63556cb6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "816c6b33c9ab7b1f3584e3f29ff410fccaa193ee", "commitAfterChange": "25a13442f2d67729eba3b1e8eff32ed926396ee3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public Checker(Configuration aConfig)         throws RESyntaxException", "signatureAfterChange": "     public Checker(Configuration aConfig)         throws RESyntaxException", "diff": ["-        LocalizedMessage.init(new Locale(mConfig.getLocaleLanguage(),", "-                                         mConfig.getLocaleCountry()),", "-                              mConfig.getClassLoader());", "+        LocalizedMessage.setLocale(new Locale(mConfig.getLocaleLanguage(),", "+                                              mConfig.getLocaleCountry()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "799f4bb02c7389b602fd9c2549847c2e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalThrowsCheckTest.java", "commitBeforeChange": "dfc803a1cc442bafeb5aa375f0d9f0a31d655ff2", "commitAfterChange": "351d79582d7a6cea56af9d61f45973d3cf73a484", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Test     public void testIgnoreOverridenMethods() throws Exception", "signatureAfterChange": "     @Test     public void testIgnoreOverriddenMethods() throws Exception", "diff": ["-    public void testIgnoreOverridenMethods() throws Exception", "+    public void testIgnoreOverriddenMethods() throws Exception", "-                + \"InputIllegalThrowsCheckIgnoreOverridenMethods.java\"), expected);", "+                + \"InputIllegalThrowsCheckIgnoreOverriddenMethods.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79b992150b4c5b630ab8813a4e049985", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/TreeTableCellRenderer.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Override     public void paint(Graphics g)", "signatureAfterChange": "     @Override     public void paint(Graphics graph)", "diff": ["-    public void paint(Graphics g) {", "-        g.translate(0, -visibleRow * getRowHeight());", "-        super.paint(g);", "+    public void paint(Graphics graph) {", "+        graph.translate(0, -visibleRow * getRowHeight());", "+        super.paint(graph);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79e036a878df90838c1a346a3d214f4d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java", "commitBeforeChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "commitAfterChange": "29027109bf962f47b6a6000fdca69b5679ce4b43", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     protected void postprocessHeaderLines()", "signatureAfterChange": "      @Override     protected void postprocessHeaderLines()", "diff": ["-        mHeaderRegexps.clear();", "+        headerRegexps.clear();", "-                mHeaderRegexps.add(Utils.getPattern(line));", "+                headerRegexps.add(Utils.getPattern(line));", "-                        + (mHeaderRegexps.size() + 1)", "+                        + (headerRegexps.size() + 1)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79febd8e985ca1c8be1f0b0f769bff2d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "commitAfterChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public ParseTreeInfoPanel()", "signatureAfterChange": "     public ParseTreeInfoPanel()", "diff": ["-        mParseTreeModel = new ParseTreeModel(treeRoot);", "-        mTreeTable = new JTreeTable(mParseTreeModel);", "-        final JScrollPane sp = new JScrollPane(mTreeTable);", "+        parseTreeModel = new ParseTreeModel(treeRoot);", "+        treeTable = new JTreeTable(parseTreeModel);", "+        final JScrollPane sp = new JScrollPane(treeTable);", "-        mJTextArea = new JTextArea(20, 15);", "-        mJTextArea.setEditable(false);", "-        mTreeTable.setEditor(mJTextArea);", "-        mTreeTable.setLinePositionMap(lines2position);", "+        jTextArea = new JTextArea(20, 15);", "+        jTextArea.setEditable(false);", "+        treeTable.setEditor(jTextArea);", "+        treeTable.setLinePositionMap(lines2position);", "-        final JScrollPane sp2 = new JScrollPane(mJTextArea);", "+        final JScrollPane sp2 = new JScrollPane(jTextArea);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a216817179d7631c254aa33894c1c9e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Check.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public final FileContents getFileContents()", "signatureAfterChange": "     public final FileContents getFileContents()", "diff": ["-        return mFileContents;", "+        return fileContents;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ac1a5dbadba88ea2fa649b566490f3a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "aa0f77eb9294588b0d891dbde516bc43a5af4f5a", "commitAfterChange": "c4339df8b3d6b58b327b6cfcaca7413e9c526dcf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static boolean isInitializationSequence(             DetailAST variableUsageAst, String variableName)", "signatureAfterChange": "     private static boolean isInitializationSequence(             DetailAST variableUsageAst, String variableName)", "diff": ["-                    if (methodCallAst != null", "-                        && methodCallAst.getType() == TokenTypes.METHOD_CALL) {", "+                    if (methodCallAst.getType() == TokenTypes.METHOD_CALL) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7acacb633c402761a54be352994083c9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setAuthorFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setAuthorFormat(String aFormat)         throws ConversionException", "diff": ["-            mAuthorFormatRE = Utils.getRE(aFormat);", "+            mAuthorFormatPattern = Utils.getPattern(aFormat);", "-        catch (RESyntaxException e) {", "+        catch (PatternSyntaxException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b05c160ec0de8324b9955ad15453c8a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java", "commitBeforeChange": "904de34fcd984edce3d6042a5a17e2a969254588", "commitAfterChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (returnsOnlyBooleanLiteral(thenStatement)", "-            && returnsOnlyBooleanLiteral(elseStatement)) {", "+        if (canReturnOnlyBooleanLiteral(thenStatement)", "+            && canReturnOnlyBooleanLiteral(elseStatement)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b0c72d5afc2563fa4ce39926ad58751", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule231filetab/FileTabCharacterTest.java", "commitBeforeChange": "4b95f33697750ed910d59830fc9c649f094d88f8", "commitAfterChange": "879864502bd28685569417780ebc92308038cf2c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          @Override     protected DefaultConfiguration createCheckerConfig(         Configuration aCheckConfig)", "signatureAfterChange": "          @Override     protected DefaultConfiguration createCheckerConfig(         Configuration aConfig)", "diff": ["-        Configuration aCheckConfig)", "+        Configuration aConfig)", "-        dc.addChild(aCheckConfig);", "+        dc.addChild(aConfig);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b11bac3929fe244f46245f7987ff142", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheckTest.java", "commitBeforeChange": "b2991ef9e72bd4c69797779357fd9dc2eab7a3ae", "commitAfterChange": "384ecfc7d5a8ec7f0711c8baae661118297272a2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testNoNewlineAtEndOfFile() throws Exception", "signatureAfterChange": "      @Test     public void testNoNewlineLfAtEndOfFile() throws Exception", "diff": ["+", "+    @Test", "+    public void testNoNewlineLfAtEndOfFile() throws Exception {", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(NewlineAtEndOfFileCheck.class);", "+        checkConfig.addAttribute(\"lineSeparator\", LineSeparatorOption.LF.toString());", "+        final String[] expected = {", "+            \"0: \" + getCheckMessage(MSG_KEY_NO_NEWLINE_EOF),", "+        };", "+        verify(", "+            createChecker(checkConfig),", "+            getPath(\"InputNoNewlineAtEndOfFile.java\"),", "-        checkConfig.addAttribute(\"lineSeparator\", LineSeparatorOption.LF.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b1c44472d1980ea2ee2c92c4b2226fc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setAllowLegacy(boolean aAllowLegacy)", "signatureAfterChange": "     public void setAllowLegacy(boolean allowLegacy)", "diff": ["-    public void setAllowLegacy(boolean aAllowLegacy)", "+    public void setAllowLegacy(boolean allowLegacy)", "-        mAllowLegacy = aAllowLegacy;", "+        this.allowLegacy = allowLegacy;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b354d912bf4d27ab6cb85413ffac527", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static void main(String[] aArgs)", "signatureAfterChange": "     public static void main(String[] args)", "diff": ["-    public static void main(String[] aArgs)", "+    public static void main(String[] args)", "-            line = clp.parse(OPTS, aArgs);", "+            line = clp.parse(OPTS, args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b406001766b95d559868749aa8aa31c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "22136c67e9c83494e7aa977ffe7a79beee1b4175", "commitAfterChange": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r     private AST skipVariableAssign(final AST aCurrentAST)", "signatureAfterChange": "\r     private DetailAST skipVariableAssign(final DetailAST aCurrentAST)", "diff": ["-    private AST skipVariableAssign(final AST aCurrentAST)\r", "+    private DetailAST skipVariableAssign(final DetailAST aCurrentAST)\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b4638043c93a0fb7225c3f61d1956f6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public String getMessage()", "signatureAfterChange": "     public String getMessage()", "diff": ["-        final String customMessage = getCustomMessage();", "-        if (customMessage != null) {", "-            return customMessage;", "+        final String message = getCustomMessage();", "+        if (message != null) {", "+            return message;", "-            final ResourceBundle bundle = getBundle(this.bundle);", "-            final String pattern = bundle.getString(key);", "+            final ResourceBundle resourceBundle = getBundle(this.bundle);", "+            final String pattern = resourceBundle.getString(key);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b4ea3091f0a8c092be063d564843788", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "85ba2a3dce39e73858d0f3df72c43804677c8c48", "commitAfterChange": "d49eaaf2e42538bc7f01510eb3ca2812b253c98a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public int[] getHandledTypes()", "signatureAfterChange": "     public int[] getHandledTypes()", "diff": ["-            types[index++] = val;", "+            types[index] = val;", "+            index++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b568122f753acb815ce2beb03ee1c26", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/MethodSignature.java", "commitBeforeChange": "ea01eaaa85409442aeece8763f0388066bd07bf5", "commitAfterChange": "d4f1261a61913b28d746aeb929bd23f372372a4c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": "     void setName(String aName)", "signatureAfterChange": "     void setName(MyCommonAST aName)", "diff": ["-    void setName(String aName)", "+    void setName(MyCommonAST aName)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bb287fafbd59ab372582ec8dac4455d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "3a55941f33dcd9111d6b61b0505217f47973a39d", "commitAfterChange": "f60a9cfe8b1b27d5ea25095bdfc690001da9f4d6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public int hashCode()", "signatureAfterChange": "      @Override     public int hashCode()", "diff": ["-        return Objects.hash(filePattern, checkPattern, moduleId, linesCSV, columnsCSV);", "+        return Objects.hash(filePattern, checkPattern, moduleId, linesCsv, columnsCsv);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bb4c55cf809df66be3eac81fec1ae13", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheck.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-    public void beginTree(DetailAST aRootAST)", "+    public void beginTree(DetailAST rootAST)", "-        mSuppressor.setCurrentContents(getFileContents());", "-        mDetector.processLines(Arrays.asList(getLines()));", "+        suppressor.setCurrentContents(getFileContents());", "+        detector.processLines(Arrays.asList(getLines()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bb8d692185c00ad7a434c9c2c869305", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ParameterAssignmentCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void visitMethodParameters(DetailAST aAST)", "signatureAfterChange": "     private void visitMethodParameters(DetailAST ast)", "diff": ["-    private void visitMethodParameters(DetailAST aAST)", "+    private void visitMethodParameters(DetailAST ast)", "-            aAST.findFirstToken(TokenTypes.PARAMETER_DEF);", "+            ast.findFirstToken(TokenTypes.PARAMETER_DEF);", "-                mParameterNames.add(param.getText());", "+                parameterNames.add(param.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bd96ec43cafe12f073e41eb7ebb6e84", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IfHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     protected IndentLevel getLevelImpl()", "signatureAfterChange": "      @Override     protected IndentLevel getIndentImpl()", "diff": ["-    protected IndentLevel getLevelImpl() {", "+    protected IndentLevel getIndentImpl() {", "-            return getParent().getLevel();", "+            return getParent().getIndent();", "-        return super.getLevelImpl();", "+        return super.getIndentImpl();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bdb21ca616f18e370ef1e5af911a766", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void exitBlock()", "signatureAfterChange": "     private void exitBlock()", "diff": ["-        mCurrentVariables = mVariableStack.pop();", "+        currentVariables = variableStack.pop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7be5f5e18c5355832c089417510730e0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractNestedDepthCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public AbstractNestedDepthCheck(int aMax)", "signatureAfterChange": "     public AbstractNestedDepthCheck(int max)", "diff": ["-    public AbstractNestedDepthCheck(int aMax)", "+    public AbstractNestedDepthCheck(int max)", "-        setMax(aMax);", "+        setMax(max);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c096af3e23a7270d8a2db01930e1f15", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-    public void beginTree(DetailAST aRootAST)", "+    public void beginTree(DetailAST rootAST)", "-        mImportToGroupList.clear();", "+        importToGroupList.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c0c33fc3b6f6017c5e1c52b1088a4a3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/CSVFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Override     public boolean accept(int aInt)", "signatureAfterChange": "     @Override     public boolean accept(int intValue)", "diff": ["-    public boolean accept(int aInt)", "+    public boolean accept(int intValue)", "-            if (filter.accept(aInt)) {", "+            if (filter.accept(intValue)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c1584d44102868a5b009c1844d7a7ff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/OuterTypeNumberCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setMax(int aTo)", "signatureAfterChange": "     public void setMax(int to)", "diff": ["-    public void setMax(int aTo)", "+    public void setMax(int to)", "-        mMax = aTo;", "+        max = to;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c1cc54d47d0ecbdeaff78057fc0bfeb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void logCommaViolation(final DetailAST aAST)", "signatureAfterChange": "     private void logCommaViolation(final DetailAST aAST)", "diff": ["-                rCurly.getColumnNo(), \"annotation.trailing.comma.missing\");", "+                rCurly.getColumnNo(), MSG_KEY_ANNOTATION_TRAILING_COMMA_MISSING);", "-                comma.getColumnNo(), \"annotation.trailing.comma.present\");", "+                comma.getColumnNo(), MSG_KEY_ANNOTATION_TRAILING_COMMA_PRESENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c2ab73fae1d227f19f11f8651b04437", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void walkConditional(final DetailAST aCond)", "signatureAfterChange": "     private void walkConditional(final DetailAST cond)", "diff": ["-    private void walkConditional(final DetailAST aCond)", "+    private void walkConditional(final DetailAST cond)", "-        if (aCond.getType() != TokenTypes.QUESTION) {", "+        if (cond.getType() != TokenTypes.QUESTION) {", "-                this.removeQuotes(aCond.getText());", "-            this.logMatch(aCond.getLineNo(), aCond.getColumnNo(), warningText);", "+                this.removeQuotes(cond.getText());", "+            this.logMatch(cond.getLineNo(), cond.getColumnNo(), warningText);", "-        this.walkConditional(this.getCondLeft(aCond));", "-        this.walkConditional(this.getCondRight(aCond));", "+        this.walkConditional(this.getCondLeft(cond));", "+        this.walkConditional(this.getCondRight(cond));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c2ef80fe643a0bfed514e72f3d7d440", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "1b5c3936f53b0dd9f149faef9ead6fce20a4cb31", "commitAfterChange": "4ea1896f464b0f6c0ddfca3d8d9c9f84703bae5e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     private void addRuleastoList(String ruleStr)", "signatureAfterChange": "     private void addRuleastoList(String ruleStr)", "diff": ["-            catch (Exception e) {", "+            catch (NumberFormatException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ca819db7ad10319aaeed7ec0b202fb0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "commitAfterChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void collectReferecesFromJavadoc(DetailAST ast)", "signatureAfterChange": "     private void collectReferencesFromJavadoc(DetailAST ast)", "diff": ["-    private void collectReferecesFromJavadoc(DetailAST ast) {", "+    private void collectReferencesFromJavadoc(DetailAST ast) {", "-            referenced.addAll(collectReferecesFromJavadoc(cmt));", "+            referenced.addAll(collectReferencesFromJavadoc(cmt));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cd493d48564c4bf4520468736da98b0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "         public String getCheckName()", "signatureAfterChange": "         public String getCheckName()", "diff": ["-            return mCheckName;", "+            return checkName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d002270bb6d36fb9bcacb1f0f48d6c0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Checker() throws CheckstyleException", "signatureAfterChange": "     public Checker() throws CheckstyleException", "diff": ["-        addListener(mCounter);", "+        addListener(counter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d672348866669b185d8aa2d77bb472a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void checkEmptyLine(DetailNode newline)", "signatureAfterChange": "     private void checkEmptyLine(DetailNode newline)", "diff": ["-            log(newline.getLineNumber(), \"javadoc.paragraph.tag.after\");", "+            log(newline.getLineNumber(), MSG_TAG_AFTER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d83d5e9271bcac385569560f0f90e92", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/MemberNameCheck.java", "commitBeforeChange": "78ccdd54ce953c433981052246e95008531f21d2", "commitAfterChange": "2628fc197d9b12bb03324c46478ef840166cc075", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     protected final boolean mustCheckName(DetailAST aAST)", "signatureAfterChange": "      @Override     protected final boolean mustCheckName(DetailAST aAST)", "diff": ["-        return (!isStatic && !ScopeUtils.inInterfaceOrAnnotationBlock(aAST)", "+        return (!isStatic && !ScopeUtils.inAnnotationBlock(aAST)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7da320ee5214024ae8c56966aee89ac9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/doclets/TokenTypesDoclet.java", "commitBeforeChange": "1e541f0b988df01b3ff13885521d39790df74cef", "commitAfterChange": "8985e645a8a591b19c729cff16b8440b70a8022e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static boolean validOptions(String[][] options,                                        DocErrorReporter reporter)", "signatureAfterChange": "     public static boolean checkOptions(String[][] options, DocErrorReporter reporter)", "diff": ["-    public static boolean validOptions(String[][] options,", "-                                       DocErrorReporter reporter) {", "+    public static boolean checkOptions(String[][] options, DocErrorReporter reporter) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7db14258fcdcfca207545cd23da75f1e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void setConfig(File aFile)", "signatureAfterChange": "     public void setConfig(File file)", "diff": ["-    /** @param aFile the configuration file to use */", "-    public void setConfig(File aFile)", "+    /** @param file the configuration file to use */", "+    public void setConfig(File file)", "-        setConfigLocation(aFile.getAbsolutePath());", "+        setConfigLocation(file.getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dc9d38504b1895b44480ce744786840", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "commitAfterChange": "4c1148db9982918e65f8d1156e8fb9c07b206fc9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void reportCComment(int startLineNo, int startColNo,             int endLineNo, int endColNo)", "signatureAfterChange": "     public void reportCComment(int startLineNo, int startColNo,             int endLineNo, int endColNo)", "diff": ["-        final String[] cc = extractCComment(startLineNo, startColNo,", "+        final String[] cComment = extractCComment(startLineNo, startColNo,", "-        final Comment comment = new Comment(cc, startColNo, endLineNo,", "+        final Comment comment = new Comment(cComment, startColNo, endLineNo,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7deb4c7c1ddb42571e02b0b642421eaa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void checkParam(final DetailAST aParam)", "signatureAfterChange": "     private void checkParam(final DetailAST param)", "diff": ["-    private void checkParam(final DetailAST aParam)", "+    private void checkParam(final DetailAST param)", "-        if (!aParam.branchContains(TokenTypes.FINAL) && !isIgnoredParam(aParam)) {", "-            final DetailAST paramName = aParam.findFirstToken(TokenTypes.IDENT);", "-            final DetailAST firstNode = CheckUtils.getFirstNode(aParam);", "+        if (!param.branchContains(TokenTypes.FINAL) && !isIgnoredParam(param)) {", "+            final DetailAST paramName = param.findFirstToken(TokenTypes.IDENT);", "+            final DetailAST firstNode = CheckUtils.getFirstNode(param);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7df268e5733480493fd943323696e64e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setCaseSensitive(boolean aCaseSensitive)", "signatureAfterChange": "     public void setCaseSensitive(boolean caseSensitive)", "diff": ["-    public void setCaseSensitive(boolean aCaseSensitive)", "+    public void setCaseSensitive(boolean caseSensitive)", "-        mCaseSensitive = aCaseSensitive;", "+        this.caseSensitive = caseSensitive;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dfaa32a05726fce3221fd8a9fce4172", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static void main(String... args) throws UnsupportedEncodingException,             FileNotFoundException", "signatureAfterChange": "     public static void main(String... args) throws UnsupportedEncodingException,             FileNotFoundException", "diff": ["-            if (commandLine.hasOption(\"v\")) {", "+            if (commandLine.hasOption(OPTION_V_NAME)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e154d7c60a71f438fe7d6f6672e621d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule21filename/OuterTypeFilenameTest.java", "commitBeforeChange": "6fbe3f344a5507d1368d1564647ffacb12463d17", "commitAfterChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void outerTypeFilenameTest_1() throws Exception", "signatureAfterChange": "      @Test     public void outerTypeFilenameTest1() throws Exception", "diff": ["-    public void outerTypeFilenameTest_1() throws Exception {", "+    public void outerTypeFilenameTest1() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e4156d51e9be08405dfee3682aaa24e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void checkEmptyJavadoc(TextBlock comment)", "signatureAfterChange": "     private void checkEmptyJavadoc(TextBlock comment)", "diff": ["-            log(comment.getStartLineNo(), \"javadoc.empty\");", "+            log(comment.getStartLineNo(), EMPTY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e823348d72df9ee50044c124f34c500", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "be6d271ac34efc3daed3dbb873ab8060723dd4f8", "commitAfterChange": "b06dd9801e56887f7da1bbc8b55233e0ff5f5115", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void setHeaderignoreline(int aNum)", "signatureAfterChange": "     public void setHeaderIgnoreLine(int aNum)", "diff": ["-    public void setHeaderignoreline(int aNum)", "+    public void setHeaderIgnoreLine(int aNum)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e87211e97870fe90de7d35b5eb534b3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected final int getLineStart(DetailAST aAst)", "signatureAfterChange": "     protected final int getLineStart(DetailAST ast)", "diff": ["-    protected final int getLineStart(DetailAST aAst)", "+    protected final int getLineStart(DetailAST ast)", "-        final String line = mIndentCheck.getLine(aAst.getLineNo() - 1);", "+        final String line = indentCheck.getLine(ast.getLineNo() - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7eaa1cf7f6f46c21335af507e3dfa491", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public int getBasicOffset()", "signatureAfterChange": "     public int getBasicOffset()", "diff": ["-        return mBasicOffset;", "+        return basicOffset;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7eb24501747b7ecb96251c0d3c06fd80", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/MethodCountCheck.java", "commitBeforeChange": "a6e4d310c0e38d73e7816a5fb57e66fc221d79ec", "commitAfterChange": "5c6e03a868c0f756ccd3bb9b796febbbbf25bd4e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void setMaxPackage(int maxPackage)", "signatureAfterChange": "     public void setMaxPackage(int aValue)", "diff": ["-    public void setMaxPackage(int maxPackage)", "+     */", "+    public void setMaxPackage(int aValue)", "-        mMaxPackage = maxPackage;", "+        mMaxPackage = aValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ec8b3f85f4a833b71134366c97ab681", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "         public int getFirstColumn()", "signatureAfterChange": "         public int getFirstColumn()", "diff": ["-            return mFirstColumn;", "+            return firstColumn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ed93b22281029cf0b8a79f62964803c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule21filename/OuterTypeFilenameTest.java", "commitBeforeChange": "6fbe3f344a5507d1368d1564647ffacb12463d17", "commitAfterChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void outerTypeFilenameTest_2() throws Exception", "signatureAfterChange": "      @Test     public void outerTypeFilenameTest2() throws Exception", "diff": ["-    public void outerTypeFilenameTest_2() throws Exception {", "+    public void outerTypeFilenameTest2() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ede3c041502f77ededb59bffde76a1a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/TokenTypes.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static String getTokenName(int aID)", "signatureAfterChange": "     public static String getTokenName(int iD)", "diff": ["-    public static String getTokenName(int aID)", "+    public static String getTokenName(int iD)", "-        if (aID > TOKEN_VALUE_TO_NAME.length - 1) {", "-            throw new IllegalArgumentException(\"given id \" + aID);", "+        if (iD > TOKEN_VALUE_TO_NAME.length - 1) {", "+            throw new IllegalArgumentException(\"given id \" + iD);", "-        final String name = TOKEN_VALUE_TO_NAME[aID];", "+        final String name = TOKEN_VALUE_TO_NAME[iD];", "-            throw new IllegalArgumentException(\"given id \" + aID);", "+            throw new IllegalArgumentException(\"given id \" + iD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7eee526b802e1f4a4a0f1733e8cc92c9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "782da01103fc7ec8e69a3da7a5ef800dac866a8b", "commitAfterChange": "68959eeefff4d4a5b295cefbec242c643d523c6b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processIdent(DetailAST ast)", "signatureAfterChange": "     private void processIdent(DetailAST ast)", "diff": ["-            case TokenTypes.METHOD_CALL: {", "+            case TokenTypes.METHOD_CALL:", "-            }", "-            default: {", "+            default:", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f2ef735ef5603ce19d78929f62ccf18", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void setArrayInitIndent(int aArrayInitIndent)", "signatureAfterChange": "     public void setArrayInitIndent(int arrayInitIndent)", "diff": ["-    public void setArrayInitIndent(int aArrayInitIndent)", "+    public void setArrayInitIndent(int arrayInitIndent)", "-        mArrayInitIndentationAmount = aArrayInitIndent;", "+        arrayInitIndentationAmount = arrayInitIndent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f56b7c17e6336aa5deb09348c5ad2b2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setClasspath(Path aClasspath)", "signatureAfterChange": "     public void setClasspath(Path classpath)", "diff": ["-    public void setClasspath(Path aClasspath)", "+    public void setClasspath(Path classpath)", "-        if (mClasspath == null) {", "-            mClasspath = aClasspath;", "+        if (classpath == null) {", "+            this.classpath = classpath;", "-            mClasspath.append(aClasspath);", "+            this.classpath.append(classpath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f56cef02e463a0f753396300d083ae8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "856fdd282b16435644768d7f7d513c24d78116a9", "commitAfterChange": "18d65a1993ddb57b7de36092614413d2eb6bc69b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     LocalizedMessage[] getMessages()", "signatureAfterChange": "     LocalizedMessage[] getMessages()", "diff": ["-        checkImports();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f703e7f699df05fa0dfedc3a88c89b3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void processIter(DetailAST aRoot, AstState aAstState)", "signatureAfterChange": "     private void processIter(DetailAST root, AstState astState)", "diff": ["-    private void processIter(DetailAST aRoot, AstState aAstState)", "+    private void processIter(DetailAST root, AstState astState)", "-        DetailAST curNode = aRoot;", "+        DetailAST curNode = root;", "-            notifyVisit(curNode, aAstState);", "+            notifyVisit(curNode, astState);", "-                notifyLeave(curNode, aAstState);", "+                notifyLeave(curNode, astState);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f7368669aef9baeb2904c638ba7dbc1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setLineSeparator(String aLineSeparator)", "signatureAfterChange": "     public void setLineSeparator(String lineSeparatorParam)", "diff": ["-    public void setLineSeparator(String aLineSeparator)", "+    public void setLineSeparator(String lineSeparatorParam)", "-            mLineSeparator =", "-                Enum.valueOf(LineSeparatorOption.class, aLineSeparator.trim()", "+            lineSeparator =", "+                Enum.valueOf(LineSeparatorOption.class, lineSeparatorParam.trim()", "-            throw new ConversionException(\"unable to parse \" + aLineSeparator,", "+            throw new ConversionException(\"unable to parse \" + lineSeparatorParam,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f9c7799d34d84259998bdc0d419ffd1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private String getPackageName()", "signatureAfterChange": "     private String getPackageName()", "diff": ["-        for (String subPackage : mPackageStack) {", "+        for (String subPackage : packageStack) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fb86e322c72a1b92b94adf2854f8f8e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java", "commitBeforeChange": "78a5fd3494e8f3fe6e5edd0925f46b43583451fe", "commitAfterChange": "3cd6646941eca3da7d3b9a221c88e4c1d214876e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r     private void resetState()", "signatureAfterChange": "     private void resetState()", "diff": ["-     */\r", "-    private void resetState()\r", "-    {\r", "-        mCurrentMatches = 0;\r", "-        mCharacters.clear();\r", "-    }\r", "+     */", "+    private void resetState()", "+    {", "+        mCurrentMatches = 0;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fbe3f78d82b2751eb2e8dfe70c6f566", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "a13ebd482ce5dd891ba99d4c22a7cd5ff7d8e2dc", "commitAfterChange": "dad4fa599aa3570980fcaff4cb5f37941847a7a1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testFileExtensions() throws Exception", "signatureAfterChange": "      @Test     public void testFileExtensions() throws Exception", "diff": ["-        final Checker c = new Checker();", "+        final Checker checker = new Checker();", "-        File f = new File(\"file.pdf\");", "-        files.add(f);", "-        f = new File(\"file.java\");", "-        files.add(f);", "+        File file = new File(\"file.pdf\");", "+        files.add(file);", "+        file = new File(\"file.java\");", "+        files.add(file);", "-        c.setFileExtensions(fileExtensions);", "-        final int counter = c.process(files);", "+        checker.setFileExtensions(fileExtensions);", "+        final int counter = checker.process(files);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8008571486189bbc28fe5fcfd70f8422", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static Configuration loadConfiguration(InputSource configSource,         PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(InputSource configSource,         PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "diff": ["-            throw new CheckstyleException(\"unable to parse configuration stream\"", "+            throw new CheckstyleException(UNABLE_TO_PARSE_EXCEPTION_PREFIX", "-            throw new CheckstyleException(\"unable to parse configuration stream\", e);", "+            throw new CheckstyleException(UNABLE_TO_PARSE_EXCEPTION_PREFIX, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8010320f745118ad63377456ee0c4385", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     protected final Class<?> tryLoadClass(Token aIdent, String aCurrentClass)", "signatureAfterChange": "     protected final Class<?> tryLoadClass(Token ident, String currentClass)", "diff": ["-    protected final Class<?> tryLoadClass(Token aIdent, String aCurrentClass)", "+    protected final Class<?> tryLoadClass(Token ident, String currentClass)", "-        final Class<?> clazz = resolveClass(aIdent.getText(), aCurrentClass);", "+        final Class<?> clazz = resolveClass(ident.getText(), currentClass);", "-            logLoadError(aIdent);", "+            logLoadError(ident);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8033976ec0b45796b4f15a093b9bfcb0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     private void checkReturnTag(List<JavadocTag> aTags, int aLineNo,         boolean aReportExpectedTags)", "signatureAfterChange": "     private void checkReturnTag(List<JavadocTag> tags, int lineNo,         boolean reportExpectedTags)", "diff": ["-    private void checkReturnTag(List<JavadocTag> aTags, int aLineNo,", "-        boolean aReportExpectedTags)", "+    private void checkReturnTag(List<JavadocTag> tags, int lineNo,", "+        boolean reportExpectedTags)", "-        final ListIterator<JavadocTag> it = aTags.listIterator();", "+        final ListIterator<JavadocTag> it = tags.listIterator();", "-        if (!found && !mAllowMissingReturnTag && aReportExpectedTags) {", "-            log(aLineNo, \"javadoc.return.expected\");", "+        if (!found && !allowMissingReturnTag && reportExpectedTags) {", "+            log(lineNo, \"javadoc.return.expected\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8035df533ef34cacf25182f4abeede3e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "acdf7cb11cfffdaa70b801a736af0f29a36c79be", "commitAfterChange": "7b6785343e306845f432154a1a5026ad25306226", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Override     public final void visitToken(DetailAST aBlockCommentAst)", "signatureAfterChange": "      @Override     public final void visitToken(DetailAST aBlockCommentAst)", "diff": ["-                log(parseErrorMessage.getLineNo(), parseErrorMessage.getColumnNo()", "-                        , parseErrorMessage.getMessage());", "+                log(parseErrorMessage.getLineNo(), parseErrorMessage.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80528462e2acd524fd2fdc78ce68c1f3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/CSVFilter.java", "commitBeforeChange": "4fd298b00126d60147dce7631c6e0d3e0921f82f", "commitAfterChange": "0c61e5d7a5a4c9f7e1a649559151b1fab98c3564", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public CSVFilter(String pattern)         throws NumberFormatException", "signatureAfterChange": "     public CSVFilter(String pattern)", "diff": ["-    public CSVFilter(String pattern)", "-        throws NumberFormatException {", "+    public CSVFilter(String pattern) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "806e7bd47f46944c33113442e3ebf79d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java", "commitBeforeChange": "6839ac4fd83dde7060c8f6f28e75aa3d6ff2456b", "commitAfterChange": "31f6765fdcf2233ca6c53730c2fc196576557f66", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static boolean canReturnOnlyBooleanLiteral(AST ast)", "signatureAfterChange": "     private static boolean canReturnOnlyBooleanLiteral(AST ast)", "diff": ["-        final AST firstStmnt = ast.getFirstChild();", "-        return isBooleanLiteralReturnStatement(firstStmnt);", "+        final AST firstStatement = ast.getFirstChild();", "+        return isBooleanLiteralReturnStatement(firstStatement);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8080357f08891a585324c0f5e8553e90", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineSet.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Integer getStartColumn(Integer aLineNum)", "signatureAfterChange": "     public Integer getStartColumn(Integer lineNum)", "diff": ["-    public Integer getStartColumn(Integer aLineNum)", "+    public Integer getStartColumn(Integer lineNum)", "-        return mLines.get(aLineNum);", "+        return lines.get(lineNum);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "808d7a73882102c968497d41090a3e31", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private boolean isInIgnoreOccurrenceContext(DetailAST aAST)", "signatureAfterChange": "     private boolean isInIgnoreOccurrenceContext(DetailAST ast)", "diff": ["-    private boolean isInIgnoreOccurrenceContext(DetailAST aAST)", "+    private boolean isInIgnoreOccurrenceContext(DetailAST ast)", "-        for (DetailAST token = aAST;", "+        for (DetailAST token = ast;", "-            if (mIgnoreOccurrenceContext.get(type)) {", "+            if (ignoreOccurrenceContext.get(type)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "809c593191782189ceaceb1329148529", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/TreeTableModelAdapter.java", "commitBeforeChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "commitAfterChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public TreeTableModelAdapter(TreeTableModel aTreeTableModel, JTree aTree)", "signatureAfterChange": "      public TreeTableModelAdapter(TreeTableModel treeTableModel, JTree tree)", "diff": ["-    public TreeTableModelAdapter(TreeTableModel aTreeTableModel, JTree aTree)", "+    public TreeTableModelAdapter(TreeTableModel treeTableModel, JTree tree)", "-        this.mTree = aTree;", "-        this.mTreeTableModel = aTreeTableModel;", "+        this.tree = tree;", "+        this.treeTableModel = treeTableModel;", "-        aTree.addTreeExpansionListener(new TreeExpansionListener()", "+        tree.addTreeExpansionListener(new TreeExpansionListener()", "-        aTreeTableModel.addTreeModelListener(new TreeModelListener()", "+        treeTableModel.addTreeModelListener(new TreeModelListener()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "809dda93ce36531d7abced226d7a2d4d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public String getLine(int aIndex)", "signatureAfterChange": "     public String getLine(int index)", "diff": ["-    public String getLine(int aIndex)", "+    public String getLine(int index)", "-        return mText.get(aIndex);", "+        return text.get(index);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80a0c798bfaaaed9b03173525bbf15a0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheck.java", "commitBeforeChange": "521dacce7582a4349a9b02980c3e849e83c023fb", "commitAfterChange": "82d8e91024a57a96fbb6410dacb29d6a3f582903", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static DetailAST getSuppressWarnings(DetailAST ast)", "signatureAfterChange": "     private static DetailAST getSuppressWarnings(DetailAST ast)", "diff": ["-            ast, SuppressWarningsCheck.SUPPRESS_WARNINGS);", "+            ast, SUPPRESS_WARNINGS);", "-                ast, SuppressWarningsCheck.FQ_SUPPRESS_WARNINGS);", "+                ast, FQ_SUPPRESS_WARNINGS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80bb2c8c1889b439ee1968ed43bc7c57", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public FileText(File file, String charsetName) throws IOException", "signatureAfterChange": "     public FileText(File file, String charsetName) throws IOException", "diff": ["-        final ArrayList<String> lines = new ArrayList<>();", "+        final ArrayList<String> textLines = new ArrayList<>();", "-            lines.add(line);", "+            textLines.add(line);", "-        this.lines = lines.toArray(new String[lines.size()]);", "+        this.lines = textLines.toArray(new String[textLines.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80da9d9735a685563b4870c4248e8fab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "         public void checkCount(DetailAST aAST)", "signatureAfterChange": "         public void checkCount(DetailAST ast)", "diff": ["-        public void checkCount(DetailAST aAST)", "+        public void checkCount(DetailAST ast)", "-            if (mChecking && (mCount > getMax())) {", "-                final DetailAST parentAST = aAST.getParent();", "+            if (checking && (count > getMax())) {", "+                final DetailAST parentAST = ast.getParent();", "-                    \"booleanExpressionComplexity\", mCount, getMax());", "+                    \"booleanExpressionComplexity\", count, getMax());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80e681f4989853d4bb2181f3b68bcbdc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-    public void beginTree(DetailAST aRootAST)", "+    public void beginTree(DetailAST rootAST)", "-        mLastGroup = Integer.MIN_VALUE;", "-        mLastImportLine = Integer.MIN_VALUE;", "-        mLastImport = \"\";", "-        mLastImportStatic = false;", "-        mBeforeFirstImport = true;", "+        lastGroup = Integer.MIN_VALUE;", "+        lastImportLine = Integer.MIN_VALUE;", "+        lastImport = \"\";", "+        lastImportStatic = false;", "+        beforeFirstImport = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "810517c519dbaf40bf053abf4e165a4c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/AuditEvent.java", "commitBeforeChange": "7480bff68a7afc750d64e9cb6b1a633631e633f0", "commitAfterChange": "a14cef2fecebdd896b2fcdfa3a337ed1617207c5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public SeverityLevel getSeverityLevel()", "signatureAfterChange": "     public SeverityLevel getSeverityLevel()", "diff": ["-            ? SeverityLevel.WARNING", "+            ? SeverityLevel.INFO"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "812d0dccedbf9b3c5bb420706b48484f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/CheckUtils.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static double parseFloat(String aText, int aType)", "signatureAfterChange": "     public static double parseFloat(String text, int type)", "diff": ["-    public static double parseFloat(String aText, int aType)", "+    public static double parseFloat(String text, int type)", "-        return (float) parseDouble(aText, aType);", "+        return (float) parseDouble(text, type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81310ea0f866589487fc2a01963fa755", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocNodeImpl.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public int getIndex()", "signatureAfterChange": "      @Override     public int getIndex()", "diff": ["-        return mIndex;", "+        return index;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8137e8c8b5c8a2656fbe54476c66b421", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/RedundantImportCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST aRootAST)", "diff": ["-        mPkgName = null;", "-        mImports.clear();", "-        mStaticImports.clear();", "+        pkgName = null;", "+        imports.clear();", "+        staticImports.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "815909042bec5049a9ca4c910e16cddf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "          @Override         public boolean equals(Object o)", "signatureAfterChange": "          @Override         public boolean equals(Object other)", "diff": ["-        public boolean equals(Object o) {", "-            if (this == o) {", "+        public boolean equals(Object other) {", "+            if (this == other) {", "-            if (o == null || getClass() != o.getClass()) {", "+            if (other == null || getClass() != other.getClass()) {", "-            final Tag tag = (Tag) o;", "+            final Tag tag = (Tag) other;", "-                    && Objects.equals(on, tag.on)", "+                    && Objects.equals(reportingOn, tag.reportingOn)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "815a6aadbec85e1cac7366135cd863ed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void visitMethodDef(DetailAST aMethodDef)", "signatureAfterChange": "     private void visitMethodDef(DetailAST methodDef)", "diff": ["-    private void visitMethodDef(DetailAST aMethodDef)", "+    private void visitMethodDef(DetailAST methodDef)", "-        if (isCheckedMethod(aMethodDef)) {", "-            checkClassName(aMethodDef);", "+        if (isCheckedMethod(methodDef)) {", "+            checkClassName(methodDef);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "816394b974c580598e19459150a80e53", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "commitAfterChange": "cb5a59fc6baf5de204e3cc99be6ba9865e44350a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "         public Tag(int line, int column, String text, boolean on, SuppressionCommentFilter filter)", "signatureAfterChange": "         public Tag(int line, int column, String text, boolean on, SuppressionCommentFilter filter)", "diff": ["-                        expandFromCoont(text, filter.checkFormat, filter.onRegexp);", "+                        expandFromComment(text, filter.checkFormat, filter.onRegexp);", "-                            expandFromCoont(text, filter.messageFormat, filter.onRegexp);", "+                            expandFromComment(text, filter.messageFormat, filter.onRegexp);", "-                        expandFromCoont(text, filter.checkFormat, filter.offRegexp);", "+                        expandFromComment(text, filter.checkFormat, filter.offRegexp);", "-                            expandFromCoont(", "-                                text,", "-                                filter.messageFormat,", "-                                filter.offRegexp);", "+                            expandFromComment(", "+                                    text,", "+                                    filter.messageFormat,", "+                                    filter.offRegexp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "816f75ff96e1f619db10b56608ef4975", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "          public void setParseErrorMessage(ParseErrorMessage aParseErrorMessage)", "signatureAfterChange": "          public void setParseErrorMessage(ParseErrorMessage parseErrorMessage)", "diff": ["-        public void setParseErrorMessage(ParseErrorMessage aParseErrorMessage)", "+        public void setParseErrorMessage(ParseErrorMessage parseErrorMessage)", "-            this.mParseErrorMessage = aParseErrorMessage;", "+            this.parseErrorMessage = parseErrorMessage;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81ba524ac82d263efe1cfea752bb913f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected boolean isSubclass(Class<?> aChild, Class<?> aParent)", "signatureAfterChange": "     protected boolean isSubclass(Class<?> child, Class<?> parent)", "diff": ["-    protected boolean isSubclass(Class<?> aChild, Class<?> aParent)", "+    protected boolean isSubclass(Class<?> child, Class<?> parent)", "-        return (aParent != null) && (aChild != null)", "-            &&  aParent.isAssignableFrom(aChild);", "+        return (parent != null) && (child != null)", "+            &&  parent.isAssignableFrom(child);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81c303f4c4d325645105269597fef526", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/LineSeparatorOption.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public int length()", "signatureAfterChange": "     public int length()", "diff": ["-        return mLineSeparator.length();", "+        return lineSeparator.length();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81c827fda880c737ca0d61bdb6d954cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setJavaFiveCompatibility(final boolean aCompatibility)", "signatureAfterChange": "     public void setJavaFiveCompatibility(final boolean compatibility)", "diff": ["-    public void setJavaFiveCompatibility(final boolean aCompatibility)", "+    public void setJavaFiveCompatibility(final boolean compatibility)", "-        this.mJavaFiveCompatibility = aCompatibility;", "+        this.javaFiveCompatibility = compatibility;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81d0f191803e77b4bf16388194093d5a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "65ca7775ba7d0b649c16cfdc8a1447f41867c870", "commitAfterChange": "6ffc8dd26075456b055ffcd35d3915c23049bfbb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void process(File aFile)", "signatureAfterChange": "     private void process(File aFile)", "diff": ["-            walk(rootAST, contents, mConfig.getClassLoader());", "+            walk(rootAST, contents);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81e58a64162c31e7aabbc524faca196f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private static int countDomains(String aImportPath)", "signatureAfterChange": "     private static int countDomains(String importPath)", "diff": ["-    private static int countDomains(String aImportPath)", "+    private static int countDomains(String importPath)", "-        final StringTokenizer tokens = new StringTokenizer(aImportPath, \".\");", "+        final StringTokenizer tokens = new StringTokenizer(importPath, \".\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8211479081ae716470febfdc5a2f2444", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void setMethodMaximum(int aMethodMax)", "signatureAfterChange": "     public void setMethodMaximum(int methodMax)", "diff": ["-    public void setMethodMaximum(int aMethodMax)", "+    public void setMethodMaximum(int methodMax)", "-        mMethodMax = aMethodMax;", "+        this.methodMax = methodMax;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82377e3432ecad9e9c90e2baf7dbc4ac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void setInfluenceFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setInfluenceFormat(String format)         throws ConversionException", "diff": ["-    public void setInfluenceFormat(String aFormat)", "+    public void setInfluenceFormat(String format)", "-        // check that aFormat parses", "+        // check that format parses", "-            Utils.getPattern(aFormat);", "+            Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);", "-        mInfluenceFormat = aFormat;", "+        influenceFormat = format;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "826e80692ba3457a44f4cec50eccdd12", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "d814d1352b63136a400cd8f4dffd03d68c9ccd24", "commitAfterChange": "3edd1b53a5d8d407fd33d8c514db8bc1c7274fe5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected boolean hasCurlys()", "signatureAfterChange": "     protected boolean hasCurlies()", "diff": ["-    protected boolean hasCurlys() {", "+    protected boolean hasCurlies() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82903deebcf448575b3bb072f8b90ed3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private boolean matchesThirdPartyImportGroup(boolean aStatic,         String aCurrentImport, String aCurrentGroup)", "signatureAfterChange": "     private boolean matcheasthirdPartyImportGroup(boolean isStatic,         String currentImport, String currentGroup)", "diff": ["-    private boolean matchesThirdPartyImportGroup(boolean aStatic,", "-        String aCurrentImport, String aCurrentGroup)", "+    private boolean matcheasthirdPartyImportGroup(boolean isStatic,", "+        String currentImport, String currentGroup)", "-        return !aStatic && THIRD_PARTY_PACKAGE_RULE_GROUP.equals(aCurrentGroup)", "-                && mThirdPartyPackageRegExp.matcher(aCurrentImport).find()", "-                && !mStandardPackageRegExp.matcher(aCurrentImport).find();", "+        return !isStatic && THIRD_PARTY_PACKAGE_RULE_GROUP.equals(currentGroup)", "+                && thirdPartyPackageRegExp.matcher(currentImport).find()", "+                && !standardPackageRegExp.matcher(currentImport).find();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82fb3ccdcf53739bc8a5e262a9235b9d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setCaseIndent(int aAmount)", "signatureAfterChange": "     public void setCaseIndent(int amount)", "diff": ["-    public void setCaseIndent(int aAmount)", "+    public void setCaseIndent(int amount)", "-        mCaseIndentationAmount = aAmount;", "+        caseIndentationAmount = amount;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8320dcb27dbda3b2d84cbba60e4f240c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setAllowedAbbreviationLength(int aAllowedAbbreviationLength)", "signatureAfterChange": "     public void setAllowedAbbreviationLength(int allowedAbbreviationLength)", "diff": ["-    public void setAllowedAbbreviationLength(int aAllowedAbbreviationLength)", "+    public void setAllowedAbbreviationLength(int allowedAbbreviationLength)", "-        mAllowedAbbreviationLength = aAllowedAbbreviationLength;", "+        this.allowedAbbreviationLength = allowedAbbreviationLength;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83251ffb42eeb0d11209e1e7cbc6ae90", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void processTypeParams(DetailAST ast)", "signatureAfterChange": "     private void processTypeParams(DetailAST ast)", "diff": ["-                    final AbstractClassInfo ci =", "+                    final AbstractClassInfo classInfo =", "-                    paramsMap.put(alias, ci);", "+                    paramsMap.put(alias, classInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "836e5951b5eeea1a6f633512bf9a875f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-    public void finishTree(DetailAST aRootAST)", "+    public void finishTree(DetailAST rootAST)", "-        if (mImportToGroupList.isEmpty()) {", "+        if (importToGroupList.isEmpty()) {", "-        final ImportDetails firstImport = mImportToGroupList.get(0);", "+        final ImportDetails firstImport = importToGroupList.get(0);", "-        int groupNumber = mCustomImportOrderRules.indexOf(currentGroup);", "+        int groupNumber = customImportOrderRules.indexOf(currentGroup);", "-        for (ImportDetails importObject : mImportToGroupList) {", "+        for (ImportDetails importObject : importToGroupList) {", "-            final String fullImportIdent = importObject.mImportFullPath;", "+            final String fullImportIdent = importObject.importFullPath;", "-                if (mCustomImportOrderRules.size() > groupNumber + 1) {", "+                if (customImportOrderRules.size() > groupNumber + 1) {", "-                        if (mSeparateLineBetweenGroups && previousImport != null", "+                        if (separateLineBetweenGroups && previousImport != null", "-                        groupNumber = mCustomImportOrderRules.indexOf(nextGroup);", "+                        groupNumber = customImportOrderRules.indexOf(nextGroup);", "-            else if (mSortImportsInGroupAlphabetically", "+            else if (sortImportsInGroupAlphabetically"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83a615d7bcf913dc43ca1e788ce6a7c8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Override     protected final void logLoadError(Token ident)", "signatureAfterChange": "      @Override     protected final void logLoadError(Token ident)", "diff": ["-            \"javadoc.classInfo\",", "+            MSG_CLASS_INFO,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8403fc55d653f83bf537a2a69281ed97", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/doclets/CheckDocsDoclet.java", "commitBeforeChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "commitAfterChange": "319f297e13e5c175a62489ff555cff7c463d3c7b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static void writeXdocsFooter(final PrintWriter aPrintWriter)", "signatureAfterChange": "     private static void writeXdocsFooter(final PrintWriter printWriter)", "diff": ["-    private static void writeXdocsFooter(final PrintWriter aPrintWriter)", "+    private static void writeXdocsFooter(final PrintWriter printWriter)", "-        aPrintWriter.println(\"</body>\");", "-        aPrintWriter.println(\"</document>\");", "-        aPrintWriter.flush();", "+        printWriter.println(\"</body>\");", "+        printWriter.println(\"</document>\");", "+        printWriter.flush();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "841d79eb2df48bb6cf0e39a22a6b6393", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "a1422eed4e0261824f48a1ddf647dd90cb67063a", "commitAfterChange": "aac769a0be0dc77d3130a86fac15c9fcda254170", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "          @Test     public void testCustomMessages() throws Exception", "signatureAfterChange": "      @Test     public void testCustomMessages() throws CheckstyleException", "diff": ["-    ", "+", "-    public void testCustomMessages() throws Exception", "+    public void testCustomMessages() throws CheckstyleException", "-        assertTrue(((DefaultConfiguration) grandchildren[0]).getMessages().containsKey(\"name.invalidPattern\"));", "+        assertTrue(((DefaultConfiguration) grandchildren[0]).getMessages()", "+            .containsKey(\"name.invalidPattern\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "843686105c7f1e52f908bc6b4c02ec52", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LineColumn.java", "commitBeforeChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "commitAfterChange": "4c1148db9982918e65f8d1156e8fb9c07b206fc9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Override     public boolean equals(Object o)", "signatureAfterChange": "     @Override     public boolean equals(Object o)", "diff": ["-        final LineColumn that = (LineColumn) o;", "-        return Objects.equals(line, that.line)", "-                && Objects.equals(col, that.col);", "+        final LineColumn lineColumn = (LineColumn) o;", "+        return Objects.equals(line, lineColumn.line)", "+                && Objects.equals(col, lineColumn.col);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "847c18cabd07ea68bc890eefcdbe9b23", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void logMatch(final int aLineNo,         final int aColNum, final String aWarningText)", "signatureAfterChange": "     private void logMatch(final int lineNo,         final int colNum, final String warningText)", "diff": ["-    private void logMatch(final int aLineNo,", "-        final int aColNum, final String aWarningText)", "+    private void logMatch(final int lineNo,", "+        final int colNum, final String warningText)", "-        final Matcher matcher = this.getRegexp().matcher(aWarningText);", "+        final Matcher matcher = this.getRegexp().matcher(warningText);", "-            this.log(aLineNo, aColNum,", "-                    MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, aWarningText);", "+            this.log(lineNo, colNum,", "+                    MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, warningText);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "848b7c16c3c83421572489afc45adcfd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java", "commitBeforeChange": "64daa21b1c30061bba4c0d030f4df913f53c4f17", "commitAfterChange": "eb68cde2e314d594ccde45e0716fe75b9770fa37", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static Object makeObject(String[] aPackages, ClassLoader aLoader,         String aClassName)         throws CheckstyleException", "signatureAfterChange": "                 public static Object makeObject(String[] aPackages, ClassLoader aLoader,         String aName)         throws CheckstyleException", "diff": ["-     */", "+     */            ", "-        String aClassName)", "+        String aName)", "-        return factory.doMakeObject(aPackages, aLoader, aClassName);", "+        return factory.doMakeObject(aPackages, aLoader, aName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84914e94e416b783008fdcabb1983184", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "2cf54ade2182e29c413f23e2235a896247d7a2ad", "commitAfterChange": "d282053d9ce02c13c779decfd079a8305086f752", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     @Test     public void testGoodOverrideFromObjectJ5Compat() throws Exception", "signatureAfterChange": "     @Test     public void testGoodOverrideFromObjectJ5Compatible() throws Exception", "diff": ["-    public void testGoodOverrideFromObjectJ5Compat() throws Exception {", "+    public void testGoodOverrideFromObjectJ5Compatible() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84a6790aade143593e70e3aff00779b3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "eaad55fdba73e17e103dc6600867f26fd6a3896b", "commitAfterChange": "5cf355fad4b8bc613962aac2f52b48d5726f2acc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void addError(AuditEvent aEvt)", "signatureAfterChange": "     public void addError(AuditEvent aEvt)", "diff": ["-            final int bufLen = fileName.length() + message.length() + 12;", "+            final int bufLen = fileName.length() + message.length()", "+                + BUFFER_CUSHION;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84b8c13f401bdcae2f7ff21bcaa78ef8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "92358288d94bd806a7cdd0958f382d81416542c8", "commitAfterChange": "2795663daebc7d8b608992327e4580d37bb32a6d", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "     public void setEnableCheckUnusedThrows(final boolean aEnable)", "signatureAfterChange": "     public void setCheckUnusedThrows(final boolean aEnable)", "diff": ["-    public void setEnableCheckUnusedThrows(final boolean aEnable)", "+    public void setCheckUnusedThrows(final boolean aEnable)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84ba2b2eb843f1bddaaa25a8f3ef4c9b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private String getDisallowedAbbreviation(String string)", "signatureAfterChange": "     private String getDisallowedAbbreviation(String str)", "diff": ["-    private String getDisallowedAbbreviation(String string)", "+    private String getDisallowedAbbreviation(String str)", "-        for (int index = 0; index < string.length(); index++) {", "-            final char symbol = string.charAt(index);", "+        for (int index = 0; index < str.length(); index++) {", "+            final char symbol = str.charAt(index);", "-                        result = string.substring(beginIndex, endIndex);", "+                        result = str.substring(beginIndex, endIndex);", "-            final int endIndex = string.length();", "+            final int endIndex = str.length();", "-                result = string.substring(beginIndex, endIndex);", "+                result = str.substring(beginIndex, endIndex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84f11f89a2bbb6e90aa62e3cbc547268", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static Map<String, Set<File>> arrangePropertyFiles(         List<File> aPropFiles, String aBasenameSeparator)", "signatureAfterChange": "     private static Map<String, Set<File>> arrangePropertyFiles(         List<File> propFiles, String basenameSeparator)", "diff": ["-        List<File> aPropFiles, String aBasenameSeparator)", "+        List<File> propFiles, String basenameSeparator)", "-        for (final File f : aPropFiles) {", "+        for (final File f : propFiles) {", "-                aBasenameSeparator);", "+                basenameSeparator);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "852ade0b2a3ff95ee808ef891dca7605", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected final int getFirstLine(int aStartLine, DetailAST aTree)", "signatureAfterChange": "     protected final int getFirstLine(int startLine, DetailAST tree)", "diff": ["-    protected final int getFirstLine(int aStartLine, DetailAST aTree)", "+    protected final int getFirstLine(int startLine, DetailAST tree)", "-        int realStart = aStartLine;", "-        final int currLine = aTree.getLineNo();", "+        int realStart = startLine;", "+        final int currLine = tree.getLineNo();", "-        for (DetailAST node = aTree.getFirstChild();", "+        for (DetailAST node = tree.getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "852d5655900e7b1812477ba8b9ec96bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private static String getVisibilityScope(DetailAST variableDef)", "signatureAfterChange": "     private static String getVisibilityScope(DetailAST variableDef)", "diff": ["-        String accessModifier = \"package\";", "+        String accessModifier = PACKAGE_ACCESS_MODIFIER;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "854483f32f232b181e518502c7169277", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private Entry<DetailAST, Integer> calculateDistanceInSingleScope(             DetailAST aSemicolonAst, DetailAST aVariableIdentAst)", "signatureAfterChange": "     private Entry<DetailAST, Integer> calculateDistanceInSingleScope(             DetailAST semicolonAst, DetailAST variableIdentAst)", "diff": ["-            DetailAST aSemicolonAst, DetailAST aVariableIdentAst)", "+            DetailAST semicolonAst, DetailAST variableIdentAst)", "-        DetailAST currentAst = aSemicolonAst;", "+        DetailAST currentAst = semicolonAst;", "-                if (isChild(currentAst, aVariableIdentAst)) {", "+                if (isChild(currentAst, variableIdentAst)) {", "-                        if (isVariableInOperatorExpr(currentAst, aVariableIdentAst)) {", "+                        if (isVariableInOperatorExpr(currentAst, variableIdentAst)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8579e84f8191cfad0d321c86fe944ed9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public boolean isHandledType(int aType)", "signatureAfterChange": "     public boolean isHandledType(int type)", "diff": ["-    public boolean isHandledType(int aType)", "+    public boolean isHandledType(int type)", "-        final Set<Integer> typeSet = mTypeHandlers.keySet();", "-        return typeSet.contains(aType);", "+        final Set<Integer> typeSet = typeHandlers.keySet();", "+        return typeSet.contains(type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8593aa2dacb33cb3d9380d2641d41392", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-            if (count > methodMax) {", "+            if (count > methodMaximum) {", "-                        count, methodMax);", "+                        count, methodMaximum);", "-            if (count > classMax) {", "+            if (count > classMaximum) {", "-                        count, classMax);", "+                        count, classMaximum);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8594c6d4352b2a2d4e6d7d9488948e34", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "78e9ce870170ca3ef88fd78f8e0af0681c958eb3", "commitAfterChange": "ea4085cd15fefe1e70a495798187c425295c74b6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public IllegalTypeCheck()", "signatureAfterChange": "     public IllegalTypeCheck()", "diff": ["-        setIgnoredMethodNames(new String[] {", "-            \"getInitialContext\",", "-            \"getEnvironment\",", "-        });", "+        setLegalAbstractClassNames(DEFAULT_LEGAL_ABSTRACT_NAMES);", "+        setIgnoredMethodNames(DEFAULT_IGNORED_METHOD_NAMES);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85a0d52b072037eb19edc3b48a79711c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Override     protected final void processAST(DetailAST ast)", "signatureAfterChange": "      @Override     protected final void processAST(DetailAST ast)", "diff": ["-                    log(ast, \"javadoc.missing\");", "+                    log(ast, MSG_JAVADOC_MISSING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85a85e84e0c15328de343646b5ee52ce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "1f54d3d6892c2c5561abe9e7ef5ef91650cc7288", "commitAfterChange": "f418179fceee506395546e5e08ed168fa120a34c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private boolean matchTag(AuditEvent event)", "signatureAfterChange": "     private boolean matchesTag(AuditEvent event)", "diff": ["-    private boolean matchTag(AuditEvent event) {", "+    private boolean matchesTag(AuditEvent event) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85c3a140c1e089b80777aaf5798fa68e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/HeaderCheckTest.java", "commitBeforeChange": "46146514c3c40ee8077578ad39f1289395afb3de", "commitAfterChange": "0340dcb26d5db9625e8e1f093f39165b8bdb18bf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testRegexpHeaderIgnore()         throws Exception", "signatureAfterChange": "      public void testRegexpHeaderIgnore() throws Exception", "diff": ["-    public void testRegexpHeaderIgnore()", "-        throws Exception", "+    public void testRegexpHeaderIgnore() throws Exception", "-        checkConfig.addAttribute(\"headerFile\", getPath(\"regexp.header\"));", "-        checkConfig.addAttribute(\"ignoreLines\", \"3,4,5\");", "+        checkConfig.addAttribute(\"headerFile\", getPath(\"regexp.header1\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85e967acfec21d6bbb2c6369e3a58d99", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/PackageObjectFactoryTest.java", "commitBeforeChange": "66325cbd72882454193765322efa716537ce9c93", "commitAfterChange": "33f75977205625bc5f9620a2c63e16a11f9663a5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void setUp()", "signatureAfterChange": "      public void setUp()", "diff": ["-        mFactory = new PackageObjectFactory(this.getClass().getClassLoader());", "+        mFactory = new PackageObjectFactory();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85efcb39227f4cc738b09272fbc09d67", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "e2329c7a98dadb9e2717aae92216964a6ab40329", "commitAfterChange": "073d09569f471061fd82899efac4f823269dd265", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public static Configuration loadConfiguration(InputStream aConfigStream,         PropertyResolver aOverridePropsResolver, boolean aOmitIgnoredModules)         throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(InputSource aConfigSource,         PropertyResolver aOverridePropsResolver, boolean aOmitIgnoredModules)         throws CheckstyleException", "diff": ["+     */", "+    public static Configuration loadConfiguration(InputSource aConfigSource,", "-            loader.parseInputStream(aConfigStream);", "+            loader.parseInputSource(aConfigSource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8648f38ff497936f7c85c87737330bae", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "commitBeforeChange": "2cf54ade2182e29c413f23e2235a896247d7a2ad", "commitAfterChange": "d282053d9ce02c13c779decfd079a8305086f752", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                    && hasDefaultOrExplNonPrivateCtor(classDef)) {", "+                    && hasDefaultOrExplicitNonPrivateCtor(classDef)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "864af1615ea2aa2bac394091a83771af", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "eaad55fdba73e17e103dc6600867f26fd6a3896b", "commitAfterChange": "5cf355fad4b8bc613962aac2f52b48d5726f2acc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int hashCode()", "signatureAfterChange": "     public int hashCode()", "diff": ["-        result = 29 * result + mColNo;", "-        result = 29 * result + mKey.hashCode();", "+        result = HASH_MULT * result + mColNo;", "+        result = HASH_MULT * result + mKey.hashCode();", "-            result = 29 * result + mArgs[i].hashCode();", "+            result = HASH_MULT * result + mArgs[i].hashCode();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8650b584323cd42c552fa1aac74c2da6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "9d11d6a0b07b63e3581468183f2ec359bafbf300", "commitAfterChange": "ee2e1a5cb3c7dd02bf6b63c418126e41735ee0ea", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void startElement(String aNamespaceURI,                              String aLocalName,                              String aQName,                              Attributes aAtts)             throws SAXException", "signatureAfterChange": "     public void startElement(String aNamespaceURI,                              String aLocalName,                              String aQName,                              Attributes aAtts)             throws SAXException", "diff": ["-                value = Utils.replaceProperties(aAtts.getValue(\"value\"),", "-                                                mOverrideProps);", "+                value = replaceProperties(aAtts.getValue(\"value\"),", "+                    mOverrideProps);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86630300126c98acceda8d05404beb22", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/PackageAnnotationTest.java", "commitBeforeChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "commitAfterChange": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAnnotationnotInPackageInfo() throws Exception", "signatureAfterChange": "      @Test     public void testAnnotationNotInPackageInfo() throws Exception", "diff": ["-    public void testAnnotationnotInPackageInfo() throws Exception {", "+    public void testAnnotationNotInPackageInfo() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8689997cd20cb4645c15db18299d8693", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "ccb3b8a5a972d71f26eda2cc11ef3ed5655372ec", "commitAfterChange": "365ff682dba7da5132da20174a09f5d74d2498ee", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void checkTypeParamTag(final int lineNo,             final List<JavadocTag> tags, final String typeParamName)", "signatureAfterChange": "     private void checkTypeParamTag(final int lineNo,             final List<JavadocTag> tags, final String typeParamName)", "diff": ["-                && tag.getArg1() != null"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86e7248e536f5c96a87c296a9e02ac86", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "97bee78f13ad218f586429b1ec264139a8663cc2", "commitAfterChange": "1513a0f96964497e4fd2ae14bb9bf328b1f1e01f", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     protected final int getBraceAdjustement()", "signatureAfterChange": "     protected final int getBraceAdjustment()", "diff": ["-    protected final int getBraceAdjustement() {", "-        return getIndentCheck().getBraceAdjustement();", "+    protected final int getBraceAdjustment() {", "+        return getIndentCheck().getBraceAdjustment();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86f26e60e639a22388f4aba85046e813", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "b3133035a4fa0e086dfb0dfbefbc7f1540521bbc", "commitAfterChange": "add2bdfb27494bff5fa9c305d9782f57c6170b18", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void auditStarted(AuditEvent aEvt)", "signatureAfterChange": "     public void auditStarted(AuditEvent aEvt)", "diff": ["-        mWriter.println(\"Starting audit...\");", "+        mInfoWriter.println(\"Starting audit...\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86f630596b938869c97e2a6f6d40d21d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavaDocTagContinuationIndentationCheck.java", "commitBeforeChange": "7564e8ca85b471a74225a8515994a0128aa1c548", "commitAfterChange": "ca34984cc3dcf86773cf7958f26f3816ae0dc764", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private List<DetailNode> getAllTextNodes(DetailNode aDescriptionNode)", "signatureAfterChange": "     private List<DetailNode> getAllNewlineNodes(DetailNode aDescriptionNode)", "diff": ["-    private List<DetailNode> getAllTextNodes(DetailNode aDescriptionNode)", "+    private List<DetailNode> getAllNewlineNodes(DetailNode aDescriptionNode)", "-            if (node.getType() == JavadocTokenTypes.TEXT) {", "+            if (node.getType() == JavadocTokenTypes.NEWLINE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86f83b58f2905f920539def81fbf73ee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public ImmutableMap<Integer, List<TextBlock>> getCComments()", "signatureAfterChange": "     public ImmutableMap<Integer, List<TextBlock>> getCComments()", "diff": ["-        return ImmutableMap.copyOf(mCComments);", "+        return ImmutableMap.copyOf(cComments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8709c8012376405b0f33335b47220aee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodLengthCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setCountEmpty(boolean aCountEmpty)", "signatureAfterChange": "     public void setCountEmpty(boolean countEmpty)", "diff": ["-    public void setCountEmpty(boolean aCountEmpty)", "+    public void setCountEmpty(boolean countEmpty)", "-        mCountEmpty = aCountEmpty;", "+        this.countEmpty = countEmpty;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8717846c3561afe9cc3815a3cd72d383", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "31cc403a41c60aa09050252953a56ef053c034d4", "commitAfterChange": "2f9b0f057c489d074967575696a0d53a34fec6b7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private boolean inIgnoreList(DetailAST ast)", "signatureAfterChange": "     private boolean inIgnoreList(DetailAST ast)", "diff": ["-        return (Arrays.binarySearch(mIgnoreNumbers, value) >= 0);", "+        return (Arrays.binarySearch(ignoreNumbers, value) >= 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8735ae7aa9b10979027c82c2b4711aeb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java", "commitBeforeChange": "111bd4b1df19e62bb76bbf83cfefa9ac5066c98a", "commitAfterChange": "0a6026c9ab97dc2d5ecd9c8cc6a27197208f4e6a", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected final void findSubtreeLines(LineSet lines, DetailAST tree,         boolean allowNesting)", "signatureAfterChange": "     protected final void findSubtreeLines(LineSet lines, DetailAST tree,         boolean allowNesting)", "diff": ["-        if (colNum == null || thisLineColumn < colNum.intValue()) {", "+        if (colNum == null || thisLineColumn < colNum) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87536ba1fd34f052e1286724a847b0bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static Configuration loadConfiguration(String config,         PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(String config,         PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "diff": ["-                        throw new CheckstyleException(\"unable to find \" + config);", "+                        throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + config);", "-                    throw new CheckstyleException(\"unable to find \" + config, e);", "+                    throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + config, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87997679c61cf8c651465a0c718eefb9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setIgnoreOverriddenMethods(boolean aIgnoreOverriddenMethods)", "signatureAfterChange": "     public void setIgnoreOverriddenMethods(boolean ignoreOverriddenMethods)", "diff": ["-    public void setIgnoreOverriddenMethods(boolean aIgnoreOverriddenMethods)", "+    public void setIgnoreOverriddenMethods(boolean ignoreOverriddenMethods)", "-        mIgnoreOverriddenMethods = aIgnoreOverriddenMethods;", "+        this.ignoreOverriddenMethods = ignoreOverriddenMethods;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87d877df48ece120d9f44e2a127d05b1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Utils.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public static void closeQuietly(Closeable aShutting)", "signatureAfterChange": "     public static void closeQuietly(Closeable shutting)", "diff": ["-    public static void closeQuietly(Closeable aShutting)", "+    public static void closeQuietly(Closeable shutting)", "-        if (null != aShutting) {", "+        if (null != shutting) {", "-                aShutting.close();", "+                shutting.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87d883308d9044e3f1b4150a19885b99", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setFile(final String aName)", "signatureAfterChange": "     public void setFile(final String name)", "diff": ["-    public void setFile(final String aName)", "+    public void setFile(final String name)", "-        if ((aName == null) || (aName.trim().length() == 0)) {", "+        if ((name == null) || (name.trim().length() == 0)) {", "-            mRoot = ImportControlLoader.load(new File(aName).toURI());", "+            root = ImportControlLoader.load(new File(name).toURI());", "-            throw new ConversionException(\"Unable to load \" + aName, ex);", "+            throw new ConversionException(\"Unable to load \" + name, ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87e72b8995fd656bb73c29456cacd1b9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/comments/CommentsTest.java", "commitBeforeChange": "2057a77c3a524b86dff382ac8abdca71dd03764a", "commitAfterChange": "03f41815802b1ce6a0ca906c9f28c5a98344a932", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCompareExpectedTreeWithInput_2() throws Exception", "signatureAfterChange": "      @Test     public void testCompareExpectedTreeWithInput_2() throws Exception", "diff": ["-        CompareTreesWithComments.expectedTree = buildInput_2();", "+        CompareTreesWithComments.expectedTree = buildInput2();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87eb5d705bd86f2461605cfdc34a38bb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "commitBeforeChange": "f5f1d754e28ee1e3c5472fd4d5292f24a335e64e", "commitAfterChange": "b8eeaaeb42f096c00f159911d8cc5dfb8f2c0ea6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static boolean isZero(DetailAST expr)", "signatureAfterChange": "     private static boolean isZero(DetailAST expr)", "diff": ["-                return CheckUtils.parseFloat(text, type) == 0.0;", "+                return CheckUtils.parseDouble(text, type) == 0.0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87f515c9cd105c704a4a9669415443e3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java", "commitBeforeChange": "ed89c9edb524243b0df61e83a5ac0930f070e6d7", "commitAfterChange": "afa74495ee4a6dce6f4ba97f7fb2842a99faa7db", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setFile(final String name)", "signatureAfterChange": "     public void setFile(final String name)", "diff": ["-            throw new ConversionException(\"Unable to load \" + name, ex);", "+            throw new ConversionException(UNABLE_TO_LOAD + name, ex);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "882ad91ed7c30c35982125e6e325d475", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractFormatCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void updateRegexp(String format, int compileFlagsParam)", "signatureAfterChange": "     private void updateRegexp(String regexpFormat, int compileFlagsParam)", "diff": ["-    private void updateRegexp(String format, int compileFlagsParam) {", "+    private void updateRegexp(String regexpFormat, int compileFlagsParam) {", "-            regexp = Pattern.compile(format, compileFlagsParam);", "-            this.format = format;", "+            regexp = Pattern.compile(regexpFormat, compileFlagsParam);", "+            this.format = regexpFormat;", "-            throw new ConversionException(\"unable to parse \" + format, e);", "+            throw new ConversionException(\"unable to parse \" + regexpFormat, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8838a43ee0deb96c51770f0232055e15", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/HeaderCheckTest.java", "commitBeforeChange": "510bf2e6a7dd6f7da8a386fb0e33bac500fae297", "commitAfterChange": "d1a297476448ea9feec80af04416f198dc462bca", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void testIllegalArgs()             throws Exception", "signatureAfterChange": "      public void testNonExistingHeaderFile()             throws Exception", "diff": ["-    public void testIllegalArgs()", "+    public void testNonExistingHeaderFile()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "884a045ffbc074ab17705ca5691cbe8d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "be6d271ac34efc3daed3dbb873ab8060723dd4f8", "commitAfterChange": "b06dd9801e56887f7da1bbc8b55233e0ff5f5115", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setStaticpattern(String aPat)", "signatureAfterChange": "     public void setStaticPattern(String aPat)", "diff": ["-    public void setStaticpattern(String aPat)", "+    public void setStaticPattern(String aPat)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "885072c63f2f6fed09a17ff155ff2a77", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private boolean isSetterMethod(DetailAST aMethodAST, String aName)", "signatureAfterChange": "     private boolean isSetterMethod(DetailAST aMethodAST, String aName)", "diff": ["-                    || setterCanReturnItsClass && frame.embeddedIn(returnType)) {", "+                    || setterCanReturnItsClass && frame.isEmbeddedIn(returnType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "886f4a4c0c9becedc6b409d20f51e4d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java", "commitBeforeChange": "52e2087c404986f8e12cd8579be7b2333961e1a3", "commitAfterChange": "c38185458ab824874b8465c46b4dc42646440aaa", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        DetailAST rcurly = null;", "-        DetailAST lcurly = null;", "-        DetailAST nextToken = null;", "+        DetailAST rcurly;", "+        DetailAST lcurly;", "+        DetailAST nextToken;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88997d428c63c644080258acaefb829a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static JavadocTags getJavadocTags(TextBlock cmt,             JavadocTagType tagType)", "signatureAfterChange": "     public static JavadocTags getJavadocTags(TextBlock cmt,             JavadocTagType tagType)", "diff": ["-            final String s = text[i];", "-            final Matcher blockTagMatcher = blockTagPattern.matcher(s);", "+            final String textValue = text[i];", "+            final Matcher blockTagMatcher = blockTagPattern.matcher(textValue);", "-                String content = s.substring(blockTagMatcher.end(1));", "+                String content = textValue.substring(blockTagMatcher.end(1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88a55de6e470d8d10365505800707c7c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setEachLine(boolean aEachLine)", "signatureAfterChange": "     public void setEachLine(boolean eachLine)", "diff": ["-    public void setEachLine(boolean aEachLine)", "+    public void setEachLine(boolean eachLine)", "-        mEachLine = aEachLine;", "+        this.eachLine = eachLine;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88cfd7d75ebf42217b554e2943dba1e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     @Override     public boolean accept(AuditEvent aEvent)", "signatureAfterChange": "     @Override     public boolean accept(AuditEvent event)", "diff": ["-    public boolean accept(AuditEvent aEvent)", "+    public boolean accept(AuditEvent event)", "-        if (aEvent.getLocalizedMessage() == null) {", "+        if (event.getLocalizedMessage() == null) {", "-        final Tag matchTag = findNearestMatch(aEvent);", "+        final Tag matchTag = findNearestMatch(event);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88e09f4108f574e5e0d6b1d216964f5b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "commitAfterChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "          @Override         public void dragEnter(DropTargetDragEvent evt)", "signatureAfterChange": "          @Override         public void dragEnter(DropTargetDragEvent evt)", "diff": ["-                if (mC instanceof JComponent) {", "-                    final JComponent jc = (JComponent) mC;", "+                if (component instanceof JComponent) {", "+                    final JComponent jc = (JComponent) component;", "-                    jc.setBorder(mDragBorder);", "+                    jc.setBorder(dragBorder);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88e73926d9e64636806d1fd2313edc26", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d4f1261a61913b28d746aeb929bd23f372372a4c", "commitAfterChange": "fdd9ae82975be0bf0d8df991a50bad10b660aa2c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testBracesOff()         throws Exception", "signatureAfterChange": "      public void testBracesOff()         throws Exception", "diff": ["-            filepath + \":41: 'while' is not proceeded with whitespace.\",", "-            filepath + \":58: 'for' is not proceeded with whitespace.\",", "+            filepath + \":41: 'while' is not followed by whitespace.\",", "+            filepath + \":58: 'for' is not followed by whitespace.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88eb3be182885eb292e1846ef52d1d03", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Check.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public final void setMessages(LocalizedMessages aMessages)", "signatureAfterChange": "     public final void setMessages(LocalizedMessages messages)", "diff": ["-    public final void setMessages(LocalizedMessages aMessages)", "+    public final void setMessages(LocalizedMessages messages)", "-        mMessages = aMessages;", "+        this.messages = messages;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88ee806f1c7f53e0ff82851261afbfc6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "595d070db0215c3cf0555d5074719cffc673c890", "commitAfterChange": "868d96b45918b5bb0db4b80bdf5b70f5202d6590", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAst)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAst)", "diff": ["-            startStatement(aAst);", "+            visitExpr(aAst);", "-            startSemi(aAst);", "+            visitSemi(aAst);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "890dacf9b431de2c872c060d9aef8794", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/AnnotationUtility.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static DetailAST getAnnotation(final DetailAST ast,         String annotation)", "signatureAfterChange": "     public static DetailAST getAnnotation(final DetailAST ast,         String annotation)", "diff": ["-                final DetailAST at = child.getFirstChild();", "+                final DetailAST firstChild = child.getFirstChild();", "-                    FullIdent.createFullIdent(at.getNextSibling()).getText();", "+                    FullIdent.createFullIdent(firstChild.getNextSibling()).getText();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "890ef470606cce052c93b1ede4969763", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-    public void beginTree(DetailAST aRootAST)", "+    public void beginTree(DetailAST rootAST)", "-        mPackageFullIdent = FullIdent.createFullIdent(null);", "-        mImports.clear();", "+        packageFullIdent = FullIdent.createFullIdent(null);", "+        imports.clear();", "-        mImports.add(\"java.lang.*\");", "-        mClassResolver = null;", "-        mCurrentClass = \"\";", "-        mTypeParams.clear();", "+        imports.add(\"java.lang.*\");", "+        classResolver = null;", "+        currentClass = \"\";", "+        typeParams.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8939dc38bc120aab0bac1c91bf4d9912", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "b3133035a4fa0e086dfb0dfbefbc7f1540521bbc", "commitAfterChange": "add2bdfb27494bff5fa9c305d9782f57c6170b18", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void addException(AuditEvent aEvt, Throwable aThrowable)", "signatureAfterChange": "     public void addException(AuditEvent aEvt, Throwable aThrowable)", "diff": ["-        synchronized (mWriter) {", "-            mWriter.println(\"Error auditing \" + aEvt.getFileName());", "-            aThrowable.printStackTrace(mWriter);", "+        synchronized (mErrorWriter) {", "+            mErrorWriter.println(\"Error auditing \" + aEvt.getFileName());", "+            aThrowable.printStackTrace(mErrorWriter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8958b8ecc69421d10c7831394b598b43", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedCheck.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private boolean checkTagAtTheRestOfComment(String[] lines, boolean foundBefore,             int currentLine, int i)", "signatureAfterChange": "     private boolean checkTagAtTheRestOfComment(String[] lines, boolean foundBefore,             int currentLine, int index)", "diff": ["-            int currentLine, int i) {", "+            int currentLine, int index) {", "-        for (int reindex = i + 1;", "+        for (int reindex = index + 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8970a545efe9bae9f4777185013efd46", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/PrimordialHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     protected IndentLevel getLevelImpl()", "signatureAfterChange": "      @Override     protected IndentLevel getIndentImpl()", "diff": ["-    protected IndentLevel getLevelImpl() {", "+    protected IndentLevel getIndentImpl() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89820be33a4ea756fea24733b8811044", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setIgnoreMethods(boolean aIgnoreMethods)", "signatureAfterChange": "     public void setIgnoreMethods(boolean ignoreMethods)", "diff": ["-    public void setIgnoreMethods(boolean aIgnoreMethods)", "+    public void setIgnoreMethods(boolean ignoreMethods)", "-        mIgnoreMethods = aIgnoreMethods;", "+        this.ignoreMethods = ignoreMethods;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89a227688fe9b9ed4ec521346921aa07", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AllChecksTest.java", "commitBeforeChange": "3ebddae1b928b69793717d4e207b660b31fefdb5", "commitAfterChange": "63f01249f8da8e1454492e04106bc14075fe4dbd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testAllChecksAreReferencedInConfigFile() throws Exception", "signatureAfterChange": "      @Test     public void testAllChecksAreReferencedInConfigFile() throws Exception", "diff": ["-        final Set<String> checksNames = getChecksNames(checksFromClassPath);", "+        final Set<String> checksNames = getSimpleNames(checksFromClassPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89af55796e6ec39c0e290cba022e70ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "d4a862ea091fc7b74f34a13fcae8143239d9d4b9", "commitAfterChange": "0516374351fea9810a25f941e35b6914da82990f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected boolean hasLabelBefore()", "signatureAfterChange": "     protected boolean hasLabelBefore()", "diff": ["-        return parent != null && parent.getType() == TokenTypes.LABELED_STAT", "+        return parent.getType() == TokenTypes.LABELED_STAT"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89dc3268b83b26a458534c5f94df4210", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/IntRangeFilter.java", "commitBeforeChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "commitAfterChange": "4c1148db9982918e65f8d1156e8fb9c07b206fc9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public boolean equals(Object o)", "signatureAfterChange": "      @Override     public boolean equals(Object o)", "diff": ["-        final IntRangeFilter that = (IntRangeFilter) o;", "-        return Objects.equals(lowerBound, that.lowerBound)", "-                && Objects.equals(upperBound, that.upperBound);", "+        final IntRangeFilter intRangeFilter = (IntRangeFilter) o;", "+        return Objects.equals(lowerBound, intRangeFilter.lowerBound)", "+                && Objects.equals(upperBound, intRangeFilter.upperBound);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89dc3b14d27e3d3cb24fa023492e9591", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "98c8a0db55496e84aa8af901db50fa952e9b1ec4", "commitAfterChange": "7f06106f4e41e1c250bb5bafccbf4f8d9a7909bc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     LocalizedMessage[] getMessages()", "signatureAfterChange": "     LocalizedMessage[] getMessages()", "diff": ["+        checkUnused();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89f3802d1bb814f8b4b6a7e18954731c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheck.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-                    log(lineNum, tabPosition + 1, \"containsTab\");", "+                    log(lineNum, tabPosition + 1, CONTAINS_TAB);", "-                    log(lineNum, tabPosition + 1, \"file.containsTab\");", "+                    log(lineNum, tabPosition + 1, FILE_CONTAINS_TAB);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89ff96b6e2c937a0a4aaf24b8e06c02e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheck.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void init()", "signatureAfterChange": "      @Override     public void init()", "diff": ["-        mDetector = new SinglelineDetector(mOptions);", "+        detector = new SinglelineDetector(options);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a092470eb1b3602b5b1f30f462a5077", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "          public Multiset<String> getDuplicatedStrings()", "signatureAfterChange": "          public Multiset<String> getDuplicatedStrings()", "diff": ["-            return mDuplicatedStrings;", "+            return duplicatedStrings;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a0ba863e3c34bf7b9a9939c30b42184", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "536bc20b48637fa85025b790736114d5dcb7a385", "commitAfterChange": "9aa49c8f6d2b30577565f87984819e1df0d62d0f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static boolean isSuppressed(String sourceName, int line,         int column)", "signatureAfterChange": "     public static boolean isSuppressed(String sourceName, int line,         int column)", "diff": ["-                    || entry.getCheckName().equals(checkAlias);", "+                    || entry.getCheckName().equalsIgnoreCase(checkAlias);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a1d1b60efda8db8bb24fe1e83655a90", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/CheckUtils.java", "commitBeforeChange": "6e96026ec6d95fc5eadd3044cab91c24c73c8e0c", "commitAfterChange": "e00c478dd61d9d883e41b500b780ab217582c2e7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static double parseDouble(String aText, int aType)", "signatureAfterChange": "     public static double parseDouble(String aText, int aType)", "diff": ["+        String txt = aText;", "-            result = Double.parseDouble(aText);", "+            result = Double.parseDouble(txt);", "-            if (aText.startsWith(\"0x\") || aText.startsWith(\"0X\")) {", "+            if (txt.startsWith(\"0x\") || txt.startsWith(\"0X\")) {", "-                aText = aText.substring(2);", "+                txt = txt.substring(2);", "-            else if (aText.charAt(0) == '0') {", "+            else if (txt.charAt(0) == '0') {", "-                aText = aText.substring(1);", "+                txt = txt.substring(1);", "-            if ((aText.endsWith(\"L\")) || (aText.endsWith(\"l\"))) {", "-                aText = aText.substring(0, aText.length() - 1);", "+            if ((txt.endsWith(\"L\")) || (txt.endsWith(\"l\"))) {", "+                txt = txt.substring(0, txt.length() - 1);", "-            if (aText.length() > 0) {", "+            if (txt.length() > 0) {", "-                    result = parseInt(aText, radix);", "+                    result = parseInt(txt, radix);", "-                    result = parseLong(aText, radix);", "+                    result = parseLong(txt, radix);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a26a2f5399575dba729d032a3690139", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalThrowsCheck.java", "commitBeforeChange": "dfc803a1cc442bafeb5aa375f0d9f0a31d655ff2", "commitAfterChange": "351d79582d7a6cea56af9d61f45973d3cf73a484", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private boolean isIgnorableMethod(DetailAST methodDef)", "signatureAfterChange": "     private boolean isIgnorableMethod(DetailAST methodDef)", "diff": ["-            || ignoreOverridenMethods", "+            || ignoreOverriddenMethods"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a2c25c14889e23dad9cda484d5f8311", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/SeverityLevelCounter.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public SeverityLevelCounter(SeverityLevel aLevel)", "signatureAfterChange": "     public SeverityLevelCounter(SeverityLevel level)", "diff": ["-    public SeverityLevelCounter(SeverityLevel aLevel)", "+    public SeverityLevelCounter(SeverityLevel level)", "-        if (aLevel == null) {", "+        if (level == null) {", "-        mLevel = aLevel;", "+        this.level = level;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a359222c62c0949dcf760b356595d37", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocVariableCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public String getIgnoreNamePattern()", "signatureAfterChange": "     public String getIgnoreNamePattern()", "diff": ["-        return mIgnoreNameRegexp;", "+        return ignoreNameRegexp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a5765a2670d28e9b765c0b1d955581a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java", "commitBeforeChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "commitAfterChange": "29027109bf962f47b6a6000fdca69b5679ce4b43", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private boolean isMatch(String aLine, int aHeaderLineNo)", "signatureAfterChange": "     private boolean isMatch(String line, int headerLineNo)", "diff": ["-    private boolean isMatch(String aLine, int aHeaderLineNo)", "+    private boolean isMatch(String line, int headerLineNo)", "-        return mHeaderRegexps.get(aHeaderLineNo).matcher(aLine).find();", "+        return headerRegexps.get(headerLineNo).matcher(line).find();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a80523ffc0f834dfe2d6b2ae1e857dc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/JUnitTestCaseCheck.java", "commitBeforeChange": "05526332666bc5142f8cf29a941435527c20fb9c", "commitAfterChange": "fa51f3e5724119e4bf1f1b649d1f618211fe6394", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void checkSetUpTearDownMethod(DetailAST aAST, String aActualName,                                           String aExpectedName)", "signatureAfterChange": "     private void checkSetUpTearDownMethod(DetailAST aAST, String aActualName,                                           String aExpectedName)", "diff": ["-        checkReturnValue(aAST, TEAR_DOWN_METHOD_NAME);", "-        checkParameters(aAST, TEAR_DOWN_METHOD_NAME);", "+        checkReturnValue(aAST, aActualName);", "+        checkParameters(aAST, aActualName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a85ad706fcb01f7a71aaea25be1e91e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/IntMatchFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public boolean equals(Object aObject)", "signatureAfterChange": "      @Override     public boolean equals(Object object)", "diff": ["-    public boolean equals(Object aObject)", "+    public boolean equals(Object object)", "-        if (aObject instanceof IntMatchFilter) {", "-            final IntMatchFilter other = (IntMatchFilter) aObject;", "-            return this.mMatchValue == other.mMatchValue;", "+        if (object instanceof IntMatchFilter) {", "+            final IntMatchFilter other = (IntMatchFilter) object;", "+            return this.matchValue == other.matchValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a887ce0d9b3fd11b093bbaebcc1fc1c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Scope.java", "commitBeforeChange": "3db24e2377af66253a8e2429dc2228bff802ee16", "commitAfterChange": "0eded9de9c2aa19742bebd16d6bfecc5d44f7bfb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private Object readResolve() throws ObjectStreamException", "signatureAfterChange": "     private Object readResolve()", "diff": ["-    private Object readResolve() throws ObjectStreamException", "+    private Object readResolve()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a9b22fcd93bd40548488a1a723b9f02", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-    public void beginTree(DetailAST aRootAST)", "+    public void beginTree(DetailAST rootAST)", "-        DetailAST currentNode = aRootAST;", "+        DetailAST currentNode = rootAST;", "-                    mPublicTypeFound = true;", "+                    publicTypeFound = true;", "-                    mLineNumberTypeMap.put(currentNode.getLineNo(), typeName);", "+                    lineNumberTypeMap.put(currentNode.getLineNo(), typeName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8aa06d3a3b685f6222d878e4b6df2d61", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "546f336e25b26d072f96e2cda139b885858ed5b0", "commitAfterChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     FileDrop(             final Component c,             final Border dragBorder,             final boolean recursive,             final Listener listener)             throws TooManyListenersException", "signatureAfterChange": "     FileDrop(             final Component component,             final Border dragBorder,             final boolean recursive,             final Listener listener)             throws TooManyListenersException", "diff": ["-            final Component c,", "+            final Component component,", "-        dropListener = new FileDropTargetListener(c, dragBorder, listener);", "-        makeDropTarget(c, recursive);", "+        dropListener = new FileDropTargetListener(component, dragBorder, listener);", "+        makeDropTarget(component, recursive);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8abf46adebfee9c3353b493bccfd9a45", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static PkgControl load(final InputSource aSource,         final URI aUri) throws CheckstyleException", "signatureAfterChange": "     private static PkgControl load(final InputSource source,         final URI uri) throws CheckstyleException", "diff": ["-    private static PkgControl load(final InputSource aSource,", "-        final URI aUri) throws CheckstyleException", "+    private static PkgControl load(final InputSource source,", "+        final URI uri) throws CheckstyleException", "-            loader.parseInputSource(aSource);", "+            loader.parseInputSource(source);", "-            throw new CheckstyleException(\"unable to parse \" + aUri, e);", "+            throw new CheckstyleException(\"unable to parse \" + uri, e);", "-            throw new CheckstyleException(\"unable to parse \" + aUri", "+            throw new CheckstyleException(\"unable to parse \" + uri", "-            throw new CheckstyleException(\"unable to read \" + aUri, e);", "+            throw new CheckstyleException(\"unable to read \" + uri, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ac04fc9c9f8700239f75f470560ea36", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/CovariantEqualsCheck.java", "commitBeforeChange": "c09a1ecf33f1ab0451bdf8686ceb240cef4c4496", "commitAfterChange": "f7309c44049963f36cd332c369cc267244aaaf63", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                    if (hasObjectParameter(child)) {", "+                    if (isFirstParameterObject(child)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8acc7854b4dbd8511daec9ea59ee1ddf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "b3133035a4fa0e086dfb0dfbefbc7f1540521bbc", "commitAfterChange": "add2bdfb27494bff5fa9c305d9782f57c6170b18", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void addError(AuditEvent aEvt)", "signatureAfterChange": "     public void addError(AuditEvent aEvt)", "diff": ["-    /** @see AuditListener **/", "-    public void addError(AuditEvent aEvt)", "-    {", "-        // Print an Emacs compliant line. If the column number is non zero,", "-        // then also display it.", "-        if (aEvt.getColumn() > 0) {", "-            mWriter.println(aEvt.getFileName()", "-                            + \":\" + aEvt.getLine()", "-                            + \":\" + aEvt.getColumn()", "-                            + \": \" + aEvt.getMessage());", "-            mWriter.println(aEvt.getFileName()", "-                            + \":\" + aEvt.getLine()", "-                            + \": \" + aEvt.getMessage());", "+     **/", "+    public void addError(AuditEvent aEvt)", "+    {", "+        if (aEvt.getColumn() > 0) {", "+            mErrorWriter.println(aEvt.getFileName()", "+                                 + \":\" + aEvt.getLine()", "+                                 + \":\" + aEvt.getColumn()", "+                                 + \": \" + aEvt.getMessage());", "+        }", "+        else {", "+            mErrorWriter.println(aEvt.getFileName()", "+                                 + \":\" + aEvt.getLine()", "+                                 + \": \" + aEvt.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ae634586efd167505baf47558fd2355", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "          public void setTree(DetailNode aTree)", "signatureAfterChange": "          public void setTree(DetailNode tree)", "diff": ["-        public void setTree(DetailNode aTree)", "+        public void setTree(DetailNode tree)", "-            this.mTree = aTree;", "+            this.tree = tree;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ae8c0d8dc60e2d9e1991442ca1decbd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private List<JavadocTag> getJavadocTags(TextBlock cmt)", "signatureAfterChange": "     private List<JavadocTag> getJavadocTags(TextBlock cmt)", "diff": ["-                log(tag.getLine(), tag.getCol(), \"javadoc.unknownTag\",", "+                log(tag.getLine(), tag.getCol(), UNKNOWN_TAG,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b3add627f5330b1836e7b9ff0b7e525", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected void fireErrors(String aFileName, LineText[] aErrors)", "signatureAfterChange": "     protected void fireErrors(String aFileName, LocalizedMessage[] aErrors)", "diff": ["-    protected void fireErrors(String aFileName, LineText[] aErrors)", "+    protected void fireErrors(String aFileName, LocalizedMessage[] aErrors)", "-                               aErrors[i].getText());", "+                               aErrors[i].getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b5275cb064f777d732290f3c47fac3f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void visitClassDef(DetailAST aAST)", "signatureAfterChange": "     private void visitClassDef(DetailAST ast)", "diff": ["-    private void visitClassDef(DetailAST aAST)", "+    private void visitClassDef(DetailAST ast)", "-        mCheckingStack.push(mChecking ? Boolean.TRUE : Boolean.FALSE);", "-        mChecking = isNamedAsException(aAST) && isExtendedClassNamedAsException(aAST);", "+        checkingStack.push(checking ? Boolean.TRUE : Boolean.FALSE);", "+        checking = isNamedAsException(ast) && isExtendedClassNamedAsException(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ba70194d88443183062adff0a86b294", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "13a49cc45b1527357934dd7802c24686d7bb7858", "commitAfterChange": "24d7448294b03e49709c8e5588e89c27091ba0f2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected void checkToplevelToken()", "signatureAfterChange": "     protected void checkToplevelToken()", "diff": ["-            || getLevel().accept(expandedTabsColumnNo(toplevel)) || hasLabelBefore()) {", "+            || getLevel().isAcceptable(expandedTabsColumnNo(toplevel)) || hasLabelBefore()) {", "-        if (!toplevelMustStartLine() && !startsLine(toplevel)) {", "+        if (!shouldTopLevelStartLine() && !startsLine(toplevel)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ba7fdf9fd7aea7008dbab43d177a197", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/HtmlTag.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public boolean isCloseTag()", "signatureAfterChange": "     public boolean isCloseTag()", "diff": ["-        if (mPosition == (mText.length() - 1)) {", "+        if (position == (text.length() - 1)) {", "-        return (mText.charAt(mPosition + 1) == '/');", "+        return (text.charAt(position + 1) == '/');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bb43b7451a350997097c0fc46841803", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Comment.java", "commitBeforeChange": "59d5b734cc81da24b7e91ed55a4e022986b067d7", "commitAfterChange": "8fb2acd39b7db6223486f5e06126c7f0a2642a72", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final int getFirstLineNo()", "signatureAfterChange": "     public final int getStartLineNo()", "diff": ["-    public final int getFirstLineNo()", "+    public final int getStartLineNo()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bde5f713c445e9e02cb1047954fdc6d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void setLineNo(int aLineNo)", "signatureAfterChange": "     public void setLineNo(int lineNo)", "diff": ["-    public void setLineNo(int aLineNo)", "+    public void setLineNo(int lineNo)", "-        mLineNo = aLineNo;", "+        this.lineNo = lineNo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8be1079222ea7df8546a7cdd028db633", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Utils.java", "commitBeforeChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "commitAfterChange": "4c1148db9982918e65f8d1156e8fb9c07b206fc9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static int lengthExpandedTabs(String string,                                          int toIdx,                                          int tabWidth)", "signatureAfterChange": "     public static int lengthExpandedTabs(String inputString,                                          int toIdx,                                          int tabWidth)", "diff": ["-    public static int lengthExpandedTabs(String string,", "+    public static int lengthExpandedTabs(String inputString,", "-            if (string.charAt(idx) == '\\t') {", "+            if (inputString.charAt(idx) == '\\t') {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c0a44a388c6146911e8d8006c59cd66", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private PkgControl getRoot()", "signatureAfterChange": "     private PkgControl getRoot()", "diff": ["-        assert mStack.size() == 1;", "-        return mStack.peek();", "+        assert stack.size() == 1;", "+        return stack.peek();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c6473bd0bcf308f34585be044082b3a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public boolean isPackageAllowed()", "signatureAfterChange": "     public boolean isPackageAllowed()", "diff": ["-        return mPackageAllowed;", "+        return packageAllowed;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c842d76fcbc8ac37a5d370136c5a02b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setIgnoreConstructors(boolean aIgnoreConstructors)", "signatureAfterChange": "     public void setIgnoreConstructors(boolean ignoreConstructors)", "diff": ["-    public void setIgnoreConstructors(boolean aIgnoreConstructors)", "+    public void setIgnoreConstructors(boolean ignoreConstructors)", "-        mIgnoreConstructors = aIgnoreConstructors;", "+        this.ignoreConstructors = ignoreConstructors;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c9875b9fbdcb96948d694d22c4e7a92", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/RegexpCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setIgnoreComments(boolean aIgnoreComments)", "signatureAfterChange": "     public void setIgnoreComments(boolean ignoreComments)", "diff": ["-    public void setIgnoreComments(boolean aIgnoreComments)", "+    public void setIgnoreComments(boolean ignoreComments)", "-        mIgnoreComments = aIgnoreComments;", "+        this.ignoreComments = ignoreComments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c98ec947b9a54521fedb713273135d3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private String getCharsTillDot(DetailNode aTextNode)", "signatureAfterChange": "     private String getCharsTillDot(DetailNode textNode)", "diff": ["-    private String getCharsTillDot(DetailNode aTextNode)", "+    private String getCharsTillDot(DetailNode textNode)", "-        for (DetailNode child : aTextNode.getChildren()) {", "+        for (DetailNode child : textNode.getChildren()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ca8c6c0d317433e584ea4250cd5f391", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "aae2d7156dd98b3d5140002bed33ab5962bca85c", "commitAfterChange": "3a20dbe8edafe0cca300b7b9dfa48effa9a36a06", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void setBasedir(String basedir)", "signatureAfterChange": "     public void setBasedir(String basedir)", "diff": ["-        // we use getAbsolutePath() instead of getCanonicalPath()", "-        // because normalize() removes all . and .. so path", "-        // will be canonical by default.", "-        this.basedir = normalize(basedir);", "-    }", "+        this.basedir = basedir;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8caa8563cddd1c0a6d32a2002c81e2d2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Override     public void auditFinished(AuditEvent aEvt)", "signatureAfterChange": "     @Override     public void auditFinished(AuditEvent evt)", "diff": ["-    public void auditFinished(AuditEvent aEvt)", "+    public void auditFinished(AuditEvent evt)", "-        mWriter.println(\"</checkstyle>\");", "-        if (mCloseStream) {", "-            mWriter.close();", "+        writer.println(\"</checkstyle>\");", "+        if (closeStream) {", "+            writer.close();", "-            mWriter.flush();", "+            writer.flush();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cd61ba82214ad38a113bc3d61a10772", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setAliasList(String aAliasList)", "signatureAfterChange": "     public void setAliasList(String aliasList)", "diff": ["-    public void setAliasList(String aAliasList)", "+    public void setAliasList(String aliasList)", "-        for (String sourceAlias : aAliasList.split(\",\")) {", "+        for (String sourceAlias : aliasList.split(\",\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ce80c516b1c920ded3880b2e065de1c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java", "commitBeforeChange": "904de34fcd984edce3d6042a5a17e2a969254588", "commitAfterChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static boolean whitespaceBefore(int index, String line)", "signatureAfterChange": "     public static boolean hasWhitespaceBefore(int index, String line)", "diff": ["-    public static boolean whitespaceBefore(int index, String line) {", "+    public static boolean hasWhitespaceBefore(int index, String line) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d11dca48861b6c1a9af0084f5b68014", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private String getClassName(int aStartFrom, String aImport)", "signatureAfterChange": "     private String getClassName(int startFrom, String importStr)", "diff": ["-    private String getClassName(int aStartFrom, String aImport)", "+    private String getClassName(int startFrom, String importStr)", "-        String className = aImport;", "-        className = className.substring(aStartFrom, className.length());", "+        String className = importStr;", "+        className = className.substring(startFrom, className.length());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d578881906d775daf7715d9a57e301d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java", "commitBeforeChange": "2d1687465f841ead6eaf930f36040b17871e672e", "commitAfterChange": "bb1db4938ccae0f7149461ea372398fb8a53f2a8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void processLiteralNew(DetailAST aAST)", "signatureAfterChange": "     private void postprocessLiteralNew(DetailAST aAST)", "diff": ["-        final DetailAST typeNameAST = (DetailAST) aAST.getFirstChild();", "+     */", "+    private void postprocessLiteralNew(DetailAST aAST)", "+    {", "+        final DetailAST typeNameAST = (DetailAST) aAST.getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d7ce412ecb570978f15d2a6a0d782d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PackageNamesLoaderTest.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private void validatePackageNames(Set<String> aPkgNames)", "signatureAfterChange": "      private void validatePackageNames(Set<String> pkgNames)", "diff": ["-    private void validatePackageNames(Set<String> aPkgNames)", "+    private void validatePackageNames(Set<String> pkgNames)", "-            aPkgNames.size());", "+            pkgNames.size());", "-        assertEquals(\"names set.\", checkstylePackagesSet, aPkgNames);", "+        assertEquals(\"names set.\", checkstylePackagesSet, pkgNames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d97af2197474fd5684caa4e87603adb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/ParseTreeBuilder.java", "commitBeforeChange": "ff5cbc39c4882b3a3dcdbedcad9393e170148725", "commitAfterChange": "82f4a9852de874b4849a67f53f4e541d13db869b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static ParseTree treeCustomJavadocTags()", "signatureAfterChange": "     public static ParseTree treeCustomJavadocTags()", "diff": ["-        CommonToken ZcIzE = new CommonToken(JavadocTokenTypes.NEWLINE, \"\\n\");", "+        CommonToken ZcIzE = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        CommonToken mDykX = new CommonToken(JavadocTokenTypes.NEWLINE, \"\\n\");", "+        CommonToken mDykX = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        CommonToken VNXPi = new CommonToken(JavadocTokenTypes.NEWLINE, \"\\n\");", "+        CommonToken VNXPi = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dcb68e2a0b75a71eb586a8b07f73bf2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public DetectorOptions setIgnoreCase(boolean aIgnore)", "signatureAfterChange": "     public DetectorOptions setIgnoreCase(boolean ignore)", "diff": ["-    public DetectorOptions setIgnoreCase(boolean aIgnore)", "+    public DetectorOptions setIgnoreCase(boolean ignore)", "-        mIgnoreCase = aIgnore;", "+        ignoreCase = ignore;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dd5cf47230d28dc2f17aaa12e37b794", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "e40d9f41cf066f205e3c0ffd1b99a6e37d4963d9", "commitAfterChange": "2ff20f4af36062db07fa245ab6b3a1d8ab2fe16c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static DetailAST getNextCurNode(DetailAST curNode)", "signatureAfterChange": "     private static DetailAST getNextCurNode(DetailAST curNode)", "diff": ["-        while (currentNode != null && nodeToVisit == null) {", "+        while (nodeToVisit == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e288a0dfe0060d78834a774a1009125", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private boolean isVariableMatchesIgnorePattern(String aVariable)", "signatureAfterChange": "     private boolean isVariableMatchesIgnorePattern(String variable)", "diff": ["-    private boolean isVariableMatchesIgnorePattern(String aVariable)", "+    private boolean isVariableMatchesIgnorePattern(String variable)", "-        final Matcher matcher = mIgnoreVariablePattern.matcher(aVariable);", "+        final Matcher matcher = ignoreVariablePattern.matcher(variable);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e2f9d7adfb980f0910aa5758b10e1b0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(final DetailAST aMethodCall)", "signatureAfterChange": "      @Override     public void visitToken(final DetailAST methodCall)", "diff": ["-    public void visitToken(final DetailAST aMethodCall)", "+    public void visitToken(final DetailAST methodCall)", "-        final DetailAST dot = aMethodCall.getFirstChild();", "+        final DetailAST dot = methodCall.getFirstChild();", "-            log(aMethodCall.getLineNo(), aMethodCall.getColumnNo(),", "+            log(methodCall.getLineNo(), methodCall.getColumnNo(),", "-        if (!mIgnoreEqualsIgnoreCase", "+        if (!ignoreEqualsIgnoreCase", "-            log(aMethodCall.getLineNo(), aMethodCall.getColumnNo(),", "+            log(methodCall.getLineNo(), methodCall.getColumnNo(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e497d22689d1d576bb448b1092e9567", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void startElement(String aNamespaceURI,                              String aLocalName,                              String aQName,                              Attributes aAtts)         throws SAXException", "signatureAfterChange": "      @Override     public void startElement(String namespaceURI,                              String localName,                              String qName,                              Attributes atts)         throws SAXException", "diff": ["-    public void startElement(String aNamespaceURI,", "-                             String aLocalName,", "-                             String aQName,", "-                             Attributes aAtts)", "+    public void startElement(String namespaceURI,", "+                             String localName,", "+                             String qName,", "+                             Attributes atts)", "-        if (\"package\".equals(aQName)) {", "+        if (\"package\".equals(qName)) {", "-            final String name = aAtts.getValue(\"name\");", "+            final String name = atts.getValue(\"name\");", "-            mPackageStack.push(name);", "+            packageStack.push(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e9b892fcabb42ecda923a3fb902692f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocNodeImpl.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     public int getType()", "signatureAfterChange": "      @Override     public int getType()", "diff": ["-        return mType;", "+        return type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e9c795b13892e24ef8226184624d59b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static Configuration loadConfiguration(String aConfig,             PropertyResolver aOverridePropsResolver) throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(String config,             PropertyResolver overridePropsResolver) throws CheckstyleException", "diff": ["-    public static Configuration loadConfiguration(String aConfig,", "-            PropertyResolver aOverridePropsResolver) throws CheckstyleException", "+    public static Configuration loadConfiguration(String config,", "+            PropertyResolver overridePropsResolver) throws CheckstyleException", "-        return loadConfiguration(aConfig, aOverridePropsResolver, false);", "+        return loadConfiguration(config, overridePropsResolver, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ebfad2ef0580aaeaccd22234964d480", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/AuditEvent.java", "commitBeforeChange": "2279ec2a489d1104f2741f2aa3458857d862ac34", "commitAfterChange": "6970485b88600343de72af03a6bf87cf78e6cf55", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public AuditEvent(Object aSource)", "signatureAfterChange": "     public AuditEvent(Object aSource)", "diff": ["-        super(aSource);", "+        this(aSource, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f01d827899f71068aa3de795a2a5854", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public ByteBuffer getBytes() throws IOException", "signatureAfterChange": "     public ByteBuffer getBytes() throws IOException", "diff": ["-        if (mFile == null) {", "+        if (file == null) {", "-        if (mFile.length() > Integer.MAX_VALUE) {", "+        if (file.length() > Integer.MAX_VALUE) {", "-        byte[] bytes = new byte[(int) mFile.length() + 1];", "-        final FileInputStream stream = new FileInputStream(mFile);", "+        byte[] bytes = new byte[(int) file.length() + 1];", "+        final FileInputStream stream = new FileInputStream(file);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f09c849e41c8b7e399a91fa878a6e40", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java", "commitBeforeChange": "3c7c3cbe88a2bec0962702305db4f2b05117501c", "commitAfterChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "         boolean hasPrivateCtor()", "signatureAfterChange": "         boolean isWithPrivateCtor()", "diff": ["-        boolean hasPrivateCtor()", "+        boolean isWithPrivateCtor()", "-            return hasPrivateCtor;", "+            return withPrivateCtor;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f259230bef2477dde66d721feb521df", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/duplicates/StrictDuplicateCodeCheck.java", "commitBeforeChange": "28a4f2fe029422414814eeb6858f0b9c0cef7039", "commitAfterChange": "40f4c37a21b1c8444f39f12c5f92e79af10be34f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void fillSortedRelevantChecksums()", "signatureAfterChange": "     private void fillSortedRelevantChecksums()", "diff": ["-        for (int i = 0; i < mLineChecksums.length; i++) {", "+        for (int i = 0; i < mLineBlockChecksums.length; i++) {", "-            final long[] checksums = mLineChecksums[i];", "+            final long[] checksums = mLineBlockChecksums[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f3a8318eea606635b61b969fff73904", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "947b30dd6eb589f265ee061a99801064a2ae6fe4", "commitAfterChange": "1891ca16af1e1b296f1ca4b0f0dc164dadc75e3f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private ParseStatus parseJavadocAsDetailNode(DetailAST javadocCommentAst)", "signatureAfterChange": "     private ParseStatus parseJavadocAsDetailNode(DetailAST javadocCommentAst)", "diff": ["-            LOG.error(\"Syntax error occurs during javadoc parsing.\", e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f3d79949e878236eb15e942cca56b28", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/IfHandler.java", "commitBeforeChange": "113ea8405c8b753540ee3423d7e37e383f269155", "commitAfterChange": "7f7db38a097a95c264307123924779380fb40077", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected void checkToplevelToken()", "signatureAfterChange": "     protected void checkToplevelToken()", "diff": ["-        if (isElseIf()) {", "+        if (isIfAfterElse()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f4924380f29e3907c17344e1c5f266e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setFileMaximum(int aFileMax)", "signatureAfterChange": "     public void setFileMaximum(int fileMax)", "diff": ["-    public void setFileMaximum(int aFileMax)", "+    public void setFileMaximum(int fileMax)", "-        mFileMax = aFileMax;", "+        this.fileMax = fileMax;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f500d30def4ad51fc68f8deb3f6a802", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractOptionCheck.java", "commitBeforeChange": "59ef3ec378d39806af880fa4c0beaf36f4a7781b", "commitAfterChange": "9413f1a0af4c6020a810d96fdf667db7afd38556", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setOption(String aOption)", "signatureAfterChange": "     public void setOption(String aOption)", "diff": ["-        mOption = AbstractOption.decode(aOption);", "+        mOption = mOption.decode(aOption);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f6888df07a93f03c0f96ccf63626c70", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setAllowSingleLineIf(boolean aAllowSingleLineIf)", "signatureAfterChange": "     public void setAllowSingleLineIf(boolean allowSingleLineIf)", "diff": ["-    public void setAllowSingleLineIf(boolean aAllowSingleLineIf)", "+    public void setAllowSingleLineIf(boolean allowSingleLineIf)", "-        this.mAllowSingleLineIf = aAllowSingleLineIf;", "+        this.allowSingleLineIf = allowSingleLineIf;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f6e6398f05a2d25eed0b104ca66644e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "          public String getMessageKey()", "signatureAfterChange": "          public String getMessageKey()", "diff": ["-            return mMessageKey;", "+            return messageKey;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fb488e7befe21ac3baf857404f32ca9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "         public boolean containsInstanceField(String aField)", "signatureAfterChange": "         public boolean containsInstanceField(String field)", "diff": ["-        public boolean containsInstanceField(String aField)", "+        public boolean containsInstanceField(String field)", "-            return mInstanceFields.contains(aField)", "+            return instanceFields.contains(field)", "-                    && (mParent != null)", "-                    && mParent.containsInstanceField(aField);", "+                    && (parent != null)", "+                    && parent.containsInstanceField(field);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fd0ba20e35a6b342a63804cfc5504bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AnnotationUtility.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static boolean containsAnnotation(final DetailAST aAST,         String aAnnotation)", "signatureAfterChange": "     public static boolean containsAnnotation(final DetailAST ast,         String annotation)", "diff": ["-    public static boolean containsAnnotation(final DetailAST aAST,", "-        String aAnnotation)", "+    public static boolean containsAnnotation(final DetailAST ast,", "+        String annotation)", "-        return AnnotationUtility.getAnnotation(aAST, aAnnotation) != null;", "+        return AnnotationUtility.getAnnotation(ast, annotation) != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fe2d5979e67720825d471ec83ecc299", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java", "commitBeforeChange": "f313f31ab30308796ce76d167ad1f08e79e28fdd", "commitAfterChange": "829a44bde41c971bcb61e5f476e222d2896e519f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        if (container.getType() != TokenTypes.CLASS_DEF) {", "+        if (container.getType() == TokenTypes.INTERFACE_DEF) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ff13adaf94939cafee8ed5017f1125a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule21filename/OuterTypeFilenameTest.java", "commitBeforeChange": "6fbe3f344a5507d1368d1564647ffacb12463d17", "commitAfterChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void outerTypeFilenameTest_3() throws Exception", "signatureAfterChange": "      @Test     public void outerTypeFilenameTest3() throws Exception", "diff": ["-    public void outerTypeFilenameTest_3() throws Exception {", "+    public void outerTypeFilenameTest3() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ffe0c8e33661c1a355a7affd79b273a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/RegexpCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setIllegalPattern(boolean aIllegalPattern)", "signatureAfterChange": "     public void setIllegalPattern(boolean illegalPattern)", "diff": ["-    public void setIllegalPattern(boolean aIllegalPattern)", "+    public void setIllegalPattern(boolean illegalPattern)", "-        mIllegalPattern = aIllegalPattern;", "+        this.illegalPattern = illegalPattern;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "900773b86105b3401a5c1c6cdd519ee3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private int getParentType(DetailAST aCommentBlock)", "signatureAfterChange": "     private int getParentType(DetailAST commentBlock)", "diff": ["-    private int getParentType(DetailAST aCommentBlock)", "+    private int getParentType(DetailAST commentBlock)", "-        final DetailAST parentNode = aCommentBlock.getParent();", "+        final DetailAST parentNode = commentBlock.getParent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90511beeaf5fe5dd52d99cc1c5242169", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean hasFallTruComment(DetailAST aCurrentCase,             DetailAST aNextCase)", "signatureAfterChange": "     private boolean hasFallTruComment(DetailAST currentCase,             DetailAST nextCase)", "diff": ["-    private boolean hasFallTruComment(DetailAST aCurrentCase,", "-            DetailAST aNextCase)", "+    private boolean hasFallTruComment(DetailAST currentCase,", "+            DetailAST nextCase)", "-        final int startLineNo = aCurrentCase.getLineNo();", "-        final int endLineNo = aNextCase.getLineNo();", "-        final int endColNo = aNextCase.getColumnNo();", "+        final int startLineNo = currentCase.getLineNo();", "+        final int endLineNo = nextCase.getLineNo();", "+        final int endColNo = nextCase.getColumnNo();", "-        if (commentMatch(mRegExp, linepart, endLineNo)) {", "+        if (commentMatch(regExp, linepart, endLineNo)) {", "-                return commentMatch(mRegExp, lines[i], i + 1);", "+                return commentMatch(regExp, lines[i], i + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "906acee02b727f1e0779f7a6356a2f0d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setJavaStyle(boolean aJavaStyle)", "signatureAfterChange": "     public void setJavaStyle(boolean javaStyle)", "diff": ["-    public void setJavaStyle(boolean aJavaStyle)", "+    public void setJavaStyle(boolean javaStyle)", "-        mJavaStyle = aJavaStyle;", "+        this.javaStyle = javaStyle;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90a256d858a93a44a432df25bdcf370c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "384ecfc7d5a8ec7f0711c8baae661118297272a2", "commitAfterChange": "f786378e2325aaa95974d70b7df07f8dc109648e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private static CommandLine parseCli(String... args)             throws ParseException", "signatureAfterChange": "     private static CommandLine parseCli(String... args)             throws ParseException", "diff": ["-        final CommandLineParser clp = new PosixParser();", "+        final CommandLineParser clp = new DefaultParser();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90ed6e77ea97b9ea46ed944eb1d18386", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void visitSemi(DetailAST aAst)", "signatureAfterChange": "     private void visitSemi(DetailAST ast)", "diff": ["-    private void visitSemi(DetailAST aAst)", "+    private void visitSemi(DetailAST ast)", "-        if (mExprDepth == 0) {", "-            mLastStatementEnd = aAst.getLineNo();", "+        if (exprDepth == 0) {", "+            lastStatementEnd = ast.getLineNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90fc6d39d53476514790b107ed2f6d19", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractSuperCheck.java", "commitBeforeChange": "5cd16d56a2ef2a3daaf1674666a9a5e6f2ddfe78", "commitAfterChange": "f9a9d6c3d321eeb2879efb7f48f02fe21a51c06c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "         public MethodNode(DetailAST ast)", "signatureAfterChange": "         public MethodNode(DetailAST ast)", "diff": ["-            callsSuper = false;", "+            callingSuper = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9106947a490c381fc7c29497a205a7fe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/coding/InputFallThrough.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     void method(int i, int j)", "signatureAfterChange": "     void method(int i, int j, boolean cond)", "diff": ["-    void method(int i, int j) {", "+    void method(int i, int j, boolean cond) {", "-                for (int j = 0; j < 10; j++) {", "+                for (int j1 = 0; j1 < 10; j1++) {", "-                while(false) {", "+                while(cond) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91265d61d9a49f509e5f0ca523af8be2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "a8e60736f4d66e806ffe1d250da3b58bf5dc2132", "commitAfterChange": "5646a5ebba28a22408fb0d8ebb9f2311a619f53f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setPerformEqualsIgnoreCaseCheck(boolean performEqualsIgnoreCaseCheck)", "signatureAfterChange": "     public void setIgnoreEqualsIgnoreCase(boolean newValue)", "diff": ["-    public void setPerformEqualsIgnoreCaseCheck(boolean performEqualsIgnoreCaseCheck) {", "-        mPerformEqualsIgnoreCaseCheck = performEqualsIgnoreCaseCheck;", "+    public void setIgnoreEqualsIgnoreCase(boolean newValue) {", "+        mIgnoreEqualsIgnoreCase = newValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "912f467565977981fbcaa1a64c7a6d1c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck.java", "commitBeforeChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "commitAfterChange": "29027109bf962f47b6a6000fdca69b5679ce4b43", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void loadHeaderFile() throws CheckstyleException", "signatureAfterChange": "     private void loadHeaderFile() throws CheckstyleException", "diff": ["-                    uri.toURL().openStream()), mCharset);", "+                    uri.toURL().openStream()), charset);", "-                    \"unable to load header file \" + mFilename, ex);", "+                    \"unable to load header file \" + filename, ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91359ab6bc9bee8e114c137f3f16ef08", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "65277d30422d758d9a6195fac042e239131942ec", "commitAfterChange": "7e34b7d4089b49b9cefe727f62e1319ac3e4e135", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private Set loadKeys(File aFile)", "signatureAfterChange": "     private Set loadKeys(File aFile)", "diff": ["-        InputStream inputStream = null;", "-        Set keys = new HashSet();", "+        final Set keys = new HashSet();", "+        InputStream inStream = null;", "-            inputStream = new FileInputStream(aFile);", "-            Properties properties = new Properties();", "-            properties.load(inputStream);", "+            inStream = new FileInputStream(aFile);", "+            Properties props = new Properties();", "+            props.load(inStream);", "-            Enumeration e = properties.propertyNames();", "+            final Enumeration e = props.propertyNames();", "-                inputStream.close();", "+                inStream.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9141bd76ca2b201d1cf36e6d11c16182", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "62ca98db3434596d34c28134576b3eca549319b3", "commitAfterChange": "2d315277b6e1c152fd78da9fb91f214c43b31996", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setProperties(File props)", "signatureAfterChange": "     public void setProperties(File aProps)", "diff": ["-    public void setProperties(File props)", "+    public void setProperties(File aProps)", "-            mProperties.load(new FileInputStream(props));", "+            mProperties.load(new FileInputStream(aProps));", "-                \"Could not find Properties file '\" + props + \"'\", location);", "+                \"Could not find Properties file '\" + aProps + \"'\", location);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "919e98e0fdae384b852522e41cc6443d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "d28a2aa39ef15132757260a5e0b3ec03d6ae28f3", "commitAfterChange": "c2afeecbf7b6c8e2ed6b50516adbe788fd105f31", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public String getMessage()", "signatureAfterChange": "     public String getMessage()", "diff": ["-            ex.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91b681d419ebde26bbcf5d9c1497f033", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/FilterSetTest.java", "commitBeforeChange": "3a55941f33dcd9111d6b61b0505217f47973a39d", "commitAfterChange": "f60a9cfe8b1b27d5ea25095bdfc690001da9f4d6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Before     public void setUp()", "signatureAfterChange": "      @Before     public void setUp()", "diff": ["-        filter = new CSVFilter(\"\");", "+        filter = new CsvFilter(\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9206e05f25aba67d0b1747449a96b0ce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "c9db9f82e2311350bba5fd7e4042ae69f503e60b", "commitAfterChange": "faf76530d87662e93197f00d1d818f3f6a481763", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     void verifyType(MyModifierSet aMods, MyCommonAST aType)", "signatureAfterChange": "     void verifyType(MyModifierSet aMods, MyCommonAST aType)", "diff": ["+        // Always check that the order of modifiers follows the JLS suggestion", "+        checkModOrder(aMods);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "920b2dc5a0190b8886a6d97bd79b06f6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "3a55941f33dcd9111d6b61b0505217f47973a39d", "commitAfterChange": "f60a9cfe8b1b27d5ea25095bdfc690001da9f4d6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Override     public boolean equals(Object other)", "signatureAfterChange": "      @Override     public boolean equals(Object other)", "diff": ["-                && Objects.equals(linesCSV, suppressElement.linesCSV)", "-                && Objects.equals(columnsCSV, suppressElement.columnsCSV);", "+                && Objects.equals(linesCsv, suppressElement.linesCsv)", "+                && Objects.equals(columnsCsv, suppressElement.columnsCsv);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "920b6c1d0802f1eb90ab4500bdb8e66c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "546f336e25b26d072f96e2cda139b885858ed5b0", "commitAfterChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static Map<String, Set<File>> arrangePropertyFiles(         List<File> propFiles, String basenameSeparator)", "signatureAfterChange": "     private static Map<String, Set<File>> arrangePropertyFiles(         List<File> propFiles, String basenameSeparator)", "diff": ["-        for (final File f : propFiles) {", "-            final String identifier = extractPropertyIdentifier(f,", "+        for (final File file : propFiles) {", "+            final String identifier = extractPropertyIdentifier(file,", "-            fileSet.add(f);", "+            fileSet.add(file);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "922c05b51ac2a1de97d65a2d84f5e9b4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTag.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public boolean canReferenceImports()", "signatureAfterChange": "     public boolean canReferenceImports()", "diff": ["-        return (JavadocTagInfo.SEE.equals(mTagInfo)", "-                || JavadocTagInfo.LINK.equals(mTagInfo)", "-                || JavadocTagInfo.LINKPLAIN.equals(mTagInfo)", "-                || JavadocTagInfo.THROWS.equals(mTagInfo)", "-                || JavadocTagInfo.EXCEPTION.equals(mTagInfo));", "+        return (JavadocTagInfo.SEE.equals(tagInfo)", "+                || JavadocTagInfo.LINK.equals(tagInfo)", "+                || JavadocTagInfo.LINKPLAIN.equals(tagInfo)", "+                || JavadocTagInfo.THROWS.equals(tagInfo)", "+                || JavadocTagInfo.EXCEPTION.equals(tagInfo));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9243c0d32a19ac2c798a5f8794fa61b1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "e7547bb7ddccec6737cea118a41864fc349ea1d2", "commitAfterChange": "d220d7c3cc74490c7f2923f2ea85d00133afe98c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Test     public void testBadAnnonOverride() throws Exception", "signatureAfterChange": "     @Test     public void testBadAnnotationOverride() throws Exception", "diff": ["-    public void testBadAnnonOverride() throws Exception {", "+    public void testBadAnnotationOverride() throws Exception {", "-        verify(checkConfig, getPath(\"annotation\" + File.separator + \"BadAnnonOverride.java\"), expected);", "+        verify(checkConfig, getPath(\"annotation\" + File.separator + \"BadAnnotationOverride.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9248d34f69872acebb73666ca35aaeba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "commitBeforeChange": "899f12f19f0f7684f4a93b0d200fd8bed7a84666", "commitAfterChange": "05211d164a1156c7d7b17e7cf72e49903bc532ac", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-        final OperatorWrapOption wOp = getAbstractOption();", "+        final WrapOption wOp = getAbstractOption();", "-        if ((wOp == OperatorWrapOption.NL)", "+        if ((wOp == WrapOption.NL)", "-        else if ((wOp == OperatorWrapOption.EOL)", "+        else if ((wOp == WrapOption.EOL)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92825cdb50d7169c72a536fe72ce53b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "         public Context(DetailAST aAST)", "signatureAfterChange": "         public Context(DetailAST ast)", "diff": ["-        public Context(DetailAST aAST)", "+        public Context(DetailAST ast)", "-            mAST = aAST;", "-            mCount = 0;", "+            this.ast = ast;", "+            count = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92a942df80a44f2c926b3d994c36ba74", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     PkgControl locateFinest(final String aForPkg)", "signatureAfterChange": "     PkgControl locateFinest(final String forPkg)", "diff": ["-    PkgControl locateFinest(final String aForPkg)", "+    PkgControl locateFinest(final String forPkg)", "-        if (!aForPkg.startsWith(getFullPackage())) {", "+        if (!forPkg.startsWith(getFullPackage())) {", "-        for (PkgControl pc : mChildren) {", "-            final PkgControl match = pc.locateFinest(aForPkg);", "+        for (PkgControl pc : children) {", "+            final PkgControl match = pc.locateFinest(forPkg);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92aad2865bd1d1da48bc4ea48f7d8ebf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void visitExpr()", "signatureAfterChange": "     private void visitExpr()", "diff": ["-        mContextStack.push(mContext);", "-        mContext = new Context((mContext == null) || mContext.isChecking());", "+        contextStack.push(context);", "+        context = new Context((context == null) || context.isChecking());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92e88fa801bd6dd87b487156a72c8f9f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public int getColumnNo()", "signatureAfterChange": "     public int getColumnNo()", "diff": ["-        if (mColumnNo == NOT_INITIALIZED) {", "+        if (columnNo == NOT_INITIALIZED) {", "-        return mColumnNo;", "+        return columnNo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92fbcc0572c05475121a2eb8cc14196c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalThrowsCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setIgnoreOverridenMethods(boolean aIgnoreOverridenMethods)", "signatureAfterChange": "     public void setIgnoreOverridenMethods(boolean ignoreOverridenMethods)", "diff": ["-    public void setIgnoreOverridenMethods(boolean aIgnoreOverridenMethods)", "+    public void setIgnoreOverridenMethods(boolean ignoreOverridenMethods)", "-        this.mIgnoreOverridenMethods = aIgnoreOverridenMethods;", "+        this.ignoreOverridenMethods = ignoreOverridenMethods;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9300ec361ab45eadb8b6f3e2bf14f462", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "      @Test     public void testCreateListenerWithLocation_IllegalStateException() throws Exception", "signatureAfterChange": "      @Test     public void testCreateListenerWithLocationIllegalStateException() throws Exception", "diff": ["-    public void testCreateListenerWithLocation_IllegalStateException() throws Exception {", "+    public void testCreateListenerWithLocationIllegalStateException() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "931f26a50eac7df152e7837cc1a13a8b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setMethodMaximum(int methodMax)", "signatureAfterChange": "     public void setMethodMaximum(int methodMaximum)", "diff": ["-    public void setMethodMaximum(int methodMax) {", "-        this.methodMax = methodMax;", "+    public void setMethodMaximum(int methodMaximum) {", "+        this.methodMaximum = methodMaximum;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "936ed98854e55c68bd16be5423841a8c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void processLines(FileText aText)", "signatureAfterChange": "     public void processLines(FileText text)", "diff": ["-    public void processLines(FileText aText)", "+    public void processLines(FileText text)", "-        mText = aText;", "+        this.text = text;", "-        mMatcher = mOptions.getPattern().matcher(mText.getFullText());", "+        matcher = options.getPattern().matcher(text.getFullText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93e31a0822b0e6c6ac284e06a3e09a6f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "65ca7775ba7d0b649c16cfdc8a1447f41867c870", "commitAfterChange": "6ffc8dd26075456b055ffcd35d3915c23049bfbb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private String getConfigHashCode(GlobalProperties aConfiguration)", "signatureAfterChange": "     private String getConfigHashCode(Serializable aConfiguration)", "diff": ["-    private String getConfigHashCode(GlobalProperties aConfiguration)", "+    private String getConfigHashCode(Serializable aConfiguration)", "-            // im-memory serialization of GlobalProperties", "+            // im-memory serialization of Configuration"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "942cb751c983b84d5423c3b8d53cfbab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ParameterAssignmentCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void leaveMethodDef()", "signatureAfterChange": "     private void leaveMethodDef()", "diff": ["-        mParameterNames = mParameterNamesStack.pop();", "+        parameterNames = parameterNamesStack.pop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "943e901b54c8a629a1b8fd23dfa34760", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public LineWrappingHandler(IndentationCheck aInstance, DetailAST aFirstNode)", "signatureAfterChange": "     public LineWrappingHandler(IndentationCheck instance, DetailAST firstNode)", "diff": ["-    public LineWrappingHandler(IndentationCheck aInstance, DetailAST aFirstNode)", "+    public LineWrappingHandler(IndentationCheck instance, DetailAST firstNode)", "-        mIndentCheck = aInstance;", "-        mFirstNode = aFirstNode;", "-        mLastNode = findLastNode(mFirstNode);", "-        mIndentLevel = mIndentCheck.getLineWrappingIndentation();", "-        mForceStrictCondition = mIndentCheck.getForceStrictCondition();", "+        indentCheck = instance;", "+        this.firstNode = firstNode;", "+        lastNode = findLastNode(firstNode);", "+        indentLevel = indentCheck.getLineWrappingIndentation();", "+        forceStrictCondition = indentCheck.getForceStrictCondition();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "943e96938b031f06624784e36a0bd77f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private String removeQuotes(final String aWarning)", "signatureAfterChange": "     private String removeQuotes(final String warning)", "diff": ["-    private String removeQuotes(final String aWarning)", "+    private String removeQuotes(final String warning)", "-        assert aWarning != null : \"the aWarning was null\";", "-        assert aWarning.charAt(0) == '\"';", "-        assert aWarning.charAt(aWarning.length() - 1) == '\"';", "+        assert warning != null : \"the warning was null\";", "+        assert warning.charAt(0) == '\"';", "+        assert warning.charAt(warning.length() - 1) == '\"';", "-        return aWarning.substring(1, aWarning.length() - 1);", "+        return warning.substring(1, warning.length() - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94540961e6144797e3aa6964ccea99ce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void makeDropTarget(final Component component, boolean recursive)             throws TooManyListenersException", "signatureAfterChange": "     private void makeDropTarget(final Component component, boolean recursive)             throws TooManyListenersException", "diff": ["-        final DropTarget dt = new DropTarget();", "-        dt.addDropTargetListener(dropListener);", "+        final DropTarget target = new DropTarget();", "+        target.addDropTargetListener(dropListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "949f2a4d034d6b618343636cb6072f20", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheckTest.java", "commitBeforeChange": "9ce956473be0ec029ee6738fb284659c17698518", "commitAfterChange": "ee7d6e9df391945a64c23210cd0fdc1a58fb7d95", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testWrongSeparatorLength() throws Exception", "signatureAfterChange": "      @Test     public void testWrongSeparatorLength() throws Exception", "diff": ["-            if (System.getProperty(\"os.name\").toLowerCase().startsWith(\"windows\")) {", "+            if (System.getProperty(\"os.name\").toLowerCase(ENGLISH).startsWith(\"windows\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94b8342af068e26cd580df07af436ccd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderInfo.java", "commitBeforeChange": "4a5491810944bed643a9f2acf46ef3b9da8f1be7", "commitAfterChange": "f66b504b06f8c479d338fb5b2797392dfa3ef359", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     List<Pattern> geHeaderRegexps()", "signatureAfterChange": "     List<Pattern> getHeaderRegexps()", "diff": ["-    List<Pattern> geHeaderRegexps()", "+    List<Pattern> getHeaderRegexps()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94da22287c0371159029e5c6c4ad877d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "         public void setFile(File aValue)", "signatureAfterChange": "         public void setFile(File value)", "diff": ["-        /** @param aValue set the property value from a File */", "-        public void setFile(File aValue)", "+        /** @param value set the property value from a File */", "+        public void setFile(File value)", "-            setValue(aValue.getAbsolutePath());", "+            setValue(value.getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "951a398d80f98192be3d7c624ea6a88f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressElementTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testDecideByFileNameAndModuleMatching_ModuleNull()", "signatureAfterChange": "      @Test     public void testDecideByFileNameAndModuleMatchingModuleNull()", "diff": ["-    public void testDecideByFileNameAndModuleMatching_ModuleNull() {", "+    public void testDecideByFileNameAndModuleMatchingModuleNull() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9520731e5197882f2590c1241eea41e4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Comment.java", "commitBeforeChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "commitAfterChange": "abfc952fd0ed88f6246b1d969a8a980ea63f0bd6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Comment(final String[] text, final int firstCol,             final int lastLine, final int lastCol)", "signatureAfterChange": "     public Comment(final String[] text, final int firstCol,             final int lastLine, final int lastCol)", "diff": ["-        firstLine = lastLine - this.text.length + 1;", "-        this.lastLine = lastLine;", "-        this.firstCol = firstCol;", "-        this.lastCol = lastCol;", "+        startLineNo = lastLine - this.text.length + 1;", "+        this.endLineNo = lastLine;", "+        this.startColNo = firstCol;", "+        this.endColNo = lastCol;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9520b3f55160b3cd3059b006fd3251af", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void checkTrailingComma(final DetailAST aAnnotation)", "signatureAfterChange": "     private void checkTrailingComma(final DetailAST annotation)", "diff": ["-    private void checkTrailingComma(final DetailAST aAnnotation)", "+    private void checkTrailingComma(final DetailAST annotation)", "-        if (TrailingArrayComma.IGNORE.equals(this.mComma)", "-            || this.mComma == null)", "+        if (TrailingArrayComma.IGNORE.equals(this.comma)", "+            || this.comma == null)", "-        DetailAST child = aAnnotation.getFirstChild();", "+        DetailAST child = annotation.getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "952b031d723f6e07b2d2ebb49a8623de", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean isPublic(DetailAST aTypeDef)", "signatureAfterChange": "     private boolean isPublic(DetailAST typeDef)", "diff": ["-    private boolean isPublic(DetailAST aTypeDef)", "+    private boolean isPublic(DetailAST typeDef)", "-                aTypeDef.findFirstToken(TokenTypes.MODIFIERS);", "+                typeDef.findFirstToken(TokenTypes.MODIFIERS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "952dce5763ab1afc0cbfa8ccc9e7d986", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/RegexpCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-    public void beginTree(DetailAST aRootAST)", "+    public void beginTree(DetailAST rootAST)", "-        mMatcher = pattern.matcher(getFileContents().getText().getFullText());", "-        mMatchCount = 0;", "-        mErrorCount = 0;", "+        matcher = pattern.matcher(getFileContents().getText().getFullText());", "+        matchCount = 0;", "+        errorCount = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95b06f2f69bc9cff1795c1ca43abf47f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java", "commitBeforeChange": "755eda4d684e71ea18bed69646e07140310b67fc", "commitAfterChange": "1dd631b5e36d45c21e7de38bbee0376912d215c5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic ConfigurationBuilder(File aROOT) \t\t\tthrows CheckstyleException, IOException", "signatureAfterChange": "  \tpublic ConfigurationBuilder(File aROOT) \t\t\tthrows CheckstyleException, IOException", "diff": ["-\t\tconfig = getConfigurationFromXML(xmlName, System.getProperties());", "+\t\tconfig = getConfigurationFromXML(XML_NAME, System.getProperties());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95eb1aeafa9e02805b1e6b8304f985f4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "commitAfterChange": "26513d52336c42432ee21565b253297ba4174530", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void startElement(final String namespaceURI,                              final String locqName,                              final String qName,                              final Attributes atts)         throws SAXException", "signatureAfterChange": "      @Override     public void startElement(final String namespaceURI,                              final String locqName,                              final String qName,                              final Attributes atts)         throws SAXException", "diff": ["-            final String pkg = safeGet(atts, \"pkg\");", "+            final String pkg = safeGet(atts, PKG_ATTRIBUTE_NAME);", "-        else if (\"subpackage\".equals(qName)) {", "+        else if (SUBPACKAGE_ELEMENT_NAME.equals(qName)) {", "-        else if (\"allow\".equals(qName) || \"disallow\".equals(qName)) {", "+        else if (ALLOW_ELEMENT_NAME.equals(qName) || \"disallow\".equals(qName)) {", "-            final boolean isAllow = \"allow\".equals(qName);", "+            final boolean isAllow = ALLOW_ELEMENT_NAME.equals(qName);", "-            final String pkg = atts.getValue(\"pkg\");", "+            final String pkg = atts.getValue(PKG_ATTRIBUTE_NAME);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9602049b43399557e65a72642dfa2c7f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4", "commitAfterChange": "c3674faad8a38656e910750fb22a7eef714fb8a7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static boolean isOnlyUnicodeValidChars(String literal, Pattern pattern)", "signatureAfterChange": "     private static boolean isOnlyUnicodeValidChars(String literal, Pattern pattern)", "diff": ["-        final int unicodeValidMatchesCouter =", "+        final int unicodeValidMatchesCounter =", "-        return unicodeMatchesCounter - unicodeValidMatchesCouter == 0;", "+        return unicodeMatchesCounter - unicodeValidMatchesCounter == 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9610517b2e493269a254d9238b32baab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractSuperCheck.java", "commitBeforeChange": "5cd16d56a2ef2a3daaf1674666a9a5e6f2ddfe78", "commitAfterChange": "f9a9d6c3d321eeb2879efb7f48f02fe21a51c06c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-            if (!methodNode.getCallsSuper()) {", "+            if (!methodNode.isCallingSuper()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9648754347ec8f621b27687b9008ec9f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public String getMessage()", "signatureAfterChange": "     public String getMessage()", "diff": ["-            final ResourceBundle bundle = getBundle(mBundle);", "-            final String pattern = bundle.getString(mKey);", "-            return MessageFormat.format(pattern, mArgs);", "+            final ResourceBundle bundle = getBundle(this.bundle);", "+            final String pattern = bundle.getString(key);", "+            return MessageFormat.format(pattern, args);", "-            return MessageFormat.format(mKey, mArgs);", "+            return MessageFormat.format(key, args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9655d298fa7cc90d903698b96625bb11", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setClosingParens(final String aParens)", "signatureAfterChange": "     public void setClosingParens(final String parens)", "diff": ["-    public void setClosingParens(final String aParens)", "+    public void setClosingParens(final String parens)", "-        this.mParens = this.getOption(ClosingParens.class, aParens);", "+        this.parens = this.getOption(ClosingParens.class, parens);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9678a1dacc3293028506c1f4eaf7374f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LineColumn.java", "commitBeforeChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "commitAfterChange": "abfc952fd0ed88f6246b1d969a8a980ea63f0bd6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public LineColumn(int line, int col)", "signatureAfterChange": "     public LineColumn(int line, int column)", "diff": ["-    public LineColumn(int line, int col) {", "+    public LineColumn(int line, int column) {", "-        this.col = col;", "+        this.column = column;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "967b0b527d3ee7edfba3eb9cba0ae506", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "2a01965deb18e6301b72cb8b2b131cba896b7a4e", "commitAfterChange": "c18071b7561b99767e871be9d4d7711eb15b76f1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private Vector getJavadocTags(TextBlock aCmt)", "signatureAfterChange": "     private List getJavadocTags(TextBlock aCmt)", "diff": ["-    private Vector getJavadocTags(TextBlock aCmt)", "+    private List getJavadocTags(TextBlock aCmt)", "-        final Vector tags = new Vector();", "+        final List tags = new ArrayList();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "968704fb917b1c272c73b5fd0c80e4ee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "3f691ec451055c2752ae2d6b25f9a3c050a10783", "commitAfterChange": "425fd5a27cd567d5784bd246729c55cf8cda3dbd", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "         public boolean hasInstanceMember(final DetailAST ident)", "signatureAfterChange": "         public boolean hasInstanceMember(final DetailAST ident)", "diff": ["-            return containsName(instanceMembers, ident);", "+            return containsFieldOrVariableDef(instanceMembers, ident);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "969469b6401b4e1fa8eb346e5ef60baa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void setOnCommentFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setOnCommentFormat(String format)         throws ConversionException", "diff": ["-    public void setOnCommentFormat(String aFormat)", "+    public void setOnCommentFormat(String format)", "-            mOnRegexp = Utils.getPattern(aFormat);", "+            onRegexp = Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96e07993fa349877832f08b2939d48f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static boolean isInitializationSequence(             DetailAST aVariableUsageAst, String aVariableName)", "signatureAfterChange": "     private static boolean isInitializationSequence(             DetailAST variableUsageAst, String variableName)", "diff": ["-            DetailAST aVariableUsageAst, String aVariableName)", "+            DetailAST variableUsageAst, String variableName)", "-        DetailAST currentSiblingAst = aVariableUsageAst;", "+        DetailAST currentSiblingAst = variableUsageAst;", "-                isUsedVariableDeclarationFound = aVariableName.equals(currentVariableName);", "+                isUsedVariableDeclarationFound = variableName.equals(currentVariableName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97041109d6438847ada396f599533d68", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d0e8581e9ce7dd420b94cb837b4331ec0baa9e4d", "commitAfterChange": "6f51fa7e63d3af55e2a6900d9aadb183ecf0cde8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            if (customImportOrderRules.contains(SAME_PACKAGE_RULE_GROUP)", "-                    && samePackageMatchingDepth != -1) {", "+            if (customImportOrderRules.contains(SAME_PACKAGE_RULE_GROUP)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9717fbcfd1971ac9215855a267b21cd5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CheckUtils.java", "commitBeforeChange": "a210010f0d98c85de06228ffc6c605c57df7340f", "commitAfterChange": "e2b4e687d7b8f9d6d5e1346d874b90e4567aff81", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public static boolean isVoidMethod(DetailAST methodDefAst)", "signatureAfterChange": "     public static boolean isNonVoidMethod(DetailAST methodDefAst)", "diff": ["-    public static boolean isVoidMethod(DetailAST methodDefAst) {", "+    public static boolean isNonVoidMethod(DetailAST methodDefAst) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "973d4de123bcbe01f41fe1e7b6bb03ef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "         public AuditListener createListener(Task aTask) throws IOException", "signatureAfterChange": "         public AuditListener createListener(Task task) throws IOException", "diff": ["-        public AuditListener createListener(Task aTask) throws IOException", "+        public AuditListener createListener(Task task) throws IOException", "-            if ((mFormatterType != null)", "-                    && E_XML.equals(mFormatterType.getValue()))", "+            if ((formatterType != null)", "+                    && E_XML.equals(formatterType.getValue()))", "-                return createXMLLogger(aTask);", "+                return createXMLLogger(task);", "-            return createDefaultLogger(aTask);", "+            return createDefaultLogger(task);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9760412534f9115738d119c8ae1169cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     @Override     public boolean accept(AuditEvent aEvent)", "signatureAfterChange": "     @Override     public boolean accept(AuditEvent event)", "diff": ["-    public boolean accept(AuditEvent aEvent)", "+    public boolean accept(AuditEvent event)", "-        if (aEvent.getLocalizedMessage() == null) {", "+        if (event.getLocalizedMessage() == null) {", "-        for (final Iterator<Tag> iter = mTags.iterator(); iter.hasNext();) {", "+        for (final Iterator<Tag> iter = tags.iterator(); iter.hasNext();) {", "-            if (tag.isMatch(aEvent)) {", "+            if (tag.isMatch(event)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "979289fb42e1f4dc5d08f46a591b94c6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "         private String expandFromComment(             String aComment,             String aString,             Pattern aRegexp)", "signatureAfterChange": "         private String expandFrocomment(             String comment,             String string,             Pattern regexp)", "diff": ["-        private String expandFromComment(", "-            String aComment,", "-            String aString,", "-            Pattern aRegexp)", "+        private String expandFrocomment(", "+            String comment,", "+            String string,", "+            Pattern regexp)", "-            final Matcher matcher = aRegexp.matcher(aComment);", "+            final Matcher matcher = regexp.matcher(comment);", "-                return aString;", "+                return string;", "-            String result = aString;", "+            String result = string;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "979a5e76c8f7fc958aee080c3049afaa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Check.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected final int getTabWidth()", "signatureAfterChange": "     protected final int getTabWidth()", "diff": ["-        return mTabWidth;", "+        return tabWidth;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97c74823dac6cd7b6b255cf40bb57716", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/coding/InputDeclarationOrder.java", "commitBeforeChange": "28c8ed692f83ff95e0814bd101177c4bb7794806", "commitAfterChange": "b5c738e6d0118111481daee0afd93b2a2d7d916a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public TestMemberVariableOrderCheck()", "signatureAfterChange": "     public InputDeclarationOrder()", "diff": ["-    public TestMemberVariableOrderCheck()", "+    public InputDeclarationOrder()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97cd6f35392bfb13505a4f57cbf24af6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected final void checkChildren(DetailAST parent,                                        int[] tokenTypes,                                        IndentLevel startLevel,                                        boolean firstLineMatches,                                        boolean allowNesting)", "signatureAfterChange": "     protected final void checkChildren(DetailAST parentNode,                                        int[] tokenTypes,                                        IndentLevel startLevel,                                        boolean firstLineMatches,                                        boolean allowNesting)", "diff": ["-    protected final void checkChildren(DetailAST parent,", "+    protected final void checkChildren(DetailAST parentNode,", "-        for (DetailAST child = parent.getFirstChild();", "+        for (DetailAST child = parentNode.getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97cfbd780cbfe8e234c7a3bd19f76506", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "02ae6023b5b6f66e495393a6f87e4beb4b4ab3d0", "commitAfterChange": "584f7ee1232be96284255540e7249023c327ca8f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public final void leaveToken(DetailAST ast)", "signatureAfterChange": "      @Override     public final void leaveToken(DetailAST ast)", "diff": ["-            int dotIdx = currentClass.lastIndexOf('$');", "+            int dotIdx = currentClassName.lastIndexOf('$');", "-                dotIdx = currentClass.lastIndexOf('.');", "+                dotIdx = currentClassName.lastIndexOf('.');", "-                currentClass = \"\";", "+                currentClassName = \"\";", "-                currentClass = currentClass.substring(0, dotIdx);", "+                currentClassName = currentClassName.substring(0, dotIdx);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97de1e3809fef514980bd981adc73425", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "bdd55605c098cb581884a790286dfec5e57710c8", "commitAfterChange": "913028d7f2698018bb9414d763110d3ef25be875", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public void setHeaderIgnoreLine(int aNum)", "signatureAfterChange": "     public void setHeaderIgnoreLine(String aList)", "diff": ["-    /** @param aNum **/", "-    public void setHeaderIgnoreLine(int aNum)", "+    /** @param aList Comma separated list of line numbers **/", "+    public void setHeaderIgnoreLine(String aList)", "-        mConfig.setHeaderIgnoreLineNo(aNum);", "+        mConfig.setHeaderIgnoreLines(aList);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97e8a8d060027dc117b58399ee1df2fb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck.java", "commitBeforeChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "commitAfterChange": "29027109bf962f47b6a6000fdca69b5679ce4b43", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     protected final void finishLocalSetup() throws CheckstyleException", "signatureAfterChange": "      @Override     protected final void finishLocalSetup() throws CheckstyleException", "diff": ["-        if (mFilename != null) {", "+        if (filename != null) {", "-        if (mHeaderLines.isEmpty()) {", "+        if (readerLines.isEmpty()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9819d6bf93c17988f18a0981e3c26622", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static CliOptions convertCliToPojo(CommandLine cmdLine)", "signatureAfterChange": "     private static CliOptions convertCliToPojo(CommandLine cmdLine)", "diff": ["-        conf.format = cmdLine.getOptionValue(\"f\");", "+        conf.format = cmdLine.getOptionValue(OPTION_F_NAME);", "-            conf.format = \"plain\";", "+            conf.format = PLAIN_FORMAT_NAME;", "-        conf.outputLocation = cmdLine.getOptionValue(\"o\");", "-        conf.configLocation = cmdLine.getOptionValue(\"c\");", "-        conf.propertiesLocation = cmdLine.getOptionValue(\"p\");", "+        conf.outputLocation = cmdLine.getOptionValue(OPTION_O_NAME);", "+        conf.configLocation = cmdLine.getOptionValue(OPTION_C_NAME);", "+        conf.propertiesLocation = cmdLine.getOptionValue(OPTION_P_NAME);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "981cc776dde8f43dc5b5add9a3e5df47", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private boolean matchesStaticImportGroup(boolean aStatic, String aCurrentGroup)", "signatureAfterChange": "     private boolean matchesStaticImportGroup(boolean isStatic, String currentGroup)", "diff": ["-    private boolean matchesStaticImportGroup(boolean aStatic, String aCurrentGroup)", "+    private boolean matchesStaticImportGroup(boolean isStatic, String currentGroup)", "-        return aStatic && STATIC_RULE_GROUP.equals(aCurrentGroup);", "+        return isStatic && STATIC_RULE_GROUP.equals(currentGroup);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "984b5e193aeb91c7d57a7af495d2d72b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/DebugFilter.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     public boolean accept(AuditEvent aEvent)", "signatureAfterChange": "      @Override     public boolean accept(AuditEvent event)", "diff": ["-    public boolean accept(AuditEvent aEvent)", "+    public boolean accept(AuditEvent event)", "-        mCalled = true;", "+        called = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98699c3f7e3101aaf9d2670ccc650cdc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void compareKeySets(Set<Object> aKeys,             Map<File, Set<Object>> aFileMap)", "signatureAfterChange": "     private void compareKeySets(Set<Object> keys,             Map<File, Set<Object>> fileMap)", "diff": ["-    private void compareKeySets(Set<Object> aKeys,", "-            Map<File, Set<Object>> aFileMap)", "+    private void compareKeySets(Set<Object> keys,", "+            Map<File, Set<Object>> fileMap)", "-        final Set<Entry<File, Set<Object>>> fls = aFileMap.entrySet();", "+        final Set<Entry<File, Set<Object>>> fls = fileMap.entrySet();", "-            final Set<Object> keysClone = Sets.newHashSet(aKeys);", "+            final Set<Object> keysClone = Sets.newHashSet(keys);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "987b1858595acbde610dc7f54f7b79c5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "de39a36a6b81521c17e3a4afa0e98e30deccf082", "commitAfterChange": "2b4a02d2c8a498a8a1ee38e9396426209fa65fad", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static String getConfigHashCode(Serializable object)", "signatureAfterChange": "     private static String getConfigHashCode(Serializable object)", "diff": ["-            final ByteArrayOutputStream baos = new ByteArrayOutputStream();", "+            final ByteArrayOutputStream outputStream = new ByteArrayOutputStream();", "-                oos = new ObjectOutputStream(baos);", "+                oos = new ObjectOutputStream(outputStream);", "-            md.update(baos.toByteArray());", "+            md.update(outputStream.toByteArray());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98afa76c10dc392b1d0cc77f2ca79277", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheckTest.java", "commitBeforeChange": "b2991ef9e72bd4c69797779357fd9dc2eab7a3ae", "commitAfterChange": "384ecfc7d5a8ec7f0711c8baae661118297272a2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testNewlineAtEndOfFile() throws Exception", "signatureAfterChange": "      @Test     public void testNewlineLfAtEndOfFile() throws Exception", "diff": ["-    public void testNewlineAtEndOfFile() throws Exception {", "+    public void testNewlineLfAtEndOfFile() throws Exception {", "-            getPath(\"InputNewlineAtEndOfFile.java\"),", "+            getPath(\"InputNewlineLfAtEndOfFile.java\"),", "+            expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98b2a02da2b39229fc4c9a04beca106f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private String getImportGroup(boolean aStatic, String aImportPath)", "signatureAfterChange": "     private String getImportGroup(boolean isStatic, String importPath)", "diff": ["-    private String getImportGroup(boolean aStatic, String aImportPath)", "+    private String getImportGroup(boolean isStatic, String importPath)", "-        for (String group : mCustomImportOrderRules) {", "-            if (matchesImportGroup(aStatic, aImportPath, group)) {", "+        for (String group : customImportOrderRules) {", "+            if (matchesImportGroup(isStatic, importPath, group)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9902a1703005a023b8c9db094e3661c3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public String getSourceName()", "signatureAfterChange": "     public String getSourceName()", "diff": ["-        return mSourceClass.getName();", "+        return sourceClass.getName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "991b9fa140c6ef499a0f964b4f84049b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean isOnlyUnicodeValidChars(String aLiteral, Pattern aPattern)", "signatureAfterChange": "     private boolean isOnlyUnicodeValidChars(String literal, Pattern pattern)", "diff": ["-    private boolean isOnlyUnicodeValidChars(String aLiteral, Pattern aPattern)", "+    private boolean isOnlyUnicodeValidChars(String literal, Pattern pattern)", "-                countMatches(sUnicodeRegexp, aLiteral);", "+                countMatches(sUnicodeRegexp, literal);", "-                countMatches(aPattern, aLiteral);", "+                countMatches(pattern, literal);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "991c48d814dfa8d79a872218b4106d78", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ArrayInitHandler.java", "commitBeforeChange": "c4a7d06206d86f52665eae47af4db28dc59d93a3", "commitAfterChange": "c2ce485b481ba4bd26eb3ba2e3cc6c1850539e0c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     protected IndentLevel getChildrenExpectedLevel()", "signatureAfterChange": "      @Override     protected IndentLevel getChildrenExpectedLevel()", "diff": ["-            getNextFirstNonblankOnLineAfter(firstLine, lcurlyPos);", "+            getNextFirstNonBlankOnLineAfter(firstLine, lcurlyPos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9921c7bdd05d9847a9193fc575fd5233", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/SuperCloneCheckTest.java", "commitBeforeChange": "6839ac4fd83dde7060c8f6f28e75aa3d6ff2456b", "commitAfterChange": "31f6765fdcf2233ca6c53730c2fc196576557f66", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testAntoherInputFile() throws Exception", "signatureAfterChange": "      @Test     public void testAnotherInputFile() throws Exception", "diff": ["-    public void testAntoherInputFile() throws Exception {", "+    public void testAnotherInputFile() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "994368a606a6869477d56812d51651fc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "         private void addReferencedClassName(DetailAST ast)", "signatureAfterChange": "         private void addReferencedClassName(DetailAST ast)", "diff": ["-            final String className = FullIdent.createFullIdent(ast).getText();", "-            addReferencedClassName(className);", "+            final String fullIdentName = FullIdent.createFullIdent(ast).getText();", "+            addReferencedClassName(fullIdentName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9945e5ea8b16d5e743f435ced3108bc1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/UnnecessaryParenthesesCheckTest.java", "commitBeforeChange": "de60ea7b86b5ea25338dfe8a300db9d179004812", "commitAfterChange": "e24596db9459a3592784a544b213cc7aa919a3f6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-        verify(checkConfig, getPath(TEST_FILE), expected);", "+        verify(checkConfig, getPath(\"InputUnnecessaryParentheses.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9993c249c66dcafe38c51d57cf707d2c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "a1ad6dbd260c4293be469801021f371e60fc9ae8", "commitAfterChange": "1c42e3eeb9aeebc47b2373541c1cc8d311d8b671", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void checkCompactNoArrayStyle(final DetailAST annotation)", "signatureAfterChange": "     private void checkCompactNoArrayStyle(final DetailAST annotation)", "diff": ["-            this.log(annotation.getLineNo(), \"annotation.incorrect.style\",", "+            this.log(annotation.getLineNo(), MSG_KEY_ANNOTATION_INCORRECT_STYLE,", "-                this.log(annotation.getLineNo(), \"annotation.incorrect.style\",", "+                this.log(annotation.getLineNo(), MSG_KEY_ANNOTATION_INCORRECT_STYLE,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99ab9b36ba34320b97667de04ecc0f7a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "         public boolean isChecking()", "signatureAfterChange": "         public boolean isChecking()", "diff": ["-            return mChecking;", "+            return checking;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99b4fbb10cdf4ecc2e90a7d9b748d593", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractAccessControlNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public boolean getApplyToPublic()", "signatureAfterChange": "     public boolean getApplyToPublic()", "diff": ["-        return mApplyToPublic;", "+        return applyToPublic;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99b70ed0879b1b04f0f0eb1f9a63f937", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private Tag findNearestMatch(AuditEvent aEvent)", "signatureAfterChange": "     private Tag findNearestMatch(AuditEvent event)", "diff": ["-    private Tag findNearestMatch(AuditEvent aEvent)", "+    private Tag findNearestMatch(AuditEvent event)", "-        // TODO: try binary search if sequential search becomes a performance", "+        // TODO: try binary search if sequential search becomes a perforonce", "-        for (Tag tag : mTags) {", "-            if ((tag.getLine() > aEvent.getLine())", "-                || ((tag.getLine() == aEvent.getLine())", "-                    && (tag.getColumn() > aEvent.getColumn())))", "+        for (Tag tag : tags) {", "+            if ((tag.getLine() > event.getLine())", "+                || ((tag.getLine() == event.getLine())", "+                    && (tag.getColumn() > event.getColumn())))", "-            if (tag.isMatch(aEvent)) {", "+            if (tag.isMatch(event)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99f787af8b7c294794fb6d4067c72f8f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-    public void finishTree(DetailAST aRootAST)", "+    public void finishTree(DetailAST rootAST)", "-        for (DetailAST literalNewAST : mInstantiations) {", "+        for (DetailAST literalNewAST : instantiations) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a0908899c6d15004a0558f530d0a96f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setMinimumNumber(int aMinimumNumber)", "signatureAfterChange": "     public void setMinimumNumber(int minimumNumber)", "diff": ["-    public void setMinimumNumber(int aMinimumNumber)", "+    public void setMinimumNumber(int minimumNumber)", "-        mMinimumNumber = aMinimumNumber;", "+        this.minimumNumber = minimumNumber;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a0ccc5f070bd60d580237dfbfe834a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean isNumericType(int aType)", "signatureAfterChange": "     private boolean isNumericType(int type)", "diff": ["-    private boolean isNumericType(int aType)", "+    private boolean isNumericType(int type)", "-        return ((aType == TokenTypes.LITERAL_BYTE)", "-                || (aType == TokenTypes.LITERAL_SHORT)", "-                || (aType == TokenTypes.LITERAL_INT)", "-                || (aType == TokenTypes.LITERAL_FLOAT)", "-                || (aType == TokenTypes.LITERAL_LONG)", "-                || (aType == TokenTypes.LITERAL_DOUBLE));", "+        return ((type == TokenTypes.LITERAL_BYTE)", "+                || (type == TokenTypes.LITERAL_SHORT)", "+                || (type == TokenTypes.LITERAL_INT)", "+                || (type == TokenTypes.LITERAL_FLOAT)", "+                || (type == TokenTypes.LITERAL_LONG)", "+                || (type == TokenTypes.LITERAL_DOUBLE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a1096d6094cd16d3ae23e91c8085af2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "9d4233b0b73e975aa752ff78ba16b40e65ece864", "commitAfterChange": "76ae23935169b24f54520da482e6ceb26cd890a6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     void parseFile(String aFilename)         throws FileNotFoundException, IOException, SAXException", "signatureAfterChange": "     void parseFile(String aFilename)         throws FileNotFoundException, IOException, SAXException", "diff": ["-        mParser.parse(new InputSource(new FileReader(aFilename)));", "+        parseInputSource(new InputSource(new FileReader(aFilename)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a2d213d2539d26b6d1d6f60a6184276", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean isCheckedMethod(DetailAST aAST)", "signatureAfterChange": "     private boolean isCheckedMethod(DetailAST ast)", "diff": ["-    private boolean isCheckedMethod(DetailAST aAST)", "+    private boolean isCheckedMethod(DetailAST ast)", "-            aAST.findFirstToken(TokenTypes.IDENT).getText();", "-        return !mIgnoredMethodNames.contains(methodName);", "+            ast.findFirstToken(TokenTypes.IDENT).getText();", "+        return !ignoredMethodNames.contains(methodName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a306005cbfaeaf6016f3c13ad11588a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/ClassResolverTest.java", "commitBeforeChange": "b6d9344d1c152f225a22ce9ce09341b3cc9488af", "commitAfterChange": "72faf5617ac6ed96b46ad71c60cf0eda95947531", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testMisc() throws ClassNotFoundException", "signatureAfterChange": "     @Test     public void testMisc() throws ClassNotFoundException", "diff": ["-        final Set<String> imps = Sets.newHashSet();", "-        imps.add(\"java.io.File\");", "-        imps.add(\"nothing.will.match.*\");", "-        imps.add(\"java.applet.*\");", "-        ClassResolver cr =", "+        final Set<String> imports = Sets.newHashSet();", "+        imports.add(\"java.io.File\");", "+        imports.add(\"nothing.will.match.*\");", "+        imports.add(\"java.applet.*\");", "+        ClassResolver classResolver =", "-                              null, imps);", "-        assertNotNull(cr);", "+                null, imports);", "+        assertNotNull(classResolver);", "-            cr.resolve(\"who.will.win.the.world.cup\", \"\");", "+            classResolver.resolve(\"who.will.win.the.world.cup\", \"\");", "-        cr.resolve(\"java.lang.String\", \"\");", "-        cr.resolve(\"StringBuffer\", \"\");", "-        cr.resolve(\"AppletContext\", \"\");", "+        classResolver.resolve(\"java.lang.String\", \"\");", "+        classResolver.resolve(\"StringBuffer\", \"\");", "+        classResolver.resolve(\"AppletContext\", \"\");", "-            cr.resolve(\"ChoiceFormat\", \"\");", "+            classResolver.resolve(\"ChoiceFormat\", \"\");", "-        imps.add(\"java.text.ChoiceFormat\");", "-        ClassResolver newClassResolver = new ClassResolver(Thread.currentThread().getContextClassLoader(), null, imps);", "+        imports.add(\"java.text.ChoiceFormat\");", "+        ClassResolver newClassResolver = new ClassResolver(", "+                Thread.currentThread().getContextClassLoader(), null, imports);", "-                Thread.currentThread().getContextClassLoader(), \"java.util\", imps);", "+                Thread.currentThread().getContextClassLoader(), \"java.util\", imports);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a79859f1a3899dbc0b36b65662a3d4d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void checkIndentation()", "signatureAfterChange": "     public void checkIndentation()", "diff": ["-        final DetailAST firstNode = firstNodesOnLines.get(firstNodesOnLines.firstKey());", "-        if (firstNode.getType() == TokenTypes.AT) {", "-            checkAnnotationIndentation(firstNode, firstNodesOnLines);", "+        final DetailAST firstLineNode = firstNodesOnLines.get(firstNodesOnLines.firstKey());", "+        if (firstLineNode.getType() == TokenTypes.AT) {", "+            checkAnnotationIndentation(firstLineNode, firstNodesOnLines);", "-        final int firstNodeIndent = getFirstNodeIndent(firstNode);", "+        final int firstNodeIndent = getFirstNodeIndent(firstLineNode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a9e66fda84d40ce540c675c5455c879", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/doclets/TokenTypesDoclet.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static boolean start(RootDoc root)             throws FileNotFoundException", "signatureAfterChange": "     public static boolean start(RootDoc root)             throws FileNotFoundException", "diff": ["-        final PrintWriter pw = new PrintWriter(osw, false);", "+        final PrintWriter writer = new PrintWriter(osw, false);", "-                    pw.println(field.name() + \"=\"", "-                        + field.firstSentenceTags()[0].text());", "+                    writer.println(field.name() + \"=\"", "+                            + field.firstSentenceTags()[0].text());", "-            pw.close();", "+            writer.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ab2ab098618784afb0edc2c4b486a89", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "         public boolean isOn()", "signatureAfterChange": "         public boolean isReportingOn()", "diff": ["-        public boolean isOn() {", "-            return on;", "+        public boolean isReportingOn() {", "+            return reportingOn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9adb6aa05e9c4eeadc317a5ae0db6ef0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "2f5b39d41f21f2243d457b6c322e909b1911be5d", "commitAfterChange": "66325cbd72882454193765322efa716537ce9c93", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static ModuleFactory loadModuleFactory(ClassLoader aClassLoader)         throws CheckstyleException", "signatureAfterChange": "     public static ModuleFactory loadModuleFactory(ClassLoader aClassLoader)         throws CheckstyleException", "diff": ["-        return loadModuleFactory(source, \"default package names\");", "+        return loadModuleFactory(source, \"default package names\", aClassLoader);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b2e50e19721c70526da5c883f8bf753", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "a13ebd482ce5dd891ba99d4c22a7cd5ff7d8e2dc", "commitAfterChange": "dad4fa599aa3570980fcaff4cb5f37941847a7a1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDestroy() throws Exception", "signatureAfterChange": "     @Test     public void testDestroy() throws Exception", "diff": ["-        final DebugChecker c = new DebugChecker();", "+        final DebugChecker checker = new DebugChecker();", "-        c.addListener(auditAdapter);", "-        final DebugFilter f = new DebugFilter();", "-        c.addFilter(f);", "+        checker.addListener(auditAdapter);", "+        final DebugFilter filter = new DebugFilter();", "+        checker.addFilter(filter);", "-        c.destroy(); // should remove al listeners and filters", "+        checker.destroy(); // should remove al listeners and filters", "-        c.fireAuditStarted();", "-        c.fireAuditFinished();", "-        c.fireFileStarted(\"Some File Name\");", "-        c.fireFileFinished(\"Some File Name\");", "+        checker.fireAuditStarted();", "+        checker.fireAuditFinished();", "+        checker.fireFileStarted(\"Some File Name\");", "+        checker.fireFileFinished(\"Some File Name\");", "-        c.fireErrors(\"Some File Name\", msgs);", "+        checker.fireErrors(\"Some File Name\", msgs);", "-        assertFalse(\"Checker.destroy() doesn't remove filters.\", f.wasCalled());", "+        assertFalse(\"Checker.destroy() doesn't remove filters.\", filter.wasCalled());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b32ecc7303a8111d133908b8f7818be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     private void checkParamTags(final List<JavadocTag> tags,             final DetailAST parent, boolean reportExpectedTags)", "signatureAfterChange": "     private void checkParamTags(final List<JavadocTag> tags,             final DetailAST parent, boolean reportExpectedTags)", "diff": ["-                log(tag.getLineNo(), tag.getColumnNo(), \"javadoc.unusedTag\",", "+                log(tag.getLineNo(), tag.getColumnNo(), MSG_UNUSED_TAG,", "-                log(param, \"javadoc.expectedTag\",", "+                log(param, MSG_EXCPECTED_TAG,", "-                log(typeParam, \"javadoc.expectedTag\",", "+                log(typeParam, MSG_EXCPECTED_TAG,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b4063c50a90e6800c153e55ffb238fa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheck.java", "commitBeforeChange": "6c19362738598c7addaafc1f906058f49fadc2a4", "commitAfterChange": "ea963bb721aafd9584242cedf2781f0294f2b18d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "          public Multiset<String> getDuplicatedStrings()", "signatureAfterChange": "         public Multiset<String> getDuplicatedKeys()", "diff": ["-        public Multiset<String> getDuplicatedStrings() {", "-            return ImmutableMultiset.copyOf(duplicatedStrings);", "+         */", "+        public Multiset<String> getDuplicatedKeys() {", "+            return ImmutableMultiset.copyOf(duplicatedKeys);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b653e388f8dc2c241ab1ffeee43c324", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "         public void setClassname(String aClassname)", "signatureAfterChange": "         public void setClassname(String classname)", "diff": ["-        /** @param aClassname set the classname */", "-        public void setClassname(String aClassname)", "+        /** @param classname set the classname */", "+        public void setClassname(String classname)", "-            mClassname = aClassname;", "+            this.classname = classname;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b7d7d176f1b95473647d2c6cb3b1114", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private String getConfigHashCode(Serializable aConfiguration)", "signatureAfterChange": "     private String getConfigHashCode(Serializable configuration)", "diff": ["-    private String getConfigHashCode(Serializable aConfiguration)", "+    private String getConfigHashCode(Serializable configuration)", "-                oos.writeObject(aConfiguration);", "+                oos.writeObject(configuration);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b941cebde4c076d4a48be2e8fa2bbfa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/TrailingCommentCheckTest.java", "commitBeforeChange": "30a744e620b52a1f33a0866f1f41cc9c6c9a3a98", "commitAfterChange": "7f103f3760306b1b4c26ca5508972bc232672ad9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDefaultTokens()             throws Exception", "signatureAfterChange": "     public void testDefaults()             throws Exception", "diff": ["-    public void testDefaultTokens()", "+    public void testDefaults()", "-//          checkConfig.addAttribute(\"tokens\", \"CTOR_DEF\");", "-            \"16: Too many comments.\",", "-            \"17: Too many comments.\",", "+            \"16: Don't use trailing comments.\",", "+            \"17: Don't use trailing comments.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b9a25b3bfd1dc12dd16aec8b4c41f60", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private DetailAST getLastAnnotationNode(DetailAST aAtNode)", "signatureAfterChange": "     private DetailAST getLastAnnotationNode(DetailAST atNode)", "diff": ["-    private DetailAST getLastAnnotationNode(DetailAST aAtNode)", "+    private DetailAST getLastAnnotationNode(DetailAST atNode)", "-        DetailAST lastAnnotation = aAtNode.getParent();", "+        DetailAST lastAnnotation = atNode.getParent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ba7bcc335516aa0ffc127613f3569f1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "0ce872d7cc6b0b1564655b9e3119f72911f4dddd", "commitAfterChange": "ea9ff3965d9c657b5b7bd2d969e075f430635c47", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static String getConfigHashCode(Serializable configuration)", "signatureAfterChange": "     private static String getConfigHashCode(Serializable object)", "diff": ["-    private static String getConfigHashCode(Serializable configuration) {", "+    private static String getConfigHashCode(Serializable object) {", "-                oos.writeObject(configuration);", "+                oos.writeObject(object);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bb5e83bf17f313d14771ba85803bda7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "546f336e25b26d072f96e2cda139b885858ed5b0", "commitAfterChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public int process(List<File> files)", "signatureAfterChange": "     public int process(List<File> files)", "diff": ["-        for (final File f : files) {", "-            if (!Utils.fileExtensionMatches(f, fileExtensions)) {", "+        for (final File file : files) {", "+            if (!Utils.fileExtensionMatches(file, fileExtensions)) {", "-            final String fileName = f.getAbsolutePath();", "+            final String fileName = file.getAbsolutePath();", "-                final FileText theText = new FileText(f.getAbsoluteFile(),", "+                final FileText theText = new FileText(file.getAbsoluteFile(),", "-                    fileMessages.addAll(fsc.process(f, theText));", "+                    fileMessages.addAll(fsc.process(file, theText));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bc2fe5115ef50f96c6be6a9eced31d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "745e21f1e4d202dd8dba577585f35f7d3f10d839", "commitAfterChange": "2e243db3fbdf7b737f78ed7cef0b9bd94f351d25", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      @Test     public void testLoadConfigurationWrongURL()", "signatureAfterChange": "      @Test     public void testLoadConfigurationWrongUrl()", "diff": ["-    public void testLoadConfigurationWrongURL() {", "+    public void testLoadConfigurationWrongUrl() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c5270ac19ceee0dd9834bec8e0bd5f9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/MemberNameCheck.java", "commitBeforeChange": "781f8b9a0f4c2aefe6c3acbe5a9e6e6ea7bd6a05", "commitAfterChange": "ca9644638dbd6c13b9c7d123dcc08df327f9156b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     protected final boolean mustCheckName(DetailAST aAST)", "signatureAfterChange": "      @Override     protected final boolean mustCheckName(DetailAST aAST)", "diff": ["-        return (!isStatic && !ScopeUtils.inAnnotationBlock(aAST)", "+        return (!isStatic && !ScopeUtils.inInterfaceOrAnnotationBlock(aAST)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ca2d41d04793c8499390ef731b1536d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void checkCheckClosingParens(final DetailAST ast)", "signatureAfterChange": "     private void checkCheckClosingParens(final DetailAST ast)", "diff": ["-        if (parens == ClosingParens.IGNORE) {", "+        if (closingParens == ClosingParens.IGNORE) {", "-        if (parens == ClosingParens.ALWAYS", "+        if (closingParens == ClosingParens.ALWAYS", "-        else if (parens == ClosingParens.NEVER", "+        else if (closingParens == ClosingParens.NEVER"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cbbefa46d03deeb8fb755bb1f600c0f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setMax(int aLength)", "signatureAfterChange": "     public void setMax(int length)", "diff": ["-    public void setMax(int aLength)", "+    public void setMax(int length)", "-        mMaxFileLength = aLength;", "+        maxFileLength = length;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cc0a1c966dd7a71433c3a1b96b10791", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "ae9d1d6217ad7dbc2e6f1faa890298c68726dcb4", "commitAfterChange": "2e1382c5bb1aa61cc01d7958a589e2a3831f56b5", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 23, "signatureBeforeChange": "     private ParseTree parseJavadoc(String aBlockComment)         throws IOException", "signatureAfterChange": "     private ParseTree parseJavadocAsParseTree(String aBlockComment)         throws IOException", "diff": ["-    private ParseTree parseJavadoc(String aBlockComment)", "+    private ParseTree parseJavadocAsParseTree(String aBlockComment)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ce1898d1fbab1ae73f2c5ce441e06f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public XMLLogger(OutputStream aOS, boolean aCloseStream)", "signatureAfterChange": "     public XMLLogger(OutputStream os, boolean closeStream)", "diff": ["-    public XMLLogger(OutputStream aOS, boolean aCloseStream)", "+    public XMLLogger(OutputStream os, boolean closeStream)", "-        setOutputStream(aOS);", "-        mCloseStream = aCloseStream;", "+        setOutputStream(os);", "+        this.closeStream = closeStream;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d0bcc563929a53319a42dca10de3545", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "bf529ef600fa9ef2034d0412c198b2121f2b94f2", "commitAfterChange": "ce196814d857a4244a80c51d5151cc35e90b6749", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     @Override     public void fireErrors(String fileName, SortedSet<LocalizedMessage> errors)", "signatureAfterChange": "     @Override     public void fireErrors(String fileName, SortedSet<LocalizedMessage> errors)", "diff": ["-            final AuditEvent evt = new AuditEvent(this, stripped, element);", "-            if (filters.accept(evt)) {", "+            final AuditEvent event = new AuditEvent(this, stripped, element);", "+            if (filters.accept(event)) {", "-                    listener.addError(evt);", "+                    listener.addError(event);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d15cbdaeb9c38cad34d4007346f703a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java", "commitBeforeChange": "d53fc277c6947761992e6ca3016110d6ed59b042", "commitAfterChange": "bd55b4598158c500333dae2e2194de08a643a3d5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static boolean isBooleanLiteralReturnStatement(AST ast)", "signatureAfterChange": "     private static boolean isBooleanLiteralReturnStatement(AST ast)", "diff": ["-        if (expr == null || expr.getType() == TokenTypes.SEMI) {", "+        if (expr.getType() == TokenTypes.SEMI) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d18e7e177efe9dec6248ca33c895b5d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public FileContents(FileText aText)", "signatureAfterChange": "     public FileContents(FileText text)", "diff": ["-    public FileContents(FileText aText)", "+    public FileContents(FileText text)", "-        mFilename = aText.getFile().toString();", "-        mText = aText;", "+        filename = text.getFile().toString();", "+        this.text = text;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d1ac03a42c56779730e8bcc6bdaecfb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "         @Override         public int compareTo(Tag aOther)", "signatureAfterChange": "         @Override         public int compareTo(Tag other)", "diff": ["-        public int compareTo(Tag aOther)", "+        public int compareTo(Tag other)", "-            if (mFirstLine == aOther.mFirstLine) {", "-                return mLastLine - aOther.mLastLine;", "+            if (firstLine == other.firstLine) {", "+                return lastLine - other.lastLine;", "-            return (mFirstLine - aOther.mFirstLine);", "+            return (firstLine - other.firstLine);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d377a3ae9485183d499a92b172c88b4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "5dffb5a301b2605c730d1de3f312ba4a7f95355e", "commitAfterChange": "4d8d047f465f9eb101390da63ee62a735fbedba5", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Test     public void testIncorrectTag() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrectTag() throws Exception", "diff": ["-            for (Constructor<?> constr: parentConstructors) {", "-                constr.setAccessible(true);", "-                ctorParent = constr;", "+            for (Constructor<?> parentConstructor: parentConstructors) {", "+                parentConstructor.setAccessible(true);", "+                ctorParent = parentConstructor;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d3a933491ed26eb9b14af42c4452203", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "d3aa5da76d137f8ab6c1238b02285fc16d29079f", "commitAfterChange": "00447a8fe3741b163901128b01ab7087392fc7c6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Configuration()         throws IllegalStateException", "signatureAfterChange": "     public Configuration()         throws IllegalStateException", "diff": ["+        setIllegalImports(ILLEGAL_IMPORTS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d5524f9fd9ed01a5b3cc6baf9628722", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java", "commitBeforeChange": "22d40e6bfd330ff0acb44c7fa669028dc72f8d0b", "commitAfterChange": "37fe13f3f12cc159a2a4f25761a89f2291aff74f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void visitExpr()", "signatureAfterChange": "     private void visitExpr()", "diff": ["-        context = new Context(context == null || context.isChecking());", "+        context = new Context(context.isChecking());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d586ce0c72483c49fa44d26cb725be7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "commitAfterChange": "4c1148db9982918e65f8d1156e8fb9c07b206fc9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Override     public boolean equals(Object o)", "signatureAfterChange": "      @Override     public boolean equals(Object o)", "diff": ["-        final SuppressElement that = (SuppressElement) o;", "-        return Objects.equals(filePattern, that.filePattern)", "-                && Objects.equals(checkPattern, that.checkPattern)", "-                && Objects.equals(moduleId, that.moduleId)", "-                && Objects.equals(linesCSV, that.linesCSV)", "-                && Objects.equals(columnsCSV, that.columnsCSV);", "+        final SuppressElement suppressElement = (SuppressElement) o;", "+        return Objects.equals(filePattern, suppressElement.filePattern)", "+                && Objects.equals(checkPattern, suppressElement.checkPattern)", "+                && Objects.equals(moduleId, suppressElement.moduleId)", "+                && Objects.equals(linesCSV, suppressElement.linesCSV)", "+                && Objects.equals(columnsCSV, suppressElement.columnsCSV);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9db555a2493720f45e6e9a57dfcfcdb7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void processStart(DetailAST ast)", "signatureAfterChange": "     private void processStart(DetailAST ast)", "diff": ["-                    log(ast.getLineNo(), before, \"ws.notPreceded\", \"<\");", "+                    log(ast.getLineNo(), before, WS_NOT_PRECEDED, \"<\");", "-                log(ast.getLineNo(), before, \"ws.preceded\", \"<\");", "+                log(ast.getLineNo(), before, WS_PRECEDED, \"<\");", "-            log(ast.getLineNo(), after, \"ws.followed\", \"<\");", "+            log(ast.getLineNo(), after, WS_FOLLOWED, \"<\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dbd649f85ba99ff906000ccaec2d9bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultConfiguration.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Override     public String getAttribute(String aName) throws CheckstyleException", "signatureAfterChange": "     @Override     public String getAttribute(String name) throws CheckstyleException", "diff": ["-    public String getAttribute(String aName) throws CheckstyleException", "+    public String getAttribute(String name) throws CheckstyleException", "-        if (!mAttributeMap.containsKey(aName)) {", "+        if (!attributeMap.containsKey(name)) {", "-                    \"missing key '\" + aName + \"' in \" + getName());", "+                    \"missing key '\" + name + \"' in \" + getName());", "-        return mAttributeMap.get(aName);", "+        return attributeMap.get(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dd1d628fa1f62480a467ff558beebd0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 76, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws BuildException", "diff": ["+                applyExplicitOptions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9df1ecb0252776821f4cf7aa328be646", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/javadoc/AllTests.java", "commitBeforeChange": "ad727f351fffe22d3597523c9f802408dc1bb951", "commitAfterChange": "a168a3f583b277dcddf0606e00dbbe9ed6f3fe11", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public static Test suite()", "signatureAfterChange": "      public static Test suite()", "diff": ["-        suite.addTest(new TestSuite(PackageHtmlCheckTest.class));", "+        suite.addTest(new TestSuite(JavadocPackageCheckTest.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e0059ff15bba5bede77e67abc70d360", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setLimitedTokens(String[] aLimitedTokens)", "signatureAfterChange": "     public void setLimitedTokens(String[] limitedTokensParam)", "diff": ["-    public void setLimitedTokens(String[] aLimitedTokens)", "+    public void setLimitedTokens(String[] limitedTokensParam)", "-        mLimitedTokens = new int[aLimitedTokens.length];", "+        limitedTokens = new int[limitedTokensParam.length];", "-        for (int i = 0; i < aLimitedTokens.length; i++) {", "-            mLimitedTokens[i] = TokenTypes.getTokenId(aLimitedTokens[i]);", "-            if (mLimitedTokens[i] > maxToken) {", "-                maxToken = mLimitedTokens[i];", "+        for (int i = 0; i < limitedTokensParam.length; i++) {", "+            limitedTokens[i] = TokenTypes.getTokenId(limitedTokensParam[i]);", "+            if (limitedTokens[i] > maxToken) {", "+                maxToken = limitedTokens[i];", "-        mCounts = new int[maxToken];", "+        counts = new int[maxToken];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e0bbbae23eb9be331c5fe1804c35dc2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/HtmlTag.java", "commitBeforeChange": "80ab48f859c1f16835dbd41afe42414b41969e2f", "commitAfterChange": "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public boolean isIncompleteTag()", "signatureAfterChange": "     public boolean isIncompleteTag()", "diff": ["-        return incomplete;", "+        return incompleteTag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e2ae469d5395869a32013be66977549", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setAllowUndeclaredRTE(boolean aFlag)", "signatureAfterChange": "     public void setAllowUndeclaredRTE(boolean flag)", "diff": ["-    public void setAllowUndeclaredRTE(boolean aFlag)", "+    public void setAllowUndeclaredRTE(boolean flag)", "-        mAllowUndeclaredRTE = aFlag;", "+        allowUndeclaredRTE = flag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e478115bf6c00d7fc7d4fe450227b65", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "          public ParseErrorMessage getErrorMessage()", "signatureAfterChange": "          public ParseErrorMessage getErrorMessage()", "diff": ["-            return mErrorMessage;", "+            return errorMessage;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e81d8ff7ca86e5e9fade24599f81457", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/SinglelineDetector.java", "commitBeforeChange": "2cf54ade2182e29c413f23e2235a896247d7a2ad", "commitAfterChange": "d282053d9ce02c13c779decfd079a8305086f752", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void checkLine(int lineno, String line, Matcher matcher,             int startPosition)", "signatureAfterChange": "     private void checkLine(int lineNo, String line, Matcher matcher,             int startPosition)", "diff": ["-    private void checkLine(int lineno, String line, Matcher matcher,", "+    private void checkLine(int lineNo, String line, Matcher matcher,", "-                .shouldSuppress(lineno, startCol, lineno, endCol - 1)) {", "+                .shouldSuppress(lineNo, startCol, lineNo, endCol - 1)) {", "-                checkLine(lineno, line, matcher, endCol);", "+                checkLine(lineNo, line, matcher, endCol);", "-                options.getReporter().log(lineno, \"regexp.exceeded\",", "+                options.getReporter().log(lineNo, \"regexp.exceeded\",", "-                options.getReporter().log(lineno, options.getMessage());", "+                options.getReporter().log(lineNo, options.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ebbacc8f32363e7eb6d50d35412d25e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "         public Point(int aLineNo, int aColumnNo)", "signatureAfterChange": "         public Point(int lineNo, int columnNo)", "diff": ["-        public Point(int aLineNo, int aColumnNo)", "+        public Point(int lineNo, int columnNo)", "-            mLine = aLineNo;", "-            mColumn = aColumnNo;", "+            line = lineNo;", "+            column = columnNo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ecd0591661fdc2259b5e87292c8114b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void endCollectingDeclarations(Queue<LexicalFrame> aFrameStack,         DetailAST aAST)", "signatureAfterChange": "     private void endCollectingDeclarations(Queue<LexicalFrame> frameStack,         DetailAST ast)", "diff": ["-    private void endCollectingDeclarations(Queue<LexicalFrame> aFrameStack,", "-        DetailAST aAST)", "+    private void endCollectingDeclarations(Queue<LexicalFrame> frameStack,", "+        DetailAST ast)", "-        switch (aAST.getType()) {", "+        switch (ast.getType()) {", "-            this.mFrames.put(aAST, aFrameStack.poll());", "+            this.frames.put(ast, frameStack.poll());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f32f02d8521e91923725f3ae9407b24", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "         @Override         public boolean isCellEditable(EventObject e)", "signatureAfterChange": "         @Override         public boolean isCellEditable(EventObject event)", "diff": ["-        public boolean isCellEditable(EventObject e) {", "-            if (e instanceof MouseEvent) {", "+        public boolean isCellEditable(EventObject event) {", "+            if (event instanceof MouseEvent) {", "-                        final MouseEvent me = (MouseEvent) e;", "-                        final MouseEvent newME = new MouseEvent(tree, me.getID(),", "-                                me.getWhen(), me.getModifiers(),", "-                                me.getX() - getCellRect(0, counter, true).x,", "-                                me.getY(), me.getClickCount(),", "-                                me.isPopupTrigger());", "-                        tree.dispatchEvent(newME);", "+                        final MouseEvent mouseEvent = (MouseEvent) event;", "+                        final MouseEvent newMouseEvent = new MouseEvent(tree, mouseEvent.getID(),", "+                                mouseEvent.getWhen(), mouseEvent.getModifiers(),", "+                                mouseEvent.getX() - getCellRect(0, counter, true).x,", "+                                mouseEvent.getY(), mouseEvent.getClickCount(),", "+                                mouseEvent.isPopupTrigger());", "+                        tree.dispatchEvent(newMouseEvent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f3927c45d41d8bf458d7c1ebd91a3d6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/PrimordialHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public PrimordialHandler(IndentationCheck aIndentCheck)", "signatureAfterChange": "     public PrimordialHandler(IndentationCheck indentCheck)", "diff": ["-    public PrimordialHandler(IndentationCheck aIndentCheck)", "+    public PrimordialHandler(IndentationCheck indentCheck)", "-        super(aIndentCheck, null, null, null);", "+        super(indentCheck, null, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f46a751494ea3d11e78377c2d503f8b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static List<File> getFilesToProcess(CommandLine aLine)", "signatureAfterChange": "     private static List<File> getFilesToProcess(CommandLine line)", "diff": ["-    private static List<File> getFilesToProcess(CommandLine aLine)", "+    private static List<File> getFilesToProcess(CommandLine line)", "-        final String[] remainingArgs = aLine.getArgs();", "+        final String[] remainingArgs = line.getArgs();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f59438ba8ae65e21384f9249031ffed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (aAST.getType() == TokenTypes.IDENT) {", "-            if (mCollect) {", "-                processIdent(aAST);", "+        if (ast.getType() == TokenTypes.IDENT) {", "+            if (collect) {", "+                processIdent(ast);", "-        else if (aAST.getType() == TokenTypes.IMPORT) {", "-            processImport(aAST);", "+        else if (ast.getType() == TokenTypes.IMPORT) {", "+            processImport(ast);", "-        else if (aAST.getType() == TokenTypes.STATIC_IMPORT) {", "-            processStaticImport(aAST);", "+        else if (ast.getType() == TokenTypes.STATIC_IMPORT) {", "+            processStaticImport(ast);", "-            mCollect = true;", "-            if (mProcessJavadoc) {", "-                processJavadoc(aAST);", "+            collect = true;", "+            if (processJavadoc) {", "+                processJavadoc(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f6c4cfcd3670d38aa87e7afeb3c4d69", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java", "commitBeforeChange": "25badc206f9b8fdce3391992cec951235250a3d2", "commitAfterChange": "aab0718232e060bd8f289770ab81780b3a2705a2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     PkgControl locateFinest(final String forPkg)", "signatureAfterChange": "     PkgControl locateFinest(final String forPkg)", "diff": ["-            for (PkgControl pc : children) {", "-                final PkgControl match = pc.locateFinest(forPkg);", "+            for (PkgControl child : children) {", "+                final PkgControl match = child.locateFinest(forPkg);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f766271a28b3f70d4a9b2058021be22", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "c8756ab48159c2c8d1e397e73d9175595fe7d742", "commitAfterChange": "0b7bf277067a87a43a11ce53f730cbfcbb95549e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     void verifyWSAfter(int aLineNo, int aColNo, String aConstruct);", "signatureAfterChange": "     void verifyWSAfter(int aLineNo, int aColNo, MyToken aToken);", "diff": ["-    void verifyWSAfter(int aLineNo, int aColNo, String aConstruct);", "+    void verifyWSAfter(int aLineNo, int aColNo, MyToken aToken);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f84a1ae2e1412c1325c1c30c2a8fd9a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/PackageNamesLoaderTest.java", "commitBeforeChange": "a395eeeb9b1df682d7e4d02794e246ee07a7c2b4", "commitAfterChange": "7f0e2b8f92ef375f2de3f59b9464746a0113b126", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          private void validateFactory(ModuleFactory aModuleFactory)", "signatureAfterChange": "          private void validateFactory(ModuleFactory aModuleFactory)", "diff": ["-        String[] checkstylePackages = {", "+        final String[] checkstylePackages = {", "-            \"com.puppycrawl.tools.checkstyle.checks.\"", "+            \"com.puppycrawl.tools.checkstyle.checks.\",", "+            \"com.puppycrawl.tools.checkstyle.checks.javadoc.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a015a5022391a812b16c434938423263", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "         private void setClazz(Class<?> classObj)", "signatureAfterChange": "         private void setClazz(Class<?> clazz)", "diff": ["-        private void setClazz(Class<?> classObj) {", "-            this.classObj = classObj;", "-            loadable = classObj != null;", "+        private void setClazz(Class<?> clazz) {", "+            this.classObj = clazz;", "+            loadable = clazz != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a040c7a720715ea7c692d1a17122ad75", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private static String getCanonicalName(DetailAST aImport)", "signatureAfterChange": "     private static String getCanonicalName(DetailAST importAst)", "diff": ["-    private static String getCanonicalName(DetailAST aImport)", "+    private static String getCanonicalName(DetailAST importAst)", "-        DetailAST toVisit = aImport;", "+        DetailAST toVisit = importAst;", "-            toVisit = getNextSubTreeNode(toVisit, aImport);", "+            toVisit = getNextSubTreeNode(toVisit, importAst);", "-                final DetailAST nextSubTreeNode = getNextSubTreeNode(toVisit, aImport);", "+                final DetailAST nextSubTreeNode = getNextSubTreeNode(toVisit, importAst);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0612e93eb166739dfa8cc8ab448cf98", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "4cc94a581c8da49c65d139da08d70aea1b5cf1e9", "commitAfterChange": "88e89a138aa39f50f7642106cde6568f6e07783f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void endElement(String aNamespaceURI,                            String aLocalName,                            String aQName)", "signatureAfterChange": "     public void endElement(String aNamespaceURI,                            String aLocalName,                            String aQName)", "diff": ["-            mPackageNames.add(getPackageName());", "+            mModuleFactory.addPackage(getPackageName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a07587ceb1745ce6e7dbbaa30c6d6549", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/HideUtilityClassConstructorCheckTest.java", "commitBeforeChange": "b372cfa0a8632735da877de0f703c3b3c9ce5f63", "commitAfterChange": "7b8a3aa5bba1323a7bbb85b6dbd86835215a48fc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testOnlyNonstaticFieldNonUtilClass() throws Exception", "signatureAfterChange": "      @Test     public void testOnlyNonStaticFieldNonUtilClass() throws Exception", "diff": ["-    public void testOnlyNonstaticFieldNonUtilClass() throws Exception {", "+    public void testOnlyNonStaticFieldNonUtilClass() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a07a2595b6e92b60e825a3b660475a9b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void setClassMaximum(int classMax)", "signatureAfterChange": "     public void setClassMaximum(int classMaximum)", "diff": ["-    public void setClassMaximum(int classMax) {", "-        this.classMax = classMax;", "+    public void setClassMaximum(int classMaximum) {", "+        this.classMaximum = classMaximum;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0813156825ac23f7063108a2d287663", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filter/DenyAllFilter.java", "commitBeforeChange": "8dc1a8ab994076f3fc10bab9248a2439ee54b443", "commitAfterChange": "21f0b07bd031f022d14106150af66ceddb4c06b8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public int decide(AuditEvent aEvent)", "signatureAfterChange": "     public int decide(Object aObject)", "diff": ["-    /** @see com.puppycrawl.tools.checkstyle.filter.AbstractFilter */", "-    public int decide(AuditEvent aEvent)", "+    /** @see com.puppycrawl.tools.checkstyle.filter.Filter */", "+    public int decide(Object aObject)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0895ab8097f6b151aa558960edd123c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "         protected LexicalFrame(LexicalFrame aParent)", "signatureAfterChange": "         protected LexicalFrame(LexicalFrame parent)", "diff": ["-        protected LexicalFrame(LexicalFrame aParent)", "+        protected LexicalFrame(LexicalFrame parent)", "-            mParent = aParent;", "-            mVarNames = Sets.newHashSet();", "+            this.parent = parent;", "+            varNames = Sets.newHashSet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a09fc96ce72a6c3f7fb7d03f96c0e891", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      @Test     public void test_1168408_1() throws Exception", "signatureAfterChange": "      @Test     public void test11684081() throws Exception", "diff": ["-    public void test_1168408_1() throws Exception {", "+    public void test11684081() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0cc7128c690985f01af1bbcf0c9fff4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "         @Override         public int compareTo(Tag aObject)", "signatureAfterChange": "         @Override         public int compareTo(Tag object)", "diff": ["-        public int compareTo(Tag aObject)", "+        public int compareTo(Tag object)", "-            if (mLine == aObject.mLine) {", "-                return mColumn - aObject.mColumn;", "+            if (line == object.line) {", "+                return column - object.column;", "-            return (mLine - aObject.mLine);", "+            return (line - object.line);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0e696860518f7d24d3b7efc57ce2b1b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Comment.java", "commitBeforeChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "commitAfterChange": "abfc952fd0ed88f6246b1d969a8a980ea63f0bd6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public final int getEndLineNo()", "signatureAfterChange": "      @Override     public final int getEndLineNo()", "diff": ["-        return lastLine;", "+        return endLineNo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a11a65efa92074faac88c6983cd494bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "7d82fd670a2111e78de45cd09da5f184fc93d6ee", "commitAfterChange": "17d3b314bbb0f23622b719c089c1b3ca1607c1da", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public boolean isIgnoreJavadoc()", "signatureAfterChange": "     public Scope getJavadocScope()", "diff": ["+    /** @return visibility scope where Javadoc is checked **/", "+    public Scope getJavadocScope()", "+        return mJavadocScope;", "-    /** @return whether to ignore javadoc checking **/", "-    public boolean isIgnoreJavadoc()", "-    {", "-        return mIgnoreJavadoc;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a131bdd868afec5392103a5e3d2ca26c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "      @Test     public void testCreateListener_IllegalStateException() throws Exception", "signatureAfterChange": "      @Test     public void testCreateListenerIllegalStateException() throws Exception", "diff": ["-    public void testCreateListener_IllegalStateException() throws Exception {", "+    public void testCreateListenerIllegalStateException() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a139a570dff044cc0dd764131a5e3f43", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/InputHiddenField.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "         void useX(int y)", "signatureAfterChange": "         void useY(int y)", "diff": ["-        void useX(int y) {", "+        void useY(int y) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a174031f6cf20624090fd7a55786c767", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "         public void checkCoupling()", "signatureAfterChange": "         public void checkCoupling()", "diff": ["-            mReferencedClassNames.remove(mClassName);", "-            mReferencedClassNames.remove(mPackageName + \".\" + mClassName);", "+            referencedClassNames.remove(className);", "+            referencedClassNames.remove(packageName + \".\" + className);", "-            if (mReferencedClassNames.size() > mMax) {", "-                log(mLineNo, mColumnNo, getLogMessageId(),", "-                        mReferencedClassNames.size(), getMax(),", "-                        mReferencedClassNames.toString());", "+            if (referencedClassNames.size() > max) {", "+                log(lineNo, columnNo, getLogMessageId(),", "+                        referencedClassNames.size(), getMax(),", "+                        referencedClassNames.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1814f8b91947a1f559b5ab50e3bfdde", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "commitAfterChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testWithOneArgWIthoutTypeFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithoutTypeFullBody()         throws Exception", "diff": ["-    public void testWithOneArgWIthoutTypeFullBody()", "+    public void testWithOneArgWithoutTypeFullBody()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a182742560f78f2f9b0c873d6ebcda27", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "5ce771ac776af4197ce832792a049e9357ca90b8", "commitAfterChange": "1d614c3a7ecf8a3ede4df8a50da46e71792d0025", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Override     protected final void processAST(DetailAST aAST)", "signatureAfterChange": "      @Override     protected final void processAST(DetailAST aAST)", "diff": ["-                checkComment(aAST, cmt, theScope);", "+                checkComment(aAST, cmt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1b32bc80b710051759f0efbabe46926", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck.java", "commitBeforeChange": "50e9439fa2b1c51fe5a4eb3502f53089592fba3c", "commitAfterChange": "b0891b556788d4c9c8cdf6982648001427d92238", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void loadHeaderFile() throws CheckstyleException", "signatureAfterChange": "     private void loadHeaderFile() throws CheckstyleException", "diff": ["-            final URI uri = CommonUtils.getUriByFilename(filename);", "+            final URI uri = CommonUtils.getUriByFilename(headerFile);", "-                    \"unable to load header file \" + filename, ex);", "+                    \"unable to load header file \" + headerFile, ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1c427a15c72c5ade0b874b295d1e808", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private boolean hasAnyImportInCurrentGroup(String aCurrentGroup)", "signatureAfterChange": "     private boolean hasAnyImportInCurrentGroup(String currentGroup)", "diff": ["-    private boolean hasAnyImportInCurrentGroup(String aCurrentGroup)", "+    private boolean hasAnyImportInCurrentGroup(String currentGroup)", "-        for (ImportDetails currentImport : mImportToGroupList) {", "-            if (aCurrentGroup.equals(currentImport.getImportGroup())) {", "+        for (ImportDetails currentImport : importToGroupList) {", "+            if (currentGroup.equals(currentImport.getImportGroup())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1c88beea4e2507e655ce50f32773ddc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocVariableCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setIgnoreNamePattern(String aRegexp)", "signatureAfterChange": "     public void setIgnoreNamePattern(String regexp)", "diff": ["-    public void setIgnoreNamePattern(String aRegexp)", "+    public void setIgnoreNamePattern(String regexp)", "-        mIgnoreNameRegexp = aRegexp;", "-        if (!(aRegexp == null || aRegexp.length() == 0)) {", "-            mIgnoreNamePattern = Pattern.compile(aRegexp);", "+        ignoreNameRegexp = regexp;", "+        if (!(regexp == null || regexp.length() == 0)) {", "+            ignoreNamePattern = Pattern.compile(regexp);", "-            mIgnoreNamePattern = null;", "+            ignoreNamePattern = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1df39f73d8f50bfe96c097b0e3d4ed6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java", "commitBeforeChange": "bc797f31e2c84f88e03378f6e7b6832dd04f3049", "commitAfterChange": "0fc8b62a35beddc89cb3412388c27e88cd8cab4a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      protected void verify(Configuration aConfig, boolean printSeveriy,                           String filename, String... expected) throws Exception", "signatureAfterChange": "      protected void verify(Configuration aConfig, boolean printSeverity,                           String filename, String... expected) throws Exception", "diff": ["-    protected void verify(Configuration aConfig, boolean printSeveriy,", "+    protected void verify(Configuration aConfig, boolean printSeverity,", "-        verify(createChecker(aConfig, printSeveriy), filename, filename, expected);", "+        verify(createChecker(aConfig, printSeverity), filename, filename, expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1f0cc08c604d0d6d5f93e994fae1b06", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setLines(String aLines)", "signatureAfterChange": "     public void setLines(String lines)", "diff": ["-    public void setLines(String aLines)", "+    public void setLines(String lines)", "-        mLinesCSV = aLines;", "-        if (aLines != null) {", "-            mLineFilter = new CSVFilter(aLines);", "+        linesCSV = lines;", "+        if (lines != null) {", "+            lineFilter = new CSVFilter(lines);", "-            mLineFilter = null;", "+            lineFilter = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1f7c0cbd7b67163d32878f20ee557e8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public final void setExcludedClasses(String[] aExcludedClasses)", "signatureAfterChange": "     public final void setExcludedClasses(String[] excludedClasses)", "diff": ["-    public final void setExcludedClasses(String[] aExcludedClasses)", "+    public final void setExcludedClasses(String[] excludedClasses)", "-        mExcludedClasses = ImmutableSet.copyOf(aExcludedClasses);", "+        this.excludedClasses = ImmutableSet.copyOf(excludedClasses);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2072d745c30daa86470017205991f8b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/coding/InputRequireThis.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      void method2(int i)", "signatureAfterChange": "      void method2(int i)", "diff": ["-        j--; // unhandled for now"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a21a0e2ea7080b10a0421a1d0cedd3b0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public VisibilityModifierCheck()", "signatureAfterChange": "     public VisibilityModifierCheck()", "diff": ["-        setPublicMemberPattern(mPublicMemberPattern);", "+        setPublicMemberPattern(mPublicMemberFormat);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2355e448b8971ea383b61a1941711a8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "c2d3932843e70e4bb5df7161800aca248f9af778", "commitAfterChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public TreeWalker()", "signatureAfterChange": "     public TreeWalker()", "diff": ["-            sLog.debug(\"TreeWalker uses recursive algorithm\");", "+            LOG.debug(\"TreeWalker uses recursive algorithm\");", "-            sLog.debug(\"TreeWalker uses iterative algorithm\");", "+            LOG.debug(\"TreeWalker uses iterative algorithm\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2543adc4f94dc6d84995051188f9f86", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public final void setAllowByTailComment(boolean aAllow)", "signatureAfterChange": "     public final void setAllowByTailComment(boolean allow)", "diff": ["-    public final void setAllowByTailComment(boolean aAllow)", "+    public final void setAllowByTailComment(boolean allow)", "-        mAllowByTailComment = aAllow;", "+        allowByTailComment = allow;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a255313ad68825b3b435a54c4a8ebb91", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/InputTypeParamsTags.java", "commitBeforeChange": "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94", "commitAfterChange": "d6175fd6c95f64e854c1604e0331d8d1ab9dcaf3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public <X, Y> String doSomething()", "signatureAfterChange": "     public <X, Y1> String doSomething()", "diff": ["-    public <X, Y> String doSomething()", "+    public <X, Y1> String doSomething()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2744c09b8ea0472e4a9457678c7b06c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "commitAfterChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testWithOneArgWIthoutTypeOneLineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithoutTypeOneLineBody()         throws Exception", "diff": ["-    public void testWithOneArgWIthoutTypeOneLineBody()", "+    public void testWithOneArgWithoutTypeOneLineBody()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a297e21842c405cf20ef9a88a7992fb1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private int getGroupNumber(String aName)", "signatureAfterChange": "     private int getGroupNumber(String name)", "diff": ["-    private int getGroupNumber(String aName)", "+    private int getGroupNumber(String name)", "-        int bestIndex = mGroups.length;", "+        int bestIndex = groups.length;", "-        // loop over mGroups and get index", "-        for (int i = 0; i < mGroups.length; i++) {", "-            final Matcher matcher = mGroups[i].matcher(aName);", "+        // loop over groups and get index", "+        for (int i = 0; i < groups.length; i++) {", "+            final Matcher matcher = groups[i].matcher(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2a6993186bab7e90b17637e286b7d49", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/naming/ConstantNameCheckTest.java", "commitBeforeChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "commitAfterChange": "6125beffc437f970eae276b4a6542265c6547784", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testInterface()         throws Exception", "signatureAfterChange": "      public void testInterfaceAndAnnotation()         throws Exception", "diff": ["-    public void testInterface()", "+    public void testInterfaceAndAnnotation()", "-            \"24:16: Name 'data' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\"", "+            \"24:16: Name 'data' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\",", "+            \"64:16: Name 'data' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2df108a380113fcb670ace0e28d1b74", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "         public void setUseFile(boolean aUse)", "signatureAfterChange": "         public void setUseFile(boolean use)", "diff": ["-        public void setUseFile(boolean aUse)", "+        public void setUseFile(boolean use)", "-            mUseFile = aUse;", "+            useFile = use;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2e520a7719fa8f2c82ca578f588bef1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractLoader.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected AbstractLoader(Map<String, String> aPublicIdToResourceNameMap)         throws SAXException, ParserConfigurationException", "signatureAfterChange": "     protected AbstractLoader(Map<String, String> publicIdToResourceNameMap)         throws SAXException, ParserConfigurationException", "diff": ["-    protected AbstractLoader(Map<String, String> aPublicIdToResourceNameMap)", "+    protected AbstractLoader(Map<String, String> publicIdToResourceNameMap)", "-        mPublicIdToResourceNameMap =", "-            Maps.newHashMap(aPublicIdToResourceNameMap);", "+        this.publicIdToResourceNameMap =", "+            Maps.newHashMap(publicIdToResourceNameMap);", "-        mParser = factory.newSAXParser().getXMLReader();", "-        mParser.setContentHandler(this);", "-        mParser.setEntityResolver(this);", "-        mParser.setErrorHandler(this);", "+        parser = factory.newSAXParser().getXMLReader();", "+        parser.setContentHandler(this);", "+        parser.setEntityResolver(this);", "+        parser.setErrorHandler(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3484ae821d2cc6030c8febd81d478f9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "e23b8a2ffa778628b4a163ef7ac60291482f64ef", "commitAfterChange": "3fca3c9250864912e36783302ebe8f04f17ec262", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public final void setCustomImportOrderRules(final String inputCustomImportOrder)", "signatureAfterChange": "     public final void setCustomImportOrderRules(final String inputCustomImportOrder)", "diff": ["-        for (String currentState : inputCustomImportOrder", "-                .split(\"\\\\s*###\\\\s*\")) {", "+        for (String currentState : GROUP_SEPARATOR_PATTERN.split(inputCustomImportOrder)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3a3d741b259fb9fb01bab73489483a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "         public String getValue()", "signatureAfterChange": "         public String getValue()", "diff": ["-            return mValue;", "+            return value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3ed6174d8e82990d142f4d9cf1a3508", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedCheck.java", "commitBeforeChange": "904de34fcd984edce3d6042a5a17e2a969254588", "commitAfterChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean containsJavadocTag(final TextBlock javadoc)", "signatureAfterChange": "     private boolean containsJavadocTag(final TextBlock javadoc)", "diff": ["-                found = validateTagAtTheRestOfComment(lines, found, currentLine, i);", "+                found = checkTagAtTheRestOfComment(lines, found, currentLine, i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3f092413a94eed8ab3ba13fa1f47742", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "          @Override         public void dragExit(DropTargetEvent evt)", "signatureAfterChange": "          @Override         public void dragExit(DropTargetEvent evt)", "diff": ["-                final JComponent jc = (JComponent) component;", "-                jc.setBorder(normalBorder);", "+                final JComponent comp = (JComponent) component;", "+                comp.setBorder(normalBorder);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a41c605ded3e3a155923310560817803", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "commitAfterChange": "abfc952fd0ed88f6246b1d969a8a980ea63f0bd6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public LocalizedMessage(int lineNo,                             int colNo,                             String bundle,                             String key,                             Object[] args,                             String moduleId,                             Class<?> sourceClass,                             String customMessage)", "signatureAfterChange": "     public LocalizedMessage(int lineNo,                             int columnNo,                             String bundle,                             String key,                             Object[] args,                             String moduleId,                             Class<?> sourceClass,                             String customMessage)", "diff": ["-                            int colNo,", "+                            int columnNo,", "-             colNo,", "+                columnNo,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a421cca540a4266f5203b97b914fa9ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java", "commitBeforeChange": "592d5d86b9cedfa04ad9990d23b244414aaad685", "commitAfterChange": "a5031acb330edaa2311acbce4945f7b44fc76b29", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private boolean hasBlankLineAfter(DetailAST aToken)", "signatureAfterChange": "     private boolean hasEmptyLineAfter(DetailAST aToken)", "diff": ["-    private boolean hasBlankLineAfter(DetailAST aToken)", "+    private boolean hasEmptyLineAfter(DetailAST aToken)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a48306aae52812604f3bde68ca543c4a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void setClasses(String aClassNames)", "signatureAfterChange": "     public void setClasses(String classNames)", "diff": ["-    public void setClasses(String aClassNames)", "+    public void setClasses(String classNames)", "-        mIllegalClasses.clear();", "-        final StringTokenizer tok = new StringTokenizer(aClassNames, \",\");", "+        illegalClasses.clear();", "+        final StringTokenizer tok = new StringTokenizer(classNames, \",\");", "-            mIllegalClasses.add(tok.nextToken());", "+            illegalClasses.add(tok.nextToken());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a491189ae1aaecd472a6cc6cd4577a97", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "      @Test     public void testExistingTargetFilePlainOutputToFileWithoutReadAndRwPermissions()             throws Exception", "signatureAfterChange": "      @Test     public void testExistingFilePlainOutputToFileWithoutReadAndRwPermissions()             throws Exception", "diff": ["-    public void testExistingTargetFilePlainOutputToFileWithoutReadAndRwPermissions()", "+    public void testExistingFilePlainOutputToFileWithoutReadAndRwPermissions()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4b3e3aadf9fc30bc2e630d310fab62b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ParameterAssignmentCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void visitMethodDef(DetailAST aAST)", "signatureAfterChange": "     private void visitMethodDef(DetailAST ast)", "diff": ["-    private void visitMethodDef(DetailAST aAST)", "+    private void visitMethodDef(DetailAST ast)", "-        mParameterNamesStack.push(mParameterNames);", "-        mParameterNames = Sets.newHashSet();", "+        parameterNamesStack.push(parameterNames);", "+        parameterNames = Sets.newHashSet();", "-        visitMethodParameters(aAST.findFirstToken(TokenTypes.PARAMETERS));", "+        visitMethodParameters(ast.findFirstToken(TokenTypes.PARAMETERS));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4b6cc6dc59fc8886fe5a728ac096f16", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public static DetailAST parse(FileContents contents)         throws RecognitionException, TokenStreamException", "signatureAfterChange": "     public static DetailAST parse(FileContents contents)         throws RecognitionException, TokenStreamException", "diff": ["-        final Reader sr = new StringReader(fullText);", "-        final GeneratedJavaLexer lexer = new GeneratedJavaLexer(sr);", "+        final Reader reader = new StringReader(fullText);", "+        final GeneratedJavaLexer lexer = new GeneratedJavaLexer(reader);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4c4417ffd2f3622b1413b13a1cf0559", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/NonEmptyAtclauseDescriptionCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private boolean isEmptyTag(DetailNode aTagNode)", "signatureAfterChange": "     private boolean isEmptyTag(DetailNode tagNode)", "diff": ["-    private boolean isEmptyTag(DetailNode aTagNode)", "+    private boolean isEmptyTag(DetailNode tagNode)", "-                JavadocUtils.findFirstToken(aTagNode, JavadocTokenTypes.DESCRIPTION);", "+                JavadocUtils.findFirstToken(tagNode, JavadocTokenTypes.DESCRIPTION);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4f8f46027b9e4d81d860d5baab6b95c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/HtmlTag.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-        final int startOfText = mPosition;", "+        final int startOfText = position;", "-            Math.min(startOfText + HtmlTag.MAX_TEXT_LEN, mText.length());", "-        return mText.substring(startOfText, endOfText);", "+            Math.min(startOfText + HtmlTag.MAX_TEXT_LEN, text.length());", "+        return text.substring(startOfText, endOfText);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a509c69b795550047451886a0d918820", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private Object doMakeObject(String name)         throws CheckstyleException", "signatureAfterChange": "     private Object doMakeObject(String name)         throws CheckstyleException", "diff": ["-            LOG.debug(\"Keep looking, ignoring exception\", ex);", "+            LOG.debug(IGNORING_EXCEPTION_MESSAGE, ex);", "-                LOG.debug(\"Keep looking, ignoring exception\", ex);", "+                LOG.debug(IGNORING_EXCEPTION_MESSAGE, ex);", "-        throw new CheckstyleException(\"Unable to instantiate \" + name);", "+        throw new CheckstyleException(UNABLE_TO_INSTANTIATE_EXCEPTION_MESSAGE + name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a51b3340e3aeb964de56992930c33aba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void checkComment(final DetailAST aAST, final TextBlock aComment)", "signatureAfterChange": "     private void checkComment(final DetailAST ast, final TextBlock comment)", "diff": ["-    private void checkComment(final DetailAST aAST, final TextBlock aComment)", "+    private void checkComment(final DetailAST ast, final TextBlock comment)", "-        if (aComment == null) {", "+        if (comment == null) {", "-                log(aAST.getLineNo(), \"javadoc.missing\");", "+                log(ast.getLineNo(), \"javadoc.missing\");", "-        if (mCheckFirstSentence) {", "-            checkFirstSentence(aAST, aComment);", "+        if (checkFirstSentence) {", "+            checkFirstSentence(ast, comment);", "-        if (mCheckHtml) {", "-            checkHtml(aAST, aComment);", "+        if (checkHtml) {", "+            checkHtml(ast, comment);", "-        if (mCheckEmptyJavadoc) {", "-            checkEmptyJavadoc(aComment);", "+        if (checkEmptyJavadoc) {", "+            checkEmptyJavadoc(comment);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a52c62304e05bdbc45fa28a98394f98d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Utils.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static int lengthExpandedTabs(String aString,                                          int aToIdx,                                          int aTabWidth)", "signatureAfterChange": "     public static int lengthExpandedTabs(String string,                                          int toIdx,                                          int tabWidth)", "diff": ["-    public static int lengthExpandedTabs(String aString,", "-                                         int aToIdx,", "-                                         int aTabWidth)", "+    public static int lengthExpandedTabs(String string,", "+                                         int toIdx,", "+                                         int tabWidth)", "-        for (int idx = 0; idx < aToIdx; idx++) {", "-            if (aString.charAt(idx) == '\\t') {", "-                len = (len / aTabWidth + 1) * aTabWidth;", "+        for (int idx = 0; idx < toIdx; idx++) {", "+            if (string.charAt(idx) == '\\t') {", "+                len = (len / tabWidth + 1) * tabWidth;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a54c9414692a84b9bbef5b9df126838b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "546f336e25b26d072f96e2cda139b885858ed5b0", "commitAfterChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            for (final Counter c : counters) {", "-                c.increment();", "+            for (final Counter counter : counters) {", "+                counter.increment();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a58ce3406f4ffa23784e34b140e70ac9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "commitBeforeChange": "3c0c72f96477afb542ee37b3336f4b7b7613ff29", "commitAfterChange": "6f0a3dee5efc6217383f9bfd6d7a3a116b1c885b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setCheckName(boolean aValue)", "signatureAfterChange": "     public void setIgnoreModifier(boolean aValue)", "diff": ["+    public void setIgnoreModifier(boolean aValue)", "+        mIgnoreModifier = aValue;", "-    public void setCheckName(boolean aValue)", "-        mCheckName = aValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5a75201222619e3aa359874c2070dbe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java", "commitBeforeChange": "a362f4213c856558ce10720a82bcbc1bddd0a1e0", "commitAfterChange": "8e55d5c09147620f59461387d45d09c2bc0bbd6e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void checkComment(DetailAST aAST, String[] aComment)", "signatureAfterChange": "     private void checkComment(DetailAST aAST, String[] aComment)", "diff": ["-            || !((JavadocTag) tags.get(0)).isSeeTag())", "+            || !((JavadocTag) tags.get(0)).isSeeOrInheritDocTag())", "-                if (!jt.isSeeTag()) {", "+                if (!jt.isSeeOrInheritDocTag()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5a87325ecc6b2da9304ad91c70b4a1a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "0ce872d7cc6b0b1564655b9e3119f72911f4dddd", "commitAfterChange": "ea9ff3965d9c657b5b7bd2d969e075f430635c47", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     void checkedOk(String fileName, long timestamp)", "signatureAfterChange": "     void put(String fileName, long timestamp)", "diff": ["-    void checkedOk(String fileName, long timestamp) {", "+    void put(String fileName, long timestamp) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5b2e6c20fa2028fbfa96e371fb5f4ed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     static PkgControl load(final URI aUri) throws CheckstyleException", "signatureAfterChange": "     static PkgControl load(final URI uri) throws CheckstyleException", "diff": ["-    static PkgControl load(final URI aUri) throws CheckstyleException", "+    static PkgControl load(final URI uri) throws CheckstyleException", "-            is = aUri.toURL().openStream();", "+            is = uri.toURL().openStream();", "-            throw new CheckstyleException(\"syntax error in url \" + aUri, e);", "+            throw new CheckstyleException(\"syntax error in url \" + uri, e);", "-            throw new CheckstyleException(\"unable to find \" + aUri, e);", "+            throw new CheckstyleException(\"unable to find \" + uri, e);", "-        return load(source, aUri);", "+        return load(source, uri);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5ffdbba22a5baca90353f1b993c564a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "commitAfterChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public final void setCustomImportOrderRules(final String inputCustomImportOrder)", "signatureAfterChange": "     public final void setCustomImportOrderRules(final String inputCustomImportOrder)", "diff": ["-            addRuleastoList(currentState);", "+            addRulesToList(currentState);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a60aa8f3313f54493e1c83115ef66ab1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected final int getLineStart(String aLine)", "signatureAfterChange": "     protected final int getLineStart(String line)", "diff": ["-    protected final int getLineStart(String aLine)", "+    protected final int getLineStart(String line)", "-        for (int start = 0; start < aLine.length(); start++) {", "-            final char c = aLine.charAt(start);", "+        for (int start = 0; start < line.length(); start++) {", "+            final char c = line.charAt(start);", "-                    aLine, start, mIndentCheck.getIndentationTabWidth());", "+                    line, start, indentCheck.getIndentationTabWidth());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6176f395710d604ff5d1a350461043a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public final void setThirdPartyPackageRegExp(String aRegexp)", "signatureAfterChange": "     public final void setThirdPartyPackageRegExp(String regexp)", "diff": ["-    public final void setThirdPartyPackageRegExp(String aRegexp)", "+    public final void setThirdPartyPackageRegExp(String regexp)", "-        mThirdPartyPackageRegExp = Utils.getPattern(aRegexp);", "+        thirdPartyPackageRegExp = Utils.getPattern(regexp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a62666adeb04264ed1007d1a75ca8bf9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "commitBeforeChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "commitAfterChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void visitClassDef(DetailAST ast)", "signatureAfterChange": "     private void visitClassDef(DetailAST ast)", "diff": ["-                    \"illegal.abstract.class.name\", className, getFormat());", "+                    ILLEGAL_ABSTRACT_CLASS_NAME, className, getFormat());", "-                \"no.abstract.class.modifier\", className);", "+                NO_ABSTRACT_CLASS_MODIFIER, className);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a64ace70cafac2cf15500e37c27c26db", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "d814d1352b63136a400cd8f4dffd03d68c9ccd24", "commitAfterChange": "3edd1b53a5d8d407fd33d8c514db8bc1c7274fe5", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected IndentLevel getChildrenExpectedLevel()", "signatureAfterChange": "     protected IndentLevel getChildrenExpectedLevel()", "diff": ["-        if (getLevel().isMultiLevel() && hasCurlys()) {", "+        if (getLevel().isMultiLevel() && hasCurlies()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a654917f71cf20ed58384adaf8527423", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AuditEvent.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public AuditEvent(Object aSource)", "signatureAfterChange": "     public AuditEvent(Object source)", "diff": ["-    public AuditEvent(Object aSource)", "+    public AuditEvent(Object source)", "-        this(aSource, null);", "+        this(source, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a654cf82a92944464b8e5dd89805553b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          @Override         public void endElement(String aNamespaceURI,                                String aLocalName,                                String aQName)             throws SAXException", "signatureAfterChange": "          @Override         public void endElement(String namespaceURI,                                String localName,                                String qName)             throws SAXException", "diff": ["-        public void endElement(String aNamespaceURI,", "-                               String aLocalName,", "-                               String aQName)", "+        public void endElement(String namespaceURI,", "+                               String localName,", "+                               String qName)", "-            if (aQName.equals(MODULE)) {", "+            if (qName.equals(MODULE)) {", "-                    mConfigStack.pop();", "+                    configStack.pop();", "-                final boolean omitModule = mOmitIgnoredModules", "+                final boolean omitModule = omitIgnoredModules", "-                if (omitModule && !mConfigStack.isEmpty()) {", "+                if (omitModule && !configStack.isEmpty()) {", "-                        mConfigStack.peek();", "+                        configStack.peek();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a65ad453291d7ee3f57615d86ed938c9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "         public int getLastColumn()", "signatureAfterChange": "         public int getLastColumn()", "diff": ["-            return mLastColumn;", "+            return lastColumn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a66898da964ba717d8b2e1ab2eb83fd6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "d814d1352b63136a400cd8f4dffd03d68c9ccd24", "commitAfterChange": "3edd1b53a5d8d407fd33d8c514db8bc1c7274fe5", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Override     public void checkIndentation()", "signatureAfterChange": "      @Override     public void checkIndentation()", "diff": ["-        checkToplevelToken();", "+        checkTopLevelToken();", "-        if (hasCurlys()) {", "+        if (hasCurlies()) {", "-            // NOTE: switch statements usually don't have curlys", "-            if (!hasCurlys() || !areOnSameLine(getLCurly(), getRCurly())) {", "+            // NOTE: switch statements usually don't have curlies", "+            if (!hasCurlies() || !areOnSameLine(getLCurly(), getRCurly())) {", "-            checkNonlistChild();", "+            checkNonListChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a66c0aa501581527dcf876fb9caf6be3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PackageObjectFactoryTest.java", "commitBeforeChange": "8f86620e72849120dc5fba45c3cc54ed38e24447", "commitAfterChange": "d345f3beb27f3d8e3fde06f7e2c7612ddf691b95", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testMakeObectNoClass()", "signatureAfterChange": "      @Test     public void testMakeObjectNoClass()", "diff": ["-    public void testMakeObectNoClass() {", "+    public void testMakeObjectNoClass() {", "-            fail(\"Instantiated non-existant class\");", "+            fail(\"Instantiated non-existent class\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6791473e3d8f85743b1f7455a36178c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/transmogrify/SymbolTable.java", "commitBeforeChange": "cf27285c85613a0963903ddf6b683aa586f90aa5", "commitAfterChange": "adc04337ea44d4e6b0ff8ec5efedd11ecd263646", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public SymbolTable(SymTabAST root)", "signatureAfterChange": "   public SymbolTable(SymTabAST aRoot)", "diff": ["-  public SymbolTable(SymTabAST root) {", "+  public SymbolTable(SymTabAST aRoot) {", "-    this.root = root;", "+    this.root = aRoot;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6b3bdf5a0e15e85feacdc3c1c183067", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "c9db9f82e2311350bba5fd7e4042ae69f503e60b", "commitAfterChange": "faf76530d87662e93197f00d1d818f3f6a481763", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     void verifyVariable(MyVariable aVar)", "signatureAfterChange": "     void verifyVariable(MyVariable aVar)", "diff": ["+", "+        // Always check that the order of modifiers follows the JLS suggestion", "+        checkModOrder(mods);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6d469f61d0af60aa66556c137a1e2f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "commitAfterChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void startElement(final String namespaceURI,                              final String locqName,                              final String qName,                              final Attributes atts)         throws SAXException", "signatureAfterChange": "      @Override     public void startElement(final String namespaceURI,                              final String locqName,                              final String qName,                              final Attributes attributes)         throws SAXException", "diff": ["-                             final Attributes atts)", "+                             final Attributes attributes)", "-            final String pkg = safeGet(atts, PKG_ATTRIBUTE_NAME);", "+            final String pkg = safeGet(attributes, PKG_ATTRIBUTE_NAME);", "-            final String name = safeGet(atts, \"name\");", "+            final String name = safeGet(attributes, \"name\");", "-            final boolean isLocalOnly = atts.getValue(\"local-only\") != null;", "-            final String pkg = atts.getValue(PKG_ATTRIBUTE_NAME);", "-            final boolean regex = atts.getValue(\"regex\") != null;", "+            final boolean isLocalOnly = attributes.getValue(\"local-only\") != null;", "+            final String pkg = attributes.getValue(PKG_ATTRIBUTE_NAME);", "+            final boolean regex = attributes.getValue(\"regex\") != null;", "-                        atts.getValue(\"exact-match\") != null;", "+                        attributes.getValue(\"exact-match\") != null;", "-                final String clazz = safeGet(atts, \"class\");", "+                final String clazz = safeGet(attributes, \"class\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6e6044d73caa5f01718d94146266a23", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "3f853ae96a24f2079901c3d47c6e6a7fa0604654", "commitAfterChange": "2ad4b0830d3892f718134e198a0bcbe9fbf5d8c7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-                    && !(compare(fullImportIdent, previousImport) >= 0))", "+                    && !(compareImports(fullImportIdent, previousImport) >= 0))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6e6816547181763f8ee060c7804f102", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void setIgnoreAbstractMethods(         boolean aIgnoreAbstractMethods)", "signatureAfterChange": "     public void setIgnoreAbstractMethods(         boolean ignoreAbstractMethods)", "diff": ["-        boolean aIgnoreAbstractMethods)", "+        boolean ignoreAbstractMethods)", "-        mIgnoreAbstractMethods = aIgnoreAbstractMethods;", "+        this.ignoreAbstractMethods = ignoreAbstractMethods;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6e736c3b5bd6435a8a75821ba3580dc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "         private boolean isLoadable()", "signatureAfterChange": "         private boolean isLoadable()", "diff": ["-            return mIsLoadable;", "+            return isLoadable;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6f24a9be7ea5f4ea7bee08d8bf1c89c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public int getLineWrappingIndentation()", "signatureAfterChange": "     public int getLineWrappingIndentation()", "diff": ["-        return mLineWrappingIndentation;", "+        return lineWrappingIndentation;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6ff943c4896bc12810c1e05720ea297", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     boolean inCache(String fileName, long timestamp)", "signatureAfterChange": "     boolean inCache(String uncheckedFileName, long timestamp)", "diff": ["-    boolean inCache(String fileName, long timestamp) {", "-        final String lastChecked = details.getProperty(fileName);", "+    boolean inCache(String uncheckedFileName, long timestamp) {", "+        final String lastChecked = details.getProperty(uncheckedFileName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a715a61c0b0985173359ac8a91dc78c1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void setIgnoreAnnotation(boolean aIgnoreAnnotation)", "signatureAfterChange": "     public void setIgnoreAnnotation(boolean ignoreAnnotation)", "diff": ["-    public void setIgnoreAnnotation(boolean aIgnoreAnnotation)", "+    public void setIgnoreAnnotation(boolean ignoreAnnotation)", "-        mIgnoreAnnotation = aIgnoreAnnotation;", "+        this.ignoreAnnotation = ignoreAnnotation;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a744543d0b4701aae783ffa33cb7bc40", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "6cd514c9aca3a215ac523ef44c0798d83d48e08a", "commitAfterChange": "7138d731ce2bc90df35e533b701e50062864464b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void checkLCurly()", "signatureAfterChange": "     protected void checkLCurly()", "diff": ["-        if (lcurly == null", "-            || curlyLevel().accept(lcurlyPos)", "-            || !startsLine(lcurly))", "-        {", "+        if (curlyLevel().accept(lcurlyPos) || !startsLine(lcurly)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a747c074d122e5bebed9940ae135ac6b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/annotation/InputCorrectAnnotationLocation.java", "commitBeforeChange": "04c38bad85ac94b3da997fe23b2181479ed6ac57", "commitAfterChange": "10c39148b715af5229f185ff3d54f4187c0fbe4a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "         @MyAnnotation1         @MyAnnotation2 void foo1(int a)", "signatureAfterChange": "         @MyAnnotation5         @MyAnnotation6 void foo1(int a)", "diff": ["-        @MyAnnotation1", "-        @MyAnnotation2 void foo1(int a) {}", "+        @MyAnnotation5", "+        @MyAnnotation6 void foo1(int a) {}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a74f3f3fd378c70f5cc44014a483ee38", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "a0d00ea8940acd30064715db04d7a19a99d4cca9", "commitAfterChange": "f52306ff7799ea2b2e4d99fba7040a11b186d68a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void processIdent(DetailAST ast)", "signatureAfterChange": "     private void processIdent(DetailAST ast)", "diff": ["-                if (checkMethods && isClassMethod(ast.getText())) {", "+                if (checkMethods && isClassMethod(ast)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a76c1cd40f248bc4850225bc7282668f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java", "commitBeforeChange": "e21676f52f3d68294122244cea63b4ecbe92de8f", "commitAfterChange": "0f9490c4ab86e6df2cfe90db1ffe04e906a5edad", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 30, "signatureBeforeChange": "     private static boolean areSameLevelIndented(DetailAST singleLineComment,                                                 DetailAST prevStmt, DetailAST nextStmt)", "signatureAfterChange": "     private static boolean areSameLevelIndented(DetailAST comment, DetailAST prevStmt,                                                 DetailAST nextStmt)", "diff": ["-    private static boolean areSameLevelIndented(DetailAST singleLineComment,", "-                                                DetailAST prevStmt, DetailAST nextStmt) {", "+    private static boolean areSameLevelIndented(DetailAST comment, DetailAST prevStmt,", "+                                                DetailAST nextStmt) {", "-            result = singleLineComment.getColumnNo() == nextStmt.getColumnNo();", "+            result = comment.getColumnNo() == nextStmt.getColumnNo();", "-            result = singleLineComment.getColumnNo() == nextStmt.getColumnNo()", "-                || singleLineComment.getColumnNo() == prevStmt.getColumnNo();", "+            result = comment.getColumnNo() == nextStmt.getColumnNo()", "+                || comment.getColumnNo() == prevStmt.getColumnNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a77f5e8cd2b84d49d9bf1de01fc14216", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessageTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testBundleReload_UrlNull() throws IOException", "signatureAfterChange": "      @Test     public void testBundleReloadUrlNull() throws IOException", "diff": ["-    public void testBundleReload_UrlNull() throws IOException {", "+    public void testBundleReloadUrlNull() throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a797c3ebb5e6de7cb6c55ddeb4b6c2c7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "ac18264bf62da6836d92a28c96e7599aa5fe7cbd", "commitAfterChange": "aff5047c9e29ed3fa0a502dd9713fc5aae55146e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void readObject(ObjectInputStream aStream)         throws IOException, ClassNotFoundException", "signatureAfterChange": "     private void readObject(ObjectInputStream aStream)         throws IOException, ClassNotFoundException", "diff": ["-        // reset the header file to re-read the lines", "-        setHeaderFile(mHeaderFile);", "+", "+        // load the file to re-read the lines", "+        loadFiles();", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7c5a8dce6fa271812e999bf518d3b58", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentLevel.java", "commitBeforeChange": "13a49cc45b1527357934dd7802c24686d7bb7858", "commitAfterChange": "24d7448294b03e49709c8e5588e89c27091ba0f2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public boolean greaterThan(int indent)", "signatureAfterChange": "     public boolean isGreaterThan(int indent)", "diff": ["-    public boolean greaterThan(int indent) {", "+    public boolean isGreaterThan(int indent) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7ca8f47faaa3b84384a40695c3b621e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "721bd2c690356f4ef6a4dd451600fad311fdde76", "commitAfterChange": "a47526404dfcbf638b937ce8a35357151dc12369", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     void registerCheck(Check aCheck)            throws CheckstyleException", "signatureAfterChange": "     void registerCheck(Check aCheck)            throws CheckstyleException", "diff": ["-        final Set checkTokens = aCheck.getTokens();", "+        final Set checkTokens = aCheck.getTokenNames();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7f9f5ad7df7d0accb1b35aafd938734", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SeverityMatchFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Override     public boolean accept(AuditEvent aEvent)", "signatureAfterChange": "     @Override     public boolean accept(AuditEvent event)", "diff": ["-    public boolean accept(AuditEvent aEvent)", "+    public boolean accept(AuditEvent event)", "-        final boolean result = mSeverityLevel.equals(aEvent.getSeverityLevel());", "-        if (mAcceptOnMatch) {", "+        final boolean result = severityLevel.equals(event.getSeverityLevel());", "+        if (acceptOnMatch) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a81bf13926d1106f8c88141b3d9b792d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setShouldStartLine(boolean aFlag)", "signatureAfterChange": "     public void setShouldStartLine(boolean flag)", "diff": ["-    public void setShouldStartLine(boolean aFlag)", "+    public void setShouldStartLine(boolean flag)", "-        mShouldStartLine = aFlag;", "+        shouldStartLine = flag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a835185ae14eeeae87eab76ed4181f6d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/FileTextTest.java", "commitBeforeChange": "592338494d8577c5b3dcbd23c0bbb97b3a4e793a", "commitAfterChange": "9a4d0253da6f7bfe4774d2e77da44c3449997899", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testUnsupportedCharset() throws IOException", "signatureAfterChange": "     @Test     public void testUnsupportedCharset() throws IOException", "diff": ["-        catch (UnsupportedEncodingException ex) {", "+        catch (IllegalStateException ex) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a83e0b96dbfaa7e344b84bdb84a083c5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "37bc6ba73748aac4ef2aa272c8a8b74b1bf28d10", "commitAfterChange": "76374876692534687016dba762a465bf93039402", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected final void logError(DetailAST aAst, String aSubtypeName,                                   int aActualLevel, IndentLevel aExpectedLevel)", "signatureAfterChange": "     protected final void logError(DetailAST aAst, String aSubtypeName,                                   int aActualLevel, IndentLevel aExpectedLevel)", "diff": ["-            (aSubtypeName.length() == 0 ? \"\" : (\" \" + aSubtypeName));", "+            (\"\".equals(aSubtypeName) ? \"\" : (\" \" + aSubtypeName));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a856e42528fe23a801b1b718bcc7e5d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private int getFirstNodeIndent(DetailAST aNode)", "signatureAfterChange": "     private int getFirstNodeIndent(DetailAST node)", "diff": ["-    private int getFirstNodeIndent(DetailAST aNode)", "+    private int getFirstNodeIndent(DetailAST node)", "-        int indentLevel = aNode.getColumnNo();", "+        int indentLevel = node.getColumnNo();", "-        if (aNode.getType() == TokenTypes.LITERAL_IF", "-                && aNode.getParent().getType() == TokenTypes.LITERAL_ELSE)", "+        if (node.getType() == TokenTypes.LITERAL_IF", "+                && node.getParent().getType() == TokenTypes.LITERAL_ELSE)", "-            final DetailAST lcurly = aNode.getParent().getPreviousSibling();", "+            final DetailAST lcurly = node.getParent().getPreviousSibling();", "-                    && rcurly.getLineNo() == aNode.getLineNo())", "+                    && rcurly.getLineNo() == node.getLineNo())", "-                indentLevel = aNode.getParent().getColumnNo();", "+                indentLevel = node.getParent().getColumnNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8657865e3779f3d39fc9e5c70512231", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheckTest.java", "commitBeforeChange": "03f2be49f7ad3fc9d0143782b020a169f28e50a9", "commitAfterChange": "0c2a64d9f02ab5b94bbf4213cb2978f7b459b6f5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testWrongFile() throws Exception", "signatureAfterChange": "      @Test     public void testWrongFile() throws Exception", "diff": ["-        Iterator<LocalizedMessage> iter = messages.iterator();", "-        assertEquals(\"Unable to open ''.\", iter.next().getMessage());", "+        Iterator<LocalizedMessage> iterator = messages.iterator();", "+        assertEquals(\"Unable to open ''.\", iterator.next().getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8bd2a22395dce078e3093f6e5a5d04a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTag.java", "commitBeforeChange": "443e534a3c98c0b30f24647da724fe918f17a006", "commitAfterChange": "66d73fe6189267fee3423e2e8d7fc2d68599a43f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public JavadocTag(int line, int column, String tag, String arg1)", "signatureAfterChange": "     public JavadocTag(int line, int column, String tag, String firstArg)", "diff": ["-    public JavadocTag(int line, int column, String tag, String arg1) {", "+    public JavadocTag(int line, int column, String tag, String firstArg) {", "-        this.arg1 = arg1;", "+        this.firstArg = firstArg;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8c2d9c3435e1ce8d6e89f0c7a47e0e4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private static boolean inStatic(DetailAST ast)", "signatureAfterChange": "     private static boolean isInStatic(DetailAST ast)", "diff": ["-    private static boolean inStatic(DetailAST ast) {", "+    private static boolean isInStatic(DetailAST ast) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8cea1fa6264a8d35ed35f2e1bcf78ff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void setCheckHtml(boolean aFlag)", "signatureAfterChange": "     public void setCheckHtml(boolean flag)", "diff": ["-    public void setCheckHtml(boolean aFlag)", "+    public void setCheckHtml(boolean flag)", "-        mCheckHtml = aFlag;", "+        checkHtml = flag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8de76510dad513701d5459c602b6e4c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "92358288d94bd806a7cdd0958f382d81416542c8", "commitAfterChange": "2795663daebc7d8b608992327e4580d37bb32a6d", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "     public boolean isEnableCheckUnusedThrows()", "signatureAfterChange": "     public boolean isCheckUnusedThrows()", "diff": ["-    public boolean isEnableCheckUnusedThrows()", "+    public boolean isCheckUnusedThrows()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8f3f358d945c7658e47616bb9ae7fcc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentLevel.java", "commitBeforeChange": "f9a9d6c3d321eeb2879efb7f48f02fe21a51c06c", "commitAfterChange": "4ac32a7c0cf72ee35630432ce260293f80d886b8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public boolean gt(int indent)", "signatureAfterChange": "     public boolean greaterThan(int indent)", "diff": ["-    public boolean gt(int indent)", "+    public boolean greaterThan(int indent)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a90737f7b6f8858ed57569686c66c0a6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void setIgnoreSetter(boolean aIgnoreSetter)", "signatureAfterChange": "     public void setIgnoreSetter(boolean ignoreSetter)", "diff": ["-    public void setIgnoreSetter(boolean aIgnoreSetter)", "+    public void setIgnoreSetter(boolean ignoreSetter)", "-        mIgnoreSetter = aIgnoreSetter;", "+        this.ignoreSetter = ignoreSetter;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a921e59c2c39d23fb75bae5d6c31e739", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private <T extends Enum<T>> T getOption(final Class<T> aEnumClass,         final String aString)", "signatureAfterChange": "     private <T extends Enum<T>> T getOption(final Class<T> enuclass,         final String string)", "diff": ["-    private <T extends Enum<T>> T getOption(final Class<T> aEnumClass,", "-        final String aString)", "+    private <T extends Enum<T>> T getOption(final Class<T> enuclass,", "+        final String string)", "-            return Enum.valueOf(aEnumClass, aString.trim().toUpperCase());", "+            return Enum.valueOf(enuclass, string.trim().toUpperCase());", "-            throw new ConversionException(\"unable to parse \" + aString, iae);", "+            throw new ConversionException(\"unable to parse \" + string, iae);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a93035ed0a2f45328086874edf9a94ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b14f255427c0b12054de2873fe300b4f4e691bd4", "commitAfterChange": "cc7aeaec906dc3c864477e3050510009b2a946ee", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean isStaticOrOnstanceField(DetailAST ast, String name)", "signatureAfterChange": "     private boolean isStaticOrInstanceField(DetailAST ast, String name)", "diff": ["-    private boolean isStaticOrOnstanceField(DetailAST ast, String name) {", "+    private boolean isStaticOrInstanceField(DetailAST ast, String name) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a932a280fc0a1309154ce1f0c4157592", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/InnerTypeLastCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (mRootClass) {", "-            mRootClass = false;", "+        if (rootClass) {", "+            rootClass = false;", "-            DetailAST nextSibling = aAST.getNextSibling();", "+            DetailAST nextSibling = ast.getNextSibling();", "-                if (!ScopeUtils.inCodeBlock(aAST)", "+                if (!ScopeUtils.inCodeBlock(ast)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a95681ce498789cf497ef833eb85b37c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "be6d271ac34efc3daed3dbb873ab8060723dd4f8", "commitAfterChange": "b06dd9801e56887f7da1bbc8b55233e0ff5f5115", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setParampattern(String aPat)", "signatureAfterChange": "     public void setParamPattern(String aPat)", "diff": ["-    public void setParampattern(String aPat)", "+    public void setParamPattern(String aPat)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a977b8aebda056e4a1269a6010ffa55c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "1104baffa485ed4d49179c6fd349385692378cbc", "commitAfterChange": "f8ea4c69a2228c5aca6c0b6e08a39a613d157708", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     void reportNeedBraces(Token aToken);", "signatureAfterChange": "     void reportNeedBraces(Token aStmt);", "diff": ["-    void reportNeedBraces(Token aToken);", "+    void reportNeedBraces(Token aStmt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a97c1e782f22ae7d1a8ad3845bce81dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/RedundantImportCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static boolean fromPackage(String importName, String pkg)", "signatureAfterChange": "     private static boolean isFromPackage(String importName, String pkg)", "diff": ["-    private static boolean fromPackage(String importName, String pkg) {", "+    private static boolean isFromPackage(String importName, String pkg) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a99b0bdf30b128a5c60c4c6e56b4e877", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public DefaultLogger(OutputStream os, boolean closeStreamsAfterUse)", "signatureAfterChange": "     public DefaultLogger(OutputStream outputStream, boolean closeStreamsAfterUse)", "diff": ["-    public DefaultLogger(OutputStream os, boolean closeStreamsAfterUse) {", "+    public DefaultLogger(OutputStream outputStream, boolean closeStreamsAfterUse) {", "-        this(os, closeStreamsAfterUse, os, false);", "+        this(outputStream, closeStreamsAfterUse, outputStream, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9a2df8cf4692397670b774a0fcaf3e1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/ExecutableStatementCountCheck.java", "commitBeforeChange": "b8f9b199ad7de16619cec1f288bd751fad8bc4a9", "commitAfterChange": "b0bb7e1b50237a03ce4e977af15665c07e20f078", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void leaveMethodDef(DetailAST aAST)", "signatureAfterChange": "     private void leaveMemberDef(DetailAST aAST)", "diff": ["-    private void leaveMethodDef(DetailAST aAST)", "+    private void leaveMemberDef(DetailAST aAST)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9c188cd80e090054b53d9e61b06997d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     private void checkThrowsTags(List<JavadocTag> tags,             List<ExceptionInfo> throwsList, boolean reportExpectedTags)", "signatureAfterChange": "     private void checkThrowsTags(List<JavadocTag> tags,             List<ExceptionInfo> throwsList, boolean reportExpectedTags)", "diff": ["-            final AbstractClassInfo documentedCI = createClassInfo(token,", "+            final AbstractClassInfo documentedClassInfo = createClassInfo(token,", "-                    || isInThrows(throwsList, documentedCI, foundThrows);", "+                    || isInThrows(throwsList, documentedClassInfo, foundThrows);", "-                    reqd = !isUnchecked(documentedCI.getClazz());", "+                    reqd = !isUnchecked(documentedClassInfo.getClazz());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa2e41ff245238ad3b8d3033b42cc37d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractAccessControlNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public boolean getApplyToPackage()", "signatureAfterChange": "     public boolean getApplyToPackage()", "diff": ["-        return mApplyToPackage;", "+        return applyToPackage;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa5a5beae0351d3b4e59763d8950d75e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected final Class<?> resolveClass(String aClassName,             String aCurrentClass)", "signatureAfterChange": "     protected final Class<?> resolveClass(String className,             String currentClass)", "diff": ["-    protected final Class<?> resolveClass(String aClassName,", "-            String aCurrentClass)", "+    protected final Class<?> resolveClass(String className,", "+            String currentClass)", "-            return getClassResolver().resolve(aClassName, aCurrentClass);", "+            return getClassResolver().resolve(className, currentClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aabd89129e5cdb930d73af9b70edd9c6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java", "commitBeforeChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "commitAfterChange": "29027109bf962f47b6a6000fdca69b5679ce4b43", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     protected void processFiltered(File aFile, List<String> aLines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-    protected void processFiltered(File aFile, List<String> aLines)", "+    protected void processFiltered(File file, List<String> lines)", "-        if (getHeaderLines().size() > aLines.size()) {", "+        if (getHeaderLines().size() > lines.size()) {", "-                if (!isMatch(i, aLines.get(i))) {", "+                if (!isMatch(i, lines.get(i))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aae1106b762d4c7d7e0672de1ef9e656", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "          public ParseErrorMessage getParseErrorMessage()", "signatureAfterChange": "          public ParseErrorMessage getParseErrorMessage()", "diff": ["-            return mParseErrorMessage;", "+            return parseErrorMessage;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aae2cf3542b4f221658f1bbbcc81aaf4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public final void setLogLoadErrors(boolean aLogLoadErrors)", "signatureAfterChange": "     public final void setLogLoadErrors(boolean logLoadErrors)", "diff": ["-    public final void setLogLoadErrors(boolean aLogLoadErrors)", "+    public final void setLogLoadErrors(boolean logLoadErrors)", "-        mLogLoadErrors = aLogLoadErrors;", "+        this.logLoadErrors = logLoadErrors;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaeab096146b1e6aff8fef8b9db0affc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void doVisitTokenInSameGroup(boolean aIsStatic,             boolean aPrevious, String aName, int aLine)", "signatureAfterChange": "     private void doVisitTokenInSameGroup(boolean isStatic,             boolean previous, String name, int line)", "diff": ["-    private void doVisitTokenInSameGroup(boolean aIsStatic,", "-            boolean aPrevious, String aName, int aLine)", "+    private void doVisitTokenInSameGroup(boolean isStatic,", "+            boolean previous, String name, int line)", "-        if (!mOrdered) {", "+        if (!ordered) {", "-            if (compare(mLastImport, aName, mCaseSensitive) > 0) {", "-                log(aLine, \"import.ordering\", aName);", "+            if (compare(lastImport, name, caseSensitive) > 0) {", "+                log(line, \"import.ordering\", name);", "-                (!(mLastImportStatic ^ aIsStatic)", "+                (!(lastImportStatic ^ isStatic)", "-                (compare(mLastImport, aName, mCaseSensitive) > 0))", "+                (compare(lastImport, name, caseSensitive) > 0))", "-                aPrevious;", "+                previous;", "-                log(aLine, \"import.ordering\", aName);", "+                log(line, \"import.ordering\", name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaeb1efe316c13104ac2828c257fab1d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setPublicMemberPattern(String aPattern)", "signatureAfterChange": "     public void setPublicMemberPattern(String aPattern)", "diff": ["-            mPublicMemberRE = Utils.getRE(aPattern);", "-            mPublicMemberPattern = aPattern;", "+            mPublicMemberPattern = Utils.getPattern(aPattern);", "+            mPublicMemberFormat = aPattern;", "-        catch (RESyntaxException e) {", "+        catch (PatternSyntaxException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab3715538ef9ed83e4800cccd5facf6a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/doclets/CheckDocsDoclet.java", "commitBeforeChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "commitAfterChange": "319f297e13e5c175a62489ff555cff7c463d3c7b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static void removeOpeningParagraphTag(final StringBuffer aText)", "signatureAfterChange": "     private static void removeOpeningParagraphTag(final StringBuffer text)", "diff": ["-    private static void removeOpeningParagraphTag(final StringBuffer aText)", "+    private static void removeOpeningParagraphTag(final StringBuffer text)", "-        if ((aText.length() > tagLen)", "-                && aText.substring(0, tagLen).equals(openTag))", "+        if ((text.length() > tagLen)", "+                && text.substring(0, tagLen).equals(openTag))", "-            aText.delete(0, tagLen);", "+            text.delete(0, tagLen);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab3f1b15d8657b76592e8b96ef688036", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck.java", "commitBeforeChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "commitAfterChange": "29027109bf962f47b6a6000fdca69b5679ce4b43", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private URI resolveHeaderFile() throws IOException", "signatureAfterChange": "     private URI resolveHeaderFile() throws IOException", "diff": ["-            final URL url = new URL(mFilename);", "+            final URL url = new URL(filename);", "-            final File file = new File(mFilename);", "+            final File file = new File(filename);", "-                            .getResource(mFilename);", "+                            .getResource(filename);", "-                        throw new FileNotFoundException(mFilename);", "+                        throw new FileNotFoundException(filename);", "-                    throw new FileNotFoundException(mFilename);", "+                    throw new FileNotFoundException(filename);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab604e53d3920b340ce583c5c702ab2b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static boolean isJavadocComment(String aCommentContent)", "signatureAfterChange": "     public static boolean isJavadocComment(String commentContent)", "diff": ["-    public static boolean isJavadocComment(String aCommentContent)", "+    public static boolean isJavadocComment(String commentContent)", "-        if (!aCommentContent.isEmpty()) {", "-            final char docCommentIdentificator = aCommentContent.charAt(0);", "+        if (!commentContent.isEmpty()) {", "+            final char docCommentIdentificator = commentContent.charAt(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab7dc5a41187d699ef04aed75e89f733", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void addPreviousSibling(DetailAST ast)", "signatureAfterChange": "     public void addPreviousSibling(DetailAST ast)", "diff": ["-            final DetailAST previousSibling = getPreviousSibling();", "+            final DetailAST previousSiblingNode = getPreviousSibling();", "-            if (previousSibling != null) {", "-                ast.setPreviousSibling(previousSibling);", "-                previousSibling.setNextSibling(ast);", "+            if (previousSiblingNode != null) {", "+                ast.setPreviousSibling(previousSiblingNode);", "+                previousSiblingNode.setNextSibling(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab8a8c1901bd20308463d53b9327f6e6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheck.java", "commitBeforeChange": "ca39f3af5a1e4fa088e42dde4ab3fc0f8daac723", "commitAfterChange": "0f81504d724c490c86068a22756c693eccf82ebf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setIgnoreDirectoryName(boolean newValue)", "signatureAfterChange": "     public void setIgnoreDirectoryName(boolean aValue)", "diff": ["-    public void setIgnoreDirectoryName(boolean newValue)", "+    public void setIgnoreDirectoryName(boolean aValue)", "-        mIgnoreDirectoryName = newValue;", "+        mIgnoreDirectoryName = aValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab914d743381a64a65a22947a607753d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "ecc852d48b9d26398926b255e3cd68572119c106", "commitAfterChange": "751257987b2ef5f301e2deb3b55302196e5015af", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     void clearMessages()", "signatureAfterChange": "     void reset()", "diff": ["-    /** Clears the list of error messages. Use before processing a file. **/", "-    void clearMessages()", "+    /** Resets the verifier. Use before processing a file. **/", "+    void reset()", "-        mMessages.clear();", "+        mMessages.reset();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab915021639ed87ebd423adb1f17e62c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setMaxErrors(int aMaxErrors)", "signatureAfterChange": "     public void setMaxErrors(int maxErrors)", "diff": ["-    public void setMaxErrors(int aMaxErrors)", "+    public void setMaxErrors(int maxErrors)", "-        mMaxErrors = aMaxErrors;", "+        this.maxErrors = maxErrors;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab9db73189b1de57f6be1e504405ebf0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/AllTests.java", "commitBeforeChange": "8ec36bc770a78f423f6c0d0c37b9efd7981815ed", "commitAfterChange": "5ce6ad4df6ccdd575168b54e712707e9f77bb524", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public static Test suite()", "signatureAfterChange": "      public static Test suite()", "diff": ["-        suite.addTest(new TestSuite(ModifierCheckTest.class));", "+        suite.addTest(new TestSuite(ModifierOrderCheckTest.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab9e0542d115defee3a9503cc9a1c3ff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private DetailAST getNextCurNode(DetailAST aCurNode)", "signatureAfterChange": "     private DetailAST getNextCurNode(DetailAST curNode)", "diff": ["-    private DetailAST getNextCurNode(DetailAST aCurNode)", "+    private DetailAST getNextCurNode(DetailAST curNode)", "-        DetailAST nodeToVisit = aCurNode.getFirstChild();", "-        DetailAST currentNode = aCurNode;", "+        DetailAST nodeToVisit = curNode.getFirstChild();", "+        DetailAST currentNode = curNode;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab9e93c670710f8898e8d132342cd731", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java", "commitBeforeChange": "d0e8581e9ce7dd420b94cb837b4331ec0baa9e4d", "commitAfterChange": "6f51fa7e63d3af55e2a6900d9aadb183ecf0cde8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testDefaultPackage() throws Exception", "signatureAfterChange": "     @Test     public void testGoogleStyleguideConfiguraiton() throws Exception", "diff": ["-    public void testDefaultPackage() throws Exception {", "+    public void testGoogleStyleguideConfiguraiton() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abbcd664e202719c2d001cfcd5cfc1c1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractOptionCheck.java", "commitBeforeChange": "b1f81810e73c2421f5ca6ecf766fd2577a5f20b0", "commitAfterChange": "fb2ec00cc72fa6edc0894e337b8176adcc2eb974", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setOption(String optionStr)", "signatureAfterChange": "     public void setOption(String optionStr)", "diff": ["-            throw new ConversionException(\"unable to parse \" + abstractOption, iae);", "+            throw new ConversionException(\"unable to parse \" + optionStr, iae);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abefc059eb1259ae047992f38e333065", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setTrailingArrayComma(final String aComma)", "signatureAfterChange": "     public void setTrailingArrayComma(final String comma)", "diff": ["-    public void setTrailingArrayComma(final String aComma)", "+    public void setTrailingArrayComma(final String comma)", "-        this.mComma = this.getOption(TrailingArrayComma.class, aComma);", "+        this.comma = this.getOption(TrailingArrayComma.class, comma);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abfc42feee3c5d321cb75b9b1d6ce795", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void addFileset(FileSet fS)", "signatureAfterChange": "     public void addFileset(FileSet fileSet)", "diff": ["-    public void addFileset(FileSet fS) {", "-        fileSets.add(fS);", "+    public void addFileset(FileSet fileSet) {", "+        fileSets.add(fileSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abff975e11f96c180ebfd940466f82f6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private void tagSuppressions()", "signatureAfterChange": "     private void tagSuppressions()", "diff": ["-        mTags.clear();", "+        tags.clear();", "-        if (mCheckCPP) {", "+        if (checkCPP) {", "-        if (mCheckC) {", "-            final Collection<List<TextBlock>> cComments = contents", "+        if (checkC) {", "+            final Collection<List<TextBlock>> cCoonts = contents", "-            for (List<TextBlock> element : cComments) {", "-                tagSuppressions(element);", "+            for (List<TextBlock> eleont : cCoonts) {", "+                tagSuppressions(eleont);", "-        Collections.sort(mTags);", "+        Collections.sort(tags);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac0967b07dbe7075450d10ab38f3323e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected AbstractClassCouplingCheck(int aDefaultMax)", "signatureAfterChange": "     protected AbstractClassCouplingCheck(int defaultMax)", "diff": ["-    protected AbstractClassCouplingCheck(int aDefaultMax)", "+    protected AbstractClassCouplingCheck(int defaultMax)", "-        setMax(aDefaultMax);", "+        setMax(defaultMax);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac131b2d344f463225d029f54caa0a5f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "         MethodCounter(boolean aInInterface)", "signatureAfterChange": "         MethodCounter(boolean inInterface)", "diff": ["-        MethodCounter(boolean aInInterface)", "+        MethodCounter(boolean inInterface)", "-            mInInterface = aInInterface;", "+            this.inInterface = inInterface;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac5777feabc3c3cab69224f6ca80a4be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     protected void processFiltered(File aFile, List<String> aLines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-    protected void processFiltered(File aFile, List<String> aLines)", "+    protected void processFiltered(File file, List<String> lines)", "-        final File dir = aFile.getParentFile();", "-        if (mDirectoriesChecked.contains(dir)) {", "+        final File dir = file.getParentFile();", "+        if (directoriesChecked.contains(dir)) {", "-        mDirectoriesChecked.add(dir);", "+        directoriesChecked.add(dir);", "-        else if (!mAllowLegacy || !packageHtml.exists()) {", "+        else if (!allowLegacy || !packageHtml.exists()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac5cbf2819f7c2946898b045dafb807f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean isSkipIfBlock(DetailAST aLiteralIf)", "signatureAfterChange": "     private boolean isSkipIfBlock(DetailAST literalIf)", "diff": ["-    private boolean isSkipIfBlock(DetailAST aLiteralIf)", "+    private boolean isSkipIfBlock(DetailAST literalIf)", "-        return mAllowSingleLineIf && isSingleLineIf(aLiteralIf);", "+        return allowSingleLineIf && isSingleLineIf(literalIf);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac5fb203e9e41140f89c6247b50c78c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      @Override     public IndentLevel getSuggestedChildLevel(AbstractExpressionHandler child)", "signatureAfterChange": "      @Override     public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child)", "diff": ["-    public IndentLevel getSuggestedChildLevel(AbstractExpressionHandler child) {", "-        return getChildrenExpectedLevel();", "+    public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {", "+        return getChildrenExpectedIndent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac65210d1f27229370374c7a4083f6b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "f010eb47869bae692609de487d6140373e02f3a3", "commitAfterChange": "907a19906f790ce8faea7aa74e12608538dca1b6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected final boolean isClassField(String aName)", "signatureAfterChange": "     protected final boolean isClassField(String aName)", "diff": ["-        final LexicalFrame frame = mFrames.findFrame(aName);", "+        final LexicalFrame frame = findFrame(aName);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac6b1fb439f4f9dc5b4c998a2b98e7df", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/TreeTableModelAdapter.java", "commitBeforeChange": "502404055fbbd4480582e4c3ea6a256b5aeef54d", "commitAfterChange": "b76b91e67a2f41ca67c27fc7a993e346c68a0d29", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public boolean isCellEditable(int row, int column)", "signatureAfterChange": "      @Override     public boolean isCellEditable(int row, int column)", "diff": ["-        return treeTableModel.isCellEditable(nodeForRow(row), column);", "+        return treeTableModel.isCellEditable(column);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac7c72ec7b55e62088f3bf3d1d713fa0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/WhitespaceAfterCheckTest.java", "commitBeforeChange": "a298a50d48358e58be31eaea6b9f0e263f5f046e", "commitAfterChange": "319721560e3608c84146b20f473f46f8848c65a5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          public void testDefault() throws Exception", "signatureAfterChange": "          public void testDefault() throws Exception", "diff": ["-        final Checker c = createChecker(checkConfig);", "+        final Checker c = createChecker(mCheckConfig);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acc74c454f6f10ea96ae0d3a86b03026", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/doclets/TokenTypesDoclet.java", "commitBeforeChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "commitAfterChange": "319f297e13e5c175a62489ff555cff7c463d3c7b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static boolean validOptions(String[][] aOptions,                                        DocErrorReporter aReporter)", "signatureAfterChange": "     public static boolean validOptions(String[][] options,                                        DocErrorReporter reporter)", "diff": ["-    public static boolean validOptions(String[][] aOptions,", "-                                       DocErrorReporter aReporter)", "+    public static boolean validOptions(String[][] options,", "+                                       DocErrorReporter reporter)", "-        for (final String[] opt : aOptions) {", "+        for (final String[] opt : options) {", "-                    aReporter.printError(\"Only one -destfile option allowed.\");", "+                    reporter.printError(\"Only one -destfile option allowed.\");", "-            aReporter.printError(message);", "+            reporter.printError(message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad30942106e513daf35de95440104106", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/MethodNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAst)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAst)", "+    public void visitToken(DetailAST ast)", "-        if (!AnnotationUtility.containsAnnotation(aAst, OVERRIDE)", "-            && !AnnotationUtility.containsAnnotation(aAst, CANONICAL_OVERRIDE))", "+        if (!AnnotationUtility.containsAnnotation(ast, OVERRIDE)", "+            && !AnnotationUtility.containsAnnotation(ast, CANONICAL_OVERRIDE))", "-            super.visitToken(aAst); // Will check the name against the format.", "+            super.visitToken(ast); // Will check the name against the format.", "-        if (!mAllowClassName) {", "+        if (!allowClassName) {", "-                aAst.findFirstToken(TokenTypes.IDENT);", "+                ast.findFirstToken(TokenTypes.IDENT);", "-            final DetailAST classDefOrNew = aAst.getParent().getParent();", "+            final DetailAST classDefOrNew = ast.getParent().getParent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad42cc3879cdeee4df222ca46f2c6c75", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "1e93e408645fb640c3f58405aa04a03ff23c846c", "commitAfterChange": "e508f61a11d9c30f9063b9d19dd9cd10bdfe9e7f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void setMemberModifiers(String modifiers)", "signatureAfterChange": "     public void setMemberModifiers(String modifiers)", "diff": ["-        final List<Integer> modifiersList = new ArrayList<>(modifiers.length());", "-        for (String modifier : modifiers.split(\", \")) {", "-            modifiersList.add(TokenTypes.getTokenId(modifier));", "+        final List<Integer> modifiersList = new ArrayList<>();", "+        for (String modifier : modifiers.split(\",\")) {", "+            modifiersList.add(TokenTypes.getTokenId(modifier.trim()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad4437afb213f013e05e46321e21ab03", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     @Override     public final void setMessageDispatcher(MessageDispatcher aDispatcher)", "signatureAfterChange": "     @Override     public final void setMessageDispatcher(MessageDispatcher dispatcher)", "diff": ["-    public final void setMessageDispatcher(MessageDispatcher aDispatcher)", "+    public final void setMessageDispatcher(MessageDispatcher dispatcher)", "-        mDispatcher = aDispatcher;", "+        this.dispatcher = dispatcher;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad5bb8888723e8c0b64a4a2a495cd6a9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "02ae6023b5b6f66e495393a6f87e4beb4b4ab3d0", "commitAfterChange": "584f7ee1232be96284255540e7249023c327ca8f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void processClass(DetailAST ast)", "signatureAfterChange": "     private void processClass(DetailAST ast)", "diff": ["-        if (!currentClass.isEmpty()) {", "+        if (!currentClassName.isEmpty()) {", "-        currentClass += innerClass;", "+        currentClassName += innerClass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad76f697f8028998167b5318d098c94f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/InterfaceIsTypeCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setAllowMarkerInterfaces(boolean aFlag)", "signatureAfterChange": "     public void setAllowMarkerInterfaces(boolean flag)", "diff": ["-    public void setAllowMarkerInterfaces(boolean aFlag)", "+    public void setAllowMarkerInterfaces(boolean flag)", "-        mAllowMarkerInterfaces = aFlag;", "+        allowMarkerInterfaces = flag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad79cf4c6da7444ba3a4e6a61340749c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/SeparatorWrapCheck.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            log(lineNo, colNo, \"line.previous\", text);", "+            log(lineNo, colNo, LINE_PREVIOUS, text);", "-            log(lineNo, colNo, \"line.new\", text);", "+            log(lineNo, colNo, LINE_NEW, text);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad876a245aa2b92a648b3739c68af90d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "e7547bb7ddccec6737cea118a41864fc349ea1d2", "commitAfterChange": "d220d7c3cc74490c7f2923f2ea85d00133afe98c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     @Test     public void testGoodAnnonOverride() throws Exception", "signatureAfterChange": "     @Test     public void testGoodAnnotationOverride() throws Exception", "diff": ["-    public void testGoodAnnonOverride() throws Exception {", "+    public void testGoodAnnotationOverride() throws Exception {", "-        verify(checkConfig, getPath(\"annotation\" + File.separator + \"GoodAnnonOverride.java\"), expected);", "+        verify(checkConfig, getPath(\"annotation\" + File.separator + \"GoodAnnotationOverride.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad940b8f3c3c66f2a2fe2622e967da82", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/indentation/InputInvalidAssignIndent.java", "commitBeforeChange": "9a15d83aa778a856b091fdddf6b1807b239d3db8", "commitAfterChange": "be3f6d793cf12cba115d7a1aafd6d1affe0a4338", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     void foo(String[] args)", "signatureAfterChange": "     void foo(String[] args)", "diff": ["-          getLineNo();", "+          getLine();", "-          getLineNo();", "+          getLine();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ada2c49f38fb06a72f2732a29c623110", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "546f336e25b26d072f96e2cda139b885858ed5b0", "commitAfterChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private AuditListener[] getListeners() throws ClassNotFoundException,             InstantiationException, IllegalAccessException, IOException", "signatureAfterChange": "     private AuditListener[] getListeners() throws ClassNotFoundException,             InstantiationException, IllegalAccessException, IOException", "diff": ["-                final Formatter f = formatters.get(i);", "-                listeners[i] = f.createListener(this);", "+                final Formatter formatter = formatters.get(i);", "+                listeners[i] = formatter.createListener(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adc0f3051d835e3bd6e36749ba0784ee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/EqualsHashCodeCheck.java", "commitBeforeChange": "40496d0f8c01bf1f9718e6925b76f13db5b2ae3d", "commitAfterChange": "675c037c85af8347d5b95b0b45f166b8599a9b27", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void finishTree()", "signatureAfterChange": "     public void finishTree()", "diff": ["+     */", "-        Set equalsDefs = objBlockEquals.keySet();", "+        final Set equalsDefs = mObjBlockEquals.keySet();", "-            if (!objBlockWithHashCode.contains(objBlock)) {", "-                DetailAST equalsAST = (DetailAST) objBlockEquals.get(objBlock);", "+            if (!mObjBlockWithHashCode.contains(objBlock)) {", "+                DetailAST equalsAST = (DetailAST) mObjBlockEquals.get(objBlock);", "-        objBlockEquals.clear();", "-        objBlockWithHashCode.clear();", "+        mObjBlockEquals.clear();", "+        mObjBlockWithHashCode.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "addb8a62407896e0b57771c99019c0fd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "bf529ef600fa9ef2034d0412c198b2121f2b94f2", "commitAfterChange": "ce196814d857a4244a80c51d5151cc35e90b6749", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static String encode(String value)", "signatureAfterChange": "     public static String encode(String value)", "diff": ["-                    sb.append(encodeAmpersend(value, i));", "+                    sb.append(encodeAmpersand(value, i));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae0710a0e3216863b8931b5ea57ed6db", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "4f2f342589c710d31ad0ac93b56755c41dd73f73", "commitAfterChange": "865ba5284aace7651f93dc81b0c196d1316a9fdd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean checkLoop(final DetailAST aAST)", "signatureAfterChange": "     private boolean checkLoop(final DetailAST aAST)", "diff": ["-            final DetailAST lparen = aAST.findFirstToken(TokenTypes.LPAREN);", "+            final DetailAST lparen = aAST.findFirstToken(TokenTypes.DO_WHILE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae0a13583d1d60423969073685f13a35", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "0b9d1c616f5cbb03e4bbad644c17d2ae892759fc", "commitAfterChange": "04b0bd64047e8eee752405a01de145b67f5fb845", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void walk(DetailAST aAST, FileContents aContents)", "signatureAfterChange": "     private void walk(DetailAST aAST, FileContents aContents)", "diff": ["-        notifyBegin(aContents);", "+        notifyBegin(aAST, aContents);", "-        notifyEnd();", "+        notifyEnd(aAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae2353edebacb8edcd5ccf118c165ac7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "443e534a3c98c0b30f24647da724fe918f17a006", "commitAfterChange": "66d73fe6189267fee3423e2e8d7fc2d68599a43f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void openAst(DetailAST parseTree, final Component parent)", "signatureAfterChange": "      public void openAst(DetailAST parseTree, final Component parent)", "diff": ["-        getLines2position().clear();", "+        getLinesToPosition().clear();", "-        getLines2position().add(0);", "+        getLinesToPosition().add(0);", "-        if (!jTextArea.getText().isEmpty()) {", "-            jTextArea.replaceRange(\"\", 0, jTextArea.getText().length());", "+        if (!textArea.getText().isEmpty()) {", "+            textArea.replaceRange(\"\", 0, textArea.getText().length());", "-        jTextArea.moveCaretPosition(0);", "+        textArea.moveCaretPosition(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae24e183ffcec6f8a371823869a803ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private String getStrippedFileName(final String aFileName)", "signatureAfterChange": "     private String getStrippedFileName(final String fileName)", "diff": ["-    private String getStrippedFileName(final String aFileName)", "+    private String getStrippedFileName(final String fileName)", "-        return Utils.getStrippedFileName(mBasedir, aFileName);", "+        return Utils.getStrippedFileName(basedir, fileName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae37c2756fa0c5650552cf86924225be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void realExecute()", "signatureAfterChange": "     private void realExecute()", "diff": ["-            log(\"To locate the files took \" + (endTime - startTime) + \" ms.\",", "+            log(\"To locate the files took \" + (endTime - startTime) + TIME_SUFFIX,", "-            log(\"To process the files took \" + (endTime - startTime) + \" ms.\",", "+            log(\"To process the files took \" + (endTime - startTime) + TIME_SUFFIX,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae3fcf75faa17ba6a95ea1536e986738", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected final void logError(DetailAST ast, String subtypeName,                                   int actualLevel)", "signatureAfterChange": "     protected final void logError(DetailAST ast, String subtypeName,                                   int actualIndent)", "diff": ["-                                  int actualLevel) {", "-        logError(ast, subtypeName, actualLevel, getLevel());", "+                                  int actualIndent) {", "+        logError(ast, subtypeName, actualIndent, getIndent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae5a0c50e0afc726967784859a78fd38", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/CrossLanguageRegexpHeaderCheck.java", "commitBeforeChange": "fc8a5ae78cffc8f6d5951a72fc722c52dedc1d04", "commitAfterChange": "bf16d371dab210594755d04afc4697269ed088c0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Override     protected void processFiltered(File aFile, List<String> aLines)", "signatureAfterChange": "      @Override     protected void processFiltered(File aFile, List<String> aLines)", "diff": ["-        mRegexpHeaderChecker.checkLines(", "-            aLines.toArray(new String[aLines.size()]));", "+        mRegexpHeaderChecker.checkLines(aLines);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae6de846fe024fb58f4e40a64d371951", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/UnnecessaryParenthesesCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private String chopString(String aString)", "signatureAfterChange": "     private String chopString(String string)", "diff": ["-    private String chopString(String aString)", "+    private String chopString(String string)", "-        if (aString.length() > MAX_QUOTED_LENGTH) {", "-            return aString.substring(0, MAX_QUOTED_LENGTH) + \"...\\\"\";", "+        if (string.length() > MAX_QUOTED_LENGTH) {", "+            return string.substring(0, MAX_QUOTED_LENGTH) + \"...\\\"\";", "-        return aString;", "+        return string;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae7a48cbbe1ccb1144eef9a24a78bd11", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b14f255427c0b12054de2873fe300b4f4e691bd4", "commitAfterChange": "cc7aeaec906dc3c864477e3050510009b2a946ee", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void processVariable(DetailAST ast)", "signatureAfterChange": "     private void processVariable(DetailAST ast)", "diff": ["-            if (isStaticOrOnstanceField(ast, name)", "+            if (isStaticOrInstanceField(ast, name)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae7d24b3de2021a09810e87d528c17d0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/InnerTypeLastCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-    public void leaveToken(DetailAST aAST)", "+    public void leaveToken(DetailAST ast)", "-        if (null == aAST.getParent()) {", "-            mRootClass = true;", "+        if (null == ast.getParent()) {", "+            rootClass = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae85656cb5cdcaf335f3272cd69f4d3b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public final void setSuppressLoadErrors(boolean aSuppressLoadErrors)", "signatureAfterChange": "     public final void setSuppressLoadErrors(boolean suppressLoadErrors)", "diff": ["-    public final void setSuppressLoadErrors(boolean aSuppressLoadErrors)", "+    public final void setSuppressLoadErrors(boolean suppressLoadErrors)", "-        mSuppressLoadErrors = aSuppressLoadErrors;", "+        this.suppressLoadErrors = suppressLoadErrors;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aea276100a556e396002ae110207149a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public void setLocaleLanguage(String aLocaleLanguage)", "signatureAfterChange": "     public void setLocaleLanguage(String localeLanguage)", "diff": ["-    /** @param aLocaleLanguage the language to report messages  **/", "-    public void setLocaleLanguage(String aLocaleLanguage)", "+    /** @param localeLanguage the language to report messages  **/", "+    public void setLocaleLanguage(String localeLanguage)", "-        mLocaleLanguage = aLocaleLanguage;", "+        this.localeLanguage = localeLanguage;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aeb6f1d1b4457ddd5df142cd0130142f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "d80e678fa0939d845583a3acc7501859254c5f2c", "commitAfterChange": "18570b7a08376b5b823bd67bfd93b79e0c4fbb1b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public Class<?> safeLoad(String name)         throws ClassNotFoundException", "signatureAfterChange": "     public Class<?> safeLoad(String name)         throws ClassNotFoundException, NoClassDefFoundError", "diff": ["-        throws ClassNotFoundException {", "+        throws ClassNotFoundException, NoClassDefFoundError {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aebe6755afc4baccda952d5b7d3cdbdd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-    public void beginTree(DetailAST aRootAST)", "+    public void beginTree(DetailAST rootAST)", "-        mObjBlockEquals.clear();", "-        mObjBlockWithHashCode.clear();", "+        objBlockEquals.clear();", "+        objBlockWithHashCode.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aec5c3a921be1dec0546ba72fa6428c4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     protected void processFiltered(File aFile, List<String> aLines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-    protected void processFiltered(File aFile, List<String> aLines)", "+    protected void processFiltered(File file, List<String> lines)", "-        mPropertyFiles.add(aFile);", "+        propertyFiles.add(file);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aec9d419989f5faa51c2d5d9c6946c8f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static PkgControl load(final InputSource source,         final URI uri) throws CheckstyleException", "signatureAfterChange": "     private static PkgControl load(final InputSource source,         final URI uri) throws CheckstyleException", "diff": ["-        catch (final ParserConfigurationException | SAXException e) {", "+        catch (final ParserConfigurationException | SAXException ex) {", "-                    + \" - \" + e.getMessage(), e);", "+                    + \" - \" + ex.getMessage(), ex);", "-        catch (final IOException e) {", "-            throw new CheckstyleException(\"unable to read \" + uri, e);", "+        catch (final IOException ex) {", "+            throw new CheckstyleException(\"unable to read \" + uri, ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aedba4884dfcc32ed380e8835f2fc222", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "c4a7d06206d86f52665eae47af4db28dc59d93a3", "commitAfterChange": "c2ce485b481ba4bd26eb3ba2e3cc6c1850539e0c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void testAnnotatins() throws Exception", "signatureAfterChange": "      @Test     public void testAnnotations() throws Exception", "diff": ["-    public void testAnnotatins() throws Exception {", "+    public void testAnnotations() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af282ef352aa20e2860bd363afcdf4b1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractLoader.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public InputSource resolveEntity(String publicId, String systemId)         throws SAXException, IOException", "signatureAfterChange": "      @Override     public InputSource resolveEntity(String publicId, String systemId)         throws SAXException, IOException", "diff": ["-            final InputStream dtdIS =", "+            final InputStream dtdIs =", "-            return new InputSource(dtdIS);", "+            return new InputSource(dtdIs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af34d10e0d9a1f0a6a26690e7a9208f7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "efac6bf023bc277e94d7436ae95f9be8836a2508", "commitAfterChange": "afd9a5c3e56d942eaa7ff6393a2ecb5e9ec2a231", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void registerCheck(Check check)         throws CheckstyleException", "signatureAfterChange": "     private void registerCheck(Check check)         throws CheckstyleException", "diff": ["+        validateDefaultTokens(check);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af4e7b03b153b3754cd48845808786b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "commitAfterChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void logChildError(int line,                                int actualLevel,                                IndentLevel expectedLevel)", "signatureAfterChange": "     private void logChildError(int line,                                int actualLevel,                                IndentLevel expectedLevel)", "diff": ["-        String messageKey = \"indentation.child.error\";", "+        String messageKey = MSG_CHILD_ERROR;", "-            messageKey = \"indentation.child.error.multi\";", "+            messageKey = MSG_CHILD_ERROR_MULTI;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af67c924f397db7839b442e610a5d6d3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public final String getBasedir()", "signatureAfterChange": "     public final String getBasedir()", "diff": ["-        return mBasedir;", "+        return basedir;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af6cac565632c43c9d3ba1965f107737", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "8f86620e72849120dc5fba45c3cc54ed38e24447", "commitAfterChange": "d345f3beb27f3d8e3fde06f7e2c7612ddf691b95", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "         public String getClassname()", "signatureAfterChange": "         public String getClassname()", "diff": ["-        /** @return the classname */", "+        /** @return the class name */", "-            return classname;", "+            return className;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afbb9a20a791d9d00fd7d1ae737a74e5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Override     public Object createModule(String name)         throws CheckstyleException", "signatureAfterChange": "     @Override     public Object createModule(String name)         throws CheckstyleException", "diff": ["-                    \"Unable to instantiate \" + name, ex2);", "+                    UNABLE_TO_INSTANTIATE_EXCEPTION_MESSAGE + name, ex2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afd6a78b15409085ea6f5da60a8b5df6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "         public void setTofile(File to)", "signatureAfterChange": "         public void setTofile(File destination)", "diff": ["-        public void setTofile(File to) {", "-            toFile = to;", "+        public void setTofile(File destination) {", "+            toFile = destination;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afe9c61ac1e55f0c1e423430679d171c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java", "commitBeforeChange": "02aaa1b7f653e25c34ef7f186fa1d940079384e8", "commitAfterChange": "52ac2776d7f128ff812b73b54dcc12210661f98b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic String getFilePath(String aFileName)", "signatureAfterChange": "  \tpublic String getFilePath(String aFileName)", "diff": ["-\t\tString absoluteRootPath = mROOT.getAbsolutePath();", "+\t\tString absoluteRootPath = ROOT.getAbsolutePath();", "-\t\tfor (File file : mFiles) {", "+\t\tfor (File file : files) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afffcb5b715fe34030750245d17c221c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java", "commitBeforeChange": "896af516b0028ff2a26cc1888dfaba620d3fe9e0", "commitAfterChange": "55c92042eb6986e905529de841d3d1c9a7b2b6dd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private static boolean isCstyleMultiDimensionalArrayDeclaration(DetailAST arrayDeclaration)", "signatureAfterChange": "     private static boolean isCStyleMultiDimensionalArrayDeclaration(DetailAST arrayDeclaration)", "diff": ["-    private static boolean isCstyleMultiDimensionalArrayDeclaration(DetailAST arrayDeclaration) {", "+    private static boolean isCStyleMultiDimensionalArrayDeclaration(DetailAST arrayDeclaration) {", "-                result = isCstyleArrayDeclaration(parentArrayDeclaration);", "+                result = isCStyleArrayDeclaration(parentArrayDeclaration);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b00127a5b73268b4457af9f3e8ef6341", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void logIOException(IOException aEx, File aFile)", "signatureAfterChange": "     private void logIOException(IOException ex, File file)", "diff": ["-    private void logIOException(IOException aEx, File aFile)", "+    private void logIOException(IOException ex, File file)", "-        if (!(aEx instanceof FileNotFoundException)) {", "-            args = new String[] {aEx.getMessage()};", "+        if (!(ex instanceof FileNotFoundException)) {", "+            args = new String[] {ex.getMessage()};", "-        getMessageDispatcher().fireErrors(aFile.getPath(), messages);", "-        Utils.getExceptionLogger().debug(\"IOException occured.\", aEx);", "+        getMessageDispatcher().fireErrors(file.getPath(), messages);", "+        Utils.getExceptionLogger().debug(\"IOException occured.\", ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b01237febf25ba211c6118b473c07908", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Class<?> safeLoad(String aName)         throws ClassNotFoundException", "signatureAfterChange": "     public Class<?> safeLoad(String name)         throws ClassNotFoundException", "diff": ["-    public Class<?> safeLoad(String aName)", "+    public Class<?> safeLoad(String name)", "-        return Class.forName(aName, false, mLoader);", "+        return Class.forName(name, false, loader);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b01b0f123afa182039a5253ba3e2d1eb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "2cf54ade2182e29c413f23e2235a896247d7a2ad", "commitAfterChange": "d282053d9ce02c13c779decfd079a8305086f752", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     @Test     public void testBadAnnotationOverrideJ5Compat() throws Exception", "signatureAfterChange": "     @Test     public void testBadAnnotationOverrideJ5Compatible() throws Exception", "diff": ["-    public void testBadAnnotationOverrideJ5Compat() throws Exception {", "+    public void testBadAnnotationOverrideJ5Compatible() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b02fa3d2d5033cf9c576f1919e10af58", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/HtmlTag.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public boolean isIncompleteTag()", "signatureAfterChange": "     public boolean isIncompleteTag()", "diff": ["-        return mIncomplete;", "+        return incomplete;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b031860ce8017e225e807a38f5484d95", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java", "commitBeforeChange": "3c7c3cbe88a2bec0962702305db4f2b05117501c", "commitAfterChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "         void reportNonPrivateCtor()", "signatureAfterChange": "         void reportNonPrivateCtor()", "diff": ["-            hasNonPrivateCtor = true;", "+            withNonPrivateCtor = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0468c52c402811e30846c8ef7cceeea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheck.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected void processFiltered(File aFile, List<String> aLines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-    protected void processFiltered(File aFile, List<String> aLines)", "+    protected void processFiltered(File file, List<String> lines)", "-        mDetector.processLines(aLines);", "+        detector.processLines(lines);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b04a599fa5a8f652640d20f4ec6d1014", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void setIllegalClassNames(String[] aClassNames)", "signatureAfterChange": "     public void setIllegalClassNames(String[] classNames)", "diff": ["-    public void setIllegalClassNames(String[] aClassNames)", "+    public void setIllegalClassNames(String[] classNames)", "-        mIllegalClassNames.clear();", "-        for (String name : aClassNames) {", "-            mIllegalClassNames.add(name);", "+        illegalClassNames.clear();", "+        for (String name : classNames) {", "+            illegalClassNames.add(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b05b4859f42e1af921e45ccf9271dfb5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testConfigure_NoSuchAttribute2()", "signatureAfterChange": "      @Test     public void testConfigureNoSuchAttribute2()", "diff": ["-    public void testConfigure_NoSuchAttribute2() {", "+    public void testConfigureNoSuchAttribute2() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b08d795bec10a8df00bacdf268c9154f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "dc92fd1b89e33067adc5b2bf51df76b8d488b0bf", "commitAfterChange": "4018efa9fefa66e599369ace1cb189b02ae64fa7", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 101, "signatureBeforeChange": "     private CatchBlockOption extractCatchBlockOption(String aFrom)         throws BuildException", "signatureAfterChange": "     private BlockOption extractBlockOption(String aFrom)         throws BuildException", "diff": ["-    private CatchBlockOption extractCatchBlockOption(String aFrom)", "+    private BlockOption extractBlockOption(String aFrom)", "-        final CatchBlockOption opt = CatchBlockOption.decode(aFrom);", "+        final BlockOption opt = BlockOption.decode(aFrom);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b090686e42df0a3ab5f506fa7d3f8783", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheckTest.java", "commitBeforeChange": "05d7d8d6c90d09ee77db1da426770d4676fc2985", "commitAfterChange": "18172eab38e9443539633d6ee3a30818c10c7bb1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testCast() throws Exception", "signatureAfterChange": "      @Test     public void testCast() throws Exception", "diff": ["-            \"88:21: \" + getCheckMessage(WS_NOT_FOLLOWED, \"cast\"),", "+            \"88:21: \" + getCheckMessage(WS_TYPECAST),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0ca021e19c0e7b431c591b38f7c4e24", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheckTest.java", "commitBeforeChange": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4", "commitAfterChange": "c3674faad8a38656e910750fb22a7eef714fb8a7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAllowEscapesForControlCharacterst() throws Exception", "signatureAfterChange": "      @Test     public void testAllowEscapesForControlCharacterSet() throws Exception", "diff": ["-    public void testAllowEscapesForControlCharacterst() throws Exception {", "+    public void testAllowEscapesForControlCharacterSet() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b110b55b3727710c581278fade3d0fe3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setPeriod(String aPeriod)", "signatureAfterChange": "     public void setPeriod(String period)", "diff": ["-    public void setPeriod(String aPeriod)", "+    public void setPeriod(String period)", "-        mPeriod = aPeriod;", "+        this.period = period;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b116f86ce9998a06e95d6851ddd64c5d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void addProperty(Property aProperty)", "signatureAfterChange": "     public void addProperty(Property property)", "diff": ["-    public void addProperty(Property aProperty)", "+    public void addProperty(Property property)", "-        mOverrideProps.add(aProperty);", "+        overrideProps.add(property);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b11867bd914f035eb71d5762dc33150d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setFile(String aFileName)         throws CheckstyleException", "signatureAfterChange": "     public void setFile(String fileName)         throws CheckstyleException", "diff": ["-    public void setFile(String aFileName)", "+    public void setFile(String fileName)", "-        mFilters = SuppressionsLoader.loadSuppressions(aFileName);", "+        filters = SuppressionsLoader.loadSuppressions(fileName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b11c908d911c0846bbd7c2e7c7dac2af", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PackageObjectFactoryTest.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testMakeObectFromList()         throws CheckstyleException", "signatureAfterChange": "      @Test     public void testMakeObectFromList()         throws CheckstyleException", "diff": ["-        mFactory.addPackage(\"com.\");", "+        factory.addPackage(\"com.\");", "-                (Checker) mFactory.createModule(", "+                (Checker) factory.createModule("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b14a0cffcb04e969932e115d5cbc7047", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void setConfigURL(URL aURL)", "signatureAfterChange": "     public void setConfigURL(URL url)", "diff": ["-    /** @param aURL the URL of the configuration to use */", "-    public void setConfigURL(URL aURL)", "+    /** @param url the URL of the configuration to use */", "+    public void setConfigURL(URL url)", "-        setConfigLocation(aURL.toExternalForm());", "+        setConfigLocation(url.toExternalForm());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b14dd33dcb2691029c9d50c86c54efd9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private void tagCoontLine(String text, int line, int column)", "signatureAfterChange": "     private void tagCommentLine(String text, int line, int column)", "diff": ["-    private void tagCoontLine(String text, int line, int column)", "+    private void tagCommentLine(String text, int line, int column)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1591986c4e310720449e1caf4f4c8f1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public int hashCode()", "signatureAfterChange": "      @Override     public int hashCode()", "diff": ["-        result = mLineNo;", "-        result = HASH_MULT * result + mColNo;", "-        result = HASH_MULT * result + mKey.hashCode();", "-        for (final Object element : mArgs) {", "+        result = lineNo;", "+        result = HASH_MULT * result + colNo;", "+        result = HASH_MULT * result + key.hashCode();", "+        for (final Object element : args) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b192e0c7f4ca5d0afa0bc501f96bc2da", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/IntRangeFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public int hashCode()", "signatureAfterChange": "      @Override     public int hashCode()", "diff": ["-        return HASH_MULT * mLowerBound.intValue() + mUpperBound.intValue();", "+        return HASH_MULT * lowerBound.intValue() + upperBound.intValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1cf835322a6b97ea8d1e84d8e32dcd3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "3c7c3cbe88a2bec0962702305db4f2b05117501c", "commitAfterChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public void setCheckEmptyJavadoc(boolean flag)", "signatureAfterChange": "     public void setCheckEmptyJavadoc(boolean flag)", "diff": ["-        checkEmptyJavadoc = flag;", "+        checkingEmptyJavadoc = flag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1fcc657db1e6eb5c0c2b36e46da43c7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public final void setIgnoreOccurrenceContext(String[] aStrRep)", "signatureAfterChange": "     public final void setIgnoreOccurrenceContext(String[] strRep)", "diff": ["-    public final void setIgnoreOccurrenceContext(String[] aStrRep)", "+    public final void setIgnoreOccurrenceContext(String[] strRep)", "-        mIgnoreOccurrenceContext.clear();", "-        for (final String s : aStrRep) {", "+        ignoreOccurrenceContext.clear();", "+        for (final String s : strRep) {", "-            mIgnoreOccurrenceContext.set(type);", "+            ignoreOccurrenceContext.set(type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b249143084b71407b0d474d4414ec90c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setMaxLineLength(int aMaxLineLength)", "signatureAfterChange": "     public void setMaxLineLength(int maxLineLength)", "diff": ["-    public void setMaxLineLength(int aMaxLineLength)", "+    public void setMaxLineLength(int maxLineLength)", "-        mMaxLineLength = aMaxLineLength;", "+        this.maxLineLength = maxLineLength;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b24b1b07a9520fac90878fee5e089020", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private boolean inIgnoreList(DetailAST ast)", "signatureAfterChange": "     private boolean isInIgnoreList(DetailAST ast)", "diff": ["-    private boolean inIgnoreList(DetailAST ast) {", "+    private boolean isInIgnoreList(DetailAST ast) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b24cfb8929a0e0b6d76cb73eabfef6f1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-            log(1, \"header.missing\");", "+            log(1, MSG_HEADER_MISSING);", "-                    log(i + 1, \"header.mismatch\", getHeaderLines().get(", "+                    log(i + 1, MSG_HEADER_MISMATCH, getHeaderLines().get(", "-                        log(1, \"header.missing\");", "+                        log(1, MSG_HEADER_MISSING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b280d95068fd10af2f9e74a423f02ad8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "417a132e0e7aa28d7649b930f4336d721a448210", "commitAfterChange": "c4288bb3bca4b5e5871a0243a19b8df9d9fd6124", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public boolean hasIntersectionWithComment(             int aStartLineNo, int aStartColNo, int aEndLineNo, int aEndColNo)", "signatureAfterChange": "     public boolean hasIntersectionWithComment(             int aStartLineNo, int aStartColNo, int aEndLineNo, int aEndColNo)", "diff": ["-                Comment comment = (Comment) rowIterator.next();", "+                TextBlock comment = (TextBlock) rowIterator.next();", "-            Comment comment = (Comment) mCPlusPlusComments.get(", "-                new Integer(lineNumber));", "+            TextBlock comment =", "+                (TextBlock) mCPlusPlusComments.get(new Integer(lineNumber));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b31b1ed7c0ba42c3aa50b37b6f8eaf11", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractAccessControlNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public boolean getApplyToProtected()", "signatureAfterChange": "     public boolean getApplyToProtected()", "diff": ["-        return mApplyToProtected;", "+        return applyToProtected;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b32e515cf05c190dafcff5ee30246ea6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractAccessControlNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setApplyToProtected(boolean aApplyTo)", "signatureAfterChange": "     public void setApplyToProtected(boolean applyTo)", "diff": ["-    public void setApplyToProtected(boolean aApplyTo)", "+    public void setApplyToProtected(boolean applyTo)", "-        mApplyToProtected = aApplyTo;", "+        applyToProtected = applyTo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b37c5f351d3a74142921ef5657be259a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-    public void beginTree(DetailAST aRootAST)", "+    public void beginTree(DetailAST rootAST)", "-        mCounters = new FastStack<Counter>();", "+        counters = new FastStack<Counter>();", "-        mCounters.push(new Counter());", "+        counters.push(new Counter());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b37cdf9dca16ba18055e893e1df0a529", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "commitAfterChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected final void logError(DetailAST ast, String subtypeName,                                   int actualLevel, IndentLevel expectedLevel)", "signatureAfterChange": "     protected final void logError(DetailAST ast, String subtypeName,                                   int actualLevel, IndentLevel expectedLevel)", "diff": ["-        String messageKey = \"indentation.error\";", "+        String messageKey = MSG_ERROR;", "-            messageKey = \"indentation.error.multi\";", "+            messageKey = MSG_ERROR_MULTI;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b37fc59a453210f213562e330b6cd135", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "c09131defe36dde56b2d9767d1953d93e20bd200", "commitAfterChange": "9df81b38a8207ee85a55644b2f7a4c8828433f4b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            else if (ScopeUtils.isOuterMostType(ast)) {", "-                // don't check author/version for inner classes", "+            else {", "-                checkTag(lineNo, tags, JavadocTagInfo.AUTHOR.getName(),", "-                         authorFormatPattern, authorFormat);", "-                checkTag(lineNo, tags, JavadocTagInfo.VERSION.getName(),", "-                         versionFormatPattern, versionFormat);", "+                if (ScopeUtils.isOuterMostType(ast)) {", "+                    // don't check author/version for inner classes", "+                    checkTag(lineNo, tags, JavadocTagInfo.AUTHOR.getName(),", "+                            authorFormatPattern, authorFormat);", "+                    checkTag(lineNo, tags, JavadocTagInfo.VERSION.getName(),", "+                            versionFormatPattern, versionFormat);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b381af5e5a823c55864d36890d0a67cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void checkParagraphTag(DetailNode tag)", "signatureAfterChange": "     private void checkParagraphTag(DetailNode tag)", "diff": ["-            log(tag.getLineNumber(), \"javadoc.paragraph.redundant.paragraph\");", "+            log(tag.getLineNumber(), MSG_REDUNDANT_PARAGRAPH);", "-            log(tag.getLineNumber(), \"javadoc.paragraph.line.before\");", "+            log(tag.getLineNumber(), MSG_LINE_BEFORE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b391c3cc14cf2cb65970cf5f7b2e31ee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     public final void visitToken(DetailAST blockCommentAst)", "signatureAfterChange": "      @Override     public final void visitToken(DetailAST blockCommentNode)", "diff": ["-    public final void visitToken(DetailAST blockCommentAst) {", "-        if (JavadocUtils.isJavadocComment(blockCommentAst)) {", "-            this.blockCommentAst = blockCommentAst;", "+    public final void visitToken(DetailAST blockCommentNode) {", "+        if (JavadocUtils.isJavadocComment(blockCommentNode)) {", "+            this.blockCommentAst = blockCommentNode;", "-            final String treeCacheKey = blockCommentAst.getLineNo() + \":\"", "-                    + blockCommentAst.getColumnNo();", "+            final String treeCacheKey = blockCommentNode.getLineNo() + \":\"", "+                    + blockCommentNode.getColumnNo();", "-                ps = parseJavadocAsDetailNode(blockCommentAst);", "+                ps = parseJavadocAsDetailNode(blockCommentNode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3a338a94ae3f693dac433f3b7d198dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheck.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-                        \"block.noStmt\",", "+                            MSG_KEY_BLOCK_NO_STMT,", "-                    \"block.empty\",", "+                        MSG_KEY_BLOCK_EMPTY,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3a8c6503032c5494b84b288f8eb53ee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java", "commitBeforeChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "commitAfterChange": "cb5a59fc6baf5de204e3cc99be6ba9865e44350a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void startElement(String namespaceURI,                              String localName,                              String qName,                              Attributes atts)         throws SAXException", "signatureAfterChange": "      @Override     public void startElement(String namespaceURI,                              String localName,                              String qName,                              Attributes attributes)         throws SAXException", "diff": ["-                             Attributes atts)", "+                             Attributes attributes)", "-            final String checks = atts.getValue(\"checks\");", "-            final String modId = atts.getValue(\"id\");", "+            final String checks = attributes.getValue(\"checks\");", "+            final String modId = attributes.getValue(\"id\");", "-                final String files = atts.getValue(\"files\");", "+                final String files = attributes.getValue(\"files\");", "-            final String lines = atts.getValue(\"lines\");", "+            final String lines = attributes.getValue(\"lines\");", "-            final String columns = atts.getValue(\"columns\");", "+            final String columns = attributes.getValue(\"columns\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4033368effe0c1f30bf0916d4d21e6d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     void addPackage(String aPackageName)", "signatureAfterChange": "     void addPackage(String packageName)", "diff": ["-    void addPackage(String aPackageName)", "+    void addPackage(String packageName)", "-        mPackages.add(aPackageName);", "+        packages.add(packageName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b40930366bf65616e6b368eacf9b5982", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenTextCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            String message = getMessage();", "-            if (message.isEmpty()) {", "-                message = MSG_KEY;", "+            String customMessage = getMessage();", "+            if (customMessage.isEmpty()) {", "+                customMessage = MSG_KEY;", "-                message,", "+                customMessage,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b412fc632b80ba27f3748add28fe423b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TrailingCommentCheck.java", "commitBeforeChange": "7d513f08c27c741105f712dc882fd4c3553f71e7", "commitAfterChange": "8a3f5bf6d5389b9e175c9c769992faece6d76ada", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-            String lineBefore = \"\";", "-            TextBlock comment = null;", "+            String lineBefore;", "+            TextBlock comment;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b426c804667e90165d1960d02071b2de", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java", "commitBeforeChange": "66325cbd72882454193765322efa716537ce9c93", "commitAfterChange": "33f75977205625bc5f9620a2c63e16a11f9663a5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static ModuleFactory loadModuleFactory(String aFilename)         throws CheckstyleException", "signatureAfterChange": "     public static ModuleFactory loadModuleFactory(String aFilename)         throws CheckstyleException", "diff": ["-        return loadModuleFactory(source, aFilename,", "-                                 PackageNamesLoader.class.getClassLoader());", "+        return loadModuleFactory(source, aFilename);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4391567c809554e0a0093ab0e07eda1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/MethodCountCheck.java", "commitBeforeChange": "a6e4d310c0e38d73e7816a5fb57e66fc221d79ec", "commitAfterChange": "5c6e03a868c0f756ccd3bb9b796febbbbf25bd4e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "         MethodCounter(boolean inInterface)", "signatureAfterChange": "         MethodCounter(boolean aInInterface)", "diff": ["-        MethodCounter(boolean inInterface) {", "-            mInInterface = inInterface;", "+        MethodCounter(boolean aInInterface)", "+        {", "+            mInInterface = aInInterface;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4668168c77cc22fe944254950d0f4ae", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "ed12c276a8adde2ce44b9834b413560476110f0e", "commitAfterChange": "66d6361c27586d58ba478b0223e60c6f1c5aa7b4", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "         public final Class getClazz()", "signatureAfterChange": "         public final Class getClazz()", "diff": ["-                         tryLoadClass(getName(), mCurrentClass));", "+                         tryLoadClass(getName(), mSurroundingClass));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b47bed55f22c79e53b447bda58e5b795", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private ResourceBundle getBundle(String bundleName)", "signatureAfterChange": "     private ResourceBundle getBundle(String bundleName)", "diff": ["-                        sourceClass.getClassLoader(), new UTF8Control());", "+                        sourceClass.getClassLoader(), new Utf8Control());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b48633983275b25e17ea4ab9909af591", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static DetailAST checkOrderSuggestedByJLS(List<DetailAST> modifiers)", "signatureAfterChange": "     private static DetailAST checkOrderSuggestedByJls(List<DetailAST> modifiers)", "diff": ["-    private static DetailAST checkOrderSuggestedByJLS(List<DetailAST> modifiers) {", "+    private static DetailAST checkOrderSuggestedByJls(List<DetailAST> modifiers) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b493c32204cd57d1bd508478ca7fa1ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private boolean ignoreNumberOfParameters(DetailAST ast)", "signatureAfterChange": "     private boolean shouldIgnoreNumberOfParameters(DetailAST ast)", "diff": ["-    private boolean ignoreNumberOfParameters(DetailAST ast) {", "+    private boolean shouldIgnoreNumberOfParameters(DetailAST ast) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4aaf01fe3a4fddf6b10aaac645b8099", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java", "commitBeforeChange": "553e36c2ea38f4f3f30f0e06163f2e1e1dbdd788", "commitAfterChange": "755eda4d684e71ea18bed69646e07140310b67fc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            checkTag(lineNo, cmt.getText(), tag, tagRE, tagFormatRE,", "-                tagFormat);", "+            checkTag(lineNo, cmt.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4c51ab7c6de6267f673c67470be647c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected final String getCurrentClassName()", "signatureAfterChange": "     protected final String getCurrentClassName()", "diff": ["-        return mCurrentClass;", "+        return currentClass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4d2f14c4ecf4a046b0da9aaafe6846e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          public void setExceptionalMethod(String val)", "signatureAfterChange": "          public void setExceptionalMethod(String value)", "diff": ["-        public void setExceptionalMethod(String val) {", "+        public void setExceptionalMethod(String value) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4ddb5ef4458cacf510c8123fc8c679a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "be6d271ac34efc3daed3dbb873ab8060723dd4f8", "commitAfterChange": "b06dd9801e56887f7da1bbc8b55233e0ff5f5115", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setAllowtabs(boolean aAllowed)", "signatureAfterChange": "     public void setAllowTabs(boolean aAllowed)", "diff": ["-    public void setAllowtabs(boolean aAllowed)", "+    public void setAllowTabs(boolean aAllowed)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4e7abb6636c8ba1274e4d2a80999e58", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/CheckstyleException.java", "commitBeforeChange": "0546e55c06734d48f5c94af1555399e1f096bdca", "commitAfterChange": "0c24666d06b913bf5c38f9e9a2c5d6d09c5773ce", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public CheckstyleException(String aMessage, Throwable aCause)", "signatureAfterChange": "     public CheckstyleException(String aMessage, Throwable aCause)", "diff": ["-        super(aMessage);", "-        initCause(aCause);", "+        super(aMessage, aCause);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4ebac8412e131666ee845f9b6c1ad73", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/transmogrify/ASTManager.java", "commitBeforeChange": "8ceae21f091d963f2dc22014c66eeb1768728e53", "commitAfterChange": "b4e676b7ba18700a24a8fca28908308207a61454", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void addTree(String aFileName, AST aRoot)", "signatureAfterChange": "     public void addTree(String aFileName, AST aRoot)", "diff": ["+        clear();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4ed46b932882c4abfb469fa456fec72", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/SeverityLevelCounter.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Override     public void auditStarted(AuditEvent aEvt)", "signatureAfterChange": "     @Override     public void auditStarted(AuditEvent evt)", "diff": ["-    public void auditStarted(AuditEvent aEvt)", "+    public void auditStarted(AuditEvent evt)", "-        mCount = 0;", "+        count = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5015832d6243edfae1f8c688275e68e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            log(ident, \"explicit.init\", ident.getText(), \"null\");", "+            log(ident, MSG_KEY, ident.getText(), \"null\");", "-            log(ident, \"explicit.init\", ident.getText(), \"false\");", "+            log(ident, MSG_KEY, ident.getText(), \"false\");", "-            log(ident, \"explicit.init\", ident.getText(), \"0\");", "+            log(ident, MSG_KEY, ident.getText(), \"0\");", "-            log(ident, \"explicit.init\", ident.getText(), \"\\\\0\");", "+            log(ident, MSG_KEY, ident.getText(), \"\\\\0\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5122781ceb1b17e3fd736a560a8a550", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeModel.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public Object getChild(Object parent, int index)", "signatureAfterChange": "      @Override     public Object getChild(Object parent, int index)", "diff": ["-        int i = 0;", "+        int indx = 0;", "-        while (i < index) {", "+        while (indx < index) {", "-            i++;", "+            indx++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b525738afb0d6e00f91339a64e7acb66", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "     private void checkThrowsTags(List<JavadocTag> tags,             List<ExceptionInfo> throwsList, boolean reportExpectedTags)", "signatureAfterChange": "     private void checkThrowsTags(List<JavadocTag> tags,             List<ExceptionInfo> throwsList, boolean reportExpectedTags)", "diff": ["-                        \"javadoc.unusedTag\",", "+                        MSG_UNUSED_TAG,", "-                        \"javadoc.expectedTag\",", "+                        MSG_EXCPECTED_TAG,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b54e16e43544485b6453d3c5538759ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private JavadocNodeImpl createJavadocNode(ParseTree aParseTree, DetailNode aParent, int aIndex)", "signatureAfterChange": "     private JavadocNodeImpl createJavadocNode(ParseTree parseTree, DetailNode parent, int index)", "diff": ["-    private JavadocNodeImpl createJavadocNode(ParseTree aParseTree, DetailNode aParent, int aIndex)", "+    private JavadocNodeImpl createJavadocNode(ParseTree parseTree, DetailNode parent, int index)", "-        node.setText(aParseTree.getText());", "-        node.setColumnNumber(getColumn(aParseTree));", "-        node.setLineNumber(getLine(aParseTree) + mBlockCommentAst.getLineNo());", "-        node.setIndex(aIndex);", "-        node.setType(getTokenType(aParseTree));", "-        node.setParent(aParent);", "-        node.setChildren(new JavadocNodeImpl[aParseTree.getChildCount()]);", "+        node.setText(parseTree.getText());", "+        node.setColumnNumber(getColumn(parseTree));", "+        node.setLineNumber(getLine(parseTree) + blockCommentAst.getLineNo());", "+        node.setIndex(index);", "+        node.setType(getTokenType(parseTree));", "+        node.setParent(parent);", "+        node.setChildren(new JavadocNodeImpl[parseTree.getChildCount()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b57a1023bfd734f95d3b30879e09238c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private int[] lineBreaks()", "signatureAfterChange": "     private int[] lineBreaks()", "diff": ["-        if (mLineBreaks == null) {", "+        if (lineBreaks == null) {", "-            final Matcher matcher = LINE_TERMINATOR.matcher(mFullText);", "+            final Matcher matcher = LINE_TERMINATOR.matcher(fullText);", "-                lineBreaks[lineNo++] = mFullText.length();", "+                lineBreaks[lineNo++] = fullText.length();", "-            mLineBreaks = lineBreaks;", "+            this.lineBreaks = lineBreaks;", "-        return mLineBreaks;", "+        return lineBreaks;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5a92b9ac503c74ebfab4b8fdbb945b8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "6125beffc437f970eae276b4a6542265c6547784", "commitAfterChange": "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": "         public final Class getClazz()", "signatureAfterChange": "         public final Class getClazz()", "diff": ["-                setClazz(AbstractTypeAwareCheck.this.tryLoadClass(getName()));", "+                setClazz(AbstractTypeAwareCheck.this.", "+                         tryLoadClass(getName(), mCurrentClass));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5b740df0b9c39cfc5a86bc049d78ff9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Check.java", "commitBeforeChange": "ffb17cde0f6351bdf2f2e8cf655fa7f7a3cae827", "commitAfterChange": "672b27dd5551de63a1fb08d8ea80376d70f2aa60", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setGlobalContext(Map aGlobalContext)", "signatureAfterChange": "     public void setGlobalContext(Map aContext)", "diff": ["-    public void setGlobalContext(Map aGlobalContext)", "+    public void setGlobalContext(Map aContext)", "-        mGlobalContext = aGlobalContext;", "+        mGlobalContext = aContext;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5c901d055a4606735e9cbb6f7d65024", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "553a1aec9f8f90a28443c05090279aae922d7e8a", "commitAfterChange": "6d191d438b5a23efd62dacca2a33a3a3bdedecc7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     void verifyType(MyModifierSet aMods, MyCommonAST aType)", "signatureAfterChange": "     void verifyType(MyModifierSet aMods, MyCommonAST aType)", "diff": ["-        // Always check that the order of modifiers follows the JLS suggestion", "-        checkModOrder(aMods);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b60008ee913ea8a89d6f6eb889445375", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ReturnCountCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "         public void checkCount(DetailAST aAST)", "signatureAfterChange": "         public void checkCount(DetailAST ast)", "diff": ["-        public void checkCount(DetailAST aAST)", "+        public void checkCount(DetailAST ast)", "-            if (mChecking && (mCount > getMax())) {", "-                log(aAST.getLineNo(), aAST.getColumnNo(), \"return.count\",", "-                    mCount, getMax());", "+            if (checking && (count > getMax())) {", "+                log(ast.getLineNo(), ast.getColumnNo(), \"return.count\",", "+                    count, getMax());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b61ca891ad4cba011734e69a940fed31", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtils.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static boolean inAnnotationBlock(DetailAST aAST)", "signatureAfterChange": "     public static boolean isInAnnotationBlock(DetailAST aAST)", "diff": ["-    public static boolean inAnnotationBlock(DetailAST aAST) {", "+    public static boolean isInAnnotationBlock(DetailAST aAST) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b61fbe9360261961d583b2aad8647537", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractDeclarationCollector.java", "commitBeforeChange": "782da01103fc7ec8e69a3da7a5ef800dac866a8b", "commitAfterChange": "68959eeefff4d4a5b295cefbec242c643d523c6b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private static void collectDeclarations(Deque<LexicalFrame> frameStack,         DetailAST ast)", "signatureAfterChange": "     private static void collectDeclarations(Deque<LexicalFrame> frameStack,         DetailAST ast)", "diff": ["-            case TokenTypes.VARIABLE_DEF :  {", "+            case TokenTypes.VARIABLE_DEF :", "-            }", "-            case TokenTypes.PARAMETER_DEF : {", "-                final DetailAST nameAST = ast.findFirstToken(TokenTypes.IDENT);", "-                frame.addName(nameAST.getText());", "+            case TokenTypes.PARAMETER_DEF :", "+                final DetailAST parameterAST = ast.findFirstToken(TokenTypes.IDENT);", "+                frame.addName(parameterAST.getText());", "-            }", "-            case TokenTypes.ANNOTATION_DEF : {", "-                final DetailAST nameAST = ast.findFirstToken(TokenTypes.IDENT);", "-                frame.addName(nameAST.getText());", "+            case TokenTypes.ANNOTATION_DEF :", "+                final DetailAST classAST = ast.findFirstToken(TokenTypes.IDENT);", "+                frame.addName(classAST.getText());", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6342860f5518c3290e2773043980ba5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setTag(String aTag)         throws ConversionException", "signatureAfterChange": "     public void setTag(String tag)         throws ConversionException", "diff": ["-    public void setTag(String aTag)", "+    public void setTag(String tag)", "-            mTag = aTag;", "-            mTagRE = Utils.getPattern(aTag + \"\\\\s*(.*$)\");", "+            this.tag = tag;", "+            tagRE = Utils.getPattern(tag + \"\\\\s*(.*$)\");", "-            throw new ConversionException(\"unable to parse \" + aTag, e);", "+            throw new ConversionException(\"unable to parse \" + tag, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b64b725523ced9c9c2d38ab5e7d26e18", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/RegexpCheck.java", "commitBeforeChange": "27149f3504a2f350b74f456a9bffbae76a460060", "commitAfterChange": "5ede09997c283b4c418f0f540848e006be04fa87", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void logMessage(int lineNumber)", "signatureAfterChange": "     private void logMessage(int lineNumber)", "diff": ["-            log(lineNumber, \"illegal.regexp\", msg);", "+            log(lineNumber, MSG_ILLEGAL_REGEXP, msg);", "-                log(lineNumber, \"duplicate.regexp\", msg);", "+                log(lineNumber, MSG_DUPLICATE_REGEXP, msg);", "-                log(lineNumber, \"required.regexp\", msg);", "+                log(lineNumber, MSG_REQUIRED_REGEXP, msg);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b65b79ff3f77e7909b5f291fd7f09064", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "e55435125ea57e96f0bf876dd13e78b0ae02cd52", "commitAfterChange": "f55fcd5462624e611212b0b6c41e842d1adfa9f2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void setupChild(Configuration aChildConf)         throws CheckstyleException", "signatureAfterChange": "     protected void setupChild(Configuration aChildConf)         throws CheckstyleException", "diff": ["-            else if (child instanceof AuditEventFilter) {", "-                final AuditEventFilter filter = (AuditEventFilter) child;", "+            else if (child instanceof Filter) {", "+                final Filter filter = (Filter) child;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b66f045ce9ea7aabdb894013e4c307c0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAst)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAst)", "+    public void visitToken(DetailAST ast)", "-        if (!isIgnoreSituation(aAst)) {", "+        if (!isIgnoreSituation(ast)) {", "-            final DetailAST nameAst = aAst.findFirstToken(TokenTypes.IDENT);", "+            final DetailAST nameAst = ast.findFirstToken(TokenTypes.IDENT);", "-                log(nameAst.getLineNo(), MSG_KEY, mAllowedAbbreviationLength);", "+                log(nameAst.getLineNo(), MSG_KEY, allowedAbbreviationLength);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b67ff3dfe0f812e0c7f4d48677e4eb2c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "f8ca7fdb3423837adb455db363c705cafc84ca54", "commitAfterChange": "d28a2aa39ef15132757260a5e0b3ec03d6ae28f3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void registerCheck(String aToken, Check aCheck)", "signatureAfterChange": "     private void registerCheck(String aToken, Check aCheck)", "diff": ["-        mAllChecks.add(aCheck);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b68f9c77e8f9d40232832aa808ddb24a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public XMLLogger(OutputStream os, boolean closeStream)", "signatureAfterChange": "     public XMLLogger(OutputStream outputStream, boolean closeStream)", "diff": ["-    public XMLLogger(OutputStream os, boolean closeStream) {", "-        setOutputStream(os);", "+    public XMLLogger(OutputStream outputStream, boolean closeStream) {", "+        setOutputStream(outputStream);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6941c9ea27586d862939495b6607889", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Override     public Object createModule(String name)         throws CheckstyleException", "signatureAfterChange": "     @Override     public Object createModule(String name)         throws CheckstyleException", "diff": ["-            catch (final CheckstyleException ex2) {", "+            catch (final CheckstyleException ex) {", "-                throw new CheckstyleException(exceptionMessage.getMessage(), ex2);", "+                throw new CheckstyleException(exceptionMessage.getMessage(), ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6c322bbf0f626c67b4d8073216330d6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "         public void visitType(DetailAST aAST)", "signatureAfterChange": "         public void visitType(DetailAST ast)", "diff": ["-        public void visitType(DetailAST aAST)", "+        public void visitType(DetailAST ast)", "-            final String className = CheckUtils.createFullType(aAST).getText();", "-            mContext.addReferencedClassName(className);", "+            final String className = CheckUtils.createFullType(ast).getText();", "+            context.addReferencedClassName(className);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6daf0f26ebadfda5a2f12391f69358e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "         public boolean isMatch(AuditEvent aEvent)", "signatureAfterChange": "         public boolean isMatch(AuditEvent event)", "diff": ["-        public boolean isMatch(AuditEvent aEvent)", "+        public boolean isMatch(AuditEvent event)", "-                mTagCheckRegexp.matcher(aEvent.getSourceName());", "+                tagCheckRegexp.matcher(event.getSourceName());", "-                if (mTagMessageRegexp != null) {", "+                if (tagMessageRegexp != null) {", "-                            mTagMessageRegexp.matcher(aEvent.getMessage());", "+                            tagMessageRegexp.matcher(event.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6e82465fac1d2e8ac3b6f6181c045a8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "         public void visitLiteralNew(DetailAST aAST)", "signatureAfterChange": "         public void visitLiteralNew(DetailAST ast)", "diff": ["-        public void visitLiteralNew(DetailAST aAST)", "+        public void visitLiteralNew(DetailAST ast)", "-            mContext.addReferencedClassName(aAST.getFirstChild());", "+            context.addReferencedClassName(ast.getFirstChild());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6f19937e62a9e249bbad2561578d673", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setBraceAdjustment(int aAdjustmentAmount)", "signatureAfterChange": "     public void setBraceAdjustment(int adjustmentAmount)", "diff": ["-    public void setBraceAdjustment(int aAdjustmentAmount)", "+    public void setBraceAdjustment(int adjustmentAmount)", "-        mBraceAdjustment = aAdjustmentAmount;", "+        braceAdjustment = adjustmentAmount;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b71b6059fe3a7d09373ae52d282c20ef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/NoWhitespaceAfterCheckTest.java", "commitBeforeChange": "672244cf2f75c7425087a69beafe1133a45f130b", "commitAfterChange": "aa1032931c3bcb327e77c5d21f63f48a27e947a5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "       public void testDotAllowLineBreaks() throws Exception", "signatureAfterChange": "      public void testDotAllowLineBreaks() throws Exception", "diff": ["-", "-        checkConfig.addProperty(\"allowLineBreaks\", \"yes\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7462893477bf2b9ef82b6a339d6ca24", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/NeedBracesCheck.java", "commitBeforeChange": "fde141853282bb474d3011750e10cda12e2dbdd9", "commitAfterChange": "15c641997da72c75b97abad5d0c40375f82851ea", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        final DetailAST sListAST = aAST.findFirstToken(TokenTypes.SLIST);", "+        final DetailAST slistAST = aAST.findFirstToken(TokenTypes.SLIST);", "-        if (sListAST == null && !isElseIf) {", "+        if ((slistAST == null) && !isElseIf) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b749bd2a8d9f66eacd67cae760c0a63f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-                log(0, \"javadoc.legacyPackageHtml\");", "+                log(0, MSG_LEGACY_PACKAGE_HTML);", "-            log(0, \"javadoc.packageInfo\");", "+            log(0, MSG_PACKAGE_INFO);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b77cfba1c629b7366c1cb7574c8bda33", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "f243d4d74885edb0a40920246011fa6549635afd", "commitAfterChange": "ab1e3089135d74b0d8c3296d0074244ca89a55e2", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     private boolean isGetterMethod(final DetailAST aAST)", "signatureAfterChange": "     private boolean isGetterMethod(final DetailAST aAST)", "diff": ["-            || (aAST.getChildCount() != 7))", "+            || (aAST.getChildCount() != MAX_CHILDREN))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b79f779a1151d11f864de276ef19ae47", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessageTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testBundleReload_UrlNotNull() throws IOException", "signatureAfterChange": "      @Test     public void testBundleReloadUrlNotNull() throws IOException", "diff": ["-    public void testBundleReload_UrlNotNull() throws IOException {", "+    public void testBundleReloadUrlNotNull() throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7bd6c8b3c586449bad89c9c219e608d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "         private boolean isSignificant(String aClassName)", "signatureAfterChange": "         private boolean isSignificant(String className)", "diff": ["-        private boolean isSignificant(String aClassName)", "+        private boolean isSignificant(String className)", "-            return (aClassName.length() > 0)", "-                    && !mExcludedClasses.contains(aClassName)", "-                    && !aClassName.startsWith(\"java.lang.\");", "+            return (className.length() > 0)", "+                    && !excludedClasses.contains(className)", "+                    && !className.startsWith(\"java.lang.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7c028f5c85cf13998278f68ac9d391f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (ScopeUtils.inInterfaceOrAnnotationBlock(aAST)) {", "+        if (ScopeUtils.inInterfaceOrAnnotationBlock(ast)) {", "-        final DetailAST modifiers = aAST.findFirstToken(TokenTypes.MODIFIERS);", "+        final DetailAST modifiers = ast.findFirstToken(TokenTypes.MODIFIERS);", "-        if (!ScopeUtils.getSurroundingScope(aAST).isIn(Scope.PROTECTED)) {", "+        if (!ScopeUtils.getSurroundingScope(ast).isIn(Scope.PROTECTED)) {", "-        final DetailAST implementation = aAST.findFirstToken(TokenTypes.SLIST);", "+        final DetailAST implementation = ast.findFirstToken(TokenTypes.SLIST);", "-        final DetailAST classDef = findContainingClass(aAST);", "+        final DetailAST classDef = findContainingClass(ast);", "-            final String name = aAST.findFirstToken(TokenTypes.IDENT).getText();", "-            log(aAST.getLineNo(), aAST.getColumnNo(),", "+            final String name = ast.findFirstToken(TokenTypes.IDENT).getText();", "+            log(ast.getLineNo(), ast.getColumnNo(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7c3fcd4d9953fc5e308837ee411a610", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Scope.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static Scope getInstance(String aScopeName)", "signatureAfterChange": "     public static Scope getInstance(String scopeName)", "diff": ["-    public static Scope getInstance(String aScopeName)", "+    public static Scope getInstance(String scopeName)", "-        return valueOf(Scope.class, aScopeName.trim().toUpperCase());", "+        return valueOf(Scope.class, scopeName.trim().toUpperCase());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7d8f1c87ca72b8a6528ef30455afa15", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java", "commitBeforeChange": "904de34fcd984edce3d6042a5a17e2a969254588", "commitAfterChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static boolean returnsOnlyBooleanLiteral(AST ast)", "signatureAfterChange": "     private static boolean canReturnOnlyBooleanLiteral(AST ast)", "diff": ["-    private static boolean returnsOnlyBooleanLiteral(AST ast) {", "+    private static boolean canReturnOnlyBooleanLiteral(AST ast) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7fde53028b13b34ff84c47e389df2a3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-    public void leaveToken(DetailAST aAST)", "+    public void leaveToken(DetailAST ast)", "-        super.leaveToken(aAST);", "+        super.leaveToken(ast);", "-        switch (aAST.getType()) {", "+        switch (ast.getType()) {", "-            final Map<String, DetailAST> state = mScopeStack.pop();", "+            final Map<String, DetailAST> state = scopeStack.pop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b82fd0b7fa446e75c47bcc927aee7115", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/HideUtilityClassConstructorCheck.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        final boolean extendsJLO =", "+        final boolean extendsJlo =", "-        final boolean isUtilClass = extendsJLO && hasMethodOrField", "+        final boolean isUtilClass = extendsJlo && hasMethodOrField"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b83ff129812dbff4c03b52ccb2b22c82", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractIllegalCheck.java", "commitBeforeChange": "4e821bf4898f59fc9a0c02cbcb4ac4082827f450", "commitAfterChange": "eb70f7062f2517a2f7a511090b31789a92c15a2e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final void setIllegalClassNames(final String... classNames)", "signatureAfterChange": "     public final void setIllegalClassNames(final String... classNames)", "diff": ["-        assert classNames != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b84bd178b96cfcbe051944559680cacc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingDeprecatedCheck.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean containsJavadocTag(final TextBlock aJavadoc)", "signatureAfterChange": "     private boolean containsJavadocTag(final TextBlock aJavadoc)", "diff": ["-                    this.log(currentLine, \"javadoc.duplicateTag\",", "+                    this.log(currentLine, MSG_KEY_JAVADOC_DUPLICATE_TAG,", "-                                this.log(currentLine, \"javadoc.duplicateTag\",", "+                                this.log(currentLine, MSG_KEY_JAVADOC_DUPLICATE_TAG,", "-                            this.log(currentLine, \"javadoc.missing\");", "+                            this.log(currentLine, MSG_KEY_JAVADOC_MISSING);", "-                                this.log(currentLine, \"javadoc.duplicateTag\",", "+                                this.log(currentLine, MSG_KEY_JAVADOC_DUPLICATE_TAG,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b86dd3305e2d28188bd6798c417a9316", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "553a1aec9f8f90a28443c05090279aae922d7e8a", "commitAfterChange": "6d191d438b5a23efd62dacca2a33a3a3bdedecc7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     void verifyVariable(MyVariable aVar)", "signatureAfterChange": "     void verifyVariable(MyVariable aVar)", "diff": ["-", "-        // Always check that the order of modifiers follows the JLS suggestion", "-        checkModOrder(mods);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b88080f7f00370c2231a0b5e79dd6296", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/InterfaceIsTypeCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-                aAST.findFirstToken(TokenTypes.OBJBLOCK);", "+                ast.findFirstToken(TokenTypes.OBJBLOCK);", "-                !mAllowMarkerInterfaces || (variableDef != null);", "+                !allowMarkerInterfaces || (variableDef != null);", "-            log(aAST.getLineNo(), \"interface.type\");", "+            log(ast.getLineNo(), \"interface.type\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8a2f11b7572cf3a66f6d42e11fadbd6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "commitAfterChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-                            log(importObject.getLineNumber(), \"custom.import.order.line.separator\",", "+                            log(importObject.getLineNumber(), MSG_LINE_SEPARATOR,", "-                log(importObject.getLineNumber(), \"custom.import.order.lex\", fullImportIdent);", "+                log(importObject.getLineNumber(), MSG_LEX, fullImportIdent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8a9b38901564563948b587d2c8bf638", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected final ClassInfo createClassInfo(final Token aName,                                               final String aSurroundingClass)", "signatureAfterChange": "     protected final ClassInfo createClassInfo(final Token name,                                               final String surroundingClass)", "diff": ["-    protected final ClassInfo createClassInfo(final Token aName,", "-                                              final String aSurroundingClass)", "+    protected final ClassInfo createClassInfo(final Token name,", "+                                              final String surroundingClass)", "-        final ClassInfo ci = findClassAlias(aName.getText());", "+        final ClassInfo ci = findClassAlias(name.getText());", "-            return new ClassAlias(aName, ci);", "+            return new ClassAlias(name, ci);", "-        return new RegularClass(aName, aSurroundingClass, this);", "+        return new RegularClass(name, surroundingClass, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8b1655e7f167787b42c2e840490dcc0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private Point getNextCharPos(String[] aText, Point aFrom)", "signatureAfterChange": "     private Point getNextCharPos(String[] text, Point from)", "diff": ["-    private Point getNextCharPos(String[] aText, Point aFrom)", "+    private Point getNextCharPos(String[] text, Point from)", "-        int line = aFrom.getLineNo();", "-        int column = aFrom.getColumnNo() + 1;", "-        while ((line < aText.length) && (column >= aText[line].length())) {", "+        int line = from.getLineNo();", "+        int column = from.getColumnNo() + 1;", "+        while ((line < text.length) && (column >= text[line].length())) {", "-            if (line < aText.length) {", "+            if (line < text.length) {", "-                final String currentLine = aText[line];", "+                final String currentLine = text[line];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8ba25b9d79a3e2698a67087a360ee77", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected IndentLevel getChildrenExpectedLevel()", "signatureAfterChange": "     protected IndentLevel getChildrenExpectedIndent()", "diff": ["-    protected IndentLevel getChildrenExpectedLevel() {", "-        IndentLevel indentLevel = new IndentLevel(getLevel(), getBasicOffset());", "+    protected IndentLevel getChildrenExpectedIndent() {", "+        IndentLevel indentLevel = new IndentLevel(getIndent(), getBasicOffset());", "-        if (getLevel().isMultiLevel() && hasCurlies()) {", "+        if (getIndent().isMultiLevel() && hasCurlies()) {", "-                final IndentLevel level = new IndentLevel(curlyLevel(), getBasicOffset());", "+                final IndentLevel level = new IndentLevel(curlyIndent(), getBasicOffset());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8dd470f6594e82f0747c728d99ef404", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionFilter.java", "commitBeforeChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "commitAfterChange": "4c1148db9982918e65f8d1156e8fb9c07b206fc9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public boolean equals(Object obj)", "signatureAfterChange": "      @Override     public boolean equals(Object obj)", "diff": ["-        final SuppressionFilter that = (SuppressionFilter) obj;", "-        return Objects.equals(filters, that.filters);", "+        final SuppressionFilter suppressionFilter = (SuppressionFilter) obj;", "+        return Objects.equals(filters, suppressionFilter.filters);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8ece81acdd846ae57cf3126a068c2d1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "896af516b0028ff2a26cc1888dfaba620d3fe9e0", "commitAfterChange": "55c92042eb6986e905529de841d3d1c9a7b2b6dd", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "         private static String expandFrocomment(             String comment,             String stringToExpand,             Pattern regexp)", "signatureAfterChange": "         private static String expandFromComment(             String comment,             String stringToExpand,             Pattern regexp)", "diff": ["-        private static String expandFrocomment(", "+        private static String expandFromComment("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8edafedfca8b511a28785868611765b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void reportCppComment(int aStartLineNo, int aStartColNo)", "signatureAfterChange": "     public void reportCppComment(int startLineNo, int startColNo)", "diff": ["-    public void reportCppComment(int aStartLineNo, int aStartColNo)", "+    public void reportCppComment(int startLineNo, int startColNo)", "-        final String line = line(aStartLineNo - 1);", "-        final String[] txt = new String[] {line.substring(aStartColNo)};", "-        final Comment comment = new Comment(txt, aStartColNo, aStartLineNo,", "+        final String line = line(startLineNo - 1);", "+        final String[] txt = new String[] {line.substring(startColNo)};", "+        final Comment comment = new Comment(txt, startColNo, startLineNo,", "-        mCPlusPlusComments.put(aStartLineNo, comment);", "+        cPlusPlusComments.put(startLineNo, comment);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b938f92a43a214e663de727586e7edf9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "546f336e25b26d072f96e2cda139b885858ed5b0", "commitAfterChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void notifyBegin(DetailAST rootAST, FileContents contents,             AstState astState)", "signatureAfterChange": "     private void notifyBegin(DetailAST rootAST, FileContents contents,             AstState astState)", "diff": ["-        for (Check ch : checks) {", "-            ch.setFileContents(contents);", "-            ch.beginTree(rootAST);", "+        for (Check check : checks) {", "+            check.setFileContents(contents);", "+            check.beginTree(rootAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9402ccaae4de32125db31156f24e041", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractViolationReporter.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public abstract void log(int aLine, int aCol, String aKey,             Object... aArgs);", "signatureAfterChange": "     public abstract void log(int line, int col, String key,             Object... args);", "diff": ["-    public abstract void log(int aLine, int aCol, String aKey,", "+    public abstract void log(int line, int col, String key,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b95bd26a05d04bfe055d690f7bdc23fd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void registerCheck(Check aCheck)         throws CheckstyleException", "signatureAfterChange": "     private void registerCheck(Check check)         throws CheckstyleException", "diff": ["-    private void registerCheck(Check aCheck)", "+    private void registerCheck(Check check)", "-        final Set<String> checkTokens = aCheck.getTokenNames();", "+        final Set<String> checkTokens = check.getTokenNames();", "-            tokens = aCheck.getRequiredTokens();", "+            tokens = check.getRequiredTokens();", "-            final int[] acceptableTokens = aCheck.getAcceptableTokens();", "+            final int[] acceptableTokens = check.getAcceptableTokens();", "-                        registerCheck(token, aCheck);", "+                        registerCheck(token, check);", "-                        + token + \"\\\" in check \" + aCheck, ex);", "+                        + token + \"\\\" in check \" + check, ex);", "-            tokens = aCheck.getDefaultTokens();", "+            tokens = check.getDefaultTokens();", "-            registerCheck(element, aCheck);", "+            registerCheck(element, check);", "-        if (aCheck.isCommentNodesRequired()) {", "-            mCommentChecks.add(aCheck);", "+        if (check.isCommentNodesRequired()) {", "+            commentChecks.add(check);", "-            mOrdinaryChecks.add(aCheck);", "+            ordinaryChecks.add(check);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b96698b2e00a14d12bbe4b67e91ebc23", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PackageNamesLoaderTest.java", "commitBeforeChange": "751805442819ae5f08f32347faf44f4c1b214eb3", "commitAfterChange": "b79466ba09c359480cce46a5cfdad44f07bf9793", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testPackagesWithDots() throws Exception", "signatureAfterChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testPackagesWithDots() throws Exception", "diff": ["-        LinkedHashSet<String> list = (LinkedHashSet<String>) field.get(loader);", "+        Set<String> list = (Set<String>) field.get(loader);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9a370e7389d3b7ab7b2c5993b9f7310", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void setConfigLocation(String aLocation)", "signatureAfterChange": "     private void setConfigLocation(String location)", "diff": ["-    private void setConfigLocation(String aLocation)", "+    private void setConfigLocation(String location)", "-        if (mConfigLocation != null) {", "+        if (configLocation != null) {", "-        mConfigLocation = aLocation;", "+        configLocation = location;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9c2f5148b7fb5d684d266c9c7e47fe9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AnnotationUtility.java", "commitBeforeChange": "193474f51804bf6255bfcec58befcb1dc8ff8329", "commitAfterChange": "7d5e825abd68a4ffcb86865149b917edf76a47b6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static DetailAST getAnnotation(final DetailAST ast,         String annotation)", "signatureAfterChange": "     public static DetailAST getAnnotation(final DetailAST ast,         String annotation)", "diff": ["-            throw new NullPointerException(\"the ast is null\");", "+            throw new IllegalArgumentException(\"the ast is null\");", "-            throw new NullPointerException(\"the annotation is null\");", "+            throw new IllegalArgumentException(\"the annotation is null\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9cd1717cf3b868a5164b71e4490a5ef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "         public boolean isMatch(AuditEvent aEvent)", "signatureAfterChange": "         public boolean isMatch(AuditEvent event)", "diff": ["-        public boolean isMatch(AuditEvent aEvent)", "+        public boolean isMatch(AuditEvent event)", "-            final int line = aEvent.getLine();", "-            if (line < mFirstLine) {", "+            final int line = event.getLine();", "+            if (line < firstLine) {", "-            if (line > mLastLine) {", "+            if (line > lastLine) {", "-                mTagCheckRegexp.matcher(aEvent.getSourceName());", "+                tagCheckRegexp.matcher(event.getSourceName());", "-            if (mTagMessageRegexp != null) {", "+            if (tagMessageRegexp != null) {", "-                    mTagMessageRegexp.matcher(aEvent.getMessage());", "+                    tagMessageRegexp.matcher(event.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9cf086d4e162c8baf238bf8edc90b61", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static Configuration loadConfig(CommandLine aLine,                                             Properties aProps)", "signatureAfterChange": "     private static Configuration loadConfig(CommandLine line,                                             Properties props)", "diff": ["-    private static Configuration loadConfig(CommandLine aLine,", "-                                            Properties aProps)", "+    private static Configuration loadConfig(CommandLine line,", "+                                            Properties props)", "-                    aLine.getOptionValue(\"c\"), new PropertiesExpander(aProps));", "+                    line.getOptionValue(\"c\"), new PropertiesExpander(props));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9f099429d9a9b4409d7adad8370cb16", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     String getFullPackage()", "signatureAfterChange": "     String getFullPackage()", "diff": ["-        return mFullPackage;", "+        return fullPackage;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba125496f61f02d18a9fdb9fa4144d59", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "6ca2d5279ea5b03dfa91167a9001d55cca5db65d", "commitAfterChange": "af4ecbf9b557808a05c7b84820b4ffd28990ee33", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ParseTreeInfoPanel()", "signatureAfterChange": "     public ParseTreeInfoPanel()", "diff": ["-        parseTreeModel = new ParseTreeModel(null);", "-        final JTreeTable treeTable = new JTreeTable(parseTreeModel);", "+        parseTreeTableModel = new ParseTreeTableModel(null);", "+        final JTreeTable treeTable = new JTreeTable(parseTreeTableModel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba182ff3d58c448bfd3faabdc2f041bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void setProcessJavadoc(boolean aValue)", "signatureAfterChange": "      public void setProcessJavadoc(boolean value)", "diff": ["-    public void setProcessJavadoc(boolean aValue)", "+    public void setProcessJavadoc(boolean value)", "-        mProcessJavadoc = aValue;", "+        processJavadoc = value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba187a43bd9f3a77503ac17c803e14e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java", "commitBeforeChange": "0975fb750b3d6775d514c8c096786fe6f7a6c272", "commitAfterChange": "c324b05dfdeb0ce41af355db95b7da3149f8f98a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     protected boolean mustCheckName(DetailAST ast)", "signatureAfterChange": "      @Override     protected boolean mustCheckName(DetailAST ast)", "diff": ["-                || skipCatchParameter && ast.getParent().getType() == TokenTypes.LITERAL_CATCH) {", "+                || ast.getParent().getType() == TokenTypes.LITERAL_CATCH) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba234a251c0c3c12989f458c3979fb2c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheckTest.java", "commitBeforeChange": "9443321a0f70b8fc1f323a9e237f95f5ac44a45c", "commitAfterChange": "28e6666a07f41519c2746a722f46eaa1e243a11d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testExtensions() throws Exception", "signatureAfterChange": "      @Test     public void testExtensions() throws Exception", "diff": ["-            fail();", "+            fail(\"IllegalArgumentException is expected\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba53474705cc1c5615fc6ebd846659bb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d27384e31de3ddc59b429561554b32e2a0c4fe05", "commitAfterChange": "8f12d2b92568c8fca42dfbd26f3d1f0b17100a7b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-                        if (separateLineBetweenGroups && previousImport != null", "+                        if (separateLineBetweenGroups"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba68f4da33a33ac5539a23b4067575f6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "         private boolean isSignificant(String className)", "signatureAfterChange": "         private boolean isSignificant(String candidateClassName)", "diff": ["-        private boolean isSignificant(String className) {", "-            return !excludedClasses.contains(className)", "-                    && !className.startsWith(\"java.lang.\");", "+        private boolean isSignificant(String candidateClassName) {", "+            return !excludedClasses.contains(candidateClassName)", "+                    && !candidateClassName.startsWith(\"java.lang.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba74bbb186434cc6c221a2f7a45ccc70", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final ExpressionHandler handler = mHandlerFactory.getHandler(this, aAST,", "-            mHandlers.peek());", "-        mHandlers.push(handler);", "+        final ExpressionHandler handler = handlerFactory.getHandler(this, ast,", "+            handlers.peek());", "+        handlers.push(handler);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baaa593c544a273252e1fc2eb2dbd432", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultConfiguration.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void addMessage(String aKey, String aValue)", "signatureAfterChange": "     public void addMessage(String key, String value)", "diff": ["-    public void addMessage(String aKey, String aValue)", "+    public void addMessage(String key, String value)", "-        mMessages.put(aKey, aValue);", "+        messages.put(key, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baae95cb37640b67fd3d41861a340391", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule43onestatement/OneStatementPerLineTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void oneStatementNonCompilableInputTest() throws Exception", "signatureAfterChange": "      @Test     public void oneStatementNonCompilableInputTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"OneStatementPerLine\");", "+        final Configuration checkConfig = getCheckConfig(\"OneStatementPerLine\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "babeea66d620573f187d63260eabb2ed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "commitAfterChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "          @Override         @SuppressWarnings(\"unchecked\")         public void drop(DropTargetDropEvent evt)", "signatureAfterChange": "          @Override         @SuppressWarnings(\"unchecked\")         public void drop(DropTargetDropEvent evt)", "diff": ["-                    if (mListener != null) {", "-                        mListener.filesDropped(files);", "+                    if (listener != null) {", "+                        listener.filesDropped(files);", "-                if (mC instanceof JComponent) {", "-                    final JComponent jc = (JComponent) mC;", "+                if (component instanceof JComponent) {", "+                    final JComponent jc = (JComponent) component;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bac9f697293be357049798c9ca43a8d0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "commitAfterChange": "cb5a59fc6baf5de204e3cc99be6ba9865e44350a", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "         private static String expandFromCoont(             String comment,             String stringToExpand,             Pattern regexp)", "signatureAfterChange": "         private static String expandFromComment(                 String comment,                 String stringToExpand,                 Pattern regexp)", "diff": ["-        private static String expandFromCoont(", "-            String comment,", "-            String stringToExpand,", "-            Pattern regexp) {", "+        private static String expandFromComment(", "+                String comment,", "+                String stringToExpand,", "+                Pattern regexp) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bace3ac6509b71fd306b84eb952bd6b0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/ClassTypeParameterNameCheckTest.java", "commitBeforeChange": "4fb4529b6f629ec3745f402b11dc3c1d1632a85a", "commitAfterChange": "4346d41010a729e14991e30706bdb16ff18ff39a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testGetAcceptableTokens()", "signatureAfterChange": "      @Test     public void testGetAcceptableTokens()", "diff": ["-        final AbstractTypeParameterNameCheck typeParameterNameCheckObj =", "+        final ClassTypeParameterNameCheck typeParameterNameCheckObj ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bad19c9775ab68f18c3a43f6c22f7b94", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/Main.java", "commitBeforeChange": "57b908199dfa5c2c9bf9388d92925ccfb312812f", "commitAfterChange": "bcaa9d81a71c396d3e2eb3070149b3e4851d478f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static void displayAst(DetailAST ast)", "signatureAfterChange": "     public static void displayAst(DetailAST ast)", "diff": ["-        panel.openAst(ast, testFrame);", "+        panel.openAst(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baf17de040bb00fad8844630381eee26", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testNL() throws Exception", "signatureAfterChange": "      @Test     public void testNl() throws Exception", "diff": ["-    public void testNL() throws Exception {", "+    public void testNl() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb311eee0b7c233b0b20324864aac16a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testContextualize_InvocationTargetException()", "signatureAfterChange": "      @Test     public void testContextualizeInvocationTargetException()", "diff": ["-    public void testContextualize_InvocationTargetException() {", "+    public void testContextualizeInvocationTargetException() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb7b86dfe2ed068baab5c299376513c9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public String getModuleId()", "signatureAfterChange": "     public String getModuleId()", "diff": ["-        return mModuleId;", "+        return moduleId;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb9fbefeda819b83aeb0c048f9d5b5e1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private boolean shouldCheck(final DetailAST ast, final Scope scope)", "signatureAfterChange": "     private boolean shouldCheck(final DetailAST ast, final Scope nodeScope)", "diff": ["-    private boolean shouldCheck(final DetailAST ast, final Scope scope) {", "+    private boolean shouldCheck(final DetailAST ast, final Scope nodeScope) {", "-        return scope.isIn(this.scope)", "+        return nodeScope.isIn(this.scope)", "-                && (excludeScope == null || !scope.isIn(excludeScope)", "+                && (excludeScope == null || !nodeScope.isIn(excludeScope)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbe7def8b16b227b1cee487fe51c0e05", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private boolean isEmptyBlock(DetailAST aAST, int aParentType, int aMatch)", "signatureAfterChange": "     private boolean isEmptyBlock(DetailAST ast, int parentType, int match)", "diff": ["-    private boolean isEmptyBlock(DetailAST aAST, int aParentType, int aMatch)", "+    private boolean isEmptyBlock(DetailAST ast, int parentType, int match)", "-        final int type = aAST.getType();", "+        final int type = ast.getType();", "-            final DetailAST grandParent = aAST.getParent().getParent();", "-            return (aParentType == TokenTypes.SLIST)", "-                && (grandParent.getType() == aMatch);", "+            final DetailAST grandParent = ast.getParent().getParent();", "+            return (parentType == TokenTypes.SLIST)", "+                && (grandParent.getType() == match);", "-            && (aParentType == aMatch)", "-            && (aAST.getFirstChild().getType() == TokenTypes.RCURLY);", "+            && (parentType == match)", "+            && (ast.getFirstChild().getType() == TokenTypes.RCURLY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbe882e72d47e8cef466edba78596b43", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ArrayInitHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private int getNextFirstNonblankOnLineAfter(int aLineNo, int aColumnNo)", "signatureAfterChange": "     private int getNextFirstNonblankOnLineAfter(int lineNo, int columnNo)", "diff": ["-    private int getNextFirstNonblankOnLineAfter(int aLineNo, int aColumnNo)", "+    private int getNextFirstNonblankOnLineAfter(int lineNo, int columnNo)", "-        int columnNo = aColumnNo + 1;", "-        final String line = getIndentCheck().getLines()[aLineNo - 1];", "+        int realColumnNo = columnNo + 1;", "+        final String line = getIndentCheck().getLines()[lineNo - 1];", "-        while ((columnNo < lineLength)", "-               && Character.isWhitespace(line.charAt(columnNo)))", "+        while ((realColumnNo < lineLength)", "+               && Character.isWhitespace(line.charAt(realColumnNo)))", "-            columnNo++;", "+            realColumnNo++;", "-        return (columnNo == lineLength) ? -1 : columnNo;", "+        return (realColumnNo == lineLength) ? -1 : realColumnNo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbeb1772d62dee0ae7e4e1f108b3975b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "546f336e25b26d072f96e2cda139b885858ed5b0", "commitAfterChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private void makeDropTarget(final Component c, boolean recursive)             throws TooManyListenersException", "signatureAfterChange": "      private void makeDropTarget(final Component component, boolean recursive)             throws TooManyListenersException", "diff": ["-    private void makeDropTarget(final Component c, boolean recursive)", "+    private void makeDropTarget(final Component component, boolean recursive)", "-        c.addHierarchyListener(new HierarchyListener() {", "+        component.addHierarchyListener(new HierarchyListener() {", "-                final Component parent = c.getParent();", "+                final Component parent = component.getParent();", "-                    c.setDropTarget(null);", "+                    component.setDropTarget(null);", "-                    new DropTarget(c, dropListener);", "+                    new DropTarget(component, dropListener);", "-        if (c.getParent() != null) {", "-            new DropTarget(c, dropListener);", "+        if (component.getParent() != null) {", "+            new DropTarget(component, dropListener);", "-        if (recursive && c instanceof Container) {", "-            final Container cont = (Container) c;", "+        if (recursive && component instanceof Container) {", "+            final Container cont = (Container) component;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbeb781dc5f6d3797d37f24d9ba6fbc4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java", "commitBeforeChange": "ee68e92168e132ff16622a2593dcb5128ad024e6", "commitAfterChange": "b853696d980a96e42149c9c8346889a894dba400", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          public void setName(String aName)", "signatureAfterChange": "         public void setName(String aName)", "diff": ["-", "-            mName = aName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc2e8e3e0d858e5b5dba635fd8fd50b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SingleLineJavadocCheck.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private boolean isSingleLineJavdoc()", "signatureAfterChange": "     private boolean isSingleLineJavadoc()", "diff": ["-    private boolean isSingleLineJavdoc()", "+    private boolean isSingleLineJavadoc()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc587fa7f52e7ca68b2c82af09d72fdc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "91aa6578321ceb08f4b0d715f994b7a9f4abe9d7", "commitAfterChange": "3430721be200cbe2acf55c3b3d52a528638123b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private static String extractBaseName(String fileName)", "signatureAfterChange": "     private static String extractBaseName(String aFileName)", "diff": ["-    private static String extractBaseName(String fileName)", "+    private static String extractBaseName(String aFileName)", "-        int k = fileName.indexOf(\"_\");", "+        int k = aFileName.indexOf(\"_\");", "-            return fileName.substring(0, k);", "+            return aFileName.substring(0, k);", "-            return fileName.substring(0, fileName.indexOf(\".\"));", "+            return aFileName.substring(0, aFileName.indexOf(\".\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc5fb15953c9eb8c0aadec6bde07b255", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void processPackage(DetailAST aAST)", "signatureAfterChange": "     private void processPackage(DetailAST ast)", "diff": ["-    private void processPackage(DetailAST aAST)", "+    private void processPackage(DetailAST ast)", "-        final DetailAST nameAST = aAST.getLastChild().getPreviousSibling();", "-        mPackageFullIdent = FullIdent.createFullIdent(nameAST);", "+        final DetailAST nameAST = ast.getLastChild().getPreviousSibling();", "+        packageFullIdent = FullIdent.createFullIdent(nameAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc92724a4cba798a48430f0ffcea6e15", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/TokenUtils.java", "commitBeforeChange": "f0ea60f77bbc5e524320b042d7a90eefbf2bd00d", "commitAfterChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static String getShortDescription(String name)", "signatureAfterChange": "     public static String getShortDescription(String name)", "diff": ["-        final String tokentypes =", "+        final String tokenTypes =", "-        final ResourceBundle bundle = ResourceBundle.getBundle(tokentypes);", "+        final ResourceBundle bundle = ResourceBundle.getBundle(tokenTypes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcd25dbf8b92e3511e3680ef52d0d9ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private Point skipHtmlComment(String[] aText, Point aFrom)", "signatureAfterChange": "     private Point skipHtmlComment(String[] text, Point from)", "diff": ["-    private Point skipHtmlComment(String[] aText, Point aFrom)", "+    private Point skipHtmlComment(String[] text, Point from)", "-        Point to = aFrom;", "-        to = findChar(aText, '>', to);", "-        while ((to.getLineNo() < aText.length)", "-               && !aText[to.getLineNo()]", "+        Point to = from;", "+        to = findChar(text, '>', to);", "+        while ((to.getLineNo() < text.length)", "+               && !text[to.getLineNo()]", "-            to = findChar(aText, '>', getNextCharPos(aText, to));", "+            to = findChar(text, '>', getNextCharPos(text, to));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bced82d2ff20d73fc9bfe0930e575f69", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "904de34fcd984edce3d6042a5a17e2a969254588", "commitAfterChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private boolean calledOnStringField(DetailAST objCalledOn)", "signatureAfterChange": "     private boolean isCalledOnStringField(DetailAST objCalledOn)", "diff": ["-    private boolean calledOnStringField(DetailAST objCalledOn) {", "+    private boolean isCalledOnStringField(DetailAST objCalledOn) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bceed1e6725b512213b0bb5083179316", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public Charset getCharset()", "signatureAfterChange": "     public Charset getCharset()", "diff": ["-        return mCharset;", "+        return charset;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcfe4aeda6c8a630a121cc40bddc3678", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "443e534a3c98c0b30f24647da724fe918f17a006", "commitAfterChange": "66d73fe6189267fee3423e2e8d7fc2d68599a43f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "          public FileDropListener(JScrollPane aSp)", "signatureAfterChange": "          public FileDropListener(JScrollPane scrollPane)", "diff": ["-        public FileDropListener(JScrollPane aSp) {", "-            mSp = aSp;", "+        public FileDropListener(JScrollPane scrollPane) {", "+            this.scrollPane = scrollPane;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd21e96d21919372ce0e8138eb733163", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final void setAllowIfAllCharactersEscaped(boolean aAllow)", "signatureAfterChange": "     public final void setAllowIfAllCharactersEscaped(boolean allow)", "diff": ["-    public final void setAllowIfAllCharactersEscaped(boolean aAllow)", "+    public final void setAllowIfAllCharactersEscaped(boolean allow)", "-        mAllowIfAllCharactersEscaped = aAllow;", "+        allowIfAllCharactersEscaped = allow;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd3b7029b43f7fe95696902f36900b5c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "be9f461d577983e7deeed909852cee3fb5d784f6", "commitAfterChange": "06e8a4eaa00e548f52b2483864a31ba9defd0989", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST aRootAST)", "diff": ["-        mCounters = new Stack<Counter>();", "+        mCounters = new FastStack<Counter>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd644de5dfb1101ea9db34c4199d3774", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressElementTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testDecideByFileNameAndModuleMatching_ModuleNotEqual()", "signatureAfterChange": "      @Test     public void testDecideByFileNameAndModuleMatchingModuleNotEqual()", "diff": ["-    public void testDecideByFileNameAndModuleMatching_ModuleNotEqual() {", "+    public void testDecideByFileNameAndModuleMatchingModuleNotEqual() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd9eda308ec417dd6cfc68cb9c2e3b91", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void processEnd(DetailAST ast)", "signatureAfterChange": "     private void processEnd(DetailAST ast)", "diff": ["-            log(ast.getLineNo(), before, \"ws.preceded\", \">\");", "+            log(ast.getLineNo(), before, WS_PRECEDED, \">\");", "-                        log(ast.getLineNo(), after, \"ws.followed\", \">\");", "+                        log(ast.getLineNo(), after, WS_FOLLOWED, \">\");", "-                    log(ast.getLineNo(), after, \"ws.illegalFollow\", \">\");", "+                    log(ast.getLineNo(), after, WS_ILLEGAL_FOLLOW, \">\");", "-                        log(ast.getLineNo(), after, \"ws.notPreceded\", \"&\");", "+                        log(ast.getLineNo(), after, WS_NOT_PRECEDED, \"&\");", "-                        log(ast.getLineNo(), after, \"ws.followed\", \">\");", "+                        log(ast.getLineNo(), after, WS_FOLLOWED, \">\");", "-                    log(ast.getLineNo(), after, \"ws.followed\", \">\");", "+                    log(ast.getLineNo(), after, WS_FOLLOWED, \">\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdb7908592745d78926cb93ec49e7aad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule43onestatement/OneStatementPerLineTest.java", "commitBeforeChange": "cc83880e8ca5eac08e0252d7e420be85ab73fe6c", "commitAfterChange": "6258cebf06a6503b9f5780f839c3ff33131c9913", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Ignore     @Test     public void oneStatmentTest() throws IOException, Exception", "signatureAfterChange": "      @Test     public void oneStatmentTest() throws Exception", "diff": ["-    @Ignore", "-    public void oneStatmentTest() throws IOException, Exception {", "+    public void oneStatmentTest() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bde0331a408a549dcea4157a0c85051b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void processIdent(DetailAST aAST)", "signatureAfterChange": "     private void processIdent(DetailAST ast)", "diff": ["-    private void processIdent(DetailAST aAST)", "+    private void processIdent(DetailAST ast)", "-        final DetailAST parent = aAST.getParent();", "+        final DetailAST parent = ast.getParent();", "-                && (aAST.getNextSibling() != null)))", "+                && (ast.getNextSibling() != null)))", "-            mReferenced.add(aAST.getText());", "+            referenced.add(ast.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdfaf8c634230ea223c8499f121dc3a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodDefHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public MethodDefHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "signatureAfterChange": "     public MethodDefHandler(IndentationCheck indentCheck,         DetailAST ast, ExpressionHandler parent)", "diff": ["-    public MethodDefHandler(IndentationCheck aIndentCheck,", "-        DetailAST aAst, ExpressionHandler aParent)", "+    public MethodDefHandler(IndentationCheck indentCheck,", "+        DetailAST ast, ExpressionHandler parent)", "-        super(aIndentCheck, (aAst.getType() == TokenTypes.CTOR_DEF)", "-            ? \"ctor def\" : \"method def\", aAst, aParent);", "+        super(indentCheck, (ast.getType() == TokenTypes.CTOR_DEF)", "+            ? \"ctor def\" : \"method def\", ast, parent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be209286f37462b3ef64053a0e70c64f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "8f86620e72849120dc5fba45c3cc54ed38e24447", "commitAfterChange": "d345f3beb27f3d8e3fde06f7e2c7612ddf691b95", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testTypeNamesForFourPermitedCapitalLetters() throws Exception", "signatureAfterChange": "      @Test     public void testTypeNamesForFourPermittedCapitalLetters() throws Exception", "diff": ["-    public void testTypeNamesForFourPermitedCapitalLetters() throws Exception {", "+    public void testTypeNamesForFourPermittedCapitalLetters() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be21ae8e8f1f1a50664d229b5304da8f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck.java", "commitBeforeChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "commitAfterChange": "cb5a59fc6baf5de204e3cc99be6ba9865e44350a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void loadHeader(final Reader headerReader) throws IOException", "signatureAfterChange": "     private void loadHeader(final Reader headerReader) throws IOException", "diff": ["-        postprocessHeaderLines();", "+        postProcessHeaderLines();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be23c711309bcf875a1d10c593aa0a27", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck.java", "commitBeforeChange": "17c08660fa40c844057c33e2de04c67af41393b0", "commitAfterChange": "0989b5c3954e46b156bf5d2344327f650ddafc8d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected List<String> getHeaderLines()", "signatureAfterChange": "     protected ImmutableList<String> getHeaderLines()", "diff": ["-    protected List<String> getHeaderLines()", "+    protected ImmutableList<String> getHeaderLines()", "-        return Collections.unmodifiableList(mHeaderLines);", "+        return ImmutableList.copyOf(mHeaderLines);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be37926fc47fa61f2188a26081db789c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public FileText(File file, String charsetName) throws IOException", "signatureAfterChange": "     public FileText(File file, String charsetName) throws IOException", "diff": ["-        final BufferedReader br =", "+        final BufferedReader reader =", "-            final String line = br.readLine();", "+            final String line = reader.readLine();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be65737697b8c945e1836dde5131631e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public final void beginTree(DetailAST aAST)", "signatureAfterChange": "      @Override     public final void beginTree(DetailAST ast)", "diff": ["-    public final void beginTree(DetailAST aAST)", "+    public final void beginTree(DetailAST ast)", "-        mPackageName = \"\";", "+        packageName = \"\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be6610953f5003e510a9e085bb72b63e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private boolean matchesSamePackageImportGroup(boolean aStatic,         String aImportPath, String aCurrentGroup)", "signatureAfterChange": "     private boolean matchesSamePackageImportGroup(boolean isStatic,         String importFullPath, String currentGroup)", "diff": ["-    private boolean matchesSamePackageImportGroup(boolean aStatic,", "-        String aImportPath, String aCurrentGroup)", "+    private boolean matchesSamePackageImportGroup(boolean isStatic,", "+        String importFullPath, String currentGroup)", "-        final String importPath = aImportPath.substring(0, aImportPath.lastIndexOf(\".\"));", "-        return !aStatic && SAME_PACKAGE_RULE_GROUP.equals(aCurrentGroup)", "-                && mSamePackageDomainsRegExp.contains(importPath);", "+        final String importPath = importFullPath.substring(0, importFullPath.lastIndexOf(\".\"));", "+        return !isStatic && SAME_PACKAGE_RULE_GROUP.equals(currentGroup)", "+                && samePackageDomainsRegExp.contains(importPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be7af525650ee364aa463bc19a731e88", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private boolean isIgnoredConstructorParam(DetailAST aAST)", "signatureAfterChange": "     private boolean isIgnoredConstructorParam(DetailAST ast)", "diff": ["-    private boolean isIgnoredConstructorParam(DetailAST aAST)", "+    private boolean isIgnoredConstructorParam(DetailAST ast)", "-        if ((aAST.getType() != TokenTypes.PARAMETER_DEF)", "-            || !mIgnoreConstructorParameter)", "+        if ((ast.getType() != TokenTypes.PARAMETER_DEF)", "+            || !ignoreConstructorParameter)", "-        final DetailAST parametersAST = aAST.getParent();", "+        final DetailAST parametersAST = ast.getParent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be802b3457154d697e5c3789a13a5056", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "d046bc2b832cc1d299b528a0c83b61dc032324ed", "commitAfterChange": "b8f2d25b644bf719774c5516e0681d54e38f6e36", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void finishProcessing()", "signatureAfterChange": "      @Override     public void finishProcessing()", "diff": ["-        final Map<String, Set<File>> propFilesMap =", "+        final SetMultimap<String, File> propFilesMap =", "+        checkExistenceOfTranslations(propFilesMap);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be8a1156500a4590199316c8f7fb0521", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private Object doMakeObject(String aName)         throws CheckstyleException", "signatureAfterChange": "     private Object doMakeObject(String name)         throws CheckstyleException", "diff": ["-    private Object doMakeObject(String aName)", "+    private Object doMakeObject(String name)", "-        //try aName first", "+        //try name first", "-            return createObject(aName);", "+            return createObject(name);", "-        for (String packageName : mPackages) {", "+        for (String packageName : packages) {", "-            final String className = packageName + aName;", "+            final String className = packageName + name;", "-        throw new CheckstyleException(\"Unable to instantiate \" + aName);", "+        throw new CheckstyleException(\"Unable to instantiate \" + name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beb203a5e4574e3eaf87e23d92e7cb8a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck.java", "commitBeforeChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "commitAfterChange": "29027109bf962f47b6a6000fdca69b5679ce4b43", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setHeaderFile(String aFileName)", "signatureAfterChange": "     public void setHeaderFile(String fileName)", "diff": ["-    public void setHeaderFile(String aFileName)", "+    public void setHeaderFile(String fileName)", "-        if ((aFileName == null) || (aFileName.trim().length() == 0)) {", "+        if ((fileName == null) || (fileName.trim().length() == 0)) {", "-        mFilename = aFileName;", "+        filename = fileName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beda81e7f9757970877964858ccf5b11", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/IntMatchFilterTest.java", "commitBeforeChange": "7abbd6af2f63a9e5bfa067f3058b5a3e738971de", "commitAfterChange": "8d242382f8bb77488b6da23bdd0d2d61583703fc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public void testEquals()", "signatureAfterChange": "          public void testEquals()", "diff": ["-        final Filter filter = new IntMatchFilter(0);", "-        final Filter filter2 = new IntMatchFilter(0);", "-        final Filter filter3 = new IntMatchFilter(1);", "+        final IntFilter filter = new IntMatchFilter(0);", "+        final IntFilter filter2 = new IntMatchFilter(0);", "+        final IntFilter filter3 = new IntMatchFilter(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bee571a7ca84f829f84edd4e1f044bde", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceBeforeCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final String line = getLine(aAST.getLineNo() - 1);", "-        final int before = aAST.getColumnNo() - 1;", "+        final String line = getLine(ast.getLineNo() - 1);", "+        final int before = ast.getColumnNo() - 1;", "-            if (aAST.getType() == TokenTypes.SEMI) {", "-                final DetailAST sibling = aAST.getPreviousSibling();", "+            if (ast.getType() == TokenTypes.SEMI) {", "+                final DetailAST sibling = ast.getPreviousSibling();", "-            boolean flag = !mAllowLineBreaks;", "+            boolean flag = !allowLineBreaks;", "-                log(aAST.getLineNo(), before, \"ws.preceded\", aAST.getText());", "+                log(ast.getLineNo(), before, \"ws.preceded\", ast.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bee837adcdf142e71d9bca1a35a68bef", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "0f06b92909939244a6bc872bf40fa37e349c19f2", "commitAfterChange": "5e0b6286ac1e4f52c9769c764bc2978ab0fc0037", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        final String name = TokenTypes.getTokenName(ast.getType());", "+        final String name = Utils.getTokenName(ast.getType());", "-                    final String descendantName = TokenTypes", "+                    final String descendantName = Utils", "-                    final String descendantName = TokenTypes", "+                    final String descendantName = Utils"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beed48765b1399fa0ea131eb7a5d2efd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "8a65d2ff82f04e50b9a5bc37408b594aeeeae5af", "commitAfterChange": "92ea4cfb5182dbe4ba625ab10e8a95a683607f19", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     LocalizedMessage[] getMessages()", "signatureAfterChange": "     LocalizedMessage[] getMessages()", "diff": ["-        checkUnused();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "befa7f399b877aae891a3c407ee20442", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private Checker createChecker()", "signatureAfterChange": "     private Checker createChecker()", "diff": ["-                    mConfigLocation,", "+                    configLocation,", "-                    mOmitIgnoredModules);", "+                    omitIgnoredModules);", "-                    mClasspath);", "+                    classpath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf7e7f73fa807d0c5398e1360464e0d1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void setBasedir(String aBasedir)", "signatureAfterChange": "     public void setBasedir(String basedir)", "diff": ["-    /** @param aBasedir the base directory to strip off in filenames */", "-    public void setBasedir(String aBasedir)", "+    /** @param basedir the base directory to strip off in filenames */", "+    public void setBasedir(String basedir)", "-        mBasedir = normalize(aBasedir);", "+        this.basedir = normalize(basedir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf83bea2c8dc67eeb386f69e2d1b67a8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java", "commitBeforeChange": "cf5946b2ce5243a28af470609684f2209e3c962a", "commitAfterChange": "302031989566e096adc3e87c935ab47202a7ce3e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public Object convert(Class aType, Object aValue)         throws ConversionException", "signatureAfterChange": "     public Object convert(Class aType, Object aValue)         throws ConversionException", "diff": ["-        if (mModel.getClass() == aValue.getClass()) {", "+        if (sModel.getClass() == aValue.getClass()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf92e1de0d58709285c04434cd547fe7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void processLines(FileText text)", "signatureAfterChange": "     public void processLines(FileText fileText)", "diff": ["-    public void processLines(FileText text) {", "-        this.text = new FileText(text);", "+    public void processLines(FileText fileText) {", "+        this.text = new FileText(fileText);", "-            matcher = options.getPattern().matcher(text.getFullText());", "+            matcher = options.getPattern().matcher(fileText.getFullText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf9f6598f43f755392b1e5b643fc6f22", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private List<DetailNode> getAllNewlineNodes(DetailNode aDescriptionNode)", "signatureAfterChange": "     private List<DetailNode> getAllNewlineNodes(DetailNode descriptionNode)", "diff": ["-    private List<DetailNode> getAllNewlineNodes(DetailNode aDescriptionNode)", "+    private List<DetailNode> getAllNewlineNodes(DetailNode descriptionNode)", "-        DetailNode node = JavadocUtils.getFirstChild(aDescriptionNode);", "+        DetailNode node = JavadocUtils.getFirstChild(descriptionNode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfda8d4f492974c38d082e11e5b2eae6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void addFileSetCheck(FileSetCheck aFileSetCheck)", "signatureAfterChange": "     public void addFileSetCheck(FileSetCheck fileSetCheck)", "diff": ["-    public void addFileSetCheck(FileSetCheck aFileSetCheck)", "+    public void addFileSetCheck(FileSetCheck fileSetCheck)", "-        aFileSetCheck.setMessageDispatcher(this);", "-        mFileSetChecks.add(aFileSetCheck);", "+        fileSetCheck.setMessageDispatcher(this);", "+        fileSetChecks.add(fileSetCheck);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c00dc02e8666c36e7af6f7b1c64898e0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected final Class<?> tryLoadClass(Token ident, String currentClass)", "signatureAfterChange": "     protected final Class<?> tryLoadClass(Token ident, String currentClassName)", "diff": ["-    protected final Class<?> tryLoadClass(Token ident, String currentClass) {", "-        final Class<?> clazz = resolveClass(ident.getText(), currentClass);", "+    protected final Class<?> tryLoadClass(Token ident, String currentClassName) {", "+        final Class<?> clazz = resolveClass(ident.getText(), currentClassName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c011709242c4f7958f596d04382957a6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalThrowsCheck.java", "commitBeforeChange": "7dfac0f667e848d2642ee5b5e8fd11cd908aca62", "commitAfterChange": "3c63c31901ca2e6714fe922f695135718198dd06", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public IllegalThrowsCheck()", "signatureAfterChange": "     public IllegalThrowsCheck()", "diff": ["+        setIgnoredMethodNames(DEFAULT_IGNORED_METHOD_NAMES);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c01ce8a383bb235f97a3b11c04f4fe4a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "fa128598e1f70bbfb8a953dc8cb8b791a5fa67d2", "commitAfterChange": "d3f39e6b87a10ee26aa8da532b545e54090e7761", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void testInner()         throws Exception", "signatureAfterChange": "      public void testInner()         throws Exception", "diff": ["-            \"InputInner.java:17: variable 'data' missing Javadoc.\",", "-            \"InputInner.java:17: variable 'data' must be private and have accessor methods.\",", "+            \"InputInner.java:17: variable 'fData' missing Javadoc.\",", "-            \"InputInner.java:30: variable 'data' missing Javadoc.\",", "-            \"InputInner.java:30: variable 'data' must be private and have accessor methods.\"", "+            \"InputInner.java:30: variable 'rData' missing Javadoc.\",", "+            \"InputInner.java:30: variable 'rData' must be private and have accessor methods.\"", "+        };", "+        verify(c, \"InputInner.java\", expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c02f219ef1130d1fcad58de1016953a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "f2efe4d020ae63dad5b14495fa6ec3d2df16b2a5", "commitAfterChange": "bf3e77cc87f01b9ea0d205933749770398fa623b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "         @Override         public ResourceBundle newBundle(String aBaseName, Locale aLocale, String aFormat,                  ClassLoader aLoader, boolean aReload) throws IOException", "signatureAfterChange": "         @Override         public ResourceBundle newBundle(String aBaseName, Locale aLocale, String aFormat,                  ClassLoader aLoader, boolean aReload) throws IOException", "diff": ["-            ResourceBundle bundle = null;", "+            ResourceBundle resourceBundle = null;", "-                    bundle = new PropertyResourceBundle(streamReader);", "+                    resourceBundle = new PropertyResourceBundle(streamReader);", "-            return bundle;", "+            return resourceBundle;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0322f6189a7a4635ca3382e4be97cb6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LabelHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected IndentLevel getLevelImpl()", "signatureAfterChange": "      @Override     protected IndentLevel getIndentImpl()", "diff": ["-    protected IndentLevel getLevelImpl() {", "-        final IndentLevel level = new IndentLevel(super.getLevelImpl(), -getBasicOffset());", "-        level.addAcceptedIndent(super.getLevelImpl());", "+    protected IndentLevel getIndentImpl() {", "+        final IndentLevel level = new IndentLevel(super.getIndentImpl(), -getBasicOffset());", "+        level.addAcceptedIndent(super.getIndentImpl());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c07f21dc07b08be88f468565f7fdbc28", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/transmogrify/ClassDef.java", "commitBeforeChange": "cf27285c85613a0963903ddf6b683aa586f90aa5", "commitAfterChange": "adc04337ea44d4e6b0ff8ec5efedd11ecd263646", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void setSuperclass(IClass superclass)", "signatureAfterChange": "      public void setSuperclass(IClass newSuperclass)", "diff": ["-    public void setSuperclass(IClass superclass) {", "-        this.superclass = superclass;", "+    public void setSuperclass(IClass newSuperclass) {", "+        this.superclass = newSuperclass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c08757a47267e1a452b06a833d7fafe1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private boolean containsForbiddenFragment(String aFirstSentence)", "signatureAfterChange": "     private boolean containsForbiddenFragment(String firstSentence)", "diff": ["-    private boolean containsForbiddenFragment(String aFirstSentence)", "+    private boolean containsForbiddenFragment(String firstSentence)", "-        // This regexp is used to convert multiline javadoc to single line without stars.", "-        String javadocText = aFirstSentence.replaceAll(\"\\n[ ]+(\\\\*)|^[ ]+(\\\\*)\", \" \");", "+        // This regexp is used to convert multiline javdoc to single line without stars.", "+        String javadocText = firstSentence.replaceAll(\"\\n[ ]+(\\\\*)|^[ ]+(\\\\*)\", \" \");", "-        return mForbiddenSummaryFragments.matcher(javadocText).find();", "+        return forbiddenSummaryFragments.matcher(javadocText).find();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0add846e6f51001643a86ee6631d771", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     static String replaceProperties(             String aValue, PropertyResolver aProps, String aDefaultValue)         throws CheckstyleException", "signatureAfterChange": "     static String replaceProperties(             String value, PropertyResolver props, String defaultValue)         throws CheckstyleException", "diff": ["-            String aValue, PropertyResolver aProps, String aDefaultValue)", "+            String value, PropertyResolver props, String defaultValue)", "-        if (aValue == null) {", "+        if (value == null) {", "-        parsePropertyString(aValue, fragments, propertyRefs);", "+        parsePropertyString(value, fragments, propertyRefs);", "-                fragment = aProps.resolve(propertyName);", "+                fragment = props.resolve(propertyName);", "-                    if (aDefaultValue != null) {", "-                        return aDefaultValue;", "+                    if (defaultValue != null) {", "+                        return defaultValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0dd8d5730fb1544efe11be7936c8fee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private boolean isImmutableFieldDefinedInFinalClass(DetailAST variableDef)", "signatureAfterChange": "     private boolean isImmutableFieldDefinedInFinalClass(DetailAST variableDef)", "diff": ["-        return classModifiers.contains(\"final\") && isImmutableField(variableDef);", "+        return classModifiers.contains(FINAL_KEYWORD) && isImmutableField(variableDef);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0f84eb5d9a1c66f6f81924d5f010a14", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java", "commitBeforeChange": "3c0c72f96477afb542ee37b3336f4b7b7613ff29", "commitAfterChange": "6f0a3dee5efc6217383f9bfd6d7a3a116b1c885b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIllegalAbstractClassName() throws Exception", "signatureAfterChange": "     @Test     public void testIllegalAbstractClassName() throws Exception", "diff": ["-        checkConfig.addAttribute(\"checkName\", \"true\");", "-        checkConfig.addAttribute(\"checkModifier\", \"false\");", "+        checkConfig.addAttribute(\"ignoreName\", \"false\");", "+        checkConfig.addAttribute(\"ignoreModifier\", \"true\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c10099dd85422f15f8ade24b5d17d887", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NestedIfDepthCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void leaveLiteralIf(DetailAST aIf)", "signatureAfterChange": "     private void leaveLiteralIf(DetailAST literalIf)", "diff": ["-    private void leaveLiteralIf(DetailAST aIf)", "+    private void leaveLiteralIf(DetailAST literalIf)", "-        if (!CheckUtils.isElseIf(aIf)) {", "+        if (!CheckUtils.isElseIf(literalIf)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c10c109a725eefc6bef9e921154fb59d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PackageNamesLoaderTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testPackagesWithIoException_getResources() throws Exception", "signatureAfterChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testPackagesWithIoExceptionGetResources() throws Exception", "diff": ["-    public void testPackagesWithIoException_getResources() throws Exception {", "+    public void testPackagesWithIoExceptionGetResources() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c13dc24b0c3a048a029c914aa75b008f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheck.java", "commitBeforeChange": "889f470ea6ca16b3067e35e2463282d9678f7bf0", "commitAfterChange": "80c8e1c7a8f32c0dd263fdd30d9d87ade317f51c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean findNonCommentMatch(             String aLine, int aLineNumber, int aStartPosition)", "signatureAfterChange": "     private boolean findNonCommentMatch(             String aLine, int aLineNumber, int aStartPosition)", "diff": ["-                else {", "-                    // end of line reached", "-                    return false;", "-                }", "+                // end of line reached", "+                return false;", "-            else {", "-                // not intersecting with comment", "-                return true;", "-            }", "+            // not intersecting with comment", "+            return true;", "-        else {", "-            // no match is found", "-            return false;", "-        }", "+        // no match is found", "+        return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c14e1ca1b1f1ce2d2193747922579e6e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/InputIllegalTokens.java", "commitBeforeChange": "fee4ea98984da7b06b33d8a7cd64d7ec79c3db10", "commitAfterChange": "dd47d21b9eb0d254016315790db9be5db2c28ea4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void defaultMethod()", "signatureAfterChange": "     public void methodWithPreviouslyIllegalTokens()", "diff": ["-    public void defaultMethod()", "+    public void methodWithPreviouslyIllegalTokens()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c16a7ff57f64e16783d04c15d64f7366", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private void tagSuppressions(Collection<TextBlock> comments)", "signatureAfterChange": "     private void tagSuppressions(Collection<TextBlock> comments)", "diff": ["-            tagCoontLine(text[0], startLineNo, comment.getStartColNo());", "+            tagCommentLine(text[0], startLineNo, comment.getStartColNo());", "-                tagCoontLine(text[i], startLineNo + i, 0);", "+                tagCommentLine(text[i], startLineNo + i, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c17c75ef7c5393db5ba1b7755396aec7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java", "commitBeforeChange": "f0ea60f77bbc5e524320b042d7a90eefbf2bd00d", "commitAfterChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static String getJavadocCommentContent(DetailAST javdocCommentBegin)", "signatureAfterChange": "     public static String getJavadocCommentContent(DetailAST javadocCommentBegin)", "diff": ["-    public static String getJavadocCommentContent(DetailAST javdocCommentBegin) {", "-        final DetailAST commentContent = javdocCommentBegin.getFirstChild();", "+    public static String getJavadocCommentContent(DetailAST javadocCommentBegin) {", "+        final DetailAST commentContent = javadocCommentBegin.getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c18aba26c571b31e12d46c78eaf8a0d5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java", "commitBeforeChange": "3a20dbe8edafe0cca300b7b9dfa48effa9a36a06", "commitAfterChange": "5026b7228df4e3d9b79d13f27846987247f9e922", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-        currentVariables.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1ad83c17aa9cd549f979f80a5da6765", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     private static List<JavadocTag> getMultilineNoArgTags(final Matcher noargMultilineStart,             final String[] lines, final int lineIndex, final int tagLine)", "signatureAfterChange": "     private static List<JavadocTag> getMultilineNoArgTags(final Matcher noargMultilineStart,             final String[] lines, final int lineIndex, final int tagLine)", "diff": ["-        final String p1 = noargMultilineStart.group(1);", "+        final String param1 = noargMultilineStart.group(1);", "-                tags.add(new JavadocTag(tagLine, col, p1));", "+                tags.add(new JavadocTag(tagLine, col, param1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2240db348771e7f2d3faaae405e4729", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtils.java", "commitBeforeChange": "5e0f360e7b7745a362bd7a655e98654a2ad36443", "commitAfterChange": "3813f1ccbf157f463c041ccfc462399845ddff6e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static boolean isInInterfaceOrAnnotationBlock(DetailAST aAST)", "signatureAfterChange": "     public static boolean isInInterfaceOrAnnotationBlock(DetailAST node)", "diff": ["-    public static boolean isInInterfaceOrAnnotationBlock(DetailAST aAST) {", "-        return isInInterfaceBlock(aAST) || isInAnnotationBlock(aAST);", "+    public static boolean isInInterfaceOrAnnotationBlock(DetailAST node) {", "+        return isInInterfaceBlock(node) || isInAnnotationBlock(node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c22f6034ac4fda1a894acaa1b987625d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean isIgnoredSetterParam(DetailAST aAST, String aName)", "signatureAfterChange": "     private boolean isIgnoredSetterParam(DetailAST ast, String name)", "diff": ["-    private boolean isIgnoredSetterParam(DetailAST aAST, String aName)", "+    private boolean isIgnoredSetterParam(DetailAST ast, String name)", "-        if (aAST.getType() != TokenTypes.PARAMETER_DEF", "-            || !mIgnoreSetter)", "+        if (ast.getType() != TokenTypes.PARAMETER_DEF", "+            || !ignoreSetter)", "-        //single parameter?", "-        final DetailAST parametersAST = aAST.getParent();", "+        //single pnameter?", "+        final DetailAST parametersAST = ast.getParent();", "-        //method parameter, not constructor parameter?", "+        //method pnameter, not constructor pnameter?", "-        final String expectedName = \"set\" + capitalize(aName);", "+        final String expectedName = \"set\" + capitalize(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c23a3db4bbdade6061e4830db49e4bd0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/MethodParamPadCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if ((aAST.getType() == TokenTypes.METHOD_CALL)) {", "-            parenAST = aAST;", "+        if ((ast.getType() == TokenTypes.METHOD_CALL)) {", "+            parenAST = ast;", "-            parenAST = aAST.findFirstToken(TokenTypes.LPAREN);", "+            parenAST = ast.findFirstToken(TokenTypes.LPAREN);", "-            if (!mAllowLineBreaks) {", "+            if (!allowLineBreaks) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c23b76f4341e2d97103bd8ae15e9d226", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "e90dbc731d23b31eaf01461041bdc67d9b999224", "commitAfterChange": "51848478fd296d6d88c31cdf33f4d98197f5d036", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void setOnCommentFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setOnCommentFormat(String aFormat)         throws ConversionException", "diff": ["-            mOnCommentFormat = aFormat;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c27442bbbc413948d4ecf4bd0e509f55", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/SeparatorWrapCheck.java", "commitBeforeChange": "30438ebdf9fd28a94613e2aaecde776d906349a7", "commitAfterChange": "5c9e55ae70af0456e1634211ccac54c40a92cfba", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                && substringBeforeToken.length() == 0) {", "+                && substringBeforeToken.isEmpty()) {", "-                 && substringAfterToken.length() == 0) {", "+                 && substringAfterToken.isEmpty()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c274773b40a972dc6ea3abff81df2a27", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentLevel.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public IndentLevel(IndentLevel aBase, int... aOffsets)", "signatureAfterChange": "     public IndentLevel(IndentLevel base, int... offsets)", "diff": ["-    public IndentLevel(IndentLevel aBase, int... aOffsets)", "+    public IndentLevel(IndentLevel base, int... offsets)", "-        final BitSet src = aBase.mLevels;", "+        final BitSet src = base.levels;", "-            for (int offset : aOffsets) {", "-                mLevels.set(i + offset);", "+            for (int offset : offsets) {", "+                levels.set(i + offset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c299e46249930bb048d604da401e6d37", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java", "commitBeforeChange": "9cff1673f1d42910c654e0af5365d68591f104f0", "commitAfterChange": "b83c9aceef9577eaada5cfd78bc7b2cd04a176d1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private boolean isMatch(String aLine, int aHeaderLineNo)", "signatureAfterChange": "     private boolean isMatch(String aLine, int aHeaderLineNo)", "diff": ["-        return getRegexpHeaderInfo().getHeaderRegexps().get(aHeaderLineNo)", "-                .matcher(aLine).find();", "+        return mHeaderRegexps.get(aHeaderLineNo).matcher(aLine).find();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2b7bfe74eadfdeb757fa03c562dd13b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "a360c43b35478a740c799b97b8eb69333b4c66b8", "commitAfterChange": "bc83a3a82fc14ac5f83dca972d7e48776d2b98d9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            processIDENT(ast);", "+            processIdent(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2ffdb18978f582a3eae677113507a8c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public final void setSeparateLineBetweenGroups(boolean aValue)", "signatureAfterChange": "     public final void setSeparateLineBetweenGroups(boolean value)", "diff": ["-    public final void setSeparateLineBetweenGroups(boolean aValue)", "+    public final void setSeparateLineBetweenGroups(boolean value)", "-        mSeparateLineBetweenGroups = aValue;", "+        separateLineBetweenGroups = value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c301286595a945c25cfba9c4e5df6da1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java", "commitBeforeChange": "52e2087c404986f8e12cd8579be7b2333961e1a3", "commitAfterChange": "c38185458ab824874b8465c46b4dc42646440aaa", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private AccessResult localCheckAccess(final String aForImport,         final String aInPkg)", "signatureAfterChange": "     private AccessResult localCheckAccess(final String aForImport,         final String aInPkg)", "diff": ["-            final AccessResult result = g.verifyImport(aForImport, aInPkg);", "+            final AccessResult result = g.verifyImport(aForImport);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c30df8983e4c36b63958a16247137380", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AllChecksTest.java", "commitBeforeChange": "3ebddae1b928b69793717d4e207b660b31fefdb5", "commitAfterChange": "63f01249f8da8e1454492e04106bc14075fe4dbd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private static Set<String> getChecksNames(Set<Class<?>> checks)", "signatureAfterChange": "     private static Set<String> getSimpleNames(Set<Class<?>> checks)", "diff": ["-    private static Set<String> getChecksNames(Set<Class<?>> checks) {", "+     */", "+    private static Set<String> getSimpleNames(Set<Class<?>> checks) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c316a49f8d2d147cd903d30429498b61", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setModuleId(final String aModuleId)", "signatureAfterChange": "     public void setModuleId(final String moduleId)", "diff": ["-    public void setModuleId(final String aModuleId)", "+    public void setModuleId(final String moduleId)", "-        mModuleId = aModuleId;", "+        this.moduleId = moduleId;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3326a16a35853fd61f006342e533d8f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/MethodCountCheck.java", "commitBeforeChange": "a6e4d310c0e38d73e7816a5fb57e66fc221d79ec", "commitAfterChange": "5c6e03a868c0f756ccd3bb9b796febbbbf25bd4e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void setMaxProtected(int maxProtected)", "signatureAfterChange": "     public void setMaxProtected(int aValue)", "diff": ["-    public void setMaxProtected(int maxProtected)", "+     */", "+    public void setMaxProtected(int aValue)", "-        mMaxProtected = maxProtected;", "+        mMaxProtected = aValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3343432e12c813ad33e51cc98e75677", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java", "commitBeforeChange": "067896807847df81ba6e65195e4f39069dc3aea7", "commitAfterChange": "bc0bf95daedb6f0e658187d6e44410a60f46dbe2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic ConfigurationBuilder(File aROOT) \t\t\tthrows CheckstyleException, IOException", "signatureAfterChange": "  \tpublic ConfigurationBuilder(File aROOT) \t\t\tthrows CheckstyleException, IOException", "diff": ["-\t\tROOT = aROOT;", "+\t\troot = aROOT;", "-\t\tlistFiles(files, ROOT, \"java\");", "+\t\tlistFiles(files, root, \"java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c37b064e9911077e477fbf42d75c2121", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Override     public void fileStarted(AuditEvent aEvt)", "signatureAfterChange": "     @Override     public void fileStarted(AuditEvent evt)", "diff": ["-    public void fileStarted(AuditEvent aEvt)", "+    public void fileStarted(AuditEvent evt)", "-        mWriter.println(\"<file name=\\\"\" + encode(aEvt.getFileName()) + \"\\\">\");", "+        writer.println(\"<file name=\\\"\" + encode(evt.getFileName()) + \"\\\">\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3a7aa4278a11cddd5e4c0655c28998f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "         public String getImportFullPath()", "signatureAfterChange": "         public String getImportFullPath()", "diff": ["-            return mImportFullPath;", "+            return importFullPath;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3dc45ba5202ee28a06d358df5da00f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FullIdent.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void append(String aText)", "signatureAfterChange": "     private void append(String text)", "diff": ["-    private void append(String aText)", "+    private void append(String text)", "-        mBuffer.append(aText);", "+        buffer.append(text);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c40307b61606788e1362ef6baa645a9d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheck.java", "commitBeforeChange": "f1cff12b20f8c89069d202ab0419ab8bd1d71db6", "commitAfterChange": "686d009cf4d21d0ace52b9e7dccc848e8b9ce91a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public TypeNameCheck()", "signatureAfterChange": "     public TypeNameCheck()", "diff": ["-        super(\"^[A-Z][a-zA-Z0-9]*$\");", "+        super(DEFAULT_PATTERN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c41e25f6c86c731d5a1bbd241d800bcf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/IntFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     boolean accept(int aInt);", "signatureAfterChange": "     boolean accept(int intValue);", "diff": ["-    boolean accept(int aInt);", "+    boolean accept(int intValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4532fc26d113fe446acc95a0ee39b6c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean isTerminated(final DetailAST aAST, boolean aUseBreak,                                  boolean aUseContinue)", "signatureAfterChange": "     private boolean isTerminated(final DetailAST ast, boolean useBreak,                                  boolean useContinue)", "diff": ["-    private boolean isTerminated(final DetailAST aAST, boolean aUseBreak,", "-                                 boolean aUseContinue)", "+    private boolean isTerminated(final DetailAST ast, boolean useBreak,", "+                                 boolean useContinue)", "-        switch (aAST.getType()) {", "+        switch (ast.getType()) {", "-            return aUseBreak;", "+            return useBreak;", "-            return aUseContinue;", "+            return useContinue;", "-            return checkSlist(aAST, aUseBreak, aUseContinue);", "+            return checkSlist(ast, useBreak, useContinue);", "-            return checkIf(aAST, aUseBreak, aUseContinue);", "+            return checkIf(ast, useBreak, useContinue);", "-            return checkLoop(aAST);", "+            return checkLoop(ast);", "-            return checkTry(aAST, aUseBreak, aUseContinue);", "+            return checkTry(ast, useBreak, useContinue);", "-            return checkSwitch(aAST, aUseContinue);", "+            return checkSwitch(ast, useContinue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c469ca69c01d54f5e9c81a1ed86b41ae", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "d8286130e83dc672d30cd00eddbf6b5f77112521", "commitAfterChange": "5d31b9e6ef9b950a2f04535d2bba6eac446949bc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void processIdent(DetailAST aAST)", "signatureAfterChange": "     private void processIdent(DetailAST aAST)", "diff": ["-        processJavadoc(aAST);", "+        if (mProcessJavadoc) {", "+            processJavadoc(aAST);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c47480eec0d4b261846fa4dbd458f079", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalThrowsCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private boolean shouldIgnoreMethod(String aName)", "signatureAfterChange": "     private boolean shouldIgnoreMethod(String name)", "diff": ["-    private boolean shouldIgnoreMethod(String aName)", "+    private boolean shouldIgnoreMethod(String name)", "-        return mIgnoredMethodNames.contains(aName);", "+        return ignoredMethodNames.contains(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c47d4d5aeb8c2519ac4c697115e97f19", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "         boolean isStaticType()", "signatureAfterChange": "         boolean isStaticType()", "diff": ["-            return mStaticType;", "+            return staticType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c485ff60284c9ba2eab2c2da1e7de4c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java", "commitBeforeChange": "d519abdf5324474d16b365c4bb603dd2a1ffa52a", "commitAfterChange": "b17515919bd8064e7c6c245956395407bd59a3e7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public JTreeTable(ParseTreeTableModel treeTableModel)", "signatureAfterChange": "     public JTreeTable(ParseTreeTableModel treeTableModel)", "diff": ["+        setColumnsInitialWidth();", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4919b788fbf5758f3fde690dd932719", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "c2d3932843e70e4bb5df7161800aca248f9af778", "commitAfterChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private ResourceBundle getBundle(String aBundleName)", "signatureAfterChange": "     private ResourceBundle getBundle(String aBundleName)", "diff": ["-        synchronized (sBundleCache) {", "-            ResourceBundle bundle = (ResourceBundle) sBundleCache", "+        synchronized (BUNDLE_CACHE) {", "+            ResourceBundle bundle = (ResourceBundle) BUNDLE_CACHE", "-                sBundleCache.put(aBundleName, bundle);", "+                BUNDLE_CACHE.put(aBundleName, bundle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c499ebe4df7ea3c2297098dafecb3144", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/JavadocTagInfoTest.java", "commitBeforeChange": "5306bb6be95e167b22f867803b8376f2cb876aff", "commitAfterChange": "3440ef73c97ca652c2cbce15836f5eaadeab03f4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testTypeValues()", "signatureAfterChange": "     @Test     public void testTypeValues()", "diff": ["-        assertEquals(expected, actual);", "+        assertArrayEquals(expected, actual);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4ae31c4406d74daa75ecc1244f58851", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "0a70130d577d392c0100fee2807986bc6c811b02", "commitAfterChange": "303d7cc6182e72f5472c8bcd9aa37432986793d1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private boolean isExtraHtml(String token, FastStack<HtmlTag> htmlStack)", "signatureAfterChange": "     private boolean isExtraHtml(String token, Deque<HtmlTag> htmlStack)", "diff": ["-    private boolean isExtraHtml(String token, FastStack<HtmlTag> htmlStack)", "+    private boolean isExtraHtml(String token, Deque<HtmlTag> htmlStack)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4b910de21ab98992784a068533a1eca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "          @Override         @SuppressWarnings(\"unchecked\")         public void drop(DropTargetDropEvent evt)", "signatureAfterChange": "          @Override         @SuppressWarnings(\"unchecked\")         public void drop(DropTargetDropEvent evt)", "diff": ["-                final Transferable tr = evt.getTransferable();", "+                final Transferable transferable = evt.getTransferable();", "-                if (tr.isDataFlavorSupported(DataFlavor.javaFileListFlavor)) {", "+                if (transferable.isDataFlavorSupported(DataFlavor.javaFileListFlavor)) {", "-                    final List<File> fileList = (List<File>) tr.getTransferData(", "+                    final List<File> fileList = (List<File>) transferable.getTransferData(", "-                    final JComponent jc = (JComponent) component;", "-                    jc.setBorder(normalBorder);", "+                    final JComponent comp = (JComponent) component;", "+                    comp.setBorder(normalBorder);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4d5442a1d3fecd2278f869b3335475d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CommitValidationTest.java", "commitBeforeChange": "bc797f31e2c84f88e03378f6e7b6832dd04f3049", "commitAfterChange": "0fc8b62a35beddc89cb3412388c27e88cd8cab4a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private static String getRulesForCommitMessageFormatting()", "signatureAfterChange": "      private static String getRulesForCommitMessageFormatting()", "diff": ["-                + \"        \" + OTHER_COMMIT_MESSAGE_REGEXPATTERN + \"\\n\"", "+                + \"        \" + OTHER_COMMIT_MESSAGE_REGEX_PATTERN + \"\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4f4d718f3b2b68dac83fadf54a1ec0a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitJavadocToken(DetailNode ast)", "signatureAfterChange": "      @Override     public void visitJavadocToken(DetailNode ast)", "diff": ["-            log(ast.getLineNumber(), \"summary.first.sentence\");", "+            log(ast.getLineNumber(), SUMMARY_FIRST_SENTENCE);", "-                log(ast.getLineNumber(), \"summary.javaDoc\");", "+                log(ast.getLineNumber(), SUMMARY_JAVADOC);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4fa12acade92d97ac7b01fd272b226f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/XMLLoggerTest.java", "commitBeforeChange": "59fa63c67d44757974a88e8210d7263497155272", "commitAfterChange": "c6df3098271228399655bdb581203c0708b24614", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testIsReference()         throws IOException", "signatureAfterChange": "      @Test     public void testIsReference()         throws IOException", "diff": ["-                       logger.isReference(reference[i]));", "+                       XMLLogger.isReference(reference[i]));", "-                       logger.isReference(noReference[i]));", "+                       XMLLogger.isReference(noReference[i]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5062e06d33c9d7d1d737e79ffd796b6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "commitBeforeChange": "d2af4accdde3eac0a2103353f490e97bf62f61d2", "commitAfterChange": "d4b933799af120cf4a8490db98f396b6348430e9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-        final AbstractOption wOp = getAbstractOption();", "+        final OperatorWrapOption wOp = getAbstractOption();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c50f7157643657d8ceba5ffcd586584d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java", "commitBeforeChange": "c2ce485b481ba4bd26eb3ba2e3cc6c1850539e0c", "commitAfterChange": "e615817b5bff08ada2fce5f43e9e1bcae4e77c38", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test(expected = IllegalStateException.class)     public void testVisitTokenWhithWrongTokenType()", "signatureAfterChange": "      @Test(expected = IllegalStateException.class)     public void testVisitTokenWithWrongTokenType()", "diff": ["-    public void testVisitTokenWhithWrongTokenType() {", "+    public void testVisitTokenWithWrongTokenType() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c520604f32085affa0d8a194fff6319f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractViolationReporter.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     String getMessageBundle(final String aClassName)", "signatureAfterChange": "     String getMessageBundle(final String className)", "diff": ["-    String getMessageBundle(final String aClassName)", "+    String getMessageBundle(final String className)", "-        final int endIndex = aClassName.lastIndexOf('.');", "+        final int endIndex = className.lastIndexOf('.');", "-        final String packageName = aClassName.substring(0, endIndex);", "+        final String packageName = className.substring(0, endIndex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5335c54deb4e109b36c85196286255d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static FilterSet loadSuppressions(             InputSource aSource, String aSourceName)         throws CheckstyleException", "signatureAfterChange": "     private static FilterSet loadSuppressions(             InputSource source, String sourceName)         throws CheckstyleException", "diff": ["-            InputSource aSource, String aSourceName)", "+            InputSource source, String sourceName)", "-            suppressionsLoader.parseInputSource(aSource);", "+            suppressionsLoader.parseInputSource(source);", "-            throw new CheckstyleException(\"unable to find \" + aSourceName, e);", "+            throw new CheckstyleException(\"unable to find \" + sourceName, e);", "-            throw new CheckstyleException(\"unable to parse \" + aSourceName, e);", "+            throw new CheckstyleException(\"unable to parse \" + sourceName, e);", "-                    + aSourceName + \" - \" + e.getMessage(), e);", "+                    + sourceName + \" - \" + e.getMessage(), e);", "-            throw new CheckstyleException(\"unable to read \" + aSourceName, e);", "+            throw new CheckstyleException(\"unable to read \" + sourceName, e);", "-                + aSourceName + \" - \" + e.getMessage(), e);", "+                + sourceName + \" - \" + e.getMessage(), e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5340f254a9a8c55f643866de541ae28", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractIllegalCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected final boolean isIllegalClassName(final String aIdent)", "signatureAfterChange": "     protected final boolean isIllegalClassName(final String ident)", "diff": ["-    protected final boolean isIllegalClassName(final String aIdent)", "+    protected final boolean isIllegalClassName(final String ident)", "-        return mIllegalClassNames.contains(aIdent);", "+        return illegalClassNames.contains(ident);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c557360360b03cc2a731a8b54defa42b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java", "commitBeforeChange": "067896807847df81ba6e65195e4f39069dc3aea7", "commitAfterChange": "bc0bf95daedb6f0e658187d6e44410a60f46dbe2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic File getROOT()", "signatureAfterChange": "  \tpublic File getRoot()", "diff": ["-\tpublic File getROOT() {", "-\t\treturn ROOT;", "+\tpublic File getRoot() {", "+\t\treturn root;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c564b7798468c0f4412607dcf07e17b3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "697895a2056ecb1fdde0ba1f21a10cb96fc91322", "commitAfterChange": "35de50c9405825eeb68357df2625b693d2748ed9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        final boolean isNotStaticAndLastImport = !isStatic && lastImportStatic;", "+        final boolean isLastImportAndNonStatic = lastImportStatic && !isStatic;", "-            if (isNotStaticAndLastImport) {", "+            if (isLastImportAndNonStatic) {", "-            doVisitToken(ident, isStatic, isNotStaticAndLastImport);", "+            doVisitToken(ident, isStatic, isLastImportAndNonStatic);", "-            doVisitToken(ident, isStatic, isNotStaticAndLastImport);", "+            doVisitToken(ident, isStatic, isLastImportAndNonStatic);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c574f2ee996ea6e67fc7e7f3fdd37631", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static DetailAST getArrayIdentifier(DetailAST aArrayDeclarator)", "signatureAfterChange": "     private static DetailAST getArrayIdentifier(DetailAST arrayDeclarator)", "diff": ["-    private static DetailAST getArrayIdentifier(DetailAST aArrayDeclarator)", "+    private static DetailAST getArrayIdentifier(DetailAST arrayDeclarator)", "-        return aArrayDeclarator.getParent().getNextSibling();", "+        return arrayDeclarator.getParent().getNextSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c59df0815220c2d63d0138ce3aa0cee6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "      @Test     public void test_generics_3() throws Exception", "signatureAfterChange": "      @Test     public void testGenerics3() throws Exception", "diff": ["-    public void test_generics_3() throws Exception {", "+    public void testGenerics3() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c59ecbea035761ae9978f515760f96a0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private boolean isEmptyLoop(DetailAST aAST, int aParentType)", "signatureAfterChange": "     private boolean isEmptyLoop(DetailAST ast, int parentType)", "diff": ["-    private boolean isEmptyLoop(DetailAST aAST, int aParentType)", "+    private boolean isEmptyLoop(DetailAST ast, int parentType)", "-        return mAllowEmptyLoops", "-            && (isEmptyBlock(aAST, aParentType, TokenTypes.LITERAL_FOR)", "-                    || isEmptyBlock(aAST,", "-                            aParentType, TokenTypes.LITERAL_WHILE)", "-                            || isEmptyBlock(aAST,", "-                                    aParentType, TokenTypes.LITERAL_DO));", "+        return allowEmptyLoops", "+            && (isEmptyBlock(ast, parentType, TokenTypes.LITERAL_FOR)", "+                    || isEmptyBlock(ast,", "+                            parentType, TokenTypes.LITERAL_WHILE)", "+                            || isEmptyBlock(ast,", "+                                    parentType, TokenTypes.LITERAL_DO));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5cd2dacdb37701036dd961a3393106a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FullIdent.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public String getText()", "signatureAfterChange": "     public String getText()", "diff": ["-        return mBuffer.toString();", "+        return buffer.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6b712d0d09c4f632715f24106c7c55f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "260d2b935c0b25688a11077ada9405b791857fd8", "commitAfterChange": "ad42ed29799a13b9426a05cc94b4a4aaba709c2c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void doVisitToken(FullIdent ident, boolean isStatic,             boolean previous)", "signatureAfterChange": "     private void doVisitToken(FullIdent ident, boolean isStatic,             boolean previous)", "diff": ["-        if (ident != null) {", "-            final String name = ident.getText();", "-            final int groupIdx = getGroupNumber(name);", "-            final int line = ident.getLineNo();", "+        final String name = ident.getText();", "+        final int groupIdx = getGroupNumber(name);", "+        final int line = ident.getLineNo();", "-            if (groupIdx > lastGroup) {", "-                // This check should be made more robust to handle", "-                // comments and imports that span more than one line.", "-                if (!beforeFirstImport && separated && line - lastImportLine < 2) {", "-                    log(line, MSG_SEPARATION, name);", "-                }", "+        if (groupIdx > lastGroup) {", "+            // This check should be made more robust to handle", "+            // comments and imports that span more than one line.", "+            if (!beforeFirstImport && separated && line - lastImportLine < 2) {", "+                log(line, MSG_SEPARATION, name);", "-            else if (groupIdx == lastGroup || sortStaticImportsAlphabetically", "-                     && isAlphabeticallySortableStaticImport(isStatic)) {", "-                doVisitTokenInSameGroup(isStatic, previous, name, line);", "-            }", "-            else {", "-                log(line, MSG_ORDERING, name);", "-            }", "-", "-            lastGroup = groupIdx;", "-            lastImport = name;", "+        else if (groupIdx == lastGroup || sortStaticImportsAlphabetically", "+                 && isAlphabeticallySortableStaticImport(isStatic)) {", "+            doVisitTokenInSameGroup(isStatic, previous, name, line);", "+        }", "+        else {", "+            log(line, MSG_ORDERING, name);", "+        }", "+", "+        lastGroup = groupIdx;", "+        lastImport = name;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6e15a9348bbe611e49e36850d236096", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean isObjectType(DetailAST aType)", "signatureAfterChange": "     private boolean isObjectType(DetailAST type)", "diff": ["-    private boolean isObjectType(DetailAST aType)", "+    private boolean isObjectType(DetailAST type)", "-        final int type = aType.getFirstChild().getType();", "-        return ((type == TokenTypes.IDENT) || (type == TokenTypes.DOT)", "-                || (type == TokenTypes.ARRAY_DECLARATOR));", "+        final int objectType = type.getFirstChild().getType();", "+        return ((objectType == TokenTypes.IDENT) || (objectType == TokenTypes.DOT)", "+                || (objectType == TokenTypes.ARRAY_DECLARATOR));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6ecb20a3d7d8c85c48910fdf3b5f956", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          @Override         public synchronized Object put(Object aKey, Object aValue)", "signatureAfterChange": "          @Override         public synchronized Object put(Object key, Object value)", "diff": ["-        public synchronized Object put(Object aKey, Object aValue)", "+        public synchronized Object put(Object key, Object value)", "-            final Object oldValue = super.put(aKey, aValue);", "-            if (oldValue != null && aKey instanceof String) {", "-                final String keyString = (String) aKey;", "-                mDuplicatedStrings.add(keyString);", "+            final Object oldValue = super.put(key, value);", "+            if (oldValue != null && key instanceof String) {", "+                final String keyString = (String) key;", "+                duplicatedStrings.add(keyString);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6f0f5b2b43d0b430ba37c0c5b589d81", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testCacheFile_changeInConfig() throws Exception", "signatureAfterChange": "      @Test     public void testCacheFileChangeInConfig() throws Exception", "diff": ["-    public void testCacheFile_changeInConfig() throws Exception {", "+    public void testCacheFileChangeInConfig() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c71864651cf292d259bd0b6102750e69", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/RegexpCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setDuplicateLimit(int aDuplicateLimit)", "signatureAfterChange": "     public void setDuplicateLimit(int duplicateLimit)", "diff": ["-    public void setDuplicateLimit(int aDuplicateLimit)", "+    public void setDuplicateLimit(int duplicateLimit)", "-        mDuplicateLimit = aDuplicateLimit;", "-        mCheckForDuplicates = (mDuplicateLimit > DEFAULT_DUPLICATE_LIMIT);", "+        this.duplicateLimit = duplicateLimit;", "+        checkForDuplicates = (duplicateLimit > DEFAULT_DUPLICATE_LIMIT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c72fd9d880e8438a6e8bab76fd9fcbe5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtils.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static boolean inInterfaceOrAnnotationBlock(DetailAST aAST)", "signatureAfterChange": "     public static boolean isInInterfaceOrAnnotationBlock(DetailAST aAST)", "diff": ["-    public static boolean inInterfaceOrAnnotationBlock(DetailAST aAST) {", "-        return inInterfaceBlock(aAST) || inAnnotationBlock(aAST);", "+    public static boolean isInInterfaceOrAnnotationBlock(DetailAST aAST) {", "+        return isInInterfaceBlock(aAST) || isInAnnotationBlock(aAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c73b5b3c9e7958e1bbff8c25f4e5bdad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aAst)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST ast)", "diff": ["-    public void beginTree(DetailAST aAst)", "+    public void beginTree(DetailAST ast)", "-        mHandlerFactory.clearCreatedHandlers();", "-        mHandlers.clear();", "-        mHandlers.push(new PrimordialHandler(this));", "+        handlerFactory.clearCreatedHandlers();", "+        handlers.clear();", "+        handlers.push(new PrimordialHandler(this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c789048c203fe4d559bf2d15e2efde9f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/AbstractTreeTableModel.java", "commitBeforeChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "commitAfterChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Override     public void setValueAt(Object aValue, Object node, int column)", "signatureAfterChange": "      @Override     public void setValueAt(Object value, Object node, int column)", "diff": ["-    public void setValueAt(Object aValue, Object node, int column)", "+    public void setValueAt(Object value, Object node, int column)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c78ea533c645a674a70e1e60c05a73bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "b95ced53e3c47c9a9db5022767a18e714fc3bebd", "commitAfterChange": "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void processClass(DetailAST aAST)", "signatureAfterChange": "     private void processClass(DetailAST aAST)", "diff": ["+", "+        processTypeParams(aAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c798b6921ad1d1b51aaf32869315b155", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/InputMagicNumber.java", "commitBeforeChange": "3994e36e8d25c3e5bc8570d371fc73b1467cf80c", "commitAfterChange": "fcb47f13dc5876474d9cbf9c3f5e8949b0d67887", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @javax.management.MXBean(42)     public void another()", "signatureAfterChange": "      @IntMethodAnnotation(42)     public void another()", "diff": ["-    @javax.management.MXBean(42)", "+    @IntMethodAnnotation(42)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7a2377e20dbc158c4a92794f67ee866", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void processFiles(Checker checker, final SeverityLevelCounter warningCounter,             final String checkstyleVersion)", "signatureAfterChange": "     private void processFiles(Checker checker, final SeverityLevelCounter warningCounter,             final String checkstyleVersion)", "diff": ["-        final boolean ok = numErrs <= maxErrors && numWarnings <= maxWarnings;", "+        final boolean okStatus = numErrs <= maxErrors && numWarnings <= maxWarnings;", "-        if (!ok) {", "+        if (!okStatus) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7aac4a7df9edc0ac091aae78d5c9034", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractSuperCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-    public void beginTree(DetailAST aRootAST)", "+    public void beginTree(DetailAST rootAST)", "-        mMethodStack.clear();", "+        methodStack.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7bc78aeea417cd255dd1a6cc3590e0c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java", "commitBeforeChange": "03f2be49f7ad3fc9d0143782b020a169f28e50a9", "commitAfterChange": "0c2a64d9f02ab5b94bbf4213cb2978f7b459b6f5", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private static boolean checkParams(DetailAST method)", "signatureAfterChange": "     private static boolean checkParams(DetailAST method)", "diff": ["-            final DetailAST paratype = params.getFirstChild().findFirstToken(TokenTypes.TYPE);", "-            final DetailAST arrayDecl = paratype.findFirstToken(TokenTypes.ARRAY_DECLARATOR);", "+            final DetailAST parameterType = params.getFirstChild().findFirstToken(TokenTypes.TYPE);", "+            final DetailAST arrayDecl = parameterType.findFirstToken(TokenTypes.ARRAY_DECLARATOR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7ca067cbc617b3f05ba06b1ae6e5395", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocVariableCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private boolean isIgnored(DetailAST aAST)", "signatureAfterChange": "     private boolean isIgnored(DetailAST ast)", "diff": ["-    private boolean isIgnored(DetailAST aAST)", "+    private boolean isIgnored(DetailAST ast)", "-        final String name = aAST.findFirstToken(TokenTypes.IDENT).getText();", "-        return mIgnoreNamePattern != null", "-                && mIgnoreNamePattern.matcher(name).matches();", "+        final String name = ast.findFirstToken(TokenTypes.IDENT).getText();", "+        return ignoreNamePattern != null", "+                && ignoreNamePattern.matcher(name).matches();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7ce82ce07ef99e1c07ce940b6475876", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PropertiesExpander.java", "commitBeforeChange": "68959eeefff4d4a5b295cefbec242c643d523c6b", "commitAfterChange": "7d513f08c27c741105f712dc882fd4c3553f71e7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public PropertiesExpander(Properties properties)", "signatureAfterChange": "     public PropertiesExpander(Properties properties)", "diff": ["-        this.properties = properties;", "+        this.properties.putAll(properties);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7d85072a13a1b0cec58d1ec1aac5d54", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     static DetailAST checkOrderSuggestedByJLS(List<DetailAST> modifiers)", "signatureAfterChange": "     static DetailAST checkOrderSuggestedByJLS(List<DetailAST> modifiers)", "diff": ["-        final Iterator<DetailAST> it = modifiers.iterator();", "+        final Iterator<DetailAST> iterator = modifiers.iterator();", "-        DetailAST modifier = skipAnnotations(it);", "+        DetailAST modifier = skipAnnotations(iterator);", "-            int i = 0;", "+            int index = 0;", "-                while (i < JLS_ORDER.length", "-                       && !JLS_ORDER[i].equals(modifier.getText())) {", "-                    i++;", "+                while (index < JLS_ORDER.length", "+                       && !JLS_ORDER[index].equals(modifier.getText())) {", "+                    index++;", "-                if (i == JLS_ORDER.length) {", "+                if (index == JLS_ORDER.length) {", "-                else if (it.hasNext()) {", "-                    modifier = it.next();", "+                else if (iterator.hasNext()) {", "+                    modifier = iterator.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7e8e23b5ac39b90b3eee4378bcd6e5d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "3f691ec451055c2752ae2d6b25f9a3c050a10783", "commitAfterChange": "425fd5a27cd567d5784bd246729c55cf8cda3dbd", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "         public boolean hasInstanceMethod(final DetailAST ident)", "signatureAfterChange": "         public boolean hasInstanceMethod(final DetailAST ident)", "diff": ["-            return containsName(instanceMethods, ident);", "+            return containsMethodDef(instanceMethods, ident);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7ec65c8dff6b7cb4143450da09523fa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     protected abstract void logLoadError(Token aIdent);", "signatureAfterChange": "     protected abstract void logLoadError(Token ident);", "diff": ["-    protected abstract void logLoadError(Token aIdent);", "+    protected abstract void logLoadError(Token ident);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c81c36c76466e60ef6a0dd7eba9b0f12", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testLoadConfiguration_URISyntaxException() throws CheckstyleException", "signatureAfterChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testLoadConfigurationURISyntaxException() throws CheckstyleException", "diff": ["-    public void testLoadConfiguration_URISyntaxException() throws CheckstyleException {", "+    public void testLoadConfigurationURISyntaxException() throws CheckstyleException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c82eeada026a28939efc71244458b1f6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java", "commitBeforeChange": "437986510709d7abc64b59c72779343ac5e77599", "commitAfterChange": "fddbc765515c03c4b584bffac7c2bda2320988bf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic ConfigurationBuilder(File aROOT) \t\t\tthrows CheckstyleException, IOException", "signatureAfterChange": " \t \tpublic ConfigurationBuilder(File aROOT) \t\t\tthrows CheckstyleException, IOException", "diff": ["-\t\tConfigurationGetter.getInstance().updateConfiguration();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c843ae3535ee26d960be9864581c38d8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "7347cc361b9251beb9f13acfbcb966f887925da5", "commitAfterChange": "661a9b0ddb10922458082573d79e0791ba6f38c2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected void checkExpressionSubtree(         DetailAST aTree,         int aLevel,         boolean aFirstLineMatches,         boolean aAllowNesting     )", "signatureAfterChange": "     protected final void checkExpressionSubtree(         DetailAST aTree,         int aLevel,         boolean aFirstLineMatches,         boolean aAllowNesting     )", "diff": ["-     */", "-    protected void checkExpressionSubtree(", "-        DetailAST aTree,", "-        int aLevel,", "-        boolean aFirstLineMatches,", "-        boolean aAllowNesting", "-    )", "-    {", "-        LineSet subtreeLines = new LineSet();", "-        if (aFirstLineMatches && !aAllowNesting) {", "-            int firstLine = getFirstLine(Integer.MAX_VALUE, aTree);", "-            subtreeLines.addLineAndCol(new Integer(firstLine),", "-                getLineStart(", "-                    mIndentCheck.getLines()[firstLine - 1]));", "-        }", "-        findSubtreeLines(subtreeLines, aTree, aAllowNesting);", "-", "-        checkLinesIndent(subtreeLines, aLevel, aFirstLineMatches);", "-    }", "+     */", "+    protected final void checkExpressionSubtree(", "+        DetailAST aTree,", "+        int aLevel,", "+        boolean aFirstLineMatches,", "+        boolean aAllowNesting", "+    )", "+    {", "+        LineSet subtreeLines = new LineSet();", "+        int firstLine = getFirstLine(Integer.MAX_VALUE, aTree);", "+        if (aFirstLineMatches && !aAllowNesting) {", "+            subtreeLines.addLineAndCol(new Integer(firstLine),", "+                getLineStart(", "+                    mIndentCheck.getLines()[firstLine - 1]));", "+        }", "+        findSubtreeLines(subtreeLines, aTree, aAllowNesting);", "+", "+        checkLinesIndent(subtreeLines, aLevel, aFirstLineMatches,", "+                         firstLine);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c85019c4ac2c5f23b917c8d5c5af43d3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "a13ebd482ce5dd891ba99d4c22a7cd5ff7d8e2dc", "commitAfterChange": "dad4fa599aa3570980fcaff4cb5f37941847a7a1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testRemoveFilter() throws Exception", "signatureAfterChange": "      @Test     public void testRemoveFilter() throws Exception", "diff": ["-        final DebugChecker c = new DebugChecker();", "-        final DebugFilter f = new DebugFilter();", "+        final DebugChecker checker = new DebugChecker();", "+        final DebugFilter filter = new DebugFilter();", "-        c.addFilter(f);", "-        c.addFilter(f2);", "-        c.removeFilter(f);", "+        checker.addFilter(filter);", "+        checker.addFilter(f2);", "+        checker.removeFilter(filter);", "-        c.fireErrors(\"Some File Name\", msgs);", "+        checker.fireErrors(\"Some File Name\", msgs);", "-        assertFalse(\"Checker.fireErrors() does call removed filter\", f.wasCalled());", "+        assertFalse(\"Checker.fireErrors() does call removed filter\", filter.wasCalled());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c886151185c413e445f41e201a37192b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheckTest.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testItIgnoreEmptyAndComaSpace() throws Exception", "signatureAfterChange": "      @Test     public void testItIgnoreEmptyAndComspace() throws Exception", "diff": ["-    public void testItIgnoreEmptyAndComaSpace() throws Exception", "+    public void testItIgnoreEmptyAndComspace() throws Exception"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8a6b071b5511f324707440bbdfd2782", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public CharSequence getFullText()", "signatureAfterChange": "     public CharSequence getFullText()", "diff": ["-        return mFullText;", "+        return fullText;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8ae2e8d75cefddb75c9613fe7c60327", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final DetailAST modifiers = aAST.findFirstToken(TokenTypes.MODIFIERS);", "+        final DetailAST modifiers = ast.findFirstToken(TokenTypes.MODIFIERS);", "-        if (aAST.getType() == TokenTypes.CLASS_DEF) {", "+        if (ast.getType() == TokenTypes.CLASS_DEF) {", "-            mClasses.push(new ClassDesc(isFinal, isAbstract));", "+            classes.push(new ClassDesc(isFinal, isAbstract));", "-        else if (!ScopeUtils.inEnumBlock(aAST)) { //ctors in enums don't matter", "-            final ClassDesc desc = mClasses.peek();", "+        else if (!ScopeUtils.inEnumBlock(ast)) { //ctors in enums don't matter", "+            final ClassDesc desc = classes.peek();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8d97f49b7fd5ed41f16e84305666f64", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/IntRangeFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Override     public boolean accept(int aInt)", "signatureAfterChange": "     @Override     public boolean accept(int intValue)", "diff": ["-    public boolean accept(int aInt)", "+    public boolean accept(int intValue)", "-        return ((mLowerBound.compareTo(aInt) <= 0)", "-            && (mUpperBound.compareTo(aInt) >= 0));", "+        return ((lowerBound.compareTo(intValue) <= 0)", "+            && (upperBound.compareTo(intValue) >= 0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8e683304ca9b2f1779d0162ee090276", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractAccessControlNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected boolean shouldCheckInScope(DetailAST aModifiers)", "signatureAfterChange": "     protected boolean shouldCheckInScope(DetailAST modifiers)", "diff": ["-    protected boolean shouldCheckInScope(DetailAST aModifiers)", "+    protected boolean shouldCheckInScope(DetailAST modifiers)", "-        if (aModifiers == null) {", "+        if (modifiers == null) {", "-            return mApplyToPackage;", "+            return applyToPackage;", "-        final boolean isPublic = aModifiers", "+        final boolean isPublic = modifiers", "-        final boolean isProtected = aModifiers", "+        final boolean isProtected = modifiers", "-        final boolean isPrivate = aModifiers", "+        final boolean isPrivate = modifiers", "-        return (mApplyToPublic && isPublic)", "-                || (mApplyToProtected && isProtected)", "-                || (mApplyToPackage && isPackage)", "-                || (mApplyToPrivate && isPrivate);", "+        return (applyToPublic && isPublic)", "+                || (applyToProtected && isProtected)", "+                || (applyToPackage && isPackage)", "+                || (applyToPrivate && isPrivate);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9188070ca1c29fbd19f17aa8179db10", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private Set<String> matchPattern(String aIdentifier, Pattern aPattern)", "signatureAfterChange": "     private Set<String> matchPattern(String identifier, Pattern pattern)", "diff": ["-    private Set<String> matchPattern(String aIdentifier, Pattern aPattern)", "+    private Set<String> matchPattern(String identifier, Pattern pattern)", "-        final Matcher matcher = aPattern.matcher(aIdentifier);", "+        final Matcher matcher = pattern.matcher(identifier);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c95d578d5117f09ab95cd81ce0f7ed70", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/UnnecessaryParenthesesCheck.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-                    log(ast, \"unnecessary.paren.assign\");", "+                    log(ast, MSG_ASSIGN);", "-                    log(ast, \"unnecessary.paren.return\");", "+                    log(ast, MSG_RETURN);", "-                    log(ast, \"unnecessary.paren.expr\");", "+                    log(ast, MSG_EXPR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c964967b582ad9adc5d20d54e58a3951", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setFileMaximum(int fileMax)", "signatureAfterChange": "     public void setFileMaximum(int fileMaximum)", "diff": ["-    public void setFileMaximum(int fileMax) {", "-        this.fileMax = fileMax;", "+    public void setFileMaximum(int fileMaximum) {", "+        this.fileMaximum = fileMaximum;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c97ae2c1a5227a1e7766deb4f528b839", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected final void logError(DetailAST aAst, String aSubtypeName,                                   int aActualLevel)", "signatureAfterChange": "     protected final void logError(DetailAST ast, String subtypeName,                                   int actualLevel)", "diff": ["-    protected final void logError(DetailAST aAst, String aSubtypeName,", "-                                  int aActualLevel)", "+    protected final void logError(DetailAST ast, String subtypeName,", "+                                  int actualLevel)", "-        logError(aAst, aSubtypeName, aActualLevel, getLevel());", "+        logError(ast, subtypeName, actualLevel, getLevel());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9872a301438fa0ae5bf81bf57768d9e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/UtilsTest.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testLengthExpandedTabs()         throws Exception", "signatureAfterChange": "     public void testLengthExpandedTabs()         throws Exception", "diff": ["-        final RE r1 = Utils.getRE(\"a\");", "-        final RE r2 = Utils.getRE(\"a\");", "+        final Pattern r1 = Utils.getPattern(\"a\");", "+        final Pattern r2 = Utils.getPattern(\"a\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c990dbcaced0a620b324d2c02a90ef87", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "8f86620e72849120dc5fba45c3cc54ed38e24447", "commitAfterChange": "d345f3beb27f3d8e3fde06f7e2c7612ddf691b95", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testTypeNamesForFivePermitedCapitalLetters() throws Exception", "signatureAfterChange": "      @Test     public void testTypeNamesForFivePermittedCapitalLetters() throws Exception", "diff": ["-    public void testTypeNamesForFivePermitedCapitalLetters() throws Exception {", "+    public void testTypeNamesForFivePermittedCapitalLetters() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9a9824d1606996fd8839eb238e3b628", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractSuperCheck.java", "commitBeforeChange": "5cd16d56a2ef2a3daaf1674666a9a5e6f2ddfe78", "commitAfterChange": "f9a9d6c3d321eeb2879efb7f48f02fe21a51c06c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "         public void setCallsSuper()", "signatureAfterChange": "         public void setCallingSuper()", "diff": ["-        public void setCallsSuper()", "+        public void setCallingSuper()", "-            callsSuper = true;", "+            callingSuper = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9b4f7d83d45dde5f26a5a8803aadabb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheck.java", "commitBeforeChange": "b14f255427c0b12054de2873fe300b4f4e691bd4", "commitAfterChange": "cc7aeaec906dc3c864477e3050510009b2a946ee", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST detailAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST detailAST)", "diff": ["-        final DetailAST paradef =", "+        final DetailAST parameterDef =", "-                paradef.findFirstToken(TokenTypes.TYPE);", "+                parameterDef.findFirstToken(TokenTypes.TYPE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9bab8b0a40b9a3c38266950529756f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected final int expandedTabsColumnNo(DetailAST aAST)", "signatureAfterChange": "     protected final int expandedTabsColumnNo(DetailAST ast)", "diff": ["-    protected final int expandedTabsColumnNo(DetailAST aAST)", "+    protected final int expandedTabsColumnNo(DetailAST ast)", "-            mIndentCheck.getLine(aAST.getLineNo() - 1);", "+            indentCheck.getLine(ast.getLineNo() - 1);", "-        return Utils.lengthExpandedTabs(line, aAST.getColumnNo(),", "-            mIndentCheck.getIndentationTabWidth());", "+        return Utils.lengthExpandedTabs(line, ast.getColumnNo(),", "+            indentCheck.getIndentationTabWidth());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9ccdc51daaca73683c16e923b9afa0f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (aAST.getType() == TokenTypes.PACKAGE_DEF) {", "-            if (mCustomImportOrderRules.contains(SAME_PACKAGE_RULE_GROUP)", "-                    && mSamePackageMatchingDepth != -1)", "+        if (ast.getType() == TokenTypes.PACKAGE_DEF) {", "+            if (customImportOrderRules.contains(SAME_PACKAGE_RULE_GROUP)", "+                    && samePackageMatchingDepth != -1)", "-                mSamePackageDomainsRegExp = createSamePackageRegexp(", "-                        mSamePackageMatchingDepth, aAST);", "+                samePackageDomainsRegExp = createSamePackageRegexp(", "+                        samePackageMatchingDepth, ast);", "-            final String importFullPath = getFullImportIdent(aAST);", "-            final int lineNo = aAST.getLineNo();", "-            final boolean isStatic = aAST.getType() == TokenTypes.STATIC_IMPORT;", "-            mImportToGroupList.add(new ImportDetails(importFullPath,", "+            final String importFullPath = getFullImportIdent(ast);", "+            final int lineNo = ast.getLineNo();", "+            final boolean isStatic = ast.getType() == TokenTypes.STATIC_IMPORT;", "+            importToGroupList.add(new ImportDetails(importFullPath,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9f560b43dff2950de4364024cae422f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setClosingParens(final String parens)", "signatureAfterChange": "     public void setClosingParens(final String parens)", "diff": ["-        this.parens = getOption(ClosingParens.class, parens);", "+        this.closingParens = getOption(ClosingParens.class, parens);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca1febbacd0b090bfbbf5fba0e3cffcd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void setClasspathRef(Reference aClasspathRef)", "signatureAfterChange": "     public void setClasspathRef(Reference classpathRef)", "diff": ["-    public void setClasspathRef(Reference aClasspathRef)", "+    public void setClasspathRef(Reference classpathRef)", "-        createClasspath().setRefid(aClasspathRef);", "+        createClasspath().setRefid(classpathRef);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca1ff99799b5d6c3a647ca7cc78767f9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractOptionCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public T getAbstractOption()", "signatureAfterChange": "     public T getAbstractOption()", "diff": ["-        return mOption;", "+        return option;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca3b8e9747a4228b89057b1c815b70ca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void processTypeParams(DetailAST aAST)", "signatureAfterChange": "     private void processTypeParams(DetailAST ast)", "diff": ["-    private void processTypeParams(DetailAST aAST)", "+    private void processTypeParams(DetailAST ast)", "-        final DetailAST typeParams =", "-            aAST.findFirstToken(TokenTypes.TYPE_PARAMETERS);", "+        final DetailAST params =", "+            ast.findFirstToken(TokenTypes.TYPE_PARAMETERS);", "-        mTypeParams.push(paramsMap);", "+        typeParams.push(paramsMap);", "-        if (typeParams == null) {", "+        if (params == null) {", "-        for (DetailAST child = typeParams.getFirstChild();", "+        for (DetailAST child = params.getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca4d63e8fc3c1f8b667bb0c9c9c05b4e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java", "commitBeforeChange": "2071f9b5421f853e8515f309b2874399c895c43a", "commitAfterChange": "bee8aab67cefb104f84e2d6c5ba4321d519740ba", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic ConfigurationBuilder(File aROOT) \t\t\tthrows CheckstyleException", "signatureAfterChange": "  \tpublic ConfigurationBuilder(File aROOT) \t\t\tthrows CheckstyleException", "diff": ["-\t\tconfig = getConfigurationFromXML(XML_NAME, System.getProperties());", "+\t\tconfiguration = getConfigurationFromXML(XML_NAME, System.getProperties());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca5154801ea94d9673f193b313360419", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/CodeSelector.java", "commitBeforeChange": "af047afee8216a4b0db9027dd013a1aad2be9494", "commitAfterChange": "ee33ed57cd2c88888e9821a2047f587f07283d98", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void select()", "signatureAfterChange": "     public void select()", "diff": ["-        editor.transferFocusBackward();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca9a790a516e7ded3c90dc4fc1b4fd9d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/comments/AllSinglelineCommentsTest.java", "commitBeforeChange": "828e07e15b1d8b6484b543df07b68fe320025b67", "commitAfterChange": "acbc27ee12d92326d984d97572193182e54a5448", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "          @Override         public void init()", "signatureAfterChange": "          @Override         public void init()", "diff": ["-                allComments.add(i + LINE_SEPARATOR);", "+                ALL_COMMENTS.add(i + LINE_SEPARATOR);", "-            allComments.add(String.valueOf(lines));", "+            ALL_COMMENTS.add(String.valueOf(lines));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca9c37d3daa1f2229f420dae6751c4e6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static String getInstanceName(DetailAST aMethodCallAst)", "signatureAfterChange": "     private static String getInstanceName(DetailAST methodCallAst)", "diff": ["-    private static String getInstanceName(DetailAST aMethodCallAst)", "+    private static String getInstanceName(DetailAST methodCallAst)", "-                FullIdent.createFullIdentBelow(aMethodCallAst).getText();", "+                FullIdent.createFullIdentBelow(methodCallAst).getText();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cabd328ff42ef9cfe4ae11fc3dcc0736", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "91aa6578321ceb08f4b0d715f994b7a9f4abe9d7", "commitAfterChange": "3430721be200cbe2acf55c3b3d52a528638123b3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void compareKeySets(Set keys, Map fileMap)", "signatureAfterChange": "     private void compareKeySets(Set aKeys, Map aFileMap)", "diff": ["-    private void compareKeySets(Set keys, Map fileMap)", "+    private void compareKeySets(Set aKeys, Map aFileMap)", "-        Set fls = fileMap.keySet();", "+        Set fls = aFileMap.keySet();", "-            Set currentKeys = (Set) fileMap.get(currentFile);", "+            Set currentKeys = (Set) aFileMap.get(currentFile);", "-            Set keysClone = new HashSet(keys);", "+            Set keysClone = new HashSet(aKeys);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cac40dab4aabcecedab2cd0e89af895b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     AccessResult checkAccess(final String aForImport, final String aInPkg)", "signatureAfterChange": "     AccessResult checkAccess(final String forImport, final String inPkg)", "diff": ["-    AccessResult checkAccess(final String aForImport, final String aInPkg)", "+    AccessResult checkAccess(final String forImport, final String inPkg)", "-        final AccessResult retVal = localCheckAccess(aForImport, aInPkg);", "+        final AccessResult retVal = localCheckAccess(forImport, inPkg);", "-        else if (mParent == null) {", "+        else if (parent == null) {", "-        return mParent.checkAccess(aForImport, aInPkg);", "+        return parent.checkAccess(forImport, inPkg);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caccefb6006ddb9f42cceb4d982b8eb9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck.java", "commitBeforeChange": "24485769603181d1af95d38803566b7526e63ca3", "commitAfterChange": "541d6e2581aaa22c98059b9e82a167ee4dced4a7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected AbstractNameCheck(String format)", "signatureAfterChange": "     protected AbstractNameCheck(String format)", "diff": ["-        super(format);", "+        setFormat(format);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cae0eaf3e0232f052bf3d3d2b28e2f4d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected final MessageDispatcher getMessageDispatcher()", "signatureAfterChange": "     protected final MessageDispatcher getMessageDispatcher()", "diff": ["-        return dispatcher;", "+        return messageDispatcher;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb04f0a5adba378814d9344387790138", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilterTest.java", "commitBeforeChange": "4b95f33697750ed910d59830fc9c649f094d88f8", "commitAfterChange": "879864502bd28685569417780ebc92308038cf2c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Override     protected Checker createChecker(Configuration aFilterConfig)             throws CheckstyleException, UnsupportedEncodingException", "signatureAfterChange": "      @Override     protected Checker createChecker(Configuration checkConfig)             throws CheckstyleException, UnsupportedEncodingException", "diff": ["-    protected Checker createChecker(Configuration aFilterConfig)", "+    protected Checker createChecker(Configuration checkConfig)", "-        if (aFilterConfig != null) {", "-            checkerConfig.addChild(aFilterConfig);", "+        if (checkConfig != null) {", "+            checkerConfig.addChild(checkConfig);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb2161db4561f812b449794fcb6b2087", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodLengthCheckTest.java", "commitBeforeChange": "c2ce485b481ba4bd26eb3ba2e3cc6c1850539e0c", "commitAfterChange": "e615817b5bff08ada2fce5f43e9e1bcae4e77c38", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testcountEmpty() throws Exception", "signatureAfterChange": "      @Test     public void testCountEmpty() throws Exception", "diff": ["-    public void testcountEmpty() throws Exception {", "+    public void testCountEmpty() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb2d583644da8d23375de03d91463e62", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setMinimumMessage(String aMessage)", "signatureAfterChange": "     public void setMinimumMessage(String message)", "diff": ["-    public void setMinimumMessage(String aMessage)", "+    public void setMinimumMessage(String message)", "-        mMinimumMessage = aMessage;", "+        minimumMessage = message;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb45108596fac196c4f8fa1080050f0e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "546f336e25b26d072f96e2cda139b885858ed5b0", "commitAfterChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     static String replaceProperties(             String value, PropertyResolver props, String defaultValue)         throws CheckstyleException", "signatureAfterChange": "     static String replaceProperties(             String value, PropertyResolver props, String defaultValue)         throws CheckstyleException", "diff": ["-        final Iterator<String> i = fragments.iterator();", "-        final Iterator<String> j = propertyRefs.iterator();", "-        while (i.hasNext()) {", "-            String fragment = i.next();", "+        final Iterator<String> fragmentsIterator = fragments.iterator();", "+        final Iterator<String> propertyRefsIterator = propertyRefs.iterator();", "+        while (fragmentsIterator.hasNext()) {", "+            String fragment = fragmentsIterator.next();", "-                final String propertyName = j.next();", "+                final String propertyName = propertyRefsIterator.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb775525f23a66fca3785adeb8018da2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "         @Override         public Object convert(@SuppressWarnings(\"rawtypes\") Class aType,             Object aValue)", "signatureAfterChange": "         @Override         public Object convert(@SuppressWarnings(\"rawtypes\") Class type,             Object value)", "diff": ["-        public Object convert(@SuppressWarnings(\"rawtypes\") Class aType,", "-            Object aValue)", "+        public Object convert(@SuppressWarnings(\"rawtypes\") Class type,", "+            Object value)", "-            if (null == aType) {", "+            if (null == type) {", "-                aValue.toString().trim(), \",\");", "+                value.toString().trim(), \",\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cba76eb511dc1b8d3069d2db533501b6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/VisibilityModifierCheck.java", "commitBeforeChange": "3430721be200cbe2acf55c3b3d52a528638123b3", "commitAfterChange": "303352fe2d7b467edce0bf02064e0a519a139250", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private Set getModifiers(DetailAST variableDefAST)", "signatureAfterChange": "     private Set getModifiers(DetailAST aVariableDefAST)", "diff": ["-    private Set getModifiers(DetailAST variableDefAST)", "+    private Set getModifiers(DetailAST aVariableDefAST)", "-        final AST modifiersAST = variableDefAST.getFirstChild();", "+        final AST modifiersAST = aVariableDefAST.getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbbbca0257dbfbd67682178a2b82c42f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "3dbb4e095db52128468a241ce9bc2bcf4bc848af", "commitAfterChange": "d28871069bb3461cbf277858fbf9696340957506", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     AbstractExpressionHandler createMethodCallHandler(IndentationCheck indentCheck,         DetailAST ast, AbstractExpressionHandler parent)", "signatureAfterChange": "     AbstractExpressionHandler createMethodCallHandler(IndentationCheck indentCheck,         DetailAST ast, AbstractExpressionHandler parent)", "diff": ["-        while (astNode != null && astNode.getType() == TokenTypes.DOT) {", "+        while (astNode.getType() == TokenTypes.DOT) {", "-        if (astNode != null && isHandledType(astNode.getType())) {", "+        if (isHandledType(astNode.getType())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbff06f38eaf7ffb89be8ab7accc8ea5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "2cf54ade2182e29c413f23e2235a896247d7a2ad", "commitAfterChange": "d282053d9ce02c13c779decfd079a8305086f752", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     @Test     public void testGoodOverrideFromOtherJ5Compat() throws Exception", "signatureAfterChange": "     @Test     public void testGoodOverrideFromOtherJ5Compatible() throws Exception", "diff": ["-    public void testGoodOverrideFromOtherJ5Compat() throws Exception {", "+    public void testGoodOverrideFromOtherJ5Compatible() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc05f7413d3eed96f928d8e53c8a93a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractOptionCheck.java", "commitBeforeChange": "02ae6023b5b6f66e495393a6f87e4beb4b4ab3d0", "commitAfterChange": "584f7ee1232be96284255540e7249023c327ca8f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setOption(String optionStr)", "signatureAfterChange": "     public void setOption(String optionStr)", "diff": ["-            option = Enum.valueOf(optionClass, optionStr.trim().toUpperCase(Locale.ENGLISH));", "+            abstractOption =", "+                    Enum.valueOf(optionClass, optionStr.trim().toUpperCase(Locale.ENGLISH));", "-            throw new ConversionException(\"unable to parse \" + option, iae);", "+            throw new ConversionException(\"unable to parse \" + abstractOption, iae);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc11cdba494d5d2dc3fc5868f11d8f51", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "eaad55fdba73e17e103dc6600867f26fd6a3896b", "commitAfterChange": "5cf355fad4b8bc613962aac2f52b48d5726f2acc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static String hexEncode(byte[] aByteArray)", "signatureAfterChange": "     private static String hexEncode(byte[] aByteArray)", "diff": ["-            final int low = b & 0x0F;", "-            final int high = (b >> 4) & 0x0F;", "+            final int low = b & MASK_0X0F;", "+            final int high = (b >> SHIFT_4) & MASK_0X0F;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc13ecbbbdb87395477bba3aec3e3b5f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static FilterSet loadSuppressions(String aFilename)         throws CheckstyleException", "signatureAfterChange": "     public static FilterSet loadSuppressions(String filename)         throws CheckstyleException", "diff": ["-    public static FilterSet loadSuppressions(String aFilename)", "+    public static FilterSet loadSuppressions(String filename)", "-                final URL url = new URL(aFilename);", "+                final URL url = new URL(filename);", "-                final File file = new File(aFilename);", "+                final File file = new File(filename);", "-                                .getResource(aFilename);", "+                                .getResource(filename);", "-                            throw new FileNotFoundException(aFilename);", "+                            throw new FileNotFoundException(filename);", "-                        throw new FileNotFoundException(aFilename);", "+                        throw new FileNotFoundException(filename);", "-            return loadSuppressions(source, aFilename);", "+            return loadSuppressions(source, filename);", "-            throw new CheckstyleException(\"unable to find \" + aFilename, e);", "+            throw new CheckstyleException(\"unable to find \" + filename, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc16f5bc087dcc38f7bbeca91c5e2d75", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocVariableCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean shouldCheck(final DetailAST ast)", "signatureAfterChange": "     private boolean shouldCheck(final DetailAST ast)", "diff": ["-        final Scope scope;", "+        final Scope customScope;", "-            scope = Scope.PUBLIC;", "+            customScope = Scope.PUBLIC;", "-            scope =", "+            customScope =", "-        return scope.isIn(this.scope) && surroundingScope.isIn(this.scope)", "+        return customScope.isIn(this.scope) && surroundingScope.isIn(this.scope)", "-                || !scope.isIn(excludeScope)", "+                || !customScope.isIn(excludeScope)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc706e88b7d49bc2f19ec11474434e28", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheck.java", "commitBeforeChange": "80ab48f859c1f16835dbd41afe42414b41969e2f", "commitAfterChange": "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setMax(int length)", "signatureAfterChange": "     public void setMax(int length)", "diff": ["-        maxFileLength = length;", "+        max = length;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc8adb7e79d3b536646b7d49dae2e61c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilterTest.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      protected void verifySuppressed(Configuration aFilterConfig,                                     String[] aSuppressed)         throws Exception", "signatureAfterChange": "      protected void verifySuppressed(Configuration filterConfig,                                     String[] suppressed)         throws Exception", "diff": ["-    protected void verifySuppressed(Configuration aFilterConfig,", "-                                    String[] aSuppressed)", "+    protected void verifySuppressed(Configuration filterConfig,", "+                                    String[] suppressed)", "-        verify(createChecker(aFilterConfig),", "+        verify(createChecker(filterConfig),", "-               removeSuppressed(sAllMessages, aSuppressed));", "+               removeSuppressed(sAllMessages, suppressed));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccceaa5ceb3cc57c77b0d236f38f818b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "02ae6023b5b6f66e495393a6f87e4beb4b4ab3d0", "commitAfterChange": "584f7ee1232be96284255540e7249023c327ca8f", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "         public Token(FullIdent fullIdent)", "signatureAfterChange": "         public Token(FullIdent fullIdent)", "diff": ["-            line = fullIdent.getLineNo();", "-            column = fullIdent.getColumnNo();", "+            lineNo = fullIdent.getLineNo();", "+            columnNo = fullIdent.getColumnNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccde5408ba0a89c31d53c78949368561", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java", "commitBeforeChange": "791036b2f1597a793222ee500f6deec50f379111", "commitAfterChange": "9988d4d007b7d7b1417efc1e06de9309cb7c3e54", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected final void findSubtreeLines(LineSet lines, DetailAST tree,         boolean allowNesting)", "signatureAfterChange": "     protected final void findSubtreeLines(LineSet lines, DetailAST tree,         boolean allowNesting)", "diff": ["-        if (getIndentCheck().getHandlerFactory().isHandledType(tree.getType())", "-            || tree.getLineNo() < 0) {", "+        if (getIndentCheck().getHandlerFactory().isHandledType(tree.getType())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cceb74fa0f30df3bffe19af170ab6991", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleTest.java", "commitBeforeChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "commitAfterChange": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Test     public void testParansNever() throws Exception", "signatureAfterChange": "     @Test     public void testParensNever() throws Exception", "diff": ["-    public void testParansNever() throws Exception {", "+    public void testParensNever() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd3eb84f5699cc09741377bb43fbcd0d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractSuperCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-    public void leaveToken(DetailAST aAST)", "+    public void leaveToken(DetailAST ast)", "-        if (isOverridingMethod(aAST)) {", "+        if (isOverridingMethod(ast)) {", "-                mMethodStack.removeLast();", "+                methodStack.removeLast();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd517cb827b39857ddf95e0df58d8e84", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractOptionCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public AbstractOptionCheck(T aDefault, Class<T> aOptionClass)", "signatureAfterChange": "     public AbstractOptionCheck(T literalDefault, Class<T> optionClass)", "diff": ["-    public AbstractOptionCheck(T aDefault, Class<T> aOptionClass)", "+    public AbstractOptionCheck(T literalDefault, Class<T> optionClass)", "-        mOption = aDefault;", "-        mOptionClass = aOptionClass;", "+        option = literalDefault;", "+        this.optionClass = optionClass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd81f4c3148f5d11e4ae98e3d506e708", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setIgnoreEqualsIgnoreCase(boolean aNewValue)", "signatureAfterChange": "     public void setIgnoreEqualsIgnoreCase(boolean newValue)", "diff": ["-    public void setIgnoreEqualsIgnoreCase(boolean aNewValue)", "+    public void setIgnoreEqualsIgnoreCase(boolean newValue)", "-        mIgnoreEqualsIgnoreCase = aNewValue;", "+        ignoreEqualsIgnoreCase = newValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd878b57fc1b91fe47b09fa58103f1d0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "         public DetailAST getAST()", "signatureAfterChange": "         public DetailAST getAST()", "diff": ["-            return mAST;", "+            return ast;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdb40466b3f104c9e2469dbca9cbd98b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setColumns(String aColumns)", "signatureAfterChange": "     public void setColumns(String columns)", "diff": ["-    public void setColumns(String aColumns)", "+    public void setColumns(String columns)", "-        mColumnsCSV = aColumns;", "-        if (aColumns != null) {", "-            mColumnFilter = new CSVFilter(aColumns);", "+        columnsCSV = columns;", "+        if (columns != null) {", "+            columnFilter = new CSVFilter(columns);", "-            mColumnFilter = null;", "+            columnFilter = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdcb0916b4a5f0b278dde608cf6c060f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "         public String getClassname()", "signatureAfterChange": "         public String getClassname()", "diff": ["-            return mClassname;", "+            return classname;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cde90d554355523836e10d376542c135", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "commitAfterChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private boolean matchesImportGroup(boolean isStatic, String importPath, String currentGroup)", "signatureAfterChange": "     private boolean matchesImportGroup(boolean isStatic, String importPath, String currentGroup)", "diff": ["-                || matchesStandartImportGroup(isStatic, importPath, currentGroup)", "+                || matchesStandardImportGroup(isStatic, importPath, currentGroup)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ced88913e632e3aa3ded4dff89988668", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "eeb20e6c8cc86d2d283c254ddcddf89f46aa5190", "commitAfterChange": "d56a2a366c6f9e3e8639d492d548ae562b75dc81", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Override     public int[] getDefaultTokens()", "signatureAfterChange": "      @Override     public int[] getDefaultTokens()", "diff": ["+        return getAcceptableTokens();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cedaebfbd7f07d1a34aba57d4ed93f5a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private Pattern getPublicMemberRegexp()", "signatureAfterChange": "     private Pattern getPublicMemberRegexp()", "diff": ["-        return mPublicMemberPattern;", "+        return publicMemberPattern;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cede06b35390809ce1723bdf5567c72b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     void addGuard(final Guard aThug)", "signatureAfterChange": "     void addGuard(final Guard thug)", "diff": ["-    void addGuard(final Guard aThug)", "+    void addGuard(final Guard thug)", "-        mGuards.addFirst(aThug);", "+        guards.addFirst(thug);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cef35e92a0ca8fb22d04bb642dab3da3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public DetectorOptions setMaximum(int aMaximum)", "signatureAfterChange": "     public DetectorOptions setMaximum(int maximum)", "diff": ["-    public DetectorOptions setMaximum(int aMaximum)", "+    public DetectorOptions setMaximum(int maximum)", "-        mMaximum = aMaximum;", "+        this.maximum = maximum;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf02a9d76e9394e1ee8a3b6bb113db88", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "contrib/bcel/src/checkstyle/com/puppycrawl/tools/checkstyle/bcel/VisitorSet.java", "commitBeforeChange": "65603924fdf47c194fc2ef9e0bc60bfc81ee4166", "commitAfterChange": "2707ab4393bd5a585f1f794c43515b8a1b900078", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void visitLocalVariable(LocalVariable aLocalVariable)", "signatureAfterChange": "     public void visitLocalVariableTable(LocalVariableTable aTable)", "diff": ["-    public void visitLocalVariable(LocalVariable aLocalVariable)", "+    public void visitLocalVariableTable(LocalVariableTable aTable)", "-            aLocalVariable.accept(v);", "+            aTable.accept(v);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf109ea67c514a400b5ee5c5a67e2fc2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     private void checkComment(DetailAST aAST, TextBlock aComment)", "signatureAfterChange": "     private void checkComment(DetailAST ast, TextBlock comment)", "diff": ["-    private void checkComment(DetailAST aAST, TextBlock aComment)", "+    private void checkComment(DetailAST ast, TextBlock comment)", "-        final List<JavadocTag> tags = getMethodTags(aComment);", "+        final List<JavadocTag> tags = getMethodTags(comment);", "-        if (hasShortCircuitTag(aAST, tags)) {", "+        if (hasShortCircuitTag(ast, tags)) {", "-        if (aAST.getType() != TokenTypes.ANNOTATION_FIELD_DEF) {", "+        if (ast.getType() != TokenTypes.ANNOTATION_FIELD_DEF) {", "-            checkParamTags(tags, aAST, !hasInheritDocTag);", "-            checkThrowsTags(tags, getThrows(aAST), !hasInheritDocTag);", "-            if (isFunction(aAST)) {", "-                checkReturnTag(tags, aAST.getLineNo(), !hasInheritDocTag);", "+            checkParamTags(tags, ast, !hasInheritDocTag);", "+            checkThrowsTags(tags, getThrows(ast), !hasInheritDocTag);", "+            if (isFunction(ast)) {", "+                checkReturnTag(tags, ast.getLineNo(), !hasInheritDocTag);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf2075a2c813fc8b1dd17fd224a30d1e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private boolean isTag(String[] aText, Point aPos)", "signatureAfterChange": "     private boolean isTag(String[] javadocText, Point pos)", "diff": ["-    private boolean isTag(String[] aText, Point aPos)", "+    private boolean isTag(String[] javadocText, Point pos)", "-        final int column = aPos.getColumnNo() + 1;", "-        final String text = aText[aPos.getLineNo()];", "+        final int column = pos.getColumnNo() + 1;", "+        final String text = javadocText[pos.getLineNo()];", "-        //Character.isJavaIdentifier... may not be a valid HTML", "+        //Character.isJavidentifier... may not be a valid HTML"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf3c6ba989060c3a2b2253e7760da308", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheckTest.java", "commitBeforeChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "commitAfterChange": "cb5a59fc6baf5de204e3cc99be6ba9865e44350a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testSigleLineCaseDefault() throws Exception", "signatureAfterChange": "      @Test     public void testSingleLineCaseDefault() throws Exception", "diff": ["-    public void testSigleLineCaseDefault() throws Exception {", "+    public void testSingleLineCaseDefault() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf5c1cbe3a277197ca2bae6feef8b015", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "bc0bf95daedb6f0e658187d6e44410a60f46dbe2", "commitAfterChange": "fbc44f14b8e2a7b5f6949e6c1380fdf81c21b91e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public int getArrayInitIndent()", "signatureAfterChange": "     public int getArrayInitIndent()", "diff": ["-        return arrayInitIndentationAmount;", "+        return arrayInitIndent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf7301c9afe27a800d9a00d0965051f9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "b881f65b1acb0b9fe0595b99cde31636600c3192", "commitAfterChange": "4d9e56e2b3253c5ccd4e7a4292afc9936512036a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     void verifyType(MyModifierSet aMods, MyCommonAST aType)", "signatureAfterChange": "     void verifyType(MyModifierSet aMods, MyCommonAST aType)", "diff": ["-            mMessages.add(lineNo, \"javadoc.missing\");", "+//            mMessages.add(lineNo, \"javadoc.missing\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf9130cfd8bd69459093fdca4c542b27", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "5ce771ac776af4197ce832792a049e9357ca90b8", "commitAfterChange": "1d614c3a7ecf8a3ede4df8a50da46e71792d0025", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private void tagSuppressions(Collection<TextBlock> aComments)", "signatureAfterChange": "     private void tagSuppressions(Collection<TextBlock> aComments)", "diff": ["-            tagCommentLine(text[0], startLineNo, comment.getStartColNo());", "+            tagCommentLine(text[0], startLineNo);", "-                tagCommentLine(text[i], startLineNo + i, 0);", "+                tagCommentLine(text[i], startLineNo + i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf9ac8995ceee06e93b310ea8a18826e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static AuditListener createListener(CommandLine aLine,                                                 OutputStream aOut,                                                 boolean aCloseOut)", "signatureAfterChange": "     private static AuditListener createListener(CommandLine line,                                                 OutputStream out,                                                 boolean closeOut)", "diff": ["-    private static AuditListener createListener(CommandLine aLine,", "-                                                OutputStream aOut,", "-                                                boolean aCloseOut)", "+    private static AuditListener createListener(CommandLine line,", "+                                                OutputStream out,", "+                                                boolean closeOut)", "-            aLine.hasOption(\"f\") ? aLine.getOptionValue(\"f\") : \"plain\";", "+            line.hasOption(\"f\") ? line.getOptionValue(\"f\") : \"plain\";", "-            listener = new XMLLogger(aOut, aCloseOut);", "+            listener = new XMLLogger(out, closeOut);", "-            listener = new DefaultLogger(aOut, aCloseOut);", "+            listener = new DefaultLogger(out, closeOut);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf9e11aca00833a0b689d624dedbc986", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SingleLineJavadocCheck.java", "commitBeforeChange": "3004b4d8810fae5956864d1493ea94f183b9442c", "commitAfterChange": "86c1e2d4b740f38d45167254bff5fb84b0d7ed92", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean isSingleLineJavadoc()", "signatureAfterChange": "     private static boolean isSingleLineJavadoc(DetailAST blockCommentStart)", "diff": ["-    private boolean isSingleLineJavadoc() {", "-        final DetailAST blockCommentStart = getBlockCommentAst();", "+    private static boolean isSingleLineJavadoc(DetailAST blockCommentStart) {", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf9e14c72f36ef9ac50b5e0ea28db4a9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Comment.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-        return \"Comment[\" + mFirstLine + \":\" + mFirstCol + \"-\"", "-            + mLastLine + \":\" + mLastCol + \"]\";", "+        return \"Comment[\" + firstLine + \":\" + firstCol + \"-\"", "+            + lastLine + \":\" + lastCol + \"]\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfabdbfb11f24f34c4e70ddb7cedb994", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheckTest.java", "commitBeforeChange": "2628fc197d9b12bb03324c46478ef840166cc075", "commitAfterChange": "6f6179fb52b2a104adc1c60bf92f8bdf3818255a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testBad() throws Exception", "signatureAfterChange": "     @Test     public void testGood2() throws Exception", "diff": ["-    public void testBad() throws Exception", "+    public void testGood2() throws Exception", "-        final String[] expected = {", "-            \"4: The name of the outer type and the file do not match.\",", "-        };", "+        final String[] expected = {};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfb0145524270f507f4b148c01b5a5e6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "commitAfterChange": "6125beffc437f970eae276b4a6542265c6547784", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processVariable(DetailAST aAST)", "signatureAfterChange": "     private void processVariable(DetailAST aAST)", "diff": ["-        if (!ScopeUtils.inInterfaceBlock(aAST)) {", "+        if (!ScopeUtils.inInterfaceOrAnnotationBlock(aAST)) {", "-                    inStatic |= frame.isStaticClass();", "+                    inStatic |= frame.isStaticType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfdda5ca1cfb99f7306caf6f265032a4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LocalVariableNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public final void setAllowOneCharVarInForLoop(boolean aAllow)", "signatureAfterChange": "      public final void setAllowOneCharVarInForLoop(boolean allow)", "diff": ["-    public final void setAllowOneCharVarInForLoop(boolean aAllow)", "+    public final void setAllowOneCharVarInForLoop(boolean allow)", "-        mAllowOneCharVarInForLoop = aAllow;", "+        allowOneCharVarInForLoop = allow;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d044350aa1080ae88a4f14a0e32bb3b1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule341onetoplevel/OneTopLevelClassTest.java", "commitBeforeChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "commitAfterChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void bad2Test() throws Exception", "signatureAfterChange": "      @Test     public void bad1Test() throws Exception", "diff": ["+", "+    @Test", "+    public void bad1Test() throws Exception {", "+", "+        final Class<OneTopLevelClassCheck> clazz = OneTopLevelClassCheck.class;", "+        final String messageKey = \"one.top.level.class\";", "+", "+        final String[] expected = {", "+            \"4: \" + getCheckMessage(clazz, messageKey, \"FooEnum\"),", "+        };", "+", "+        final Configuration checkConfig = builder.getCheckConfig(\"OneTopLevelClass\");", "+        final String filePath = builder.getFilePath(\"InputOneTopLevelClassBad1\");", "-            \"4: \" + getCheckMessage(clazz, messageKey, \"FooEnum\"),", "-        };", "-", "-        final Configuration checkConfig = builder.getCheckConfig(\"OneTopLevelClass\");", "-        final String filePath = builder.getFilePath(\"OneTopLevelClassBad2\");", "-", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "-        verify(checkConfig, filePath, expected, warnList);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d095e965c7438f2392e928f2b45a495e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private Configuration loadConfiguration(         String aName, Properties aProps) throws CheckstyleException", "signatureAfterChange": "      private Configuration loadConfiguration(         String name, Properties props) throws CheckstyleException", "diff": ["-        String aName, Properties aProps) throws CheckstyleException", "+        String name, Properties props) throws CheckstyleException", "-            \"src/test/resources/com/puppycrawl/tools/checkstyle/configs/\" + aName;", "+            \"src/test/resources/com/puppycrawl/tools/checkstyle/configs/\" + name;", "-            fName, new PropertiesExpander(aProps));", "+            fName, new PropertiesExpander(props));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0b2246498f272e62e4d8d6de505b56d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private static DetailAST         getNextSubTreeNode(DetailAST aCurrentNodeAst, DetailAST aSubTreeRootAst)", "signatureAfterChange": "     private static DetailAST         getNextSubTreeNode(DetailAST currentNodeAst, DetailAST subTreeRootAst)", "diff": ["-        getNextSubTreeNode(DetailAST aCurrentNodeAst, DetailAST aSubTreeRootAst)", "+        getNextSubTreeNode(DetailAST currentNodeAst, DetailAST subTreeRootAst)", "-        DetailAST currentNode = aCurrentNodeAst;", "+        DetailAST currentNode = currentNodeAst;", "-                if (currentNode.getParent().equals(aSubTreeRootAst)) {", "+                if (currentNode.getParent().equals(subTreeRootAst)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0b3ed1cb8ac4f2a58e2ac0c908b8f0b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportCheck.java", "commitBeforeChange": "db428ff350e76d0609e192fc48314cf226677fde", "commitAfterChange": "ed7fc0e632848e74d78992a9081ad689fa85e855", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-    public void visitToken(DetailAST aAST) ", "+    public void visitToken(DetailAST aAST)", "-            for (int i = 0; i < m_excludes.length && !exempt; i++) {", "-                if (name.getText().equals(m_excludes[i])) {", "+            for (int i = 0; i < mExcludes.length && !exempt; i++) {", "+                if (name.getText().equals(mExcludes[i])) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0b7769d3f21b3256d2dcbdc193ba840", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TrailingCommentCheck.java", "commitBeforeChange": "111bd4b1df19e62bb76bbf83cfefa9ac5066c98a", "commitAfterChange": "0a6026c9ab97dc2d5ecd9c8cc6a27197208f4e6a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-            final String line = getLines()[lineNo.intValue() - 1];", "+            final String line = getLines()[lineNo - 1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0c9a2627b2872da4a4def751841eff4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FullIdent.java", "commitBeforeChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "commitAfterChange": "abfc952fd0ed88f6246b1d969a8a980ea63f0bd6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void append(DetailAST ast)", "signatureAfterChange": "     private void append(DetailAST ast)", "diff": ["-        if (colNo == 0) {", "-            colNo = ast.getColumnNo();", "+        if (columnNo == 0) {", "+            columnNo = ast.getColumnNo();", "-            colNo = Math.min(colNo, ast.getColumnNo());", "+            columnNo = Math.min(columnNo, ast.getColumnNo());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0cd2149f9e5fd1abd1c39717e469822", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/indentation/InputClassesMethods.java", "commitBeforeChange": "1ad274c7029a7bdf03d96dddd4ac8c130f2bf543", "commitAfterChange": "8d88dde6f325f9696a6fcd0ed74d45c6a848031b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "           @MyAnnotation           @Override           String longLongLongLongLongMethodName()", "signatureAfterChange": "           @MyAnnotation2           String longLongLongLongLongMethodName()", "diff": ["-          @MyAnnotation", "-          @Override", "+          @MyAnnotation2"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d11749ec44f00ca644f1e0c20abd29d3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "         private String expandFromCoont(             String coont,             String string,             Pattern regexp)", "signatureAfterChange": "         private String expandFromCoont(             String comment,             String string,             Pattern regexp)", "diff": ["-            String coont,", "+            String comment,", "-            final Matcher matcher = regexp.matcher(coont);", "+            final Matcher matcher = regexp.matcher(comment);", "-                // $n expands coont match like in Pattern.subst().", "+                // $n expands comment match like in Pattern.subst()."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d13aaa073593a9257adce15fb71c854e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setIgnoreHashCodeMethod(boolean aIgnoreHashCodeMethod)", "signatureAfterChange": "     public void setIgnoreHashCodeMethod(boolean ignoreHashCodeMethod)", "diff": ["-    public void setIgnoreHashCodeMethod(boolean aIgnoreHashCodeMethod)", "+    public void setIgnoreHashCodeMethod(boolean ignoreHashCodeMethod)", "-        mIgnoreHashCodeMethod = aIgnoreHashCodeMethod;", "+        this.ignoreHashCodeMethod = ignoreHashCodeMethod;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d14a99dafed063678dc3eaa9789ebd2e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheck.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void checkAnnotations(DetailAST aModifierNode, int aCorrectLevel)", "signatureAfterChange": "     private void checkAnnotations(DetailAST aModifierNode, int aCorrectLevel)", "diff": ["-                    \"annotation.location.alone\", getAnnotationName(annotation));", "+                        MSG_KEY_ANNOTATION_LOCATION_ALONE, getAnnotationName(annotation));", "-                log(annotation.getLineNo(), \"annotation.location\",", "+                log(annotation.getLineNo(), MSG_KEY_ANNOTATION_LOCATION,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1517e9548dad52b88b822e6b7f75e4d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected final AbstractClassInfo createClassInfo(final Token name,                                               final String surroundingClass)", "signatureAfterChange": "     protected final AbstractClassInfo createClassInfo(final Token name,                                               final String surroundingClass)", "diff": ["-        final AbstractClassInfo ci = findClassAlias(name.getText());", "-        if (ci != null) {", "-            return new ClassAlias(name, ci);", "+        final AbstractClassInfo classInfo = findClassAlias(name.getText());", "+        if (classInfo != null) {", "+            return new ClassAlias(name, classInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d16c1b370c0cc4f005f830a0384d1cc9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "         private void addReferencedClassName(String aClassName)", "signatureAfterChange": "         private void addReferencedClassName(String className)", "diff": ["-        private void addReferencedClassName(String aClassName)", "+        private void addReferencedClassName(String className)", "-            if (isSignificant(aClassName)) {", "-                mReferencedClassNames.add(aClassName);", "+            if (isSignificant(className)) {", "+                referencedClassNames.add(className);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d181f51bccf1ffadd91afbcaf79b479b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean isCommentTag(String[] aText, Point aPos)", "signatureAfterChange": "     private boolean isCommentTag(String[] text, Point pos)", "diff": ["-    private boolean isCommentTag(String[] aText, Point aPos)", "+    private boolean isCommentTag(String[] text, Point pos)", "-        return aText[aPos.getLineNo()].startsWith(\"<!--\", aPos.getColumnNo());", "+        return text[pos.getLineNo()].startsWith(\"<!--\", pos.getColumnNo());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1bf6dba3dc8a6f62d92b1e525f859e8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private ParseTree parseJavadocAsParseTree(String aBlockComment)         throws IOException", "signatureAfterChange": "     private ParseTree parseJavadocAsParseTree(String blockComment)         throws IOException", "diff": ["-    private ParseTree parseJavadocAsParseTree(String aBlockComment)", "+    private ParseTree parseJavadocAsParseTree(String blockComment)", "-        final InputStream in = new ByteArrayInputStream(aBlockComment.getBytes(utf8Charset));", "+        final InputStream in = new ByteArrayInputStream(blockComment.getBytes(utf8Charset));", "-        lexer.addErrorListener(mErrorListener);", "+        lexer.addErrorListener(errorListener);", "-        parser.addErrorListener(mErrorListener);", "+        parser.addErrorListener(errorListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1c1c1b16bd9f0df7bd4c9f20189967f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/SeverityLevel.java", "commitBeforeChange": "085edafb3bafb0ab31e1ef19bad39984ba9b9d2a", "commitAfterChange": "678deac3fedc6c1ae34c883e7d5b383d3a377478", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static SeverityLevel getInstance(String aSeverityName)", "signatureAfterChange": "     public static SeverityLevel getInstance(String aSeverityName)", "diff": ["-            (SeverityLevel) NAME_TO_SCOPE.get(severityName);", "+            (SeverityLevel) NAME_TO_LEVEL.get(severityName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1f5868ecfededb831d6117212cb6020", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/Guard.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     boolean isLocalOnly()", "signatureAfterChange": "     boolean isLocalOnly()", "diff": ["-        return mLocalOnly;", "+        return localOnly;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d21199594aca35b7de19ec813f1c3f4d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void initHeaderRegexps()", "signatureAfterChange": "     private void initHeaderRegexps()", "diff": ["-            mHeaderRegexps = new RE[headerLines.length];", "+            mHeaderRegexps = new Pattern[headerLines.length];", "-                    mHeaderRegexps[i] = Utils.getRE(headerLines[i]);", "+                    mHeaderRegexps[i] = Utils.getPattern(headerLines[i]);", "-                catch (RESyntaxException ex) {", "+                catch (PatternSyntaxException ex) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2617c59fcecad9d91aa909f2d910565", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "ba60fc038fcea18546b532064596149bcd5effe2", "commitAfterChange": "139609ac5d073ecb04381466f075f174b0aec8c9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void doVisitTokenInSameGroup(FullIdent aIdent, boolean aIsStatic,             boolean aPrevious, String aName, int aLine)", "signatureAfterChange": "     private void doVisitTokenInSameGroup(FullIdent aIdent, boolean aIsStatic,             boolean aPrevious, String aName, int aLine)", "diff": ["-            if (compare(mLastImport, aName, mCaseSensitive) >= 0) {", "+            if (compare(mLastImport, aName, mCaseSensitive) > 0) {", "-                (compare(mLastImport, aName, mCaseSensitive) >= 0))", "+                (compare(mLastImport, aName, mCaseSensitive) > 0))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d268f19a0df34cfea7dd97835a197991", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private static boolean isParameterized(DetailAST aAnnotation)", "signatureAfterChange": "     private static boolean isParameterized(DetailAST annotation)", "diff": ["-    private static boolean isParameterized(DetailAST aAnnotation)", "+    private static boolean isParameterized(DetailAST annotation)", "-        return aAnnotation.findFirstToken(TokenTypes.EXPR) != null;", "+        return annotation.findFirstToken(TokenTypes.EXPR) != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2b3a054a476c4d7211c4ece9a91dcd5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void beginProcessing(String aCharset)", "signatureAfterChange": "      @Override     public void beginProcessing(String charset)", "diff": ["-    public void beginProcessing(String aCharset)", "+    public void beginProcessing(String charset)", "-        super.beginProcessing(aCharset);", "-        mPropertyFiles.clear();", "+        super.beginProcessing(charset);", "+        propertyFiles.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2c6f73c7c1a2f3e15abb5bc1d264986", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Utils.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     @Deprecated     public static String[] getLines(String aFileName, String aCharsetName)         throws IOException", "signatureAfterChange": "     @Deprecated     public static String[] getLines(String fileName, String charsetName)         throws IOException", "diff": ["-    public static String[] getLines(String aFileName, String aCharsetName)", "+    public static String[] getLines(String fileName, String charsetName)", "-        final FileInputStream fr = new FileInputStream(aFileName);", "+        final FileInputStream fr = new FileInputStream(fileName);", "-            lnr = new LineNumberReader(new InputStreamReader(fr, aCharsetName));", "+            lnr = new LineNumberReader(new InputStreamReader(fr, charsetName));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2d6d910b14d452cd308db5df57bf6f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private ResourceBundle getBundle(String aBundleName)", "signatureAfterChange": "     private ResourceBundle getBundle(String bundleName)", "diff": ["-    private ResourceBundle getBundle(String aBundleName)", "+    private ResourceBundle getBundle(String bundleName)", "-                    .get(aBundleName);", "+                    .get(bundleName);", "-                bundle = ResourceBundle.getBundle(aBundleName, sLocale,", "-                        mSourceClass.getClassLoader(), new UTF8Control());", "-                BUNDLE_CACHE.put(aBundleName, bundle);", "+                bundle = ResourceBundle.getBundle(bundleName, sLocale,", "+                        sourceClass.getClassLoader(), new UTF8Control());", "+                BUNDLE_CACHE.put(bundleName, bundle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2dc6350dd733fe14cb4b5209f6b05ac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (count > max && !ignoreNumberOfParameters(ast)) {", "+        if (count > max && !shouldIgnoreNumberOfParameters(ast)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2ff2c86a904e5f8bb2b277f3da2a7a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java", "commitBeforeChange": "de39a36a6b81521c17e3a4afa0e98e30deccf082", "commitAfterChange": "2b4a02d2c8a498a8a1ee38e9396426209fa65fad", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      protected void verify(Checker checker,                           File[] processedFiles,                           String messageFileName,                           String... expected)             throws Exception", "signatureAfterChange": "      protected void verify(Checker checker,                           File[] processedFiles,                           String messageFileName,                           String... expected)             throws Exception", "diff": ["-        final ByteArrayInputStream bais =", "+        final ByteArrayInputStream inputStream =", "-                new InputStreamReader(bais, StandardCharsets.UTF_8))) {", "+                new InputStreamReader(inputStream, StandardCharsets.UTF_8))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3041c510b53a401544c563cfc758f71", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TrailingCommentCheck.java", "commitBeforeChange": "eb31210db6d680a80c7538251f989adf3adb9e3e", "commitAfterChange": "5a46bdbeeadb368fba5c78c6c3bfc772a579a86a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-                log(lineNo.intValue(), MSG_KEY);", "+                log(lineNo, MSG_KEY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3091476558bfafd465f0f18a1c8a56f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java", "commitBeforeChange": "88edaa84fdcd29fe5cce6c3497cb326244b14197", "commitAfterChange": "067896807847df81ba6e65195e4f39069dc3aea7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private static String removeDeviceFromPathOnWindows(String string)", "signatureAfterChange": "     private static String removeDeviceFromPathOnWindows(String path)", "diff": ["-   private static String removeDeviceFromPathOnWindows(String string) {", "+   private static String removeDeviceFromPathOnWindows(String path) {", "-           return string.substring(string.indexOf(\":\") + 1);", "+           return path.substring(path.indexOf(\":\") + 1);", "-       return string;", "+       return path;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d31478946ae32d9d180e6847d5cf9291", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java", "commitBeforeChange": "f0ea60f77bbc5e524320b042d7a90eefbf2bd00d", "commitAfterChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static String baseClassname(String type)", "signatureAfterChange": "     public static String baseClassName(String type)", "diff": ["-    public static String baseClassname(String type) {", "+    public static String baseClassName(String type) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d33c7c950cee39bf9d38767d645de616", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "896af516b0028ff2a26cc1888dfaba620d3fe9e0", "commitAfterChange": "55c92042eb6986e905529de841d3d1c9a7b2b6dd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static boolean isAnnonimousInnerClassEnd(int currentType, char nextChar)", "signatureAfterChange": "     private static boolean isAnonymousInnerClassEnd(int currentType, char nextChar)", "diff": ["-    private static boolean isAnnonimousInnerClassEnd(int currentType, char nextChar) {", "+    private static boolean isAnonymousInnerClassEnd(int currentType, char nextChar) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d35358d8c2c9c95ed2ab5a0037084eaa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocNodeImpl.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public int getColumnNumber()", "signatureAfterChange": "      @Override     public int getColumnNumber()", "diff": ["-        return mColumnNumber;", "+        return columnNumber;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3573a99ff6db0cd3e44868a1135ef9a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java", "commitBeforeChange": "576d593f6cb309d0959639fa707d0a01f28a6609", "commitAfterChange": "9dbc71956635b56a20780d484454e177897b5788", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static boolean branchContains(DetailNode node, int type)", "signatureAfterChange": "     public static boolean branchContains(DetailNode node, int type)", "diff": ["-        while (curNode != null) {", "+        while (true) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d379c956e2ddb7c20f7e6ddcbc44353e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-        return \"SuppressElement[files=\" + mFilePattern + \",checks=\"", "-            + mCheckPattern + \",lines=\" + mLinesCSV + \",columns=\"", "-            + mColumnsCSV + \"]\";", "+        return \"SuppressElement[files=\" + filePattern + \",checks=\"", "+            + checkPattern + \",lines=\" + linesCSV + \",columns=\"", "+            + columnsCSV + \"]\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3a2707526be7d3aa090923287883a1b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void checkAnnotationIndentation(DetailAST aAtNode,             NavigableMap<Integer, DetailAST> aFirstNodesOnLines)", "signatureAfterChange": "     private void checkAnnotationIndentation(DetailAST atNode,             NavigableMap<Integer, DetailAST> firstNodesOnLines)", "diff": ["-    private void checkAnnotationIndentation(DetailAST aAtNode,", "-            NavigableMap<Integer, DetailAST> aFirstNodesOnLines)", "+    private void checkAnnotationIndentation(DetailAST atNode,", "+            NavigableMap<Integer, DetailAST> firstNodesOnLines)", "-        final int currentIndent = aAtNode.getColumnNo() + mIndentLevel;", "-        final int firstNodeIndent = aAtNode.getColumnNo();", "-        final Collection<DetailAST> values = aFirstNodesOnLines.values();", "-        final DetailAST lastAnnotationNode = getLastAnnotationNode(aAtNode);", "+        final int currentIndent = atNode.getColumnNo() + indentLevel;", "+        final int firstNodeIndent = atNode.getColumnNo();", "+        final Collection<DetailAST> values = firstNodesOnLines.values();", "+        final DetailAST lastAnnotationNode = getLastAnnotationNode(atNode);", "-        while (itr.hasNext() && aFirstNodesOnLines.size() > 1) {", "+        while (itr.hasNext() && firstNodesOnLines.size() > 1) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3a2e520ad9bd0643e0dbb83800f1c63", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Check.java", "commitBeforeChange": "721bd2c690356f4ef6a4dd451600fad311fdde76", "commitAfterChange": "a47526404dfcbf638b937ce8a35357151dc12369", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     final public Set getTokens()", "signatureAfterChange": "     final public Set getTokenNames()", "diff": ["-    final public Set getTokens()", "+    final public Set getTokenNames()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3c00e47a7a8d0316f5491092b417098", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void setAllowMissingPropertyJavadoc(final boolean aFlag)", "signatureAfterChange": "     public void setAllowMissingPropertyJavadoc(final boolean flag)", "diff": ["-    public void setAllowMissingPropertyJavadoc(final boolean aFlag)", "+    public void setAllowMissingPropertyJavadoc(final boolean flag)", "-        mAllowMissingPropertyJavadoc = aFlag;", "+        allowMissingPropertyJavadoc = flag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3f74922555cc3383eca8ce1ff228130", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void setMaximumMessage(String aMessage)", "signatureAfterChange": "      public void setMaximumMessage(String message)", "diff": ["-    public void setMaximumMessage(String aMessage)", "+    public void setMaximumMessage(String message)", "-        mMaximumMessage = aMessage;", "+        maximumMessage = message;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3fe91a22f6c275948d87d66a2459051", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/CommentSuppressor.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setCurrentContents(FileContents aCurrentContents)", "signatureAfterChange": "     public void setCurrentContents(FileContents currentContents)", "diff": ["-    public void setCurrentContents(FileContents aCurrentContents)", "+    public void setCurrentContents(FileContents currentContents)", "-        mCurrentContents = aCurrentContents;", "+        this.currentContents = currentContents;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4081ecaac70fc9724256efabef73246", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "e40d9f41cf066f205e3c0ffd1b99a6e37d4963d9", "commitAfterChange": "2ff20f4af36062db07fa245ab6b3a1d8ab2fe16c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private NavigableMap<Integer, DetailAST> collectFirstNodes()", "signatureAfterChange": "     private NavigableMap<Integer, DetailAST> collectFirstNodes()", "diff": ["-                        || firstTokenOnLine != null", "-                        && firstTokenOnLine.getColumnNo() >= curNode.getColumnNo()) {", "+                    || firstTokenOnLine.getColumnNo() >= curNode.getColumnNo()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d424b1cc96e5e38c08ee1c180fe0cbe6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/StaticVariableNameCheck.java", "commitBeforeChange": "1203691be0d887877f2e7a31e2f8ab4379fc6e3d", "commitAfterChange": "4fd6b3ee5978613e7f779fe83330ccf18092d784", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     protected final boolean mustCheckName(DetailAST ast)", "signatureAfterChange": "      @Override     protected final boolean mustCheckName(DetailAST ast)", "diff": ["-        final boolean isStatic = modifiersAST != null", "-            && modifiersAST.branchContains(TokenTypes.LITERAL_STATIC);", "-        final boolean isFinal = modifiersAST != null", "-            && modifiersAST.branchContains(TokenTypes.FINAL);", "+        final boolean isStatic = modifiersAST.branchContains(TokenTypes.LITERAL_STATIC);", "+        final boolean isFinal = modifiersAST.branchContains(TokenTypes.FINAL);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d439f70183758edc461450102efeb94f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheckTest.java", "commitBeforeChange": "d3dcf0474afa45e1b1dae208dd00e6ccc19a5ef3", "commitAfterChange": "3db243d947bce80db9f759798116a664580c770f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAllowSwitchInCase()         throws Exception", "signatureAfterChange": "      @Test     public void testAllowSwitchInCase()         throws Exception", "diff": ["-        checkConfig.addAttribute(\"allowInSwitchCase\", Boolean.TRUE.toString());", "+        checkConfig.addAttribute(\"allowInSwitchCase\", \"true\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4542ad706dc86f1bcbfccf3196097a9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractAccessControlNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setApplyToPackage(boolean aApplyTo)", "signatureAfterChange": "     public void setApplyToPackage(boolean applyTo)", "diff": ["-    public void setApplyToPackage(boolean aApplyTo)", "+    public void setApplyToPackage(boolean applyTo)", "-        mApplyToPackage = aApplyTo;", "+        applyToPackage = applyTo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d459dd326a35a03bbc655ee46f04d046", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "6267c7260d4b69a499c5dc00f6bd38e12609ed93", "commitAfterChange": "b441a1e751faa8d706dbb85d45273bff4f465c6d", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      @Test     @Ignore     public void testTryResources() throws Exception", "signatureAfterChange": "      @Test     public void testTryResources() throws Exception", "diff": ["-    @Ignore", "-            \"something is expected, but there is a NullPointerException\",", "+            //\"something is expected, but there is nothing\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d469f3413e55435b3351fc50c682b0ab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/XMLLoggerTest.java", "commitBeforeChange": "bca6d627ac2fac9aaf75c9d3a90f858619abb6ec", "commitAfterChange": "1a205d4b436650a301ef088ed86a3821b99551f2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "          @Override         public void printStackTrace(PrintWriter printWriter)", "signatureAfterChange": "          @Override         public void printStackTrace(PrintWriter s)", "diff": ["-        public void printStackTrace(PrintWriter printWriter) {", "-            printWriter.print(\"stackTrace\");", "+        public void printStackTrace(PrintWriter s) {", "+            s.print(\"stackTrace\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d47856c5a80ab171ff1eafa6587df12c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ConstantNameCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     protected final boolean mustCheckName(DetailAST ast)", "signatureAfterChange": "      @Override     protected final boolean mustCheckName(DetailAST ast)", "diff": ["-                || ScopeUtils.inAnnotationBlock(ast)", "-                || ScopeUtils.inInterfaceOrAnnotationBlock(ast)", "-                        && !ScopeUtils.inCodeBlock(ast)) {", "+                || ScopeUtils.isInAnnotationBlock(ast)", "+                || ScopeUtils.isInInterfaceOrAnnotationBlock(ast)", "+                        && !ScopeUtils.isInCodeBlock(ast)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4a7e8b0458428652f876dd475216f53", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ParameterFormatCheck.java", "commitBeforeChange": "d7142fd15f57063dc380863c7493aa9179b739bf", "commitAfterChange": "d077a402da51bb238a7da99d5e2542437b145192", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public ParameterFormatCheck()", "signatureAfterChange": "     public ParameterFormatCheck()", "diff": ["-", "+     */", "-        setFormat(\"^[a-z][a-zA-Z0-9]*$\");", "+        super(\"^[a-z][a-zA-Z0-9]*$\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4aa30c5f4da8d50e08254820728ca92", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTags.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public JavadocTags(List<JavadocTag> aTags,             List<InvalidJavadocTag> aInvalidTags)", "signatureAfterChange": "     public JavadocTags(List<JavadocTag> tags,             List<InvalidJavadocTag> invalidTags)", "diff": ["-    public JavadocTags(List<JavadocTag> aTags,", "-            List<InvalidJavadocTag> aInvalidTags)", "+    public JavadocTags(List<JavadocTag> tags,", "+            List<InvalidJavadocTag> invalidTags)", "-        mValidTags = aTags;", "-        mInvalidTags = aInvalidTags;", "+        validTags = tags;", "+        this.invalidTags = invalidTags;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4af5c7f942c1929774fafc109a15ef9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void leaveForEach(DetailAST aForEach)", "signatureAfterChange": "     private void leaveForEach(DetailAST forEach)", "diff": ["-    private void leaveForEach(DetailAST aForEach)", "+    private void leaveForEach(DetailAST forEach)", "-            aForEach.findFirstToken(TokenTypes.VARIABLE_DEF);", "+            forEach.findFirstToken(TokenTypes.VARIABLE_DEF);", "-        mCurrentVariables.push(paramName.getText());", "+        currentVariables.push(paramName.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4be0e563f8d990ebd191121cc0c3786", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private Point findChar(String[] aText, char aChar, Point aFrom)", "signatureAfterChange": "     private Point findChar(String[] text, char character, Point from)", "diff": ["-    private Point findChar(String[] aText, char aChar, Point aFrom)", "+    private Point findChar(String[] text, char character, Point from)", "-        Point curr = new Point(aFrom.getLineNo(), aFrom.getColumnNo());", "-        while ((curr.getLineNo() < aText.length)", "-               && (aText[curr.getLineNo()].charAt(curr.getColumnNo()) != aChar))", "+        Point curr = new Point(from.getLineNo(), from.getColumnNo());", "+        while ((curr.getLineNo() < text.length)", "+               && (text[curr.getLineNo()].charAt(curr.getColumnNo()) != character))", "-            curr = getNextCharPos(aText, curr);", "+            curr = getNextCharPos(text, curr);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4e2f57192dcb683fa0d6ed64835c7a3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "         ExceptionInfo(Token aIdent, String aCurrentClass)", "signatureAfterChange": "         ExceptionInfo(Token ident, String currentClass)", "diff": ["-        ExceptionInfo(Token aIdent, String aCurrentClass)", "+        ExceptionInfo(Token ident, String currentClass)", "-            mClassInfo = createClassInfo(aIdent, aCurrentClass);", "+            classInfo = createClassInfo(ident, currentClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d502bf60bce04f68412cb5658595a1b2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/AllTests.java", "commitBeforeChange": "d69cc899d097b3ecd4006255da650d4bcc748ca3", "commitAfterChange": "ec796dc6410345cc6e2a2e4623dd79f6d9b4c2e0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public static Test suite()", "signatureAfterChange": "      public static Test suite()", "diff": ["+        suite.addTest(new TestSuite(AbstractClassNameCheckTest.class));", "-        suite.addTest(new TestSuite(IllegalAbstractClassNameCheckTest.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d508795628f3423c74389ffeb283961d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "commitAfterChange": "4c1148db9982918e65f8d1156e8fb9c07b206fc9", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-                for (DetailAST var : state.values()) {", "-                    log(var.getLineNo(), var.getColumnNo(), MSG_KEY, var", "+                for (DetailAST node : state.values()) {", "+                    log(node.getLineNo(), node.getColumnNo(), MSG_KEY, node"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5189d471816fb33d9cbc145eabb8ffa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "546f336e25b26d072f96e2cda139b885858ed5b0", "commitAfterChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public DetailAST findFirstToken(int type)", "signatureAfterChange": "     public DetailAST findFirstToken(int type)", "diff": ["-        for (DetailAST i = getFirstChild(); i != null; i = i.getNextSibling()) {", "-            if (i.getType() == type) {", "-                retVal = i;", "+        for (DetailAST ast = getFirstChild(); ast != null; ast = ast.getNextSibling()) {", "+            if (ast.getType() == type) {", "+                retVal = ast;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5233dbf99945410a007f84e95bf0945", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/HtmlTag.java", "commitBeforeChange": "521dacce7582a4349a9b02980c3e849e83c023fb", "commitAfterChange": "82d8e91024a57a96fbb6410dacb29d6a3f582903", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-            Math.min(startOfText + HtmlTag.MAX_TEXT_LEN, text.length());", "+            Math.min(startOfText + MAX_TEXT_LEN, text.length());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d56aae8d70075f045ff544326aeee98b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/UpperEllCheckTest.java", "commitBeforeChange": "03f2be49f7ad3fc9d0143782b020a169f28e50a9", "commitAfterChange": "0c2a64d9f02ab5b94bbf4213cb2978f7b459b6f5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAcceptableTockens()", "signatureAfterChange": "      @Test     public void testAcceptableTokens()", "diff": ["-    public void testAcceptableTockens() {", "+    public void testAcceptableTokens() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5c3a8b58bebfae9e905a2ba7e0e791a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "be6d271ac34efc3daed3dbb873ab8060723dd4f8", "commitAfterChange": "b06dd9801e56887f7da1bbc8b55233e0ff5f5115", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setMaxlinelen(int aLen)", "signatureAfterChange": "     public void setMaxLineLen(int aLen)", "diff": ["-    public void setMaxlinelen(int aLen)", "+    public void setMaxLineLen(int aLen)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5d9ecde92045806f210a13980199a0c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "commitBeforeChange": "6839ac4fd83dde7060c8f6f28e75aa3d6ff2456b", "commitAfterChange": "31f6765fdcf2233ca6c53730c2fc196576557f66", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static boolean isInWhileIdiom(DetailAST ast)", "signatureAfterChange": "     private static boolean isInWhileIdiom(DetailAST ast)", "diff": ["-                ast.getParent(), ALLOWED_ASSIGMENT_IN_COMPARISON_CONTEXT);", "+                ast.getParent(), ALLOWED_ASSIGNMENT_IN_COMPARISON_CONTEXT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d60001bb945e4bcebc86068fddc52513", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "commitAfterChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void logWrongImportGroupOrder(int currentImportLine, String importGroup)", "signatureAfterChange": "     private void logWrongImportGroupOrder(int currentImportLine, String importGroup)", "diff": ["-            log(currentImportLine, \"custom.import.order.nongroup.import\");", "+            log(currentImportLine, MSG_NONGROUP_IMPORT);", "-            log(currentImportLine, \"custom.import.order\", importGroup);", "+            log(currentImportLine, MSG_ORDER, importGroup);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d601c0a0bfe737e366ae95020bad5fdb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setProtectedAllowed(boolean aProtectedAllowed)", "signatureAfterChange": "     public void setProtectedAllowed(boolean protectedAllowed)", "diff": ["-    public void setProtectedAllowed(boolean aProtectedAllowed)", "+    public void setProtectedAllowed(boolean protectedAllowed)", "-        mProtectedAllowed = aProtectedAllowed;", "+        this.protectedAllowed = protectedAllowed;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d626f3dcb70d9d16996a4949f14ebaf2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/CommonUtilsTest.java", "commitBeforeChange": "f0ea60f77bbc5e524320b042d7a90eefbf2bd00d", "commitAfterChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testBaseClassnameForSimpleName()", "signatureAfterChange": "      @Test     public void testBaseClassNameForSimpleName()", "diff": ["-    public void testBaseClassnameForSimpleName() {", "-        assertEquals(\"Set\", CommonUtils.baseClassname(\"Set\"));", "+    public void testBaseClassNameForSimpleName() {", "+        assertEquals(\"Set\", CommonUtils.baseClassName(\"Set\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d645a8165ab815f584fd98cffb1b5196", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "655a496c88fb075c62147484be2baa4e4c7e3f4d", "commitAfterChange": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DefaultLogger(OutputStream infoStream,                          boolean closeInfoAfterUse,                          OutputStream errorStream,                          boolean closeErrorAfterUse) throws UnsupportedEncodingException", "signatureAfterChange": "     public DefaultLogger(OutputStream infoStream,                          boolean closeInfoAfterUse,                          OutputStream errorStream,                          boolean closeErrorAfterUse) throws UnsupportedEncodingException", "diff": ["-        final Writer infoStreamWriter = new OutputStreamWriter(infoStream, \"UTF-8\");", "-        final Writer errorStreamWriter = new OutputStreamWriter(errorStream, \"UTF-8\");", "+        final Writer infoStreamWriter = new OutputStreamWriter(infoStream, UTF8_CHARSET_NAME);", "+        final Writer errorStreamWriter = new OutputStreamWriter(errorStream, UTF8_CHARSET_NAME);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d64d3f60cd580ba2856e1236e95a498b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "80ab48f859c1f16835dbd41afe42414b41969e2f", "commitAfterChange": "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void checkFirstSentence(final DetailAST ast, TextBlock comment)", "signatureAfterChange": "     private void checkFirstSentenceEnding(final DetailAST ast, TextBlock comment)", "diff": ["-    private void checkFirstSentence(final DetailAST ast, TextBlock comment) {", "+    private void checkFirstSentenceEnding(final DetailAST ast, TextBlock comment) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d65944c8f1314c9c458701e23f8499d1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected final ClassInfo findClassAlias(final String aName)", "signatureAfterChange": "     protected final ClassInfo findClassAlias(final String name)", "diff": ["-    protected final ClassInfo findClassAlias(final String aName)", "+    protected final ClassInfo findClassAlias(final String name)", "-        for (int i = mTypeParams.size() - 1; i >= 0; i--) {", "-            final Map<String, ClassInfo> paramMap = mTypeParams.peek(i);", "-            ci = paramMap.get(aName);", "+        for (int i = typeParams.size() - 1; i >= 0; i--) {", "+            final Map<String, ClassInfo> paramMap = typeParams.peek(i);", "+            ci = paramMap.get(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6705e933b0d2900df6b0e9abece5fb7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/CheckUtils.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static double parseDouble(String aText, int aType)", "signatureAfterChange": "     public static double parseDouble(String text, int type)", "diff": ["-    public static double parseDouble(String aText, int aType)", "+    public static double parseDouble(String text, int type)", "-        String txt = aText.replaceAll(\"_\", \"\");", "+        String txt = text.replaceAll(\"_\", \"\");", "-        switch (aType) {", "+        switch (type) {", "-                if (aType == TokenTypes.NUM_INT) {", "+                if (type == TokenTypes.NUM_INT) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d67e0d49da6fa9d479b8f0deb5ff4aeb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/MagicNumberCheck.java", "commitBeforeChange": "eaad55fdba73e17e103dc6600867f26fd6a3896b", "commitAfterChange": "5cf355fad4b8bc613962aac2f52b48d5726f2acc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private float parseFloat(String aText, int aType)", "signatureAfterChange": "     private float parseFloat(String aText, int aType)", "diff": ["-            int radix = 10;", "+            int radix = BASE_10;", "-                radix = 16;", "+                radix = BASE_16;", "-                radix = 8;", "+                radix = BASE_8;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d698fc594c2df40427c56183719b2d02", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java", "commitBeforeChange": "2282f82cb7fd2055245d3bcb4b76c6c27fdd5455", "commitAfterChange": "f1dc9b205d1ccdba85e34f4cb7adf9ffd4af2361", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static DetailAST getNextToken(DetailAST ast)", "signatureAfterChange": "     private static DetailAST getNextToken(DetailAST ast)", "diff": ["-        while (parent != null && next == null) {", "+        while (next == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d69d760ef9e2763a76f8d8ae9f9608df", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Comment.java", "commitBeforeChange": "59d5b734cc81da24b7e91ed55a4e022986b067d7", "commitAfterChange": "8fb2acd39b7db6223486f5e06126c7f0a2642a72", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public final int getLastLineNo()", "signatureAfterChange": "     public final int getEndLineNo()", "diff": ["-    public final int getLastLineNo()", "+    public final int getEndLineNo()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6ba26816de62aadcca2cac22b44bbb7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheck.java", "commitBeforeChange": "4cc300a8e53fec7264ecfb5702369de14fd8a242", "commitAfterChange": "2e3654c59be793a9e9d06f38f0624bfae0e075bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-            log(name.getLineNo(), name.getColumnNo(), \"maxParam\", mMax);", "+            log(name.getLineNo(), name.getColumnNo(), \"maxParam\", mMax, count);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6d616026a59c42a4ab867c6e1715789", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public static String getTokenName(int aID)", "signatureAfterChange": "     public static String getTokenName(int iD)", "diff": ["-    public static String getTokenName(int aID)", "+    public static String getTokenName(int iD)", "-        if (aID == JavadocTokenTypes.EOF) {", "+        if (iD == JavadocTokenTypes.EOF) {", "-        if (aID > TOKEN_VALUE_TO_NAME.length - 1) {", "-            throw new IllegalArgumentException(\"Unknown javadoc token id. Given id: \" + aID);", "+        if (iD > TOKEN_VALUE_TO_NAME.length - 1) {", "+            throw new IllegalArgumentException(\"Unknown javdoc token id. Given id: \" + iD);", "-        final String name = TOKEN_VALUE_TO_NAME[aID];", "+        final String name = TOKEN_VALUE_TO_NAME[iD];", "-            throw new IllegalArgumentException(\"Unknown javadoc token id. Given id: \" + aID);", "+            throw new IllegalArgumentException(\"Unknown javdoc token id. Given id: \" + iD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6e5ba3b942906d6a2623bba87fc8ea0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static boolean inLambda(DetailAST paramDef)", "signatureAfterChange": "     private static boolean isInLambda(DetailAST paramDef)", "diff": ["-    private static boolean inLambda(DetailAST paramDef) {", "+    private static boolean isInLambda(DetailAST paramDef) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d71df76c6d61534b63edff13d071bded", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final String literal = aAST.getText();", "+        final String literal = ast.getText();", "-            if (!(mAllowByTailComment && hasTrailComment(aAST)", "+            if (!(allowByTailComment && haastrailComment(ast)", "-                    || (mAllowEscapesForControlCharacters", "+                    || (allowEscapesForControlCharacters", "-                    || (mAllowNonPrintableEscapes", "+                    || (allowNonPrintableEscapes", "-                log(aAST.getLineNo(), \"forbid.escaped.unicode.char\");", "+                log(ast.getLineNo(), \"forbid.escaped.unicode.char\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d73490d8f6334d51d71d2f17c0439c89", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private boolean checkSwitch(final DetailAST aAST, boolean aUseContinue)", "signatureAfterChange": "     private boolean checkSwitch(final DetailAST ast, boolean useContinue)", "diff": ["-    private boolean checkSwitch(final DetailAST aAST, boolean aUseContinue)", "+    private boolean checkSwitch(final DetailAST ast, boolean useContinue)", "-        DetailAST caseGroup = aAST.findFirstToken(TokenTypes.CASE_GROUP);", "+        DetailAST caseGroup = ast.findFirstToken(TokenTypes.CASE_GROUP);", "-            isTerminated &= isTerminated(caseBody, false, aUseContinue);", "+            isTerminated &= isTerminated(caseBody, false, useContinue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7534a80fb97c81fcbbb0981c1b324ce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public BlockParentHandler(IndentationCheck aIndentCheck,         String aName, DetailAST aAst, ExpressionHandler aParent)", "signatureAfterChange": "     public BlockParentHandler(IndentationCheck indentCheck,         String name, DetailAST ast, ExpressionHandler parent)", "diff": ["-    public BlockParentHandler(IndentationCheck aIndentCheck,", "-        String aName, DetailAST aAst, ExpressionHandler aParent)", "+    public BlockParentHandler(IndentationCheck indentCheck,", "+        String name, DetailAST ast, ExpressionHandler parent)", "-        super(aIndentCheck, aName, aAst, aParent);", "+        super(indentCheck, name, ast, parent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d791c12c521dbb4de288a6b80d7aec21", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "      @Test     public void testLoadPropertiesIOException() throws Exception", "signatureAfterChange": "      @Test     public void testLoadPropertiesIoException() throws Exception", "diff": ["-    public void testLoadPropertiesIOException() throws Exception {", "+    public void testLoadPropertiesIoException() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d79a6976f0e322038117effa8a3a3a71", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/PackageNamesLoaderTest.java", "commitBeforeChange": "4cc94a581c8da49c65d139da08d70aea1b5cf1e9", "commitAfterChange": "88e89a138aa39f50f7642106cde6568f6e07783f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public void testNoFile()         throws CheckstyleException", "signatureAfterChange": "          public void testNoFile()         throws CheckstyleException", "diff": ["-            PackageNamesLoader.loadPackageNames(\"NoFile\");", "+            PackageNamesLoader.loadModuleFactory(\"NoFile\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7b7271c888b43624588353e25b115f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static boolean isDragOk(final DropTargetDragEvent evt)", "signatureAfterChange": "     private static boolean isDragOk(final DropTargetDragEvent evt)", "diff": ["-        boolean ok = false;", "+        boolean okStatus = false;", "-        int i = 0;", "+        int index = 0;", "-        while (!ok && i < flavors.length) {", "-            if (flavors[i].equals(DataFlavor.javaFileListFlavor)) {", "-                ok = true;", "+        while (!okStatus && index < flavors.length) {", "+            if (flavors[index].equals(DataFlavor.javaFileListFlavor)) {", "+                okStatus = true;", "-            i++;", "+            index++;", "-        return ok;", "+        return okStatus;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7b7c1f46711c0a424b91dde37c2ab4d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/grammars/CommentListener.java", "commitBeforeChange": "319f297e13e5c175a62489ff555cff7c463d3c7b", "commitAfterChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     void reportSingleLineComment(String aType,                                  int aStartLineNo, int aStartColNo);", "signatureAfterChange": "     void reportSingleLineComment(String type,                                  int startLineNo, int startColNo);", "diff": ["-    void reportSingleLineComment(String aType,", "+    void reportSingleLineComment(String type,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7bb9f97e5c72de015d568253bb20007", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "93587ecf374c8dd9f040fd3667efc47a3d84ff5d", "commitAfterChange": "b06e2e0015944ceaa74a10134bf06ac5c9e53782", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void visitVariableDef(DetailAST aAST)", "signatureAfterChange": "     private void visitVariableDef(DetailAST aVariableDef)", "diff": ["-    private void visitVariableDef(DetailAST aAST)", "+    private void visitVariableDef(DetailAST aVariableDef)", "-        checkClassName(aAST);", "+        checkClassName(aVariableDef);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7c039bdefee9f6124c4ed251e96b4d8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-    public void leaveToken(DetailAST aAST)", "+    public void leaveToken(DetailAST ast)", "-        if (aAST.getType() != TokenTypes.CLASS_DEF) {", "+        if (ast.getType() != TokenTypes.CLASS_DEF) {", "-        final ClassDesc desc = mClasses.pop();", "+        final ClassDesc desc = classes.pop();", "-                aAST.findFirstToken(TokenTypes.IDENT).getText();", "-            log(aAST.getLineNo(), \"final.class\", className);", "+                ast.findFirstToken(TokenTypes.IDENT).getText();", "+            log(ast.getLineNo(), \"final.class\", className);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7d08be03886986ac4009aebf22ec5c5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setIgnoreName(boolean aValue)", "signatureAfterChange": "     public void setIgnoreName(boolean value)", "diff": ["-    public void setIgnoreName(boolean aValue)", "+    public void setIgnoreName(boolean value)", "-        mIgnoreName = aValue;", "+        ignoreName = value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7d6f2efb69e41d7d9ce2ca6debc1be1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "e71b877a424e1e6e247a2ef6825c742a94afd68f", "commitAfterChange": "6f4247181beca3530b5c2dc762d9c5c6a018a06c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws BuildException", "diff": ["-                final Configuration config = createConfiguration();", "+                final GlobalProperties config = createGlobalProperties();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7ddab054e80e5ed6228e4c3e6b29ca1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodLengthCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final DetailAST openingBrace = aAST.findFirstToken(TokenTypes.SLIST);", "+        final DetailAST openingBrace = ast.findFirstToken(TokenTypes.SLIST);", "-            if (!mCountEmpty) {", "+            if (!countEmpty) {", "-            if (length > mMax) {", "-                log(aAST.getLineNo(), aAST.getColumnNo(), \"maxLen.method\",", "-                        length, mMax);", "+            if (length > max) {", "+                log(ast.getLineNo(), ast.getColumnNo(), \"maxLen.method\",", "+                        length, max);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8064e042b695b0830b6f52f68184e48", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressElementTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testDecideByFileNameAndModuleMatching_ModuleEqual()", "signatureAfterChange": "      @Test     public void testDecideByFileNameAndModuleMatchingModuleEqual()", "diff": ["-    public void testDecideByFileNameAndModuleMatching_ModuleEqual() {", "+    public void testDecideByFileNameAndModuleMatchingModuleEqual() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d82d90a9c761f60e96e76280a9265a91", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "         void increment(Scope aScope)", "signatureAfterChange": "         void increment(Scope scope)", "diff": ["-        void increment(Scope aScope)", "+        void increment(Scope scope)", "-            mTotal++;", "-            if (mInInterface) {", "-                mCounts.put(Scope.PUBLIC, 1 + value(Scope.PUBLIC));", "+            total++;", "+            if (inInterface) {", "+                counts.put(Scope.PUBLIC, 1 + value(Scope.PUBLIC));", "-                mCounts.put(aScope, 1 + value(aScope));", "+                counts.put(scope, 1 + value(scope));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d834d2caeeea0e37af8fc4fe53dedc15", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setAllowThrowsTagsForSubclasses(boolean aFlag)", "signatureAfterChange": "     public void setAllowThrowsTagsForSubclasses(boolean flag)", "diff": ["-    public void setAllowThrowsTagsForSubclasses(boolean aFlag)", "+    public void setAllowThrowsTagsForSubclasses(boolean flag)", "-        mAllowThrowsTagsForSubclasses = aFlag;", "+        allowThrowsTagsForSubclasses = flag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8420fabc1d96e2043b455904d06aca4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     void put(String fileName, long timestamp)", "signatureAfterChange": "     void put(String checkedFileName, long timestamp)", "diff": ["-    void put(String fileName, long timestamp) {", "-        details.setProperty(fileName, Long.toString(timestamp));", "+    void put(String checkedFileName, long timestamp) {", "+        details.setProperty(checkedFileName, Long.toString(timestamp));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8611d3a8165fd65ca2445b8b9b6e585", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule333orderingandsoacing/CustomImportOrderTest.java", "commitBeforeChange": "6fbe3f344a5507d1368d1564647ffacb12463d17", "commitAfterChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void customImportTest_2() throws Exception", "signatureAfterChange": "      @Test     public void customImportTest2() throws Exception", "diff": ["-    public void customImportTest_2() throws Exception {", "+    public void customImportTest2() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d86480d8f0071e35dbb9f51657ed77e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Comment.java", "commitBeforeChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "commitAfterChange": "abfc952fd0ed88f6246b1d969a8a980ea63f0bd6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public int getStartColNo()", "signatureAfterChange": "      @Override     public int getStartColNo()", "diff": ["-        return firstCol;", "+        return startColNo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d870d80ce2e27277dd6e818c2f74a951", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public DefaultLogger(OutputStream aOS, boolean aCloseStreamsAfterUse)", "signatureAfterChange": "     public DefaultLogger(OutputStream os, boolean closeStreamsAfterUse)", "diff": ["-    public DefaultLogger(OutputStream aOS, boolean aCloseStreamsAfterUse)", "+    public DefaultLogger(OutputStream os, boolean closeStreamsAfterUse)", "-        // no need to close aOS twice", "-        this(aOS, aCloseStreamsAfterUse, aOS, false);", "+        // no need to close oS twice", "+        this(os, closeStreamsAfterUse, os, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d87cff20a9a644f58beeb790e1e63c67", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/ConfigValidationTest.java", "commitBeforeChange": "97956e1ae5d6842401ea0bfab121e8fb8d51c14d", "commitAfterChange": "d4ef19e679f276411a0de3b07e579c217d15f098", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testGoogleChecks() throws Exception", "signatureAfterChange": "     @Test     public void testGoogleChecks() throws Exception", "diff": ["-        final Checker c = new Checker();", "-        c.setModuleClassLoader(Thread.currentThread().getContextClassLoader());", "-        c.configure(checkerConfig);", "-        c.addListener(new BriefLogger(stream));", "+        final Checker checker = new Checker();", "+        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());", "+        checker.configure(checkerConfig);", "+        checker.addListener(new BriefLogger(stream));", "-        verify(c, files.toArray(new File[files.size()]), \"\", new String[0], null);", "+        verify(checker, files.toArray(new File[files.size()]), \"\", new String[0], null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d89555adce6b62525bd06df11cc25348", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean hasEmptyLineBefore(DetailAST aToken)", "signatureAfterChange": "     private boolean hasEmptyLineBefore(DetailAST token)", "diff": ["-    private boolean hasEmptyLineBefore(DetailAST aToken)", "+    private boolean hasEmptyLineBefore(DetailAST token)", "-        final int lineNo = aToken.getLineNo();", "+        final int lineNo = token.getLineNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d89569f81a8f14d975f48a22d1e05df1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentLevel.java", "commitBeforeChange": "1ca93bdf66b630e58d979ad2aa40f02e678db5cf", "commitAfterChange": "bc36fe40fcfb51e720dc531a824cd6664ccc4c8b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void addAcceptedIndent(IndentLevel aIndent)", "signatureAfterChange": "     public void addAcceptedIndent(IndentLevel aIndent)", "diff": ["-        mLevels.addAll(aIndent.mLevels);", "+        mLevels.or(aIndent.mLevels);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8984380109d49a45032d4dc47d5a164", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/RedundantImportCheck.java", "commitBeforeChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "commitAfterChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                log(ast.getLineNo(), ast.getColumnNo(), \"import.lang\",", "+                log(ast.getLineNo(), ast.getColumnNo(), MSG_LANG,", "-                log(ast.getLineNo(), ast.getColumnNo(), \"import.same\",", "+                log(ast.getLineNo(), ast.getColumnNo(), MSG_SAME,", "-                            \"import.duplicate\", full.getLineNo(),", "+                            MSG_DUPLICATE, full.getLineNo(),", "-                        \"import.duplicate\", full.getLineNo(), imp.getText());", "+                        MSG_DUPLICATE, full.getLineNo(), imp.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8991713504ff1a232e7c69cc57d5e4b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/doclets/TokenTypesDocletTest.java", "commitBeforeChange": "d814d1352b63136a400cd8f4dffd03d68c9ccd24", "commitAfterChange": "3edd1b53a5d8d407fd33d8c514db8bc1c7274fe5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testCheckOptions()", "signatureAfterChange": "      @Test     public void testCheckOptions()", "diff": ["-        TestMessager testMessanger = new TestMessager(context);", "+        TestMessager testMessager = new TestMessager(context);", "-        assertFalse(TokenTypesDoclet.checkOptions(options, testMessanger));", "+        assertFalse(TokenTypesDoclet.checkOptions(options, testMessager));", "-        assertTrue(TokenTypesDoclet.checkOptions(options, testMessanger));", "+        assertTrue(TokenTypesDoclet.checkOptions(options, testMessager));", "-        assertFalse(TokenTypesDoclet.checkOptions(options, testMessanger));", "+        assertFalse(TokenTypesDoclet.checkOptions(options, testMessager));", "-        Assert.assertArrayEquals(expected, testMessanger.messages.toArray());", "+        Assert.assertArrayEquals(expected, testMessager.messages.toArray());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8c512d9cc0cde671684ddfab5a0e85d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "de6862e0bedab5c22d54b4cf503144c28f1aea26", "commitAfterChange": "55c2560774f0624afeae9e6c29fd19ae59e8c24b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private boolean emptyBlockCheck(DetailAST aAST, int aParentType, int aMatch)", "signatureAfterChange": "     private boolean isEmptyBlock(DetailAST aAST, int aParentType, int aMatch)", "diff": ["-    private boolean emptyBlockCheck(DetailAST aAST, int aParentType, int aMatch)", "+    private boolean isEmptyBlock(DetailAST aAST, int aParentType, int aMatch)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8eb88edd46e8fb2725b8db297be8b12", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "bf9325be913ce46a1427232c455f4830b574ba44", "commitAfterChange": "745e21f1e4d202dd8dba577585f35f7d3f10d839", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "         private AuditListener createXMLLogger(Task task) throws IOException", "signatureAfterChange": "         private AuditListener createXmlLogger(Task task) throws IOException", "diff": ["-        private AuditListener createXMLLogger(Task task) throws IOException {", "+        private AuditListener createXmlLogger(Task task) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8ed3978ba2479a2e000b8689651bb92", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST ast)", "diff": ["-    public void beginTree(DetailAST aAST)", "+    public void beginTree(DetailAST ast)", "-        mFileName = getFileName();", "-        mSeenFirstToken = false;", "-        mValidFirst = false;", "-        mHasPublic = false;", "-        mWrongType = null;", "+        fileName = getFileName();", "+        seenFirstToken = false;", "+        validFirst = false;", "+        hasPublic = false;", "+        wrongType = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d90b33aa548c0e459a4adeb5799e8c25", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "bf529ef600fa9ef2034d0412c198b2121f2b94f2", "commitAfterChange": "ce196814d857a4244a80c51d5151cc35e90b6749", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private static String encodeAmpersend(String value, int ampPosition)", "signatureAfterChange": "     private static String encodeAmpersand(String value, int ampPosition)", "diff": ["-    private static String encodeAmpersend(String value, int ampPosition) {", "+    private static String encodeAmpersand(String value, int ampPosition) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d90f7f7d5c745a9bc7bd3ed7d094b4b2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Override     public void addError(AuditEvent aEvt)", "signatureAfterChange": "     @Override     public void addError(AuditEvent evt)", "diff": ["-    public void addError(AuditEvent aEvt)", "+    public void addError(AuditEvent evt)", "-        final SeverityLevel severityLevel = aEvt.getSeverityLevel();", "+        final SeverityLevel severityLevel = evt.getSeverityLevel();", "-            final String fileName = aEvt.getFileName();", "-            final String message = aEvt.getMessage();", "+            final String fileName = evt.getFileName();", "+            final String message = evt.getMessage();", "-            sb.append(':').append(aEvt.getLine());", "-            if (aEvt.getColumn() > 0) {", "-                sb.append(':').append(aEvt.getColumn());", "+            sb.append(':').append(evt.getLine());", "+            if (evt.getColumn() > 0) {", "+                sb.append(':').append(evt.getColumn());", "-            mErrorWriter.println(sb.toString());", "+            errorWriter.println(sb.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d925cedd0e9fa46f0e996150bee362cf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/FileLengthCheckTest.java", "commitBeforeChange": "8bb244d50b7ef1b8028fa5492009d3ea367b1a19", "commitAfterChange": "721bd2c690356f4ef6a4dd451600fad311fdde76", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testArgs() throws Exception", "signatureAfterChange": "      public void testArgs() throws Exception", "diff": ["-        catch (ConversionException ex)", "+        catch (CheckstyleException ex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d933039d5a426e4a42e0917e7e60333f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setExcludes(String[] aExcludes)", "signatureAfterChange": "     public void setExcludes(String[] excludesParam)", "diff": ["-    public void setExcludes(String[] aExcludes)", "+    public void setExcludes(String[] excludesParam)", "-        mExcludes.clear();", "-        for (final String exclude : aExcludes) {", "-            mExcludes.add(exclude.endsWith(\".*\") ? exclude : exclude + \".*\");", "+        excludes.clear();", "+        for (final String exclude : excludesParam) {", "+            excludes.add(exclude.endsWith(\".*\") ? exclude : exclude + \".*\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d958e55c76bbccf11da0102f6276607b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule341onetoplevel/OneTopLevelClassTest.java", "commitBeforeChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "commitAfterChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void bad3Test() throws Exception", "signatureAfterChange": "      @Test     public void bad2Test() throws Exception", "diff": ["-", "-    @Test", "-    public void bad3Test() throws Exception {", "-", "-        final Class<OneTopLevelClassCheck> clazz = OneTopLevelClassCheck.class;", "-        final String messageKey = \"one.top.level.class\";", "-", "-        final String[] expected = {", "-        final String filePath = builder.getFilePath(\"OneTopLevelClassBad3\");", "+        final String filePath = builder.getFilePath(\"InputOneTopLevelClassBad2\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9623fd9f87f401b157a1928c619dd2a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     protected List<File> scanFileSets()", "signatureAfterChange": "     protected List<File> scanFileSets()", "diff": ["-            final FileSet fs = fileSets.get(i);", "-            final DirectoryScanner ds = fs.getDirectoryScanner(getProject());", "-            ds.scan();", "+            final FileSet fileSet = fileSets.get(i);", "+            final DirectoryScanner scanner = fileSet.getDirectoryScanner(getProject());", "+            scanner.scan();", "-            final String[] names = ds.getIncludedFiles();", "+            final String[] names = scanner.getIncludedFiles();", "-                    + ds.getBasedir(), Project.MSG_VERBOSE);", "+                    + scanner.getBasedir(), Project.MSG_VERBOSE);", "-                final String pathname = ds.getBasedir() + File.separator", "+                final String pathname = scanner.getBasedir() + File.separator"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9987b7952bc267a818e1f3f63460fd5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Scope.java", "commitBeforeChange": "d917b95a017b235c99f52624475352e2d79ce7b2", "commitAfterChange": "51dae59b8dcfb5a34f2a8a5b3e788eb6599a1df3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public int compareTo(Object aObject)", "signatureAfterChange": "     public int compareTo(Object aObject)", "diff": ["-        Scope scope = (Scope) aObject;", "-        return this.mCode - scope.mCode;", "+        final Scope s = (Scope) aObject;", "+        return this.mCode - s.mCode;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9dd9640e5ee800ed07ce884b686eabb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "3822f0d95ae2f2048ee0137d30c870e3de9b0df8", "commitAfterChange": "c589c8dce26371f852394b5c8524ee453ecab96f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     public void testInParentheses()         throws Exception", "signatureAfterChange": "      @Test     public void testInTernary()         throws Exception", "diff": ["-    public void testInParentheses()", "-        throws Exception", "-    {", "-        final DefaultConfiguration checkConfig =", "-                createCheckConfig(MemberNameCheck.class);", "-        final String[] expected = {};", "-        verify(checkConfig, getPath(\"grammars/java8/InputLambdaTest18.java\"),", "-                expected);", "-", "-    }", "+        verify(checkConfig, getPath(\"grammars/java8/InputLambdaTest18.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9e6fcd787c0530a7a233643a8465254", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressElementTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testDecideByFileNameAndModuleMatching_CheckRegExpMatch()", "signatureAfterChange": "      @Test     public void testDecideByFileNameAndModuleMatchingCheckRegExpMatch()", "diff": ["-    public void testDecideByFileNameAndModuleMatching_CheckRegExpMatch() {", "+    public void testDecideByFileNameAndModuleMatchingCheckRegExpMatch() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da15a305a66f8a5e5577d497feb7e6e0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testNLWithAnnotations() throws Exception", "signatureAfterChange": "      @Test     public void testNlWithAnnotations() throws Exception", "diff": ["-    public void testNLWithAnnotations() throws Exception {", "+    public void testNlWithAnnotations() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da4637a4c4221d70936c97126d9d95dc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "2cf54ade2182e29c413f23e2235a896247d7a2ad", "commitAfterChange": "d282053d9ce02c13c779decfd079a8305086f752", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testBadOverrideFromObjectJ5Compat() throws Exception", "signatureAfterChange": "     @Test     public void testBadOverrideFromObjectJ5Compatible() throws Exception", "diff": ["-    public void testBadOverrideFromObjectJ5Compat() throws Exception {", "+    public void testBadOverrideFromObjectJ5Compatible() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da47750e9890afe2f285752747b1c635", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/PackageObjectFactoryTest.java", "commitBeforeChange": "ec0085226c3762e2d0d786ba1181e4e1d0496c0c", "commitAfterChange": "b8d0a65d5059b806bcf801db797232d4662d340d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testMakeObectFromName()         throws CheckstyleException", "signatureAfterChange": "      public void testMakeObjectFromName()         throws CheckstyleException", "diff": ["-    public void testMakeObectFromName()", "+    public void testMakeObjectFromName()", "-        PackageObjectFactory factory =", "+        final PackageObjectFactory factory =", "-                new String [] {},", "-                this.getClass().getClassLoader(),", "+                new String[] {},", "+                getClass().getClassLoader(),", "+        assertNotNull(factory);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da7ba0d9a81490e73b17f2f453d36347", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void validateNewLinePosion(DetailAST brace, DetailAST startToken,                                        String braceLine)", "signatureAfterChange": "     private void validateNewLinePosion(DetailAST brace, DetailAST startToken,                                        String braceLine)", "diff": ["-                log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);", "+                log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);", "-                log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);", "+                log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);", "-            log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);", "+            log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da91fbe25a9db04cd80f36f04e9168bd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Override     public void checkIndentation()", "signatureAfterChange": "      @Override     public void checkIndentation()", "diff": ["-                        getChildrenExpectedLevel(),", "+                        getChildrenExpectedIndent(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da97a83312dc84a33ca546f994afc1f4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/HtmlTag.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public int getPosition()", "signatureAfterChange": "     public int getPosition()", "diff": ["-        return mPosition;", "+        return position;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dae43176ae7ce50e28bab8220d4634a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void beginProcessing(String aCharset)", "signatureAfterChange": "      @Override     public void beginProcessing(String charset)", "diff": ["-    public void beginProcessing(String aCharset)", "+    public void beginProcessing(String charset)", "-        super.beginProcessing(aCharset);", "-        mDirectoriesChecked.clear();", "+        super.beginProcessing(charset);", "+        directoriesChecked.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db0efd2dfaf2ff0d171a54109955e37e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public final DetailAST getFirstNode()", "signatureAfterChange": "      public final DetailAST getFirstNode()", "diff": ["-        return mFirstNode;", "+        return firstNode;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db4c167849e29f9aab7d98d72a94b596", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "         public FieldFrame(FieldFrame aParent, boolean aStaticType)", "signatureAfterChange": "         public FieldFrame(FieldFrame parent, boolean staticType)", "diff": ["-        public FieldFrame(FieldFrame aParent, boolean aStaticType)", "+        public FieldFrame(FieldFrame parent, boolean staticType)", "-            mParent = aParent;", "-            mStaticType = aStaticType;", "+            this.parent = parent;", "+            this.staticType = staticType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db5d1e4737e2bd75aa1fb96f5a49bf4d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "3c7c3cbe88a2bec0962702305db4f2b05117501c", "commitAfterChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "         public void setStatic(boolean isStatic)", "signatureAfterChange": "         public void setStaticImport(boolean isStatic)", "diff": ["-        public void setStatic(boolean isStatic)", "+        public void setStaticImport(boolean isStatic)", "-            this.isStatic = isStatic;", "+            this.staticImport = isStatic;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbabde955cbb5e5336164e5b6fd1be23", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void setMaxPackage(int aValue)", "signatureAfterChange": "     public void setMaxPackage(int value)", "diff": ["-    public void setMaxPackage(int aValue)", "+    public void setMaxPackage(int value)", "-        mMaxPackage = aValue;", "+        maxPackage = value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbd98ccc9d1560745bac17a0948871c6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheckTest.java", "commitBeforeChange": "443b98cf24c6b6b7090b83603f40ec9c88ab189f", "commitAfterChange": "e1613910f30cc63de1393ed897aa766932e1d973", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testFP() throws Exception", "signatureAfterChange": "     @Test     public void testFP() throws Exception", "diff": ["-                createCheckConfig(JavaDocTagContinuationIndentationCheck.class);", "+                createCheckConfig(JavadocTagContinuationIndentationCheck.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbf5060438d8c133de7d0d6cbcb94ae4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "         boolean isDeclaredAsAbstract()", "signatureAfterChange": "         boolean isDeclaredAsAbstract()", "diff": ["-            return mDeclaredAsAbstract;", "+            return declaredAsAbstract;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbfcba10f2eeb72aefbb248b6ac37cc0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtils.java", "commitBeforeChange": "5e0f360e7b7745a362bd7a655e98654a2ad36443", "commitAfterChange": "3813f1ccbf157f463c041ccfc462399845ddff6e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public static boolean isLocalVariableDef(DetailAST aAST)", "signatureAfterChange": "     public static boolean isLocalVariableDef(DetailAST node)", "diff": ["-    public static boolean isLocalVariableDef(DetailAST aAST) {", "+    public static boolean isLocalVariableDef(DetailAST node) {", "-        if (aAST.getType() == TokenTypes.VARIABLE_DEF) {", "-            final DetailAST parent = aAST.getParent();", "+        if (node.getType() == TokenTypes.VARIABLE_DEF) {", "+            final DetailAST parent = node.getParent();", "-        if (aAST.getType() == TokenTypes.PARAMETER_DEF) {", "-            final DetailAST parent = aAST.getParent();", "+        if (node.getType() == TokenTypes.PARAMETER_DEF) {", "+            final DetailAST parent = node.getParent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc0bc703ce4784930a7737a2b33362ce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setBasenameSeparator(String aBasenameSeparator)", "signatureAfterChange": "     public void setBasenameSeparator(String basenameSeparator)", "diff": ["-    public void setBasenameSeparator(String aBasenameSeparator)", "+    public void setBasenameSeparator(String basenameSeparator)", "-        mBasenameSeparator = aBasenameSeparator;", "+        this.basenameSeparator = basenameSeparator;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc172265846224fe83f1ed2354fc3381", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "03f2be49f7ad3fc9d0143782b020a169f28e50a9", "commitAfterChange": "0c2a64d9f02ab5b94bbf4213cb2978f7b459b6f5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                    checkName = removeChecktylePrefixIfExests(checkName);", "+                    checkName = removeCheckstylePrefixIfExists(checkName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc33121a6bffa1286d97cd9cb1f93f17", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "d814d1352b63136a400cd8f4dffd03d68c9ccd24", "commitAfterChange": "3edd1b53a5d8d407fd33d8c514db8bc1c7274fe5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected void checkToplevelToken()", "signatureAfterChange": "     protected void checkTopLevelToken()", "diff": ["-    protected void checkToplevelToken() {", "-        final DetailAST toplevel = getToplevelAST();", "+    protected void checkTopLevelToken() {", "+        final DetailAST topLevel = getTopLevelAst();", "-        if (toplevel == null", "-            || getLevel().isAcceptable(expandedTabsColumnNo(toplevel)) || hasLabelBefore()) {", "+        if (topLevel == null", "+            || getLevel().isAcceptable(expandedTabsColumnNo(topLevel)) || hasLabelBefore()) {", "-        if (!shouldTopLevelStartLine() && !startsLine(toplevel)) {", "+        if (!shouldTopLevelStartLine() && !startsLine(topLevel)) {", "-        logError(toplevel, \"\", expandedTabsColumnNo(toplevel));", "+        logError(topLevel, \"\", expandedTabsColumnNo(topLevel));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc461a658e130bf4fe1c02b7f86cd3d6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private boolean checkTry(final DetailAST aAST, boolean aUseBreak,                              boolean aUseContinue)", "signatureAfterChange": "     private boolean checkTry(final DetailAST ast, boolean useBreak,                              boolean useContinue)", "diff": ["-    private boolean checkTry(final DetailAST aAST, boolean aUseBreak,", "-                             boolean aUseContinue)", "+    private boolean checkTry(final DetailAST ast, boolean useBreak,", "+                             boolean useContinue)", "-        final DetailAST finalStmt = aAST.getLastChild();", "+        final DetailAST finalStmt = ast.getLastChild();", "-                                aUseBreak, aUseContinue);", "+                                useBreak, useContinue);", "-        boolean isTerminated = isTerminated(aAST.getFirstChild(),", "-                                            aUseBreak, aUseContinue);", "+        boolean isTerminated = isTerminated(ast.getFirstChild(),", "+                                            useBreak, useContinue);", "-        DetailAST catchStmt = aAST.findFirstToken(TokenTypes.LITERAL_CATCH);", "+        DetailAST catchStmt = ast.findFirstToken(TokenTypes.LITERAL_CATCH);", "-            isTerminated &= isTerminated(catchBody, aUseBreak, aUseContinue);", "+            isTerminated &= isTerminated(catchBody, useBreak, useContinue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc46daca4bcf40845a878b78cdc19b12", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Override     public final void visitToken(DetailAST aBlockCommentAst)", "signatureAfterChange": "      @Override     public final void visitToken(DetailAST blockCommentAst)", "diff": ["-    public final void visitToken(DetailAST aBlockCommentAst)", "+    public final void visitToken(DetailAST blockCommentAst)", "-        if (JavadocUtils.isJavadocComment(aBlockCommentAst)) {", "-            mBlockCommentAst = aBlockCommentAst;", "+        if (JavadocUtils.isJavadocComment(blockCommentAst)) {", "+            this.blockCommentAst = blockCommentAst;", "-            final String treeCacheKey = aBlockCommentAst.getLineNo() + \":\"", "-                    + aBlockCommentAst.getColumnNo();", "+            final String treeCacheKey = blockCommentAst.getLineNo() + \":\"", "+                    + blockCommentAst.getColumnNo();", "-                ps = parseJavadocAsDetailNode(aBlockCommentAst);", "+                ps = parseJavadocAsDetailNode(blockCommentAst);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd047ddfaeaea7d26f0392e79b6aeb95", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "         public void setTofile(File aTo)", "signatureAfterChange": "         public void setTofile(File to)", "diff": ["-        public void setTofile(File aTo)", "+        public void setTofile(File to)", "-            mToFile = aTo;", "+            toFile = to;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd292f31f9ac1c2abcf66f15a906cf81", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "bdd55605c098cb581884a790286dfec5e57710c8", "commitAfterChange": "913028d7f2698018bb9414d763110d3ef25be875", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "     private void checkHeader()", "signatureAfterChange": "     private void checkHeader()", "diff": ["-                if (i == (mConfig.getHeaderIgnoreLineNo() - 1)) {", "+                if (mConfig.isHeaderIgnoreLineNo(i + 1)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd548f4f45b0ca458d7d741fa9790381", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/LineLengthCheck.java", "commitBeforeChange": "4cc300a8e53fec7264ecfb5702369de14fd8a242", "commitAfterChange": "2e3654c59be793a9e9d06f38f0624bfae0e075bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST aRootAST)", "diff": ["-                log(i + 1, \"maxLineLen\", mMax);", "+                log(i + 1, \"maxLineLen\", mMax, realLength);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd9df9c97d3e7a6a18f68c1255b63dc2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/FullIdent.java", "commitBeforeChange": "a6542ab75c1051e885be935b2c252269923f8f6b", "commitAfterChange": "31ac01616c5544f85205329965f491a40cf6f138", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void append(String aText)", "signatureAfterChange": "     private void append(String aText)", "diff": ["-    public void append(String aText)", "+    private void append(String aText)", "-        mBuffer.append(\".\");", "+        mBuffer.append(aText);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dda68f20ce040e99e56dc88a27d7cc30", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "commitAfterChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private static Set<String> collectReferecesFromJavadoc(TextBlock cmt)", "signatureAfterChange": "     private static Set<String> collectReferencesFromJavadoc(TextBlock cmt)", "diff": ["-    private static Set<String> collectReferecesFromJavadoc(TextBlock cmt) {", "+    private static Set<String> collectReferencesFromJavadoc(TextBlock cmt) {", "-        // INLINEs inside BLOCKs get hidden when using ALL", "+        // INLINE tags inside BLOCKs get hidden when using ALL"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddc3e4ec76ad1b9e62ced9e5695559ad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "896af516b0028ff2a26cc1888dfaba620d3fe9e0", "commitAfterChange": "55c92042eb6986e905529de841d3d1c9a7b2b6dd", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void tagSuppressions()", "signatureAfterChange": "     private void tagSuppressions()", "diff": ["-            final Collection<List<TextBlock>> cCoonts = contents", "+            final Collection<List<TextBlock>> cComments = contents", "-            for (List<TextBlock> eleont : cCoonts) {", "-                tagSuppressions(eleont);", "+            for (List<TextBlock> element : cComments) {", "+                tagSuppressions(element);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddc599b6fcd6a4dc4eec2702f85f5413", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "13a49cc45b1527357934dd7802c24686d7bb7858", "commitAfterChange": "24d7448294b03e49709c8e5588e89c27091ba0f2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     protected void checkRCurly()", "signatureAfterChange": "     protected void checkRCurly()", "diff": ["-        if (curlyLevel().accept(rcurlyPos)", "-            || !rcurlyMustStart() && !startsLine(rcurly)", "+        if (curlyLevel().isAcceptable(rcurlyPos)", "+            || !shouldStartWithRCurly() && !startsLine(rcurly)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddcfb424212d2c6e0a9687deedddd7b8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     private DetailAST findMatchingAnnotation(DetailAST variableDef)", "signatureAfterChange": "     private DetailAST findMatchingAnnotation(DetailAST variableDef)", "diff": ["-                final DetailAST at = child.getFirstChild();", "+                final DetailAST ast = child.getFirstChild();", "-                    FullIdent.createFullIdent(at.getNextSibling()).getText();", "+                    FullIdent.createFullIdent(ast.getNextSibling()).getText();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddd04eb708353c7d64017cb43b4220bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheckTest.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testEnumsAndAnnotations() throws Exception", "signatureAfterChange": "      @Test     public void testEnumsAndAnnotations() throws Exception", "diff": ["-        mCheckConfig.addAttribute(\"tag\", \"@incomplete\");", "-        mCheckConfig.addAttribute(\"tagFormat\", \".*\");", "-        mCheckConfig.addAttribute(\"severity\", \"ignore\");", "-        mCheckConfig.addAttribute(\"tagSeverity\", \"error\");", "-        mCheckConfig.addAttribute(\"tokens\",", "+        checkConfig.addAttribute(\"tag\", \"@incomplete\");", "+        checkConfig.addAttribute(\"tagFormat\", \".*\");", "+        checkConfig.addAttribute(\"severity\", \"ignore\");", "+        checkConfig.addAttribute(\"tagSeverity\", \"error\");", "+        checkConfig.addAttribute(\"tokens\",", "-        verify(mCheckConfig, getPath(\"InputWriteTag2.java\"), expected);", "+        verify(checkConfig, getPath(\"InputWriteTag2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de1262be5feb3eb657d0f0b61d8ae5cc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/TypecastParenPadCheck.java", "commitBeforeChange": "2314cb57d26b5fc9931e6e74714faea8a131ae17", "commitAfterChange": "4f629d08adff5f4479a46261a32394ef16492a1f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        else if (ast.getParent() != null", "-                 && ast.getParent().getType() == TokenTypes.TYPECAST", "+        else if (ast.getParent().getType() == TokenTypes.TYPECAST"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de16c33e8d60ee51e2fcbdda37ff52f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private int countMatches(Pattern aPattern, String aTarget)", "signatureAfterChange": "     private int countMatches(Pattern pattern, String target)", "diff": ["-    private int countMatches(Pattern aPattern, String aTarget)", "+    private int countMatches(Pattern pattern, String target)", "-        final Matcher matcher = aPattern.matcher(aTarget);", "+        final Matcher matcher = pattern.matcher(target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de2008e48f08dd959f14d0344974444b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheckTest.java", "commitBeforeChange": "083c9eb1dc214cfe6de4dc4f9f83ff163ff6b79e", "commitAfterChange": "0b52fefcc898f6f82c627bba9fcdd38a62583b22", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static String getFileNotFoundDetail(File file) throws Exception", "signatureAfterChange": "     private static String getFileNotFoundDetail(File file) throws Exception", "diff": ["-            throw new Exception(\"File \" + file.getPath() + \" should not exist\");", "+            throw new IllegalStateException(\"File \" + file.getPath() + \" should not exist\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de3db5dad4f1eac4bfc86fb83c564d55", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void logIOException(IOException ex, File file)", "signatureAfterChange": "     private void logIoException(IOException ex, File file)", "diff": ["-    private void logIOException(IOException ex, File file) {", "+    private void logIoException(IOException ex, File file) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de6af29f9a7bd305939cb3dbc0f54232", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static FilterSet loadSuppressions(             InputSource source, String sourceName)         throws CheckstyleException", "signatureAfterChange": "     private static FilterSet loadSuppressions(             InputSource source, String sourceName)         throws CheckstyleException", "diff": ["-        catch (final FileNotFoundException e) {", "-            throw new CheckstyleException(UNABLE_TO_FIND_ERROR_MESSAGE + sourceName, e);", "+        catch (final FileNotFoundException ex) {", "+            throw new CheckstyleException(UNABLE_TO_FIND_ERROR_MESSAGE + sourceName, ex);", "-        catch (final ParserConfigurationException | SAXException e) {", "+        catch (final ParserConfigurationException | SAXException ex) {", "-                    sourceName, e.getMessage());", "-            throw new CheckstyleException(message, e);", "+                    sourceName, ex.getMessage());", "+            throw new CheckstyleException(message, ex);", "-        catch (final IOException e) {", "-            throw new CheckstyleException(\"Unable to read \" + sourceName, e);", "+        catch (final IOException ex) {", "+            throw new CheckstyleException(\"Unable to read \" + sourceName, ex);", "-        catch (final NumberFormatException e) {", "+        catch (final NumberFormatException ex) {", "-                    sourceName, e.getMessage());", "-            throw new CheckstyleException(message, e);", "+                    sourceName, ex.getMessage());", "+            throw new CheckstyleException(message, ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de730de167ac4f6db1679109506e66b8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     public void initialize(Token aTok)", "signatureAfterChange": "      @Override     public void initialize(Token tok)", "diff": ["-    public void initialize(Token aTok)", "+    public void initialize(Token tok)", "-        super.initialize(aTok);", "-        mLineNo = aTok.getLine();", "-        mColumnNo = aTok.getColumn() - 1; // expect columns to start @ 0", "+        super.initialize(tok);", "+        lineNo = tok.getLine();", "+        columnNo = tok.getColumn() - 1; // expect columns to start @ 0"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df0b139776655fc489b70cd22bb8ad61", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST aAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST ast)", "diff": ["-    public void finishTree(DetailAST aAST)", "+    public void finishTree(DetailAST ast)", "-        if (!mDefined) {", "-            log(aAST.getLineNo(), \"missing.package.declaration\");", "+        if (!defined) {", "+            log(ast.getLineNo(), \"missing.package.declaration\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df155a7c44d9aaba656859241f5cbfb6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/CovariantEqualsCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        mEqualsMethods.clear();", "+        equalsMethods.clear();", "-        final DetailAST objBlock = aAST.findFirstToken(TokenTypes.OBJBLOCK);", "+        final DetailAST objBlock = ast.findFirstToken(TokenTypes.OBJBLOCK);", "-                        mEqualsMethods.add(child);", "+                        equalsMethods.add(child);", "-                for (DetailAST equalsAST : mEqualsMethods) {", "+                for (DetailAST equalsAST : equalsMethods) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df1869277d8812268eed96ca1f005502", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheck.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                    \"ws.notFollowed\",", "+                    WS_NOT_FOLLOWED,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df1a1322966f802530f5bc154486f705", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "91875d1901eaf53e869e6179ceb6e45a3ab14e77", "commitAfterChange": "87e4f786a5dfb21fd583c2b609f560a82a430fdf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void openFile(File aFile, final Component aParent)", "signatureAfterChange": "      private void openFile(File aFile, final Component aParent)", "diff": ["-                JOptionPane.showMessageDialog(", "+                showErrorDialog(", "-                JOptionPane.showMessageDialog(", "+                showErrorDialog("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df2d40880ae1444a2b946b6016dfa368", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      protected DetailAST getBlockCommentAst()", "signatureAfterChange": "      protected DetailAST getBlockCommentAst()", "diff": ["-        return mBlockCommentAst;", "+        return blockCommentAst;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df3c09f3269c9706713dbbbe58c03f25", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/BaseCheckTestCase.java", "commitBeforeChange": "5b90aaa412472262efad7388a2a97693f83d8358", "commitAfterChange": "cf5946b2ce5243a28af470609684f2209e3c962a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public static DefaultConfiguration createCheckConfig(Class aClazz)", "signatureAfterChange": "      public static DefaultConfiguration createCheckConfig(Class aClazz)", "diff": ["-            new DefaultConfiguration(\"test\");", "-        checkConfig.addAttribute(\"classname\", aClazz.getName());", "+            new DefaultConfiguration(aClazz.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df6b7f5523b76d7c996f46b268e24799", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "cf5686783fed5f7598da0be118391f930e5a2ef7", "commitAfterChange": "284b505ace31d49eb21aa4d82f62b2e38946a8a4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void finishProcessing()", "signatureAfterChange": "      @Override     public void finishProcessing()", "diff": ["-            arrangePropertyFiles(mPropertyFiles);", "+            arrangePropertyFiles(mPropertyFiles, mBasenameSeparator);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df72fb67ee3c57f2a5ad9a077b910f9d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/UnnecessaryParenthesesCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-        else if (inTokenList(type, ASSIGNMENTS)) {", "+        else if (isInTokenList(type, ASSIGNMENTS)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df83d0350349b07e22362b23d6c939b8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "10f348bbfd91fd8c2bd7776aff3c03f549380a44", "commitAfterChange": "6c04cd63af392376159dc7aae41d85bbc348e96d", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 38, "signatureBeforeChange": "          @Override         boolean contains(DetailAST nameToFind)", "signatureAfterChange": "          @Override         boolean contains(DetailAST nameToFind)", "diff": ["-            return super.contains(nameToFind)", "-                    || containsName(instanceMembers, nameToFind)", "+            return containsName(instanceMembers, nameToFind)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df9ecd9b979835dcb05b0166f54e3f47", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public TextBlock getJavadocBefore(int aLineNo)", "signatureAfterChange": "     public TextBlock getJavadocBefore(int lineNoBefore)", "diff": ["-    public TextBlock getJavadocBefore(int aLineNo)", "+    public TextBlock getJavadocBefore(int lineNoBefore)", "-        int lineNo = aLineNo - 2;", "+        int lineNo = lineNoBefore - 2;", "-        return mJavadocComments.get(lineNo);", "+        return javadocComments.get(lineNo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfabc3121bb82891e32e49d0ad88ca86", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitJavadocToken(DetailNode aAst)", "signatureAfterChange": "      @Override     public void visitJavadocToken(DetailNode ast)", "diff": ["-    public void visitJavadocToken(DetailNode aAst)", "+    public void visitJavadocToken(DetailNode ast)", "-        String firstSentence = getFirstSentence(aAst);", "-        final int endOfSentence = firstSentence.lastIndexOf(mPeriod);", "+        String firstSentence = getFirstSentence(ast);", "+        final int endOfSentence = firstSentence.lastIndexOf(period);", "-            log(aAst.getLineNumber(), \"summary.first.sentence\");", "+            log(ast.getLineNumber(), \"summary.first.sentence\");", "-                log(aAst.getLineNumber(), \"summary.javaDoc\");", "+                log(ast.getLineNumber(), \"summary.javaDoc\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfc09bc2d1138b7a345f2256f0c049b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheckTest.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testLogIOException() throws Exception", "signatureAfterChange": "      @Test     public void testLogIoException() throws Exception", "diff": ["-    public void testLogIOException() throws Exception {", "+    public void testLogIoException() throws Exception {", "-        final Method logIOException = check.getClass().getDeclaredMethod(\"logIOException\",", "+        final Method logIoException = check.getClass().getDeclaredMethod(\"logIoException\",", "-        logIOException.setAccessible(true);", "-        logIOException.invoke(check, new IOException(\"test exception\"), new File(\"\"));", "+        logIoException.setAccessible(true);", "+        logIoException.invoke(check, new IOException(\"test exception\"), new File(\"\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dffc08425101d90dcfc5f24ae35edc62", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java", "commitBeforeChange": "1bc8a685f64ec17d87b465cb765127cc5f0db1ca", "commitAfterChange": "7088d5c3c244721db87ecee91949acc895d5ff62", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static DetailNode getNearestNode(DetailNode node)", "signatureAfterChange": "     private static DetailNode getNearestNode(DetailNode node)", "diff": ["-        while (tag != null && (tag.getType() == JavadocTokenTypes.LEADING_ASTERISK", "-                || tag.getType() == JavadocTokenTypes.NEWLINE)) {", "+        while (tag.getType() == JavadocTokenTypes.LEADING_ASTERISK", "+                || tag.getType() == JavadocTokenTypes.NEWLINE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e089971ccd72d13ff26cbc9d09818d97", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheck.java", "commitBeforeChange": "f8d7894b17c5a905644a419958a23ca893622b52", "commitAfterChange": "56df5087fe891069e5824abc03ae158aa0d06d66", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void checkTag(int lineNo, String... comment)", "signatureAfterChange": "     private void checkTag(int lineNo, String... comment)", "diff": ["-        if (tagRE == null) {", "+        if (tagRegExp == null) {", "-            final Matcher matcher = tagRE.matcher(commentValue);", "+            final Matcher matcher = tagRegExp.matcher(commentValue);", "-                if (tagFormatRE == null || tagFormatRE.matcher(content).find()) {", "+                if (tagFormatRegExp == null || tagFormatRegExp.matcher(content).find()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0ac96edac5846053c3325e4fff08cdd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractIllegalMethodCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public AbstractIllegalMethodCheck(String aMethodName, String aErrorKey)", "signatureAfterChange": "     public AbstractIllegalMethodCheck(String methodName, String errorKey)", "diff": ["-    public AbstractIllegalMethodCheck(String aMethodName, String aErrorKey)", "+    public AbstractIllegalMethodCheck(String methodName, String errorKey)", "-        mMethodName = aMethodName;", "-        mErrorKey = aErrorKey;", "+        this.methodName = methodName;", "+        this.errorKey = errorKey;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0aebe8f4f0f422ca0c425972e5c9c1c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private static DetailAST getFirstNodeInsideTryCatchFinallyBlocks(             DetailAST aBlock, DetailAST aVariable)", "signatureAfterChange": "     private static DetailAST getFirstNodeInsideTryCatchFinallyBlocks(             DetailAST block, DetailAST variable)", "diff": ["-            DetailAST aBlock, DetailAST aVariable)", "+            DetailAST block, DetailAST variable)", "-        DetailAST currentNode = aBlock.getFirstChild();", "+        DetailAST currentNode = block.getFirstChild();", "-        if (isChild(currentNode, aVariable)) {", "+        if (isChild(currentNode, variable)) {", "-            if (isChild(catchBlock, aVariable)) {", "+            if (isChild(catchBlock, variable)) {", "-            if (isChild(finalBlock, aVariable)) {", "+            if (isChild(finalBlock, variable)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0c23983b150b31fa11b7193078809db", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void walk(DetailAST aAST, FileContents aContents             , AstState aAstState)", "signatureAfterChange": "     private void walk(DetailAST ast, FileContents contents             , AstState astState)", "diff": ["-    private void walk(DetailAST aAST, FileContents aContents", "-            , AstState aAstState)", "+    private void walk(DetailAST ast, FileContents contents", "+            , AstState astState)", "-        notifyBegin(aAST, aContents, aAstState);", "+        notifyBegin(ast, contents, astState);", "-        // empty files are not flagged by javac, will yield aAST == null", "-        if (aAST != null) {", "-            processIter(aAST, aAstState);", "+        // empty files are not flagged by javac, will yield ast == null", "+        if (ast != null) {", "+            processIter(ast, astState);", "-        notifyEnd(aAST, aAstState);", "+        notifyEnd(ast, astState);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0e0bb43f75b69769145fe78c034566e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void processJavadoc(DetailAST aAST)", "signatureAfterChange": "     private void processJavadoc(DetailAST ast)", "diff": ["-    private void processJavadoc(DetailAST aAST)", "+    private void processJavadoc(DetailAST ast)", "-        final int lineNo = aAST.getLineNo();", "+        final int lineNo = ast.getLineNo();", "-            mReferenced.addAll(processJavadoc(cmt));", "+            referenced.addAll(processJavadoc(cmt));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0f2e952152223bb8f65f72f729a4e5e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      protected static String getPath(String aFilename)         throws IOException", "signatureAfterChange": "      protected String getPath(String fileName) throws IOException", "diff": ["-    protected static String getPath(String aFilename)", "-        throws IOException {", "-        return new File(\"src/main/java/com/google/checkstyle/test/filebasic/\" + aFilename)", "-            .getCanonicalPath();", "+    protected String getPath(String fileName) throws IOException {", "+        return new File(\"src/it/resources/com/google/checkstyle/test/\" + fileName)", "+                .getCanonicalPath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0fb560740080926bc47373ff9a2dde3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheckTest.java", "commitBeforeChange": "b372cfa0a8632735da877de0f703c3b3c9ce5f63", "commitAfterChange": "7b8a3aa5bba1323a7bbb85b6dbd86835215a48fc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testFianlClass() throws Exception", "signatureAfterChange": "      @Test     public void testFinalClass() throws Exception", "diff": ["-    public void testFianlClass() throws Exception {", "+    public void testFinalClass() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e104667ee9e00592f41a1d270d106f8e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-    public void finishTree(DetailAST aRootAST)", "+    public void finishTree(DetailAST rootAST)", "-        final Set<DetailAST> equalsDefs = mObjBlockEquals.keySet();", "+        final Set<DetailAST> equalsDefs = objBlockEquals.keySet();", "-            if (!mObjBlockWithHashCode.contains(objBlock)) {", "-                final DetailAST equalsAST = mObjBlockEquals.get(objBlock);", "+            if (!objBlockWithHashCode.contains(objBlock)) {", "+                final DetailAST equalsAST = objBlockEquals.get(objBlock);", "-        mObjBlockEquals.clear();", "-        mObjBlockWithHashCode.clear();", "+        objBlockEquals.clear();", "+        objBlockWithHashCode.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e141314e2f6b845b634a2ba32edf4b2b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/CommentSuppressor.java", "commitBeforeChange": "8a6f12d9e9f4f5e9f9b9a04dfa5be8d42ad747c7", "commitAfterChange": "331992aacd23576c72862ea75d83f15e09af958c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public boolean shouldSuppress(int startLineNo, int startColNo,             int endLineNo, int endColNo)", "signatureAfterChange": "      @Override     public boolean shouldSuppress(int startLineNo, int startColNo,             int endLineNo, int endColNo)", "diff": ["+", "-        return currentContents != null", "-                && currentContents.hasIntersectionWithComment(startLineNo,", "-                        startColNo, endLineNo, endColNo);", "+        return currentContents", "+                .hasIntersectionWithComment(startLineNo, startColNo, endLineNo, endColNo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2137c08bbf061ab3c54f5743eb3faca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (shouldCheck(aAST)) {", "+        if (shouldCheck(ast)) {", "-            final int lineNo = aAST.getLineNo();", "+            final int lineNo = ast.getLineNo();", "-            else if (ScopeUtils.isOuterMostType(aAST)) {", "+            else if (ScopeUtils.isOuterMostType(ast)) {", "-                         mAuthorFormatPattern, mAuthorFormat);", "+                         authorFormatPattern, authorFormat);", "-                         mVersionFormatPattern, mVersionFormat);", "+                         versionFormatPattern, versionFormat);", "-                    CheckUtils.getTypeParameterNames(aAST);", "+                    CheckUtils.getTypeParameterNames(ast);", "-                if (!mAllowMissingParamTags) {", "+                if (!allowMissingParamTags) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e254e13ae863eeac8dba78b41809c60f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java", "commitBeforeChange": "02aaa1b7f653e25c34ef7f186fa1d940079384e8", "commitAfterChange": "52ac2776d7f128ff812b73b54dcc12210661f98b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic Configuration getCheckConfig(String aCheckName)", "signatureAfterChange": "  \tpublic Configuration getCheckConfig(String aCheckName)", "diff": ["-\t\tfor (Configuration config : mConfig.getChildren()) {", "-\t\t\tif (\"TreeWalker\".equals(config.getName())) {", "-\t\t\t\tfor (Configuration checkConfig : config.getChildren()) {", "+\t\tfor (Configuration currentConfig : config.getChildren()) {", "+\t\t\tif (\"TreeWalker\".equals(currentConfig.getName())) {", "+\t\t\t\tfor (Configuration checkConfig : currentConfig.getChildren()) {", "-\t\t\t} else if (aCheckName.equals(config.getName())) {", "-\t\t\t\treturn config;", "+\t\t\t} else if (aCheckName.equals(currentConfig.getName())) {", "+\t\t\t\treturn currentConfig;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e27cbb820f607abcf3a021bb4140111d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public static String getTokenName(int iD)", "signatureAfterChange": "     public static String getTokenName(int id)", "diff": ["-    public static String getTokenName(int iD) {", "-        if (iD == JavadocTokenTypes.EOF) {", "+    public static String getTokenName(int id) {", "+        if (id == JavadocTokenTypes.EOF) {", "-        if (iD > TOKEN_VALUE_TO_NAME.length - 1) {", "-            throw new IllegalArgumentException(UNKNOWN_JAVADOC_TOKEN_ID_EXCEPTION_MESSAGE + iD);", "+        if (id > TOKEN_VALUE_TO_NAME.length - 1) {", "+            throw new IllegalArgumentException(UNKNOWN_JAVADOC_TOKEN_ID_EXCEPTION_MESSAGE + id);", "-        final String name = TOKEN_VALUE_TO_NAME[iD];", "+        final String name = TOKEN_VALUE_TO_NAME[id];", "-            throw new IllegalArgumentException(UNKNOWN_JAVADOC_TOKEN_ID_EXCEPTION_MESSAGE + iD);", "+            throw new IllegalArgumentException(UNKNOWN_JAVADOC_TOKEN_ID_EXCEPTION_MESSAGE + id);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2d1de3b028dc36bbd682530a7f847ce", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/BaseCheckTestCase.java", "commitBeforeChange": "6568a9b88220366da3fc9e58fc9de93af9a6520d", "commitAfterChange": "f116754656b534e1a44e797e21b06290dfcf8ad8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "      protected void verify(Checker aC, String aFilename, String[] aExpected)         throws Exception", "signatureAfterChange": "      protected void verify(Checker aC, String aProcessedFilename,             String aMessageFileName, String[] aExpected)         throws Exception", "diff": ["-    protected void verify(Checker aC, String aFilename, String[] aExpected)", "+", "+    protected void verify(Checker aC, String aProcessedFilename,", "+            String aMessageFileName, String[] aExpected)", "-        final int errs = aC.process(new File[] {new File(aFilename)});", "+        final int errs = aC.process(new File[] {new File(aProcessedFilename)});", "-            assertEquals(aFilename + \":\" + aExpected[i], lnr.readLine());", "+            assertEquals(aMessageFileName + \":\" + aExpected[i], lnr.readLine());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2dc4c8215110ac92cb4ab8e803271be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final void setAllowSamelineMultipleAnnotations(boolean aAllow)", "signatureAfterChange": "     public final void setAllowSamelineMultipleAnnotations(boolean allow)", "diff": ["-    public final void setAllowSamelineMultipleAnnotations(boolean aAllow)", "+    public final void setAllowSamelineMultipleAnnotations(boolean allow)", "-        mAllowSamelineMultipleAnnotations = aAllow;", "+        allowSamelineMultipleAnnotations = allow;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2e2e88b367ae0273d8837a55e01774e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "commitAfterChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public static DetailAST parseFile(FileText aText)         throws ANTLRException", "signatureAfterChange": "     public static DetailAST parseFile(FileText text)         throws ANTLRException", "diff": ["-    public static DetailAST parseFile(FileText aText)", "+    public static DetailAST parseFile(FileText text)", "-        final FileContents contents = new FileContents(aText);", "+        final FileContents contents = new FileContents(text);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e336ef47563f1c6837397898e9398106", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public String encode(String aValue)", "signatureAfterChange": "     public String encode(String value)", "diff": ["-    public String encode(String aValue)", "+    public String encode(String value)", "-        for (int i = 0; i < aValue.length(); i++) {", "-            final char c = aValue.charAt(i);", "+        for (int i = 0; i < value.length(); i++) {", "+            final char c = value.charAt(i);", "-                final int nextSemi = aValue.indexOf(\";\", i);", "+                final int nextSemi = value.indexOf(\";\", i);", "-                    || !isReference(aValue.substring(i, nextSemi + 1)))", "+                    || !isReference(value.substring(i, nextSemi + 1)))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e344226bd43d1453d32c6c6b29e9faf2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTags.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public List<InvalidJavadocTag> getInvalidTags()", "signatureAfterChange": "      public List<InvalidJavadocTag> getInvalidTags()", "diff": ["-        return mInvalidTags;", "+        return invalidTags;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e361bc141bc56907fe44409b5b6c3cd9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void setClasses(String classNames)", "signatureAfterChange": "     public void setClasses(String names)", "diff": ["-    public void setClasses(String classNames) {", "+    public void setClasses(String names) {", "-        final StringTokenizer tok = new StringTokenizer(classNames, \",\");", "+        final StringTokenizer tok = new StringTokenizer(names, \",\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e363dcb82443b5b15a0acfb325f09fd4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/SeverityLevelCounter.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Override     public void addError(AuditEvent aEvt)", "signatureAfterChange": "     @Override     public void addError(AuditEvent evt)", "diff": ["-    public void addError(AuditEvent aEvt)", "+    public void addError(AuditEvent evt)", "-        if (mLevel.equals(aEvt.getSeverityLevel())) {", "-            mCount++;", "+        if (level.equals(evt.getSeverityLevel())) {", "+            count++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3837a19bad712853e41089c297abe84", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void setLinePositionMap(List<Integer> lines2position)", "signatureAfterChange": "      public void setLinePositionMap(List<Integer> linePositionMap)", "diff": ["-    public void setLinePositionMap(List<Integer> lines2position) {", "-        this.lines2position = ImmutableList.copyOf(lines2position);", "+    public void setLinePositionMap(List<Integer> linePositionMap) {", "+        this.linePositionMap = ImmutableList.copyOf(linePositionMap);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3b56acb878f156597dcd9198f9578b8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java", "commitBeforeChange": "eeb20e6c8cc86d2d283c254ddcddf89f46aa5190", "commitAfterChange": "d56a2a366c6f9e3e8639d492d548ae562b75dc81", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public int[] getDefaultTokens()", "signatureAfterChange": "      @Override     public int[] getDefaultTokens()", "diff": ["-        return getAcceptableTokens();", "+        return makeAcceptableTokens();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e41414351900ce061d2108dac73ceb6b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "      @Test     public void test_1168408_3() throws Exception", "signatureAfterChange": "      @Test     public void test11684083() throws Exception", "diff": ["-    public void test_1168408_3() throws Exception {", "+    public void test11684083() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e41b8138a55b00103d60fd19bc1d2754", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalCatchCheckTest.java", "commitBeforeChange": "ab50d42d93880d48c8aef9c88c37174bd941463f", "commitAfterChange": "448a62c9a6740c4e6e5435b4a89cd9c82e6b8957", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testMultipleTypes() throws Exception", "signatureAfterChange": "      @Test     public void testMultipleTypes() throws Exception", "diff": ["-            \"6:11: Catching 'RuntimeException' is not allowed.\",", "-            \"8:11: Catching 'RuntimeException' is not allowed.\",", "+            \"7:11: Catching 'RuntimeException' is not allowed.\",", "-            \"12:11: Catching 'RuntimeException' is not allowed.\",", "+            \"13:11: Catching 'RuntimeException' is not allowed.\",", "+            \"16:11: Catching 'RuntimeException' is not allowed.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e425b7dcc47615195518f5d3ad2200a8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "957f644aeff928017aba3d0a920c1ce721296851", "commitAfterChange": "4065b439221c56ab2a11f97cb50c246d8ba2c913", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "     public void setBooleanFlag(String aName, boolean aTo)", "signatureAfterChange": "     public void setBooleanProperty(String aName, boolean aTo)", "diff": ["-    public void setBooleanFlag(String aName, boolean aTo)", "+    public void setBooleanProperty(String aName, boolean aTo)", "-            mBooleanFlags.add(aName);", "+            mBooleanProps.add(aName);", "-            mBooleanFlags.remove(aName);", "+            mBooleanProps.remove(aName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e44758c99a1a50304c10ab884a889c79", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private void tagCommentLine(String aText, int aLine)", "signatureAfterChange": "     private void tagCommentLine(String text, int line)", "diff": ["-    private void tagCommentLine(String aText, int aLine)", "+    private void tagCommentLine(String text, int line)", "-        final Matcher matcher = mCommentRegexp.matcher(aText);", "+        final Matcher matcher = commentRegexp.matcher(text);", "-            addTag(matcher.group(0), aLine);", "+            addTag(matcher.group(0), line);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e44ce86ee666e241549e22c6f44179bf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java", "commitBeforeChange": "9fbba0b3801e46ae45674ddfd720addc7e4ace92", "commitAfterChange": "f6b33ebf179c7d5c0ddf16449374dcfb2c55d7df", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "          public void setExceptionalMethod(String value)", "signatureAfterChange": "          public void setExceptionalMethod(String value)", "diff": ["-            throw new IllegalStateException(\"for UT\");", "+            throw new IllegalStateException(wrong);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e456d2aef616466e9a77815a854634f5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Check.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public final void setTokens(String[] aStrRep)", "signatureAfterChange": "     public final void setTokens(String[] strRep)", "diff": ["-    public final void setTokens(String[] aStrRep)", "+    public final void setTokens(String[] strRep)", "-        for (final String s : aStrRep) {", "-            mTokens.add(s);", "+        for (final String s : strRep) {", "+            tokens.add(s);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e45f8601999040ea0bae0402e8465580", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void checkCompactNoArrayStyle(final DetailAST aAnnotation)", "signatureAfterChange": "     private void checkCompactNoArrayStyle(final DetailAST annotation)", "diff": ["-    private void checkCompactNoArrayStyle(final DetailAST aAnnotation)", "+    private void checkCompactNoArrayStyle(final DetailAST annotation)", "-            aAnnotation.findFirstToken(TokenTypes.ANNOTATION_ARRAY_INIT);", "+            annotation.findFirstToken(TokenTypes.ANNOTATION_ARRAY_INIT);", "-            aAnnotation.getChildCount(TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR);", "+            annotation.getChildCount(TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR);", "-            aAnnotation.findFirstToken(TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR);", "+            annotation.findFirstToken(TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR);", "-            this.log(aAnnotation.getLineNo(), \"annotation.incorrect.style\",", "+            this.log(annotation.getLineNo(), \"annotation.incorrect.style\",", "-                this.log(aAnnotation.getLineNo(), \"annotation.incorrect.style\",", "+                this.log(annotation.getLineNo(), \"annotation.incorrect.style\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e497155b274b33b4e2f0e17d1199c654", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public final void setAllowNonPrintableEscapes(boolean aAllow)", "signatureAfterChange": "     public final void setAllowNonPrintableEscapes(boolean allow)", "diff": ["-    public final void setAllowNonPrintableEscapes(boolean aAllow)", "+    public final void setAllowNonPrintableEscapes(boolean allow)", "-        mAllowNonPrintableEscapes = aAllow;", "+        allowNonPrintableEscapes = allow;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e49e177eab2a2498476cdc3c268fc3da", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "a6990c84f05a74679588549df56143d3a5d053d1", "commitAfterChange": "748df52c1317e298203bf28e48545d3e50db59f1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void process(File aFile)", "signatureAfterChange": "     private void process(File aFile)", "diff": ["-                        new String[] {re.getMessage()},", "+                        new String[] {\"\"},"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4c578fde4d90b86b94181f41ba8fc9b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected final MessageDispatcher getMessageDispatcher()", "signatureAfterChange": "     protected final MessageDispatcher getMessageDispatcher()", "diff": ["-        return mDispatcher;", "+        return dispatcher;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4deacf76a384197534586afadae39d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "          @Override         public String toString()", "signatureAfterChange": "          @Override         public String toString()", "diff": ["-                + \"final=\" + mDeclaredAsFinal", "-                + \" abstract=\" + mDeclaredAsAbstract", "-                + \" pctor=\" + mHasPrivateCtor", "-                + \" ctor=\" + mHasNonPrivateCtor", "+                + \"final=\" + declaredAsFinal", "+                + \" abstract=\" + declaredAsAbstract", "+                + \" pctor=\" + hasPrivateCtor", "+                + \" ctor=\" + hasNonPrivateCtor"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4e11ad046db63edf01ec90d98db923b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private boolean isFirstPtagraph(DetailNode paragraphTag)", "signatureAfterChange": "     private boolean isFirstParagraph(DetailNode paragraphTag)", "diff": ["-    private boolean isFirstPtagraph(DetailNode paragraphTag)", "+    private boolean isFirstParagraph(DetailNode paragraphTag)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e50f54c3c63615be4a64c1fdc23afd6a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void visitVariableDef(DetailAST aAST)", "signatureAfterChange": "     private void visitVariableDef(DetailAST ast)", "diff": ["-    private void visitVariableDef(DetailAST aAST)", "+    private void visitVariableDef(DetailAST ast)", "-        if (mChecking && (aAST.getParent().getType() == TokenTypes.OBJBLOCK)) {", "+        if (checking && (ast.getParent().getType() == TokenTypes.OBJBLOCK)) {", "-                aAST.findFirstToken(TokenTypes.MODIFIERS);", "+                ast.findFirstToken(TokenTypes.MODIFIERS);", "-                log(aAST.getLineNo(),  aAST.getColumnNo(), \"mutable.exception\",", "-                        aAST.findFirstToken(TokenTypes.IDENT).getText());", "+                log(ast.getLineNo(),  ast.getColumnNo(), \"mutable.exception\",", "+                        ast.findFirstToken(TokenTypes.IDENT).getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e544ca0dee63defbb9acc3bacd651440", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractNestedDepthCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected final void nestIn(DetailAST aAST, String aMessageId)", "signatureAfterChange": "     protected final void nestIn(DetailAST ast, String messageId)", "diff": ["-    protected final void nestIn(DetailAST aAST, String aMessageId)", "+    protected final void nestIn(DetailAST ast, String messageId)", "-        if (mDepth > mMax) {", "-            log(aAST, aMessageId, mDepth, mMax);", "+        if (depth > max) {", "+            log(ast, messageId, depth, max);", "-        ++mDepth;", "+        ++depth;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e567a5e4b02d8693ededa60be5646aaa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "80ab48f859c1f16835dbd41afe42414b41969e2f", "commitAfterChange": "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public void setCheckHtml(boolean flag)", "signatureAfterChange": "     public void setCheckHtml(boolean flag)", "diff": ["-        checkingHtml = flag;", "+        checkHtml = flag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e58546f1e54a3ea690284f461be9507c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java", "commitBeforeChange": "a0d00ea8940acd30064715db04d7a19a99d4cca9", "commitAfterChange": "f52306ff7799ea2b2e4d99fba7040a11b186d68a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "         protected LexicalFrame(LexicalFrame parent)", "signatureAfterChange": "         protected LexicalFrame(LexicalFrame parent)", "diff": ["-            varNames = Sets.newHashSet();", "+            varIdents = Sets.newHashSet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e58843a3cac6f9860abbafd9771bad0e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/AbstractUsageCheck.java", "commitBeforeChange": "0c717ef2abd068366612d44280633a1c7ac9efac", "commitAfterChange": "cdbb83775e9166df5d2ca3f2af7708e943b41466", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void finishTree(DetailAST aAST)", "signatureAfterChange": "     public void finishTree(DetailAST aAST)", "diff": ["-        ASTManager.getInstance().clear();", "+        ASTManager.getInstance().removeCheck(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e598fcc4bee9f901ebbf22938eb109b8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Override     protected final void logLoadError(Token aIdent)", "signatureAfterChange": "      @Override     protected final void logLoadError(Token ident)", "diff": ["-    protected final void logLoadError(Token aIdent)", "+    protected final void logLoadError(Token ident)", "-        logLoadErrorImpl(aIdent.getLineNo(), aIdent.getColumnNo(),", "+        logLoadErrorImpl(ident.getLineNo(), ident.getColumnNo(),", "-            JavadocTagInfo.THROWS.getText(), aIdent.getText());", "+            JavadocTagInfo.THROWS.getText(), ident.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5a2e7947d2309b1bbedb7ad7871f2c8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTag.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public String getArg1()", "signatureAfterChange": "     public String getArg1()", "diff": ["-        return mArg1;", "+        return arg1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e600566d5975fffe99e06068c3aee34a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "546f336e25b26d072f96e2cda139b885858ed5b0", "commitAfterChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void notifyVisit(DetailAST ast, AstState astState)", "signatureAfterChange": "     private void notifyVisit(DetailAST ast, AstState astState)", "diff": ["-        for (Check c : visitors) {", "-            c.visitToken(ast);", "+        for (Check check : visitors) {", "+            check.visitToken(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e61267a75150efe8b1eb545f5fc35540", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "904de34fcd984edce3d6042a5a17e2a969254588", "commitAfterChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean hasFallThroughComment(DetailAST currentCase, DetailAST nextCase)", "signatureAfterChange": "     private boolean hasFallThroughComment(DetailAST currentCase, DetailAST nextCase)", "diff": ["-        if (commentMatch(regExp, linePart, endLineNo)) {", "+        if (matchesComment(regExp, linePart, endLineNo)) {", "-                    allThroughComment = commentMatch(regExp, lines[i], i + 1);", "+                    allThroughComment = matchesComment(regExp, lines[i], i + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6145ede54335f3843790582688e5a40", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static String extractPropertyIdentifier(final File aFile,             final String aBasenameSeparator)", "signatureAfterChange": "     private static String extractPropertyIdentifier(final File file,             final String basenameSeparator)", "diff": ["-    private static String extractPropertyIdentifier(final File aFile,", "-            final String aBasenameSeparator)", "+    private static String extractPropertyIdentifier(final File file,", "+            final String basenameSeparator)", "-        final String filePath = aFile.getPath();", "+        final String filePath = file.getPath();", "-        final int underscoreIdx = filePath.indexOf(aBasenameSeparator,", "+        final int underscoreIdx = filePath.indexOf(basenameSeparator,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6398074e4665fd420149eb25d1f0bc0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public int process(List<File> aFiles)", "signatureAfterChange": "     public int process(List<File> files)", "diff": ["-    public int process(List<File> aFiles)", "+    public int process(List<File> files)", "-        for (final FileSetCheck fsc : mFileSetChecks) {", "-            fsc.beginProcessing(mCharset);", "+        for (final FileSetCheck fsc : fileSetChecks) {", "+            fsc.beginProcessing(charset);", "-        for (final File f : aFiles) {", "+        for (final File f : files) {", "-                        mCharset);", "-                for (final FileSetCheck fsc : mFileSetChecks) {", "+                        charset);", "+                for (final FileSetCheck fsc : fileSetChecks) {", "-        for (final FileSetCheck fsc : mFileSetChecks) {", "+        for (final FileSetCheck fsc : fileSetChecks) {", "-        final int errorCount = mCounter.getCount();", "+        final int errorCount = counter.getCount();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e640a1fe31529043ada5b812a7c27f26", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "31cc403a41c60aa09050252953a56ef053c034d4", "commitAfterChange": "2f9b0f057c489d074967575696a0d53a34fec6b7", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public boolean hasIntersectionWithComment(int startLineNo,             int startColNo, int endLineNo, int endColNo)", "signatureAfterChange": "     public boolean hasIntersectionWithComment(int startLineNo,             int startColNo, int endLineNo, int endColNo)", "diff": ["-        final Collection<List<TextBlock>> values = cComments.values();", "+        final Collection<List<TextBlock>> values = clangComments.values();", "-            final TextBlock comment = cPlusPlusComments.get(lineNumber);", "+            final TextBlock comment = cppComments.get(lineNumber);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e64b485af32f2821467f58a8f9c07bb6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public final void setSortImportsInGroupAlphabetically(boolean aValue)", "signatureAfterChange": "     public final void setSortImportsInGroupAlphabetically(boolean value)", "diff": ["-    public final void setSortImportsInGroupAlphabetically(boolean aValue)", "+    public final void setSortImportsInGroupAlphabetically(boolean value)", "-        mSortImportsInGroupAlphabetically = aValue;", "+        sortImportsInGroupAlphabetically = value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e656764cafad34ec618f5b52a1264eee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "8f86620e72849120dc5fba45c3cc54ed38e24447", "commitAfterChange": "d345f3beb27f3d8e3fde06f7e2c7612ddf691b95", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testTypeNamesForThreePermitedCapitalLetters() throws Exception", "signatureAfterChange": "      @Test     public void testTypeNamesForThreePermittedCapitalLetters() throws Exception", "diff": ["-    public void testTypeNamesForThreePermitedCapitalLetters() throws Exception {", "+    public void testTypeNamesForThreePermittedCapitalLetters() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e676a28c8904c70f9ec387f72c7260e8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "61dcaf5f512b026e4aad1d61946e48905d6016d4", "commitAfterChange": "88f75f5413914bea5b39ba318edf912ee706226d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static List<String> validateCli(CommandLine cmdLine)", "signatureAfterChange": "     private static List<String> validateCli(CommandLine cmdLine)", "diff": ["-                if (file.exists() && !(file.canRead() && file.canWrite())) {", "+                if (file.exists() && !file.canWrite()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e699d485dd222596f5ea6453fa0ad6fb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            log(lineNo, colNo, \"line.new\", text);", "+            log(lineNo, colNo, LINE_NEW, text);", "-            log(lineNo, colNo, \"line.previous\", text);", "+            log(lineNo, colNo, LINE_PREVIOUS, text);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6b3f6069c70c79fc9c6336b38caf111", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private static void printUsage()", "signatureAfterChange": "     private static void printUsage()", "diff": ["-        final HelpFormatter hf = new HelpFormatter();", "-        hf.printHelp(String.format(\"java %s [options] -c <config.xml> file...\",", "+        final HelpFormatter formatter = new HelpFormatter();", "+        formatter.printHelp(String.format(\"java %s [options] -c <config.xml> file...\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6d62eef9893ddf739e2949d4980297d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "2ad4b0830d3892f718134e198a0bcbe9fbf5d8c7", "commitAfterChange": "ba4d62dc78cf7a648771b1be9646cac4bab27676", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private boolean matchesImportGroup(boolean isStatic, String importPath, String currentGroup)", "signatureAfterChange": "     private boolean matchesImportGroup(boolean isStatic, String importPath, String currentGroup)", "diff": ["-                || matcheasthirdPartyImportGroup(isStatic, importPath, currentGroup);", "+                || matchesThirdPartyImportGroup(isStatic, importPath, currentGroup);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6ff3a89177014d0bc6fc9c482b77b67", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     private List<JavadocTag> getMethodTags(TextBlock aComment)", "signatureAfterChange": "     private List<JavadocTag> getMethodTags(TextBlock comment)", "diff": ["-    private List<JavadocTag> getMethodTags(TextBlock aComment)", "+    private List<JavadocTag> getMethodTags(TextBlock comment)", "-        final String[] lines = aComment.getText();", "+        final String[] lines = comment.getText();", "-        int currentLine = aComment.getStartLineNo() - 1;", "+        int currentLine = comment.getStartLineNo() - 1;", "-                    col += aComment.getStartColNo();", "+                    col += comment.getStartColNo();", "-                    col += aComment.getStartColNo();", "+                    col += comment.getStartColNo();", "-                    col += aComment.getStartColNo();", "+                    col += comment.getStartColNo();", "-                    col += aComment.getStartColNo();", "+                    col += comment.getStartColNo();", "-                    col += aComment.getStartColNo();", "+                    col += comment.getStartColNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7065088d7f1afd91db4f14e71dbfbe9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/OneTopLevelClassCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-    public void finishTree(DetailAST aRootAST)", "+    public void finishTree(DetailAST rootAST)", "-        if (!mPublicTypeFound && !mLineNumberTypeMap.isEmpty()) {", "+        if (!publicTypeFound && !lineNumberTypeMap.isEmpty()) {", "-            mLineNumberTypeMap.remove(mLineNumberTypeMap.firstKey());", "+            lineNumberTypeMap.remove(lineNumberTypeMap.firstKey());", "-                : mLineNumberTypeMap.entrySet())", "+                : lineNumberTypeMap.entrySet())", "-        mLineNumberTypeMap.clear();", "-        mPublicTypeFound = false;", "+        lineNumberTypeMap.clear();", "+        publicTypeFound = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e70c3960cb61217b3b773fab9fb8abdb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocVariableCheck.java", "commitBeforeChange": "8f19f1d70630f210f33ebd51d42d04ca9727ff36", "commitAfterChange": "e10364f313b887a6af19b3f63f2c5d671a453c63", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setIgnoreNamePattern(String regexp)", "signatureAfterChange": "     public void setIgnoreNamePattern(String regexp)", "diff": ["-        ignoreNameRegexp = regexp;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e721491c3f58847dffb97b8c131438dc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private void setOutputStream(OutputStream aOS)", "signatureAfterChange": "     private void setOutputStream(OutputStream oS)", "diff": ["-    private void setOutputStream(OutputStream aOS)", "+    private void setOutputStream(OutputStream oS)", "-            final OutputStreamWriter osw = new OutputStreamWriter(aOS, \"UTF-8\");", "-            mWriter = new PrintWriter(osw);", "+            final OutputStreamWriter osw = new OutputStreamWriter(oS, \"UTF-8\");", "+            writer = new PrintWriter(osw);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e724134d74dcf134baac201c1011b726", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java", "commitBeforeChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "commitAfterChange": "29027109bf962f47b6a6000fdca69b5679ce4b43", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected void processFiltered(File aFile, List<String> aLines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-    protected void processFiltered(File aFile, List<String> aLines)", "+    protected void processFiltered(File file, List<String> lines)", "-        final int fileSize = aLines.size();", "+        final int fileSize = lines.size();", "-        if (headerSize - mMultiLines.length > fileSize) {", "+        if (headerSize - multiLines.length > fileSize) {", "-                final String line = aLines.get(i);", "+                final String line = lines.get(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e754adc9974005a43d02969aff5dc98d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private String line(int aLineNo)", "signatureAfterChange": "     private String line(int lineNo)", "diff": ["-    private String line(int aLineNo)", "+    private String line(int lineNo)", "-        return mText.get(aLineNo);", "+        return text.get(lineNo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e76aba4cb31f8ee1dfa8d39dcb85c8f1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java", "commitBeforeChange": "137a6d4175967155c3e8f37c6d9b4fd496d0cec6", "commitAfterChange": "ab74399c2d18b8881c4a0c13155b7afce869eebf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public IndentLevel suggestedChildLevel(AbstractExpressionHandler child)", "signatureAfterChange": "      @Override     public IndentLevel getSuggestedChildLevel(AbstractExpressionHandler child)", "diff": ["-    public IndentLevel suggestedChildLevel(AbstractExpressionHandler child) {", "+    public IndentLevel getSuggestedChildLevel(AbstractExpressionHandler child) {", "-            return getParent().suggestedChildLevel(child);", "+            return getParent().getSuggestedChildLevel(child);", "-        return super.suggestedChildLevel(child);", "+        return super.getSuggestedChildLevel(child);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e76b9960c4f2b8a0cc3564d795323304", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "      @Test     public void test_generics_2() throws Exception", "signatureAfterChange": "      @Test     public void testGenerics2() throws Exception", "diff": ["-    public void test_generics_2() throws Exception {", "+    public void testGenerics2() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e77835ab6a8f53c4f7ee641420962820", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/HtmlTag.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public boolean isClosedTag()", "signatureAfterChange": "     public boolean isClosedTag()", "diff": ["-        return mClosedTag;", "+        return closedTag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e782c2d50ef2862d809094fdf79e3c6c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "60eacf91e616d2b6eec8c3d66a72d694da368cec", "commitAfterChange": "777a4e04d85611a1e857ea92cdb6f155c21c28a0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private boolean hasTrailComment(DetailAST ast)", "signatureAfterChange": "     private boolean hasTrailComment(DetailAST ast)", "diff": ["-            if (currentLine != null && sCommentRegexp.matcher(currentLine).find()) {", "+            if (sCommentRegexp.matcher(currentLine).find()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e79bd2a8936f12649e5c5dc1f318cc53", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final DetailAST typeAST = aAST.getParent();", "+        final DetailAST typeAST = ast.getParent();", "-                (variableAST.getLineNo() > aAST.getLineNo())", "-                || (variableAST.getColumnNo() > aAST.getColumnNo());", "+                (variableAST.getLineNo() > ast.getLineNo())", "+                || (variableAST.getColumnNo() > ast.getColumnNo());", "-            if (isJavaStyle != mJavaStyle) {", "-                log(aAST.getLineNo(), aAST.getColumnNo(), \"array.type.style\");", "+            if (isJavaStyle != javaStyle) {", "+                log(ast.getLineNo(), ast.getColumnNo(), \"array.type.style\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7c5cd586be21d924235834baa8437c6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "de6862e0bedab5c22d54b4cf503144c28f1aea26", "commitAfterChange": "55c2560774f0624afeae9e6c29fd19ae59e8c24b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean emptyCtorBlockCheck(DetailAST aAST, int aParentType)", "signatureAfterChange": "     private boolean isEmptyCtorBlock(DetailAST aAST, int aParentType)", "diff": ["-    private boolean emptyCtorBlockCheck(DetailAST aAST, int aParentType)", "+    private boolean isEmptyCtorBlock(DetailAST aAST, int aParentType)", "-            && emptyBlockCheck(aAST, aParentType, TokenTypes.CTOR_DEF);", "+            && isEmptyBlock(aAST, aParentType, TokenTypes.CTOR_DEF);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7e3f000560093f9ba37dfe7cc43882e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Check.java", "commitBeforeChange": "dcf0d774fa59e2131e4bb2f50523da10ce3305af", "commitAfterChange": "7af9e82fc16545a8153b529fba91df0fb310e2e6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public final void setFilename(String aFilename)", "signatureAfterChange": "     public final void setFileContents(FileContents aContents)", "diff": ["-    public final void setFilename(String aFilename)", "+    public final void setFileContents(FileContents aContents)", "-        getTreeContext().put(FILENAME_ATTRIBUTE, aFilename);", "+        getTreeContext().put(FILE_CONTENTS_ATTRIBUTE, aContents);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7e6abdcc0872a7b6286beb19631616d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/RedundantImportCheck.java", "commitBeforeChange": "8142c804e90f6d24a3a5db736f3f1f576766a9a5", "commitAfterChange": "4d2e6647f9e8385749c382bcab5e64965a943178", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            if (fromPackage(imp.getText(), \"java.lang\")) {", "+            if (isFromPackage(imp.getText(), \"java.lang\")) {", "-            else if (pkgName != null && fromPackage(imp.getText(), pkgName)) {", "+            else if (pkgName != null && isFromPackage(imp.getText(), pkgName)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8108c916075a1b2474bac03b836a1f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean isExempt(String aClassOrStaticMember)", "signatureAfterChange": "     private boolean isExempt(String classOrStaticMember)", "diff": ["-    private boolean isExempt(String aClassOrStaticMember)", "+    private boolean isExempt(String classOrStaticMember)", "-        for (String exclude : mExcludes) {", "-            if (aClassOrStaticMember.equals(exclude)) {", "+        for (String exclude : excludes) {", "+            if (classOrStaticMember.equals(exclude)) {", "-                if (aClassOrStaticMember.startsWith(excludeMinusDotStar)) {", "+                if (classOrStaticMember.startsWith(excludeMinusDotStar)) {", "-                        aClassOrStaticMember.substring(", "+                        classOrStaticMember.substring("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e822c0ed39d35d1c8d3aae4c9aa54ce9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "commitAfterChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testWithOneArgWIthoutParenthesesWithoutTypeFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithoutParenthesesWithoutTypeFullBody()         throws Exception", "diff": ["-    public void testWithOneArgWIthoutParenthesesWithoutTypeFullBody()", "+    public void testWithOneArgWithoutParenthesesWithoutTypeFullBody()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e825b9ffa5b2884b8b44df720bcb2df9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "0a70130d577d392c0100fee2807986bc6c811b02", "commitAfterChange": "303d7cc6182e72f5472c8bcd9aa37432986793d1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST rootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-        counters = new FastStack<>();", "+        counters = new ArrayDeque<>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e83f8262d0dd615583bd6a52dc59ebfc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java", "commitBeforeChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "commitAfterChange": "0b98c0389e2cf745cb125a89dece57538fc672b7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                                \"redundantModifier\", modifier.getText());", "+                                MSG_KEY, modifier.getText());", "-                            \"redundantModifier\", modifier.getText());", "+                            MSG_KEY, modifier.getText());", "-                                \"redundantModifier\", modifier.getText());", "+                                MSG_KEY, modifier.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e83f8a435a0e95592ea00916b74cd537", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java", "commitBeforeChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "commitAfterChange": "0b98c0389e2cf745cb125a89dece57538fc672b7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                            \"annotation.order\",", "+                            MSG_ANNOTATION_ORDER,", "-                            \"mod.order\", error.getText());", "+                            MSG_MODIFIER_ORDER, error.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e84d086b1f71894bd3241b6489bb6bd3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IndentationCheck.java", "commitBeforeChange": "0eeb5e4fd6aa2c4b8a559e55384bba67d7d695c7", "commitAfterChange": "092e1f69476fc715852035a25b23a11804183a23", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public int getIndentationAmount()", "signatureAfterChange": "     public int getBasicOffset()", "diff": ["-    public int getIndentationAmount()", "+    public int getBasicOffset()", "-        return mIndentationAmount;", "+        return mBasicOffset;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e89269829f8f3a7ba8e6243fb996f2fb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public final void setModuleClassLoader(ClassLoader aModuleClassLoader)", "signatureAfterChange": "     public final void setModuleClassLoader(ClassLoader moduleClassLoader)", "diff": ["-    public final void setModuleClassLoader(ClassLoader aModuleClassLoader)", "+    public final void setModuleClassLoader(ClassLoader moduleClassLoader)", "-        mModuleClassLoader = aModuleClassLoader;", "+        this.moduleClassLoader = moduleClassLoader;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8970e03cc3fde08a3429abe3783be88", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d46dc44e79ea9151e594e02a0ab3bec69786593c", "commitAfterChange": "1aee9d55cc5bd8cca011e17369f6e370efcc85bb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void checkComment(DetailAST aAST, TextBlock aComment)", "signatureAfterChange": "     private void checkComment(DetailAST aAST, TextBlock aComment)", "diff": ["-        // Check for only one @see or inheritDoc tag", "+        // Check for only one inheritDoc tag", "-            && ((JavadocTag) tags.get(0)).isSeeOrInheritDocTag())", "+            && ((JavadocTag) tags.get(0)).isInheritDocTag())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8dfd4ca4b26e01d3fb108a738af5b11", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "25badc206f9b8fdce3391992cec951235250a3d2", "commitAfterChange": "aab0718232e060bd8f289770ab81780b3a2705a2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private static boolean isExtraHtml(String token, Deque<HtmlTag> htmlStack)", "signatureAfterChange": "     private static boolean isExtraHtml(String token, Deque<HtmlTag> htmlStack)", "diff": ["-        for (final HtmlTag td : htmlStack) {", "+        for (final HtmlTag tag : htmlStack) {", "-            if (token.equalsIgnoreCase(td.getId())) {", "+            if (token.equalsIgnoreCase(tag.getId())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e93b03aa33b64ec87abef71d60847937", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final void setSpecialImportsRegExp(String aRegexp)", "signatureAfterChange": "     public final void setSpecialImportsRegExp(String regexp)", "diff": ["-    public final void setSpecialImportsRegExp(String aRegexp)", "+    public final void setSpecialImportsRegExp(String regexp)", "-        mSpecialImportsRegExp = Utils.getPattern(aRegexp);", "+        specialImportsRegExp = Utils.getPattern(regexp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e94a4386b9eba27fa535f5c898528e8b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public VisibilityModifierCheck()", "signatureAfterChange": "     public VisibilityModifierCheck()", "diff": ["-        setPublicMemberPattern(mPublicMemberFormat);", "+        setPublicMemberPattern(publicMemberFormat);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e94ab9b7cf7805ae588648fcd2216b2b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/AbstractLoader.java", "commitBeforeChange": "d2689e6eb0dfffba619b4d859040895c4399415d", "commitAfterChange": "9c48e3107db92a01d904c6d89afdfa60a0837f32", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public InputSource resolveEntity(String aPublicId, String aSystemId)         throws SAXException", "signatureAfterChange": "     public InputSource resolveEntity(String aPublicId, String aSystemId)         throws SAXException, IOException", "diff": ["-    /** @see org.xml.sax.EntityResolver */", "+    /** Jibber inheritDoc */", "-        throws SAXException", "+        throws SAXException, IOException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e94afd428c076c912ad72e330044782b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "d9415ac10cfda8adb3eb3fb729f6334369ad931d", "commitAfterChange": "e1d0e7f6361c32c69650ba789c1995e49a94142f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static boolean isSuppressed(String sourceName, int line,         int column)", "signatureAfterChange": "     public static boolean isSuppressed(String sourceName, int line,         int column)", "diff": ["-        if (entries != null && checkAlias != null) {", "+        if (checkAlias != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9b3d2fa1ca181db36573ea47ee10ae0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java", "commitBeforeChange": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4", "commitAfterChange": "c3674faad8a38656e910750fb22a7eef714fb8a7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        final DetailAST declAST = typeAST.getParent();", "-        if (declAST.getType() == TokenTypes.METHOD_DEF) {", "+        final DetailAST parentAst = typeAST.getParent();", "+        if (parentAst.getType() == TokenTypes.METHOD_DEF) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9d8658c680c9f8aa3665abca4e4d0ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void checkFirstSentence(final DetailAST aAST, TextBlock aComment)", "signatureAfterChange": "     private void checkFirstSentence(final DetailAST ast, TextBlock comment)", "diff": ["-    private void checkFirstSentence(final DetailAST aAST, TextBlock aComment)", "+    private void checkFirstSentence(final DetailAST ast, TextBlock comment)", "-        final String commentText = getCommentText(aComment.getText());", "+        final String commentText = getCommentText(comment.getText());", "-            && JavadocTagInfo.INHERIT_DOC.isValidOn(aAST)))", "+            && JavadocTagInfo.INHERIT_DOC.isValidOn(ast)))", "-            log(aComment.getStartLineNo(), \"javadoc.noperiod\");", "+            log(comment.getStartLineNo(), \"javadoc.noperiod\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9db234280d50b4c28945dbf6f5dcfe1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "2f987d2f183f9c2db612d2c25ff17f650edd45e1", "commitAfterChange": "576d593f6cb309d0959639fa707d0a01f28a6609", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void visitImport(DetailAST importAst)", "signatureAfterChange": "     private void visitImport(DetailAST importAst)", "diff": ["-            final String canonicalName = getCanonicalName(importAst);", "+            final String canonicalName = getImportedTypeCanonicalName(importAst);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9ee1d81bd181220c6927b184807036f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractSuperCheck.java", "commitBeforeChange": "5cd16d56a2ef2a3daaf1674666a9a5e6f2ddfe78", "commitAfterChange": "f9a9d6c3d321eeb2879efb7f48f02fe21a51c06c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            methodNode.setCallsSuper();", "+            methodNode.setCallingSuper();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9f68f1ca6fefa7f595fdb1e8867cf6d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "54a09706ec1db32435b09e6b6910813325558f8d", "commitAfterChange": "abff1a2489ea8af10e1bc0a335551262d22f44e7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void destroy()", "signatureAfterChange": "     public void destroy()", "diff": ["-        mCache.destroy();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea30310452c798cb4d24640359528809", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public boolean isIgnoreCase()", "signatureAfterChange": "     public boolean isIgnoreCase()", "diff": ["-        return mIgnoreCase;", "+        return ignoreCase;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea3053a61a410ddd3dcda05171fc56e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if ((aAST.getType() == TokenTypes.VARIABLE_DEF)", "-            || (aAST.getType() == TokenTypes.PARAMETER_DEF))", "+        if ((ast.getType() == TokenTypes.VARIABLE_DEF)", "+            || (ast.getType() == TokenTypes.PARAMETER_DEF))", "-            processVariable(aAST);", "+            processVariable(ast);", "-        final DetailAST typeMods = aAST.findFirstToken(TokenTypes.MODIFIERS);", "+        final DetailAST typeMods = ast.findFirstToken(TokenTypes.MODIFIERS);", "-                new FieldFrame(mCurrentFrame, isStaticInnerType);", "+                new FieldFrame(currentFrame, isStaticInnerType);", "-        final DetailAST objBlock = aAST.findFirstToken(TokenTypes.OBJBLOCK);", "+        final DetailAST objBlock = ast.findFirstToken(TokenTypes.OBJBLOCK);", "-        mCurrentFrame = frame;", "+        currentFrame = frame;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea56be303b7cad255649a8bf68f49095", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     PkgControl(final String aPkgName)", "signatureAfterChange": "     PkgControl(final String pkgName)", "diff": ["-    PkgControl(final String aPkgName)", "+    PkgControl(final String pkgName)", "-        assert aPkgName != null;", "-        mParent = null;", "-        mFullPackage = aPkgName;", "+        assert pkgName != null;", "+        parent = null;", "+        fullPackage = pkgName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea5b41dfec9a21602a45b6a80d2dbfcf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheckTest.java", "commitBeforeChange": "64c05f5391bdf55a60da22a685488022827aee84", "commitAfterChange": "1487e5161886d95cb8c82e4fb1a8b447fa7e32d0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testWithAnnonymousClass() throws Exception", "signatureAfterChange": "      @Test     public void testWithAnonymousClass() throws Exception", "diff": ["-    public void testWithAnnonymousClass() throws Exception {", "+    public void testWithAnonymousClass() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea7545db73e6bf686d984ea58adb8613", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "be6d271ac34efc3daed3dbb873ab8060723dd4f8", "commitAfterChange": "b06dd9801e56887f7da1bbc8b55233e0ff5f5115", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setAllownoauthor(boolean aAllowed)", "signatureAfterChange": "     public void setAllowNoAuthor(boolean aAllowed)", "diff": ["-    public void setAllownoauthor(boolean aAllowed)", "+    public void setAllowNoAuthor(boolean aAllowed)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea7b2ed9dbd329e58deae6f23cb21c42", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private static void trimTail(StringBuilder builder)", "signatureAfterChange": "     private static void trimTail(StringBuilder builder)", "diff": ["-        int i = builder.length() - 1;", "+        int index = builder.length() - 1;", "-            if (Character.isWhitespace(builder.charAt(i))) {", "-                builder.deleteCharAt(i);", "+            if (Character.isWhitespace(builder.charAt(index))) {", "+                builder.deleteCharAt(index);", "-            else if (builder.charAt(i) == '/'", "-                    && builder.charAt(i - 1) == '*') {", "-                builder.deleteCharAt(i);", "-                builder.deleteCharAt(i - 1);", "-                i--;", "-                while (builder.charAt(i - 1) == '*') {", "-                    builder.deleteCharAt(i - 1);", "-                    i--;", "+            else if (builder.charAt(index) == '/'", "+                    && builder.charAt(index - 1) == '*') {", "+                builder.deleteCharAt(index);", "+                builder.deleteCharAt(index - 1);", "+                index--;", "+                while (builder.charAt(index - 1) == '*') {", "+                    builder.deleteCharAt(index - 1);", "+                    index--;", "-            i--;", "+            index--;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea7b5a3c8d6f235e9b66e525e6ca4352", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/doclets/CheckDocsDoclet.java", "commitBeforeChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "commitAfterChange": "319f297e13e5c175a62489ff555cff7c463d3c7b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "         public int compare(ClassDoc aObject1, ClassDoc aObject2)", "signatureAfterChange": "         public int compare(ClassDoc object1, ClassDoc object2)", "diff": ["-        public int compare(ClassDoc aObject1, ClassDoc aObject2)", "+        public int compare(ClassDoc object1, ClassDoc object2)", "-            final String checkName1 = getCheckName(aObject1);", "-            final String checkName2 = getCheckName(aObject2);", "+            final String checkName1 = getCheckName(object1);", "+            final String checkName2 = getCheckName(object2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea9103d789554ded214e0827d84c12c5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "      @Test     public void testLoadProperties_IOException() throws Exception", "signatureAfterChange": "      @Test     public void testLoadPropertiesIOException() throws Exception", "diff": ["-    public void testLoadProperties_IOException() throws Exception {", "+    public void testLoadPropertiesIOException() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea9de5bc8639d309aa4100096f1f16cd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "91aa6578321ceb08f4b0d715f994b7a9f4abe9d7", "commitAfterChange": "3430721be200cbe2acf55c3b3d52a528638123b3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private Set loadKeys(File file)", "signatureAfterChange": "     private Set loadKeys(File aFile)", "diff": ["-    private Set loadKeys(File file)", "+    private Set loadKeys(File aFile)", "-            inputStream = new FileInputStream(file);", "+            inputStream = new FileInputStream(aFile);", "-            logIOException(e, file);", "+            logIOException(e, aFile);", "-                logIOException(e, file);", "+                logIOException(e, aFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eac036fa712ddb3297a141873d20638d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "3c7c3cbe88a2bec0962702305db4f2b05117501c", "commitAfterChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void setCheckHtml(boolean flag)", "signatureAfterChange": "     public void setCheckHtml(boolean flag)", "diff": ["-        checkHtml = flag;", "+        checkingHtml = flag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eadb4b03386e29254b89dd85690b0c38", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void checkUnclosedTags(FastStack<HtmlTag> aHtmlStack, String aToken)", "signatureAfterChange": "     private void checkUnclosedTags(FastStack<HtmlTag> htmlStack, String token)", "diff": ["-    private void checkUnclosedTags(FastStack<HtmlTag> aHtmlStack, String aToken)", "+    private void checkUnclosedTags(FastStack<HtmlTag> htmlStack, String token)", "-        HtmlTag lastOpenTag = aHtmlStack.pop();", "-        while (!aToken.equalsIgnoreCase(lastOpenTag.getId())) {", "+        HtmlTag lastOpenTag = htmlStack.pop();", "+        while (!token.equalsIgnoreCase(lastOpenTag.getId())) {", "-                lastOpenTag = aHtmlStack.pop();", "+                lastOpenTag = htmlStack.pop();", "-                lastOpenTag = aHtmlStack.pop();", "+                lastOpenTag = htmlStack.pop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb04753758e01e2b091953b814fde513", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "          public Object[] getMessageArguments()", "signatureAfterChange": "          public Object[] getMessageArguments()", "diff": ["-            return mMessageArguments;", "+            return messageArguments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb2a9cb82a2ae75c1aa581804b7eabb1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void tagSuppressions()", "signatureAfterChange": "     private void tagSuppressions()", "diff": ["-        mTags.clear();", "+        tags.clear();", "-        if (mCheckCPP) {", "+        if (checkCPP) {", "-        if (mCheckC) {", "+        if (checkC) {", "-        Collections.sort(mTags);", "+        Collections.sort(tags);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb3322ea93975c517f40d8ed66a52f67", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/TokenUtilsTest.java", "commitBeforeChange": "7a873e13339bc50517b7e546e473d605c41b04a8", "commitAfterChange": "6839ac4fd83dde7060c8f6f28e75aa3d6ff2456b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testGetIntFromInaccessibleField() throws NoSuchFieldException", "signatureAfterChange": "      @Test     public void testGetIntFromInaccessibleField() throws NoSuchFieldException", "diff": ["+            fail();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb5065345f3d8e0fb12157ac97d99a58", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/RegexpCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setMessage(String aMessage)", "signatureAfterChange": "     public void setMessage(String message)", "diff": ["-    public void setMessage(String aMessage)", "+    public void setMessage(String message)", "-        mMessage = (aMessage == null) ? \"\" : aMessage;", "+        this.message = (message == null) ? \"\" : message;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb613a359c74f0b49d7f053f300b55d3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "f24c8ee834e006c406c0538dbfccc2fe6c07279c", "commitAfterChange": "4f6596703fa79f08617a41f53e24aff32821a2c6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void readObject(ObjectInputStream aStream)         throws IOException, ClassNotFoundException", "signatureAfterChange": "     private void readObject(ObjectInputStream aStream)         throws IOException, ClassNotFoundException", "diff": ["-        // load the file to re-read the lines", "-        loadFiles();", "-", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb7513951d67f504b12f68dbecd3093d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java", "commitBeforeChange": "46a52f84c014e4d25379f429f11ed3de11fe8ae7", "commitAfterChange": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                checkClassContructorModifiers(ast);", "+                checkClassConstructorModifiers(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebb18fb80058e8c1220690357408ef55", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                if (iastypeField(ast) && !hasEmptyLineAfter(ast)) {", "+                if (isTypeField(ast) && !hasEmptyLineAfter(ast)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebee290849bd6f2b55c8ae31188c6d81", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ParseTreeInfoPanel()", "signatureAfterChange": "     public ParseTreeInfoPanel()", "diff": ["-        final JScrollPane sp = new JScrollPane(treeTable);", "-        add(sp, BorderLayout.PAGE_START);", "+        final JScrollPane scrollPane = new JScrollPane(treeTable);", "+        add(scrollPane, BorderLayout.PAGE_START);", "-        final JPanel p = new JPanel(new GridLayout(1, 2));", "-        add(p, BorderLayout.PAGE_END);", "-        p.add(fileSelectionButton);", "-        p.add(reloadButton);", "+        final JPanel pane = new JPanel(new GridLayout(1, 2));", "+        add(pane, BorderLayout.PAGE_END);", "+        pane.add(fileSelectionButton);", "+        pane.add(reloadButton);", "-            new FileDrop(sp, new FileDropListener(sp));", "+            new FileDrop(scrollPane, new FileDropListener(scrollPane));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec11a47bbb097db78fed567c945ced60", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public MethodCallHandler(IndentationCheck aIndentCheck,         DetailAST aAST, ExpressionHandler aParent)", "signatureAfterChange": "     public MethodCallHandler(IndentationCheck indentCheck,         DetailAST ast, ExpressionHandler parent)", "diff": ["-    public MethodCallHandler(IndentationCheck aIndentCheck,", "-        DetailAST aAST, ExpressionHandler aParent)", "+    public MethodCallHandler(IndentationCheck indentCheck,", "+        DetailAST ast, ExpressionHandler parent)", "-        super(aIndentCheck,", "-            aAST.getType() == TokenTypes.METHOD_CALL", "+        super(indentCheck,", "+            ast.getType() == TokenTypes.METHOD_CALL", "-            aAST,", "-            aParent);", "+            ast,", "+            parent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec405568f70feb4609f7341a057ec161", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java", "commitBeforeChange": "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2", "commitAfterChange": "545237e358cd5ec1492f128f500b345d0f1718a9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void findMatch()", "signatureAfterChange": "     private void findMatch()", "diff": ["-                            \"regexp.exceeded\", matcher.pattern().toString());", "+                            REGEXP_EXCEEDED, matcher.pattern().toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec5966c4772a7d877b45601175f35a21", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentLevel.java", "commitBeforeChange": "13a49cc45b1527357934dd7802c24686d7bb7858", "commitAfterChange": "24d7448294b03e49709c8e5588e89c27091ba0f2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public boolean accept(int indent)", "signatureAfterChange": "     public boolean isAcceptable(int indent)", "diff": ["-    public boolean accept(int indent) {", "+    public boolean isAcceptable(int indent) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec603334d4d160b0e5a9e429588e6fa2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-    public void beginTree(DetailAST aRootAST)", "+    public void beginTree(DetailAST rootAST)", "-        mPackage = FullIdent.createFullIdent(null);", "-        mCurrentClass = null;", "-        mClassDepth = 0;", "+        packageName = FullIdent.createFullIdent(null);", "+        currentClass = null;", "+        classDepth = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec88b0538f302544282d8078f6c41f85", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST rootAST)", "diff": ["-    public void finishTree(DetailAST aRootAST)", "+    public void finishTree(DetailAST rootAST)", "-        for (final FullIdent imp : mImports) {", "-            if (!mReferenced.contains(Utils.baseClassname(imp.getText()))) {", "+        for (final FullIdent imp : imports) {", "+            if (!referenced.contains(Utils.baseClassname(imp.getText()))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec89ad4ce456288ff6639800c37919ed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportTest.java", "commitBeforeChange": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0", "commitAfterChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void testGetRequiredTokesn()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-    public void testGetRequiredTokesn() {", "+    public void testGetRequiredTokens() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec8af1eb30864cce1ac1bf032aff3a28", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private AccessResult localCheckAccess(final String aForImport,         final String aInPkg)", "signatureAfterChange": "     private AccessResult localCheckAccess(final String forImport,         final String inPkg)", "diff": ["-    private AccessResult localCheckAccess(final String aForImport,", "-        final String aInPkg)", "+    private AccessResult localCheckAccess(final String forImport,", "+        final String inPkg)", "-        for (Guard g : mGuards) {", "+        for (Guard g : guards) {", "-            if (g.isLocalOnly() && !mFullPackage.equals(aInPkg)) {", "+            if (g.isLocalOnly() && !fullPackage.equals(inPkg)) {", "-            final AccessResult result = g.verifyImport(aForImport);", "+            final AccessResult result = g.verifyImport(forImport);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecb2517f8b78bc33646ecaed761206c7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setGroups(String... packageGroups)", "signatureAfterChange": "     public void setGroups(String... packageGroups)", "diff": ["-            else if (Utils.startsWithChar(pkg, '/')) {", "-                if (!Utils.endsWithChar(pkg, '/')) {", "+            else if (CommonUtils.startsWithChar(pkg, '/')) {", "+                if (!CommonUtils.endsWithChar(pkg, '/')) {", "-                if (!Utils.endsWithChar(pkg, '.')) {", "+                if (!CommonUtils.endsWithChar(pkg, '.')) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecbf901fe4a30e2a4bb2b76f391ac4c7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void add(HtmlTag aTag)", "signatureAfterChange": "     private void add(HtmlTag tag)", "diff": ["-    private void add(HtmlTag aTag)", "+    private void add(HtmlTag tag)", "-        mTags.add(aTag);", "+        tags.add(tag);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ece038b9d1b67ed2eb5c0cb668ea967e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java", "commitBeforeChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "commitAfterChange": "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void checkCounters(MethodCounter counter, DetailAST ast)", "signatureAfterChange": "     private void checkCounters(MethodCounter counter, DetailAST ast)", "diff": ["-                 \"too.many.privateMethods\", ast);", "+                 MSG_PRIVATE_METHODS, ast);", "-                 \"too.many.packageMethods\", ast);", "+                 MSG_PACKAGE_METHODS, ast);", "-                 \"too.many.protectedMethods\", ast);", "+                 MSG_PROTECTED_METHODS, ast);", "-                 \"too.many.publicMethods\", ast);", "-        checkMax(maxTotal, counter.getTotal(), \"too.many.methods\", ast);", "+                 MSG_PUBLIC_METHODS, ast);", "+        checkMax(maxTotal, counter.getTotal(), MSG_MANY_METHODS, ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ece9a3a20c0415b2aedb8972a60d7332", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "1f54d3d6892c2c5561abe9e7ef5ef91650cc7288", "commitAfterChange": "f418179fceee506395546e5e08ed168fa120a34c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     public boolean accept(AuditEvent event)", "signatureAfterChange": "      @Override     public boolean accept(AuditEvent event)", "diff": ["-                if (matchTag(event)) {", "+                if (matchesTag(event)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecf43064870c40fbab388fb50cda407a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static boolean hasOverrideAnnotation(DetailAST aMethodModifiersAST)", "signatureAfterChange": "     private static boolean hasOverrideAnnotation(DetailAST methodModifiersAST)", "diff": ["-    private static boolean hasOverrideAnnotation(DetailAST aMethodModifiersAST)", "+    private static boolean hasOverrideAnnotation(DetailAST methodModifiersAST)", "-        for (DetailAST child : getChildren(aMethodModifiersAST)) {", "+        for (DetailAST child : getChildren(methodModifiersAST)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed21dcd6e2d6cbff7bb605974550a70b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65", "commitAfterChange": "88830ca708e2deb22cae333057ebddd15f7f9c57", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "         public Tag(int line, int column, String text, boolean reportingOn,                    SuppressionCommentFilter filter)", "signatureAfterChange": "         public Tag(int line, int column, String text, boolean reportingOn,                    SuppressionCommentFilter filter)", "diff": ["-                    if (filter.messageFormat != null) {", "-                        format =", "-                            expandFromComment(text, filter.messageFormat, filter.onRegexp);", "-                        tagMessageRegexp = Pattern.compile(format);", "+                    if (filter.messageFormat == null) {", "+                        tagMessageRegexp = null;", "-                        tagMessageRegexp = null;", "+                        format =", "+                                expandFromComment(text, filter.messageFormat, filter.onRegexp);", "+                        tagMessageRegexp = Pattern.compile(format);", "-                    if (filter.messageFormat != null) {", "-                        format =", "-                            expandFromComment(", "-                                    text,", "-                                    filter.messageFormat,", "-                                    filter.offRegexp);", "-                        tagMessageRegexp = Pattern.compile(format);", "+                    if (filter.messageFormat == null) {", "+                        tagMessageRegexp = null;", "-                        tagMessageRegexp = null;", "+                        format =", "+                                expandFromComment(", "+                                        text,", "+                                        filter.messageFormat,", "+                                        filter.offRegexp);", "+                        tagMessageRegexp = Pattern.compile(format);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed32ab04e2410ff39bc5f519022b21c0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ReturnCountCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void visitMethodDef(DetailAST aAST)", "signatureAfterChange": "     private void visitMethodDef(DetailAST ast)", "diff": ["-    private void visitMethodDef(DetailAST aAST)", "+    private void visitMethodDef(DetailAST ast)", "-        mContextStack.push(mContext);", "-        final DetailAST methodNameAST = aAST.findFirstToken(TokenTypes.IDENT);", "-        mContext =", "+        contextStack.push(context);", "+        final DetailAST methodNameAST = ast.findFirstToken(TokenTypes.IDENT);", "+        context ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed3bdb9145cdd43e333429b8223b632b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpMultilineCheck.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected void processFiltered(File aFile, List<String> aLines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-    protected void processFiltered(File aFile, List<String> aLines)", "+    protected void processFiltered(File file, List<String> lines)", "-        mDetector.processLines(FileText.fromLines(aFile, aLines));", "+        detector.processLines(FileText.fromLines(file, lines));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed7a62dc5b875eff213a1cb9bbb2c1ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void notifyEnd(DetailAST aRootAST, AstState aAstState)", "signatureAfterChange": "     private void notifyEnd(DetailAST rootAST, AstState astState)", "diff": ["-    private void notifyEnd(DetailAST aRootAST, AstState aAstState)", "+    private void notifyEnd(DetailAST rootAST, AstState astState)", "-        if (aAstState == AstState.WITH_COMMENTS) {", "-            checks = mCommentChecks;", "+        if (astState == AstState.WITH_COMMENTS) {", "+            checks = commentChecks;", "-            checks = mOrdinaryChecks;", "+            checks = ordinaryChecks;", "-            ch.finishTree(aRootAST);", "+            ch.finishTree(rootAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed870baf51f1c2a223b4acb156070f90", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setTarget(String aTarget)", "signatureAfterChange": "     public void setTarget(String target)", "diff": ["-    public void setTarget(String aTarget)", "+    public void setTarget(String target)", "-        for (String type : aTarget.split(\", \")) {", "+        for (String type : target.split(\", \")) {", "-        mTarget = customTarget;", "+        this.target = customTarget;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed98b6a9e91661c20e86d059373d72ff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "         private AuditListener createXMLLogger(Task aTask) throws IOException", "signatureAfterChange": "         private AuditListener createXMLLogger(Task task) throws IOException", "diff": ["-        private AuditListener createXMLLogger(Task aTask) throws IOException", "+        private AuditListener createXMLLogger(Task task) throws IOException", "-            if ((mToFile == null) || !mUseFile) {", "-                return new XMLLogger(new LogOutputStream(aTask,", "+            if ((toFile == null) || !useFile) {", "+                return new XMLLogger(new LogOutputStream(task,", "-            return new XMLLogger(new FileOutputStream(mToFile), true);", "+            return new XMLLogger(new FileOutputStream(toFile), true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edc48a4af76f1c52fe3575ce794bb6f6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "957f644aeff928017aba3d0a920c1ce721296851", "commitAfterChange": "4065b439221c56ab2a11f97cb50c246d8ba2c913", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": "     private boolean isFlagSet(String aName)", "signatureAfterChange": "     private boolean getBooleanProperty(String aName)", "diff": ["-    private boolean isFlagSet(String aName)", "+    private boolean getBooleanProperty(String aName)", "-        return mBooleanFlags.contains(aName);", "+        return mBooleanProps.contains(aName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edd8a9ac6d84680ed0aedc96874c7003", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void setIgnoreConstructorParameter(         boolean aIgnoreConstructorParameter)", "signatureAfterChange": "     public void setIgnoreConstructorParameter(         boolean ignoreConstructorParameter)", "diff": ["-        boolean aIgnoreConstructorParameter)", "+        boolean ignoreConstructorParameter)", "-        mIgnoreConstructorParameter = aIgnoreConstructorParameter;", "+        this.ignoreConstructorParameter = ignoreConstructorParameter;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edf3419787e8a932c54c675b9880d03b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "commitAfterChange": "6125beffc437f970eae276b4a6542265c6547784", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        final boolean inInterfaceBlock = inInterfaceBlock(aAST);", "+        final boolean inInterfaceOrAnnotationBlock =", "+            ScopeUtils.inInterfaceOrAnnotationBlock(aAST);", "-             inInterfaceBlock ? \"public\" : declaredScope;", "+             inInterfaceOrAnnotationBlock ? \"public\" : declaredScope;", "-                || inInterfaceBlock // implicitly static and final", "+                || inInterfaceOrAnnotationBlock // implicitly static and final"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee0e25559e510e4d99d2fd370edbe50e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PropertiesExpander.java", "commitBeforeChange": "95604498dadc98608c4294760a8f74c6d2ca2c68", "commitAfterChange": "b43c32ad0a3674fcda782d2e28d0975b72382470", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public String resolve(String propertyName)", "signatureAfterChange": "      @Override     public String resolve(String name)", "diff": ["-    public String resolve(String propertyName) {", "-        return properties.getProperty(propertyName);", "+    public String resolve(String name) {", "+        return properties.getProperty(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee5094fe95975276a82ee28f77887aca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/FileDrop.java", "commitBeforeChange": "546f336e25b26d072f96e2cda139b885858ed5b0", "commitAfterChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     static void remove(Component c, boolean recursive)", "signatureAfterChange": "     static void remove(Component component, boolean recursive)", "diff": ["-    static void remove(Component c, boolean recursive) {", "-        c.setDropTarget(null);", "-        if (recursive && c instanceof Container) {", "-            final Component[] comps = ((Container) c).getComponents();", "+    static void remove(Component component, boolean recursive) {", "+        component.setDropTarget(null);", "+        if (recursive && component instanceof Container) {", "+            final Component[] comps = ((Container) component).getComponents();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee8999ec413d9e6551a9f9255083f6b6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "contrib/j2ee/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/j2ee/LocalHomeInterfaceCheck.java", "commitBeforeChange": "7a2c495da7f2fdb2632df53491a90570d2449187", "commitAfterChange": "1bca9cc4434f512d1908982dcd628680578a2a1a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected void checkMethods(DetailAST aAST)", "signatureAfterChange": "     protected void checkMethods(DetailAST aAST)", "diff": ["+        // a home interface must have a findByPrimaryKey method", "+        checkFindByPrimaryKey(aAST);", "+             "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeaf96381c909e0d1d8975e62521af27", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule72thesummaryfragment/SummaryJavadocTest.java", "commitBeforeChange": "1e0de782f6702931937795d276f73ca774a3be96", "commitAfterChange": "92182aea44f5f6323673fcda29749379f6ca39f8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIncorrect() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrect() throws Exception", "diff": ["-        String msg_first_sentence = getCheckMessage(SummaryJavadocCheck.class, \"summary.first.sentence\");", "-        String msg_forbidden_fragment = getCheckMessage(SummaryJavadocCheck.class, \"summary.javaDoc\");", "+        String msgFirstSentence = getCheckMessage(SummaryJavadocCheck.class, \"summary.first.sentence\");", "+        String msgForbiddenFragment = getCheckMessage(SummaryJavadocCheck.class, \"summary.javaDoc\");", "-            \"14: \" + msg_first_sentence,", "-            \"37: \" + msg_first_sentence,", "-            \"47: \" + msg_forbidden_fragment,", "-            \"58: \" + msg_forbidden_fragment,", "-            \"69: \" + msg_first_sentence,", "-            \"83: \" + msg_forbidden_fragment,", "-            \"103: \" + msg_first_sentence,", "+            \"14: \" + msgFirstSentence,", "+            \"37: \" + msgFirstSentence,", "+            \"47: \" + msgForbiddenFragment,", "+            \"58: \" + msgForbiddenFragment,", "+            \"69: \" + msgFirstSentence,", "+            \"83: \" + msgForbiddenFragment,", "+            \"103: \" + msgFirstSentence,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeb07b7fdd6b9aa979d80435b862efd8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private boolean isEmptyType(DetailAST aAST, int aParentType)", "signatureAfterChange": "     private boolean isEmptyType(DetailAST ast, int parentType)", "diff": ["-    private boolean isEmptyType(DetailAST aAST, int aParentType)", "+    private boolean isEmptyType(DetailAST ast, int parentType)", "-        final int type = aAST.getType();", "+        final int type = ast.getType();", "-                && aParentType == TokenTypes.OBJBLOCK)", "+                && parentType == TokenTypes.OBJBLOCK)", "-            final DetailAST typeNode = aAST.getParent().getParent();", "+            final DetailAST typeNode = ast.getParent().getParent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeda5ea90d85f5559f46f91080bc0721", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (isInIgnoreOccurrenceContext(aAST)) {", "+        if (isInIgnoreOccurrenceContext(ast)) {", "-        final String currentString = aAST.getText();", "-        if ((mPattern == null) || !mPattern.matcher(currentString).find()) {", "-            List<StringInfo> hitList = mStringMap.get(currentString);", "+        final String currentString = ast.getText();", "+        if ((pattern == null) || !pattern.matcher(currentString).find()) {", "+            List<StringInfo> hitList = stringMap.get(currentString);", "-                mStringMap.put(currentString, hitList);", "+                stringMap.put(currentString, hitList);", "-            final int line = aAST.getLineNo();", "-            final int col = aAST.getColumnNo();", "+            final int line = ast.getLineNo();", "+            final int col = ast.getColumnNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eedbf2632f1f14850f3b7494fff9c4b8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheck.java", "commitBeforeChange": "c7316892445cca4118c943343631fd4c7411b3d5", "commitAfterChange": "e6b25218eb580c74c218f04bdc77bd66e22da1f6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean ignoreNumberOfParameters(DetailAST aAST)", "signatureAfterChange": "     private boolean ignoreNumberOfParameters(DetailAST aAST)", "diff": ["-                || AnnotationUtility.containsAnnotation(aAST, FQ_OVERRIDE));", "+                || AnnotationUtility.containsAnnotation(aAST, CANONICAL_OVERRIDE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eef51c28abc7ba4936a9e2f315516493", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "5bd22fd6136bd16e82d32c5a386bcf033004d8eb", "commitAfterChange": "b9a1bec65f9eec7b96add7336dfcca4bf284e479", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-            err.printStackTrace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef2f5160a76df760a8666aa292d41e07", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "6cdcfc135ab45c2ab0c69080b89b4baa360fed16", "commitAfterChange": "56743942d548686fb90ebd8b7a17fed5977e49dc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-            LOG.error(exceptionMsg);", "+            LOG.error(exceptionMsg, ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef4a83a9d396dfe429180debbbca3da5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "5703b6e33550d6e9706f42e253c2cc7d83a358bf", "commitAfterChange": "1818ae8ab189515f24a711aa3fc520377bd71380", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     void verifyVariable(MyVariable aVar)", "signatureAfterChange": "     void verifyVariable(MyVariable aVar)", "diff": ["-                          \"variable.missingJavadoc\", aVar.getText());", "+                          \"javadoc.missing\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef504ab0aea683047d5d3bbe712a56e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AnnotationLocationCheck.java", "commitBeforeChange": "9250096ccfee8b3d7a942106a25a9623c66fa54a", "commitAfterChange": "f9e79c3905e3bf5c18d63853b96aac371bc05f80", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public final void setAllowSameLineSingleParrametterlessAnnotation(boolean aAllow)", "signatureAfterChange": "     public final void setAllowSamelineSingleParameterlessAnnotation(boolean aAllow)", "diff": ["-    public final void setAllowSameLineSingleParrametterlessAnnotation(boolean aAllow)", "+    public final void setAllowSamelineSingleParameterlessAnnotation(boolean aAllow)", "-        mAllowSameLineSingleParametterlessAnnotation = aAllow;", "+        mAllowSamelineSingleParameterlessAnnotation = aAllow;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efa3ddecff91813e1f20d7ac1db012ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheckTest.java", "commitBeforeChange": "896af516b0028ff2a26cc1888dfaba620d3fe9e0", "commitAfterChange": "55c92042eb6986e905529de841d3d1c9a7b2b6dd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testPrePreviousLineEmpiness() throws Exception", "signatureAfterChange": "      @Test     public void testPrePreviousLineEmptiness() throws Exception", "diff": ["-    public void testPrePreviousLineEmpiness() throws Exception {", "+    public void testPrePreviousLineEmptiness() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eff78449739fd86a8a8e91fd0689d502", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "         int getTotal()", "signatureAfterChange": "         int getTotal()", "diff": ["-            return mTotal;", "+            return total;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f01e519a312672097963f0cc02e47ed6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "         public void setType(FormatterType aType)", "signatureAfterChange": "         public void setType(FormatterType type)", "diff": ["-        public void setType(FormatterType aType)", "+        public void setType(FormatterType type)", "-            final String val = aType.getValue();", "+            final String val = type.getValue();", "-            mFormatterType = aType;", "+            formatterType = type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f01ff60ba18b2e8a7de1ed80e4b757f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/comments/CompareTreesWithComments.java", "commitBeforeChange": "4b95f33697750ed910d59830fc9c649f094d88f8", "commitAfterChange": "879864502bd28685569417780ebc92308038cf2c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAST)", "diff": ["-    public void beginTree(DetailAST aRootAST) {", "-        Assert.assertTrue(isAstEquals(expectedTree, aRootAST));", "+    public void beginTree(DetailAST rootAST) {", "+        Assert.assertTrue(isAstEquals(expectedTree, rootAST));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0234e6b835a56944fb5167517f7963d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Class<?> resolve(String aName, String aCurrentClass)         throws ClassNotFoundException", "signatureAfterChange": "     public Class<?> resolve(String name, String currentClass)         throws ClassNotFoundException", "diff": ["-    public Class<?> resolve(String aName, String aCurrentClass)", "+    public Class<?> resolve(String name, String currentClass)", "-        Class<?> clazz = resolveQualifiedName(aName);", "+        Class<?> clazz = resolveQualifiedName(name);", "-        for (String imp : mImports) {", "+        for (String imp : imports) {", "-            if (imp.endsWith(\".\" + aName)) {", "+            if (imp.endsWith(\".\" + name)) {", "-        if (!\"\".equals(mPkg)) {", "-            clazz = resolveQualifiedName(mPkg + \".\" + aName);", "+        if (!\"\".equals(pkg)) {", "+            clazz = resolveQualifiedName(pkg + \".\" + name);", "-        if (!\"\".equals(aCurrentClass)) {", "-            final String innerClass = (!\"\".equals(mPkg) ? (mPkg + \".\") : \"\")", "-                + aCurrentClass + \"$\" + aName;", "+        if (!\"\".equals(currentClass)) {", "+            final String innerClass = (!\"\".equals(pkg) ? (pkg + \".\") : \"\")", "+                + currentClass + \"$\" + name;", "-        for (String imp : mImports) {", "+        for (String imp : imports) {", "-                    + aName;", "+                    + name;", "-        return safeLoad(aName);", "+        return safeLoad(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f029bc6f0beddc255c103b2d49f428d5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "343e946b076a5344e380c76e5b3ea23438b6fc93", "commitAfterChange": "e3a48d1527341456a798c3f0c1986de6898a8c60", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 38, "signatureBeforeChange": "      @Test     public void testInvalidAssignWithChecker() throws Exception", "signatureAfterChange": "      @Test     public void testInvalidAssignWithChecker() throws Exception", "diff": ["-            \"8: method call child at indentation level 10 not at correct indentation, 12\",", "-            \"10: method call child at indentation level 10 not at correct indentation, 12\",", "-            \"12: method call child at indentation level 10 not at correct indentation, 12\",", "-            \"14: assign at indentation level 9 not at correct indentation, 12\",", "-            \"15: assign child at indentation level 10 not at correct indentation, 12\",", "+            \"8: 'getLineNo' have incorrect indentation level 10, expected level should be 12.\",", "+            \"10: 'getLine' have incorrect indentation level 10, expected level should be 12.\",", "+            \"14: '=' have incorrect indentation level 9, expected level should be 12.\",", "+            \"15: '1' have incorrect indentation level 10, expected level should be 12.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f04e13424ba37df4f36aa8884228061e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java", "commitBeforeChange": "3c7c3cbe88a2bec0962702305db4f2b05117501c", "commitAfterChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "          @Override         public String toString()", "signatureAfterChange": "          @Override         public String toString()", "diff": ["-                + \" pctor=\" + hasPrivateCtor", "-                + \" ctor=\" + hasNonPrivateCtor", "+                + \" pctor=\" + withPrivateCtor", "+                + \" ctor=\" + withNonPrivateCtor"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0784bab34f3b20d3227fa609fedd856", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "         ClassDesc(boolean aDeclaredAsFinal, boolean aDeclaredAsAbstract)", "signatureAfterChange": "         ClassDesc(boolean declaredAsFinal, boolean declaredAsAbstract)", "diff": ["-        ClassDesc(boolean aDeclaredAsFinal, boolean aDeclaredAsAbstract)", "+        ClassDesc(boolean declaredAsFinal, boolean declaredAsAbstract)", "-            mDeclaredAsFinal = aDeclaredAsFinal;", "-            mDeclaredAsAbstract = aDeclaredAsAbstract;", "+            this.declaredAsFinal = declaredAsFinal;", "+            this.declaredAsAbstract = declaredAsAbstract;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0823f942bf872d036f680a44e47da4b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheckTest.java", "commitBeforeChange": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077", "commitAfterChange": "cb5a59fc6baf5de204e3cc99be6ba9865e44350a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testSigleLineLambda() throws Exception", "signatureAfterChange": "      @Test     public void testSingleLineLambda() throws Exception", "diff": ["-    public void testSigleLineLambda() throws Exception {", "+    public void testSingleLineLambda() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f095b2c28f3dc346232ec66db9655ffa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public int getLineNo()", "signatureAfterChange": "     public int getLineNo()", "diff": ["-        if (mLineNo == NOT_INITIALIZED) {", "+        if (lineNo == NOT_INITIALIZED) {", "-        return mLineNo;", "+        return lineNo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0f91999550796c9432bd3ca6ef0c036", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "de6862e0bedab5c22d54b4cf503144c28f1aea26", "commitAfterChange": "55c2560774f0624afeae9e6c29fd19ae59e8c24b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean emptyMethodBlockCheck(DetailAST aAST, int aParentType)", "signatureAfterChange": "     private boolean isEmptyMethodBlock(DetailAST aAST, int aParentType)", "diff": ["-    private boolean emptyMethodBlockCheck(DetailAST aAST, int aParentType)", "+    private boolean isEmptyMethodBlock(DetailAST aAST, int aParentType)", "-            && emptyBlockCheck(aAST, aParentType, TokenTypes.METHOD_DEF);", "+            && isEmptyBlock(aAST, aParentType, TokenTypes.METHOD_DEF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f110c861c0c7d34bcb354670c79ad870", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void visitMethodDef(DetailAST aMethod)", "signatureAfterChange": "     private void visitMethodDef(DetailAST method)", "diff": ["-    private void visitMethodDef(DetailAST aMethod)", "+    private void visitMethodDef(DetailAST method)", "-        if (mClassDepth != 1) {", "+        if (classDepth != 1) {", "-            && checkName(aMethod)", "-            && checkModifiers(aMethod)", "-            && checkType(aMethod)", "-            && checkParams(aMethod))", "+            && checkName(method)", "+            && checkModifiers(method)", "+            && checkType(method)", "+            && checkParams(method))", "-            log(aMethod.getLineNo(), \"uncommented.main\");", "+            log(method.getLineNo(), \"uncommented.main\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f11a6e7363df30a5d7a26bd8b9bc400d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/SuppressWarningsCheck.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void logMatch(final int aLineNo,         final int aColNum, final String aWarningText)", "signatureAfterChange": "     private void logMatch(final int aLineNo,         final int aColNum, final String aWarningText)", "diff": ["-                \"suppressed.warning.not.allowed\", aWarningText);", "+                    MSG_KEY_SUPPRESSED_WARNING_NOT_ALLOWED, aWarningText);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f13bcc669c67c269d2fff4ff17e3b2ca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "b3f724f871dd57c4db958556df1a73f71c8bd6e5", "commitAfterChange": "ff6c49e6a715d8372ac77a34aa77d9eaff6db154", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void processTypeParams(DetailAST aAST)", "signatureAfterChange": "     private void processTypeParams(DetailAST aAST)", "diff": ["-        mTypeParams.add(paramsMap);", "+        mTypeParams.push(paramsMap);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f13d8295a7e5e69b6b7559da09e0715f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "745e21f1e4d202dd8dba577585f35f7d3f10d839", "commitAfterChange": "2e243db3fbdf7b737f78ed7cef0b9bd94f351d25", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test(expected = CheckstyleException.class)     public void testLoadFromNonExistingURL() throws CheckstyleException", "signatureAfterChange": "      @Test(expected = CheckstyleException.class)     public void testLoadFromNonExistingUrl() throws CheckstyleException", "diff": ["-    public void testLoadFromNonExistingURL() throws CheckstyleException {", "+    public void testLoadFromNonExistingUrl() throws CheckstyleException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f146bdd4fbd5a57e0cb66f7023a893c7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SingleLineJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean hasJavadocInlineTags(DetailNode aJavadocRoot)", "signatureAfterChange": "     private boolean hasJavadocInlineTags(DetailNode javadocRoot)", "diff": ["-    private boolean hasJavadocInlineTags(DetailNode aJavadocRoot)", "+    private boolean hasJavadocInlineTags(DetailNode javadocRoot)", "-        return JavadocUtils.branchContains(aJavadocRoot, JavadocTokenTypes.JAVADOC_INLINE_TAG);", "+        return JavadocUtils.branchContains(javadocRoot, JavadocTokenTypes.JAVADOC_INLINE_TAG);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f15485b23827d445a078b0c7a8941fca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "bcbd31a5ecc3aa9b5f0677acb17c441142e57c6f", "commitAfterChange": "fa9bf2e0ef561ab0e112157fd55c52ffac1b5715", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void process(DetailAST aAST)", "signatureAfterChange": "     private void processRec(DetailAST aAST)", "diff": ["-    private void process(DetailAST aAST)", "+    private void processRec(DetailAST aAST)", "-            process(child);", "+            processRec(child);", "-            process(sibling);", "+            processRec(sibling);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f176ef0c8f85d725ce1d964681f19db1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java", "commitBeforeChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "commitAfterChange": "29027109bf962f47b6a6000fdca69b5679ce4b43", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected boolean isMatch(int aLineNumber, String aLine)", "signatureAfterChange": "     protected boolean isMatch(int lineNumber, String line)", "diff": ["-    protected boolean isMatch(int aLineNumber, String aLine)", "+    protected boolean isMatch(int lineNumber, String line)", "-        return isIgnoreLine(aLineNumber + 1)", "-            || getHeaderLines().get(aLineNumber).equals(aLine);", "+        return isIgnoreLine(lineNumber + 1)", "+            || getHeaderLines().get(lineNumber).equals(line);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f196a2ec8e8a846dfa7b9d5edf042763", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DescendantTokenCheck.java", "commitBeforeChange": "ed595de84fba2db507adaf01d04cb089a5e0bac5", "commitAfterChange": "cdf3e56bacd3895262af8a1df9ca5c81f4071970", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void logAsSeparated(DetailAST ast)", "signatureAfterChange": "     private void logAsSeparated(DetailAST ast)", "diff": ["-        final String name = Utils.getTokenName(ast.getType());", "+        final String name = TokenUtils.getTokenName(ast.getType());", "-                final String descendantName = Utils.getTokenName(element);", "+                final String descendantName = TokenUtils.getTokenName(element);", "-                final String descendantName = Utils.getTokenName(element);", "+                final String descendantName = TokenUtils.getTokenName(element);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f19d6e4c053f6451fc197e7637320091", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationLocationCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private boolean isCorrectLocation(DetailAST aAnnotation, boolean aHasParams)", "signatureAfterChange": "     private boolean isCorrectLocation(DetailAST annotation, boolean hasParams)", "diff": ["-    private boolean isCorrectLocation(DetailAST aAnnotation, boolean aHasParams)", "+    private boolean isCorrectLocation(DetailAST annotation, boolean hasParams)", "-        final boolean allowingCondition = aHasParams ? mAllowSamelineParametrizedAnnotation", "-            : mAllowSamelineSingleParameterlessAnnotation;", "-        return allowingCondition && !hasNodeBefore(aAnnotation)", "-            || !allowingCondition && !hasNodeBeside(aAnnotation)", "-            || mAllowSamelineMultipleAnnotations;", "+        final boolean allowingCondition = hasParams ? allowSamelineParametrizedAnnotation", "+            : allowSamelineSingleParameterlessAnnotation;", "+        return allowingCondition && !hasNodeBefore(annotation)", "+            || !allowingCondition && !hasNodeBeside(annotation)", "+            || allowSamelineMultipleAnnotations;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1c22fb19a8072eba49439cdcdc6ddb7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Scope.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public boolean isIn(Scope aScope)", "signatureAfterChange": "     public boolean isIn(Scope scope)", "diff": ["-    public boolean isIn(Scope aScope)", "+    public boolean isIn(Scope scope)", "-        return (compareTo(aScope) <= 0);", "+        return (compareTo(scope) <= 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1d19005fcde5a332ede8aec3b16cba7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     protected final void checkRParen(DetailAST aLparen, DetailAST aRparen)", "signatureAfterChange": "     protected final void checkRParen(DetailAST lparen, DetailAST rparen)", "diff": ["-    protected final void checkRParen(DetailAST aLparen, DetailAST aRparen)", "+    protected final void checkRParen(DetailAST lparen, DetailAST rparen)", "-        if (aRparen == null) {", "+        if (rparen == null) {", "-        final int rparenLevel = expandedTabsColumnNo(aRparen);", "-        if (getLevel().accept(rparenLevel) || !startsLine(aRparen)) {", "+        final int rparenLevel = expandedTabsColumnNo(rparen);", "+        if (getLevel().accept(rparenLevel) || !startsLine(rparen)) {", "-        final int lparenLevel = expandedTabsColumnNo(aLparen);", "+        final int lparenLevel = expandedTabsColumnNo(lparen);", "-        logError(aRparen, \"rparen\", rparenLevel);", "+        logError(rparen, \"rparen\", rparenLevel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1d7fd754fb223a2b0552fb38046c437", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SingleLineJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean hasJavadocTags(DetailNode aJavadocRoot)", "signatureAfterChange": "     private boolean hasJavadocTags(DetailNode javadocRoot)", "diff": ["-    private boolean hasJavadocTags(DetailNode aJavadocRoot)", "+    private boolean hasJavadocTags(DetailNode javadocRoot)", "-        final DetailNode javadocTagSection =", "-                JavadocUtils.findFirstToken(aJavadocRoot, JavadocTokenTypes.JAVADOC_TAG);", "-        return javadocTagSection != null;", "+        final DetailNode javdocTagSection =", "+                JavadocUtils.findFirstToken(javadocRoot, JavadocTokenTypes.JAVADOC_TAG);", "+        return javdocTagSection != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f20d628c4c57ec87306efb86cdba9944", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultContext.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Override     public Object get(String aKey)", "signatureAfterChange": "     @Override     public Object get(String key)", "diff": ["-    public Object get(String aKey)", "+    public Object get(String key)", "-        return mEntries.get(aKey);", "+        return entries.get(key);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f23b90dd4720855f5fd45aa7d034513c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "443e534a3c98c0b30f24647da724fe918f17a006", "commitAfterChange": "66d73fe6189267fee3423e2e8d7fc2d68599a43f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void openFile(File file, final Component parent)", "signatureAfterChange": "      public void openFile(File file, final Component parent)", "diff": ["-                getLines2position().clear();", "+                getLinesToPosition().clear();", "-                getLines2position().add(0);", "+                getLinesToPosition().add(0);", "-                    getLines2position().add(jTextArea.getText().length());", "-                    jTextArea.append(element + \"\\n\");", "+                    getLinesToPosition().add(textArea.getText().length());", "+                    textArea.append(element + \"\\n\");", "-                if (!jTextArea.getText().isEmpty()) {", "-                    jTextArea.replaceRange(\"\", 0, jTextArea.getText()", "+                if (!textArea.getText().isEmpty()) {", "+                    textArea.replaceRange(\"\", 0, textArea.getText()", "-                    jTextArea.append(element + \"\\n\");", "+                    textArea.append(element + \"\\n\");", "-                jTextArea.moveCaretPosition(0);", "+                textArea.moveCaretPosition(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f24ddeb1a9a46c0f48a3a4fe37b84ce7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "commitAfterChange": "abfc952fd0ed88f6246b1d969a8a980ea63f0bd6", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private Properties createOverridingProperties()", "signatureAfterChange": "     private Properties createOverridingProperties()", "diff": ["-        if (propertiesFile != null) {", "+        if (properties != null) {", "-                inStream = new FileInputStream(propertiesFile);", "+                inStream = new FileInputStream(properties);", "-                        + propertiesFile + \"'\", e, getLocation());", "+                        + properties + \"'\", e, getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f28f436848b0511ad8cdb4ebc07a772b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java", "commitBeforeChange": "9cff1673f1d42910c654e0af5365d68591f104f0", "commitAfterChange": "b83c9aceef9577eaada5cfd78bc7b2cd04a176d1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private boolean isMultiLine(int aLineNo)", "signatureAfterChange": "     private boolean isMultiLine(int aLineNo)", "diff": ["-        return (Arrays.binarySearch(getRegexpHeaderInfo().getMultLines(),", "-                aLineNo + 1) >= 0);", "+        return (Arrays.binarySearch(mMultiLines, aLineNo + 1) >= 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2927409892ad52f9ed7d729f2b4b6a3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "b718cf1eceb743add0b4bed27a6fa353033e01f8", "commitAfterChange": "52fc35e8b6f0b710409d20192661199a20ece339", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void configure(Configuration aConfiguration)             throws CheckstyleException", "signatureAfterChange": "     public void configure(Configuration aConfig)             throws CheckstyleException", "diff": ["-    public void configure(Configuration aConfiguration)", "+    public void configure(Configuration aConfig)", "-        super.configure(aConfiguration);", "+        super.configure(aConfig);", "-        final Configuration[] fileSetChecks = aConfiguration.getChildren();", "+        final Configuration[] fileSetChecks = aConfig.getChildren();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f299fd2275c0b81907d8df4440408f7c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["-    public void leaveToken(DetailAST aAST)", "+    public void leaveToken(DetailAST ast)", "-        if ((aAST.getType() == TokenTypes.CLASS_DEF)", "-            || (aAST.getType() == TokenTypes.ENUM_DEF)", "-            || (aAST.getType() == TokenTypes.ENUM_CONSTANT_DEF))", "+        if ((ast.getType() == TokenTypes.CLASS_DEF)", "+            || (ast.getType() == TokenTypes.ENUM_DEF)", "+            || (ast.getType() == TokenTypes.ENUM_CONSTANT_DEF))", "-            mCurrentFrame = mCurrentFrame.getParent();", "+            currentFrame = currentFrame.getParent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f29f31091867a9827eaa11024175fe6d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void leaveForDef(DetailAST aAST)", "signatureAfterChange": "     private void leaveForDef(DetailAST ast)", "diff": ["-    private void leaveForDef(DetailAST aAST)", "+    private void leaveForDef(DetailAST ast)", "-        final DetailAST forInitAST = aAST.findFirstToken(TokenTypes.FOR_INIT);", "+        final DetailAST forInitAST = ast.findFirstToken(TokenTypes.FOR_INIT);", "-                    mCurrentVariables.pop();", "+                    currentVariables.pop();", "-            mCurrentVariables.pop();", "+            currentVariables.pop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2beb0a81c7ca74562add0f7a9e11982", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/AbstractParenPadCheck.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected void processLeft(DetailAST ast)", "signatureAfterChange": "     protected void processLeft(DetailAST ast)", "diff": ["-                log(ast.getLineNo(), after, WS_FOLLOWED, \"(\");", "+                log(ast.getLineNo(), after, WS_FOLLOWED, OPEN_PARENTHESIS);", "-                     && line.charAt(after) != ')') {", "-                log(ast.getLineNo(), after, WS_NOT_FOLLOWED, \"(\");", "+                     && line.charAt(after) != CLOSE_PARENTHESIS) {", "+                log(ast.getLineNo(), after, WS_NOT_FOLLOWED, OPEN_PARENTHESIS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2e3c2bc506d80ce7268aedfcb1b4903", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private int checkPackageHtml(String[] aFiles)", "signatureAfterChange": "     private int checkPackageHtml(String[] aFiles)", "diff": ["-                    final LineText error =", "-                        new LineText(0, \"missing package documentation file.\");", "-                    fireErrors(docFile, new LineText[]{error});", "+                    final LocalizedMessage error =", "+                        new LocalizedMessage(0, \"javadoc.packageHtml\", null);", "+                    fireErrors(docFile, new LocalizedMessage[]{error});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3163789491cfd075050e4204e19db8a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public Pattern getPattern()", "signatureAfterChange": "     public Pattern getPattern()", "diff": ["-        final int options = (mIgnoreCase) ? mCompileFlags", "-                | Pattern.CASE_INSENSITIVE : mCompileFlags;", "-        return Utils.getPattern(mFormat, options);", "+        final int options = (ignoreCase) ? compileFlags", "+                | Pattern.CASE_INSENSITIVE : compileFlags;", "+        return Utils.getPattern(format, options);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f35d8da372342fd172595a49e33850e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "c922d93b2fbb2c254c2d5236bb449193fb7d5747", "commitAfterChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected IndentLevel getChildrenExpectedLevel()", "signatureAfterChange": "     protected IndentLevel getChildrenExpectedLevel()", "diff": ["-            if (startsLine(getLCurly())) {", "+            if (isOnStartOfLine(getLCurly())) {", "-            else if (startsLine(getRCurly())) {", "+            else if (isOnStartOfLine(getRCurly())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f397851703a5d3dfaf625b20751ee299", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ParameterAssignmentCheck.java", "commitBeforeChange": "2c41aaf844d3206775c0a8c9e78aabf3a6d85a36", "commitAfterChange": "5fa34fa1b2f206efb0003b9b65dedba8d214052a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void checkIdent(DetailAST ast)", "signatureAfterChange": "     private void checkIdent(DetailAST ast)", "diff": ["-        if (parameterNames != null && !parameterNames.isEmpty()) {", "+        if (!parameterNames.isEmpty()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3a35508f1b3f07db668abf1e5b6262f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "7f92af2b87261b54a684b63fde75136d1049b59f", "commitAfterChange": "0cc473e04f76ecbb551349fb81a87300d23945b7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "      @Override     public void finishTree(DetailAST aRootAST)", "diff": ["-                    count, mMethodMax);", "+                    count, mFileMax);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3c2b1263fc708b257316bb6fb653400", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "dc92fd1b89e33067adc5b2bf51df76b8d488b0bf", "commitAfterChange": "4018efa9fefa66e599369ace1cb189b02ae64fa7", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 101, "signatureBeforeChange": "     private static CatchBlockOption getCatchBlockOptionProperty(         Properties aProps,         String aName,         CatchBlockOption aDefault,         PrintStream aLog)", "signatureAfterChange": "     private static BlockOption getBlockOptionProperty(Properties aProps,                                                       String aName,                                                       BlockOption aDefault,                                                       PrintStream aLog)", "diff": ["-    private static CatchBlockOption getCatchBlockOptionProperty(", "-        Properties aProps,", "-        String aName,", "-        CatchBlockOption aDefault,", "-        PrintStream aLog)", "+    private static BlockOption getBlockOptionProperty(Properties aProps,", "+                                                      String aName,", "+                                                      BlockOption aDefault,", "+                                                      PrintStream aLog)", "-        CatchBlockOption retVal = aDefault;", "+        BlockOption retVal = aDefault;", "-            retVal = CatchBlockOption.decode(strRep);", "+            retVal = BlockOption.decode(strRep);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3f431426f1956f3bacddb96dc030d0a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void doVisitToken(FullIdent aIdent, boolean aIsStatic,             boolean aPrevious)", "signatureAfterChange": "     private void doVisitToken(FullIdent ident, boolean isStatic,             boolean previous)", "diff": ["-    private void doVisitToken(FullIdent aIdent, boolean aIsStatic,", "-            boolean aPrevious)", "+    private void doVisitToken(FullIdent ident, boolean isStatic,", "+            boolean previous)", "-        if (aIdent != null) {", "-            final String name = aIdent.getText();", "+        if (ident != null) {", "+            final String name = ident.getText();", "-            final int line = aIdent.getLineNo();", "+            final int line = ident.getLineNo();", "-            if (groupIdx > mLastGroup) {", "-                if (!mBeforeFirstImport && mSeparated) {", "+            if (groupIdx > lastGroup) {", "+                if (!beforeFirstImport && separated) {", "-                    if ((line - mLastImportLine) < 2) {", "+                    if ((line - lastImportLine) < 2) {", "-            else if (groupIdx == mLastGroup) {", "-                doVisitTokenInSameGroup(aIsStatic, aPrevious, name, line);", "+            else if (groupIdx == lastGroup) {", "+                doVisitTokenInSameGroup(isStatic, previous, name, line);", "-            mLastGroup = groupIdx;", "-            mLastImport = name;", "+            lastGroup = groupIdx;", "+            lastImport = name;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f41eba60f05ed5a20482f82583681520", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public final void setAllowNoEmptyLineBetweenFields(boolean aAllow)", "signatureAfterChange": "     public final void setAllowNoEmptyLineBetweenFields(boolean allow)", "diff": ["-    public final void setAllowNoEmptyLineBetweenFields(boolean aAllow)", "+    public final void setAllowNoEmptyLineBetweenFields(boolean allow)", "-        mAllowNoEmptyLineBetweenFields = aAllow;", "+        allowNoEmptyLineBetweenFields = allow;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4253271eb2a21d4e87809e53e97eb77", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "b69e47845e1903966ddf39efdf49e103ff5a5248", "commitAfterChange": "b59542ba03c159d88187de39e55a7c164735a220", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private boolean haastrailComment(DetailAST ast)", "signatureAfterChange": "     private boolean hasTrailComment(DetailAST ast)", "diff": ["-    private boolean haastrailComment(DetailAST ast)", "+    private boolean hasTrailComment(DetailAST ast)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4255acb63a41bbfb4d8b154e5b34463", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void addNextSibling(DetailAST aAST)", "signatureAfterChange": "     public void addNextSibling(DetailAST ast)", "diff": ["-    public void addNextSibling(DetailAST aAST)", "+    public void addNextSibling(DetailAST ast)", "-        if (aAST != null) {", "-            aAST.setParent(mParent);", "+        if (ast != null) {", "+            ast.setParent(parent);", "-                aAST.setNextSibling(nextSibling);", "-                nextSibling.setPreviousSibling(aAST);", "+                ast.setNextSibling(nextSibling);", "+                nextSibling.setPreviousSibling(ast);", "-            aAST.setPreviousSibling(this);", "-            this.setNextSibling(aAST);", "+            ast.setPreviousSibling(this);", "+            this.setNextSibling(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f43f37798fd34216ff50898c8a048165", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Utils.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static RE createRE(String aPattern)         throws ConversionException", "signatureAfterChange": "     public static Pattern createPattern(String aPattern)         throws ConversionException", "diff": ["-    public static RE createRE(String aPattern)", "+    public static Pattern createPattern(String aPattern)", "-        RE retVal = null;", "+        Pattern retVal = null;", "-            retVal = getRE(aPattern);", "+            retVal = getPattern(aPattern);", "-        catch (RESyntaxException e) {", "+        catch (PatternSyntaxException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f473cf4534f39d663ee13e1ad7510ed6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public boolean getForceStrictCondition()", "signatureAfterChange": "     public boolean getForceStrictCondition()", "diff": ["-        return mForceStrictCondition;", "+        return forceStrictCondition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f47d3ee12a5be4b08b8a37aa6d05e7cd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setCheckLastCaseGroup(boolean aValue)", "signatureAfterChange": "     public void setCheckLastCaseGroup(boolean value)", "diff": ["-    public void setCheckLastCaseGroup(boolean aValue)", "+    public void setCheckLastCaseGroup(boolean value)", "-        mCheckLastGroup = aValue;", "+        checkLastGroup = value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4a67cea27396032e20f47ae03ab3e02", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTag.java", "commitBeforeChange": "443e534a3c98c0b30f24647da724fe918f17a006", "commitAfterChange": "66d73fe6189267fee3423e2e8d7fc2d68599a43f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public String getArg1()", "signatureAfterChange": "     public String getFirstArg()", "diff": ["-    public String getArg1() {", "-        return arg1;", "+    public String getFirstArg() {", "+        return firstArg;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4c78e35ee316e0358962aab27a4166d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "3f735c43e4b0b17aa6a63ce18c9c8564c84568a3", "commitAfterChange": "881f9b5079ed22cc6d39b9c27e581f1d1f1a7702", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        final boolean isLastGroup =", "-                nextGroup == null", "-                 || nextGroup.getType() != TokenTypes.CASE_GROUP;", "+        final boolean isLastGroup = nextGroup.getType() != TokenTypes.CASE_GROUP;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4cc7cbb1abd6a94c2bdc1d29c51532e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void leaveClassDef()", "signatureAfterChange": "     private void leaveClassDef()", "diff": ["-        mChecking = mCheckingStack.pop();", "+        checking = checkingStack.pop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4d85e5c6447855c7b9d28376783c15b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyForInitializerPadCheck.java", "commitBeforeChange": "d2af4accdde3eac0a2103353f490e97bf62f61d2", "commitAfterChange": "d4b933799af120cf4a8490db98f396b6348430e9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-                final AbstractOption abstractOption = getAbstractOption();", "-                if ((PadOption.NOSPACE == abstractOption)", "+                final PadOption option = getAbstractOption();", "+                if ((PadOption.NOSPACE == option)", "-                else if ((PadOption.SPACE == abstractOption)", "+                else if ((PadOption.SPACE == option)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f505c069f96fdddd0f232cb603f879b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "65989e76a40bf085059ee2bf9c695c6b45a771fb", "commitAfterChange": "fca8c918043974fcf6cc59e5d4161ada0b7c4c76", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Configuration()         throws IllegalStateException", "signatureAfterChange": "     public Configuration()         throws IllegalStateException", "diff": ["+            setTodoPat(TODO_PATTERN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f51f5fc070bacd843d78c3180f7a8c76", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java", "commitBeforeChange": "205cbab8af785b1cddb9c4123ff3fa8b63dcbe1c", "commitAfterChange": "4e1f8ef98e9e43d6101a00bdecd040377472f852", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private List getThrows(DetailAST aAST)", "signatureAfterChange": "     private List getThrows(DetailAST aAST)", "diff": ["-                    final FullIdent fi = FullIdent.createFullIdent(child);", "-                    retVal.add(fi);", "+                    final ExceptionInfo ei = ", "+                        new ExceptionInfo(FullIdent.createFullIdent(child));", "+                    retVal.add(ei);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f54adabc14c262ceba2ab91b025a9bca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractOptionCheck.java", "commitBeforeChange": "d2af4accdde3eac0a2103353f490e97bf62f61d2", "commitAfterChange": "d4b933799af120cf4a8490db98f396b6348430e9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public AbstractOption getAbstractOption()", "signatureAfterChange": "     public T getAbstractOption()", "diff": ["-    public AbstractOption getAbstractOption()", "+    public T getAbstractOption()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f57118df8e1c5e065e29930c10fd363d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     protected void processFiltered(File aFile, List<String> aLines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-    protected void processFiltered(File aFile, List<String> aLines)", "+    protected void processFiltered(File file, List<String> lines)", "-        if (aLines.size() > mMaxFileLength) {", "-            log(1, \"maxLen.file\", aLines.size(), mMaxFileLength);", "+        if (lines.size() > maxFileLength) {", "+            log(1, \"maxLen.file\", lines.size(), maxFileLength);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5832b9e908d74f02895fcd212720194", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "880ae00b7b8c90cf4ae0b66685f59b56adaf2aff", "commitAfterChange": "a66d414ae6254d11f5c6021cc804a56d250a3595", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private boolean isNotRelevantSituation(DetailAST ast, int currentType)", "signatureAfterChange": "     private boolean isNotRelevantSituation(DetailAST ast, int currentType)", "diff": ["-                || allowEmptyTypes && isEmptyType(ast, parentType);", "+                || allowEmptyTypes && isEmptyType(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f593d172c220d2026f072fde90852bc8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SeverityMatchFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public final void setAcceptOnMatch(boolean aAcceptOnMatch)", "signatureAfterChange": "     public final void setAcceptOnMatch(boolean acceptOnMatch)", "diff": ["-    public final void setAcceptOnMatch(boolean aAcceptOnMatch)", "+    public final void setAcceptOnMatch(boolean acceptOnMatch)", "-        mAcceptOnMatch = aAcceptOnMatch;", "+        this.acceptOnMatch = acceptOnMatch;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5d545150ceaf943e73acb68a8bb9a75", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/CheckUtils.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static FullIdent createFullType(DetailAST aTypeAST)", "signatureAfterChange": "     public static FullIdent createFullType(DetailAST typeAST)", "diff": ["-    public static FullIdent createFullType(DetailAST aTypeAST)", "+    public static FullIdent createFullType(DetailAST typeAST)", "-            aTypeAST.findFirstToken(TokenTypes.ARRAY_DECLARATOR);", "+            typeAST.findFirstToken(TokenTypes.ARRAY_DECLARATOR);", "-        return createFullTypeNoArrays(arrayDeclAST == null ? aTypeAST", "+        return createFullTypeNoArrays(arrayDeclAST == null ? typeAST"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5d63b77c6f8df1c2e870f7a94990967", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/DetectorOptions.java", "commitBeforeChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "commitAfterChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public int getMinimum()", "signatureAfterChange": "     public int getMinimum()", "diff": ["-        return mMinimum;", "+        return minimum;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5e786b4a4f1fc85110e4707401b712c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void enterBlock()", "signatureAfterChange": "     private void enterBlock()", "diff": ["-        mVariableStack.push(mCurrentVariables);", "-        mCurrentVariables = FastStack.newInstance();", "+        variableStack.push(currentVariables);", "+        currentVariables = FastStack.newInstance();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5efef21f58d768a0f373d77c53dae5e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "59222296258fecc02db44eeae1cb65b44b68c267", "commitAfterChange": "91875d1901eaf53e869e6179ceb6e45a3ab14e77", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "         public FileSectionAction()", "signatureAfterChange": "         public FileSelectionAction()", "diff": ["-        public FileSectionAction()", "+        public FileSelectionAction()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f610eb0afc2d76040bbba0ecf2cd1741", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "         void addName(String aNameToAdd)", "signatureAfterChange": "         void addName(String nameToAdd)", "diff": ["-        void addName(String aNameToAdd)", "+        void addName(String nameToAdd)", "-            mVarNames.add(aNameToAdd);", "+            varNames.add(nameToAdd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f686fef21208f1d782f5f47d180b1c95", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private String getDisallowedAbbreviation(String aString)", "signatureAfterChange": "     private String getDisallowedAbbreviation(String string)", "diff": ["-    private String getDisallowedAbbreviation(String aString)", "+    private String getDisallowedAbbreviation(String string)", "-        for (int index = 0; index < aString.length(); index++) {", "-            final char symbol = aString.charAt(index);", "+        for (int index = 0; index < string.length(); index++) {", "+            final char symbol = string.charAt(index);", "-                    if (abbrLength > mAllowedAbbreviationLength) {", "-                        result = aString.substring(beginIndex, endIndex);", "-                        if (!mAllowedAbbreviations.contains(result)) {", "+                    if (abbrLength > allowedAbbreviationLength) {", "+                        result = string.substring(beginIndex, endIndex);", "+                        if (!allowedAbbreviations.contains(result)) {", "-            final int endIndex = aString.length();", "+            final int endIndex = string.length();", "-            if (abbrLength > 1 && abbrLength > mAllowedAbbreviationLength) {", "-                result = aString.substring(beginIndex, endIndex);", "-                if (mAllowedAbbreviations.contains(result)) {", "+            if (abbrLength > 1 && abbrLength > allowedAbbreviationLength) {", "+                result = string.substring(beginIndex, endIndex);", "+                if (allowedAbbreviations.contains(result)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6a13d4f4db3598cf396038651b9f998", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/ConfigurationLoaderTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      @Test     public void testLoadConfiguration_Deprecated() throws CheckstyleException", "signatureAfterChange": "      @Test     public void testLoadConfigurationDeprecated() throws CheckstyleException", "diff": ["-    public void testLoadConfiguration_Deprecated() throws CheckstyleException {", "+    public void testLoadConfigurationDeprecated() throws CheckstyleException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6c772288394410bd851182d941c6eb8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "2cf54ade2182e29c413f23e2235a896247d7a2ad", "commitAfterChange": "d282053d9ce02c13c779decfd079a8305086f752", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     @Test     public void testBadOverrideFromOtherJ5Compat() throws Exception", "signatureAfterChange": "     @Test     public void testBadOverrideFromOtherJ5Compatible() throws Exception", "diff": ["-    public void testBadOverrideFromOtherJ5Compat() throws Exception {", "+    public void testBadOverrideFromOtherJ5Compatible() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6d4f4a0efd435c215c1fc78c9f1b4b3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/filters/FilterSetTest.java", "commitBeforeChange": "7abbd6af2f63a9e5bfa067f3058b5a3e738971de", "commitAfterChange": "8d242382f8bb77488b6da23bdd0d2d61583703fc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public void testEmptyChain()", "signatureAfterChange": "          public void testEmptyChain()", "diff": ["-        assertTrue(\"0\", filter.accept(new Integer(0)));", "+        assertFalse(\"0\", filter.accept(new Integer(0)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f70209b400a598c8c6670f389c088f43", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "a15fcb34fb0670b0603216dfca3c3c9e12d09727", "commitAfterChange": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void doVisitTokenInSameGroup(boolean isStatic,             boolean previous, String name, int line)", "signatureAfterChange": "     private void doVisitTokenInSameGroup(boolean isStatic,             boolean previous, String name, int line)", "diff": ["-                log(line, \"import.ordering\", name);", "+                log(line, MSG_ORDERING, name);", "-                log(line, \"import.ordering\", name);", "+                log(line, MSG_ORDERING, name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f70ac8e6245ece90ce3c496535326086", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "e71b877a424e1e6e247a2ef6825c742a94afd68f", "commitAfterChange": "6f4247181beca3530b5c2dc762d9c5c6a018a06c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private Configuration createConfiguration()", "signatureAfterChange": "     private GlobalProperties createGlobalProperties()", "diff": ["-    private Configuration createConfiguration()", "+    private GlobalProperties createGlobalProperties()", "-        final Configuration retVal;", "+        final GlobalProperties retVal;", "-            retVal = new Configuration(props, System.out);", "+            retVal = new GlobalProperties(props, System.out);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f71bfc2ce62a1de953bcb6e1a8742edd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/ParseTreeModel.java", "commitBeforeChange": "44e3d33fc25d44157486288d5c77de75156984cb", "commitAfterChange": "ecef6a81a0f803eec81e2e0be25cfda908a92cb4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private static DetailAST createArtificialTreeRoot()", "signatureAfterChange": "      private static DetailAST createArtificialTreeRoot()", "diff": ["-        factory.setASTNodeType(DetailAST.class.getName());", "+        factory.setASTNodeClass(DetailAST.class.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f73ab123109382208ab675ef9624f8d0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void setColumnNo(int aColumnNo)", "signatureAfterChange": "     public void setColumnNo(int columnNo)", "diff": ["-    public void setColumnNo(int aColumnNo)", "+    public void setColumnNo(int columnNo)", "-        mColumnNo = aColumnNo;", "+        this.columnNo = columnNo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f75101165ca4b3338dbc5fbb3d6bb598", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/resources/com/puppycrawl/tools/checkstyle/design/InputOneTopLevelClass.java", "commitBeforeChange": "4c384214a90272fe239b76e35ec5bcb87ef4b080", "commitAfterChange": "f0dc53ad00608e8a1dc95120d06970c0b12a2ecd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public InputDeclarationOrder()", "signatureAfterChange": "     public InputOneTopLevelClass()", "diff": ["-    public InputDeclarationOrder()", "+    public InputOneTopLevelClass()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f77a0ecf53f83e094479d341e5bb2a79", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/LocalizedMessageTest.java", "commitBeforeChange": "04ad1d6947eae529e50d9c8e7738cd472321f253", "commitAfterChange": "dcec4c27ea0c224846e8cf99441dd74f1216987e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testMisc()", "signatureAfterChange": "      public void testMisc()", "diff": ["-        lm = new LocalizedMessage(0, Defn.CHECKSTYLE_BUNDLE,", "+        lm = new LocalizedMessage(0, CHECKSTYLE_CHECKS_BUNDLE,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f78086c6e1acfaaa1b262d86aed0febb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheck.java", "commitBeforeChange": "80ab48f859c1f16835dbd41afe42414b41969e2f", "commitAfterChange": "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "signatureAfterChange": "      @Override     protected void processFiltered(File file, List<String> lines)", "diff": ["-        if (lines.size() > maxFileLength) {", "-            log(1, MSG_KEY, lines.size(), maxFileLength);", "+        if (lines.size() > max) {", "+            log(1, MSG_KEY, lines.size(), max);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7975f23d0f5a9cef4fcce80a61c05bb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java", "commitBeforeChange": "546f336e25b26d072f96e2cda139b885858ed5b0", "commitAfterChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "         @Override         public Component getTableCellEditorComponent(JTable table,                 Object value,                 boolean isSelected,                 int r, int c)", "signatureAfterChange": "         @Override         public Component getTableCellEditorComponent(JTable table,                 Object value,                 boolean isSelected,                 int row, int column)", "diff": ["-                int r, int c) {", "+                int row, int column) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7b05f549504caa9dd63c753bbde64ed", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected void setupChild(Configuration aChildConf)         throws CheckstyleException", "signatureAfterChange": "     protected void setupChild(Configuration childConf)         throws CheckstyleException", "diff": ["-    protected void setupChild(Configuration aChildConf)", "+    protected void setupChild(Configuration childConf)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7bb0f013f365ccd274340747b7cc6a8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "3c7c3cbe88a2bec0962702305db4f2b05117501c", "commitAfterChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public LineColumn lineColumn(int pos)", "signatureAfterChange": "     public LineColumn lineColumn(int pos)", "diff": ["-        final int[] lineBreaks = lineBreaks();", "+        final int[] lineBreaks = findLineBreaks();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7c69378f897b8e4845395f0a5b526b0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SeverityMatchFilter.java", "commitBeforeChange": "50e9439fa2b1c51fe5a4eb3502f53089592fba3c", "commitAfterChange": "b0891b556788d4c9c8cdf6982648001427d92238", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public boolean accept(AuditEvent event)", "signatureAfterChange": "      @Override     public boolean accept(AuditEvent event)", "diff": ["-        final boolean result = severityLevel == event.getSeverityLevel();", "+        final boolean result = severity == event.getSeverityLevel();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7d7bd613c8f96d71c16eb4b5a9565fc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void finishProcessing()", "signatureAfterChange": "      @Override     public void finishProcessing()", "diff": ["-            arrangePropertyFiles(mPropertyFiles, mBasenameSeparator);", "+            arrangePropertyFiles(propertyFiles, basenameSeparator);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7e195379ac875e2edd610ef767a7922", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionFilter.java", "commitBeforeChange": "beb09b076d206d71c9f01fd59f7a6b86369525d2", "commitAfterChange": "e9d1dff32e5233f1cc24c2e4a96c8ce2b9dd5364", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public boolean equals (Object aObject)", "signatureAfterChange": "     public boolean equals (Object aObject)", "diff": ["-            return this.mFilterChain.equals(other.mFilterChain);", "+            return this.mFilters.equals(other.mFilters);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7e8b89ba2e95fb3a594ddc5952b39de", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setBasicOffset(int aBasicOffset)", "signatureAfterChange": "     public void setBasicOffset(int basicOffset)", "diff": ["-    public void setBasicOffset(int aBasicOffset)", "+    public void setBasicOffset(int basicOffset)", "-        mBasicOffset = aBasicOffset;", "+        this.basicOffset = basicOffset;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7f268aae8e4343f3260d18f16574d2f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean isInlineDescription(DetailNode aDescription)", "signatureAfterChange": "     private boolean isInlineDescription(DetailNode description)", "diff": ["-    private boolean isInlineDescription(DetailNode aDescription)", "+    private boolean isInlineDescription(DetailNode description)", "-        DetailNode inlineTag = aDescription.getParent();", "+        DetailNode inlineTag = description.getParent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8161b03ba62d3eeb8dc7cad2d9649f0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "782da01103fc7ec8e69a3da7a5ef800dac866a8b", "commitAfterChange": "68959eeefff4d4a5b295cefbec242c643d523c6b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void checkStyleType(final DetailAST annotation)", "signatureAfterChange": "     private void checkStyleType(final DetailAST annotation)", "diff": ["-", "-            case COMPACT_NO_ARRAY: {", "+            case COMPACT_NO_ARRAY:", "-            }", "-", "-            case COMPACT: {", "+            case COMPACT:", "-            }", "-", "-            case EXPANDED: {", "+            case EXPANDED:", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f816a67a95342cb180e31348c8cd96e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "         public ImportDetails(String aImportFullPath,                 int aLineNumber, String aImportGroup, boolean aStatic)", "signatureAfterChange": "         public ImportDetails(String importFullPath,                 int lineNumber, String importGroup, boolean isStatic)", "diff": ["-        public ImportDetails(String aImportFullPath,", "-                int aLineNumber, String aImportGroup, boolean aStatic)", "+        public ImportDetails(String importFullPath,", "+                int lineNumber, String importGroup, boolean isStatic)", "-            setImportFullPath(aImportFullPath);", "-            setLineNumber(aLineNumber);", "-            setImportGroup(aImportGroup);", "-            setStatic(aStatic);", "+            setImportFullPath(importFullPath);", "+            setLineNumber(lineNumber);", "+            setImportGroup(importGroup);", "+            setStatic(isStatic);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8355bd805fe6083a9d90a0adac1e42a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "0382b7907b54e95408344863915a847dabc37f12", "commitAfterChange": "eb5896a4a1d66552f5100046413f15d62b485b62", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     ExpressionHandler createMethodCallHandler(IndentationCheck indentCheck,         DetailAST ast, ExpressionHandler parent)", "signatureAfterChange": "     AbstractExpressionHandler createMethodCallHandler(IndentationCheck indentCheck,         DetailAST ast, AbstractExpressionHandler parent)", "diff": ["-    ExpressionHandler createMethodCallHandler(IndentationCheck indentCheck,", "-        DetailAST ast, ExpressionHandler parent) {", "-        ExpressionHandler theParent = parent;", "+    AbstractExpressionHandler createMethodCallHandler(IndentationCheck indentCheck,", "+        DetailAST ast, AbstractExpressionHandler parent) {", "+        AbstractExpressionHandler theParent = parent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8c1164e224ef2d9c9a041d35d6bc5d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java", "commitBeforeChange": "e8a4ab77aba5f63527b5b64973ab3117e9807908", "commitAfterChange": "5cd16d56a2ef2a3daaf1674666a9a5e6f2ddfe78", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                if (state.scopeState > STATE_CTOR_DEF) {", "+                if (state.currentScopeState > STATE_CTOR_DEF) {", "-                    state.scopeState = STATE_CTOR_DEF;", "+                    state.currentScopeState = STATE_CTOR_DEF;", "-                if (state.scopeState > STATE_METHOD_DEF) {", "+                if (state.currentScopeState > STATE_METHOD_DEF) {", "-                    state.scopeState = STATE_METHOD_DEF;", "+                    state.currentScopeState = STATE_METHOD_DEF;", "-                    if (state.scopeState > STATE_STATIC_VARIABLE_DEF) {", "+                    if (state.currentScopeState > STATE_STATIC_VARIABLE_DEF) {", "-                            || state.scopeState > STATE_INSTANCE_VARIABLE_DEF)", "+                            || state.currentScopeState > STATE_INSTANCE_VARIABLE_DEF)", "-                        state.scopeState = STATE_STATIC_VARIABLE_DEF;", "+                        state.currentScopeState = STATE_STATIC_VARIABLE_DEF;", "-                    if (state.scopeState > STATE_INSTANCE_VARIABLE_DEF) {", "+                    if (state.currentScopeState > STATE_INSTANCE_VARIABLE_DEF) {", "-                    else if (state.scopeState == STATE_STATIC_VARIABLE_DEF) {", "+                    else if (state.currentScopeState == STATE_STATIC_VARIABLE_DEF) {", "-                        state.scopeState = STATE_INSTANCE_VARIABLE_DEF;", "+                        state.currentScopeState = STATE_INSTANCE_VARIABLE_DEF;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8d9fb04a12c7b135f37371866ed40d8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     private void checkReturnTag(List<JavadocTag> tags, int lineNo,         boolean reportExpectedTags)", "signatureAfterChange": "     private void checkReturnTag(List<JavadocTag> tags, int lineNo,         boolean reportExpectedTags)", "diff": ["-                        \"javadoc.duplicateTag\",", "+                        MSG_DUPLICATE_TAG,", "-            log(lineNo, \"javadoc.return.expected\");", "+            log(lineNo, MSG_RETURN_EXPECTED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8e1b35cff584039a87fdaf33fd2620f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void checkHtml(final DetailAST aAST, final TextBlock aComment)", "signatureAfterChange": "     private void checkHtml(final DetailAST ast, final TextBlock comment)", "diff": ["-    private void checkHtml(final DetailAST aAST, final TextBlock aComment)", "+    private void checkHtml(final DetailAST ast, final TextBlock comment)", "-        final int lineno = aComment.getStartLineNo();", "+        final int lineno = comment.getStartLineNo();", "-        final String[] text = aComment.getText();", "+        final String[] text = comment.getText();", "-            CheckUtils.getTypeParameterNames(aAST);", "+            CheckUtils.getTypeParameterNames(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8eb70a6884c6d9bf93a62dbb44a3512", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "adce874628730a881c533bb04db2688d03a60fc6", "commitAfterChange": "33b703a724ddd2090f771cb9834c85e0ccb569e1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void testInvalidClassDefWithChecker()         throws Exception", "signatureAfterChange": "     public void testInvalidClassDefWithChecker()         throws Exception", "diff": ["-            \"92: class def child at indentation level 6 not at correct indentation, 8\",", "-            \"98: class def child at indentation level 10 not at correct indentation, 12\",", "-            \"103: class def child at indentation level 6 not at correct indentation, 8\",", "+            \"92: member def modifier at indentation level 6 not at correct indentation, 8\",", "+            \"93: member def type at indentation level 12 not at correct indentation, 8\",", "+            \"98: member def type at indentation level 10 not at correct indentation, 8\",", "+            \"103: member def modifier at indentation level 6 not at correct indentation, 8\",", "-            \"124: class def child at indentation level 10 not at correct indentation, 12\",", "+            \"124: member def type at indentation level 10 not at correct indentation, 12\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8ee81b5483d041708797c7d1de2ecb2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "         public void addCount(int aCount)", "signatureAfterChange": "         public void addCount(int count)", "diff": ["-        public void addCount(int aCount)", "+        public void addCount(int count)", "-            mCount += aCount;", "+            this.count += count;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9154dec2ca12f6620bf3342bbd047c3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setSeparated(boolean aSeparated)", "signatureAfterChange": "     public void setSeparated(boolean separated)", "diff": ["-    public void setSeparated(boolean aSeparated)", "+    public void setSeparated(boolean separated)", "-        mSeparated = aSeparated;", "+        this.separated = separated;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f94252ccd15565b53c25c36f7a0d4572", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultConfiguration.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void addAttribute(String aName, String aValue)", "signatureAfterChange": "     public void addAttribute(String name, String value)", "diff": ["-    public void addAttribute(String aName, String aValue)", "+    public void addAttribute(String name, String value)", "-        final String current = mAttributeMap.put(aName, aValue);", "+        final String current = attributeMap.put(name, value);", "-            mAttributeMap.put(aName, aValue);", "+            attributeMap.put(name, value);", "-            mAttributeMap.put(aName, current + \",\" + aValue);", "+            attributeMap.put(name, current + \",\" + value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9950b2ba871df600dc673cf81b84d90", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java", "commitBeforeChange": "5dffb5a301b2605c730d1de3f312ba4a7f95355e", "commitAfterChange": "4d8d047f465f9eb101390da63ee62a735fbedba5", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testProcessWithParserTrowable() throws Exception", "signatureAfterChange": "      @Test     public void testProcessWithParserThrowable() throws Exception", "diff": ["-    public void testProcessWithParserTrowable() throws Exception {", "+    public void testProcessWithParserThrowable() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9951503f554694379f0ac24446b78f9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitJavadocToken(DetailNode aAst)", "signatureAfterChange": "      @Override     public void visitJavadocToken(DetailNode ast)", "diff": ["-    public void visitJavadocToken(DetailNode aAst)", "+    public void visitJavadocToken(DetailNode ast)", "-        if (aAst.getType() == JavadocTokenTypes.NEWLINE && isEmptyLine(aAst)) {", "-            checkEmptyLine(aAst);", "+        if (ast.getType() == JavadocTokenTypes.NEWLINE && isEmptyLine(ast)) {", "+            checkEmptyLine(ast);", "-        else if (aAst.getType() == JavadocTokenTypes.HTML_ELEMENT", "-                && JavadocUtils.getFirstChild(aAst).getType() == JavadocTokenTypes.P_TAG_OPEN)", "+        else if (ast.getType() == JavadocTokenTypes.HTML_ELEMENT", "+                && JavadocUtils.getFirstChild(ast).getType() == JavadocTokenTypes.P_TAG_OPEN)", "-            checkParagraphTag(aAst);", "+            checkParagraphTag(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9a671c50e464c6a9064592fca6fb375", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     private void checkComment(DetailAST ast, TextBlock comment)", "signatureAfterChange": "     private void checkComment(DetailAST ast, TextBlock comment)", "diff": ["-                log(jt.getLineNo(), \"javadoc.unusedTagGeneral\");", "+                log(jt.getLineNo(), MSG_UNUSED_TAG_GENERAL);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9a79509ee93af9812629f1797d50301", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "3bee3800f4c10f34f2bd0736cc09830a7f9eb6ab", "commitAfterChange": "2acda3b12797a818467773758f1029f7057a271c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void checkThrowsTags(List aTags, List aThrows)", "signatureAfterChange": "     private void checkThrowsTags(List aTags, List aThrows)", "diff": ["-                    if (found) {", "-                        ei.setFound();", "-                    }", "+//                     if (found) {", "+//                         ei.setFound();", "+//                     }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9bb69a7e1298e04b356329de13fe7c9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void setAllowMissingReturnTag(boolean aFlag)", "signatureAfterChange": "     public void setAllowMissingReturnTag(boolean flag)", "diff": ["-    public void setAllowMissingReturnTag(boolean aFlag)", "+    public void setAllowMissingReturnTag(boolean flag)", "-        mAllowMissingReturnTag = aFlag;", "+        allowMissingReturnTag = flag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9c3264cf44a2116db750967f660c6d2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ant/CheckstyleAntTask.java", "commitBeforeChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "commitAfterChange": "abfc952fd0ed88f6246b1d969a8a980ea63f0bd6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void setProperties(File props)", "signatureAfterChange": "     public void setProperties(File props)", "diff": ["-        propertiesFile = props;", "+        properties = props;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9cd01b090138df2c170448fea6ce5d0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean isEmptyMethodBlock(DetailAST aAST, int aParentType)", "signatureAfterChange": "     private boolean isEmptyMethodBlock(DetailAST ast, int parentType)", "diff": ["-    private boolean isEmptyMethodBlock(DetailAST aAST, int aParentType)", "+    private boolean isEmptyMethodBlock(DetailAST ast, int parentType)", "-        return mAllowEmptyMethods", "-            && isEmptyBlock(aAST, aParentType, TokenTypes.METHOD_DEF);", "+        return allowEmptyMethods", "+            && isEmptyBlock(ast, parentType, TokenTypes.METHOD_DEF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9e829ae725a7d87f0b12da7870ad788", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "f747835b6b4bd894eed2ef17eb059a003fb4d988", "commitAfterChange": "6ebcf2733b6c635d5f044aa35caf2a610c7723ff", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(final DetailAST methodCall)", "signatureAfterChange": "      @Override     public void visitToken(final DetailAST methodCall)", "diff": ["-            && containsOneArg(expr) && containsAllSafeTokens(expr)) {", "+            && containsOneArgument(methodCall) && containsAllSafeTokens(expr)) {", "-            && containsOneArg(expr) && containsAllSafeTokens(expr)) {", "+            && containsOneArgument(methodCall) && containsAllSafeTokens(expr)) {", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9f2bd9d922d24fe5f88a1463ad5c36e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "commitAfterChange": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setPackageAllowed(boolean aPackageAllowed)", "signatureAfterChange": "     public void setPackageAllowed(boolean packageAllowed)", "diff": ["-    public void setPackageAllowed(boolean aPackageAllowed)", "+    public void setPackageAllowed(boolean packageAllowed)", "-        mPackageAllowed = aPackageAllowed;", "+        this.packageAllowed = packageAllowed;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa0b0e445253017614e7a76907fdc105", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "         public void visitLiteralThrows(DetailAST aThrows)", "signatureAfterChange": "         public void visitLiteralThrows(DetailAST literalThrows)", "diff": ["-        public void visitLiteralThrows(DetailAST aThrows)", "+        public void visitLiteralThrows(DetailAST literalThrows)", "-            for (DetailAST childAST = aThrows.getFirstChild();", "+            for (DetailAST childAST = literalThrows.getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa0de89c3cd7df7ce2f2489ee94ac271", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setAllowUnknownTags(boolean aFlag)", "signatureAfterChange": "     public void setAllowUnknownTags(boolean flag)", "diff": ["-    public void setAllowUnknownTags(boolean aFlag)", "+    public void setAllowUnknownTags(boolean flag)", "-        mAllowUnknownTags = aFlag;", "+        allowUnknownTags = flag;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa20c6a0d73ce804a48421e11527abb6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setVersionFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setVersionFormat(String format)         throws ConversionException", "diff": ["-    public void setVersionFormat(String aFormat)", "+    public void setVersionFormat(String format)", "-            mVersionFormat = aFormat;", "-            mVersionFormatPattern = Utils.getPattern(aFormat);", "+            versionFormat = format;", "+            versionFormatPattern = Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa275c52d63ec6c7c47a120be105ab75", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void endElement(final String aNamespaceURI, final String aLocalName,         final String aQName)", "signatureAfterChange": "      @Override     public void endElement(final String namespaceURI, final String localName,         final String qName)", "diff": ["-    public void endElement(final String aNamespaceURI, final String aLocalName,", "-        final String aQName)", "+    public void endElement(final String namespaceURI, final String localName,", "+        final String qName)", "-        if (\"subpackage\".equals(aQName)) {", "-            assert mStack.size() > 1;", "-            mStack.pop();", "+        if (\"subpackage\".equals(qName)) {", "+            assert stack.size() > 1;", "+            stack.pop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa5b33f80fd35719d2e5de11f4b235f6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractTypeParameterNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public final void init()", "signatureAfterChange": "      @Override     public final void init()", "diff": ["-        this.mLocation = getLocation();", "+        this.location = getLocation();", "-        assert (this.mLocation == TokenTypes.CLASS_DEF)", "-            || (this.mLocation == TokenTypes.METHOD_DEF)", "-            || (this.mLocation == TokenTypes.INTERFACE_DEF);", "+        assert (this.location == TokenTypes.CLASS_DEF)", "+            || (this.location == TokenTypes.METHOD_DEF)", "+            || (this.location == TokenTypes.INTERFACE_DEF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa66c1f00d712d79b69dd8cca7c96d24", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private void checkSingleLine(int aLineNum, int aColNum,         IndentLevel aIndentLevel, boolean aMustMatch)", "signatureAfterChange": "      private void checkSingleLine(int lineNum, int colNum,         IndentLevel indentLevel, boolean mustMatch)", "diff": ["-    private void checkSingleLine(int aLineNum, int aColNum,", "-        IndentLevel aIndentLevel, boolean aMustMatch)", "+    private void checkSingleLine(int lineNum, int colNum,", "+        IndentLevel indentLevel, boolean mustMatch)", "-        final String line = mIndentCheck.getLine(aLineNum - 1);", "+        final String line = indentCheck.getLine(lineNum - 1);", "-        if (aMustMatch ? !aIndentLevel.accept(start)", "-            : (aColNum == start) && aIndentLevel.gt(start))", "+        if (mustMatch ? !indentLevel.accept(start)", "+            : (colNum == start) && indentLevel.gt(start))", "-            logChildError(aLineNum, start, aIndentLevel);", "+            logChildError(lineNum, start, indentLevel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa881679e80e5ab333a328f502ebc2d1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "contrib/examples/checks/com/puppycrawl/tools/checkstyle/checks/xpath/DocumentNavigator.java", "commitBeforeChange": "bd6eaf0dd8a8368a9488b3b77c7e62d8688871ca", "commitAfterChange": "4a0b798adbce23e37a9d2445079503cb8d624eed", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public String getNamespacePrefix(Object arg0)", "signatureAfterChange": "     public String getNamespacePrefix(Object aObject)", "diff": ["-    public String getNamespacePrefix(Object arg0)", "+    public String getNamespacePrefix(Object aObject)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faa0d7ab32de6b9465c33c9031fb3247", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "e7547bb7ddccec6737cea118a41864fc349ea1d2", "commitAfterChange": "d220d7c3cc74490c7f2923f2ea85d00133afe98c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     @Test     public void testBadAnnonOverrideJ5Compat() throws Exception", "signatureAfterChange": "     @Test     public void testBadAnnotationOverrideJ5Compat() throws Exception", "diff": ["-    public void testBadAnnonOverrideJ5Compat() throws Exception {", "+    public void testBadAnnotationOverrideJ5Compat() throws Exception {", "-        verify(checkConfig, getPath(\"annotation\" + File.separator + \"BadAnnonOverride.java\"), expected);", "+        verify(checkConfig, getPath(\"annotation\" + File.separator + \"BadAnnotationOverride.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faa8aa75d619c093810b0281fd06f706", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java", "commitBeforeChange": "8f12d2b92568c8fca42dfbd26f3d1f0b17100a7b", "commitAfterChange": "050d1e55a819d639fe9116ec3ebd99902530c3f9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testSetupChild() throws CheckstyleException", "signatureAfterChange": "      @Test     public void testSetupChildFromBaseClass() throws CheckstyleException", "diff": ["-    public void testSetupChild() throws CheckstyleException {", "+    public void testSetupChildFromBaseClass() throws CheckstyleException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fae2568b1f3fb4cab635790620eb3c97", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public LineColumn lineColumn(int aPos)", "signatureAfterChange": "     public LineColumn lineColumn(int pos)", "diff": ["-    public LineColumn lineColumn(int aPos)", "+    public LineColumn lineColumn(int pos)", "-        int lineNo = Arrays.binarySearch(lineBreaks, aPos);", "+        int lineNo = Arrays.binarySearch(lineBreaks, pos);", "-        final int columnNo = aPos - startOfLine;", "+        final int columnNo = pos - startOfLine;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb33336846a42d97f03e6df7802bb007", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentLevel.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-        if (mLevels.cardinality() == 1) {", "-            return String.valueOf(mLevels.nextSetBit(0));", "+        if (levels.cardinality() == 1) {", "+            return String.valueOf(levels.nextSetBit(0));", "-        for (int i = mLevels.nextSetBit(0); i >= 0;", "-            i = mLevels.nextSetBit(i + 1))", "+        for (int i = levels.nextSetBit(0); i >= 0;", "+            i = levels.nextSetBit(i + 1))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb4bc45a62833c7e7a48e92db9acf7c8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void checkEmptyLine(DetailNode aNewline)", "signatureAfterChange": "     private void checkEmptyLine(DetailNode newline)", "diff": ["-    private void checkEmptyLine(DetailNode aNewline)", "+    private void checkEmptyLine(DetailNode newline)", "-        final DetailNode nearestToken = getNearestNode(aNewline);", "-        if (!isLastEmptyLine(aNewline) && nearestToken != null", "+        final DetailNode nearestToken = getNearestNode(newline);", "+        if (!isLastEmptyLine(newline) && nearestToken != null", "-            log(aNewline.getLineNumber(), \"javadoc.paragraph.tag.after\");", "+            log(newline.getLineNumber(), \"javadoc.paragraph.tag.after\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb57db300f4ca566d0a53206059a3d94", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void checkCheckClosingParens(final DetailAST aAST)", "signatureAfterChange": "     private void checkCheckClosingParens(final DetailAST aAST)", "diff": ["-            this.log(aAST.getLineNo(), \"annotation.parens.missing\");", "+            this.log(aAST.getLineNo(), MSG_KEY_ANNOTATION_PARENS_MISSING);", "-            this.log(aAST.getLineNo(), \"annotation.parens.present\");", "+            this.log(aAST.getLineNo(), MSG_KEY_ANNOTATION_PARENS_PRESENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb75c995a9a1ebc5eb99d7513c175862", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "62133d954155f6ca9a1ace7a1d88898d654ab375", "commitAfterChange": "93390fbc8a6952bbb20571ac1b18a705814fc219", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static DetailAST parseFile(String aFileName)         throws IOException, ANTLRException", "signatureAfterChange": "     public static DetailAST parseFile(String aFileName)         throws IOException, ANTLRException", "diff": ["-        return Checker.parse(contents);", "+        return TreeWalker.parse(contents);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb9997f7e2c65e89c8643c637c7f79d2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenTextCheckTest.java", "commitBeforeChange": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c", "commitAfterChange": "7d5db23ad528c95e0fbdfcd1293424c6240db07b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testCustomMessage()         throws Exception", "signatureAfterChange": "      @Test     public void testCustomMessage()         throws Exception", "diff": ["-            \"24:28: \" + MessageFormat.format(customMessage, \"a href\"),", "+            \"24:28: \" + customMessage,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbb33d8bee9ef303b84caef9cf088e61", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/AllChecksTest.java", "commitBeforeChange": "47b8d42145f9a8569026f2ad43224e5f879cde8d", "commitAfterChange": "2085758156c3ac70621a95df46a2c89432bce56e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static Set<String> getCheckStyleChecksReferencedInConfig(String configFilePath)         throws ParserConfigurationException, IOException, org.xml.sax.SAXException", "signatureAfterChange": "     private static Set<String> getCheckStyleChecksReferencedInConfig(String configFilePath)         throws ParserConfigurationException, IOException, SAXException", "diff": ["-        throws ParserConfigurationException, IOException, org.xml.sax.SAXException {", "+        throws ParserConfigurationException, IOException, SAXException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbf316fb29d18bbf598367746f7b3244", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java", "commitBeforeChange": "02aaa1b7f653e25c34ef7f186fa1d940079384e8", "commitAfterChange": "52ac2776d7f128ff812b73b54dcc12210661f98b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      protected void verify(Checker aC,                           File[] aProcessedFiles,                           String aMessageFileName,                           String[] aExpected,                           Integer[] aWarnsExpected)         throws Exception", "signatureAfterChange": "      protected void verify(Checker aC,                           File[] aProcessedFiles,                           String aMessageFileName,                           String[] aExpected,                           Integer[] aWarnsExpected)         throws Exception", "diff": ["-        mStream.flush();", "+        stream.flush();", "-            new ByteArrayInputStream(mBAOS.toByteArray());", "+            new ByteArrayInputStream(BAOS.toByteArray());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc0482cb016bcbc4ec759eb975244438", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea", "commitAfterChange": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean hasLineBreakAfter(DetailAST aLeftCurly)", "signatureAfterChange": "     private boolean hasLineBreakAfter(DetailAST leftCurly)", "diff": ["-    private boolean hasLineBreakAfter(DetailAST aLeftCurly)", "+    private boolean hasLineBreakAfter(DetailAST leftCurly)", "-        if (aLeftCurly.getType() == TokenTypes.SLIST) {", "-            nextToken = aLeftCurly.getFirstChild();", "+        if (leftCurly.getType() == TokenTypes.SLIST) {", "+            nextToken = leftCurly.getFirstChild();", "-            if (aLeftCurly.getParent().getParent().getType() == TokenTypes.ENUM_DEF)", "+            if (leftCurly.getParent().getParent().getType() == TokenTypes.ENUM_DEF)", "-                if (!mIgnoreEnums) {", "-                    nextToken = aLeftCurly.getNextSibling();", "+                if (!ignoreEnums) {", "+                    nextToken = leftCurly.getNextSibling();", "-            if (aLeftCurly.getLineNo() == nextToken.getLineNo()) {", "+            if (leftCurly.getLineNo() == nextToken.getLineNo()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc4155a0bd768d2ad2d1f5ec5b33cf09", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java", "commitBeforeChange": "3852e12bece8c5770ed1ddd7c002ef9b4e5d175b", "commitAfterChange": "d86329ca8fe253b7b830b77595944d99a7ed4cfd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static boolean whitespaceBetween(int fromIndex, int toIndex, String aLine)", "signatureAfterChange": "     private static boolean whitespaceBetween(         int aFromIndex, int aToIndex, String aLine)", "diff": ["-    private static boolean whitespaceBetween(int fromIndex, int toIndex, String aLine)", "+    private static boolean whitespaceBetween(", "+        int aFromIndex, int aToIndex, String aLine)", "-        for (int i = fromIndex; i < toIndex; i++)", "-        {", "-            if (!Character.isWhitespace(aLine.charAt(i)))", "-            {", "+        for (int i = aFromIndex; i < aToIndex; i++) {", "+            if (!Character.isWhitespace(aLine.charAt(i))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc4a63145d842b7dddc613d262c536be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SingleLineJavadocCheck.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitJavadocToken(DetailNode ast)", "signatureAfterChange": "      @Override     public void visitJavadocToken(DetailNode ast)", "diff": ["-        if (isSingleLineJavdoc()", "+        if (isSingleLineJavadoc()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc4f815e8d3516cb00b8c7eedf72c78e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java", "commitBeforeChange": "454af2c194e82c740e26ae814cbbf57d365b411e", "commitAfterChange": "5ebfb82c0168a5ebc5057ab3d0673682e21b7423", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Override     public final void configure(Configuration configuration)         throws CheckstyleException", "signatureAfterChange": "     @Override     public final void configure(Configuration configuration)         throws CheckstyleException", "diff": ["-                if (pd == null || pd.getWriteMethod() == null) {", "+                if (pd == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc4f974042e83eff3ee3750e9fbad46c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "a13ebd482ce5dd891ba99d4c22a7cd5ff7d8e2dc", "commitAfterChange": "dad4fa599aa3570980fcaff4cb5f37941847a7a1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testFinishLocalSetupFullyInitialized() throws Exception", "signatureAfterChange": "      @Test     public void testFinishLocalSetupFullyInitialized() throws Exception", "diff": ["-        final Checker c = new Checker();", "-        c.setModuleClassLoader(Thread.currentThread().getContextClassLoader());", "+        final Checker checker = new Checker();", "+        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());", "-        c.setModuleFactory(factory);", "+        checker.setModuleFactory(factory);", "-        c.finishLocalSetup();", "+        checker.finishLocalSetup();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc50b21e5ef4660d99bf614c1814bc8b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "91aa6578321ceb08f4b0d715f994b7a9f4abe9d7", "commitAfterChange": "3430721be200cbe2acf55c3b3d52a528638123b3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static Set getPropertyFiles(Set dirs)", "signatureAfterChange": "     private static Set getPropertyFiles(Set aDirs)", "diff": ["-    private static Set getPropertyFiles(Set dirs)", "+    private static Set getPropertyFiles(Set aDirs)", "-        for (Iterator iterator = dirs.iterator(); iterator.hasNext();) {", "+        for (Iterator iterator = aDirs.iterator(); iterator.hasNext();) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc63e1f532f62ee0ad4eca645a592351", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean checkSlist(final DetailAST aAST, boolean aUseBreak,                                boolean aUseContinue)", "signatureAfterChange": "     private boolean checkSlist(final DetailAST ast, boolean useBreak,                                boolean useContinue)", "diff": ["-    private boolean checkSlist(final DetailAST aAST, boolean aUseBreak,", "-                               boolean aUseContinue)", "+    private boolean checkSlist(final DetailAST ast, boolean useBreak,", "+                               boolean useContinue)", "-        DetailAST lastStmt = aAST.getLastChild();", "+        DetailAST lastStmt = ast.getLastChild();", "-            && isTerminated(lastStmt, aUseBreak, aUseContinue);", "+            && isTerminated(lastStmt, useBreak, useContinue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fca4530781f113a0600001511d3c9fd9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CaseHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     protected IndentLevel getLevelImpl()", "signatureAfterChange": "      @Override     protected IndentLevel getIndentImpl()", "diff": ["-    protected IndentLevel getLevelImpl() {", "-        return new IndentLevel(getParent().getLevel(),", "+    protected IndentLevel getIndentImpl() {", "+        return new IndentLevel(getParent().getIndent(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcc3166237b7a73ee18d740dd5578bc5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void setFile(File aFile)", "signatureAfterChange": "     public void setFile(File file)", "diff": ["-    /** @param aFile the file to be checked */", "-    public void setFile(File aFile)", "+    /** @param file the file to be checked */", "+    public void setFile(File file)", "-        mFileName = aFile.getAbsolutePath();", "+        fileName = file.getAbsolutePath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcdb26450f08920b7bbec6847a9efc46", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java", "commitBeforeChange": "f2429b81399fa12e4dd90aff86e91132b24849e0", "commitAfterChange": "15818b826024e6fef6c21e2831ec246af0a8ba7a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     @Override     public boolean accept(AuditEvent event)", "signatureAfterChange": "     @Override     public boolean accept(AuditEvent event)", "diff": ["-        // file and check match?", "-        if (isFileNameAndModuleMatching(event)) {", "+        // reject if file or check module mismatch?", "+        if (isFileNameAndModuleNotMatching(event)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcf5ddfc7f3779604b1919e04be7a888", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public static DetailAST parse(FileContents aContents)         throws RecognitionException, TokenStreamException", "signatureAfterChange": "     public static DetailAST parse(FileContents contents)         throws RecognitionException, TokenStreamException", "diff": ["-    public static DetailAST parse(FileContents aContents)", "+    public static DetailAST parse(FileContents contents)", "-        final String fullText = aContents.getText().getFullText().toString();", "+        final String fullText = contents.getText().getFullText().toString();", "-        lexer.setFilename(aContents.getFilename());", "-        lexer.setCommentListener(aContents);", "+        lexer.setFilename(contents.getFilename());", "+        lexer.setCommentListener(contents);", "-        parser.setFilename(aContents.getFilename());", "+        parser.setFilename(contents.getFilename());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd0eb47ad153f60fe1e3b088a58e948a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java", "commitBeforeChange": "ca7f7f855630cbc816e47637ef36ae433d0e745f", "commitAfterChange": "5f5142b2325051f9ed31130167c73d154d547211", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static String encode(String value)", "signatureAfterChange": "     public static String encode(String value)", "diff": ["-            final char c = value.charAt(i);", "-            switch (c) {", "+            final char chr = value.charAt(i);", "+            switch (chr) {", "-                    sb.append(c);", "+                    sb.append(chr);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd26469a6ae2e2e646ee6b4be99dd166", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Check.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public final ClassLoader getClassLoader()", "signatureAfterChange": "     public final ClassLoader getClassLoader()", "diff": ["-        return mLoader;", "+        return loader;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd9c6c3776119ada9795c5ab8ceb957b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AnnotationUtility.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static DetailAST getAnnotation(final DetailAST aAST,         String aAnnotation)", "signatureAfterChange": "     public static DetailAST getAnnotation(final DetailAST ast,         String annotation)", "diff": ["-    public static DetailAST getAnnotation(final DetailAST aAST,", "-        String aAnnotation)", "+    public static DetailAST getAnnotation(final DetailAST ast,", "+        String annotation)", "-        if (aAST == null) {", "-            throw new NullPointerException(\"the aAST is null\");", "+        if (ast == null) {", "+            throw new NullPointerException(\"the ast is null\");", "-        if (aAnnotation == null) {", "-            throw new NullPointerException(\"the aAnnotation is null\");", "+        if (annotation == null) {", "+            throw new NullPointerException(\"the annotation is null\");", "-        if (aAnnotation.trim().length() == 0) {", "-            throw new IllegalArgumentException(\"the aAnnotation\"", "+        if (annotation.trim().length() == 0) {", "+            throw new IllegalArgumentException(\"the annotation\"", "-        final DetailAST holder = AnnotationUtility.getAnnotationHolder(aAST);", "+        final DetailAST holder = AnnotationUtility.getAnnotationHolder(ast);", "-                final String aName =", "+                final String name =", "-                if (aAnnotation.equals(aName)) {", "+                if (annotation.equals(name)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdb2254b37e3cedc30d4ef6c165c859f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalThrowsCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean isIgnorableMethod(DetailAST aMethodDef)", "signatureAfterChange": "     private boolean isIgnorableMethod(DetailAST methodDef)", "diff": ["-    private boolean isIgnorableMethod(DetailAST aMethodDef)", "+    private boolean isIgnorableMethod(DetailAST methodDef)", "-        return shouldIgnoreMethod(aMethodDef.findFirstToken(TokenTypes.IDENT).getText())", "-            || mIgnoreOverridenMethods", "-               && (AnnotationUtility.containsAnnotation(aMethodDef, \"Override\")", "-                  || AnnotationUtility.containsAnnotation(aMethodDef, \"java.lang.Override\"));", "+        return shouldIgnoreMethod(methodDef.findFirstToken(TokenTypes.IDENT).getText())", "+            || ignoreOverridenMethods", "+               && (AnnotationUtility.containsAnnotation(methodDef, \"Override\")", "+                  || AnnotationUtility.containsAnnotation(methodDef, \"java.lang.Override\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdb226e287a7d6c32f24c76e84838234", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "         public boolean isOn()", "signatureAfterChange": "         public boolean isOn()", "diff": ["-            return mOn;", "+            return on;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdb3e56f75b87e25918293ed86c46481", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractNestedDepthCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected final void nestOut()", "signatureAfterChange": "     protected final void nestOut()", "diff": ["-        --mDepth;", "+        --depth;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdc5d95b3470d0fadb81de5a3a60b00e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void visitClassDef(DetailAST aClass)", "signatureAfterChange": "     private void visitClassDef(DetailAST classDef)", "diff": ["-    private void visitClassDef(DetailAST aClass)", "+    private void visitClassDef(DetailAST classDef)", "-        if (mClassDepth == 0) {", "-            final DetailAST ident = aClass.findFirstToken(TokenTypes.IDENT);", "-            mCurrentClass = mPackage.getText() + \".\" + ident.getText();", "-            mClassDepth++;", "+        if (classDepth == 0) {", "+            final DetailAST ident = classDef.findFirstToken(TokenTypes.IDENT);", "+            currentClass = packageName.getText() + \".\" + ident.getText();", "+            classDepth++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdf136c4d66e55527b60effd8610fd56", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java", "commitBeforeChange": "fdd5ed77fd1ea61768683ee8cfacf78190a2d3aa", "commitAfterChange": "bf9325be913ce46a1427232c455f4830b574ba44", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            final DetailAST error = checkOrderSuggestedByJLS(mods);", "+            final DetailAST error = checkOrderSuggestedByJls(mods);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe2a0bc0d93aee0450e438885dda7f7d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java", "commitBeforeChange": "9dd69b267b626af533ddf8bc0d37b4fd3744fa6e", "commitAfterChange": "57b908199dfa5c2c9bf9388d92925ccfb312812f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static FilterSet loadSuppressions(String filename)         throws CheckstyleException", "signatureAfterChange": "     public static FilterSet loadSuppressions(String filename)         throws CheckstyleException", "diff": ["-                        throw new CheckstyleException(\"unable to find \" + filename);", "+                        throw new CheckstyleException(UNABLE_TO_FIND_ERROR_MESSAGE + filename);", "-                    throw new CheckstyleException(\"unable to find \" + filename, e);", "+                    throw new CheckstyleException(UNABLE_TO_FIND_ERROR_MESSAGE + filename, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe34c141709d71ebf138dfa18ed1d902", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "2f5b39d41f21f2243d457b6c322e909b1911be5d", "commitAfterChange": "66325cbd72882454193765322efa716537ce9c93", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void finishLocalSetup()         throws CheckstyleException", "signatureAfterChange": "     public void finishLocalSetup()         throws CheckstyleException", "diff": ["-            mModuleFactory = PackageNamesLoader.loadModuleFactory(", "-                    this.getClass().getClassLoader());", "+            mModuleFactory = PackageNamesLoader.loadModuleFactory(mLoader);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe36f25c67ff3eed02c4c53a8c478f72", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "5e0f360e7b7745a362bd7a655e98654a2ad36443", "commitAfterChange": "3813f1ccbf157f463c041ccfc462399845ddff6e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void logIoException(IOException ex, File file)", "signatureAfterChange": "     private void logIoException(IOException exception, File file)", "diff": ["-    private void logIoException(IOException ex, File file) {", "+    private void logIoException(IOException exception, File file) {", "-        if (!(ex instanceof FileNotFoundException)) {", "-            args = new String[] {ex.getMessage()};", "+        if (!(exception instanceof FileNotFoundException)) {", "+            args = new String[] {exception.getMessage()};", "-        LOG.debug(\"IOException occurred.\", ex);", "+        LOG.debug(\"IOException occurred.\", exception);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe5582c7223f17cf053e854be492df71", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static void traverse(File aNode, List<File> aFiles)", "signatureAfterChange": "     private static void traverse(File node, List<File> files)", "diff": ["-    private static void traverse(File aNode, List<File> aFiles)", "+    private static void traverse(File node, List<File> files)", "-        if (aNode.canRead()) {", "-            if (aNode.isDirectory()) {", "-                final File[] nodes = aNode.listFiles();", "+        if (node.canRead()) {", "+            if (node.isDirectory()) {", "+                final File[] nodes = node.listFiles();", "-                    traverse(element, aFiles);", "+                    traverse(element, files);", "-            else if (aNode.isFile()) {", "-                aFiles.add(aNode);", "+            else if (node.isFile()) {", "+                files.add(node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe6f508f3dd1d7a13351fe00cd4b79a6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "4f9debc29b039e7a7e408aa24fb13b6fe71debce", "commitAfterChange": "c4c966c9712ae2c9ce8f2f215598477d4b59586f", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public static DetailAST parse(FileContents aContents)         throws TokenStreamException, RecognitionException", "signatureAfterChange": "     public static DetailAST parse(FileContents aContents)         throws TokenStreamException, RecognitionException", "diff": ["-            jl.setFileContents(aContents);", "+            jl.setCommentListener(aContents);", "-            jl.setFileContents(aContents);", "+            jl.setCommentListener(aContents);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "feb9b4b99a2ebbbd936f1c6c05e3786f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentLevel.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void addAcceptedIndent(IndentLevel aIndent)", "signatureAfterChange": "     public void addAcceptedIndent(IndentLevel indent)", "diff": ["-    public void addAcceptedIndent(IndentLevel aIndent)", "+    public void addAcceptedIndent(IndentLevel indent)", "-        mLevels.or(aIndent.mLevels);", "+        levels.or(indent.levels);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fee89c0f25fa62696c3bda13a2902381", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "c269a417368ac370a855ee3fd8b1f09f03357254", "commitAfterChange": "78103da0339d6f973434b77741fccb962efeabe6", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "      @Test     public void test_generics_1() throws Exception", "signatureAfterChange": "      @Test     public void testGenerics1() throws Exception", "diff": ["-    public void test_generics_1() throws Exception {", "+    public void testGenerics1() throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff0af56047e7db6470d21e527d2f77d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java", "commitBeforeChange": "3d8fc87ef60d4e96068658ed0485aafdb2a42691", "commitAfterChange": "e27489c7721909245ea5055eac3b9c7c659081f6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-                         mAuthorFormatRE, mAuthorFormat);", "+                         mAuthorFormatPattern, mAuthorFormat);", "-                         mVersionFormatRE, mVersionFormat);", "+                         mVersionFormatPattern, mVersionFormat);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff44be72ddd911e444311e2a31abb7f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ObjectBlockHandler.java", "commitBeforeChange": "4a6e1a3541fc31dc7450de00943fd94a20d9223e", "commitAfterChange": "8c891372187779376158becd95fcaf4e28b8bb8d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     protected IndentLevel getLevelImpl()", "signatureAfterChange": "      @Override     protected IndentLevel getIndentImpl()", "diff": ["-    protected IndentLevel getLevelImpl() {", "+    protected IndentLevel getIndentImpl() {", "-        IndentLevel indent = getParent().getLevel();", "+        IndentLevel indent = getParent().getIndent();", "-            indent.addAcceptedIndent(super.getLevelImpl());", "+            indent.addAcceptedIndent(super.getIndentImpl());", "-            indent = super.getLevelImpl();", "+            indent = super.getIndentImpl();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff499df93c0a79c435168ba2cb477097", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "e7547bb7ddccec6737cea118a41864fc349ea1d2", "commitAfterChange": "d220d7c3cc74490c7f2923f2ea85d00133afe98c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     @Test     public void testGoodAnnonOverrideJ5Compat() throws Exception", "signatureAfterChange": "     @Test     public void testGoodAnnotationOverrideJ5Compat() throws Exception", "diff": ["-    public void testGoodAnnonOverrideJ5Compat() throws Exception {", "+    public void testGoodAnnotationOverrideJ5Compat() throws Exception {", "-        verify(checkConfig, getPath(\"annotation\" + File.separator + \"GoodAnnonOverride.java\"), expected);", "+        verify(checkConfig, getPath(\"annotation\" + File.separator + \"GoodAnnotationOverride.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff77041e9676d5ba33ab0f84ea97b6ec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/UniquePropertiesCheckTest.java", "commitBeforeChange": "59fa63c67d44757974a88e8210d7263497155272", "commitAfterChange": "c6df3098271228399655bdb581203c0708b24614", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testNotFoundKey() throws Exception", "signatureAfterChange": "     @Test     public void testNotFoundKey() throws Exception", "diff": ["-                check.getLineNumber(testStrings,", "+                UniquePropertiesCheck.getLineNumber(testStrings,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff87a606ac6dbc03582ba409258701dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public void setIntVal(int val)", "signatureAfterChange": "          public void setVal(int val)", "diff": ["-        public void setIntVal(int val) {", "+        public void setVal(int val) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff97c6ad6bab466aaa6acb9c2643a253", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java", "commitBeforeChange": "b8c558e473c0a9a75c41312e31df34b8572a271b", "commitAfterChange": "58ce4c40970fc29d00e5740bc6098eb475668e86", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void checkThrowsTags(List aTags, List aThrows)", "signatureAfterChange": "     private void checkThrowsTags(List aTags, List aThrows)", "diff": ["-                if (mCheckUnusedThrows) {", "+                if (mAllowUndeclaredRTE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff9b92d85aace3e60efd7a65e07aac86", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setReliefPattern(String aPattern)", "signatureAfterChange": "     public void setReliefPattern(String pattern)", "diff": ["-    public void setReliefPattern(String aPattern)", "+    public void setReliefPattern(String pattern)", "-        mReliefPattern = aPattern;", "+        reliefPattern = pattern;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffffe093e916667677285cf1a2660b51", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private boolean hasRedundantWhitespace(String aLine, int aAfter)", "signatureAfterChange": "     private boolean hasRedundantWhitespace(String line, int after)", "diff": ["-    private boolean hasRedundantWhitespace(String aLine, int aAfter)", "+    private boolean hasRedundantWhitespace(String line, int after)", "-        boolean result = !mAllowLineBreaks;", "-        for (int i = aAfter + 1; !result && (i < aLine.length()); i++) {", "-            if (!Character.isWhitespace(aLine.charAt(i))) {", "+        boolean result = !allowLineBreaks;", "+        for (int i = after + 1; !result && (i < line.length()); i++) {", "+            if (!Character.isWhitespace(line.charAt(i))) {"]}]}