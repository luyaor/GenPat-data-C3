{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a32c188ecea9c7c7278568424a04c5f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01f552497e3e8f287068e82aef9980da", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testFileInUnnamedPackage() throws Exception", "signatureAfterChange": "      @Test     public void testFileInUnnamedPackage() throws Exception", "diff": ["-        verify(checkConfig, getNonCompilablePath(\"InputRedundantImportCheck_UnnamedPackage.java\"), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputRedundantImport_UnnamedPackage.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d833de26f0000d5d8dd40da256d4daf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/PackageNameCheckTest.java", "commitBeforeChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "commitAfterChange": "fa5884271348f0cfaaa1160e18028d37845af4dd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testSpecified()         throws Exception", "signatureAfterChange": "      @Test     public void testSpecified()         throws Exception", "diff": ["-            \"6:9: \" + getCheckMessage(MSG_INVALID_PATTERN, \"com.puppycrawl.tools.checkstyle\", pattern),", "+            \"6:9: \" + getCheckMessage(MSG_INVALID_PATTERN, \"com.puppycrawl.tools.checkstyle.checks.naming\", pattern),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2136af7c330eb1be35f169fee5c92e38", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4861blockcommentstyle/CommentsIndentationTest.java", "commitBeforeChange": "4346d41010a729e14991e30706bdb16ff18ff39a", "commitAfterChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCommentIsInsideEmptyBlock() throws Exception", "signatureAfterChange": "      @Test     public void testCommentIsInsideEmptyBlock() throws Exception", "diff": ["-            builder.getFilePath(\"CommentsIndentationInEmptyBlockInput\");", "+            builder.getFilePath(\"InputCommentsIndentationInEmptyBlock\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71bc8e3d604b03396173203a0dc0fe19", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/WhitespaceAroundTest.java", "commitBeforeChange": "4346d41010a729e14991e30706bdb16ff18ff39a", "commitAfterChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void whitespaceAroundEmptyTypesCyclesTest() throws Exception", "signatureAfterChange": "      @Test     public void whitespaceAroundEmptyTypesCyclesTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"WhitespaceAroundInput_EmptyTypesAndCycles\");", "+        final String filePath = builder.getFilePath(\"InputWhitespaceAroundEmptyTypesAndCycles\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8339b3935f5ff610af814965b7a337de", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     @Test     public void testGoodAnnotationOverride() throws Exception", "signatureAfterChange": "     @Test     public void testGoodAnnotationOverride() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"GoodAnnotationOverride.java\"), expected);", "+        verify(checkConfig, getPath(\"InputGoodAnnotationOverride.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e52bb75d3d4a4edf8a0ce03d15a2a14", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheckTest.java", "commitBeforeChange": "c5de8a31c8287b8a7946a9f4f981a35a190a9735", "commitAfterChange": "10d3015752ad509cd8f7956d98b6eb9c92641a45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testJavaLangPackage() throws Exception", "signatureAfterChange": "      @Test     public void testJavaLangPackage() throws Exception", "diff": ["-                getNonCompilablePath(\"InputIllegalInstantiationCheckLang.java\"),", "+                getNonCompilablePath(\"InputIllegalInstantiationLang.java\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b94b80f05293bff4979b03319805c1be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAroundTest.java", "commitBeforeChange": "beb0ba7574c0e3bc31f7b946b826ef3938e67309", "commitAfterChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testDoWhileWhitespaceAround() throws Exception", "signatureAfterChange": "      @Test     public void testDoWhileWhitespaceAround() throws Exception", "diff": ["-        verify(checkConfig,", "-               getPath(\"whitespace/InputDoWhileWhitespaceAround.java\"),", "-               expected);", "+        verify(checkConfig, getPath(\"InputDoWhileWhitespaceAround.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e04c9e05bb6b8957ff1958dbe8381933", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "da5d8c09d268342836be6e6b7b4e45403d542b81", "commitAfterChange": "49314771b622e7e10bde3d13f8c38170da96a3db", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void testInner()         throws Exception", "signatureAfterChange": "      public void testInner()         throws Exception", "diff": ["-            filepath + \":24: variable 'data' must match pattern '^[A-Z]([A-Z0-9_]*[A-Z0-9])?$'.\",", "+            filepath + \":24: variable 'data' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e073faa8cce89a947b0ba5d9c0b351d6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testBadOverrideFromObjectJ5Compatible() throws Exception", "signatureAfterChange": "     @Test     public void testBadOverrideFromObjectJ5Compatible() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"BadOverrideFromObject.java\"), expected);", "+        verify(checkConfig, getPath(\"InputBadOverrideFromObject.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f25d0de0786d688246ce90db0fe985ad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheckTest.java", "commitBeforeChange": "9e9b817c6558d1141617e52444716c0f802c1417", "commitAfterChange": "94e56037a53433ffd11f77995c2676c3b2d4753b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        verify(checkConfig, getPath(\"ComplexityCheckTestInput.java\"), expected);", "+        verify(checkConfig, getPath(\"InputComplexityCheck.java\"), expected);"]}]}