{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2633669394bb7b96276b94d65a518d1c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fd40ed34cc89af7988e3a15ebc82603", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/XDocsPagesTest.java", "commitBeforeChange": "66ed32ae55811c22434e7296566915759e921305", "commitAfterChange": "0d1bef9960d1e9f93c6ca6d83f8f4bacc1a98db7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAllXmlExamples() throws Exception", "signatureAfterChange": "      @Test     public void testAllXmlExamples() throws Exception", "diff": ["-            final String source = Files.toString(file, UTF_8);", "-            int position = -1;", "+            final String input = Files.toString(file, UTF_8);", "+            final String fileName = file.getName();", "-            while (true) {", "-                position = source.indexOf(\"<source>\", position + 1);", "+            final Document document = getRawXml(fileName, input, input);", "+            final NodeList sources = document.getElementsByTagName(\"source\");", "-                if (position == -1) {", "-                    break;", "-                }", "-", "-                final int nextPosition = source.indexOf(\"</source>\", position);", "-                final String unserializedSource = source.substring(position + 8, nextPosition)", "-                        .trim().replace(\"&lt;\", \"<\").replace(\"&gt;\", \">\").replace(\"&quot;\", \"\\\"\")", "-                        .replace(\"&amp;\", \"&\").replace(\"...\", \"\");", "-", "-                position = nextPosition;", "+            for (int position = 0; position < sources.getLength(); position++) {", "+                final String unserializedSource = sources.item(position).getTextContent()", "+                        .replace(\"...\", \"\").trim();", "-                buildAndTestXml(file.getName(), unserializedSource);", "+                buildAndTestXml(fileName, unserializedSource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c6022007262c035f54dde43fa405b5a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void parseTags(String[] aText, int aLineNo)", "signatureAfterChange": "     private void parseTags(String[] text, int lineNo)", "diff": ["-    private void parseTags(String[] aText, int aLineNo)", "+    private void parseTags(String[] text, int lineNo)", "-        final int nLines = aText.length;", "+        final int nLines = text.length;", "-        position = findChar(aText, '<', position);", "+        position = findChar(text, '<', position);", "-            if (isCommentTag(aText, position)) {", "-                position = skipHtmlComment(aText, position);", "+            if (isCommentTag(text, position)) {", "+                position = skipHtmlComment(text, position);", "-            else if (!isTag(aText, position)) {", "-                position = getNextCharPos(aText, position);", "+            else if (!isTag(text, position)) {", "+                position = getNextCharPos(text, position);", "-                final Point endTag = findChar(aText, '>', position);", "+                final Point endTag = findChar(text, '>', position);", "-                    (incompleteTag ? \"\" : getTagId(aText, position));", "+                    (incompleteTag ? \"\" : getTagId(text, position));", "-                     && (aText[endTag.getLineNo()]", "+                     && (text[endTag.getLineNo()]", "-                                position.getLineNo() + aLineNo,", "+                                position.getLineNo() + lineNo,", "-                                aText[position.getLineNo()]));", "+                                text[position.getLineNo()]));", "-            position = findChar(aText, '<', position);", "+            position = findChar(text, '<', position);"]}]}