{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4de5bf96ea57240c0e46b55eae814399", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d05aab91976e3ea29add2bcccebd840", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java", "commitBeforeChange": "6985c4758d4a3252951a6a26b8efdd7b5f0adff4", "commitAfterChange": "b405880b6e79f143c3ba3651fe6c8b68324fca51", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            case TokenTypes.EXPR:", "-                visitExpr(ast);", "-                break;", "-                visitSemi(ast);", "+                DetailAST currentStatement = ast;", "+                if (isMultilineStatement(currentStatement)) {", "+                    currentStatement = ast.getPreviousSibling();", "+                }", "+                if (isOnTheSameLine(currentStatement, lastStatementEnd,", "+                        forStatementEnd) && !inForHeader) {", "+                    log(ast, MSG_KEY);", "+                }", "-            case TokenTypes.FOR_INIT:", "-                inForHeader = true;", "+            case TokenTypes.FOR_ITERATOR:", "+                forStatementEnd = ast.getLineNo();", "+                inForHeader = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99c9b53693715775c71a7527e7f137ca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/AssignHandler.java", "commitBeforeChange": "2c8f014f31a0e32d3c92e7e0659c27ce30a72bf0", "commitAfterChange": "7dd31794bcc6258ffaa1ed5533a3b5a7c2f2af1a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void checkIndentation()", "signatureAfterChange": "     public void checkIndentation()", "diff": ["-        if (assign.getParent() != null", "-            && assign.getParent().getType() == TokenTypes.EXPR)", "-        {", "+        final DetailAST parent = assign.getParent();", "+        if (parent != null && parent.getType() == TokenTypes.EXPR) {", "+        if (parent != null", "+            && parent.getType() == TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR)", "+        {", "+            child = (DetailAST) assign.getNextSibling();", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da14395e8a1a91bab75bb86f96797b1e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "c37cc9e521b884aec06593210191e9200c726788", "commitAfterChange": "88f6d6ffe7c1735f48f24cf5cd38c34d7326e3fd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public boolean equals(Object aObj)", "signatureAfterChange": "     public boolean equals(Object aObj)", "diff": ["+            boolean isTextEquals = true;", "+", "+            if (getText() != null) {", "+                isTextEquals = getText().equals(other.getText());", "+            }", "+            else if (other.getText() != null) {", "+                isTextEquals = false;", "+            }", "+", "-                && (other.getText().equals(getText()))", "-                && (other.mLineNo == mLineNo)", "-                && (other.mColumnNo == mColumnNo);", "+                && isTextEquals", "+                && (other.mLineNo == getLineNo())", "+                && (other.mColumnNo == getColumnNo());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8312c4245684fa87600ecd7843c2210", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/MagicNumberCheck.java", "commitBeforeChange": "4628bc229d2d0a87c6f3db2110635fa337f46b56", "commitAfterChange": "e8ad93aea6f76881d2dd321cfcd76b7b0240db53", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean isConstantDefinition(DetailAST aAST)", "signatureAfterChange": "     private boolean isConstantDefinition(DetailAST aAST)", "diff": ["+        if (ScopeUtils.inInterfaceBlock(aAST)) {", "+            return true;", "+        }", "-        //assignment?", "+        //array init?", "+        if ((parent != null) && (parent.getType() == TokenTypes.ARRAY_INIT)) {", "+            parent = parent.getParent();", "+        }", "+", "+        //assignment?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbf00303e6a3e0345fbad17f2b421a6b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "7f7db38a097a95c264307123924779380fb40077", "commitAfterChange": "60847a32d538e9a0f1c1de3e349e8b3833741506", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean isConstantDefinition(DetailAST aAST)", "signatureAfterChange": "     private boolean isConstantDefinition(DetailAST aAST)", "diff": ["+        if (parent == null) {", "+            return false;", "+        }", "+", "+        //UNARY_MINUS or UNARY_PLUS should be ignored", "+        if ((parent.getType() == TokenTypes.UNARY_MINUS)", "+            || (parent.getType() == TokenTypes.UNARY_PLUS))", "+        {", "+            parent = parent.getParent();", "+        }", "+"]}]}