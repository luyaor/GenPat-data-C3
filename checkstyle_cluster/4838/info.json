{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5eaeea95af2921458218527113fa46c5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ad5d7ed74c004c0b1f33248e5c9da50", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheckTest.java", "commitBeforeChange": "3e25a4911d0f0e4ea1b9c22f1b65158794f7d093", "commitAfterChange": "7f452f66c8ac18a9d0093c0cb05009ddae0b8ea9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testNospaceWithComplexInput() throws Exception", "signatureAfterChange": "      @Test     public void testNospaceWithComplexInput() throws Exception", "diff": ["+            \"112:17: \" + getCheckMessage(WS_FOLLOWED, \"(\"),", "+            \"113:23: \" + getCheckMessage(WS_FOLLOWED, \"(\"),", "+            \"113:25: \" + getCheckMessage(WS_FOLLOWED, \"(\"),", "+            \"113:31: \" + getCheckMessage(WS_PRECEDED, \")\"),", "+            \"114:26: \" + getCheckMessage(WS_FOLLOWED, \"(\"),", "+            \"114:28: \" + getCheckMessage(WS_FOLLOWED, \"(\"),", "+            \"114:34: \" + getCheckMessage(WS_PRECEDED, \")\"),", "+            \"114:50: \" + getCheckMessage(WS_PRECEDED, \")\"),", "+            \"115:26: \" + getCheckMessage(WS_FOLLOWED, \"(\"),", "+            \"115:28: \" + getCheckMessage(WS_FOLLOWED, \"(\"),", "+            \"115:35: \" + getCheckMessage(WS_PRECEDED, \")\"),", "+            \"115:53: \" + getCheckMessage(WS_PRECEDED, \")\"),", "+            \"115:55: \" + getCheckMessage(WS_PRECEDED, \")\"),", "+            \"119:17: \" + getCheckMessage(WS_FOLLOWED, \"(\"),", "+            \"119:22: \" + getCheckMessage(WS_PRECEDED, \")\"),", "+            \"123:30: \" + getCheckMessage(WS_FOLLOWED, \"(\"),", "+            \"123:44: \" + getCheckMessage(WS_PRECEDED, \")\"),", "+            \"126:22: \" + getCheckMessage(WS_FOLLOWED, \"(\"),", "+            \"126:22: \" + getCheckMessage(WS_PRECEDED, \")\"),", "+            \"130:19: \" + getCheckMessage(WS_FOLLOWED, \"(\"),", "+            \"130:19: \" + getCheckMessage(WS_PRECEDED, \")\"),", "+        };", "+        verify(checkConfig, getPath(\"whitespace/InputParenPad.java\"), expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53382659357ab686f88b4f8504c79b9e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     @Test     public void testReordered()         throws Exception", "signatureAfterChange": "     @Test     public void testReordered()         throws Exception", "diff": ["-            \"18:13: 'hidden' hides a field.\",", "-            \"21:40: 'hidden' hides a field.\",", "-            \"27:13: 'hidden' hides a field.\",", "-            \"32:18: 'hidden' hides a field.\",", "-            \"36:33: 'hidden' hides a field.\",", "-            \"46:17: 'innerHidden' hides a field.\",", "-            \"49:26: 'innerHidden' hides a field.\",", "-            \"55:17: 'innerHidden' hides a field.\",", "-            \"56:17: 'hidden' hides a field.\",", "-            \"61:22: 'innerHidden' hides a field.\",", "-            \"64:22: 'hidden' hides a field.\",", "-            \"69:17: 'innerHidden' hides a field.\",", "-            \"70:17: 'hidden' hides a field.\",", "-            \"76:17: 'innerHidden' hides a field.\",", "-            \"77:17: 'hidden' hides a field.\",", "-            \"83:13: 'hidden' hides a field.\",", "-            \"105:17: 'hidden' hides a field.\",", "-            \"118:21: 'hidden' hides a field.\",", "-            \"125:13: 'hidden' hides a field.\",", "-            \"131:13: 'hiddenStatic' hides a field.\",", "+            \"18:13: \" + getCheckMessage(MSG_KEY, \"hidden\"),", "+            \"21:40: \" + getCheckMessage(MSG_KEY, \"hidden\"),", "+            \"27:13: \" + getCheckMessage(MSG_KEY, \"hidden\"),", "+            \"32:18: \" + getCheckMessage(MSG_KEY, \"hidden\"),", "+            \"36:33: \" + getCheckMessage(MSG_KEY, \"hidden\"),", "+            \"46:17: \" + getCheckMessage(MSG_KEY, \"innerHidden\"),", "+            \"49:26: \" + getCheckMessage(MSG_KEY, \"innerHidden\"),", "+            \"55:17: \" + getCheckMessage(MSG_KEY, \"innerHidden\"),", "+            \"56:17: \" + getCheckMessage(MSG_KEY, \"hidden\"),", "+            \"61:22: \" + getCheckMessage(MSG_KEY, \"innerHidden\"),", "+            \"64:22: \" + getCheckMessage(MSG_KEY, \"hidden\"),", "+            \"69:17: \" + getCheckMessage(MSG_KEY, \"innerHidden\"),", "+            \"70:17: \" + getCheckMessage(MSG_KEY, \"hidden\"),", "+            \"76:17: \" + getCheckMessage(MSG_KEY, \"innerHidden\"),", "+            \"77:17: \" + getCheckMessage(MSG_KEY, \"hidden\"),", "+            \"83:13: \" + getCheckMessage(MSG_KEY, \"hidden\"),", "+            \"105:17: \" + getCheckMessage(MSG_KEY, \"hidden\"),", "+            \"118:21: \" + getCheckMessage(MSG_KEY, \"hidden\"),", "+            \"125:13: \" + getCheckMessage(MSG_KEY, \"hidden\"),", "+            \"131:13: \" + getCheckMessage(MSG_KEY, \"hiddenStatic\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4f32230d99c68cf785c9f0510df5a6c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "     @Test     public void testDefault() throws Exception", "diff": ["-            \"4:17: Variable 'x' explicitly initialized to '0' (default value for its type).\",", "-            \"5:20: Variable 'bar' explicitly initialized to 'null' (default value for its type).\",", "-            \"9:18: Variable 'y4' explicitly initialized to '0' (default value for its type).\",", "-            \"10:21: Variable 'b1' explicitly initialized to 'false' (default value for its type).\",", "-            \"14:22: Variable 'str1' explicitly initialized to 'null' (default value for its type).\",", "-            \"14:35: Variable 'str3' explicitly initialized to 'null' (default value for its type).\",", "-            \"15:9: Variable 'ar1' explicitly initialized to 'null' (default value for its type).\",", "-            \"18:11: Variable 'f1' explicitly initialized to '0' (default value for its type).\",", "-            \"19:12: Variable 'd1' explicitly initialized to '0' (default value for its type).\",", "-            \"22:17: Variable 'ch1' explicitly initialized to '\\\\0' (default value for its type).\",", "-            \"23:17: Variable 'ch2' explicitly initialized to '\\\\0' (default value for its type).\",", "-            \"39:25: Variable 'bar' explicitly initialized to 'null' (default value for its type).\",", "-            \"40:27: Variable 'barArray' explicitly initialized to 'null' (default value for its type).\",", "-            \"47:21: Variable 'x' explicitly initialized to '0' (default value for its type).\",", "-            \"48:29: Variable 'bar' explicitly initialized to 'null' (default value for its type).\",", "-            \"49:31: Variable 'barArray' explicitly initialized to 'null' (default value for its type).\",", "-            \"52:17: Variable 'x' explicitly initialized to '0' (default value for its type).\",", "-            \"53:25: Variable 'bar' explicitly initialized to 'null' (default value for its type).\",", "-            \"54:27: Variable 'barArray' explicitly initialized to 'null' (default value for its type).\",", "+            \"4:17: \" + getCheckMessage(MSG_KEY, \"x\", 0),", "+            \"5:20: \" + getCheckMessage(MSG_KEY, \"bar\", \"null\"),", "+            \"9:18: \" + getCheckMessage(MSG_KEY, \"y4\", 0),", "+            \"10:21: \" + getCheckMessage(MSG_KEY, \"b1\", \"false\"),", "+            \"14:22: \" + getCheckMessage(MSG_KEY, \"str1\", \"null\"),", "+            \"14:35: \" + getCheckMessage(MSG_KEY, \"str3\", \"null\"),", "+            \"15:9: \" + getCheckMessage(MSG_KEY, \"ar1\", \"null\"),", "+            \"18:11: \" + getCheckMessage(MSG_KEY, \"f1\", 0),", "+            \"19:12: \" + getCheckMessage(MSG_KEY, \"d1\", 0),", "+            \"22:17: \" + getCheckMessage(MSG_KEY, \"ch1\", \"\\\\0\"),", "+            \"23:17: \" + getCheckMessage(MSG_KEY, \"ch2\", \"\\\\0\"),", "+            \"39:25: \" + getCheckMessage(MSG_KEY, \"bar\", \"null\"),", "+            \"40:27: \" + getCheckMessage(MSG_KEY, \"barArray\", \"null\"),", "+            \"47:21: \" + getCheckMessage(MSG_KEY, \"x\", 0),", "+            \"48:29: \" + getCheckMessage(MSG_KEY, \"bar\", \"null\"),", "+            \"49:31: \" + getCheckMessage(MSG_KEY, \"barArray\", \"null\"),", "+            \"52:17: \" + getCheckMessage(MSG_KEY, \"x\", 0),", "+            \"53:25: \" + getCheckMessage(MSG_KEY, \"bar\", \"null\"),", "+            \"54:27: \" + getCheckMessage(MSG_KEY, \"barArray\", \"null\"),"]}]}