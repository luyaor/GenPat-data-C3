{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9896f87c77a74355aa647eb1f52e27af", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80b53d4b5b96facf01a90be5b57ba184", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java", "commitBeforeChange": "169729f60b9aba5736b15f3514ae41ed994512f2", "commitAfterChange": "095fa6743c995a0c89056456a3724a9480c69e50", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["+        else {", "+            if (targetAST.getType() == TokenTypes.ARRAY_DECLARATOR) {", "+                final DetailAST arrayType = targetAST.getFirstChild();", "+                if (!isCstyleArrayDeclaration(targetAST)) {", "+                    targetAST = arrayType;", "+                }", "+                else {", "+                    targetAST = targetAST.getParent().getNextSibling();", "+                }", "+            }", "+        }", "-        final int after =", "-            targetAST.getColumnNo() + targetAST.getText().length();", "+        int after = 0;", "+        //If target of possible redundant whitespace is in method definition", "+        if (targetAST.getType() == TokenTypes.IDENT", "+                && targetAST.getNextSibling().getType() == TokenTypes.LPAREN)", "+        {", "+            final DetailAST methodDef = targetAST.getParent();", "+            final DetailAST endOfParams = methodDef.findFirstToken(TokenTypes.RPAREN);", "+            after = endOfParams.getColumnNo() + 1;", "+        }", "+        else {", "+            after = targetAST.getColumnNo() + targetAST.getText().length();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fd5057e94a35260985d26c8408348ec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java", "commitBeforeChange": "0343b58a763bf13c151acdca4954906fea56e06b", "commitAfterChange": "1d41878f29431d9102aec57c3f0c67a2085c4974", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-        else {", "-            if (targetAST.getType() == TokenTypes.ARRAY_DECLARATOR) {", "-                final DetailAST arrayType = targetAST.getFirstChild();", "-                if (!isCstyleArrayDeclaration(targetAST)) {", "-                    targetAST = arrayType;", "-                }", "-                else {", "-                    targetAST = targetAST.getParent().getNextSibling();", "-                }", "-            }", "-        }", "-        int after = 0;", "-        //If target of possible redundant whitespace is in method definition", "-        if (targetAST.getType() == TokenTypes.IDENT", "-                && targetAST.getNextSibling().getType() == TokenTypes.LPAREN)", "-        {", "-            final DetailAST methodDef = targetAST.getParent();", "-            final DetailAST endOfParams = methodDef.findFirstToken(TokenTypes.RPAREN);", "-            after = endOfParams.getColumnNo() + 1;", "-        }", "-        else {", "-            after = targetAST.getColumnNo() + targetAST.getText().length();", "-        }", "+        final int after =", "+            targetAST.getColumnNo() + targetAST.getText().length();"]}]}