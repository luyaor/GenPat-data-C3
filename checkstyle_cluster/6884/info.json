{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "42675990369228cf34f3cb8370b3bb69", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "396314e74a1f494657202c765e25108c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "28c8ed692f83ff95e0814bd101177c4bb7794806", "commitAfterChange": "b5c738e6d0118111481daee0afd93b2a2d7d916a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processIdent(DetailAST aAST)", "signatureAfterChange": "     private void processIdent(DetailAST aAST)", "diff": ["-        // TODO: should be a lot smarter in selection. Currently use", "-        // same algorithm as real checkstyle", "-        if (parent.getType() == TokenTypes.DOT) {", "-            if (aAST.getNextSibling() != null) {", "+        final int parentType = parent.getType();", "+        if (parentType != TokenTypes.DOT", "+            && parentType != TokenTypes.METHOD_DEF", "+            || parentType == TokenTypes.DOT && aAST.getNextSibling() != null)", "+        {", "+            if (!isDeclared(aAST.getText())) {", "-        }", "-        else {", "-            mReferenced.add(aAST.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe32cc487867dc9e7a31d07d59e1961c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "commitBeforeChange": "7e36b3cbd1ae5cf41fd9101ac8c69fe751200d58", "commitAfterChange": "688dc9c547d92cf86d13733c6c0856dc43984676", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-        if ((slistAST == null) && !isElseIf) {", "+        boolean skipStatement = false;", "+        if (aAST.getType() == TokenTypes.LITERAL_IF) {", "+            skipStatement = isSkipIfBlock(aAST);", "+        }", "+        if ((slistAST == null) && !isElseIf && !skipStatement) {"]}]}