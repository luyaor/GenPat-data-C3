{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7fd31eb0d826194e40789c937af8b2d8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d5250d7e27ac462e3781420197f7af8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyRightCurlyTest.java", "commitBeforeChange": "af52963008a800390e8b356db5811886572f37a3", "commitAfterChange": "3a5a73d5c110418f712f5a9a838c6b4106506fdd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          @Test     public void leftCurlyAnnotationsTest() throws IOException, Exception", "signatureAfterChange": "          @Test     public void leftCurlyAnnotationsTest() throws IOException, Exception", "diff": ["-        ", "-        String checkMessagePrevious = getCheckMessage(LeftCurlyCheck.class, \"line.previous\", \"{\");", "+", "-            \"10:1: \" + checkMessagePrevious,", "-            \"14:5: \" + checkMessagePrevious,", "-            \"21:5: \" + checkMessagePrevious,", "-            \"27:5: \" + checkMessagePrevious,", "-            \"50:5: \" + checkMessagePrevious,", "+            \"10:1: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 1),", "+            \"14:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"21:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"27:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),", "+            \"50:5: \" + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, \"{\", 5),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b24c758b759714f8fae413849cc66604", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyRightCurlyTest.java", "commitBeforeChange": "af52963008a800390e8b356db5811886572f37a3", "commitAfterChange": "3a5a73d5c110418f712f5a9a838c6b4106506fdd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void rightCurlyTestAlone() throws Exception", "signatureAfterChange": "      @Test     public void rightCurlyTestAlone() throws Exception", "diff": ["-        ", "-        String checkMessageNew = getCheckMessage(RightCurlyCheck.class, \"line.new\", \"}\");", "-        String checkMessageAlone = getCheckMessage(RightCurlyCheck.class, \"line.alone\", \"}\");", "+", "-            \"97:5: \" + checkMessageAlone,", "-            \"97:6: \" + checkMessageNew,", "-            \"108:5: \" + checkMessageAlone,", "-            \"108:6: \" + checkMessageNew,", "-            \"122:6: \" + checkMessageNew,", "+            \"97:5: \" + getCheckMessage(RightCurlyCheck.class, MSG_KEY_LINE_ALONE, \"}\", 5),", "+            \"97:6: \" + getCheckMessage(RightCurlyCheck.class, MSG_KEY_LINE_NEW, \"}\", 6),", "+            \"108:5: \" + getCheckMessage(RightCurlyCheck.class, MSG_KEY_LINE_ALONE, \"}\", 5),", "+            \"108:6: \" + getCheckMessage(RightCurlyCheck.class, MSG_KEY_LINE_NEW, \"}\", 6),", "+            \"122:6: \" + getCheckMessage(RightCurlyCheck.class, MSG_KEY_LINE_NEW, \"}\", 6),"]}]}