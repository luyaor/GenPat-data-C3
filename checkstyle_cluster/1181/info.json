{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83e4e5716fa0f7842c5df828654fc29a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bed6287177104c834f5745751a80635", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractFormatCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void updateRegexp(String aFormat, int aCompileFlags)", "signatureAfterChange": "     private void updateRegexp(String format, int compileFlagsParam)", "diff": ["-    private void updateRegexp(String aFormat, int aCompileFlags)", "+    private void updateRegexp(String format, int compileFlagsParam)", "-            mRegexp = Utils.getPattern(aFormat, aCompileFlags);", "-            mFormat = aFormat;", "-            mCompileFlags |= aCompileFlags;", "+            regexp = Utils.getPattern(format, compileFlagsParam);", "+            this.format = format;", "+            compileFlags |= compileFlagsParam;", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "374cbff56a5bfcdc14174e6c40a2a99d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ClassDefHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ClassDefHandler(IndentationCheck aIndentCheck,                            DetailAST aAst,                            ExpressionHandler aParent)", "signatureAfterChange": "     public ClassDefHandler(IndentationCheck indentCheck,                            DetailAST ast,                            ExpressionHandler parent)", "diff": ["-    public ClassDefHandler(IndentationCheck aIndentCheck,", "-                           DetailAST aAst,", "-                           ExpressionHandler aParent)", "+    public ClassDefHandler(IndentationCheck indentCheck,", "+                           DetailAST ast,", "+                           ExpressionHandler parent)", "-        super(aIndentCheck,", "-              (aAst.getType() == TokenTypes.CLASS_DEF)", "-              ? \"class def\" : ((aAst.getType() == TokenTypes.ENUM_DEF)", "+        super(indentCheck,", "+              (ast.getType() == TokenTypes.CLASS_DEF)", "+              ? \"class def\" : ((ast.getType() == TokenTypes.ENUM_DEF)", "-              aAst, aParent);", "+              ast, parent);"]}]}