{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82585970fd9cc9ab586e0f6d77642c3e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adc874b1ed9bc41874e64e476aa7612d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheckTest.java", "commitBeforeChange": "ee7d6e9df391945a64c23210cd0fdc1a58fb7d95", "commitAfterChange": "ea891b1fd030f0e7442611ed4c3c81893124712b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testWrongSeparatorLength() throws Exception", "signatureAfterChange": "      @Test     public void testWrongSeparatorLength() throws Exception", "diff": ["-                assertEquals(ex.getCause().getMessage(), \"Unable to read 2 bytes, got 0\");", "+                assertEquals(\"Unable to read 2 bytes, got 0\", ex.getCause().getMessage());", "-                assertEquals(ex.getCause().getMessage(), \"Unable to read 1 bytes, got 0\");", "+                assertEquals(\"Unable to read 1 bytes, got 0\", ex.getCause().getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2e9bcc7c0dfbf5a94c267b4b67450dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "1b5c3936f53b0dd9f149faef9ead6fce20a4cb31", "commitAfterChange": "4ea1896f464b0f6c0ddfca3d8d9c9f84703bae5e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private String getConfigHashCode(Serializable configuration)", "signatureAfterChange": "     private String getConfigHashCode(Serializable configuration)", "diff": ["-        catch (final Exception ex) { // IO, NoSuchAlgorithm", "-            LOG.debug(\"Unable to calculate hashcode.\", ex);", "-            return \"ALWAYS FRESH: \" + System.currentTimeMillis();", "+        catch (final IOException | NoSuchAlgorithmException ex) {", "+            // rethrow as unchecked exception", "+            throw new IllegalStateException(\"Unable to calculate hashcode.\", ex);"]}]}