{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "558f755bc58e73fd8e2c2596294b2f0a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15e9dfc8272488f4fdc75919d9cae262", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/api/AutomaticBeanTest.java", "commitBeforeChange": "315033ff5647ef9896130573d9212fee6fe141db", "commitAfterChange": "fbfe160ca83f91f9093e2c8122709f1163324edf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testNoSuchAttribute()", "signatureAfterChange": "      @Test(expected = CheckstyleException.class)     public void testNoSuchAttribute() throws CheckstyleException", "diff": ["-", "-    public void testNoSuchAttribute()", "+    @Test(expected = CheckstyleException.class)", "+    public void testNoSuchAttribute() throws CheckstyleException", "-        try {", "-            mTestBean.configure(mConf);", "-            fail(\"AutomaticBean.configure() accepted nonexisting attribute name\");", "-        }", "-        catch (CheckstyleException ex)", "-        {", "-            // expected exception", "-        }", "-        assertEquals(mTestBean.mName, null);", "-", "+        mTestBean.configure(mConf);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18e4a98cf8049d29bcf5dc419d6ea4dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/UtilsTest.java", "commitBeforeChange": "fbfe160ca83f91f9093e2c8122709f1163324edf", "commitAfterChange": "ee68e92168e132ff16622a2593dcb5128ad024e6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testBadRegex()", "signatureAfterChange": "      @Test(expected = ConversionException.class)     public void testBadRegex()", "diff": ["+    @Test(expected = ConversionException.class)", "-        try {", "-            Utils.createPattern(\"[\");", "-            fail(\"expected to get conversion exception\");", "-        }", "-        catch (ConversionException e) {", "-            ; // what is expected", "-        }", "+        Utils.createPattern(\"[\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98144711ebdd778080c39132eecf5cf3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/imports/AccessResultTest.java", "commitBeforeChange": "fbfe160ca83f91f9093e2c8122709f1163324edf", "commitAfterChange": "ee68e92168e132ff16622a2593dcb5128ad024e6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testBadname()", "signatureAfterChange": "      @Test(expected = IllegalArgumentException.class)     public void testBadname()", "diff": ["+    @Test(expected = IllegalArgumentException.class)", "-        try {", "-            AccessResult.getInstance(\"badname\");", "-            fail(\"should not get here\");", "-        }", "-        catch (IllegalArgumentException ex) {", "-            ;", "-        }", "+        AccessResult.getInstance(\"badname\");"]}]}