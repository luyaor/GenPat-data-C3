{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9cda31726b1f22616142b148c65b3349", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93461d8f5c666c18255abf66d5842f80", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/WriteTagCheckTest.java", "commitBeforeChange": "0db81f33e13f9829ee7de0b261f042017084b78f", "commitAfterChange": "70a6e2e6d34fa5a404e88e45cd62a20a06e19556", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testTagPrintSeverityFalse() throws Exception", "signatureAfterChange": "      @Test     public void testTagIncomplete() throws Exception", "diff": ["+    public void testTagIncomplete() throws Exception {", "+            \"11: \" + getCheckMessage(WRITE_TAG, \"@incomplete\",", "-", "-    @Test", "-    public void testTagPrintSeverityFalse() throws Exception {", "-        checkConfig.addAttribute(\"tag\", \"@incomplete\");", "-        checkConfig.addAttribute(\"tagFormat\", \"\\\\S\");", "-        checkConfig.addAttribute(\"tagSeverity\", \"warning\");", "-        final String[] expected = {", "-            \"11: \" + getCheckMessage(WRITE_TAG, \"@incomplete\", \"This class needs more code...\"),", "-        };", "-        final boolean printSeverity = false;", "-        verify(checkConfig, printSeverity, getPath(\"InputWriteTag.java\"), expected);", "+        verify(checkConfig, getPath(\"InputWriteTag.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd8b0f27ab6d465fb2f8c12a64758645", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "69976b5365b7c33a602dd814337e2db1136288fc", "commitAfterChange": "ac8eadea0b1fb183d56cd809a34a7b9047b47d47", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 47, "signatureBeforeChange": "      @Test     public void testThrowsIndentationLevel() throws Exception", "signatureAfterChange": "      @Test     public void testThrowsIndentationLevel() throws Exception", "diff": ["-        checkConfig.addAttribute(\"throwsIndent\", Integer.valueOf(8).toString());", "+", "+        checkConfig.addAttribute(\"arrayInitIndent\", \"4\");", "+        checkConfig.addAttribute(\"basicOffset\", \"4\");", "+        checkConfig.addAttribute(\"braceAdjustment\", \"0\");", "+        checkConfig.addAttribute(\"caseIndent\", \"4\");", "+        checkConfig.addAttribute(\"forceStrictCondition\", \"false\");", "+        checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\");", "+        checkConfig.addAttribute(\"tabWidth\", \"4\");", "+        checkConfig.addAttribute(\"throwsIndent\", \"8\");", "-        verify(checkConfig, getPath(\"indentation/InvalidInputThrowsIndent.java\"), expected);", "+        verifyWarns(checkConfig, getPath(\"indentation/InvalidInputThrowsIndent.java\"), expected);"]}]}