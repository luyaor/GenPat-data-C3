{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c3670fe6ea44ff71b52c3c7fef870d22", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39c5d088d47d3f4a017b827a1bc842c5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderInfo.java", "commitBeforeChange": "fc8a5ae78cffc8f6d5951a72fc722c52dedc1d04", "commitAfterChange": "bf16d371dab210594755d04afc4697269ed088c0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     protected void postprocessHeaderLines()", "signatureAfterChange": "      @Override     protected void postprocessHeaderLines()", "diff": ["-        final String[] headerLines = getHeaderLines();", "-        if (headerLines != null) {", "-            mHeaderRegexps = new Pattern[headerLines.length];", "-            for (int i = 0; i < headerLines.length; i++) {", "-                try {", "-                    // TODO: Not sure if cache in Utils is still necessary", "-                    mHeaderRegexps[i] = Utils.getPattern(headerLines[i]);", "-                }", "-                catch (final PatternSyntaxException ex) {", "-                    throw new ConversionException(", "-                            \"line \" + (i + 1) + \" in header specification\"", "-                            + \" is not a regular expression\");", "-                }", "+        final List<String> headerLines = getHeaderLines();", "+        mHeaderRegexps.clear();", "+        for (String line : headerLines) {", "+            try {", "+                // TODO: Not sure if cache in Utils is still necessary", "+                mHeaderRegexps.add(Utils.getPattern(line));", "+            }", "+            catch (final PatternSyntaxException ex) {", "+                throw new ConversionException(\"line \"", "+                        + (mHeaderRegexps.size() + 1)", "+                        + \" in header specification\"", "+                        + \" is not a regular expression\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1bf1e14541ae787d559e05fe7b866d9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/DetailASTTest.java", "commitBeforeChange": "1079f0ab995bc25218f9e38af7968552f26a5df5", "commitAfterChange": "f45fee0aa4ba2f6f286c9e0336543c20e311a681", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void checkDir(File dir) throws Exception", "signatureAfterChange": "      private void checkDir(File dir) throws Exception", "diff": ["-        for (int i = 0; i < files.length; i++) {", "-            if (files[i].isFile()) {", "-                checkFile(files[i].getCanonicalPath());", "+        for (File file : files) {", "+            if (file.isFile()) {", "+                checkFile(file.getCanonicalPath());", "-            else if (files[i].isDirectory()) {", "-                checkDir(files[i]);", "+            else if (file.isDirectory()) {", "+                checkDir(file);"]}]}