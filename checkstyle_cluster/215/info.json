{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e26828132f89e5c0119c34f06ff9947e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d3a1ce4e9eb10974185dd0d32bffee8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/DefaultComesLastCheckTest.java", "commitBeforeChange": "c3af3e410f70e2fc25a772161c471dfce2aaebd9", "commitAfterChange": "d7cf4f652e7a3e62abf68edc50eb391e08a20bc2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testDefaultMethodsInJava8()         throws Exception", "signatureAfterChange": "      @Test     public void testDefaultMethodsInJava8()         throws Exception", "diff": ["-                  new File(", "-                        \"src/test/resources-noncompilable/com/puppycrawl/tools/\"", "-                        + \"checkstyle/coding/InputDefaultComesLast2.java\").getCanonicalPath(),", "-                  expected);", "+                getNonCompilablePath(\"InputDefaultComesLast2.java\"),", "+                expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12377db4fb2c1ff022d2a6080c1ccce8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Test     public void testWithTypecast()         throws Exception", "signatureAfterChange": "      @Test     public void testWithTypecast()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest16.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest16.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a3f450c72d6f3b34e75aa39b180a3d1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testWithoutArgsFullLambdaBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithoutArgsFullLambdaBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest3.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest3.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c18a31b6d7026bd1cee342ef586f00a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testWithFewArgWIthTypeOneLine()         throws Exception", "signatureAfterChange": "      @Test     public void testWithFewArgWIthTypeOneLine()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest12.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest12.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e92037f359087a80f7f1e33381663ee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheckTest.java", "commitBeforeChange": "3d81ece0258005a3264d550f8cffeedc27a3765c", "commitAfterChange": "47e6c23b4d9cd01731a90e3caeea33ca53a15516", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testLambda()         throws Exception", "signatureAfterChange": "      @Test     public void testLambda()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/naming/InputFinalLocalVariableNameLambda.java\")", "-                .getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputFinalLocalVariableNameLambda.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21163b7dd2ae50ce10e4c994a87b8976", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testWithOneArgWithoutTypeOneLineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithoutTypeOneLineBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest6.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest6.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21fd28fe29bfaa1cc8d7c39e3289206f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheckTest.java", "commitBeforeChange": "96d3aaea19657ac233d9a57b46a52bc0b35eda95", "commitAfterChange": "5f3eced2d85c10407b5ba1f38c06af05715d9bd7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testStaticVisibilityFromLambdas() throws Exception", "signatureAfterChange": "      @Test     public void testStaticVisibilityFromLambdas() throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/tools/\"", "-            + \"checkstyle/coding/InputHiddenFieldLambdas.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputHiddenFieldLambdas.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c48d8939351fb085626ebf3ba8aa43c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/NewHandlerTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testInvalidLabel() throws Exception", "signatureAfterChange": "      @Test     public void testInvalidLabel() throws Exception", "diff": ["+", "-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/tools/\"", "-                + \"checkstyle/indentation/NewHandlerTestInput.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"NewHandlerTestInput.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e158d8736d96bad99f6d83ef65ce928", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/StaticVariableNameCheckTest.java", "commitBeforeChange": "375dbf134ceaca9cf00fc3c220d8e32dc03ca099", "commitAfterChange": "fa5884271348f0cfaaa1160e18028d37845af4dd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testInterfaceOrAnnotationBlock()         throws Exception", "signatureAfterChange": "      @Test     public void testInterfaceOrAnnotationBlock()         throws Exception", "diff": ["-        verify(checkConfig,", "-                new File(\"src/test/resources/com/puppycrawl/tools/\"", "-                        + \"checkstyle/naming/InputStaticVariableName.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getPath(\"InputStaticVariableName.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "326f4e49390b1dfa73150050e3af2a52", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ReturnCountCheckTest.java", "commitBeforeChange": "c5768cf8b43f0de91988e94e74643f1c2d310702", "commitAfterChange": "d6b61b75ad66e02e8745eaef9adfbda70fdfda68", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testWithReturnOnlyAsTokens() throws Exception", "signatureAfterChange": "      @Test     public void testWithReturnOnlyAsTokens() throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/tools/\"", "-            + \"checkstyle/coding/InputReturnCountLambda.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputReturnCountLambda.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "340e944ae63332553e2d73dc8c737cb4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testLambdaInVariableInitialization()         throws Exception", "signatureAfterChange": "      @Test     public void testLambdaInVariableInitialization()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest1.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest1.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "478d49f581c5929f522adb6b610722ca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ReturnCountCheckTest.java", "commitBeforeChange": "c5768cf8b43f0de91988e94e74643f1c2d310702", "commitAfterChange": "d6b61b75ad66e02e8745eaef9adfbda70fdfda68", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testLambdasOnly() throws Exception", "signatureAfterChange": "      @Test     public void testLambdasOnly() throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/tools/\"", "-            + \"checkstyle/coding/InputReturnCountLambda.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputReturnCountLambda.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a7e456d8c3c3ca5564204b4003d644a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 70, "signatureBeforeChange": "      @Test     public void testLambda2() throws Exception", "signatureAfterChange": "      @Test     public void testLambda2() throws Exception", "diff": ["-        verifyWarns(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/tools/\"", "-                + \"checkstyle/indentation/InputLambda2.java\").getCanonicalPath(), expected, 0);", "+        verifyWarns(checkConfig, getNonCompilablePath(\"InputLambda2.java\"), expected, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b3ce0c3e0acac01582c362a85eb3c48", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ReturnCountCheckTest.java", "commitBeforeChange": "c5768cf8b43f0de91988e94e74643f1c2d310702", "commitAfterChange": "d6b61b75ad66e02e8745eaef9adfbda70fdfda68", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testMethodsOnly() throws Exception", "signatureAfterChange": "      @Test     public void testMethodsOnly() throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/tools/\"", "-            + \"checkstyle/coding/InputReturnCountLambda.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputReturnCountLambda.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5607d03d38f8639cb350e986f82b21ab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java", "commitBeforeChange": "7d5db23ad528c95e0fbdfcd1293424c6240db07b", "commitAfterChange": "051988943b56d781f0263538beeafb38deb696ed", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": "      @Test     public void testDefaultPackage2() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultPackage2() throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/tools/\"", "-                + \"checkstyle/imports/InputDefaultPackage.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputDefaultPackage.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b8c785c1dd96d981a167a9730da8419", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "051988943b56d781f0263538beeafb38deb696ed", "commitAfterChange": "0ac6fe40394082ddecdfb1919754ac81413f8045", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 69, "signatureBeforeChange": "      @Test     public void testLambda1() throws Exception", "signatureAfterChange": "      @Test     public void testLambda1() throws Exception", "diff": ["-        verifyWarns(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/tools/\"", "-                + \"checkstyle/indentation/InputLambda1.java\").getCanonicalPath(), expected, 1);", "+        verifyWarns(checkConfig, getNonCompilablePath(\"InputLambda1.java\"), expected, 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c43614a7808ba764668fa1d9c28ba38", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheckTest.java", "commitBeforeChange": "9c488c1f512ffcc58af433842c992bd3f85b2d63", "commitAfterChange": "f47587c9fb66cf46fbd2eb5691449cda6d551ecb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testPackageAnnotation() throws Exception", "signatureAfterChange": "      @Test     public void testPackageAnnotation() throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/tools/\"", "-            + \"checkstyle/checks/package-info.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"package-info.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79285db20f9d1e462e0a92f9991cd35a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testWithFewArgsWithoutTypeFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithFewArgsWithoutTypeFullBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest9.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest9.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79426a38600fac969bf17d8c8c3de5ab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "      @Test     public void testWIthMultilineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWIthMultilineBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest14.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest14.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aa31251bc229f2053262e4e06b0bbeb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Test     public void testWithFewArgWithTypeFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithFewArgWithTypeFullBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest13.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest13.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "992fc4db3ef3a908710f85f55fed04dc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheckTest.java", "commitBeforeChange": "61f8aaca7bcb8750909bcc95eb5c27c72c7d824d", "commitAfterChange": "bf529ef600fa9ef2034d0412c198b2121f2b94f2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testSingleLineLambda() throws Exception", "signatureAfterChange": "      @Test     public void testSingleLineLambda() throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/blocks/InputSingleLineLambda.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputSingleLineLambda.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6df3dd115f8fee1464d6e2eb06fcf4c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testWithOneArgWithoutTypeFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithoutTypeFullBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest7.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest7.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abecb0ae3a603cece3b25ab9b09cc7ac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Test     public void testCasesFromSpec()         throws Exception", "signatureAfterChange": "      @Test     public void testCasesFromSpec()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest15.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest15.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8c2c51f450aab0ff839ebd54d0a2daf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Test     public void testWithOneArgWithoutParenthesesWithoutTypeFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithoutParenthesesWithoutTypeFullBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest11.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest11.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c41e6ebcde5c5c86e7a40bd17330f2aa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/PackageDeclarationCheckTest.java", "commitBeforeChange": "115a5df29dd256bb946c950b8f80d02a28f57edf", "commitAfterChange": "20d51043cb49e913cae8e72a80434e729419f408", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["+", "-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/tools/\"", "-                + \"checkstyle/coding/InputNoPackage.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputNoPackage.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c45799e5e32a617cf9c2d49488f756be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/GeneratedJava14LexerTest.java", "commitBeforeChange": "2fe5ade8b31c0c7b32fab4e25f1ec73c9ab31b8d", "commitAfterChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "          @Test     public void testSemicolonBetweenImports() throws Exception", "signatureAfterChange": "          @Test     public void testSemicolonBetweenImports() throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/tools/\"", "-                + \"checkstyle/grammars/SemicolonBetweenImports.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"SemicolonBetweenImports.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c74a14ecce5a8e1b4ed4c8466cda445e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testWithFewArgsWithoutTypeOneLineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithFewArgsWithoutTypeOneLineBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest8.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest8.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d80a0f8c71c7ec98b824c6eee7d7b899", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ReturnCountCheckTest.java", "commitBeforeChange": "c5768cf8b43f0de91988e94e74643f1c2d310702", "commitAfterChange": "d6b61b75ad66e02e8745eaef9adfbda70fdfda68", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testMethodsAndLambdas() throws Exception", "signatureAfterChange": "      @Test     public void testMethodsAndLambdas() throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/tools/\"", "-            + \"checkstyle/coding/InputReturnCountLambda.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputReturnCountLambda.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6b48697224744352b28fda5dd4a71b8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/SuperCloneCheckTest.java", "commitBeforeChange": "de60ea7b86b5ea25338dfe8a300db9d179004812", "commitAfterChange": "e24596db9459a3592784a544b213cc7aa919a3f6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testAnotherInputFile() throws Exception", "signatureAfterChange": "      @Test     public void testAnotherInputFile() throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/tools/\"", "-                + \"checkstyle/coding/InputSuperCloneCheck.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputSuperCloneCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e911fbf77119634c5cabd811653a3e4c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "      @Test     public void testInAssignment()         throws Exception", "signatureAfterChange": "      @Test     public void testInAssignment()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest17.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest17.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eee9103aa728c54bfadc35880bd3c0c7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "      @Test     public void testInTernary()         throws Exception", "signatureAfterChange": "      @Test     public void testInTernary()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest18.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest18.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0331756cad4174c60a8a1a3d7b4237e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testWithoutArgsOneLineLambdaBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithoutArgsOneLineLambdaBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest2.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1f7bbdb80aeaf5a780ad9eb64274c9c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheckTest.java", "commitBeforeChange": "8ee05486c1d2664cbf88958c812306cbb0e50845", "commitAfterChange": "4533cef695c0e51bc2a0c1e0e0fdfd477ce4c5ef", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testDefaultMethods()         throws Exception", "signatureAfterChange": "      @Test     public void testDefaultMethods()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/tools\"", "-                  + \"/checkstyle/InputModifier2.java\").getCanonicalPath(), expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputModifier2.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5ae698827c1fcc8a4947443e7bb0427", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testWithOneArgWithOneLineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithOneLineBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest4.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest4.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f879b0c773ff46cf48b836d01a0d0a05", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testWithOneArgWithFullBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithFullBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest5.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest5.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbc8ac0b892551eeb9077645f1eec101", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/java8/LambdaTest.java", "commitBeforeChange": "ab6b9b8330a3e11e778731feb78e4e9067fbb0ab", "commitAfterChange": "66d266384abccc702867da9aa68b8c84f9828d45", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testWithOneArgWithoutParenthesesWithoutTypeOneLineBody()         throws Exception", "signatureAfterChange": "      @Test     public void testWithOneArgWithoutParenthesesWithoutTypeOneLineBody()         throws Exception", "diff": ["-        verify(checkConfig, new File(\"src/test/resources-noncompilable/com/puppycrawl/\"", "-                + \"tools/checkstyle/grammars/java8/InputLambdaTest10.java\").getCanonicalPath(),", "-                expected);", "+        verify(checkConfig, getNonCompilablePath(\"InputLambdaTest10.java\"), expected);"]}]}