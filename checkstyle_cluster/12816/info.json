{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d314926892645fcb46721942f2c940da", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "859816cf855bd100625a3d00fa06884e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)             throws CheckstyleException", "signatureAfterChange": "     private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)             throws CheckstyleException", "diff": ["-                    throw new CheckstyleException(", "-                            \"Property '\" + key + \"' in module \"", "-                             + moduleName", "-                             + \" does not exist, please check the documentation\");", "+                    final String message = String.format(\"Property '%s' in module %s does not \"", "+                            + \"exist, please check the documentation\", key, moduleName);", "+                    throw new CheckstyleException(message);", "-            throw new CheckstyleException(", "-                \"Cannot set property '\" + key + \"' to '\" + value", "-                + \"' in module \"  + moduleName, e);", "+            final String message = String.format(\"Cannot set property '%s' to '%s' in module %s\",", "+                    key, value, moduleName);", "+            throw new CheckstyleException(message, e);", "-            throw new CheckstyleException(", "-                \"illegal value '\" + value + \"' for property '\" + key", "-                + \"' of module \" + moduleName, e);", "+            final String message = String.format(\"illegal value '%s' for property '%s' of \"", "+                    + \"module %s\", value, key, moduleName);", "+            throw new CheckstyleException(message, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4204cd327db2ce5536da2ea69f9a7a5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "fd1225fe8ba5d096fa8405e4f099d92cb2518490", "commitAfterChange": "7521f1897b007e3acc06ea3330df5124f4206589", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private int process(String aFileName)", "signatureAfterChange": "     private int process(String aFileName)", "diff": ["-        if ((mConfig.getBasedir() == null)", "-            || !aFileName.startsWith(mConfig.getBasedir()))", "-        {", "+        final String basedir = mConfig.getBasedir();", "+        if ((basedir == null) || !aFileName.startsWith(basedir)) {", "-            stripped = aFileName.substring(mConfig.getBasedir().length() + 1);", "+            final int skipSep = basedir.endsWith(File.separator) ? 0 : 1;", "+            stripped = aFileName.substring(basedir.length() + skipSep);"]}]}