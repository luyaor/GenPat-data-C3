{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "188855a016c4382fa26cf59bdc193013", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c23a3db4bbdade6061e4830db49e4bd0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/MethodParamPadCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if ((aAST.getType() == TokenTypes.METHOD_CALL)) {", "-            parenAST = aAST;", "+        if ((ast.getType() == TokenTypes.METHOD_CALL)) {", "+            parenAST = ast;", "-            parenAST = aAST.findFirstToken(TokenTypes.LPAREN);", "+            parenAST = ast.findFirstToken(TokenTypes.LPAREN);", "-            if (!mAllowLineBreaks) {", "+            if (!allowLineBreaks) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cce8bc20382377d826c1d3ed2d46bbc9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (aAST.getType() == TokenTypes.TYPECAST) {", "-            targetAST = aAST.findFirstToken(TokenTypes.RPAREN);", "+        if (ast.getType() == TokenTypes.TYPECAST) {", "+            targetAST = ast.findFirstToken(TokenTypes.RPAREN);", "-            targetAST = aAST;", "-            message = new Object[]{aAST.getText()};", "+            targetAST = ast;", "+            message = new Object[]{ast.getText()};"]}]}