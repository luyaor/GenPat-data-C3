{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c74ee42161e15574692d9eb291971c4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03919c84fce8dfc9c6bfceecf8738bee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule333orderingandspacing/CustomImportOrderTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void customImportTest1() throws Exception", "signatureAfterChange": "      @Test     public void customImportTest1() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"CustomImportOrder\");", "-        final String filePath = builder.getFilePath(\"InputCustomImportOrder1\");", "+        final Configuration checkConfig = getCheckConfig(\"CustomImportOrder\");", "+        final String filePath = getPath(\"InputCustomImportOrder1.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07c69c2dd7c9d9bc5b42410e7a634216", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule712paragraphs/JavadocParagraphTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void javadocParagraphCorrectTest() throws Exception", "signatureAfterChange": "      @Test     public void javadocParagraphCorrectTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"JavadocParagraph\");", "-        final String filePath = builder.getFilePath(\"InputCorrectJavadocParagraphCheck\");", "+        final Configuration checkConfig = getCheckConfig(\"JavadocParagraph\");", "+        final String filePath = getPath(\"InputCorrectJavadocParagraphCheck.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "083cc72383977026ec3945239ce7bd34", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreak/SeparatorWrapTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void separatorWrapTest() throws Exception", "signatureAfterChange": "      @Test     public void separatorWrapTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"SeparatorWrap\");", "-        final String filePath = builder.getFilePath(\"InputSeparatorWrap\");", "+        final Configuration checkConfig = getCheckConfig(\"SeparatorWrap\");", "+        final String filePath = getPath(\"InputSeparatorWrap.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0863f7fd142fca02fc3544e39ae8327b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule233nonascii/AvoidEscapedUnicodeCharactersTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void unicodeEscapesTest() throws Exception", "signatureAfterChange": "      @Test     public void unicodeEscapesTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"AvoidEscapedUnicodeCharacters\");", "-        final String filePath = builder.getFilePath(\"InputAvoidEscapedUnicodeCharacters\");", "+        final Configuration checkConfig = getCheckConfig(\"AvoidEscapedUnicodeCharacters\");", "+        final String filePath = getPath(\"InputAvoidEscapedUnicodeCharacters.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f02e8cae1003f41c2f49fbd66fdc2bf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyCatchBlockTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testViolationsByVariableName() throws Exception", "signatureAfterChange": "      @Test     public void testViolationsByVariableName() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"EmptyCatchBlock\");", "-        final String filePath = builder.getFilePath(\"InputEmptyCatchBlockViolationsByVariableName\");", "+        final Configuration checkConfig = getCheckConfig(\"EmptyCatchBlock\");", "+        final String filePath = getPath(\"InputEmptyCatchBlockViolationsByVariableName.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11d64e568ebb01b4e649b45cce885de3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule461verticalwhitespace/EmptyLineSeparatorTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void emptyLineSeparatorTest() throws Exception", "signatureAfterChange": "      @Test     public void emptyLineSeparatorTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"EmptyLineSeparator\");", "-        final String filePath = builder.getFilePath(\"InputEmptyLineSeparator\");", "+        final Configuration checkConfig = getCheckConfig(\"EmptyLineSeparator\");", "+        final String filePath = getPath(\"InputEmptyLineSeparator.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "150b5a610fb897ad8cc3b5682d235384", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter6programpractice/rule64finalizers/NoFinalizerTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void noFinalizerBasicTest() throws Exception", "signatureAfterChange": "      @Test     public void noFinalizerBasicTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"NoFinalizer\");", "-        final String filePath = builder.getFilePath(\"InputNoFinalizer\");", "+        final Configuration checkConfig = getCheckConfig(\"NoFinalizer\");", "+        final String filePath = getPath(\"InputNoFinalizer.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1523ddb490dfa7a45d441b6561ddc461", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule523methodnames/MethodNameTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void methodNameTest() throws Exception", "signatureAfterChange": "      @Test     public void methodNameTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"MethodName\");", "+        final Configuration checkConfig = getCheckConfig(\"MethodName\");", "-        final String filePath = builder.getFilePath(\"InputMethodName\");", "+        final String filePath = getPath(\"InputMethodName.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "188ccad2010c128edf35ba547da38559", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule341onetoplevel/OneTopLevelClassTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void bad2Test() throws Exception", "signatureAfterChange": "      @Test     public void bad2Test() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"OneTopLevelClass\");", "-        final String filePath = builder.getFilePath(\"InputOneTopLevelClassBad2\");", "+        final Configuration checkConfig = getCheckConfig(\"OneTopLevelClass\");", "+        final String filePath = getPath(\"InputOneTopLevelClassBad2.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20fcc0f4ba682c52128091db08f1e295", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4841indentation/IndentationTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void correctIfTest() throws Exception", "signatureAfterChange": "      @Test     public void correctIfTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"Indentation\");", "-        final String filePath = builder.getFilePath(\"InputIndentationCorrectIfAndParameter\");", "+        final Configuration checkConfig = getCheckConfig(\"Indentation\");", "+        final String filePath = getPath(\"InputIndentationCorrectIfAndParameter.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "266e27f6f93070f26a71fc0890b98984", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule21filename/OuterTypeFilenameTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void outerTypeFilenameTest1() throws Exception", "signatureAfterChange": "      @Test     public void outerTypeFilenameTest1() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"OuterTypeFilename\");", "-        final String filePath = builder.getFilePath(\"InputOuterTypeFilename1\");", "+        final Configuration checkConfig = getCheckConfig(\"OuterTypeFilename\");", "+        final String filePath = getPath(\"InputOuterTypeFilename1.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27453bda57bf36f67ba3730af50150b1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule3sourcefile/EmptyLineSeparatorTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void emptyLineSeparatorTest() throws Exception", "signatureAfterChange": "      @Test     public void emptyLineSeparatorTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"EmptyLineSeparator\");", "-        final String filePath = builder.getFilePath(\"InputEmptyLineSeparator\");", "+        final Configuration checkConfig = getCheckConfig(\"EmptyLineSeparator\");", "+        final String filePath = getPath(\"InputEmptyLineSeparator.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29fbe4affd16d0b7d6eba2f969e0b38b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule341onetoplevel/OneTopLevelClassTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void badTest() throws Exception", "signatureAfterChange": "      @Test     public void badTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"OneTopLevelClass\");", "-        final String filePath = builder.getFilePath(\"InputOneTopLevelClassBasic\");", "+        final Configuration checkConfig = getCheckConfig(\"OneTopLevelClass\");", "+        final String filePath = getPath(\"InputOneTopLevelClassBasic.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a83bc3b3c69e215c183ce8ce0c8173e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule522typenames/TypeNameTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void typeNameTest() throws Exception", "signatureAfterChange": "      @Test     public void typeNameTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"TypeName\");", "+        final Configuration checkConfig = getCheckConfig(\"TypeName\");", "-        final String filePath = builder.getFilePath(\"InputTypeName\");", "+        final String filePath = getPath(\"InputTypeName.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31cd5056f66b0b274682e25a5d3bf807", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyCatchBlockTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testNoViolations() throws Exception", "signatureAfterChange": "      @Test     public void testNoViolations() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"EmptyCatchBlock\");", "-        final String filePath = builder.getFilePath(\"InputEmptyCatchBlockNoViolations\");", "+        final Configuration checkConfig = getCheckConfig(\"EmptyCatchBlock\");", "+        final String filePath = getPath(\"InputEmptyCatchBlockNoViolations.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "347614960e2e8ea5655af65ff90da62c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule713atclauses/AtclauseOrderTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIncorrect() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrect() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"AtclauseOrder\");", "-        final String filePath = builder.getFilePath(\"InputIncorrectAtClauseOrderCheck\");", "+        final Configuration checkConfig = getCheckConfig(\"AtclauseOrder\");", "+        final String filePath = getPath(\"InputIncorrectAtClauseOrderCheck.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35966e3700ea30e56648dc5a12e5dd5b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule72thesummaryfragment/SummaryJavadocTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCorrect() throws Exception", "signatureAfterChange": "      @Test     public void testCorrect() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"SummaryJavadocCheck\");", "-        final String filePath = builder.getFilePath(\"InputCorrectSummaryJavaDocCheck\");", "+        final Configuration checkConfig = getCheckConfig(\"SummaryJavadocCheck\");", "+        final String filePath = getPath(\"InputCorrectSummaryJavaDocCheck.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "383b04a8e731bc0bf81aeec48cc43c0f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule332nolinewrap/NoLineWrapTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void goodLineLength() throws Exception", "signatureAfterChange": "      @Test     public void goodLineLength() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"LineLength\");", "-        final String filePath = builder.getFilePath(\"InputLineLength\");", "+        final Configuration checkConfig = getCheckConfig(\"LineLength\");", "+        final String filePath = getPath(\"InputLineLength.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ab27f42e14a0c080f09fcd72add41cd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule488numericliterals/UpperEllTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void upperEllTest() throws Exception", "signatureAfterChange": "      @Test     public void upperEllTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"UpperEll\");", "-        final String filePath = builder.getFilePath(\"InputUpperEll\");", "+        final Configuration checkConfig = getCheckConfig(\"UpperEll\");", "+        final String filePath = getPath(\"InputUpperEll.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45dfff8bddeb75e457bb3bcc093c93e6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4822variabledistance/VariableDeclarationUsageDistanceTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void arrayTypeStyleTest() throws Exception", "signatureAfterChange": "      @Test     public void arrayTypeStyleTest() throws Exception", "diff": ["-            builder.getCheckConfig(\"VariableDeclarationUsageDistance\");", "-        final String filePath = builder.getFilePath(\"InputVariableDeclarationUsageDistanceCheck\");", "+            getCheckConfig(\"VariableDeclarationUsageDistance\");", "+        final String filePath = getPath(\"InputVariableDeclarationUsageDistanceCheck.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48c5bea0af000383b68353fe85fa78a3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4861blockcommentstyle/CommentsIndentationTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testCommentIsInsideEmptyBlock() throws Exception", "signatureAfterChange": "      @Test     public void testCommentIsInsideEmptyBlock() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"CommentsIndentation\");", "+        final Configuration checkConfig = getCheckConfig(\"CommentsIndentation\");", "-            builder.getFilePath(\"InputCommentsIndentationInEmptyBlock\");", "+            getPath(\"InputCommentsIndentationInEmptyBlock.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "493a916b523ccfd7cb65631081dfb136", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule528typevariablenames/MethodTypeParameterNameTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testMethodDefault() throws Exception", "signatureAfterChange": "      @Test     public void testMethodDefault() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"MethodTypeParameterName\");", "+        final Configuration checkConfig = getCheckConfig(\"MethodTypeParameterName\");", "-        final String filePath = builder.getFilePath(\"InputMethodTypeParameterName\");", "+        final String filePath = getPath(\"InputMethodTypeParameterName.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cdbf197838292ab912500df53c081ec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/WhitespaceAroundTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void whitespaceAroundEmptyTypesCyclesTest() throws Exception", "signatureAfterChange": "      @Test     public void whitespaceAroundEmptyTypesCyclesTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"WhitespaceAround\");", "-        final String filePath = builder.getFilePath(\"InputWhitespaceAroundEmptyTypesAndCycles\");", "+        final Configuration checkConfig = getCheckConfig(\"WhitespaceAround\");", "+        final String filePath = getPath(\"InputWhitespaceAroundEmptyTypesAndCycles.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dcd95f51ed4779ddc87218e61ed5c9e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void leftCurlyBracesTest() throws Exception", "signatureAfterChange": "      @Test     public void leftCurlyBracesTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"LeftCurly\");", "-        final String filePath = builder.getFilePath(\"InputLeftCurlyBraces\");", "+        final Configuration checkConfig = getCheckConfig(\"LeftCurly\");", "+        final String filePath = getPath(\"InputLeftCurlyBraces.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54db1b1f56150e631ae6a257c5bc1af7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4861blockcommentstyle/CommentsIndentationTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCommentIsAtTheEndOfBlock() throws Exception", "signatureAfterChange": "      @Test     public void testCommentIsAtTheEndOfBlock() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"CommentsIndentation\");", "+        final Configuration checkConfig = getCheckConfig(\"CommentsIndentation\");", "-            builder.getFilePath(\"InputCommentsIndentationCommentIsAtTheEndOfBlock\");", "+            getPath(\"InputCommentsIndentationCommentIsAtTheEndOfBlock.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55ae2267949340bc98294b78552e9ed4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter6programpractice/rule64finalizers/NoFinalizerTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void noFinalizerExtendedTest() throws Exception", "signatureAfterChange": "      @Test     public void noFinalizerExtendedTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"NoFinalizer\");", "-        final String filePath = builder.getFilePath(\"InputNoFinalizeExtend\");", "+        final Configuration checkConfig = getCheckConfig(\"NoFinalizer\");", "+        final String filePath = getPath(\"InputNoFinalizeExtend.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c292aaf0bd36ebb3884bd8812c90eaa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void leftCurlyAnnotationsTest() throws Exception", "signatureAfterChange": "      @Test     public void leftCurlyAnnotationsTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"LeftCurly\");", "-        final String filePath = builder.getFilePath(\"InputLeftCurlyAnnotations\");", "+        final Configuration checkConfig = getCheckConfig(\"LeftCurly\");", "+        final String filePath = getPath(\"InputLeftCurlyAnnotations.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d0e3ffb72529633998a10d8455f08f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/GenericWhitespaceTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void whitespaceAroundGenericsTest() throws Exception", "signatureAfterChange": "      @Test     public void whitespaceAroundGenericsTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"GenericWhitespace\");", "+        final Configuration checkConfig = getCheckConfig(\"GenericWhitespace\");", "-        final String filePath = builder.getFilePath(\"InputWhitespaceAroundGenerics\");", "+        final String filePath = getPath(\"InputWhitespaceAroundGenerics.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "631b773c2b63be0854cdeb52c2e61ad5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4841indentation/IndentationTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void correctTest() throws Exception", "signatureAfterChange": "      @Test     public void correctTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"Indentation\");", "-        final String filePath = builder.getFilePath(\"InputIndentationCorrect\");", "+        final Configuration checkConfig = getCheckConfig(\"Indentation\");", "+        final String filePath = getPath(\"InputIndentationCorrect.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "635951ad3d6d92e30c0a2e099136b9dc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule487modifiers/ModifierOrderTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void modifierOrderTest() throws Exception", "signatureAfterChange": "      @Test     public void modifierOrderTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"ModifierOrder\");", "-        final String filePath = builder.getFilePath(\"InputModifierOrder\");", "+        final Configuration checkConfig = getCheckConfig(\"ModifierOrder\");", "+        final String filePath = getPath(\"InputModifierOrder.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "640b1522b227c761c7dda36363ed8a06", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule485annotations/AnnotationLocationTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void annotationTest() throws Exception", "signatureAfterChange": "      @Test     public void annotationTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"AnnotationLocation\");", "+        final Configuration checkConfig = getCheckConfig(\"AnnotationLocation\");", "-        final String filePath = builder.getFilePath(\"InputAnnotationLocation\");", "+        final String filePath = getPath(\"InputAnnotationLocation.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6881a47d36cc24990f4cce1501916bb6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule731selfexplanatory/JavadocMethodTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void javadocMethodTest() throws Exception", "signatureAfterChange": "      @Test     public void javadocMethodTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"JavadocMethod\");", "-        final String filePath = builder.getFilePath(\"InputJavadocMethodCheck\");", "+        final Configuration checkConfig = getCheckConfig(\"JavadocMethod\");", "+        final String filePath = getPath(\"InputJavadocMethodCheck.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e8586243afc9b0102f28df476850f2b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule21filename/OuterTypeFilenameTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void outerTypeFilenameTest2() throws Exception", "signatureAfterChange": "      @Test     public void outerTypeFilenameTest2() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"OuterTypeFilename\");", "-        final String filePath = builder.getFilePath(\"InputOuterTypeFilename2\");", "+        final Configuration checkConfig = getCheckConfig(\"OuterTypeFilename\");", "+        final String filePath = getPath(\"InputOuterTypeFilename2.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72866dd9b977d17e8869a0baa3c8e781", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule713atclauses/AtclauseOrderTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testCorrect() throws Exception", "signatureAfterChange": "      @Test     public void testCorrect() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"AtclauseOrder\");", "-        final String filePath = builder.getFilePath(\"InputCorrectAtClauseOrderCheck\");", "+        final Configuration checkConfig = getCheckConfig(\"AtclauseOrder\");", "+        final String filePath = getPath(\"InputCorrectAtClauseOrderCheck.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72e3a096741d20c6549d2c1de69ccb50", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule333orderingandspacing/CustomImportOrderTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void customImportTest2() throws Exception", "signatureAfterChange": "      @Test     public void customImportTest2() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"CustomImportOrder\");", "-        final String filePath = builder.getFilePath(\"InputCustomImportOrder2\");", "+        final Configuration checkConfig = getCheckConfig(\"CustomImportOrder\");", "+        final String filePath = getPath(\"InputCustomImportOrder2.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b6da2e15579b5aaf17b5ecb451bb015", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/WhitespaceAroundTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void whitespaceAroundBasicTest() throws Exception", "signatureAfterChange": "      @Test     public void whitespaceAroundBasicTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"WhitespaceAround\");", "+        final Configuration checkConfig = getCheckConfig(\"WhitespaceAround\");", "-        final String filePath = builder.getFilePath(\"InputWhitespaceAroundBasic\");", "+        final String filePath = getPath(\"InputWhitespaceAroundBasic.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bd7b8bdb735962860afb2d7fa3dc18f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule21filename/OuterTypeFilenameTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void outerTypeFilenameTest3() throws Exception", "signatureAfterChange": "      @Test     public void outerTypeFilenameTest3() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"OuterTypeFilename\");", "-        final String filePath = builder.getFilePath(\"InputOuterTypeFilename3\");", "+        final Configuration checkConfig = getCheckConfig(\"OuterTypeFilename\");", "+        final String filePath = getPath(\"InputOuterTypeFilename3.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c8dec32fefa8bf719ee3288ea86b259", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4861blockcommentstyle/CommentsIndentationTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testCommentIsInsideSwitchBlock() throws Exception", "signatureAfterChange": "      @Test     public void testCommentIsInsideSwitchBlock() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"CommentsIndentation\");", "+        final Configuration checkConfig = getCheckConfig(\"CommentsIndentation\");", "-            builder.getFilePath(\"InputCommentsIndentationInSwitchBlock\");", "+            getPath(\"InputCommentsIndentationInSwitchBlock.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f9730d1b66eae3f2839deeba08fc40a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/GenericWhitespaceTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void genericWhitespaceTest() throws Exception", "signatureAfterChange": "      @Test     public void genericWhitespaceTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"GenericWhitespace\");", "+        final Configuration checkConfig = getCheckConfig(\"GenericWhitespace\");", "-        final String filePath = builder.getFilePath(\"InputGenericWhitespace\");", "+        final String filePath = getPath(\"InputGenericWhitespace.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fb4542236c3928789102023d40da4db", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule411bracesareused/NeedBracesTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void needBracesTest() throws Exception", "signatureAfterChange": "      @Test     public void needBracesTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"NeedBraces\");", "-        final String filePath = builder.getFilePath(\"InputNeedBraces\");", "+        final Configuration checkConfig = getCheckConfig(\"NeedBraces\");", "+        final String filePath = getPath(\"InputNeedBraces.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80bb6e4eab41f6b4a71c3a591a1e0b0a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4861blockcommentstyle/CommentsIndentationTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testSurroundingCode() throws Exception", "signatureAfterChange": "      @Test     public void testSurroundingCode() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"CommentsIndentation\");", "+        final Configuration checkConfig = getCheckConfig(\"CommentsIndentation\");", "-            builder.getFilePath(\"InputCommentsIndentationSurroundingCode\");", "+            getPath(\"InputCommentsIndentationSurroundingCode.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "879e7464a581a636ff97883a1b837380", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4841indentation/IndentationTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void correctReturnTest() throws Exception", "signatureAfterChange": "      @Test     public void correctReturnTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"Indentation\");", "-        final String filePath = builder.getFilePath(\"InputIndentationCorrectReturnAndParameter\");", "+        final Configuration checkConfig = getCheckConfig(\"Indentation\");", "+        final String filePath = getPath(\"InputIndentationCorrectReturnAndParameter.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d127656dafffda9a4b4cbf1ed5ab35b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule332nolinewrap/NoLineWrapTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void badLineWrapTest() throws Exception", "signatureAfterChange": "      @Test     public void badLineWrapTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"NoLineWrap\");", "-        final String filePath = builder.getFilePath(\"InputNoLineWrapBad\");", "+        final Configuration checkConfig = getCheckConfig(\"NoLineWrap\");", "+        final String filePath = getPath(\"InputNoLineWrapBad.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94513c48fadd9753e0d5030ac50c8497", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule32packagestate/LineLengthTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void lineLengthTest() throws Exception", "signatureAfterChange": "      @Test     public void lineLengthTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"LineLength\");", "-        final String filePath = builder.getFilePath(\"InputLineLength\");", "+        final Configuration checkConfig = getCheckConfig(\"LineLength\");", "+        final String filePath = getPath(\"InputLineLength.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94678820eddaef1487c70a94507d9d8a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyBlockTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void emptyBlockTestCatch() throws Exception", "signatureAfterChange": "      @Test     public void emptyBlockTestCatch() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"EmptyBlock\");", "-        final String filePath = builder.getFilePath(\"InputEmptyBlockCatch\");", "+        final Configuration checkConfig = getCheckConfig(\"EmptyBlock\");", "+        final String filePath = getPath(\"InputEmptyBlockCatch.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95f0acc2f16030a0a0fbc2b40267653d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyCatchBlockTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testViolationsByComment() throws Exception", "signatureAfterChange": "      @Test     public void testViolationsByComment() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"EmptyCatchBlock\");", "-        final String filePath = builder.getFilePath(\"InputEmptyCatchBlockViolationsByComment\");", "+        final Configuration checkConfig = getCheckConfig(\"EmptyCatchBlock\");", "+        final String filePath = getPath(\"InputEmptyCatchBlockViolationsByComment.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "970439b1682d6aaf2ad8e1f47d744e36", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule333orderingandspacing/CustomImportOrderTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void validTest() throws Exception", "signatureAfterChange": "      @Test     public void validTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"CustomImportOrder\");", "-        final String filePath = builder.getFilePath(\"InputCustomImportOrderValid\");", "+        final Configuration checkConfig = getCheckConfig(\"CustomImportOrder\");", "+        final String filePath = getPath(\"InputCustomImportOrderValid.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a05dafea12283664631311475ad2c35", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4842fallthrough/FallThroughTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void fallThroughTest() throws Exception", "signatureAfterChange": "      @Test     public void fallThroughTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"FallThrough\");", "-        final String filePath = builder.getFilePath(\"InputFallThrough\");", "+        final Configuration checkConfig = getCheckConfig(\"FallThrough\");", "+        final String filePath = getPath(\"InputFallThrough.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e984b1d3cb7fd388ca6cdd8a8db4680", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4832nocstylearray/ArrayTypeStyleTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void arrayTypeStyleTest() throws Exception", "signatureAfterChange": "      @Test     public void arrayTypeStyleTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"ArrayTypeStyle\");", "-        final String filePath = builder.getFilePath(\"InputArrayTypeStyle\");", "+        final Configuration checkConfig = getCheckConfig(\"ArrayTypeStyle\");", "+        final String filePath = getPath(\"InputArrayTypeStyle.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6123ad202f4ee9dd7850d28b328e30e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule341onetoplevel/OneTopLevelClassTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void goodTest() throws Exception", "signatureAfterChange": "      @Test     public void goodTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"OneTopLevelClass\");", "-        final String filePath = builder.getFilePath(\"InputOneTopLevelClassGood\");", "+        final Configuration checkConfig = getCheckConfig(\"OneTopLevelClass\");", "+        final String filePath = getPath(\"InputOneTopLevelClassGood.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a92afec612c2be8133b9886ee3abf2fd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyCatchBlockTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void emptyBlockTestCatch() throws Exception", "signatureAfterChange": "      @Test     public void emptyBlockTestCatch() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"EmptyCatchBlock\");", "-        final String filePath = builder.getFilePath(\"InputEmptyBlockCatch\");", "+        final Configuration checkConfig = getCheckConfig(\"EmptyCatchBlock\");", "+        final String filePath = getPath(\"InputEmptyBlockCatch.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa02539ee253aec1e5970f3e9a9bb379", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4841indentation/IndentationTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void correctForTest() throws Exception", "signatureAfterChange": "      @Test     public void correctForTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"Indentation\");", "-        final String filePath = builder.getFilePath(\"InputIndentationCorrectForAndParameter\");", "+        final Configuration checkConfig = getCheckConfig(\"Indentation\");", "+        final String filePath = getPath(\"InputIndentationCorrectForAndParameter.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aba78b65f092aef8eccefeab7ee6ce86", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule3421overloadsplit/OverloadMethodsDeclarationOrderTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void overloadMethodsTest() throws Exception", "signatureAfterChange": "      @Test     public void overloadMethodsTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"OverloadMethodsDeclarationOrder\");", "-        final String filePath = builder.getFilePath(\"InputOverloadMethodsDeclarationOrder\");", "+        final Configuration checkConfig = getCheckConfig(\"OverloadMethodsDeclarationOrder\");", "+        final String filePath = getPath(\"InputOverloadMethodsDeclarationOrder.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5543be2cfdf2f90e57d427d26cfeb4a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreak/MethodParamPadTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void operatorWrapTest() throws Exception", "signatureAfterChange": "      @Test     public void operatorWrapTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"MethodParamPad\");", "-        final String filePath = builder.getFilePath(\"InputMethodParamPad\");", "+        final Configuration checkConfig = getCheckConfig(\"MethodParamPad\");", "+        final String filePath = getPath(\"InputMethodParamPad.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5cf87357cc6c0bc8074680158579d74", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4843defaultcasepresent/MissingSwitchDefaultTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void missingSwitchDefaultTest() throws Exception", "signatureAfterChange": "      @Test     public void missingSwitchDefaultTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"MissingSwitchDefault\");", "-        final String filePath = builder.getFilePath(\"InputMissingSwitchDefault\");", "+        final Configuration checkConfig = getCheckConfig(\"MissingSwitchDefault\");", "+        final String filePath = getPath(\"InputMissingSwitchDefault.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b96ef9ef4ad7f566b5c719e0c730960d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule43onestatement/OneStatementPerLineTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void oneStatementTest() throws Exception", "signatureAfterChange": "      @Test     public void oneStatementTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"OneStatementPerLine\");", "-        final String filePath = builder.getFilePath(\"InputOneStatementPerLine\");", "+        final Configuration checkConfig = getCheckConfig(\"OneStatementPerLine\");", "+        final String filePath = getPath(\"InputOneStatementPerLine.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be764d3233c7d5cf7b8feab0200b84f1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void leftCurlyMethodsTest() throws Exception", "signatureAfterChange": "      @Test     public void leftCurlyMethodsTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"LeftCurly\");", "-        final String filePath = builder.getFilePath(\"InputLeftCurlyMethod\");", "+        final Configuration checkConfig = getCheckConfig(\"LeftCurly\");", "+        final String filePath = getPath(\"InputLeftCurlyMethod.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c126e54e0b29f29f2e3c21431b24252c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreak/OperatorWrapTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void operatorWrapTest() throws Exception", "signatureAfterChange": "      @Test     public void operatorWrapTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"OperatorWrap\");", "-        final String filePath = builder.getFilePath(\"InputOperatorWrap\");", "+        final Configuration checkConfig = getCheckConfig(\"OperatorWrap\");", "+        final String filePath = getPath(\"InputOperatorWrap.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9af912472f65e4404db696bfaaa5e56", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4821onevariableperline/MultipleVariableDeclarationsTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void multipleVariableDeclarationsTest() throws Exception", "signatureAfterChange": "      @Test     public void multipleVariableDeclarationsTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"MultipleVariableDeclarations\");", "-        final String filePath = builder.getFilePath(\"InputMultipleVariableDeclarations\");", "+        final Configuration checkConfig = getCheckConfig(\"MultipleVariableDeclarations\");", "+        final String filePath = getPath(\"InputMultipleVariableDeclarations.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd4afd8cdefd77db8900f447f953a0f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4841indentation/IndentationTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void correctFieldTest() throws Exception", "signatureAfterChange": "      @Test     public void correctFieldTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"Indentation\");", "-        final String filePath = builder.getFilePath(\"InputIndentationCorrectFieldAndParameter\");", "+        final Configuration checkConfig = getCheckConfig(\"Indentation\");", "+        final String filePath = getPath(\"InputIndentationCorrectFieldAndParameter.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d553220cca38da451b90ee1fafe7c42c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule333orderingandspacing/CustomImportOrderTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void customImportTest3() throws Exception", "signatureAfterChange": "      @Test     public void customImportTest3() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"CustomImportOrder\");", "-        final String filePath = builder.getFilePath(\"InputCustomImportOrder3\");", "+        final Configuration checkConfig = getCheckConfig(\"CustomImportOrder\");", "+        final String filePath = getPath(\"InputCustomImportOrder3.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dabcf5ab6a8fcded185fa32dd43ac0e4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule232specialescape/IllegalTokenTextTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void illegalTokensTest() throws Exception", "signatureAfterChange": "      @Test     public void illegalTokensTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"IllegalTokenText\");", "-        final String filePath = builder.getFilePath(\"InputIllegalTokenText\");", "+        final Configuration checkConfig = getCheckConfig(\"IllegalTokenText\");", "+        final String filePath = getPath(\"InputIllegalTokenText.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc24e391142236b0e006ceab3b7f4da9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyBlockTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void emptyBlockTest() throws Exception", "signatureAfterChange": "      @Test     public void emptyBlockTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"EmptyBlock\");", "-        final String filePath = builder.getFilePath(\"InputEmptyBlockBasic\");", "+        final Configuration checkConfig = getCheckConfig(\"EmptyBlock\");", "+        final String filePath = getPath(\"InputEmptyBlockBasic.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd19e6ff26660fb331542fad3197b8a0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4841indentation/IndentationTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void correctClassTest() throws Exception", "signatureAfterChange": "      @Test     public void correctClassTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"Indentation\");", "-        final String filePath = builder.getFilePath(\"InputIndentationCorrectClass\");", "+        final Configuration checkConfig = getCheckConfig(\"Indentation\");", "+        final String filePath = getPath(\"InputIndentationCorrectClass.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e09716889c42ac342d627431521aa63c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule711generalform/SingleLineJavadocTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test(expected = Exception.class)     public void customInlineTagTest() throws Exception", "signatureAfterChange": "      @Test(expected = Exception.class)     public void customInlineTagTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"SingleLineJavadocCheck\");", "-        final String filePath = builder.getFilePath(\"InputSingleLineJavadocCheckError\");", "+        final Configuration checkConfig = getCheckConfig(\"SingleLineJavadocCheck\");", "+        final String filePath = getPath(\"InputSingleLineJavadocCheckError.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e654acfd2ee9c9678b1a74aa791f9bbe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule72thesummaryfragment/SummaryJavadocTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIncorrect() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrect() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"SummaryJavadocCheck\");", "-        final String filePath = builder.getFilePath(\"InputIncorrectSummaryJavaDocCheck\");", "+        final Configuration checkConfig = getCheckConfig(\"SummaryJavadocCheck\");", "+        final String filePath = getPath(\"InputIncorrectSummaryJavaDocCheck.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec721812c00c0336144a1016cbc674e2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule331nowildcard/AvoidStarImportTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void starImportTest() throws Exception", "signatureAfterChange": "      @Test     public void starImportTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"AvoidStarImport\");", "-        final String filePath = builder.getFilePath(\"InputAvoidStarImport\");", "+        final Configuration checkConfig = getCheckConfig(\"AvoidStarImport\");", "+        final String filePath = getPath(\"InputAvoidStarImport.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef6484a3c6a5bd7ce9b94e41c1a1394c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter6programpractice/rule62donotignoreexceptions/EmptyBlockTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void emptyBlockTestCatch() throws Exception", "signatureAfterChange": "      @Test     public void emptyBlockTestCatch() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"EmptyBlock\");", "-        final String filePath = builder.getFilePath(\"InputEmptyBlockCatch\");", "+        final Configuration checkConfig = getCheckConfig(\"EmptyBlock\");", "+        final String filePath = getPath(\"InputEmptyBlockCatch.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0f830c752b50ab5ce24489dd2ec7a08", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule44columnlimit/LineLengthTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void lineLengthTest() throws Exception", "signatureAfterChange": "      @Test     public void lineLengthTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"LineLength\");", "-        final String filePath = builder.getFilePath(\"InputLineLength\");", "+        final Configuration checkConfig = getCheckConfig(\"LineLength\");", "+        final String filePath = getPath(\"InputLineLength.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f16351574d8da17f2f4ab3c87a281fd5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule341onetoplevel/OneTopLevelClassTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void bad1Test() throws Exception", "signatureAfterChange": "      @Test     public void bad1Test() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"OneTopLevelClass\");", "-        final String filePath = builder.getFilePath(\"InputOneTopLevelClassBad1\");", "+        final Configuration checkConfig = getCheckConfig(\"OneTopLevelClass\");", "+        final String filePath = getPath(\"InputOneTopLevelClassBad1.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f68e0f4953449d50461ae45e016e519a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule332nolinewrap/NoLineWrapTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void goodLineWrapTest() throws Exception", "signatureAfterChange": "      @Test     public void goodLineWrapTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"NoLineWrap\");", "-        final String filePath = builder.getFilePath(\"InputNoLineWrapGood\");", "+        final Configuration checkConfig = getCheckConfig(\"NoLineWrap\");", "+        final String filePath = getPath(\"InputNoLineWrapGood.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f87f26a575da48faf17ca0e2c0cdff1a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter7javadoc/rule712paragraphs/JavadocParagraphTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void javadocParagraphIncorrectTest() throws Exception", "signatureAfterChange": "      @Test     public void javadocParagraphIncorrectTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"JavadocParagraph\");", "-        final String filePath = builder.getFilePath(\"InputIncorrectJavadocParagraphCheck\");", "+        final Configuration checkConfig = getCheckConfig(\"JavadocParagraph\");", "+        final String filePath = getPath(\"InputIncorrectJavadocParagraphCheck.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc2a1d16b907129b1cee2a4371156591", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4841indentation/IndentationTest.java", "commitBeforeChange": "41044d42b8f21ae00792f101a63101bf87d7fd61", "commitAfterChange": "7a4ec11d123dc0bbf7db943af715d19814d2e332", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void correctWhileTest() throws Exception", "signatureAfterChange": "      @Test     public void correctWhileTest() throws Exception", "diff": ["-        final Configuration checkConfig = builder.getCheckConfig(\"Indentation\");", "-        final String filePath = builder", "-            .getFilePath(\"InputIndentationCorrectWhileDoWhileAndParameter\");", "+        final Configuration checkConfig = getCheckConfig(\"Indentation\");", "+        final String filePath = getPath(\"InputIndentationCorrectWhileDoWhileAndParameter.java\");", "-        final Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = getLinesWithWarn(filePath);"]}]}