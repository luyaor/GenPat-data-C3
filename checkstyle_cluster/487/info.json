{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a6c45878b7f464f370a5931fdb2f816", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccfd9f67f5509aad18be5813513f40c1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java", "commitBeforeChange": "22136c67e9c83494e7aa977ffe7a79beee1b4175", "commitAfterChange": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-            DetailAST modifier = (DetailAST) modifiers.getFirstChild();", "+            DetailAST modifier = modifiers.getFirstChild();", "-                modifier = (DetailAST) modifier.getNextSibling();", "+                modifier = modifier.getNextSibling();", "-                DetailAST modifier = (DetailAST) modifiers.getFirstChild();", "+                DetailAST modifier = modifiers.getFirstChild();", "-                    modifier = (DetailAST) modifier.getNextSibling();", "+                    modifier = modifier.getNextSibling();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7d1b0d457f3120330437d89daa78697", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/EqualsHashCodeCheck.java", "commitBeforeChange": "65d7c52cf5b46d184cdf240a6c890cf0c90ddee6", "commitAfterChange": "acc3f40015ffe1263cfa684ca4b29939249e9aed", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void visitToken(DetailAST aAST)", "signatureAfterChange": "      public void visitToken(DetailAST aAST)", "diff": ["-        AST modifiers = aAST.getFirstChild();", "-        final Set mods = new HashSet();", "-        AST modifier = modifiers.getFirstChild();", "-        while (modifier != null) {", "-            mods.add(modifier.getText());", "-            modifier = modifier.getNextSibling();", "-        }", "+        DetailAST modifiers = (DetailAST) aAST.getFirstChild();", "-                && mods.contains(\"public\")", "+                && modifiers.branchContains(TokenTypes.LITERAL_PUBLIC)", "-//                && modifiers.subTreeContains(TokenTypes.LITERAL_PUBLIC)", "+                && modifiers.branchContains(TokenTypes.LITERAL_PUBLIC)"]}]}