{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "687bdf2595ffc241b0f1e01f45f02e9b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "081017fc2be7020abced1a3e8898918a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/ReturnCountCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testImproperToken() throws Exception", "signatureAfterChange": "      @Test     public void testImproperToken() throws Exception", "diff": ["-        ReturnCountCheck check = new ReturnCountCheck();", "+        final ReturnCountCheck check = new ReturnCountCheck();", "-        DetailAST classDefAst = new DetailAST();", "+        final DetailAST classDefAst = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14e1b69d5cc20aa354e5850434be9cac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/InnerAssignmentCheck.java", "commitBeforeChange": "40496d0f8c01bf1f9718e6925b76f13db5b2ae3d", "commitAfterChange": "675c037c85af8347d5b95b0b45f166b8599a9b27", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private boolean isAssignment(DetailAST aAST)", "signatureAfterChange": "     private boolean isAssignment(DetailAST aAST)", "diff": ["-        int[] tokens = getDefaultTokens();", "+        final int[] tokens = getDefaultTokens();", "-        int astType = aAST.getType();", "+        final int astType = aAST.getType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21f984f51712386fda5b13566f3a0bf1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void test() throws Exception", "signatureAfterChange": "      @Test     public void test() throws Exception", "diff": ["-        DefaultConfiguration checkConfig =", "+        final DefaultConfiguration checkConfig =", "-        String[] expected = {", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25a264313fadb04d7de420a8d058c469", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "65989e76a40bf085059ee2bf9c695c6b45a771fb", "commitAfterChange": "fca8c918043974fcf6cc59e5d4161ada0b7c4c76", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     void setLines(String[] aLines)", "signatureAfterChange": "     void setLines(String[] aLines)", "diff": ["-        // Iterate over the lines looking for long lines and tabs.", "+        // Iterate over the lines looking for:", "+        //    - long lines", "+        //    - tabs", "-            String line = mLines[i];", "-            int realLength = Utils.lengthExpandedTabs(", "+            final String line = mLines[i];", "+            final int realLength = Utils.lengthExpandedTabs(", "-            if ((realLength > mConfig.getMaxLineLength()) &&", "-                !(mConfig.getIgnoreLineLengthRegexp().match(line)) &&", "-                !(mConfig.isIgnoreImportLength() &&", "-                  line.trim().startsWith(\"import\")))", "+            if ((realLength > mConfig.getMaxLineLength())", "+                && !(mConfig.getIgnoreLineLengthRegexp().match(line))", "+                && !(mConfig.isIgnoreImportLength()", "+                     && line.trim().startsWith(\"import\")))", "+            // Check for tabs"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2de7f58dfba27d609c4d92affe94c612", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test(expected = IllegalStateException.class)     public void testLeaveTokenWithWrongTokenType()", "signatureAfterChange": "      @Test(expected = IllegalStateException.class)     public void testLeaveTokenWithWrongTokenType()", "diff": ["-        ExecutableStatementCountCheck checkObj =", "+        final ExecutableStatementCountCheck checkObj =", "-        DetailAST ast = new DetailAST();", "+        final DetailAST ast = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5748bf6d65ebb91c4d376c8b59da4be3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/CrossLanguageRegexpHeaderCheck.java", "commitBeforeChange": "dce9ad9e885de3ebb17cce482a512bdaf64f36ae", "commitAfterChange": "6abdc24080fe87995f39bd54bed99976dace4652", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void process(List<File> aFiles)", "signatureAfterChange": "     public void process(List<File> aFiles)", "diff": ["-        List<File> files = filter(aFiles);", "+        final List<File> files = filter(aFiles);", "-                String[] lines = Utils.getLines(path);", "+                final String[] lines = Utils.getLines(path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5934d5e0d7ecd05dbc7f5d6b37753b68", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/PackageNameCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testGetRequiredTokens()", "signatureAfterChange": "      @Test     public void testGetRequiredTokens()", "diff": ["-        PackageNameCheck checkObj = new PackageNameCheck();", "-        int[] expected = {TokenTypes.PACKAGE_DEF};", "+        final PackageNameCheck checkObj = new PackageNameCheck();", "+        final int[] expected = {TokenTypes.PACKAGE_DEF};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bbe535dd17116f5bfe5ed91b3d05cb2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test(expected = IllegalStateException.class)     public void testVisitTokenWithWrongTokenType()", "signatureAfterChange": "      @Test(expected = IllegalStateException.class)     public void testVisitTokenWithWrongTokenType()", "diff": ["-        ExecutableStatementCountCheck checkObj =", "+        final ExecutableStatementCountCheck checkObj =", "-        DetailAST ast = new DetailAST();", "+        final DetailAST ast = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cce6b80c41a7a15e71b6182187bf18f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void finishTree(DetailAST aRootAST)", "signatureAfterChange": "     public void finishTree(DetailAST aRootAST)", "diff": ["-        Counter counter = (Counter) mCounters.pop();", "+        final Counter counter = (Counter) mCounters.pop();", "-        int count = counter.getCount();", "+        final int count = counter.getCount();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e76aee0baaf6f4226ad071197a83c75", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "ee57742c06fda7207ab8110333d1f8d5b93ae3f0", "commitAfterChange": "5ace399de6c8963584b1fbe08007721433c4bad3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void logIOException(IOException aEx, File aFile)", "signatureAfterChange": "     private void logIOException(IOException aEx, File aFile)", "diff": ["-        LocalizedMessage message =", "+        final LocalizedMessage message =", "-        LocalizedMessage[] messages = new LocalizedMessage[]{message};", "+        final LocalizedMessage[] messages = new LocalizedMessage[]{message};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a21f7e4535990a7932d3b8c42b97cf1f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PropertyCacheFileTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testInCache() throws IOException", "signatureAfterChange": "      @Test     public void testInCache() throws IOException", "diff": ["-        Configuration config = new DefaultConfiguration(\"myName\");", "+        final Configuration config = new DefaultConfiguration(\"myName\");", "-        PropertyCacheFile cache = new PropertyCacheFile(config, filePath);", "+        final PropertyCacheFile cache = new PropertyCacheFile(config, filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a853c0ba0a96a1e0c5fb9445920474e9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/AnnotationUtilityTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testContainsAnnotationFalse2() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testContainsAnnotationFalse2() throws ReflectiveOperationException", "diff": ["-        DetailAST ast = new DetailAST();", "+        final DetailAST ast = new DetailAST();", "-        DetailAST ast2 = new DetailAST();", "+        final DetailAST ast2 = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b18316a065a2cb348b72cab7389739a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule525nonconstantfieldnames/MemberNameTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void simpleTest() throws Exception", "signatureAfterChange": "      @Test     public void simpleTest() throws Exception", "diff": ["-        String filePath = builder.getFilePath(\"MemberNameInput_Simple\");", "+        final String filePath = builder.getFilePath(\"MemberNameInput_Simple\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b891f4307a8bdb0ae1e1d5f73eda0e79", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private void checkSingleLine(int aLineNum, int aColNum,         IndentLevel aIndentLevel, boolean aMustMatch)", "signatureAfterChange": "      private void checkSingleLine(int aLineNum, int aColNum,         IndentLevel aIndentLevel, boolean aMustMatch)", "diff": ["-        String line = mIndentCheck.getLines()[aLineNum - 1];", "-        int start = getLineStart(line);", "+        final String line = mIndentCheck.getLines()[aLineNum - 1];", "+        final int start = getLineStart(line);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1c21f5220e9937b7253bf745c8dd95a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/ParseTreeModel.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      void setParseTree(DetailAST parseTree)", "signatureAfterChange": "      void setParseTree(DetailAST parseTree)", "diff": ["-        DetailAST root = (DetailAST) getRoot();", "+        final DetailAST root = (DetailAST) getRoot();", "-        Object[] path = {root};", "+        final Object[] path = {root};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3b4fcd6c1b1432e823e3da3995ccac6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtilsTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testIsOuterMostTypeInterface() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testIsOuterMostTypeInterface() throws ReflectiveOperationException", "diff": ["-        DetailAST ast = new DetailAST();", "+        final DetailAST ast = new DetailAST();", "-        DetailAST ast2 = new DetailAST();", "+        final DetailAST ast2 = new DetailAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f067cbbc61f24083a5a550621128b806", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/utils/ScopeUtilsTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testInEnumBlockInClass() throws ReflectiveOperationException", "signatureAfterChange": "      @Test     public void testInEnumBlockInClass() throws ReflectiveOperationException", "diff": ["-        DetailAST ast = new DetailAST();", "+        final DetailAST ast = new DetailAST();", "-        DetailAST ast2 = new DetailAST();", "+        final DetailAST ast2 = new DetailAST();"]}]}