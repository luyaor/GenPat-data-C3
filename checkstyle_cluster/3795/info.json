{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7eceefb8d959d889fba1cea6c5e8eb22", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "235868ca5310ac2a0b5deec2e18e4b30", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private DetailAST getFirstNodeInsideForWhileDoWhileBlocks(             DetailAST aBlock, DetailAST aVariable)", "signatureAfterChange": "     private DetailAST getFirstNodeInsideForWhileDoWhileBlocks(             DetailAST block, DetailAST variable)", "diff": ["-            DetailAST aBlock, DetailAST aVariable)", "+            DetailAST block, DetailAST variable)", "-        if (!isVariableInOperatorExpr(aBlock, aVariable)) {", "+        if (!isVariableInOperatorExpr(block, variable)) {", "-            if (aBlock.getType() == TokenTypes.LITERAL_DO) {", "-                currentNode = aBlock.getFirstChild();", "+            if (block.getType() == TokenTypes.LITERAL_DO) {", "+                currentNode = block.getFirstChild();", "-                currentNode = aBlock.findFirstToken(TokenTypes.RPAREN);", "+                currentNode = block.findFirstToken(TokenTypes.RPAREN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37d1cceb93398f99dd8a378ddfb02f94", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private DetailAST getFirstNodeInsideSwitchBlock(             DetailAST aBlock, DetailAST aVariable)", "signatureAfterChange": "     private DetailAST getFirstNodeInsideSwitchBlock(             DetailAST block, DetailAST variable)", "diff": ["-            DetailAST aBlock, DetailAST aVariable)", "+            DetailAST block, DetailAST variable)", "-        if (!isVariableInOperatorExpr(aBlock, aVariable)) {", "-            DetailAST currentNode = aBlock", "+        if (!isVariableInOperatorExpr(block, variable)) {", "+            DetailAST currentNode = block", "-                if (isChild(lastNodeInCaseGroup, aVariable)) {", "+                if (isChild(lastNodeInCaseGroup, variable)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c8f3b55cfbe4b059de84d0645ba8ff0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private DetailAST getFirstNodeInsideIfBlock(             DetailAST aBlock, DetailAST aVariable)", "signatureAfterChange": "     private DetailAST getFirstNodeInsideIfBlock(             DetailAST block, DetailAST variable)", "diff": ["-            DetailAST aBlock, DetailAST aVariable)", "+            DetailAST block, DetailAST variable)", "-        if (!isVariableInOperatorExpr(aBlock, aVariable)) {", "-            DetailAST currentNode = aBlock.getLastChild();", "+        if (!isVariableInOperatorExpr(block, variable)) {", "+            DetailAST currentNode = block.getLastChild();", "-                if (isChild(previousNode, aVariable)) {", "+                if (isChild(previousNode, variable)) {", "-                else if (isChild(currentNode, aVariable)) {", "+                else if (isChild(currentNode, variable)) {", "-                    && isChild(currentNode, aVariable))", "+                    && isChild(currentNode, variable))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "854483f32f232b181e518502c7169277", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private Entry<DetailAST, Integer> calculateDistanceInSingleScope(             DetailAST aSemicolonAst, DetailAST aVariableIdentAst)", "signatureAfterChange": "     private Entry<DetailAST, Integer> calculateDistanceInSingleScope(             DetailAST semicolonAst, DetailAST variableIdentAst)", "diff": ["-            DetailAST aSemicolonAst, DetailAST aVariableIdentAst)", "+            DetailAST semicolonAst, DetailAST variableIdentAst)", "-        DetailAST currentAst = aSemicolonAst;", "+        DetailAST currentAst = semicolonAst;", "-                if (isChild(currentAst, aVariableIdentAst)) {", "+                if (isChild(currentAst, variableIdentAst)) {", "-                        if (isVariableInOperatorExpr(currentAst, aVariableIdentAst)) {", "+                        if (isVariableInOperatorExpr(currentAst, variableIdentAst)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0aebe8f4f0f422ca0c425972e5c9c1c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private static DetailAST getFirstNodeInsideTryCatchFinallyBlocks(             DetailAST aBlock, DetailAST aVariable)", "signatureAfterChange": "     private static DetailAST getFirstNodeInsideTryCatchFinallyBlocks(             DetailAST block, DetailAST variable)", "diff": ["-            DetailAST aBlock, DetailAST aVariable)", "+            DetailAST block, DetailAST variable)", "-        DetailAST currentNode = aBlock.getFirstChild();", "+        DetailAST currentNode = block.getFirstChild();", "-        if (isChild(currentNode, aVariable)) {", "+        if (isChild(currentNode, variable)) {", "-            if (isChild(catchBlock, aVariable)) {", "+            if (isChild(catchBlock, variable)) {", "-            if (isChild(finalBlock, aVariable)) {", "+            if (isChild(finalBlock, variable)) {"]}]}