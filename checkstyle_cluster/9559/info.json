{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab0e6df44eb35149094fb1c56808808c", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38a688de86f3f384bb869a0e0e1c4cf5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/JavadocMethodCheck.java", "commitBeforeChange": "7ea49bf36de71545aadc2bcd19a551ee6ae598b3", "commitAfterChange": "65440ae208e3b2f2a88f76ff41977ae9b70bfab4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private List getMethodTags(String[] aLines, int aLastLineNo)", "signatureAfterChange": "     private List getMethodTags(String[] aLines, int aLastLineNo)", "diff": ["-            else if (MATCH_JAVADOC_MULTILINE_START.match(aLines[i])) {", "-                final String p1 = MATCH_JAVADOC_MULTILINE_START.getParen(1);", "-                final String p2 = MATCH_JAVADOC_MULTILINE_START.getParen(2);", "+            else if (MATCH_JAVADOC_ARG_MULTILINE_START.match(aLines[i])) {", "+                final String p1 = MATCH_JAVADOC_ARG_MULTILINE_START.getParen(1);", "+                final String p2 = MATCH_JAVADOC_ARG_MULTILINE_START.getParen(2);", "+            else if (MATCH_JAVADOC_NOARG_MULTILINE_START.match(aLines[i])) {", "+                final String p1 = MATCH_JAVADOC_NOARG_MULTILINE_START.getParen(1);", "+", "+                // Look for the rest of the comment if all we saw was", "+                // the tag and the name. Stop when we see '*/' (end of", "+                // Javadoc, '@' (start of next tag), or anything that's", "+                // not whitespace or '*' characters.", "+                int remIndex = i + 1;", "+                while (remIndex < aLines.length) {", "+                    if (MATCH_JAVADOC_MULTILINE_CONT.match(aLines[remIndex])) {", "+                        remIndex = aLines.length;", "+                        String lFin = MATCH_JAVADOC_MULTILINE_CONT.getParen(1);", "+                        if (!lFin.equals(NEXT_TAG)", "+                            && !lFin.equals(END_JAVADOC))", "+                        {", "+                            tags.add(new JavadocTag(currentLine, p1));", "+                        }", "+                    }", "+                    remIndex++;", "+                }", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baf1be3f48ef75e42a80a7c99701bd03", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "d4f1261a61913b28d746aeb929bd23f372372a4c", "commitAfterChange": "fdd9ae82975be0bf0d8df991a50bad10b660aa2c", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     private List getMethodTags(String[] aLines, int aLastLineNo)", "signatureAfterChange": "     private List getMethodTags(String[] aLines, int aLastLineNo)", "diff": ["+            else if (MATCH_JAVADOC_MULTILINE_START.match(aLines[i])) {", "+                final String p1 = MATCH_JAVADOC_MULTILINE_START.getParen(1);", "+                final String p2 = MATCH_JAVADOC_MULTILINE_START.getParen(2);", "+", "+                // Look for the rest of the comment if all we saw was", "+                // the tag and the name. Stop when we see '*/' (end of", "+                // Javadoc, '@' (start of next tag), or anything that's", "+                // not whitespace or '*' characters.", "+                int remIndex = i + 1;", "+                while (remIndex < aLines.length) {", "+                    if (MATCH_JAVADOC_MULTILINE_CONT.match(aLines[remIndex])) {", "+                        remIndex = aLines.length;", "+                        String lFin = MATCH_JAVADOC_MULTILINE_CONT.getParen(1);", "+                        if (!lFin.equals(NEXT_TAG) && !lFin.equals(END_JAVADOC))", "+                        {", "+                            tags.add(new JavadocTag(currentLine, p1, p2));", "+                        }", "+                    }", "+                    remIndex++;", "+                }", "+            }"]}]}