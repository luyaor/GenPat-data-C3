{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d82b9751e62a4663ee6f1d0f18220482", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ef8eaa0290e0b98c7742f7f1c8fdff4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "e389849df6d5ee4ba99aba175fbb0f4d6ade40ee", "commitAfterChange": "7823165cce4d7978fe928d8ada0a4861c950ff0f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private boolean isSingleTag(HtmlTag aTag)", "signatureAfterChange": "     private boolean isSingleTag(HtmlTag aTag)", "diff": ["-        boolean isSingleTag = false;", "-        for (String element : SINGLE_TAG) {", "-            // If its a singleton tag (<p>, <br>, etc.), ignore it", "-            // Can't simply not put them on the stack, since singletons", "-            // like <dt> and <dd> (unhappily) may either be terminated", "-            // or not terminated. Both options are legal.", "-            if (aTag.getId().equalsIgnoreCase(element)) {", "-                isSingleTag = true;", "-            }", "-        }", "-        return isSingleTag;", "+        // If its a singleton tag (<p>, <br>, etc.), ignore it", "+        // Can't simply not put them on the stack, since singletons", "+        // like <dt> and <dd> (unhappily) may either be terminated", "+        // or not terminated. Both options are legal.", "+        return SINGLE_TAGS.contains(aTag.getId().toLowerCase());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fefd7a4f2e00b45c8c16da7696aab33", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "contrib/examples/filters/com/mycompany/filters/FilesFilter.java", "commitBeforeChange": "524dd37a5bbc4598afc30b9d4bc8f3505ed5f714", "commitAfterChange": "7c22cbca328161b61049c4a3240613959341fb9a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public int decide(Object aObject)", "signatureAfterChange": "          public boolean accept(Object aObject)", "diff": ["-    public int decide(Object aObject)", "+    public boolean accept(Object aObject)", "-        if (!(aObject instanceof AuditEvent)) {", "-            return Filter.NEUTRAL;", "-        }", "-        ", "-        if ((fileName != null) && mFileRegexp.match(fileName)) {", "-            return Filter.DENY;        ", "-        }", "-        else {", "-            return Filter.NEUTRAL;", "-        }", "+        return ((fileName == null) || !mFileRegexp.match(fileName));"]}]}