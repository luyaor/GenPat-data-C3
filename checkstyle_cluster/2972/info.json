{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec27bc4e4a9747681ce0686d4c86fbd6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45db29d20f9d62fb12bb8c16fe9d5282", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "3eca04c940bcdf575c2f9009202a4145e9a82c15", "commitAfterChange": "57f395fa2b2dcea7dd369ab3dd52d3d42f0e0893", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(final DetailAST methodCall)", "signatureAfterChange": "      @Override     public void visitToken(final DetailAST methodCall)", "diff": ["-", "-        //checks for calling equals on String literal and", "-        //anon object which cannot be null", "-        //Also, checks if calling using strange inner class", "-        //syntax outter.inner.equals(otherObj) by looking", "-        //for the dot operator which cannot be improved", "-        if (objCalledOn.getType() == TokenTypes.STRING_LITERAL", "-                || objCalledOn.getType() == TokenTypes.LITERAL_NEW", "-                || objCalledOn.getType() == TokenTypes.DOT) {", "+        if (isStringLiteral(objCalledOn)) {", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa74d3441c9ef58fb6da49c70de2e87a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java", "commitBeforeChange": "6f937bff1da1183d58b20f48e3cc401dc9eb06f4", "commitAfterChange": "0024de5711531372850e883c970414563ab8e3ad", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private static boolean isStringLiteral(DetailAST objCalledOn)", "signatureAfterChange": "     private static boolean isStringLiteral(DetailAST objCalledOn)", "diff": ["+     */", "+    private static boolean isStringLiteral(DetailAST objCalledOn) {", "+        return objCalledOn.getType() == TokenTypes.STRING_LITERAL", "+                || objCalledOn.getType() == TokenTypes.LITERAL_NEW;", "-     */", "-    private static boolean isStringLiteral(DetailAST objCalledOn) {", "-        return objCalledOn.getType() == TokenTypes.STRING_LITERAL", "-                || objCalledOn.getType() == TokenTypes.LITERAL_NEW", "-                || objCalledOn.getType() == TokenTypes.DOT;", "-    }"]}]}