{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a163777e6a74a2014882c5d2f49087f8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29b6e8c4cac78d18174cbcb70092a103", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "c59a39378f51ec63c3dc9421446ddd7904c4cfce", "commitAfterChange": "02da493e64154d6bbac09a64d67a025f0e72cad1", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void realExecute()", "signatureAfterChange": "     private void realExecute()", "diff": ["-            if (!ok && (mFailureProperty != null)) {", "-                getProject().setProperty(mFailureProperty, \"true\");", "-            }", "+            if (!ok) {", "+                final String failureMsg =", "+                        \"Got \" + numErrs + \" errors and \" + numWarnings", "+                                + \" warnings.\";", "+                if (mFailureProperty != null) {", "+                    getProject().setProperty(mFailureProperty, failureMsg);", "+                }", "-            if (!ok && mFailOnViolation) {", "-                throw new BuildException(\"Got \" + numErrs + \" errors and \"", "-                        + numWarnings + \" warnings.\", getLocation());", "+                if (mFailOnViolation) {", "+                    throw new BuildException(failureMsg, getLocation());", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5c15278960043fd1b6b0b0efe3ae185", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "9f93c2258ef0512b743f5927be201ff55a9d5c57", "commitAfterChange": "23c8774d2e2fd245de1e5df02758fd23702c565e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private Class<?> resolveInnerClass(String name, String currentClass)             throws ClassNotFoundException", "signatureAfterChange": "     private Class<?> resolveInnerClass(String name, String currentClass)             throws ClassNotFoundException", "diff": ["-            final String innerClass = (pkg.isEmpty() ? \"\" : pkg + \".\")", "-                + currentClass + \"$\" + name;", "+            String innerClass = currentClass + \"$\" + name;", "+", "+            if (!pkg.isEmpty()) {", "+                innerClass = pkg + \".\" + innerClass;", "+            }", "+"]}]}