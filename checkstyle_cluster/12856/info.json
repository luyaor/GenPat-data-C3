{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4991cdd1627eee9df2265dd390e9005f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7151c9cdad4ce73c19dc3c50f35cf6c2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void extendIllegalClassNamesWithShortName(String aCanonicalName)", "signatureAfterChange": "     private void extendIllegalClassNamesWithShortName(String canonicalName)", "diff": ["-    private void extendIllegalClassNamesWithShortName(String aCanonicalName)", "+    private void extendIllegalClassNamesWithShortName(String canonicalName)", "-        if (mIllegalClassNames.contains(aCanonicalName)) {", "-            final String shortName = aCanonicalName.", "-                substring(aCanonicalName.lastIndexOf(\".\") + 1);", "-            mIllegalClassNames.add(shortName);", "+        if (illegalClassNames.contains(canonicalName)) {", "+            final String shortName = canonicalName.", "+                substring(canonicalName.lastIndexOf(\".\") + 1);", "+            illegalClassNames.add(shortName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd1743def78a4bbda0f9db785c0f8710", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "244eb9d0a9768cfba0b3b0561657ff3f56517c5d", "commitAfterChange": "5f68bb50fd191fec409f5edb90755a18fce3e0ac", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST rootAst)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST rootAst)", "diff": ["-        final List<String> shortNames = getClassShortNames(immutableClassCanonicalNames);", "-        immutableClassShortNames.addAll(shortNames);", "+        final List<String> classShortNames =", "+                getClassShortNames(immutableClassCanonicalNames);", "+        immutableClassShortNames.addAll(classShortNames);", "+", "+        ignoreAnnotationShortNames.clear();", "+        final List<String> annotationShortNames =", "+                getClassShortNames(ignoreAnnotationCanonicalNames);", "+        ignoreAnnotationShortNames.addAll(annotationShortNames);"]}]}