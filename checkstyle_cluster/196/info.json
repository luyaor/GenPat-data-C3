{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a31b7c40c0b635ee09ad0db4863465e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dcdde4ae455d3bb9ae6b368f3ccede4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/IntMatchFilter.java", "commitBeforeChange": "a9bfdceec2a2d86a622c03fbd4052f007b5e70cc", "commitAfterChange": "1e7d8eef0641edcf97316618c8fab40bd248133d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int decide(Object aObject)", "signatureAfterChange": "     public boolean accept(Object aObject)", "diff": ["-    public int decide(Object aObject)", "+    public boolean accept(Object aObject)", "-        if ((mMatchValue.equals(aObject))) {", "-            return Filter.ACCEPT;", "-        }", "-        else {", "-            return Filter.NEUTRAL;", "-        }", "+        return mMatchValue.equals(aObject);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "438e1cfd8d55bdec3f4d51c0e9044594", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/IntRangeFilter.java", "commitBeforeChange": "a9bfdceec2a2d86a622c03fbd4052f007b5e70cc", "commitAfterChange": "1e7d8eef0641edcf97316618c8fab40bd248133d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int decide(Object aObject)", "signatureAfterChange": "     public boolean accept(Object aObject)", "diff": ["-    /** @see com.puppycrawl.tools.checkstyle.api.Filter#decide */", "-    public int decide(Object aObject)", "+    /** @see com.puppycrawl.tools.checkstyle.api.Filter */", "+    public boolean accept(Object aObject)", "-        if ((mLowerBound.compareTo(aObject) <= 0)", "-            && (mUpperBound.compareTo(aObject) >= 0))", "-        {", "-            return Filter.ACCEPT;", "+        if (!(aObject instanceof Integer)) {", "+            return false;", "-        else {", "-            return Filter.NEUTRAL;", "-        }", "+        return ((mLowerBound.compareTo(aObject) <= 0)", "+            && (mUpperBound.compareTo(aObject) >= 0));"]}]}