{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62a1729501aeb7df6a616b731e993ad9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2075293c452db3eeb9647f6bd866193d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "4ebf621616e3c9ea2284e7109d19abbbe1a94efc", "commitAfterChange": "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     private void checkThrowsTags(List aTags, List aThrows,         boolean aReportExpectedTags)", "signatureAfterChange": "     private void checkThrowsTags(List<JavadocTag> aTags,             List<ExceptionInfo> aThrows, boolean aReportExpectedTags)", "diff": ["-    private void checkThrowsTags(List aTags, List aThrows,", "-        boolean aReportExpectedTags)", "+    private void checkThrowsTags(List<JavadocTag> aTags,", "+            List<ExceptionInfo> aThrows, boolean aReportExpectedTags)", "-        final Set foundThrows = new HashSet(); //used for performance only", "-        final ListIterator tagIt = aTags.listIterator();", "+        // The foundThrows used for performance only", "+        final Set<String> foundThrows = new HashSet<String>();", "+        final ListIterator<JavadocTag> tagIt = aTags.listIterator();", "-            final JavadocTag tag = (JavadocTag) tagIt.next();", "+            final JavadocTag tag = tagIt.next();", "-            final ListIterator throwIt = aThrows.listIterator();", "+            final ListIterator<ExceptionInfo> throwIt = aThrows.listIterator();", "-                final ExceptionInfo ei = (ExceptionInfo) throwIt.next();", "+                final ExceptionInfo ei = throwIt.next();", "-            final ListIterator throwIt = aThrows.listIterator();", "+            final ListIterator<ExceptionInfo> throwIt = aThrows.listIterator();", "-                final ExceptionInfo ei = (ExceptionInfo) throwIt.next();", "+                final ExceptionInfo ei = throwIt.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3efd150fff6bf4a8bb6abd71a20a2c5e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TodoCommentCheck.java", "commitBeforeChange": "7c20c36cea276a2b9abb09e8b19eb5825e6a921a", "commitAfterChange": "262209477f39964a63103613f3e2c985da083371", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void checkBadComments(FileContents aContents)", "signatureAfterChange": "     private void checkBadComments(FileContents aContents)", "diff": ["-        final Map allComments = aContents.getCComments();", "-        final Iterator allIter = allComments.keySet().iterator();", "+        final Map<Integer, List<TextBlock>> allComments = aContents", "+                .getCComments();", "+        final Iterator<Integer> allIter = allComments.keySet().iterator();", "-            final Integer key = (Integer) allIter.next();", "-            final List lineComments = (List) allComments.get(key);", "-            final Iterator lineIter = lineComments.iterator();", "+            final Integer key = allIter.next();", "+            final List<TextBlock> lineComments = allComments.get(key);", "+            final Iterator<TextBlock> lineIter = lineComments.iterator();", "-                final String[] cmt = ((TextBlock) lineIter.next()).getText();", "+                final String[] cmt = (lineIter.next()).getText();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d83f6e6b2075eaf2ed791c5ae7571e7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "08638b5f739d9929698860048c052da2d5f80209", "commitAfterChange": "f1afaf83f39b83cc3bd07a2388448b262652a76b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     static String replaceProperties(             String aValue, PropertyResolver aProps, String aDefaultValue)         throws CheckstyleException", "signatureAfterChange": "     static String replaceProperties(             String aValue, PropertyResolver aProps, String aDefaultValue)         throws CheckstyleException", "diff": ["-        final List fragments = new ArrayList();", "-        final List propertyRefs = new ArrayList();", "+        final List<String> fragments = new ArrayList<String>();", "+        final List<String> propertyRefs = new ArrayList<String>();", "-        final Iterator i = fragments.iterator();", "-        final Iterator j = propertyRefs.iterator();", "+        final Iterator<String> i = fragments.iterator();", "+        final Iterator<String> j = propertyRefs.iterator();", "-            String fragment = (String) i.next();", "+            String fragment = i.next();", "-                final String propertyName = (String) j.next();", "+                final String propertyName = j.next();"]}]}